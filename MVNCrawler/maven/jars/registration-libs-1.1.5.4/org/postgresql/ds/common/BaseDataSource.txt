Compiled from "BaseDataSource.java"
public abstract class org.postgresql.ds.common.BaseDataSource implements javax.sql.CommonDataSource,javax.naming.Referenceable {
  private static final java.util.logging.Logger LOGGER;

  private java.lang.String serverName;

  private java.lang.String databaseName;

  private java.lang.String user;

  private java.lang.String password;

  private int portNumber;

  private java.util.Properties properties;

  public org.postgresql.ds.common.BaseDataSource();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #28                 // String localhost
       7: putfield      #30                 // Field serverName:Ljava/lang/String;
      10: aload_0
      11: ldc           #32                 // String
      13: putfield      #34                 // Field databaseName:Ljava/lang/String;
      16: aload_0
      17: iconst_0
      18: putfield      #36                 // Field portNumber:I
      21: aload_0
      22: new           #38                 // class java/util/Properties
      25: dup
      26: invokespecial #39                 // Method java/util/Properties."<init>":()V
      29: putfield      #41                 // Field properties:Ljava/util/Properties;
      32: return

  public java.sql.Connection getConnection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #49                 // Field user:Ljava/lang/String;
       5: aload_0
       6: getfield      #51                 // Field password:Ljava/lang/String;
       9: invokevirtual #54                 // Method getConnection:(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;
      12: areturn

  public java.sql.Connection getConnection(java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method getUrl:()Ljava/lang/String;
       4: aload_1
       5: aload_2
       6: invokestatic  #63                 // Method java/sql/DriverManager.getConnection:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;
       9: astore_3
      10: getstatic     #65                 // Field LOGGER:Ljava/util/logging/Logger;
      13: getstatic     #71                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      16: invokevirtual #77                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      19: ifeq          55
      22: getstatic     #65                 // Field LOGGER:Ljava/util/logging/Logger;
      25: getstatic     #71                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      28: ldc           #79                 // String Created a {0} for {1} at {2}
      30: iconst_3
      31: anewarray     #4                  // class java/lang/Object
      34: dup
      35: iconst_0
      36: aload_0
      37: invokevirtual #82                 // Method getDescription:()Ljava/lang/String;
      40: aastore
      41: dup
      42: iconst_1
      43: aload_1
      44: aastore
      45: dup
      46: iconst_2
      47: aload_0
      48: invokevirtual #58                 // Method getUrl:()Ljava/lang/String;
      51: aastore
      52: invokevirtual #86                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V
      55: aload_3
      56: areturn
      57: astore_3
      58: getstatic     #65                 // Field LOGGER:Ljava/util/logging/Logger;
      61: getstatic     #93                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      64: ldc           #95                 // String Failed to create a {0} for {1} at {2}: {3}
      66: iconst_4
      67: anewarray     #4                  // class java/lang/Object
      70: dup
      71: iconst_0
      72: aload_0
      73: invokevirtual #82                 // Method getDescription:()Ljava/lang/String;
      76: aastore
      77: dup
      78: iconst_1
      79: aload_1
      80: aastore
      81: dup
      82: iconst_2
      83: aload_0
      84: invokevirtual #58                 // Method getUrl:()Ljava/lang/String;
      87: aastore
      88: dup
      89: iconst_3
      90: aload_3
      91: aastore
      92: invokevirtual #86                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V
      95: aload_3
      96: athrow
    Exception table:
       from    to  target type
           0    56    57   Class java/sql/SQLException

  public java.io.PrintWriter getLogWriter();
    Code:
       0: aconst_null
       1: areturn

  public void setLogWriter(java.io.PrintWriter);
    Code:
       0: return

  public java.lang.String getServerName();
    Code:
       0: aload_0
       1: getfield      #30                 // Field serverName:Ljava/lang/String;
       4: areturn

  public void setServerName(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_1
       5: ldc           #32                 // String
       7: invokevirtual #112                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ifeq          22
      13: aload_0
      14: ldc           #28                 // String localhost
      16: putfield      #30                 // Field serverName:Ljava/lang/String;
      19: goto          27
      22: aload_0
      23: aload_1
      24: putfield      #30                 // Field serverName:Ljava/lang/String;
      27: return

  public java.lang.String getDatabaseName();
    Code:
       0: aload_0
       1: getfield      #34                 // Field databaseName:Ljava/lang/String;
       4: areturn

  public void setDatabaseName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field databaseName:Ljava/lang/String;
       5: return

  public abstract java.lang.String getDescription();

  public java.lang.String getUser();
    Code:
       0: aload_0
       1: getfield      #49                 // Field user:Ljava/lang/String;
       4: areturn

  public void setUser(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field user:Ljava/lang/String;
       5: return

  public java.lang.String getPassword();
    Code:
       0: aload_0
       1: getfield      #51                 // Field password:Ljava/lang/String;
       4: areturn

  public void setPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field password:Ljava/lang/String;
       5: return

  public int getPortNumber();
    Code:
       0: aload_0
       1: getfield      #36                 // Field portNumber:I
       4: ireturn

  public void setPortNumber(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #36                 // Field portNumber:I
       5: return

  public int getLoginTimeout();
    Code:
       0: getstatic     #129                // Field org/postgresql/PGProperty.LOGIN_TIMEOUT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #133                // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setLoginTimeout(int);
    Code:
       0: getstatic     #129                // Field org/postgresql/PGProperty.LOGIN_TIMEOUT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #138                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getConnectTimeout();
    Code:
       0: getstatic     #143                // Field org/postgresql/PGProperty.CONNECT_TIMEOUT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #133                // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setConnectTimeout(int);
    Code:
       0: getstatic     #143                // Field org/postgresql/PGProperty.CONNECT_TIMEOUT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #138                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getProtocolVersion();
    Code:
       0: getstatic     #149                // Field org/postgresql/PGProperty.PROTOCOL_VERSION:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #153                // Method org/postgresql/PGProperty.isPresent:(Ljava/util/Properties;)Z
      10: ifne          15
      13: iconst_0
      14: ireturn
      15: getstatic     #149                // Field org/postgresql/PGProperty.PROTOCOL_VERSION:Lorg/postgresql/PGProperty;
      18: aload_0
      19: getfield      #41                 // Field properties:Ljava/util/Properties;
      22: invokevirtual #133                // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      25: ireturn

  public void setProtocolVersion(int);
    Code:
       0: iload_1
       1: ifne          18
       4: getstatic     #149                // Field org/postgresql/PGProperty.PROTOCOL_VERSION:Lorg/postgresql/PGProperty;
       7: aload_0
       8: getfield      #41                 // Field properties:Ljava/util/Properties;
      11: aconst_null
      12: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      15: goto          29
      18: getstatic     #149                // Field org/postgresql/PGProperty.PROTOCOL_VERSION:Lorg/postgresql/PGProperty;
      21: aload_0
      22: getfield      #41                 // Field properties:Ljava/util/Properties;
      25: iload_1
      26: invokevirtual #138                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      29: return

  public int getReceiveBufferSize();
    Code:
       0: getstatic     #162                // Field org/postgresql/PGProperty.RECEIVE_BUFFER_SIZE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #133                // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setReceiveBufferSize(int);
    Code:
       0: getstatic     #162                // Field org/postgresql/PGProperty.RECEIVE_BUFFER_SIZE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #138                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getSendBufferSize();
    Code:
       0: getstatic     #168                // Field org/postgresql/PGProperty.SEND_BUFFER_SIZE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #133                // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setSendBufferSize(int);
    Code:
       0: getstatic     #168                // Field org/postgresql/PGProperty.SEND_BUFFER_SIZE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #138                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public void setPrepareThreshold(int);
    Code:
       0: getstatic     #173                // Field org/postgresql/PGProperty.PREPARE_THRESHOLD:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #138                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getPrepareThreshold();
    Code:
       0: getstatic     #173                // Field org/postgresql/PGProperty.PREPARE_THRESHOLD:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #133                // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public int getPreparedStatementCacheQueries();
    Code:
       0: getstatic     #179                // Field org/postgresql/PGProperty.PREPARED_STATEMENT_CACHE_QUERIES:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #133                // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setPreparedStatementCacheQueries(int);
    Code:
       0: getstatic     #179                // Field org/postgresql/PGProperty.PREPARED_STATEMENT_CACHE_QUERIES:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #138                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getPreparedStatementCacheSizeMiB();
    Code:
       0: getstatic     #185                // Field org/postgresql/PGProperty.PREPARED_STATEMENT_CACHE_SIZE_MIB:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #133                // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setPreparedStatementCacheSizeMiB(int);
    Code:
       0: getstatic     #185                // Field org/postgresql/PGProperty.PREPARED_STATEMENT_CACHE_SIZE_MIB:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #138                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getDatabaseMetadataCacheFields();
    Code:
       0: getstatic     #190                // Field org/postgresql/PGProperty.DATABASE_METADATA_CACHE_FIELDS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #133                // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setDatabaseMetadataCacheFields(int);
    Code:
       0: getstatic     #190                // Field org/postgresql/PGProperty.DATABASE_METADATA_CACHE_FIELDS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #138                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getDatabaseMetadataCacheFieldsMiB();
    Code:
       0: getstatic     #195                // Field org/postgresql/PGProperty.DATABASE_METADATA_CACHE_FIELDS_MIB:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #133                // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setDatabaseMetadataCacheFieldsMiB(int);
    Code:
       0: getstatic     #195                // Field org/postgresql/PGProperty.DATABASE_METADATA_CACHE_FIELDS_MIB:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #138                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public void setDefaultRowFetchSize(int);
    Code:
       0: getstatic     #200                // Field org/postgresql/PGProperty.DEFAULT_ROW_FETCH_SIZE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #138                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getDefaultRowFetchSize();
    Code:
       0: getstatic     #200                // Field org/postgresql/PGProperty.DEFAULT_ROW_FETCH_SIZE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #133                // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setUnknownLength(int);
    Code:
       0: getstatic     #206                // Field org/postgresql/PGProperty.UNKNOWN_LENGTH:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #138                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getUnknownLength();
    Code:
       0: getstatic     #206                // Field org/postgresql/PGProperty.UNKNOWN_LENGTH:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #133                // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setSocketTimeout(int);
    Code:
       0: getstatic     #212                // Field org/postgresql/PGProperty.SOCKET_TIMEOUT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #138                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getSocketTimeout();
    Code:
       0: getstatic     #212                // Field org/postgresql/PGProperty.SOCKET_TIMEOUT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #133                // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setCancelSignalTimeout(int);
    Code:
       0: getstatic     #218                // Field org/postgresql/PGProperty.CANCEL_SIGNAL_TIMEOUT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #138                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getCancelSignalTimeout();
    Code:
       0: getstatic     #218                // Field org/postgresql/PGProperty.CANCEL_SIGNAL_TIMEOUT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #133                // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setSsl(boolean);
    Code:
       0: iload_1
       1: ifeq          18
       4: getstatic     #224                // Field org/postgresql/PGProperty.SSL:Lorg/postgresql/PGProperty;
       7: aload_0
       8: getfield      #41                 // Field properties:Ljava/util/Properties;
      11: iconst_1
      12: invokevirtual #227                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      15: goto          29
      18: getstatic     #224                // Field org/postgresql/PGProperty.SSL:Lorg/postgresql/PGProperty;
      21: aload_0
      22: getfield      #41                 // Field properties:Ljava/util/Properties;
      25: iconst_0
      26: invokevirtual #227                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      29: return

  public boolean getSsl();
    Code:
       0: getstatic     #224                // Field org/postgresql/PGProperty.SSL:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #234                // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
      10: ifne          31
      13: ldc           #32                 // String
      15: getstatic     #224                // Field org/postgresql/PGProperty.SSL:Lorg/postgresql/PGProperty;
      18: aload_0
      19: getfield      #41                 // Field properties:Ljava/util/Properties;
      22: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      25: invokevirtual #112                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ifeq          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  public void setSslfactory(java.lang.String);
    Code:
       0: getstatic     #242                // Field org/postgresql/PGProperty.SSL_FACTORY:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getSslfactory();
    Code:
       0: getstatic     #242                // Field org/postgresql/PGProperty.SSL_FACTORY:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public java.lang.String getSslMode();
    Code:
       0: getstatic     #248                // Field org/postgresql/PGProperty.SSL_MODE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setSslMode(java.lang.String);
    Code:
       0: getstatic     #248                // Field org/postgresql/PGProperty.SSL_MODE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getSslFactoryArg();
    Code:
       0: getstatic     #254                // Field org/postgresql/PGProperty.SSL_FACTORY_ARG:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setSslFactoryArg(java.lang.String);
    Code:
       0: getstatic     #254                // Field org/postgresql/PGProperty.SSL_FACTORY_ARG:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getSslHostnameVerifier();
    Code:
       0: getstatic     #260                // Field org/postgresql/PGProperty.SSL_HOSTNAME_VERIFIER:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setSslHostnameVerifier(java.lang.String);
    Code:
       0: getstatic     #260                // Field org/postgresql/PGProperty.SSL_HOSTNAME_VERIFIER:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getSslCert();
    Code:
       0: getstatic     #266                // Field org/postgresql/PGProperty.SSL_CERT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setSslCert(java.lang.String);
    Code:
       0: getstatic     #266                // Field org/postgresql/PGProperty.SSL_CERT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getSslKey();
    Code:
       0: getstatic     #272                // Field org/postgresql/PGProperty.SSL_KEY:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setSslKey(java.lang.String);
    Code:
       0: getstatic     #272                // Field org/postgresql/PGProperty.SSL_KEY:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getSslRootCert();
    Code:
       0: getstatic     #277                // Field org/postgresql/PGProperty.SSL_ROOT_CERT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setSslRootCert(java.lang.String);
    Code:
       0: getstatic     #277                // Field org/postgresql/PGProperty.SSL_ROOT_CERT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getSslPassword();
    Code:
       0: getstatic     #282                // Field org/postgresql/PGProperty.SSL_PASSWORD:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setSslPassword(java.lang.String);
    Code:
       0: getstatic     #282                // Field org/postgresql/PGProperty.SSL_PASSWORD:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getSslPasswordCallback();
    Code:
       0: getstatic     #287                // Field org/postgresql/PGProperty.SSL_PASSWORD_CALLBACK:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setSslPasswordCallback(java.lang.String);
    Code:
       0: getstatic     #287                // Field org/postgresql/PGProperty.SSL_PASSWORD_CALLBACK:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public void setApplicationName(java.lang.String);
    Code:
       0: getstatic     #292                // Field org/postgresql/PGProperty.APPLICATION_NAME:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getApplicationName();
    Code:
       0: getstatic     #292                // Field org/postgresql/PGProperty.APPLICATION_NAME:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setTargetServerType(java.lang.String);
    Code:
       0: getstatic     #298                // Field org/postgresql/PGProperty.TARGET_SERVER_TYPE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getTargetServerType();
    Code:
       0: getstatic     #298                // Field org/postgresql/PGProperty.TARGET_SERVER_TYPE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setLoadBalanceHosts(boolean);
    Code:
       0: getstatic     #304                // Field org/postgresql/PGProperty.LOAD_BALANCE_HOSTS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #227                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      11: return

  public boolean getLoadBalanceHosts();
    Code:
       0: getstatic     #304                // Field org/postgresql/PGProperty.LOAD_BALANCE_HOSTS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #153                // Method org/postgresql/PGProperty.isPresent:(Ljava/util/Properties;)Z
      10: ireturn

  public void setHostRecheckSeconds(int);
    Code:
       0: getstatic     #310                // Field org/postgresql/PGProperty.HOST_RECHECK_SECONDS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #138                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getHostRecheckSeconds();
    Code:
       0: getstatic     #310                // Field org/postgresql/PGProperty.HOST_RECHECK_SECONDS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #133                // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setTcpKeepAlive(boolean);
    Code:
       0: getstatic     #316                // Field org/postgresql/PGProperty.TCP_KEEP_ALIVE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #227                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      11: return

  public boolean getTcpKeepAlive();
    Code:
       0: getstatic     #316                // Field org/postgresql/PGProperty.TCP_KEEP_ALIVE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #234                // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
      10: ireturn

  public void setBinaryTransfer(boolean);
    Code:
       0: getstatic     #321                // Field org/postgresql/PGProperty.BINARY_TRANSFER:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #227                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      11: return

  public boolean getBinaryTransfer();
    Code:
       0: getstatic     #321                // Field org/postgresql/PGProperty.BINARY_TRANSFER:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #234                // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
      10: ireturn

  public void setBinaryTransferEnable(java.lang.String);
    Code:
       0: getstatic     #326                // Field org/postgresql/PGProperty.BINARY_TRANSFER_ENABLE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getBinaryTransferEnable();
    Code:
       0: getstatic     #326                // Field org/postgresql/PGProperty.BINARY_TRANSFER_ENABLE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setBinaryTransferDisable(java.lang.String);
    Code:
       0: getstatic     #332                // Field org/postgresql/PGProperty.BINARY_TRANSFER_DISABLE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getBinaryTransferDisable();
    Code:
       0: getstatic     #332                // Field org/postgresql/PGProperty.BINARY_TRANSFER_DISABLE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public java.lang.String getStringType();
    Code:
       0: getstatic     #337                // Field org/postgresql/PGProperty.STRING_TYPE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setStringType(java.lang.String);
    Code:
       0: getstatic     #337                // Field org/postgresql/PGProperty.STRING_TYPE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public boolean isColumnSanitiserDisabled();
    Code:
       0: getstatic     #343                // Field org/postgresql/PGProperty.DISABLE_COLUMN_SANITISER:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #234                // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
      10: ireturn

  public boolean getDisableColumnSanitiser();
    Code:
       0: getstatic     #343                // Field org/postgresql/PGProperty.DISABLE_COLUMN_SANITISER:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #234                // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
      10: ireturn

  public void setDisableColumnSanitiser(boolean);
    Code:
       0: getstatic     #343                // Field org/postgresql/PGProperty.DISABLE_COLUMN_SANITISER:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #227                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      11: return

  public java.lang.String getCurrentSchema();
    Code:
       0: getstatic     #350                // Field org/postgresql/PGProperty.CURRENT_SCHEMA:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setCurrentSchema(java.lang.String);
    Code:
       0: getstatic     #350                // Field org/postgresql/PGProperty.CURRENT_SCHEMA:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public boolean getReadOnly();
    Code:
       0: getstatic     #356                // Field org/postgresql/PGProperty.READ_ONLY:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #234                // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
      10: ireturn

  public void setReadOnly(boolean);
    Code:
       0: getstatic     #356                // Field org/postgresql/PGProperty.READ_ONLY:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #227                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      11: return

  public boolean getLogUnclosedConnections();
    Code:
       0: getstatic     #362                // Field org/postgresql/PGProperty.LOG_UNCLOSED_CONNECTIONS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #234                // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
      10: ireturn

  public void setLogUnclosedConnections(boolean);
    Code:
       0: getstatic     #362                // Field org/postgresql/PGProperty.LOG_UNCLOSED_CONNECTIONS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #227                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      11: return

  public java.lang.String getAssumeMinServerVersion();
    Code:
       0: getstatic     #367                // Field org/postgresql/PGProperty.ASSUME_MIN_SERVER_VERSION:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setAssumeMinServerVersion(java.lang.String);
    Code:
       0: getstatic     #367                // Field org/postgresql/PGProperty.ASSUME_MIN_SERVER_VERSION:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getJaasApplicationName();
    Code:
       0: getstatic     #373                // Field org/postgresql/PGProperty.JAAS_APPLICATION_NAME:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setJaasApplicationName(java.lang.String);
    Code:
       0: getstatic     #373                // Field org/postgresql/PGProperty.JAAS_APPLICATION_NAME:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public boolean getJaasLogin();
    Code:
       0: getstatic     #379                // Field org/postgresql/PGProperty.JAAS_LOGIN:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #234                // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
      10: ireturn

  public void setJaasLogin(boolean);
    Code:
       0: getstatic     #379                // Field org/postgresql/PGProperty.JAAS_LOGIN:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #227                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      11: return

  public java.lang.String getKerberosServerName();
    Code:
       0: getstatic     #385                // Field org/postgresql/PGProperty.KERBEROS_SERVER_NAME:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setKerberosServerName(java.lang.String);
    Code:
       0: getstatic     #385                // Field org/postgresql/PGProperty.KERBEROS_SERVER_NAME:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public boolean getUseSpNego();
    Code:
       0: getstatic     #390                // Field org/postgresql/PGProperty.USE_SPNEGO:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #234                // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
      10: ireturn

  public void setUseSpNego(boolean);
    Code:
       0: getstatic     #390                // Field org/postgresql/PGProperty.USE_SPNEGO:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #227                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      11: return

  public java.lang.String getGssLib();
    Code:
       0: getstatic     #396                // Field org/postgresql/PGProperty.GSS_LIB:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setGssLib(java.lang.String);
    Code:
       0: getstatic     #396                // Field org/postgresql/PGProperty.GSS_LIB:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getSspiServiceClass();
    Code:
       0: getstatic     #402                // Field org/postgresql/PGProperty.SSPI_SERVICE_CLASS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setSspiServiceClass(java.lang.String);
    Code:
       0: getstatic     #402                // Field org/postgresql/PGProperty.SSPI_SERVICE_CLASS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public boolean getAllowEncodingChanges();
    Code:
       0: getstatic     #408                // Field org/postgresql/PGProperty.ALLOW_ENCODING_CHANGES:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #234                // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
      10: ireturn

  public void setAllowEncodingChanges(boolean);
    Code:
       0: getstatic     #408                // Field org/postgresql/PGProperty.ALLOW_ENCODING_CHANGES:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #227                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      11: return

  public java.lang.String getSocketFactory();
    Code:
       0: getstatic     #414                // Field org/postgresql/PGProperty.SOCKET_FACTORY:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setSocketFactory(java.lang.String);
    Code:
       0: getstatic     #414                // Field org/postgresql/PGProperty.SOCKET_FACTORY:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getSocketFactoryArg();
    Code:
       0: getstatic     #420                // Field org/postgresql/PGProperty.SOCKET_FACTORY_ARG:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setSocketFactoryArg(java.lang.String);
    Code:
       0: getstatic     #420                // Field org/postgresql/PGProperty.SOCKET_FACTORY_ARG:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public void setReplication(java.lang.String);
    Code:
       0: getstatic     #426                // Field org/postgresql/PGProperty.REPLICATION:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getReplication();
    Code:
       0: getstatic     #426                // Field org/postgresql/PGProperty.REPLICATION:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public java.lang.String getLoggerLevel();
    Code:
       0: getstatic     #432                // Field org/postgresql/PGProperty.LOGGER_LEVEL:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setLoggerLevel(java.lang.String);
    Code:
       0: getstatic     #432                // Field org/postgresql/PGProperty.LOGGER_LEVEL:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getLoggerFile();
    Code:
       0: new           #437                // class org/postgresql/util/ExpressionProperties
       3: dup
       4: iconst_2
       5: anewarray     #38                 // class java/util/Properties
       8: dup
       9: iconst_0
      10: aload_0
      11: getfield      #41                 // Field properties:Ljava/util/Properties;
      14: aastore
      15: dup
      16: iconst_1
      17: invokestatic  #443                // Method java/lang/System.getProperties:()Ljava/util/Properties;
      20: aastore
      21: invokespecial #446                // Method org/postgresql/util/ExpressionProperties."<init>":([Ljava/util/Properties;)V
      24: astore_1
      25: getstatic     #449                // Field org/postgresql/PGProperty.LOGGER_FILE:Lorg/postgresql/PGProperty;
      28: aload_1
      29: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      32: areturn

  public void setLoggerFile(java.lang.String);
    Code:
       0: getstatic     #449                // Field org/postgresql/PGProperty.LOGGER_FILE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getUrl();
    Code:
       0: new           #455                // class java/lang/StringBuilder
       3: dup
       4: bipush        100
       6: invokespecial #457                // Method java/lang/StringBuilder."<init>":(I)V
       9: astore_1
      10: aload_1
      11: ldc_w         #459                // String jdbc:postgresql://
      14: invokevirtual #463                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: pop
      18: aload_1
      19: aload_0
      20: getfield      #30                 // Field serverName:Ljava/lang/String;
      23: invokevirtual #463                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: pop
      27: aload_0
      28: getfield      #36                 // Field portNumber:I
      31: ifeq          49
      34: aload_1
      35: ldc_w         #465                // String :
      38: invokevirtual #463                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #36                 // Field portNumber:I
      45: invokevirtual #468                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: pop
      49: aload_1
      50: ldc_w         #470                // String /
      53: invokevirtual #463                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: getfield      #34                 // Field databaseName:Ljava/lang/String;
      60: invokevirtual #463                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: pop
      64: new           #455                // class java/lang/StringBuilder
      67: dup
      68: bipush        100
      70: invokespecial #457                // Method java/lang/StringBuilder."<init>":(I)V
      73: astore_2
      74: invokestatic  #474                // Method org/postgresql/PGProperty.values:()[Lorg/postgresql/PGProperty;
      77: astore_3
      78: aload_3
      79: arraylength
      80: istore        4
      82: iconst_0
      83: istore        5
      85: iload         5
      87: iload         4
      89: if_icmpge     163
      92: aload_3
      93: iload         5
      95: aaload
      96: astore        6
      98: aload         6
     100: aload_0
     101: getfield      #41                 // Field properties:Ljava/util/Properties;
     104: invokevirtual #153                // Method org/postgresql/PGProperty.isPresent:(Ljava/util/Properties;)Z
     107: ifeq          157
     110: aload_2
     111: invokevirtual #479                // Method java/lang/StringBuilder.length:()I
     114: ifeq          125
     117: aload_2
     118: ldc_w         #481                // String &
     121: invokevirtual #463                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: pop
     125: aload_2
     126: aload         6
     128: invokevirtual #484                // Method org/postgresql/PGProperty.getName:()Ljava/lang/String;
     131: invokevirtual #463                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: pop
     135: aload_2
     136: ldc_w         #486                // String =
     139: invokevirtual #463                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: pop
     143: aload_2
     144: aload         6
     146: aload_0
     147: getfield      #41                 // Field properties:Ljava/util/Properties;
     150: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
     153: invokevirtual #463                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: pop
     157: iinc          5, 1
     160: goto          85
     163: aload_2
     164: invokevirtual #479                // Method java/lang/StringBuilder.length:()I
     167: ifle          184
     170: aload_1
     171: ldc_w         #488                // String ?
     174: invokevirtual #463                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: pop
     178: aload_1
     179: aload_2
     180: invokevirtual #491                // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
     183: pop
     184: aload_1
     185: invokevirtual #494                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     188: areturn

  public java.lang.String getURL();
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method getUrl:()Ljava/lang/String;
       4: areturn

  public void setUrl(java.lang.String);
    Code:
       0: aload_1
       1: aconst_null
       2: invokestatic  #506                // Method org/postgresql/Driver.parseURL:(Ljava/lang/String;Ljava/util/Properties;)Ljava/util/Properties;
       5: astore_2
       6: invokestatic  #474                // Method org/postgresql/PGProperty.values:()[Lorg/postgresql/PGProperty;
       9: astore_3
      10: aload_3
      11: arraylength
      12: istore        4
      14: iconst_0
      15: istore        5
      17: iload         5
      19: iload         4
      21: if_icmpge     48
      24: aload_3
      25: iload         5
      27: aaload
      28: astore        6
      30: aload_0
      31: aload         6
      33: aload         6
      35: aload_2
      36: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      39: invokevirtual #510                // Method setProperty:(Lorg/postgresql/PGProperty;Ljava/lang/String;)V
      42: iinc          5, 1
      45: goto          17
      48: return

  public void setURL(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #514                // Method setUrl:(Ljava/lang/String;)V
       5: return

  public java.lang.String getProperty(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: invokestatic  #520                // Method org/postgresql/PGProperty.forName:(Ljava/lang/String;)Lorg/postgresql/PGProperty;
       4: astore_2
       5: aload_2
       6: ifnull        15
       9: aload_0
      10: aload_2
      11: invokevirtual #523                // Method getProperty:(Lorg/postgresql/PGProperty;)Ljava/lang/String;
      14: areturn
      15: new           #525                // class org/postgresql/util/PSQLException
      18: dup
      19: ldc_w         #527                // String Unsupported property name: {0}
      22: iconst_1
      23: anewarray     #4                  // class java/lang/Object
      26: dup
      27: iconst_0
      28: aload_1
      29: aastore
      30: invokestatic  #533                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: getstatic     #539                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      36: invokespecial #542                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      39: athrow

  public void setProperty(java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: invokestatic  #520                // Method org/postgresql/PGProperty.forName:(Ljava/lang/String;)Lorg/postgresql/PGProperty;
       4: astore_3
       5: aload_3
       6: ifnull        18
       9: aload_0
      10: aload_3
      11: aload_2
      12: invokevirtual #510                // Method setProperty:(Lorg/postgresql/PGProperty;Ljava/lang/String;)V
      15: goto          43
      18: new           #525                // class org/postgresql/util/PSQLException
      21: dup
      22: ldc_w         #527                // String Unsupported property name: {0}
      25: iconst_1
      26: anewarray     #4                  // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload_1
      32: aastore
      33: invokestatic  #533                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      36: getstatic     #539                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      39: invokespecial #542                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      42: athrow
      43: return

  public java.lang.String getProperty(org.postgresql.PGProperty);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #41                 // Field properties:Ljava/util/Properties;
       5: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
       8: areturn

  public void setProperty(org.postgresql.PGProperty, java.lang.String);
    Code:
       0: aload_2
       1: ifnonnull     5
       4: return
       5: getstatic     #551                // Field org/postgresql/ds/common/BaseDataSource$1.$SwitchMap$org$postgresql$PGProperty:[I
       8: aload_1
       9: invokevirtual #554                // Method org/postgresql/PGProperty.ordinal:()I
      12: iaload
      13: tableswitch   { // 1 to 5
                     1: 48
                     2: 56
                     3: 76
                     4: 84
                     5: 92
               default: 100
          }
      48: aload_0
      49: aload_2
      50: putfield      #30                 // Field serverName:Ljava/lang/String;
      53: goto          113
      56: aload_0
      57: aload_2
      58: invokestatic  #560                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      61: putfield      #36                 // Field portNumber:I
      64: goto          113
      67: astore_3
      68: aload_0
      69: iconst_0
      70: putfield      #36                 // Field portNumber:I
      73: goto          113
      76: aload_0
      77: aload_2
      78: putfield      #34                 // Field databaseName:Ljava/lang/String;
      81: goto          113
      84: aload_0
      85: aload_2
      86: putfield      #49                 // Field user:Ljava/lang/String;
      89: goto          113
      92: aload_0
      93: aload_2
      94: putfield      #51                 // Field password:Ljava/lang/String;
      97: goto          113
     100: aload_0
     101: getfield      #41                 // Field properties:Ljava/util/Properties;
     104: aload_1
     105: invokevirtual #484                // Method org/postgresql/PGProperty.getName:()Ljava/lang/String;
     108: aload_2
     109: invokevirtual #563                // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     112: pop
     113: return
    Exception table:
       from    to  target type
          56    64    67   Class java/lang/NumberFormatException

  protected javax.naming.Reference createReference();
    Code:
       0: new           #568                // class javax/naming/Reference
       3: dup
       4: aload_0
       5: invokevirtual #572                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #575                // Method java/lang/Class.getName:()Ljava/lang/String;
      11: ldc_w         #577                // class org/postgresql/ds/common/PGObjectFactory
      14: invokevirtual #575                // Method java/lang/Class.getName:()Ljava/lang/String;
      17: aconst_null
      18: invokespecial #580                // Method javax/naming/Reference."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      21: areturn

  public javax.naming.Reference getReference() throws javax.naming.NamingException;
    Code:
       0: aload_0
       1: invokevirtual #585                // Method createReference:()Ljavax/naming/Reference;
       4: astore_1
       5: aload_1
       6: new           #587                // class javax/naming/StringRefAddr
       9: dup
      10: ldc_w         #588                // String serverName
      13: aload_0
      14: getfield      #30                 // Field serverName:Ljava/lang/String;
      17: invokespecial #590                // Method javax/naming/StringRefAddr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      20: invokevirtual #594                // Method javax/naming/Reference.add:(Ljavax/naming/RefAddr;)V
      23: aload_0
      24: getfield      #36                 // Field portNumber:I
      27: ifeq          51
      30: aload_1
      31: new           #587                // class javax/naming/StringRefAddr
      34: dup
      35: ldc_w         #595                // String portNumber
      38: aload_0
      39: getfield      #36                 // Field portNumber:I
      42: invokestatic  #598                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      45: invokespecial #590                // Method javax/naming/StringRefAddr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      48: invokevirtual #594                // Method javax/naming/Reference.add:(Ljavax/naming/RefAddr;)V
      51: aload_1
      52: new           #587                // class javax/naming/StringRefAddr
      55: dup
      56: ldc_w         #599                // String databaseName
      59: aload_0
      60: getfield      #34                 // Field databaseName:Ljava/lang/String;
      63: invokespecial #590                // Method javax/naming/StringRefAddr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      66: invokevirtual #594                // Method javax/naming/Reference.add:(Ljavax/naming/RefAddr;)V
      69: aload_0
      70: getfield      #49                 // Field user:Ljava/lang/String;
      73: ifnull        94
      76: aload_1
      77: new           #587                // class javax/naming/StringRefAddr
      80: dup
      81: ldc_w         #600                // String user
      84: aload_0
      85: getfield      #49                 // Field user:Ljava/lang/String;
      88: invokespecial #590                // Method javax/naming/StringRefAddr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      91: invokevirtual #594                // Method javax/naming/Reference.add:(Ljavax/naming/RefAddr;)V
      94: aload_0
      95: getfield      #51                 // Field password:Ljava/lang/String;
      98: ifnull        119
     101: aload_1
     102: new           #587                // class javax/naming/StringRefAddr
     105: dup
     106: ldc_w         #601                // String password
     109: aload_0
     110: getfield      #51                 // Field password:Ljava/lang/String;
     113: invokespecial #590                // Method javax/naming/StringRefAddr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     116: invokevirtual #594                // Method javax/naming/Reference.add:(Ljavax/naming/RefAddr;)V
     119: invokestatic  #474                // Method org/postgresql/PGProperty.values:()[Lorg/postgresql/PGProperty;
     122: astore_2
     123: aload_2
     124: arraylength
     125: istore_3
     126: iconst_0
     127: istore        4
     129: iload         4
     131: iload_3
     132: if_icmpge     184
     135: aload_2
     136: iload         4
     138: aaload
     139: astore        5
     141: aload         5
     143: aload_0
     144: getfield      #41                 // Field properties:Ljava/util/Properties;
     147: invokevirtual #153                // Method org/postgresql/PGProperty.isPresent:(Ljava/util/Properties;)Z
     150: ifeq          178
     153: aload_1
     154: new           #587                // class javax/naming/StringRefAddr
     157: dup
     158: aload         5
     160: invokevirtual #484                // Method org/postgresql/PGProperty.getName:()Ljava/lang/String;
     163: aload         5
     165: aload_0
     166: getfield      #41                 // Field properties:Ljava/util/Properties;
     169: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
     172: invokespecial #590                // Method javax/naming/StringRefAddr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     175: invokevirtual #594                // Method javax/naming/Reference.add:(Ljavax/naming/RefAddr;)V
     178: iinc          4, 1
     181: goto          129
     184: aload_1
     185: areturn

  public void setFromReference(javax.naming.Reference);
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #599                // String databaseName
       5: invokestatic  #609                // Method getReferenceProperty:(Ljavax/naming/Reference;Ljava/lang/String;)Ljava/lang/String;
       8: putfield      #34                 // Field databaseName:Ljava/lang/String;
      11: aload_1
      12: ldc_w         #595                // String portNumber
      15: invokestatic  #609                // Method getReferenceProperty:(Ljavax/naming/Reference;Ljava/lang/String;)Ljava/lang/String;
      18: astore_2
      19: aload_2
      20: ifnull        31
      23: aload_0
      24: aload_2
      25: invokestatic  #560                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      28: putfield      #36                 // Field portNumber:I
      31: aload_0
      32: aload_1
      33: ldc_w         #588                // String serverName
      36: invokestatic  #609                // Method getReferenceProperty:(Ljavax/naming/Reference;Ljava/lang/String;)Ljava/lang/String;
      39: putfield      #30                 // Field serverName:Ljava/lang/String;
      42: aload_0
      43: aload_1
      44: ldc_w         #600                // String user
      47: invokestatic  #609                // Method getReferenceProperty:(Ljavax/naming/Reference;Ljava/lang/String;)Ljava/lang/String;
      50: putfield      #49                 // Field user:Ljava/lang/String;
      53: aload_0
      54: aload_1
      55: ldc_w         #601                // String password
      58: invokestatic  #609                // Method getReferenceProperty:(Ljavax/naming/Reference;Ljava/lang/String;)Ljava/lang/String;
      61: putfield      #51                 // Field password:Ljava/lang/String;
      64: invokestatic  #474                // Method org/postgresql/PGProperty.values:()[Lorg/postgresql/PGProperty;
      67: astore_3
      68: aload_3
      69: arraylength
      70: istore        4
      72: iconst_0
      73: istore        5
      75: iload         5
      77: iload         4
      79: if_icmpge     112
      82: aload_3
      83: iload         5
      85: aaload
      86: astore        6
      88: aload         6
      90: aload_0
      91: getfield      #41                 // Field properties:Ljava/util/Properties;
      94: aload_1
      95: aload         6
      97: invokevirtual #484                // Method org/postgresql/PGProperty.getName:()Ljava/lang/String;
     100: invokestatic  #609                // Method getReferenceProperty:(Ljavax/naming/Reference;Ljava/lang/String;)Ljava/lang/String;
     103: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
     106: iinc          5, 1
     109: goto          75
     112: return

  private static java.lang.String getReferenceProperty(javax.naming.Reference, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #613                // Method javax/naming/Reference.get:(Ljava/lang/String;)Ljavax/naming/RefAddr;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_2
      13: invokevirtual #619                // Method javax/naming/RefAddr.getContent:()Ljava/lang/Object;
      16: checkcast     #90                 // class java/lang/String
      19: areturn

  protected void writeBaseObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #30                 // Field serverName:Ljava/lang/String;
       5: invokevirtual #632                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
       8: aload_1
       9: aload_0
      10: getfield      #34                 // Field databaseName:Ljava/lang/String;
      13: invokevirtual #632                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      16: aload_1
      17: aload_0
      18: getfield      #49                 // Field user:Ljava/lang/String;
      21: invokevirtual #632                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      24: aload_1
      25: aload_0
      26: getfield      #51                 // Field password:Ljava/lang/String;
      29: invokevirtual #632                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      32: aload_1
      33: aload_0
      34: getfield      #36                 // Field portNumber:I
      37: invokevirtual #635                // Method java/io/ObjectOutputStream.writeInt:(I)V
      40: aload_1
      41: aload_0
      42: getfield      #41                 // Field properties:Ljava/util/Properties;
      45: invokevirtual #632                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      48: return

  protected void readBaseObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #646                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
       5: checkcast     #90                 // class java/lang/String
       8: putfield      #30                 // Field serverName:Ljava/lang/String;
      11: aload_0
      12: aload_1
      13: invokevirtual #646                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      16: checkcast     #90                 // class java/lang/String
      19: putfield      #34                 // Field databaseName:Ljava/lang/String;
      22: aload_0
      23: aload_1
      24: invokevirtual #646                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      27: checkcast     #90                 // class java/lang/String
      30: putfield      #49                 // Field user:Ljava/lang/String;
      33: aload_0
      34: aload_1
      35: invokevirtual #646                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      38: checkcast     #90                 // class java/lang/String
      41: putfield      #51                 // Field password:Ljava/lang/String;
      44: aload_0
      45: aload_1
      46: invokevirtual #649                // Method java/io/ObjectInputStream.readInt:()I
      49: putfield      #36                 // Field portNumber:I
      52: aload_0
      53: aload_1
      54: invokevirtual #646                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      57: checkcast     #38                 // class java/util/Properties
      60: putfield      #41                 // Field properties:Ljava/util/Properties;
      63: return

  public void initializeFrom(org.postgresql.ds.common.BaseDataSource) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: new           #655                // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #656                // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_2
       8: new           #628                // class java/io/ObjectOutputStream
      11: dup
      12: aload_2
      13: invokespecial #659                // Method java/io/ObjectOutputStream."<init>":(Ljava/io/OutputStream;)V
      16: astore_3
      17: aload_1
      18: aload_3
      19: invokevirtual #661                // Method writeBaseObject:(Ljava/io/ObjectOutputStream;)V
      22: aload_3
      23: invokevirtual #664                // Method java/io/ObjectOutputStream.close:()V
      26: new           #666                // class java/io/ByteArrayInputStream
      29: dup
      30: aload_2
      31: invokevirtual #670                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      34: invokespecial #673                // Method java/io/ByteArrayInputStream."<init>":([B)V
      37: astore        4
      39: new           #643                // class java/io/ObjectInputStream
      42: dup
      43: aload         4
      45: invokespecial #676                // Method java/io/ObjectInputStream."<init>":(Ljava/io/InputStream;)V
      48: astore        5
      50: aload_0
      51: aload         5
      53: invokevirtual #678                // Method readBaseObject:(Ljava/io/ObjectInputStream;)V
      56: return

  public org.postgresql.jdbc.PreferQueryMode getPreferQueryMode();
    Code:
       0: getstatic     #690                // Field org/postgresql/PGProperty.PREFER_QUERY_MODE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: invokestatic  #696                // Method org/postgresql/jdbc/PreferQueryMode.of:(Ljava/lang/String;)Lorg/postgresql/jdbc/PreferQueryMode;
      13: areturn

  public void setPreferQueryMode(org.postgresql.jdbc.PreferQueryMode);
    Code:
       0: getstatic     #690                // Field org/postgresql/PGProperty.PREFER_QUERY_MODE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #700                // Method org/postgresql/jdbc/PreferQueryMode.value:()Ljava/lang/String;
      11: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      14: return

  public org.postgresql.jdbc.AutoSave getAutosave();
    Code:
       0: getstatic     #707                // Field org/postgresql/PGProperty.AUTOSAVE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #238                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: invokestatic  #712                // Method org/postgresql/jdbc/AutoSave.of:(Ljava/lang/String;)Lorg/postgresql/jdbc/AutoSave;
      13: areturn

  public void setAutosave(org.postgresql.jdbc.AutoSave);
    Code:
       0: getstatic     #707                // Field org/postgresql/PGProperty.AUTOSAVE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #715                // Method org/postgresql/jdbc/AutoSave.value:()Ljava/lang/String;
      11: invokevirtual #157                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      14: return

  public boolean getReWriteBatchedInserts();
    Code:
       0: getstatic     #721                // Field org/postgresql/PGProperty.REWRITE_BATCHED_INSERTS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: invokevirtual #234                // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
      10: ireturn

  public void setReWriteBatchedInserts(boolean);
    Code:
       0: getstatic     #721                // Field org/postgresql/PGProperty.REWRITE_BATCHED_INSERTS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #41                 // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #227                // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      11: return

  public java.util.logging.Logger getParentLogger();
    Code:
       0: ldc_w         #727                // String org.postgresql
       3: invokestatic  #731                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       6: areturn

  static {};
    Code:
       0: ldc           #2                  // class org/postgresql/ds/common/BaseDataSource
       2: invokevirtual #575                // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #731                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #65                 // Field LOGGER:Ljava/util/logging/Logger;
      11: ldc_w         #734                // String org.postgresql.Driver
      14: invokestatic  #737                // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      17: pop
      18: goto          34
      21: astore_0
      22: new           #739                // class java/lang/IllegalStateException
      25: dup
      26: ldc_w         #741                // String BaseDataSource is unable to load org.postgresql.Driver. Please check if you have proper PostgreSQL JDBC Driver jar on the classpath
      29: aload_0
      30: invokespecial #744                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      33: athrow
      34: return
    Exception table:
       from    to  target type
          11    18    21   Class java/lang/ClassNotFoundException
}
