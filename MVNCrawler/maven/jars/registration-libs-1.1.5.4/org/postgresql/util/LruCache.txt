Compiled from "LruCache.java"
public class org.postgresql.util.LruCache<Key, Value extends org.postgresql.util.CanEstimateSize> {
  private final org.postgresql.util.LruCache$EvictAction<Value> onEvict;

  private final org.postgresql.util.LruCache$CreateAction<Key, Value> createAction;

  private final int maxSizeEntries;

  private final long maxSizeBytes;

  private long currentSize;

  private final java.util.Map<Key, Value> cache;

  public static final org.postgresql.util.LruCache$CreateAction NOOP_CREATE_ACTION;

  public static final org.postgresql.util.LruCache$EvictAction NOOP_EVICT_ACTION;

  private void evictValue(Value);
    Code:
       0: aload_0
       1: getfield      #41                 // Field onEvict:Lorg/postgresql/util/LruCache$EvictAction;
       4: aload_1
       5: invokeinterface #45,  2           // InterfaceMethod org/postgresql/util/LruCache$EvictAction.evict:(Ljava/lang/Object;)V
      10: goto          14
      13: astore_2
      14: return
    Exception table:
       from    to  target type
           0    10    13   Class java/sql/SQLException

  public org.postgresql.util.LruCache(int, long, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: lload_2
       3: iload         4
       5: getstatic     #55                 // Field NOOP_CREATE_ACTION:Lorg/postgresql/util/LruCache$CreateAction;
       8: getstatic     #57                 // Field NOOP_EVICT_ACTION:Lorg/postgresql/util/LruCache$EvictAction;
      11: invokespecial #60                 // Method "<init>":(IJZLorg/postgresql/util/LruCache$CreateAction;Lorg/postgresql/util/LruCache$EvictAction;)V
      14: return

  public org.postgresql.util.LruCache(int, long, boolean, org.postgresql.util.LruCache$CreateAction<Key, Value>, org.postgresql.util.LruCache$EvictAction<Value>);
    Code:
       0: aload_0
       1: invokespecial #65                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #67                 // Field maxSizeEntries:I
       9: aload_0
      10: lload_2
      11: putfield      #69                 // Field maxSizeBytes:J
      14: aload_0
      15: aload         5
      17: putfield      #71                 // Field createAction:Lorg/postgresql/util/LruCache$CreateAction;
      20: aload_0
      21: aload         6
      23: putfield      #41                 // Field onEvict:Lorg/postgresql/util/LruCache$EvictAction;
      26: aload_0
      27: new           #8                  // class org/postgresql/util/LruCache$LimitedMap
      30: dup
      31: aload_0
      32: bipush        16
      34: ldc           #72                 // float 0.75f
      36: iload         4
      38: invokespecial #75                 // Method org/postgresql/util/LruCache$LimitedMap."<init>":(Lorg/postgresql/util/LruCache;IFZ)V
      41: putfield      #77                 // Field cache:Ljava/util/Map;
      44: return

  public synchronized Value get(Key);
    Code:
       0: aload_0
       1: getfield      #77                 // Field cache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #84,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #86                 // class org/postgresql/util/CanEstimateSize
      13: areturn

  public synchronized Value borrow(Key) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #77                 // Field cache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #93,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #86                 // class org/postgresql/util/CanEstimateSize
      13: astore_2
      14: aload_2
      15: ifnonnull     32
      18: aload_0
      19: getfield      #71                 // Field createAction:Lorg/postgresql/util/LruCache$CreateAction;
      22: aload_1
      23: invokeinterface #96,  2           // InterfaceMethod org/postgresql/util/LruCache$CreateAction.create:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #86                 // class org/postgresql/util/CanEstimateSize
      31: areturn
      32: aload_0
      33: dup
      34: getfield      #98                 // Field currentSize:J
      37: aload_2
      38: invokeinterface #102,  1          // InterfaceMethod org/postgresql/util/CanEstimateSize.getSize:()J
      43: lsub
      44: putfield      #98                 // Field currentSize:J
      47: aload_2
      48: areturn

  public synchronized void put(Key, Value);
    Code:
       0: aload_2
       1: invokeinterface #102,  1          // InterfaceMethod org/postgresql/util/CanEstimateSize.getSize:()J
       6: lstore_3
       7: aload_0
       8: getfield      #69                 // Field maxSizeBytes:J
      11: lconst_0
      12: lcmp
      13: ifeq          36
      16: aload_0
      17: getfield      #67                 // Field maxSizeEntries:I
      20: ifeq          36
      23: lload_3
      24: ldc2_w        #105                // long 2l
      27: lmul
      28: aload_0
      29: getfield      #69                 // Field maxSizeBytes:J
      32: lcmp
      33: ifle          42
      36: aload_0
      37: aload_2
      38: invokespecial #108                // Method evictValue:(Lorg/postgresql/util/CanEstimateSize;)V
      41: return
      42: aload_0
      43: dup
      44: getfield      #98                 // Field currentSize:J
      47: lload_3
      48: ladd
      49: putfield      #98                 // Field currentSize:J
      52: aload_0
      53: getfield      #77                 // Field cache:Ljava/util/Map;
      56: aload_1
      57: aload_2
      58: invokeinterface #111,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: checkcast     #86                 // class org/postgresql/util/CanEstimateSize
      66: astore        5
      68: aload         5
      70: ifnonnull     74
      73: return
      74: aload_0
      75: dup
      76: getfield      #98                 // Field currentSize:J
      79: aload         5
      81: invokeinterface #102,  1          // InterfaceMethod org/postgresql/util/CanEstimateSize.getSize:()J
      86: lsub
      87: putfield      #98                 // Field currentSize:J
      90: aload         5
      92: aload_2
      93: if_acmpeq     102
      96: aload_0
      97: aload         5
      99: invokespecial #108                // Method evictValue:(Lorg/postgresql/util/CanEstimateSize;)V
     102: return

  static int access$000(org.postgresql.util.LruCache);
    Code:
       0: aload_0
       1: getfield      #67                 // Field maxSizeEntries:I
       4: ireturn

  static long access$100(org.postgresql.util.LruCache);
    Code:
       0: aload_0
       1: getfield      #98                 // Field currentSize:J
       4: lreturn

  static long access$200(org.postgresql.util.LruCache);
    Code:
       0: aload_0
       1: getfield      #69                 // Field maxSizeBytes:J
       4: lreturn

  static void access$300(org.postgresql.util.LruCache, org.postgresql.util.CanEstimateSize);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #108                // Method evictValue:(Lorg/postgresql/util/CanEstimateSize;)V
       5: return

  static long access$102(org.postgresql.util.LruCache, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #98                 // Field currentSize:J
       6: lreturn

  static {};
    Code:
       0: new           #19                 // class org/postgresql/util/LruCache$1
       3: dup
       4: invokespecial #126                // Method org/postgresql/util/LruCache$1."<init>":()V
       7: putstatic     #55                 // Field NOOP_CREATE_ACTION:Lorg/postgresql/util/LruCache$CreateAction;
      10: new           #17                 // class org/postgresql/util/LruCache$2
      13: dup
      14: invokespecial #127                // Method org/postgresql/util/LruCache$2."<init>":()V
      17: putstatic     #57                 // Field NOOP_EVICT_ACTION:Lorg/postgresql/util/LruCache$EvictAction;
      20: return
}
