Compiled from "ReaderInputStream.java"
public class org.postgresql.util.ReaderInputStream extends java.io.InputStream {
  private static final int DEFAULT_CHAR_BUFFER_SIZE;

  private static final java.nio.charset.Charset UTF_8;

  private final java.io.Reader reader;

  private final java.nio.charset.CharsetEncoder encoder;

  private final java.nio.ByteBuffer bbuf;

  private final java.nio.CharBuffer cbuf;

  private boolean endOfInput;

  private final byte[] oneByte;

  static final boolean $assertionsDisabled;

  public org.postgresql.util.ReaderInputStream(java.io.Reader);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        8192
       5: invokespecial #28                 // Method "<init>":(Ljava/io/Reader;I)V
       8: return

  org.postgresql.util.ReaderInputStream(java.io.Reader, int);
    Code:
       0: aload_0
       1: invokespecial #33                 // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: iconst_1
       6: newarray       byte
       8: putfield      #35                 // Field oneByte:[B
      11: aload_1
      12: ifnonnull     25
      15: new           #37                 // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #39                 // String reader cannot be null
      21: invokespecial #42                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: iload_2
      26: iconst_2
      27: if_icmpge     40
      30: new           #37                 // class java/lang/IllegalArgumentException
      33: dup
      34: ldc           #46                 // String charBufferSize must be at least 2 chars
      36: invokespecial #42                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: aload_1
      42: putfield      #48                 // Field reader:Ljava/io/Reader;
      45: aload_0
      46: getstatic     #50                 // Field UTF_8:Ljava/nio/charset/Charset;
      49: invokevirtual #56                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
      52: putfield      #58                 // Field encoder:Ljava/nio/charset/CharsetEncoder;
      55: aload_0
      56: iconst_3
      57: iload_2
      58: imul
      59: invokestatic  #64                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      62: putfield      #66                 // Field bbuf:Ljava/nio/ByteBuffer;
      65: aload_0
      66: getfield      #66                 // Field bbuf:Ljava/nio/ByteBuffer;
      69: invokevirtual #70                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      72: pop
      73: aload_0
      74: iload_2
      75: invokestatic  #75                 // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
      78: putfield      #77                 // Field cbuf:Ljava/nio/CharBuffer;
      81: aload_0
      82: getfield      #77                 // Field cbuf:Ljava/nio/CharBuffer;
      85: invokevirtual #78                 // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
      88: pop
      89: return

  private void advance() throws java.io.IOException;
    Code:
       0: getstatic     #84                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #86                 // Field endOfInput:Z
      10: ifeq          21
      13: new           #88                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #89                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: getstatic     #84                 // Field $assertionsDisabled:Z
      24: ifne          85
      27: aload_0
      28: getfield      #66                 // Field bbuf:Ljava/nio/ByteBuffer;
      31: invokevirtual #93                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      34: ifeq          85
      37: new           #88                 // class java/lang/AssertionError
      40: dup
      41: new           #95                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #98                 // String advance() should be called when output byte buffer is empty. bbuf:
      50: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: getfield      #66                 // Field bbuf:Ljava/nio/ByteBuffer;
      57: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      60: ldc           #107                // String , as string:
      62: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_0
      66: getfield      #66                 // Field bbuf:Ljava/nio/ByteBuffer;
      69: invokevirtual #111                // Method java/nio/ByteBuffer.asCharBuffer:()Ljava/nio/CharBuffer;
      72: invokevirtual #115                // Method java/nio/CharBuffer.toString:()Ljava/lang/String;
      75: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: invokevirtual #116                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #119                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      84: athrow
      85: getstatic     #84                 // Field $assertionsDisabled:Z
      88: ifne          110
      91: aload_0
      92: getfield      #77                 // Field cbuf:Ljava/nio/CharBuffer;
      95: invokevirtual #123                // Method java/nio/CharBuffer.remaining:()I
      98: iconst_2
      99: if_icmplt     110
     102: new           #88                 // class java/lang/AssertionError
     105: dup
     106: invokespecial #89                 // Method java/lang/AssertionError."<init>":()V
     109: athrow
     110: aload_0
     111: getfield      #77                 // Field cbuf:Ljava/nio/CharBuffer;
     114: invokevirtual #123                // Method java/nio/CharBuffer.remaining:()I
     117: ifne          131
     120: aload_0
     121: getfield      #77                 // Field cbuf:Ljava/nio/CharBuffer;
     124: invokevirtual #126                // Method java/nio/CharBuffer.clear:()Ljava/nio/Buffer;
     127: pop
     128: goto          139
     131: aload_0
     132: getfield      #77                 // Field cbuf:Ljava/nio/CharBuffer;
     135: invokevirtual #129                // Method java/nio/CharBuffer.compact:()Ljava/nio/CharBuffer;
     138: pop
     139: aload_0
     140: getfield      #48                 // Field reader:Ljava/io/Reader;
     143: aload_0
     144: getfield      #77                 // Field cbuf:Ljava/nio/CharBuffer;
     147: invokevirtual #133                // Method java/io/Reader.read:(Ljava/nio/CharBuffer;)I
     150: istore_1
     151: aload_0
     152: getfield      #77                 // Field cbuf:Ljava/nio/CharBuffer;
     155: invokevirtual #78                 // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
     158: pop
     159: aload_0
     160: iload_1
     161: iconst_m1
     162: if_icmpne     169
     165: iconst_1
     166: goto          170
     169: iconst_0
     170: putfield      #86                 // Field endOfInput:Z
     173: aload_0
     174: getfield      #66                 // Field bbuf:Ljava/nio/ByteBuffer;
     177: invokevirtual #134                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     180: pop
     181: aload_0
     182: getfield      #58                 // Field encoder:Ljava/nio/charset/CharsetEncoder;
     185: aload_0
     186: getfield      #77                 // Field cbuf:Ljava/nio/CharBuffer;
     189: aload_0
     190: getfield      #66                 // Field bbuf:Ljava/nio/ByteBuffer;
     193: aload_0
     194: getfield      #86                 // Field endOfInput:Z
     197: invokevirtual #140                // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
     200: astore_2
     201: aload_0
     202: aload_2
     203: invokespecial #144                // Method checkEncodeResult:(Ljava/nio/charset/CoderResult;)V
     206: aload_0
     207: getfield      #86                 // Field endOfInput:Z
     210: ifeq          230
     213: aload_0
     214: getfield      #58                 // Field encoder:Ljava/nio/charset/CharsetEncoder;
     217: aload_0
     218: getfield      #66                 // Field bbuf:Ljava/nio/ByteBuffer;
     221: invokevirtual #148                // Method java/nio/charset/CharsetEncoder.flush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
     224: astore_2
     225: aload_0
     226: aload_2
     227: invokespecial #144                // Method checkEncodeResult:(Ljava/nio/charset/CoderResult;)V
     230: aload_0
     231: getfield      #66                 // Field bbuf:Ljava/nio/ByteBuffer;
     234: invokevirtual #70                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     237: pop
     238: return

  private void checkEncodeResult(java.nio.charset.CoderResult) throws java.nio.charset.CharacterCodingException;
    Code:
       0: aload_1
       1: invokevirtual #158                // Method java/nio/charset/CoderResult.isError:()Z
       4: ifeq          11
       7: aload_1
       8: invokevirtual #161                // Method java/nio/charset/CoderResult.throwException:()V
      11: return

  public int read() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: iconst_m1
       4: if_icmpeq     27
       7: aload_0
       8: aload_0
       9: getfield      #35                 // Field oneByte:[B
      12: invokevirtual #164                // Method read:([B)I
      15: istore_1
      16: iload_1
      17: ifle          2
      20: aload_0
      21: getfield      #35                 // Field oneByte:[B
      24: iconst_0
      25: baload
      26: ireturn
      27: iconst_m1
      28: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #168                // class java/lang/NullPointerException
       7: dup
       8: invokespecial #169                // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: iload_2
      13: iflt          28
      16: iload_3
      17: iflt          28
      20: iload_3
      21: aload_1
      22: arraylength
      23: iload_2
      24: isub
      25: if_icmple     36
      28: new           #171                // class java/lang/IndexOutOfBoundsException
      31: dup
      32: invokespecial #172                // Method java/lang/IndexOutOfBoundsException."<init>":()V
      35: athrow
      36: iload_3
      37: ifne          42
      40: iconst_0
      41: ireturn
      42: aload_0
      43: getfield      #86                 // Field endOfInput:Z
      46: ifeq          61
      49: aload_0
      50: getfield      #66                 // Field bbuf:Ljava/nio/ByteBuffer;
      53: invokevirtual #93                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      56: ifne          61
      59: iconst_m1
      60: ireturn
      61: iconst_0
      62: istore        4
      64: iload_3
      65: ifle          141
      68: aload_0
      69: getfield      #86                 // Field endOfInput:Z
      72: ifne          141
      75: aload_0
      76: getfield      #66                 // Field bbuf:Ljava/nio/ByteBuffer;
      79: invokevirtual #93                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      82: ifeq          134
      85: iload_3
      86: aload_0
      87: getfield      #66                 // Field bbuf:Ljava/nio/ByteBuffer;
      90: invokevirtual #173                // Method java/nio/ByteBuffer.remaining:()I
      93: invokestatic  #179                // Method java/lang/Math.min:(II)I
      96: istore        5
      98: aload_0
      99: getfield      #66                 // Field bbuf:Ljava/nio/ByteBuffer;
     102: aload_1
     103: iload_2
     104: iload         5
     106: invokevirtual #183                // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     109: pop
     110: iload         4
     112: iload         5
     114: iadd
     115: istore        4
     117: iload_2
     118: iload         5
     120: iadd
     121: istore_2
     122: iload_3
     123: iload         5
     125: isub
     126: istore_3
     127: iload_3
     128: ifne          134
     131: iload         4
     133: ireturn
     134: aload_0
     135: invokespecial #185                // Method advance:()V
     138: goto          64
     141: aload_0
     142: getfield      #86                 // Field endOfInput:Z
     145: ifeq          165
     148: aload_0
     149: getfield      #66                 // Field bbuf:Ljava/nio/ByteBuffer;
     152: invokevirtual #93                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     155: ifne          165
     158: iload         4
     160: ifne          165
     163: iconst_m1
     164: ireturn
     165: iload         4
     167: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #86                 // Field endOfInput:Z
       5: aload_0
       6: getfield      #48                 // Field reader:Ljava/io/Reader;
       9: invokevirtual #192                // Method java/io/Reader.close:()V
      12: return

  static {};
    Code:
       0: ldc           #2                  // class org/postgresql/util/ReaderInputStream
       2: invokevirtual #198                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #84                 // Field $assertionsDisabled:Z
      16: ldc           #200                // String UTF-8
      18: invokestatic  #204                // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      21: putstatic     #50                 // Field UTF_8:Ljava/nio/charset/Charset;
      24: return
}
