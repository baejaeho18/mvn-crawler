Compiled from "MultiHostChooser.java"
class org.postgresql.hostchooser.MultiHostChooser implements org.postgresql.hostchooser.HostChooser {
  private org.postgresql.util.HostSpec[] hostSpecs;

  private final org.postgresql.hostchooser.HostRequirement targetServerType;

  private int hostRecheckTime;

  private boolean loadBalance;

  org.postgresql.hostchooser.MultiHostChooser(org.postgresql.util.HostSpec[], org.postgresql.hostchooser.HostRequirement, java.util.Properties);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #30                 // Field hostSpecs:[Lorg/postgresql/util/HostSpec;
       9: aload_0
      10: aload_2
      11: putfield      #32                 // Field targetServerType:Lorg/postgresql/hostchooser/HostRequirement;
      14: aload_0
      15: getstatic     #38                 // Field org/postgresql/PGProperty.HOST_RECHECK_SECONDS:Lorg/postgresql/PGProperty;
      18: aload_3
      19: invokevirtual #42                 // Method org/postgresql/PGProperty.getInt:(Ljava/util/Properties;)I
      22: sipush        1000
      25: imul
      26: putfield      #44                 // Field hostRecheckTime:I
      29: aload_0
      30: getstatic     #47                 // Field org/postgresql/PGProperty.LOAD_BALANCE_HOSTS:Lorg/postgresql/PGProperty;
      33: aload_3
      34: invokevirtual #51                 // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
      37: putfield      #53                 // Field loadBalance:Z
      40: goto          55
      43: astore        4
      45: new           #60                 // class java/lang/RuntimeException
      48: dup
      49: aload         4
      51: invokespecial #63                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      54: athrow
      55: return
    Exception table:
       from    to  target type
          14    40    43   Class org/postgresql/util/PSQLException

  public java.util.Iterator<org.postgresql.hostchooser.CandidateHost> iterator();
    Code:
       0: aload_0
       1: invokespecial #74                 // Method candidateIterator:()Ljava/util/Iterator;
       4: astore_1
       5: aload_1
       6: invokeinterface #80,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifne          57
      14: aload_0
      15: getfield      #30                 // Field hostSpecs:[Lorg/postgresql/util/HostSpec;
      18: invokestatic  #86                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      21: astore_2
      22: aload_0
      23: getfield      #53                 // Field loadBalance:Z
      26: ifeq          42
      29: new           #88                 // class java/util/ArrayList
      32: dup
      33: aload_2
      34: invokespecial #91                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      37: astore_2
      38: aload_2
      39: invokestatic  #97                 // Method java/util/Collections.shuffle:(Ljava/util/List;)V
      42: aload_0
      43: aload_0
      44: getfield      #32                 // Field targetServerType:Lorg/postgresql/hostchooser/HostRequirement;
      47: aload_2
      48: invokespecial #103                // Method withReqStatus:(Lorg/postgresql/hostchooser/HostRequirement;Ljava/util/List;)Ljava/util/List;
      51: invokeinterface #105,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      56: astore_1
      57: aload_1
      58: areturn

  private java.util.Iterator<org.postgresql.hostchooser.CandidateHost> candidateIterator();
    Code:
       0: aload_0
       1: getfield      #32                 // Field targetServerType:Lorg/postgresql/hostchooser/HostRequirement;
       4: getstatic     #114                // Field org/postgresql/hostchooser/HostRequirement.preferSecondary:Lorg/postgresql/hostchooser/HostRequirement;
       7: if_acmpeq     24
      10: aload_0
      11: aload_0
      12: getfield      #32                 // Field targetServerType:Lorg/postgresql/hostchooser/HostRequirement;
      15: invokespecial #118                // Method getCandidateHosts:(Lorg/postgresql/hostchooser/HostRequirement;)Ljava/util/List;
      18: invokeinterface #105,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: areturn
      24: aload_0
      25: getstatic     #121                // Field org/postgresql/hostchooser/HostRequirement.secondary:Lorg/postgresql/hostchooser/HostRequirement;
      28: invokespecial #118                // Method getCandidateHosts:(Lorg/postgresql/hostchooser/HostRequirement;)Ljava/util/List;
      31: astore_1
      32: aload_0
      33: getstatic     #124                // Field org/postgresql/hostchooser/HostRequirement.any:Lorg/postgresql/hostchooser/HostRequirement;
      36: invokespecial #118                // Method getCandidateHosts:(Lorg/postgresql/hostchooser/HostRequirement;)Ljava/util/List;
      39: astore_2
      40: aload_1
      41: invokeinterface #127,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      46: ifeq          56
      49: aload_2
      50: invokeinterface #105,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      55: areturn
      56: aload_2
      57: invokeinterface #127,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      62: ifeq          72
      65: aload_1
      66: invokeinterface #105,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      71: areturn
      72: aload_1
      73: aload_1
      74: invokeinterface #131,  1          // InterfaceMethod java/util/List.size:()I
      79: iconst_1
      80: isub
      81: invokeinterface #135,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      86: checkcast     #137                // class org/postgresql/hostchooser/CandidateHost
      89: aload_2
      90: iconst_0
      91: invokeinterface #135,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      96: invokevirtual #141                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      99: ifeq          109
     102: aload_0
     103: iconst_1
     104: aload_1
     105: invokespecial #145                // Method rtrim:(ILjava/util/List;)Ljava/util/List;
     108: astore_1
     109: aload_0
     110: aload_1
     111: aload_2
     112: invokespecial #149                // Method append:(Ljava/util/List;Ljava/util/List;)Ljava/util/List;
     115: invokeinterface #105,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     120: areturn

  private java.util.List<org.postgresql.hostchooser.CandidateHost> getCandidateHosts(org.postgresql.hostchooser.HostRequirement);
    Code:
       0: aload_0
       1: getfield      #30                 // Field hostSpecs:[Lorg/postgresql/util/HostSpec;
       4: aload_1
       5: aload_0
       6: getfield      #44                 // Field hostRecheckTime:I
       9: i2l
      10: invokestatic  #156                // Method org/postgresql/hostchooser/GlobalHostStatusTracker.getCandidateHosts:([Lorg/postgresql/util/HostSpec;Lorg/postgresql/hostchooser/HostRequirement;J)Ljava/util/List;
      13: astore_2
      14: aload_0
      15: getfield      #53                 // Field loadBalance:Z
      18: ifeq          25
      21: aload_2
      22: invokestatic  #97                 // Method java/util/Collections.shuffle:(Ljava/util/List;)V
      25: aload_0
      26: aload_1
      27: aload_2
      28: invokespecial #103                // Method withReqStatus:(Lorg/postgresql/hostchooser/HostRequirement;Ljava/util/List;)Ljava/util/List;
      31: areturn

  private java.util.List<org.postgresql.hostchooser.CandidateHost> withReqStatus(org.postgresql.hostchooser.HostRequirement, java.util.List<org.postgresql.util.HostSpec>);
    Code:
       0: new           #13                 // class org/postgresql/hostchooser/MultiHostChooser$1
       3: dup
       4: aload_0
       5: aload_2
       6: aload_1
       7: invokespecial #161                // Method org/postgresql/hostchooser/MultiHostChooser$1."<init>":(Lorg/postgresql/hostchooser/MultiHostChooser;Ljava/util/List;Lorg/postgresql/hostchooser/HostRequirement;)V
      10: areturn

  private <T> java.util.List<T> append(java.util.List<T>, java.util.List<T>);
    Code:
       0: new           #11                 // class org/postgresql/hostchooser/MultiHostChooser$2
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #166                // Method org/postgresql/hostchooser/MultiHostChooser$2."<init>":(Lorg/postgresql/hostchooser/MultiHostChooser;Ljava/util/List;Ljava/util/List;)V
      10: areturn

  private <T> java.util.List<T> rtrim(int, java.util.List<T>);
    Code:
       0: new           #9                  // class org/postgresql/hostchooser/MultiHostChooser$3
       3: dup
       4: aload_0
       5: aload_2
       6: iload_1
       7: invokespecial #172                // Method org/postgresql/hostchooser/MultiHostChooser$3."<init>":(Lorg/postgresql/hostchooser/MultiHostChooser;Ljava/util/List;I)V
      10: areturn
}
