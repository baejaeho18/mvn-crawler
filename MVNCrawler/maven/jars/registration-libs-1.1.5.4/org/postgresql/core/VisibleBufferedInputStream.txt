Compiled from "VisibleBufferedInputStream.java"
public class org.postgresql.core.VisibleBufferedInputStream extends java.io.InputStream {
  private static final int MINIMUM_READ;

  private static final int STRING_SCAN_SPAN;

  private final java.io.InputStream wrapped;

  private byte[] buffer;

  private int index;

  private int endIndex;

  public org.postgresql.core.VisibleBufferedInputStream(java.io.InputStream, int);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #22                 // Field wrapped:Ljava/io/InputStream;
       9: aload_0
      10: iload_2
      11: sipush        1024
      14: if_icmpge     23
      17: sipush        1024
      20: goto          24
      23: iload_2
      24: newarray       byte
      26: putfield      #24                 // Field buffer:[B
      29: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #36                 // Method ensureBytes:(I)Z
       5: ifeq          29
       8: aload_0
       9: getfield      #24                 // Field buffer:[B
      12: aload_0
      13: dup
      14: getfield      #38                 // Field index:I
      17: dup_x1
      18: iconst_1
      19: iadd
      20: putfield      #38                 // Field index:I
      23: baload
      24: sipush        255
      27: iand
      28: ireturn
      29: iconst_m1
      30: ireturn

  public int peek() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #36                 // Method ensureBytes:(I)Z
       5: ifeq          22
       8: aload_0
       9: getfield      #24                 // Field buffer:[B
      12: aload_0
      13: getfield      #38                 // Field index:I
      16: baload
      17: sipush        255
      20: iand
      21: ireturn
      22: iconst_m1
      23: ireturn

  public byte readRaw();
    Code:
       0: aload_0
       1: getfield      #24                 // Field buffer:[B
       4: aload_0
       5: dup
       6: getfield      #38                 // Field index:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #38                 // Field index:I
      15: baload
      16: ireturn

  public boolean ensureBytes(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #43                 // Field endIndex:I
       5: isub
       6: aload_0
       7: getfield      #38                 // Field index:I
      10: iadd
      11: istore_2
      12: iload_2
      13: ifle          41
      16: aload_0
      17: iload_2
      18: invokespecial #46                 // Method readMore:(I)Z
      21: ifne          26
      24: iconst_0
      25: ireturn
      26: iload_1
      27: aload_0
      28: getfield      #43                 // Field endIndex:I
      31: isub
      32: aload_0
      33: getfield      #38                 // Field index:I
      36: iadd
      37: istore_2
      38: goto          12
      41: iconst_1
      42: ireturn

  private boolean readMore(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #43                 // Field endIndex:I
       4: aload_0
       5: getfield      #38                 // Field index:I
       8: if_icmpne     21
      11: aload_0
      12: iconst_0
      13: putfield      #38                 // Field index:I
      16: aload_0
      17: iconst_0
      18: putfield      #43                 // Field endIndex:I
      21: aload_0
      22: getfield      #24                 // Field buffer:[B
      25: arraylength
      26: aload_0
      27: getfield      #43                 // Field endIndex:I
      30: isub
      31: istore_2
      32: iload_2
      33: iload_1
      34: if_icmpge     73
      37: aload_0
      38: getfield      #38                 // Field index:I
      41: iload_2
      42: iadd
      43: iload_1
      44: sipush        1024
      47: iadd
      48: if_icmple     58
      51: aload_0
      52: invokespecial #51                 // Method compact:()V
      55: goto          62
      58: aload_0
      59: invokespecial #54                 // Method doubleBuffer:()V
      62: aload_0
      63: getfield      #24                 // Field buffer:[B
      66: arraylength
      67: aload_0
      68: getfield      #43                 // Field endIndex:I
      71: isub
      72: istore_2
      73: aload_0
      74: getfield      #22                 // Field wrapped:Ljava/io/InputStream;
      77: aload_0
      78: getfield      #24                 // Field buffer:[B
      81: aload_0
      82: getfield      #43                 // Field endIndex:I
      85: iload_2
      86: invokevirtual #57                 // Method java/io/InputStream.read:([BII)I
      89: istore_3
      90: iload_3
      91: ifge          96
      94: iconst_0
      95: ireturn
      96: aload_0
      97: dup
      98: getfield      #43                 // Field endIndex:I
     101: iload_3
     102: iadd
     103: putfield      #43                 // Field endIndex:I
     106: iconst_1
     107: ireturn

  private void doubleBuffer();
    Code:
       0: aload_0
       1: getfield      #24                 // Field buffer:[B
       4: arraylength
       5: iconst_2
       6: imul
       7: newarray       byte
       9: astore_1
      10: aload_0
      11: aload_1
      12: invokespecial #63                 // Method moveBufferTo:([B)V
      15: aload_0
      16: aload_1
      17: putfield      #24                 // Field buffer:[B
      20: return

  private void compact();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #24                 // Field buffer:[B
       5: invokespecial #63                 // Method moveBufferTo:([B)V
       8: return

  private void moveBufferTo(byte[]);
    Code:
       0: aload_0
       1: getfield      #43                 // Field endIndex:I
       4: aload_0
       5: getfield      #38                 // Field index:I
       8: isub
       9: istore_2
      10: aload_0
      11: getfield      #24                 // Field buffer:[B
      14: aload_0
      15: getfield      #38                 // Field index:I
      18: aload_1
      19: iconst_0
      20: iload_2
      21: invokestatic  #70                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: aload_0
      25: iconst_0
      26: putfield      #38                 // Field index:I
      29: aload_0
      30: iload_2
      31: putfield      #43                 // Field endIndex:I
      34: return

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: iload_3
       2: ior
       3: iload_2
       4: iload_3
       5: iadd
       6: ior
       7: aload_1
       8: arraylength
       9: iload_2
      10: iload_3
      11: iadd
      12: isub
      13: ior
      14: ifge          25
      17: new           #74                 // class java/lang/IndexOutOfBoundsException
      20: dup
      21: invokespecial #75                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      24: athrow
      25: iload_3
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: getfield      #43                 // Field endIndex:I
      35: aload_0
      36: getfield      #38                 // Field index:I
      39: isub
      40: istore        4
      42: iload_3
      43: iload         4
      45: isub
      46: sipush        1024
      49: if_icmpge     69
      52: aload_0
      53: iload_3
      54: invokevirtual #36                 // Method ensureBytes:(I)Z
      57: pop
      58: aload_0
      59: getfield      #43                 // Field endIndex:I
      62: aload_0
      63: getfield      #38                 // Field index:I
      66: isub
      67: istore        4
      69: iload         4
      71: ifle          131
      74: iload_3
      75: iload         4
      77: if_icmpgt     106
      80: aload_0
      81: getfield      #24                 // Field buffer:[B
      84: aload_0
      85: getfield      #38                 // Field index:I
      88: aload_1
      89: iload_2
      90: iload_3
      91: invokestatic  #70                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      94: aload_0
      95: dup
      96: getfield      #38                 // Field index:I
      99: iload_3
     100: iadd
     101: putfield      #38                 // Field index:I
     104: iload_3
     105: ireturn
     106: aload_0
     107: getfield      #24                 // Field buffer:[B
     110: aload_0
     111: getfield      #38                 // Field index:I
     114: aload_1
     115: iload_2
     116: iload         4
     118: invokestatic  #70                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     121: iload_3
     122: iload         4
     124: isub
     125: istore_3
     126: iload_2
     127: iload         4
     129: iadd
     130: istore_2
     131: iload         4
     133: istore        5
     135: aload_0
     136: iconst_0
     137: putfield      #38                 // Field index:I
     140: aload_0
     141: iconst_0
     142: putfield      #43                 // Field endIndex:I
     145: aload_0
     146: getfield      #22                 // Field wrapped:Ljava/io/InputStream;
     149: aload_1
     150: iload_2
     151: iload_3
     152: invokevirtual #57                 // Method java/io/InputStream.read:([BII)I
     155: istore        6
     157: iload         6
     159: ifgt          175
     162: iload         5
     164: ifne          172
     167: iload         6
     169: goto          174
     172: iload         5
     174: ireturn
     175: iload         5
     177: iload         6
     179: iadd
     180: istore        5
     182: iload_2
     183: iload         6
     185: iadd
     186: istore_2
     187: iload_3
     188: iload         6
     190: isub
     191: istore_3
     192: iload_3
     193: ifgt          145
     196: iload         5
     198: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #43                 // Field endIndex:I
       4: aload_0
       5: getfield      #38                 // Field index:I
       8: isub
       9: istore_3
      10: iload_3
      11: i2l
      12: lload_1
      13: lcmp
      14: iflt          31
      17: aload_0
      18: dup
      19: getfield      #38                 // Field index:I
      22: i2l
      23: lload_1
      24: ladd
      25: l2i
      26: putfield      #38                 // Field index:I
      29: lload_1
      30: lreturn
      31: lload_1
      32: iload_3
      33: i2l
      34: lsub
      35: lstore_1
      36: aload_0
      37: iconst_0
      38: putfield      #38                 // Field index:I
      41: aload_0
      42: iconst_0
      43: putfield      #43                 // Field endIndex:I
      46: iload_3
      47: i2l
      48: aload_0
      49: getfield      #22                 // Field wrapped:Ljava/io/InputStream;
      52: lload_1
      53: invokevirtual #84                 // Method java/io/InputStream.skip:(J)J
      56: ladd
      57: lreturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #43                 // Field endIndex:I
       4: aload_0
       5: getfield      #38                 // Field index:I
       8: isub
       9: istore_1
      10: iload_1
      11: ifle          18
      14: iload_1
      15: goto          25
      18: aload_0
      19: getfield      #22                 // Field wrapped:Ljava/io/InputStream;
      22: invokevirtual #88                 // Method java/io/InputStream.available:()I
      25: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field wrapped:Ljava/io/InputStream;
       4: invokevirtual #91                 // Method java/io/InputStream.close:()V
       7: return

  public byte[] getBuffer();
    Code:
       0: aload_0
       1: getfield      #24                 // Field buffer:[B
       4: areturn

  public int getIndex();
    Code:
       0: aload_0
       1: getfield      #38                 // Field index:I
       4: ireturn

  public int scanCStringLength() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #38                 // Field index:I
       4: istore_1
       5: iload_1
       6: aload_0
       7: getfield      #43                 // Field endIndex:I
      10: if_icmpge     32
      13: aload_0
      14: getfield      #24                 // Field buffer:[B
      17: iload_1
      18: iinc          1, 1
      21: baload
      22: ifne          5
      25: iload_1
      26: aload_0
      27: getfield      #38                 // Field index:I
      30: isub
      31: ireturn
      32: aload_0
      33: sipush        1024
      36: invokespecial #46                 // Method readMore:(I)Z
      39: ifne          50
      42: new           #97                 // class java/io/EOFException
      45: dup
      46: invokespecial #98                 // Method java/io/EOFException."<init>":()V
      49: athrow
      50: aload_0
      51: getfield      #38                 // Field index:I
      54: istore_1
      55: goto          5
}
