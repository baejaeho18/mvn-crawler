Compiled from "PgConnection.java"
public class org.postgresql.jdbc.PgConnection implements org.postgresql.core.BaseConnection {
  private static final java.util.logging.Logger LOGGER;

  private static final java.sql.SQLPermission SQL_PERMISSION_ABORT;

  private static final java.sql.SQLPermission SQL_PERMISSION_NETWORK_TIMEOUT;

  private final java.util.Properties _clientInfo;

  private final java.lang.String creatingURL;

  private java.lang.Throwable openStackTrace;

  private final org.postgresql.core.QueryExecutor queryExecutor;

  private final org.postgresql.core.Query commitQuery;

  private final org.postgresql.core.Query rollbackQuery;

  private final org.postgresql.core.TypeInfo _typeCache;

  private boolean disableColumnSanitiser;

  protected int prepareThreshold;

  protected int defaultFetchSize;

  protected boolean forcebinary;

  private int rsHoldability;

  private int savepointId;

  private boolean autoCommit;

  private boolean readOnly;

  private final boolean bindStringAsVarchar;

  private java.sql.SQLWarning firstWarning;

  private volatile java.util.Timer cancelTimer;

  private java.sql.PreparedStatement checkConnectionQuery;

  private final boolean replicationConnection;

  private final org.postgresql.util.LruCache<org.postgresql.jdbc.FieldMetadata$Key, org.postgresql.jdbc.FieldMetadata> fieldMetadataCache;

  private final org.postgresql.jdbc.TimestampUtils timestampUtils;

  protected java.util.Map<java.lang.String, java.lang.Class<?>> typemap;

  private org.postgresql.fastpath.Fastpath fastpath;

  private org.postgresql.largeobject.LargeObjectManager largeobject;

  protected java.sql.DatabaseMetaData metadata;

  private org.postgresql.copy.CopyManager copyManager;

  final org.postgresql.core.CachedQuery borrowQuery(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: aload_1
       5: invokeinterface #87,  2           // InterfaceMethod org/postgresql/core/QueryExecutor.borrowQuery:(Ljava/lang/String;)Lorg/postgresql/core/CachedQuery;
      10: areturn

  final org.postgresql.core.CachedQuery borrowCallableQuery(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: aload_1
       5: invokeinterface #93,  2           // InterfaceMethod org/postgresql/core/QueryExecutor.borrowCallableQuery:(Ljava/lang/String;)Lorg/postgresql/core/CachedQuery;
      10: areturn

  private org.postgresql.core.CachedQuery borrowReturningQuery(java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: aload_1
       5: aload_2
       6: invokeinterface #97,  3           // InterfaceMethod org/postgresql/core/QueryExecutor.borrowReturningQuery:(Ljava/lang/String;[Ljava/lang/String;)Lorg/postgresql/core/CachedQuery;
      11: areturn

  public org.postgresql.core.CachedQuery createQuery(java.lang.String, boolean, boolean, java.lang.String...) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: aload_1
       5: iload_2
       6: iload_3
       7: aload         4
       9: invokeinterface #103,  5          // InterfaceMethod org/postgresql/core/QueryExecutor.createQuery:(Ljava/lang/String;ZZ[Ljava/lang/String;)Lorg/postgresql/core/CachedQuery;
      14: areturn

  void releaseQuery(org.postgresql.core.CachedQuery);
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: aload_1
       5: invokeinterface #109,  2          // InterfaceMethod org/postgresql/core/QueryExecutor.releaseQuery:(Lorg/postgresql/core/CachedQuery;)V
      10: return

  public void setFlushCacheOnDeallocate(boolean);
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: iload_1
       5: invokeinterface #115,  2          // InterfaceMethod org/postgresql/core/QueryExecutor.setFlushCacheOnDeallocate:(Z)V
      10: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
      13: getstatic     #123                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      16: ldc           #125                // String   setFlushCacheOnDeallocate = {0}
      18: iload_1
      19: invokestatic  #131                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      22: invokevirtual #137                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      25: return

  public org.postgresql.jdbc.PgConnection(org.postgresql.util.HostSpec[], java.lang.String, java.lang.String, java.util.Properties, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #143                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #145                // Field disableColumnSanitiser:Z
       9: aload_0
      10: iconst_0
      11: putfield      #147                // Field forcebinary:Z
      14: aload_0
      15: iconst_2
      16: putfield      #149                // Field rsHoldability:I
      19: aload_0
      20: iconst_0
      21: putfield      #151                // Field savepointId:I
      24: aload_0
      25: iconst_1
      26: putfield      #153                // Field autoCommit:Z
      29: aload_0
      30: iconst_0
      31: putfield      #155                // Field readOnly:Z
      34: aload_0
      35: aconst_null
      36: putfield      #157                // Field firstWarning:Ljava/sql/SQLWarning;
      39: aload_0
      40: aconst_null
      41: putfield      #159                // Field cancelTimer:Ljava/util/Timer;
      44: aload_0
      45: aconst_null
      46: putfield      #161                // Field fastpath:Lorg/postgresql/fastpath/Fastpath;
      49: aload_0
      50: aconst_null
      51: putfield      #163                // Field largeobject:Lorg/postgresql/largeobject/LargeObjectManager;
      54: aload_0
      55: aconst_null
      56: putfield      #165                // Field copyManager:Lorg/postgresql/copy/CopyManager;
      59: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
      62: getstatic     #123                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      65: ldc           #167                // String PostgreSQL JDBC Driver 42.2.2
      67: invokevirtual #170                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      70: aload_0
      71: aload         5
      73: putfield      #172                // Field creatingURL:Ljava/lang/String;
      76: aload_0
      77: getstatic     #178                // Field org/postgresql/PGProperty.DEFAULT_ROW_FETCH_SIZE:Lorg/postgresql/PGProperty;
      80: aload         4
      82: invokevirtual #182                // Method org/postgresql/PGProperty.getInt:(Ljava/util/Properties;)I
      85: invokevirtual #186                // Method setDefaultFetchSize:(I)V
      88: aload_0
      89: getstatic     #189                // Field org/postgresql/PGProperty.PREPARE_THRESHOLD:Lorg/postgresql/PGProperty;
      92: aload         4
      94: invokevirtual #182                // Method org/postgresql/PGProperty.getInt:(Ljava/util/Properties;)I
      97: invokevirtual #192                // Method setPrepareThreshold:(I)V
     100: aload_0
     101: getfield      #194                // Field prepareThreshold:I
     104: iconst_m1
     105: if_icmpne     113
     108: aload_0
     109: iconst_1
     110: invokevirtual #197                // Method setForceBinary:(Z)V
     113: aload_0
     114: aload_1
     115: aload_2
     116: aload_3
     117: aload         4
     119: invokestatic  #209                // Method org/postgresql/core/ConnectionFactory.openConnection:([Lorg/postgresql/util/HostSpec;Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)Lorg/postgresql/core/QueryExecutor;
     122: putfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
     125: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
     128: getstatic     #212                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
     131: invokevirtual #216                // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
     134: ifeq          167
     137: aload_0
     138: getstatic     #222                // Field org/postgresql/core/ServerVersion.v8_2:Lorg/postgresql/core/ServerVersion;
     141: invokevirtual #226                // Method haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
     144: ifne          167
     147: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
     150: getstatic     #212                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
     153: ldc           #228                // String Unsupported Server Version: {0}
     155: aload_0
     156: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
     159: invokeinterface #232,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getServerVersion:()Ljava/lang/String;
     164: invokevirtual #137                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     167: getstatic     #235                // Field org/postgresql/PGProperty.READ_ONLY:Lorg/postgresql/PGProperty;
     170: aload         4
     172: invokevirtual #239                // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
     175: ifeq          183
     178: aload_0
     179: iconst_1
     180: invokevirtual #242                // Method setReadOnly:(Z)V
     183: getstatic     #245                // Field org/postgresql/PGProperty.BINARY_TRANSFER:Lorg/postgresql/PGProperty;
     186: aload         4
     188: invokevirtual #239                // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
     191: istore        6
     193: new           #247                // class java/util/HashSet
     196: dup
     197: invokespecial #248                // Method java/util/HashSet."<init>":()V
     200: astore        7
     202: iload         6
     204: ifeq          524
     207: aload_0
     208: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
     211: invokeinterface #252,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getProtocolVersion:()I
     216: iconst_3
     217: if_icmplt     524
     220: aload         7
     222: bipush        17
     224: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     227: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     232: pop
     233: aload         7
     235: bipush        21
     237: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     240: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     245: pop
     246: aload         7
     248: bipush        23
     250: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     253: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     258: pop
     259: aload         7
     261: bipush        20
     263: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     266: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     271: pop
     272: aload         7
     274: sipush        700
     277: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     280: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     285: pop
     286: aload         7
     288: sipush        701
     291: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     294: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     299: pop
     300: aload         7
     302: sipush        1083
     305: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     308: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     313: pop
     314: aload         7
     316: sipush        1082
     319: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     322: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     327: pop
     328: aload         7
     330: sipush        1266
     333: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     336: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     341: pop
     342: aload         7
     344: sipush        1114
     347: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     350: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     355: pop
     356: aload         7
     358: sipush        1184
     361: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     364: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     369: pop
     370: aload         7
     372: sipush        1005
     375: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     378: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     383: pop
     384: aload         7
     386: sipush        1007
     389: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     392: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     397: pop
     398: aload         7
     400: sipush        1016
     403: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     406: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     411: pop
     412: aload         7
     414: sipush        1021
     417: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     420: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     425: pop
     426: aload         7
     428: sipush        1022
     431: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     434: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     439: pop
     440: aload         7
     442: sipush        1022
     445: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     448: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     453: pop
     454: aload         7
     456: sipush        1015
     459: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     462: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     467: pop
     468: aload         7
     470: sipush        1009
     473: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     476: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     481: pop
     482: aload         7
     484: sipush        600
     487: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     490: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     495: pop
     496: aload         7
     498: sipush        603
     501: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     504: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     509: pop
     510: aload         7
     512: sipush        2950
     515: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     518: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     523: pop
     524: aload         7
     526: aload_0
     527: getstatic     #266                // Field org/postgresql/PGProperty.BINARY_TRANSFER_ENABLE:Lorg/postgresql/PGProperty;
     530: aload         4
     532: invokevirtual #270                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
     535: invokespecial #274                // Method getOidSet:(Ljava/lang/String;)Ljava/util/Set;
     538: invokeinterface #278,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     543: pop
     544: aload         7
     546: aload_0
     547: getstatic     #281                // Field org/postgresql/PGProperty.BINARY_TRANSFER_DISABLE:Lorg/postgresql/PGProperty;
     550: aload         4
     552: invokevirtual #270                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
     555: invokespecial #274                // Method getOidSet:(Ljava/lang/String;)Ljava/util/Set;
     558: invokeinterface #284,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
     563: pop
     564: new           #247                // class java/util/HashSet
     567: dup
     568: invokespecial #248                // Method java/util/HashSet."<init>":()V
     571: astore        8
     573: aload         8
     575: aload         7
     577: invokeinterface #278,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     582: pop
     583: new           #247                // class java/util/HashSet
     586: dup
     587: invokespecial #248                // Method java/util/HashSet."<init>":()V
     590: astore        9
     592: aload         9
     594: aload         7
     596: invokeinterface #278,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     601: pop
     602: aload         8
     604: sipush        1082
     607: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     610: invokeinterface #287,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     615: pop
     616: aload_0
     617: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
     620: aload         9
     622: invokeinterface #291,  2          // InterfaceMethod org/postgresql/core/QueryExecutor.setBinaryReceiveOids:(Ljava/util/Set;)V
     627: aload_0
     628: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
     631: aload         8
     633: invokeinterface #294,  2          // InterfaceMethod org/postgresql/core/QueryExecutor.setBinarySendOids:(Ljava/util/Set;)V
     638: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
     641: getstatic     #297                // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
     644: invokevirtual #216                // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
     647: ifeq          710
     650: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
     653: getstatic     #297                // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
     656: ldc_w         #299                // String     types using binary send = {0}
     659: aload_0
     660: aload         8
     662: invokespecial #303                // Method oidsToString:(Ljava/util/Set;)Ljava/lang/String;
     665: invokevirtual #137                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     668: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
     671: getstatic     #297                // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
     674: ldc_w         #305                // String     types using binary receive = {0}
     677: aload_0
     678: aload         9
     680: invokespecial #303                // Method oidsToString:(Ljava/util/Set;)Ljava/lang/String;
     683: invokevirtual #137                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     686: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
     689: getstatic     #297                // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
     692: ldc_w         #307                // String     integer date/time = {0}
     695: aload_0
     696: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
     699: invokeinterface #311,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getIntegerDateTimes:()Z
     704: invokestatic  #131                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     707: invokevirtual #137                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     710: getstatic     #314                // Field org/postgresql/PGProperty.STRING_TYPE:Lorg/postgresql/PGProperty;
     713: aload         4
     715: invokevirtual #270                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
     718: astore        10
     720: aload         10
     722: ifnull        789
     725: aload         10
     727: ldc_w         #316                // String unspecified
     730: invokevirtual #320                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     733: ifeq          744
     736: aload_0
     737: iconst_0
     738: putfield      #322                // Field bindStringAsVarchar:Z
     741: goto          794
     744: aload         10
     746: ldc_w         #324                // String varchar
     749: invokevirtual #320                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     752: ifeq          763
     755: aload_0
     756: iconst_1
     757: putfield      #322                // Field bindStringAsVarchar:Z
     760: goto          794
     763: new           #326                // class org/postgresql/util/PSQLException
     766: dup
     767: ldc_w         #328                // String Unsupported value for stringtype parameter: {0}
     770: iconst_1
     771: anewarray     #4                  // class java/lang/Object
     774: dup
     775: iconst_0
     776: aload         10
     778: aastore
     779: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     782: getstatic     #340                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
     785: invokespecial #343                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     788: athrow
     789: aload_0
     790: iconst_1
     791: putfield      #322                // Field bindStringAsVarchar:Z
     794: aload_0
     795: new           #345                // class org/postgresql/jdbc/TimestampUtils
     798: dup
     799: aload_0
     800: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
     803: invokeinterface #311,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getIntegerDateTimes:()Z
     808: ifne          815
     811: iconst_1
     812: goto          816
     815: iconst_0
     816: new           #15                 // class org/postgresql/jdbc/PgConnection$1
     819: dup
     820: aload_0
     821: invokespecial #348                // Method org/postgresql/jdbc/PgConnection$1."<init>":(Lorg/postgresql/jdbc/PgConnection;)V
     824: invokespecial #351                // Method org/postgresql/jdbc/TimestampUtils."<init>":(ZLorg/postgresql/core/Provider;)V
     827: putfield      #353                // Field timestampUtils:Lorg/postgresql/jdbc/TimestampUtils;
     830: aload_0
     831: aload_0
     832: ldc_w         #355                // String COMMIT
     835: iconst_0
     836: iconst_1
     837: iconst_0
     838: anewarray     #201                // class java/lang/String
     841: invokevirtual #356                // Method createQuery:(Ljava/lang/String;ZZ[Ljava/lang/String;)Lorg/postgresql/core/CachedQuery;
     844: getfield      #361                // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
     847: putfield      #363                // Field commitQuery:Lorg/postgresql/core/Query;
     850: aload_0
     851: aload_0
     852: ldc_w         #365                // String ROLLBACK
     855: iconst_0
     856: iconst_1
     857: iconst_0
     858: anewarray     #201                // class java/lang/String
     861: invokevirtual #356                // Method createQuery:(Ljava/lang/String;ZZ[Ljava/lang/String;)Lorg/postgresql/core/CachedQuery;
     864: getfield      #361                // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
     867: putfield      #367                // Field rollbackQuery:Lorg/postgresql/core/Query;
     870: getstatic     #370                // Field org/postgresql/PGProperty.UNKNOWN_LENGTH:Lorg/postgresql/PGProperty;
     873: aload         4
     875: invokevirtual #182                // Method org/postgresql/PGProperty.getInt:(Ljava/util/Properties;)I
     878: istore        11
     880: aload_0
     881: aload_0
     882: aload_0
     883: iload         11
     885: invokevirtual #374                // Method createTypeInfo:(Lorg/postgresql/core/BaseConnection;I)Lorg/postgresql/core/TypeInfo;
     888: putfield      #376                // Field _typeCache:Lorg/postgresql/core/TypeInfo;
     891: aload_0
     892: aload         4
     894: invokespecial #380                // Method initObjectTypes:(Ljava/util/Properties;)V
     897: getstatic     #383                // Field org/postgresql/PGProperty.LOG_UNCLOSED_CONNECTIONS:Lorg/postgresql/PGProperty;
     900: aload         4
     902: invokevirtual #239                // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
     905: ifeq          922
     908: aload_0
     909: new           #385                // class java/lang/Throwable
     912: dup
     913: ldc_w         #387                // String Connection was created at this point:
     916: invokespecial #390                // Method java/lang/Throwable."<init>":(Ljava/lang/String;)V
     919: putfield      #392                // Field openStackTrace:Ljava/lang/Throwable;
     922: aload_0
     923: getstatic     #395                // Field org/postgresql/PGProperty.DISABLE_COLUMN_SANITISER:Lorg/postgresql/PGProperty;
     926: aload         4
     928: invokevirtual #239                // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
     931: putfield      #145                // Field disableColumnSanitiser:Z
     934: aload_0
     935: invokevirtual #399                // Method getTypeInfo:()Lorg/postgresql/core/TypeInfo;
     938: astore        12
     940: aload_0
     941: getstatic     #402                // Field org/postgresql/core/ServerVersion.v8_3:Lorg/postgresql/core/ServerVersion;
     944: invokevirtual #226                // Method haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
     947: ifeq          981
     950: aload         12
     952: ldc_w         #404                // String uuid
     955: sipush        2950
     958: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     961: sipush        1111
     964: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     967: ldc_w         #406                // String java.util.UUID
     970: sipush        2951
     973: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     976: invokeinterface #412,  6          // InterfaceMethod org/postgresql/core/TypeInfo.addCoreType:(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;)V
     981: aload_0
     982: invokevirtual #399                // Method getTypeInfo:()Lorg/postgresql/core/TypeInfo;
     985: astore        13
     987: aload_0
     988: getstatic     #402                // Field org/postgresql/core/ServerVersion.v8_3:Lorg/postgresql/core/ServerVersion;
     991: invokevirtual #226                // Method haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
     994: ifeq          1028
     997: aload         13
     999: ldc_w         #414                // String xml
    1002: sipush        142
    1005: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1008: sipush        2009
    1011: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1014: ldc_w         #416                // String java.sql.SQLXML
    1017: sipush        143
    1020: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1023: invokeinterface #412,  6          // InterfaceMethod org/postgresql/core/TypeInfo.addCoreType:(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;)V
    1028: aload_0
    1029: new           #203                // class java/util/Properties
    1032: dup
    1033: invokespecial #417                // Method java/util/Properties."<init>":()V
    1036: putfield      #419                // Field _clientInfo:Ljava/util/Properties;
    1039: aload_0
    1040: getstatic     #422                // Field org/postgresql/core/ServerVersion.v9_0:Lorg/postgresql/core/ServerVersion;
    1043: invokevirtual #226                // Method haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
    1046: ifeq          1082
    1049: getstatic     #425                // Field org/postgresql/PGProperty.APPLICATION_NAME:Lorg/postgresql/PGProperty;
    1052: aload         4
    1054: invokevirtual #270                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
    1057: astore        14
    1059: aload         14
    1061: ifnonnull     1069
    1064: ldc_w         #427                // String
    1067: astore        14
    1069: aload_0
    1070: getfield      #419                // Field _clientInfo:Ljava/util/Properties;
    1073: ldc_w         #429                // String ApplicationName
    1076: aload         14
    1078: invokevirtual #433                // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1081: pop
    1082: aload_0
    1083: new           #435                // class org/postgresql/util/LruCache
    1086: dup
    1087: iconst_0
    1088: getstatic     #438                // Field org/postgresql/PGProperty.DATABASE_METADATA_CACHE_FIELDS:Lorg/postgresql/PGProperty;
    1091: aload         4
    1093: invokevirtual #182                // Method org/postgresql/PGProperty.getInt:(Ljava/util/Properties;)I
    1096: invokestatic  #444                // Method java/lang/Math.max:(II)I
    1099: iconst_0
    1100: getstatic     #447                // Field org/postgresql/PGProperty.DATABASE_METADATA_CACHE_FIELDS_MIB:Lorg/postgresql/PGProperty;
    1103: aload         4
    1105: invokevirtual #182                // Method org/postgresql/PGProperty.getInt:(Ljava/util/Properties;)I
    1108: sipush        1024
    1111: imul
    1112: sipush        1024
    1115: imul
    1116: invokestatic  #444                // Method java/lang/Math.max:(II)I
    1119: i2l
    1120: iconst_0
    1121: invokespecial #450                // Method org/postgresql/util/LruCache."<init>":(IJZ)V
    1124: putfield      #452                // Field fieldMetadataCache:Lorg/postgresql/util/LruCache;
    1127: aload_0
    1128: getstatic     #455                // Field org/postgresql/PGProperty.REPLICATION:Lorg/postgresql/PGProperty;
    1131: aload         4
    1133: invokevirtual #270                // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
    1136: ifnull        1143
    1139: iconst_1
    1140: goto          1144
    1143: iconst_0
    1144: putfield      #457                // Field replicationConnection:Z
    1147: return

  private java.util.Set<java.lang.Integer> getOidSet(java.lang.String) throws org.postgresql.util.PSQLException;
    Code:
       0: new           #247                // class java/util/HashSet
       3: dup
       4: invokespecial #248                // Method java/util/HashSet."<init>":()V
       7: astore_2
       8: new           #475                // class java/util/StringTokenizer
      11: dup
      12: aload_1
      13: ldc_w         #477                // String ,
      16: invokespecial #480                // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      19: astore_3
      20: aload_3
      21: invokevirtual #483                // Method java/util/StringTokenizer.hasMoreTokens:()Z
      24: ifeq          51
      27: aload_3
      28: invokevirtual #486                // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      31: astore        4
      33: aload_2
      34: aload         4
      36: invokestatic  #491                // Method org/postgresql/core/Oid.valueOf:(Ljava/lang/String;)I
      39: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      42: invokeinterface #263,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      47: pop
      48: goto          20
      51: aload_2
      52: areturn

  private java.lang.String oidsToString(java.util.Set<java.lang.Integer>);
    Code:
       0: new           #498                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #499                // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #503,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #508,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          58
      24: aload_3
      25: invokeinterface #512,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #254                // class java/lang/Integer
      33: astore        4
      35: aload_2
      36: aload         4
      38: invokevirtual #515                // Method java/lang/Integer.intValue:()I
      41: invokestatic  #519                // Method org/postgresql/core/Oid.toString:(I)Ljava/lang/String;
      44: invokevirtual #523                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: pop
      48: aload_2
      49: bipush        44
      51: invokevirtual #526                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      54: pop
      55: goto          15
      58: aload_2
      59: invokevirtual #529                // Method java/lang/StringBuilder.length:()I
      62: ifle          78
      65: aload_2
      66: aload_2
      67: invokevirtual #529                // Method java/lang/StringBuilder.length:()I
      70: iconst_1
      71: isub
      72: invokevirtual #532                // Method java/lang/StringBuilder.setLength:(I)V
      75: goto          86
      78: aload_2
      79: ldc_w         #534                // String  <none>
      82: invokevirtual #523                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: pop
      86: aload_2
      87: invokevirtual #536                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: areturn

  public org.postgresql.jdbc.TimestampUtils getTimestampUtils();
    Code:
       0: aload_0
       1: getfield      #353                // Field timestampUtils:Lorg/postgresql/jdbc/TimestampUtils;
       4: areturn

  public java.sql.Statement createStatement() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: sipush        1003
       4: sipush        1007
       7: invokevirtual #546                // Method createStatement:(II)Ljava/sql/Statement;
      10: areturn

  public java.sql.PreparedStatement prepareStatement(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        1003
       5: sipush        1007
       8: invokevirtual #551                // Method prepareStatement:(Ljava/lang/String;II)Ljava/sql/PreparedStatement;
      11: areturn

  public java.sql.CallableStatement prepareCall(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        1003
       5: sipush        1007
       8: invokevirtual #556                // Method prepareCall:(Ljava/lang/String;II)Ljava/sql/CallableStatement;
      11: areturn

  public java.util.Map<java.lang.String, java.lang.Class<?>> getTypeMap() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: getfield      #563                // Field typemap:Ljava/util/Map;
       8: areturn

  public org.postgresql.core.QueryExecutor getQueryExecutor();
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: areturn

  public org.postgresql.core.ReplicationProtocol getReplicationProtocol();
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #569,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getReplicationProtocol:()Lorg/postgresql/core/ReplicationProtocol;
       9: areturn

  public void addWarning(java.sql.SQLWarning);
    Code:
       0: aload_0
       1: getfield      #157                // Field firstWarning:Ljava/sql/SQLWarning;
       4: ifnull        18
       7: aload_0
       8: getfield      #157                // Field firstWarning:Ljava/sql/SQLWarning;
      11: aload_1
      12: invokevirtual #576                // Method java/sql/SQLWarning.setNextWarning:(Ljava/sql/SQLWarning;)V
      15: goto          23
      18: aload_0
      19: aload_1
      20: putfield      #157                // Field firstWarning:Ljava/sql/SQLWarning;
      23: return

  public java.sql.ResultSet execSQLQuery(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        1003
       5: sipush        1007
       8: invokevirtual #582                // Method execSQLQuery:(Ljava/lang/String;II)Ljava/sql/ResultSet;
      11: areturn

  public java.sql.ResultSet execSQLQuery(java.lang.String, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: invokevirtual #546                // Method createStatement:(II)Ljava/sql/Statement;
       6: checkcast     #585                // class org/postgresql/core/BaseStatement
       9: astore        4
      11: aload         4
      13: aload_1
      14: bipush        16
      16: invokeinterface #589,  3          // InterfaceMethod org/postgresql/core/BaseStatement.executeWithFlags:(Ljava/lang/String;I)Z
      21: istore        5
      23: iload         5
      25: ifne          51
      28: aload         4
      30: invokeinterface #592,  1          // InterfaceMethod org/postgresql/core/BaseStatement.getUpdateCount:()I
      35: iconst_m1
      36: if_icmpeq     51
      39: aload         4
      41: invokeinterface #595,  1          // InterfaceMethod org/postgresql/core/BaseStatement.getMoreResults:()Z
      46: istore        5
      48: goto          23
      51: iload         5
      53: ifne          77
      56: new           #326                // class org/postgresql/util/PSQLException
      59: dup
      60: ldc_w         #597                // String No results were returned by the query.
      63: iconst_0
      64: anewarray     #4                  // class java/lang/Object
      67: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      70: getstatic     #600                // Field org/postgresql/util/PSQLState.NO_DATA:Lorg/postgresql/util/PSQLState;
      73: invokespecial #343                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      76: athrow
      77: aload         4
      79: invokeinterface #604,  1          // InterfaceMethod org/postgresql/core/BaseStatement.getWarnings:()Ljava/sql/SQLWarning;
      84: astore        6
      86: aload         6
      88: ifnull        97
      91: aload_0
      92: aload         6
      94: invokevirtual #606                // Method addWarning:(Ljava/sql/SQLWarning;)V
      97: aload         4
      99: invokeinterface #610,  1          // InterfaceMethod org/postgresql/core/BaseStatement.getResultSet:()Ljava/sql/ResultSet;
     104: areturn

  public void execSQLUpdate(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #619                // Method createStatement:()Ljava/sql/Statement;
       4: checkcast     #585                // class org/postgresql/core/BaseStatement
       7: astore_2
       8: aload_2
       9: aload_1
      10: bipush        22
      12: invokeinterface #589,  3          // InterfaceMethod org/postgresql/core/BaseStatement.executeWithFlags:(Ljava/lang/String;I)Z
      17: ifeq          41
      20: new           #326                // class org/postgresql/util/PSQLException
      23: dup
      24: ldc_w         #621                // String A result was returned when none was expected.
      27: iconst_0
      28: anewarray     #4                  // class java/lang/Object
      31: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      34: getstatic     #624                // Field org/postgresql/util/PSQLState.TOO_MANY_RESULTS:Lorg/postgresql/util/PSQLState;
      37: invokespecial #343                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      40: athrow
      41: aload_2
      42: invokeinterface #604,  1          // InterfaceMethod org/postgresql/core/BaseStatement.getWarnings:()Ljava/sql/SQLWarning;
      47: astore_3
      48: aload_3
      49: ifnull        57
      52: aload_0
      53: aload_3
      54: invokevirtual #606                // Method addWarning:(Ljava/sql/SQLWarning;)V
      57: aload_2
      58: invokeinterface #627,  1          // InterfaceMethod org/postgresql/core/BaseStatement.close:()V
      63: return

  public void setCursorName(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: return

  public java.lang.String getCursorName() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aconst_null
       5: areturn

  public java.lang.String getURL() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #172                // Field creatingURL:Ljava/lang/String;
       4: areturn

  public java.lang.String getUserName() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #636,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getUser:()Ljava/lang/String;
       9: areturn

  public org.postgresql.fastpath.Fastpath getFastpathAPI() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: getfield      #161                // Field fastpath:Lorg/postgresql/fastpath/Fastpath;
       8: ifnonnull     23
      11: aload_0
      12: new           #640                // class org/postgresql/fastpath/Fastpath
      15: dup
      16: aload_0
      17: invokespecial #643                // Method org/postgresql/fastpath/Fastpath."<init>":(Lorg/postgresql/core/BaseConnection;)V
      20: putfield      #161                // Field fastpath:Lorg/postgresql/fastpath/Fastpath;
      23: aload_0
      24: getfield      #161                // Field fastpath:Lorg/postgresql/fastpath/Fastpath;
      27: areturn

  public org.postgresql.largeobject.LargeObjectManager getLargeObjectAPI() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: getfield      #163                // Field largeobject:Lorg/postgresql/largeobject/LargeObjectManager;
       8: ifnonnull     23
      11: aload_0
      12: new           #647                // class org/postgresql/largeobject/LargeObjectManager
      15: dup
      16: aload_0
      17: invokespecial #648                // Method org/postgresql/largeobject/LargeObjectManager."<init>":(Lorg/postgresql/core/BaseConnection;)V
      20: putfield      #163                // Field largeobject:Lorg/postgresql/largeobject/LargeObjectManager;
      23: aload_0
      24: getfield      #163                // Field largeobject:Lorg/postgresql/largeobject/LargeObjectManager;
      27: areturn

  public java.lang.Object getObject(java.lang.String, java.lang.String, byte[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #563                // Field typemap:Ljava/util/Map;
       4: ifnull        48
       7: aload_0
       8: getfield      #563                // Field typemap:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #655,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #657                // class java/lang/Class
      20: astore        4
      22: aload         4
      24: ifnull        48
      27: new           #326                // class org/postgresql/util/PSQLException
      30: dup
      31: ldc_w         #659                // String Custom type maps are not supported.
      34: iconst_0
      35: anewarray     #4                  // class java/lang/Object
      38: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      41: getstatic     #662                // Field org/postgresql/util/PSQLState.NOT_IMPLEMENTED:Lorg/postgresql/util/PSQLState;
      44: invokespecial #343                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      47: athrow
      48: aconst_null
      49: astore        4
      51: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
      54: getstatic     #297                // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      57: invokevirtual #216                // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      60: ifeq          87
      63: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
      66: getstatic     #297                // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      69: ldc_w         #664                // String Constructing object from type={0} value=<{1}>
      72: iconst_2
      73: anewarray     #4                  // class java/lang/Object
      76: dup
      77: iconst_0
      78: aload_1
      79: aastore
      80: dup
      81: iconst_1
      82: aload_2
      83: aastore
      84: invokevirtual #667                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V
      87: aload_0
      88: getfield      #376                // Field _typeCache:Lorg/postgresql/core/TypeInfo;
      91: aload_1
      92: invokeinterface #673,  2          // InterfaceMethod org/postgresql/core/TypeInfo.getPGobject:(Ljava/lang/String;)Ljava/lang/Class;
      97: astore        5
      99: aload         5
     101: ifnull        160
     104: aload         5
     106: invokevirtual #676                // Method java/lang/Class.newInstance:()Ljava/lang/Object;
     109: checkcast     #669                // class org/postgresql/util/PGobject
     112: astore        4
     114: aload         4
     116: aload_1
     117: invokevirtual #679                // Method org/postgresql/util/PGobject.setType:(Ljava/lang/String;)V
     120: aload_3
     121: ifnull        151
     124: aload         4
     126: instanceof    #681                // class org/postgresql/util/PGBinaryObject
     129: ifeq          151
     132: aload         4
     134: checkcast     #681                // class org/postgresql/util/PGBinaryObject
     137: astore        6
     139: aload         6
     141: aload_3
     142: iconst_0
     143: invokeinterface #685,  3          // InterfaceMethod org/postgresql/util/PGBinaryObject.setByteValue:([BI)V
     148: goto          181
     151: aload         4
     153: aload_2
     154: invokevirtual #688                // Method org/postgresql/util/PGobject.setValue:(Ljava/lang/String;)V
     157: goto          181
     160: new           #669                // class org/postgresql/util/PGobject
     163: dup
     164: invokespecial #689                // Method org/postgresql/util/PGobject."<init>":()V
     167: astore        4
     169: aload         4
     171: aload_1
     172: invokevirtual #679                // Method org/postgresql/util/PGobject.setType:(Ljava/lang/String;)V
     175: aload         4
     177: aload_2
     178: invokevirtual #688                // Method org/postgresql/util/PGobject.setValue:(Ljava/lang/String;)V
     181: aload         4
     183: areturn
     184: astore        5
     186: aload         5
     188: athrow
     189: astore        5
     191: new           #326                // class org/postgresql/util/PSQLException
     194: dup
     195: ldc_w         #693                // String Failed to create object for: {0}.
     198: iconst_1
     199: anewarray     #4                  // class java/lang/Object
     202: dup
     203: iconst_0
     204: aload_1
     205: aastore
     206: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     209: getstatic     #696                // Field org/postgresql/util/PSQLState.CONNECTION_FAILURE:Lorg/postgresql/util/PSQLState;
     212: aload         5
     214: invokespecial #699                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
     217: athrow
    Exception table:
       from    to  target type
          87   183   184   Class java/sql/SQLException
          87   183   189   Class java/lang/Exception

  protected org.postgresql.core.TypeInfo createTypeInfo(org.postgresql.core.BaseConnection, int);
    Code:
       0: new           #717                // class org/postgresql/jdbc/TypeInfoCache
       3: dup
       4: aload_1
       5: iload_2
       6: invokespecial #720                // Method org/postgresql/jdbc/TypeInfoCache."<init>":(Lorg/postgresql/core/BaseConnection;I)V
       9: areturn

  public org.postgresql.core.TypeInfo getTypeInfo();
    Code:
       0: aload_0
       1: getfield      #376                // Field _typeCache:Lorg/postgresql/core/TypeInfo;
       4: areturn

  public void addDataType(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #726                // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       6: ldc_w         #669                // class org/postgresql/util/PGobject
       9: invokevirtual #730                // Method java/lang/Class.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;
      12: invokevirtual #733                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      15: goto          47
      18: astore_3
      19: new           #735                // class java/lang/RuntimeException
      22: dup
      23: new           #498                // class java/lang/StringBuilder
      26: dup
      27: invokespecial #499                // Method java/lang/StringBuilder."<init>":()V
      30: ldc_w         #737                // String Cannot register new type:
      33: invokevirtual #523                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_3
      37: invokevirtual #740                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: invokevirtual #536                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #741                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/Exception

  public void addDataType(java.lang.String, java.lang.Class<? extends org.postgresql.util.PGobject>) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: getfield      #376                // Field _typeCache:Lorg/postgresql/core/TypeInfo;
       8: aload_1
       9: aload_2
      10: invokeinterface #744,  3          // InterfaceMethod org/postgresql/core/TypeInfo.addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      15: return

  private void initObjectTypes(java.util.Properties) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc_w         #748                // String box
       4: ldc_w         #750                // class org/postgresql/geometric/PGbox
       7: invokevirtual #733                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      10: aload_0
      11: ldc_w         #752                // String circle
      14: ldc_w         #754                // class org/postgresql/geometric/PGcircle
      17: invokevirtual #733                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      20: aload_0
      21: ldc_w         #756                // String line
      24: ldc_w         #758                // class org/postgresql/geometric/PGline
      27: invokevirtual #733                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      30: aload_0
      31: ldc_w         #760                // String lseg
      34: ldc_w         #762                // class org/postgresql/geometric/PGlseg
      37: invokevirtual #733                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      40: aload_0
      41: ldc_w         #764                // String path
      44: ldc_w         #766                // class org/postgresql/geometric/PGpath
      47: invokevirtual #733                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      50: aload_0
      51: ldc_w         #768                // String point
      54: ldc_w         #770                // class org/postgresql/geometric/PGpoint
      57: invokevirtual #733                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      60: aload_0
      61: ldc_w         #772                // String polygon
      64: ldc_w         #774                // class org/postgresql/geometric/PGpolygon
      67: invokevirtual #733                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      70: aload_0
      71: ldc_w         #776                // String money
      74: ldc_w         #778                // class org/postgresql/util/PGmoney
      77: invokevirtual #733                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      80: aload_0
      81: ldc_w         #780                // String interval
      84: ldc_w         #782                // class org/postgresql/util/PGInterval
      87: invokevirtual #733                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      90: aload_1
      91: invokevirtual #786                // Method java/util/Properties.propertyNames:()Ljava/util/Enumeration;
      94: astore_2
      95: aload_2
      96: invokeinterface #791,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
     101: ifeq          201
     104: aload_2
     105: invokeinterface #794,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
     110: checkcast     #201                // class java/lang/String
     113: astore_3
     114: aload_3
     115: ldc_w         #796                // String datatype.
     118: invokevirtual #799                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     121: ifeq          198
     124: aload_3
     125: bipush        9
     127: invokevirtual #802                // Method java/lang/String.substring:(I)Ljava/lang/String;
     130: astore        4
     132: aload_1
     133: aload_3
     134: invokevirtual #806                // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     137: astore        5
     139: aload         5
     141: invokestatic  #726                // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
     144: astore        6
     146: goto          184
     149: astore        7
     151: new           #326                // class org/postgresql/util/PSQLException
     154: dup
     155: ldc_w         #808                // String Unable to load the class {0} responsible for the datatype {1}
     158: iconst_2
     159: anewarray     #4                  // class java/lang/Object
     162: dup
     163: iconst_0
     164: aload         5
     166: aastore
     167: dup
     168: iconst_1
     169: aload         4
     171: aastore
     172: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     175: getstatic     #811                // Field org/postgresql/util/PSQLState.SYSTEM_ERROR:Lorg/postgresql/util/PSQLState;
     178: aload         7
     180: invokespecial #699                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
     183: athrow
     184: aload_0
     185: aload         4
     187: aload         6
     189: ldc_w         #669                // class org/postgresql/util/PGobject
     192: invokevirtual #730                // Method java/lang/Class.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;
     195: invokevirtual #733                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
     198: goto          95
     201: return
    Exception table:
       from    to  target type
         139   146   149   Class java/lang/ClassNotFoundException

  public void close() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #821                // Method releaseTimer:()V
       4: aload_0
       5: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       8: invokeinterface #822,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.close:()V
      13: aload_0
      14: aconst_null
      15: putfield      #392                // Field openStackTrace:Ljava/lang/Throwable;
      18: return

  public java.lang.String nativeSQL(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       8: aload_1
       9: iconst_0
      10: iconst_1
      11: iconst_0
      12: anewarray     #201                // class java/lang/String
      15: invokeinterface #103,  5          // InterfaceMethod org/postgresql/core/QueryExecutor.createQuery:(Ljava/lang/String;ZZ[Ljava/lang/String;)Lorg/postgresql/core/CachedQuery;
      20: astore_2
      21: aload_2
      22: getfield      #361                // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      25: invokeinterface #828,  1          // InterfaceMethod org/postgresql/core/Query.getNativeSql:()Ljava/lang/String;
      30: areturn

  public synchronized java.sql.SQLWarning getWarnings() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       8: invokeinterface #829,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getWarnings:()Ljava/sql/SQLWarning;
      13: astore_1
      14: aload_0
      15: getfield      #157                // Field firstWarning:Ljava/sql/SQLWarning;
      18: ifnonnull     29
      21: aload_0
      22: aload_1
      23: putfield      #157                // Field firstWarning:Ljava/sql/SQLWarning;
      26: goto          37
      29: aload_0
      30: getfield      #157                // Field firstWarning:Ljava/sql/SQLWarning;
      33: aload_1
      34: invokevirtual #576                // Method java/sql/SQLWarning.setNextWarning:(Ljava/sql/SQLWarning;)V
      37: aload_0
      38: getfield      #157                // Field firstWarning:Ljava/sql/SQLWarning;
      41: areturn

  public synchronized void clearWarnings() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       8: invokeinterface #829,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getWarnings:()Ljava/sql/SQLWarning;
      13: pop
      14: aload_0
      15: aconst_null
      16: putfield      #157                // Field firstWarning:Ljava/sql/SQLWarning;
      19: return

  public void setReadOnly(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       8: invokeinterface #835,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getTransactionState:()Lorg/postgresql/core/TransactionState;
      13: getstatic     #841                // Field org/postgresql/core/TransactionState.IDLE:Lorg/postgresql/core/TransactionState;
      16: if_acmpeq     40
      19: new           #326                // class org/postgresql/util/PSQLException
      22: dup
      23: ldc_w         #843                // String Cannot change transaction read-only property in the middle of a transaction.
      26: iconst_0
      27: anewarray     #4                  // class java/lang/Object
      30: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: getstatic     #846                // Field org/postgresql/util/PSQLState.ACTIVE_SQL_TRANSACTION:Lorg/postgresql/util/PSQLState;
      36: invokespecial #343                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      39: athrow
      40: iload_1
      41: aload_0
      42: getfield      #155                // Field readOnly:Z
      45: if_icmpeq     86
      48: new           #498                // class java/lang/StringBuilder
      51: dup
      52: invokespecial #499                // Method java/lang/StringBuilder."<init>":()V
      55: ldc_w         #848                // String SET SESSION CHARACTERISTICS AS TRANSACTION
      58: invokevirtual #523                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: iload_1
      62: ifeq          71
      65: ldc_w         #850                // String READ ONLY
      68: goto          74
      71: ldc_w         #852                // String READ WRITE
      74: invokevirtual #523                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #536                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: astore_2
      81: aload_0
      82: aload_2
      83: invokevirtual #854                // Method execSQLUpdate:(Ljava/lang/String;)V
      86: aload_0
      87: iload_1
      88: putfield      #155                // Field readOnly:Z
      91: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
      94: getstatic     #123                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      97: ldc_w         #856                // String   setReadOnly = {0}
     100: iload_1
     101: invokestatic  #131                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     104: invokevirtual #137                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     107: return

  public boolean isReadOnly() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: getfield      #155                // Field readOnly:Z
       8: ireturn

  public void setAutoCommit(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: getfield      #153                // Field autoCommit:Z
       8: iload_1
       9: if_icmpne     13
      12: return
      13: aload_0
      14: getfield      #153                // Field autoCommit:Z
      17: ifne          24
      20: aload_0
      21: invokevirtual #862                // Method commit:()V
      24: aload_0
      25: iload_1
      26: putfield      #153                // Field autoCommit:Z
      29: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
      32: getstatic     #123                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      35: ldc_w         #864                // String   setAutoCommit = {0}
      38: iload_1
      39: invokestatic  #131                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      42: invokevirtual #137                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      45: return

  public boolean getAutoCommit() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: getfield      #153                // Field autoCommit:Z
       8: ireturn

  private void executeTransactionCommand(org.postgresql.core.Query) throws java.sql.SQLException;
    Code:
       0: bipush        22
       2: istore_2
       3: aload_0
       4: getfield      #194                // Field prepareThreshold:I
       7: ifne          14
      10: iload_2
      11: iconst_1
      12: ior
      13: istore_2
      14: aload_0
      15: invokevirtual #869                // Method getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
      18: aload_1
      19: aconst_null
      20: new           #12                 // class org/postgresql/jdbc/PgConnection$TransactionCommandHandler
      23: dup
      24: aload_0
      25: aconst_null
      26: invokespecial #872                // Method org/postgresql/jdbc/PgConnection$TransactionCommandHandler."<init>":(Lorg/postgresql/jdbc/PgConnection;Lorg/postgresql/jdbc/PgConnection$1;)V
      29: iconst_0
      30: iconst_0
      31: iload_2
      32: invokeinterface #876,  7          // InterfaceMethod org/postgresql/core/QueryExecutor.execute:(Lorg/postgresql/core/Query;Lorg/postgresql/core/ParameterList;Lorg/postgresql/core/ResultHandler;III)V
      37: goto          94
      40: astore_3
      41: aload_1
      42: invokeinterface #880,  1          // InterfaceMethod org/postgresql/core/Query.getSubqueries:()[Lorg/postgresql/core/Query;
      47: ifnonnull     63
      50: aload_0
      51: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
      54: aload_3
      55: invokeinterface #884,  2          // InterfaceMethod org/postgresql/core/QueryExecutor.willHealOnRetry:(Ljava/sql/SQLException;)Z
      60: ifne          65
      63: aload_3
      64: athrow
      65: aload_1
      66: invokeinterface #885,  1          // InterfaceMethod org/postgresql/core/Query.close:()V
      71: aload_0
      72: invokevirtual #869                // Method getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
      75: aload_1
      76: aconst_null
      77: new           #12                 // class org/postgresql/jdbc/PgConnection$TransactionCommandHandler
      80: dup
      81: aload_0
      82: aconst_null
      83: invokespecial #872                // Method org/postgresql/jdbc/PgConnection$TransactionCommandHandler."<init>":(Lorg/postgresql/jdbc/PgConnection;Lorg/postgresql/jdbc/PgConnection$1;)V
      86: iconst_0
      87: iconst_0
      88: iload_2
      89: invokeinterface #876,  7          // InterfaceMethod org/postgresql/core/QueryExecutor.execute:(Lorg/postgresql/core/Query;Lorg/postgresql/core/ParameterList;Lorg/postgresql/core/ResultHandler;III)V
      94: return
    Exception table:
       from    to  target type
          14    37    40   Class java/sql/SQLException

  public void commit() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: getfield      #153                // Field autoCommit:Z
       8: ifeq          32
      11: new           #326                // class org/postgresql/util/PSQLException
      14: dup
      15: ldc_w         #888                // String Cannot commit when autoCommit is enabled.
      18: iconst_0
      19: anewarray     #4                  // class java/lang/Object
      22: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      25: getstatic     #891                // Field org/postgresql/util/PSQLState.NO_ACTIVE_SQL_TRANSACTION:Lorg/postgresql/util/PSQLState;
      28: invokespecial #343                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      31: athrow
      32: aload_0
      33: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
      36: invokeinterface #835,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getTransactionState:()Lorg/postgresql/core/TransactionState;
      41: getstatic     #841                // Field org/postgresql/core/TransactionState.IDLE:Lorg/postgresql/core/TransactionState;
      44: if_acmpeq     55
      47: aload_0
      48: aload_0
      49: getfield      #363                // Field commitQuery:Lorg/postgresql/core/Query;
      52: invokespecial #893                // Method executeTransactionCommand:(Lorg/postgresql/core/Query;)V
      55: return

  protected void checkClosed() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #896                // Method isClosed:()Z
       4: ifeq          28
       7: new           #326                // class org/postgresql/util/PSQLException
      10: dup
      11: ldc_w         #898                // String This connection has been closed.
      14: iconst_0
      15: anewarray     #4                  // class java/lang/Object
      18: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      21: getstatic     #901                // Field org/postgresql/util/PSQLState.CONNECTION_DOES_NOT_EXIST:Lorg/postgresql/util/PSQLState;
      24: invokespecial #343                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      27: athrow
      28: return

  public void rollback() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: getfield      #153                // Field autoCommit:Z
       8: ifeq          32
      11: new           #326                // class org/postgresql/util/PSQLException
      14: dup
      15: ldc_w         #904                // String Cannot rollback when autoCommit is enabled.
      18: iconst_0
      19: anewarray     #4                  // class java/lang/Object
      22: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      25: getstatic     #891                // Field org/postgresql/util/PSQLState.NO_ACTIVE_SQL_TRANSACTION:Lorg/postgresql/util/PSQLState;
      28: invokespecial #343                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      31: athrow
      32: aload_0
      33: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
      36: invokeinterface #835,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getTransactionState:()Lorg/postgresql/core/TransactionState;
      41: getstatic     #841                // Field org/postgresql/core/TransactionState.IDLE:Lorg/postgresql/core/TransactionState;
      44: if_acmpeq     55
      47: aload_0
      48: aload_0
      49: getfield      #367                // Field rollbackQuery:Lorg/postgresql/core/Query;
      52: invokespecial #893                // Method executeTransactionCommand:(Lorg/postgresql/core/Query;)V
      55: return

  public org.postgresql.core.TransactionState getTransactionState();
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #835,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getTransactionState:()Lorg/postgresql/core/TransactionState;
       9: areturn

  public int getTransactionIsolation() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aconst_null
       5: astore_1
       6: aload_0
       7: ldc_w         #907                // String SHOW TRANSACTION ISOLATION LEVEL
      10: invokevirtual #909                // Method execSQLQuery:(Ljava/lang/String;)Ljava/sql/ResultSet;
      13: astore_2
      14: aload_2
      15: invokeinterface #913,  1          // InterfaceMethod java/sql/ResultSet.next:()Z
      20: ifeq          31
      23: aload_2
      24: iconst_1
      25: invokeinterface #916,  2          // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
      30: astore_1
      31: aload_2
      32: invokeinterface #917,  1          // InterfaceMethod java/sql/ResultSet.close:()V
      37: aload_1
      38: ifnonnull     43
      41: iconst_2
      42: ireturn
      43: aload_1
      44: getstatic     #923                // Field java/util/Locale.US:Ljava/util/Locale;
      47: invokevirtual #927                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      50: astore_1
      51: aload_1
      52: ldc_w         #929                // String READ COMMITTED
      55: invokevirtual #932                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      58: ifeq          63
      61: iconst_2
      62: ireturn
      63: aload_1
      64: ldc_w         #934                // String READ UNCOMMITTED
      67: invokevirtual #932                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      70: ifeq          75
      73: iconst_1
      74: ireturn
      75: aload_1
      76: ldc_w         #936                // String REPEATABLE READ
      79: invokevirtual #932                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      82: ifeq          87
      85: iconst_4
      86: ireturn
      87: aload_1
      88: ldc_w         #938                // String SERIALIZABLE
      91: invokevirtual #932                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      94: ifeq          100
      97: bipush        8
      99: ireturn
     100: iconst_2
     101: ireturn

  public void setTransactionIsolation(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       8: invokeinterface #835,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getTransactionState:()Lorg/postgresql/core/TransactionState;
      13: getstatic     #841                // Field org/postgresql/core/TransactionState.IDLE:Lorg/postgresql/core/TransactionState;
      16: if_acmpeq     40
      19: new           #326                // class org/postgresql/util/PSQLException
      22: dup
      23: ldc_w         #944                // String Cannot change transaction isolation level in the middle of a transaction.
      26: iconst_0
      27: anewarray     #4                  // class java/lang/Object
      30: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: getstatic     #846                // Field org/postgresql/util/PSQLState.ACTIVE_SQL_TRANSACTION:Lorg/postgresql/util/PSQLState;
      36: invokespecial #343                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      39: athrow
      40: aload_0
      41: iload_1
      42: invokevirtual #947                // Method getIsolationLevelName:(I)Ljava/lang/String;
      45: astore_2
      46: aload_2
      47: ifnonnull     78
      50: new           #326                // class org/postgresql/util/PSQLException
      53: dup
      54: ldc_w         #949                // String Transaction isolation level {0} not supported.
      57: iconst_1
      58: anewarray     #4                  // class java/lang/Object
      61: dup
      62: iconst_0
      63: iload_1
      64: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      67: aastore
      68: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      71: getstatic     #662                // Field org/postgresql/util/PSQLState.NOT_IMPLEMENTED:Lorg/postgresql/util/PSQLState;
      74: invokespecial #343                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      77: athrow
      78: new           #498                // class java/lang/StringBuilder
      81: dup
      82: invokespecial #499                // Method java/lang/StringBuilder."<init>":()V
      85: ldc_w         #951                // String SET SESSION CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL
      88: invokevirtual #523                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_2
      92: invokevirtual #523                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #536                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: astore_3
      99: aload_0
     100: aload_3
     101: invokevirtual #854                // Method execSQLUpdate:(Ljava/lang/String;)V
     104: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
     107: getstatic     #123                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     110: ldc_w         #953                // String   setTransactionIsolation = {0}
     113: aload_2
     114: invokevirtual #137                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     117: return

  protected java.lang.String getIsolationLevelName(int);
    Code:
       0: iload_1
       1: tableswitch   { // 1 to 8
                     1: 56
                     2: 48
                     3: 64
                     4: 60
                     5: 64
                     6: 64
                     7: 64
                     8: 52
               default: 64
          }
      48: ldc_w         #929                // String READ COMMITTED
      51: areturn
      52: ldc_w         #938                // String SERIALIZABLE
      55: areturn
      56: ldc_w         #934                // String READ UNCOMMITTED
      59: areturn
      60: ldc_w         #936                // String REPEATABLE READ
      63: areturn
      64: aconst_null
      65: areturn

  public void setCatalog(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: return

  public java.lang.String getCatalog() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       8: invokeinterface #961,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getDatabase:()Ljava/lang/String;
      13: areturn

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #392                // Field openStackTrace:Ljava/lang/Throwable;
       4: ifnull        30
       7: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
      10: getstatic     #212                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      13: ldc_w         #964                // String Finalizing a Connection that was never closed:
      16: iconst_0
      17: anewarray     #4                  // class java/lang/Object
      20: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: aload_0
      24: getfield      #392                // Field openStackTrace:Ljava/lang/Throwable;
      27: invokevirtual #967                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      30: aload_0
      31: invokevirtual #968                // Method close:()V
      34: aload_0
      35: invokespecial #970                // Method java/lang/Object.finalize:()V
      38: goto          48
      41: astore_1
      42: aload_0
      43: invokespecial #970                // Method java/lang/Object.finalize:()V
      46: aload_1
      47: athrow
      48: return
    Exception table:
       from    to  target type
           0    34    41   any

  public java.lang.String getDBVersionNumber();
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #232,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getServerVersion:()Ljava/lang/String;
       9: areturn

  public int getServerMajorVersion();
    Code:
       0: new           #475                // class java/util/StringTokenizer
       3: dup
       4: aload_0
       5: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       8: invokeinterface #232,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getServerVersion:()Ljava/lang/String;
      13: ldc_w         #976                // String .
      16: invokespecial #480                // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      19: astore_1
      20: aload_1
      21: invokevirtual #486                // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      24: invokestatic  #979                // Method integerPart:(Ljava/lang/String;)I
      27: ireturn
      28: astore_1
      29: iconst_0
      30: ireturn
    Exception table:
       from    to  target type
           0    27    28   Class java/util/NoSuchElementException

  public int getServerMinorVersion();
    Code:
       0: new           #475                // class java/util/StringTokenizer
       3: dup
       4: aload_0
       5: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       8: invokeinterface #232,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getServerVersion:()Ljava/lang/String;
      13: ldc_w         #976                // String .
      16: invokespecial #480                // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      19: astore_1
      20: aload_1
      21: invokevirtual #486                // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      24: pop
      25: aload_1
      26: invokevirtual #486                // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      29: invokestatic  #979                // Method integerPart:(Ljava/lang/String;)I
      32: ireturn
      33: astore_1
      34: iconst_0
      35: ireturn
    Exception table:
       from    to  target type
           0    32    33   Class java/util/NoSuchElementException

  public boolean haveMinimumServerVersion(int);
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #986,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getServerVersionNum:()I
       9: iload_1
      10: if_icmplt     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public boolean haveMinimumServerVersion(org.postgresql.core.Version);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #992,  1          // InterfaceMethod org/postgresql/core/Version.getVersionNum:()I
       7: invokevirtual #994                // Method haveMinimumServerVersion:(I)Z
      10: ireturn

  public org.postgresql.core.Encoding getEncoding();
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #999,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getEncoding:()Lorg/postgresql/core/Encoding;
       9: areturn

  public byte[] encodeString(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1004               // Method getEncoding:()Lorg/postgresql/core/Encoding;
       4: aload_1
       5: invokevirtual #1009               // Method org/postgresql/core/Encoding.encode:(Ljava/lang/String;)[B
       8: areturn
       9: astore_2
      10: new           #326                // class org/postgresql/util/PSQLException
      13: dup
      14: ldc_w         #1011               // String Unable to translate data into the desired encoding.
      17: iconst_0
      18: anewarray     #4                  // class java/lang/Object
      21: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      24: getstatic     #1014               // Field org/postgresql/util/PSQLState.DATA_ERROR:Lorg/postgresql/util/PSQLState;
      27: aload_2
      28: invokespecial #699                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
      31: athrow
    Exception table:
       from    to  target type
           0     8     9   Class java/io/IOException

  public java.lang.String escapeString(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: aload_1
       2: aload_0
       3: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       6: invokeinterface #1021,  1         // InterfaceMethod org/postgresql/core/QueryExecutor.getStandardConformingStrings:()Z
      11: invokestatic  #1027               // Method org/postgresql/core/Utils.escapeLiteral:(Ljava/lang/StringBuilder;Ljava/lang/String;Z)Ljava/lang/StringBuilder;
      14: invokevirtual #536                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      17: areturn

  public boolean getStandardConformingStrings();
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #1021,  1         // InterfaceMethod org/postgresql/core/QueryExecutor.getStandardConformingStrings:()Z
       9: ireturn

  public boolean isClosed() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #1028,  1         // InterfaceMethod org/postgresql/core/QueryExecutor.isClosed:()Z
       9: ireturn

  public void cancelQuery() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       8: invokeinterface #1032,  1         // InterfaceMethod org/postgresql/core/QueryExecutor.sendQueryCancel:()V
      13: return

  public org.postgresql.PGNotification[] getNotifications() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iconst_m1
       2: invokevirtual #1037               // Method getNotifications:(I)[Lorg/postgresql/PGNotification;
       5: areturn

  public org.postgresql.PGNotification[] getNotifications(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #869                // Method getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
       8: iload_1
       9: invokeinterface #1040,  2         // InterfaceMethod org/postgresql/core/QueryExecutor.processNotifies:(I)V
      14: aload_0
      15: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
      18: invokeinterface #1042,  1         // InterfaceMethod org/postgresql/core/QueryExecutor.getNotifications:()[Lorg/postgresql/PGNotification;
      23: astore_2
      24: aload_2
      25: arraylength
      26: ifne          33
      29: aconst_null
      30: goto          34
      33: aload_2
      34: areturn

  public int getPrepareThreshold();
    Code:
       0: aload_0
       1: getfield      #194                // Field prepareThreshold:I
       4: ireturn

  public void setDefaultFetchSize(int) throws java.sql.SQLException;
    Code:
       0: iload_1
       1: ifge          25
       4: new           #326                // class org/postgresql/util/PSQLException
       7: dup
       8: ldc_w         #1049               // String Fetch size must be a value greater to or equal to 0.
      11: iconst_0
      12: anewarray     #4                  // class java/lang/Object
      15: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      18: getstatic     #340                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      21: invokespecial #343                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      24: athrow
      25: aload_0
      26: iload_1
      27: putfield      #1051               // Field defaultFetchSize:I
      30: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
      33: getstatic     #123                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      36: ldc_w         #1053               // String   setDefaultFetchSize = {0}
      39: iload_1
      40: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      43: invokevirtual #137                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      46: return

  public int getDefaultFetchSize();
    Code:
       0: aload_0
       1: getfield      #1051               // Field defaultFetchSize:I
       4: ireturn

  public void setPrepareThreshold(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #194                // Field prepareThreshold:I
       5: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
       8: getstatic     #123                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      11: ldc_w         #1057               // String   setPrepareThreshold = {0}
      14: iload_1
      15: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      18: invokevirtual #137                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      21: return

  public boolean getForceBinary();
    Code:
       0: aload_0
       1: getfield      #147                // Field forcebinary:Z
       4: ireturn

  public void setForceBinary(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #147                // Field forcebinary:Z
       5: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
       8: getstatic     #123                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      11: ldc_w         #1061               // String   setForceBinary = {0}
      14: iload_1
      15: invokestatic  #131                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      18: invokevirtual #137                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      21: return

  public void setTypeMapImpl(java.util.Map<java.lang.String, java.lang.Class<?>>) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #563                // Field typemap:Ljava/util/Map;
       5: return

  public java.util.logging.Logger getLogger();
    Code:
       0: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
       3: areturn

  public int getProtocolVersion();
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #252,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getProtocolVersion:()I
       9: ireturn

  public boolean getStringVarcharFlag();
    Code:
       0: aload_0
       1: getfield      #322                // Field bindStringAsVarchar:Z
       4: ireturn

  public org.postgresql.copy.CopyManager getCopyAPI() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: getfield      #165                // Field copyManager:Lorg/postgresql/copy/CopyManager;
       8: ifnonnull     23
      11: aload_0
      12: new           #1072               // class org/postgresql/copy/CopyManager
      15: dup
      16: aload_0
      17: invokespecial #1073               // Method org/postgresql/copy/CopyManager."<init>":(Lorg/postgresql/core/BaseConnection;)V
      20: putfield      #165                // Field copyManager:Lorg/postgresql/copy/CopyManager;
      23: aload_0
      24: getfield      #165                // Field copyManager:Lorg/postgresql/copy/CopyManager;
      27: areturn

  public boolean binaryTransferSend(int);
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: iload_1
       5: invokeinterface #1077,  2         // InterfaceMethod org/postgresql/core/QueryExecutor.useBinaryForSend:(I)Z
      10: ireturn

  public int getBackendPID();
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #1080,  1         // InterfaceMethod org/postgresql/core/QueryExecutor.getBackendPID:()I
       9: ireturn

  public boolean isColumnSanitiserDisabled();
    Code:
       0: aload_0
       1: getfield      #145                // Field disableColumnSanitiser:Z
       4: ireturn

  public void setDisableColumnSanitiser(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #145                // Field disableColumnSanitiser:Z
       5: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
       8: getstatic     #123                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      11: ldc_w         #1084               // String   setDisableColumnSanitiser = {0}
      14: iload_1
      15: invokestatic  #131                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      18: invokevirtual #137                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      21: return

  public org.postgresql.jdbc.PreferQueryMode getPreferQueryMode();
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #1088,  1         // InterfaceMethod org/postgresql/core/QueryExecutor.getPreferQueryMode:()Lorg/postgresql/jdbc/PreferQueryMode;
       9: areturn

  public org.postgresql.jdbc.AutoSave getAutosave();
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #1093,  1         // InterfaceMethod org/postgresql/core/QueryExecutor.getAutoSave:()Lorg/postgresql/jdbc/AutoSave;
       9: areturn

  public void setAutosave(org.postgresql.jdbc.AutoSave);
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: aload_1
       5: invokeinterface #1098,  2         // InterfaceMethod org/postgresql/core/QueryExecutor.setAutoSave:(Lorg/postgresql/jdbc/AutoSave;)V
      10: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
      13: getstatic     #123                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      16: ldc_w         #1100               // String   setAutosave = {0}
      19: aload_1
      20: invokevirtual #1104               // Method org/postgresql/jdbc/AutoSave.value:()Ljava/lang/String;
      23: invokevirtual #137                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      26: return

  protected void abort();
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #1109,  1         // InterfaceMethod org/postgresql/core/QueryExecutor.abort:()V
       9: return

  private synchronized java.util.Timer getTimer();
    Code:
       0: aload_0
       1: getfield      #159                // Field cancelTimer:Ljava/util/Timer;
       4: ifnonnull     17
       7: aload_0
       8: invokestatic  #1117               // Method org/postgresql/Driver.getSharedTimer:()Lorg/postgresql/util/SharedTimer;
      11: invokevirtual #1121               // Method org/postgresql/util/SharedTimer.getTimer:()Ljava/util/Timer;
      14: putfield      #159                // Field cancelTimer:Ljava/util/Timer;
      17: aload_0
      18: getfield      #159                // Field cancelTimer:Ljava/util/Timer;
      21: areturn

  private synchronized void releaseTimer();
    Code:
       0: aload_0
       1: getfield      #159                // Field cancelTimer:Ljava/util/Timer;
       4: ifnull        18
       7: aload_0
       8: aconst_null
       9: putfield      #159                // Field cancelTimer:Ljava/util/Timer;
      12: invokestatic  #1117               // Method org/postgresql/Driver.getSharedTimer:()Lorg/postgresql/util/SharedTimer;
      15: invokevirtual #1122               // Method org/postgresql/util/SharedTimer.releaseTimer:()V
      18: return

  public void addTimerTask(java.util.TimerTask, long);
    Code:
       0: aload_0
       1: invokespecial #1125               // Method getTimer:()Ljava/util/Timer;
       4: astore        4
       6: aload         4
       8: aload_1
       9: lload_2
      10: invokevirtual #1130               // Method java/util/Timer.schedule:(Ljava/util/TimerTask;J)V
      13: return

  public void purgeTimerTasks();
    Code:
       0: aload_0
       1: getfield      #159                // Field cancelTimer:Ljava/util/Timer;
       4: astore_1
       5: aload_1
       6: ifnull        14
       9: aload_1
      10: invokevirtual #1139               // Method java/util/Timer.purge:()I
      13: pop
      14: return

  public java.lang.String escapeIdentifier(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: aload_1
       2: invokestatic  #1143               // Method org/postgresql/core/Utils.escapeIdentifier:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;
       5: invokevirtual #536                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       8: areturn

  public java.lang.String escapeLiteral(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: aload_1
       2: aload_0
       3: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       6: invokeinterface #1021,  1         // InterfaceMethod org/postgresql/core/QueryExecutor.getStandardConformingStrings:()Z
      11: invokestatic  #1027               // Method org/postgresql/core/Utils.escapeLiteral:(Ljava/lang/StringBuilder;Ljava/lang/String;Z)Ljava/lang/StringBuilder;
      14: invokevirtual #536                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      17: areturn

  public org.postgresql.util.LruCache<org.postgresql.jdbc.FieldMetadata$Key, org.postgresql.jdbc.FieldMetadata> getFieldMetadataCache();
    Code:
       0: aload_0
       1: getfield      #452                // Field fieldMetadataCache:Lorg/postgresql/util/LruCache;
       4: areturn

  public org.postgresql.replication.PGReplicationConnection getReplicationAPI();
    Code:
       0: new           #1151               // class org/postgresql/replication/PGReplicationConnectionImpl
       3: dup
       4: aload_0
       5: invokespecial #1152               // Method org/postgresql/replication/PGReplicationConnectionImpl."<init>":(Lorg/postgresql/core/BaseConnection;)V
       8: areturn

  private static void appendArray(java.lang.StringBuilder, java.lang.Object, char);
    Code:
       0: aload_0
       1: bipush        123
       3: invokevirtual #526                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       6: pop
       7: aload_1
       8: invokestatic  #1160               // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
      11: istore_3
      12: iconst_0
      13: istore        4
      15: iload         4
      17: iload_3
      18: if_icmpge     120
      21: iload         4
      23: ifle          32
      26: aload_0
      27: iload_2
      28: invokevirtual #526                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      31: pop
      32: aload_1
      33: iload         4
      35: invokestatic  #1163               // Method java/lang/reflect/Array.get:(Ljava/lang/Object;I)Ljava/lang/Object;
      38: astore        5
      40: aload         5
      42: ifnonnull     56
      45: aload_0
      46: ldc_w         #1165               // String NULL
      49: invokevirtual #523                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: pop
      53: goto          114
      56: aload         5
      58: invokevirtual #1169               // Method java/lang/Object.getClass:()Ljava/lang/Class;
      61: invokevirtual #1172               // Method java/lang/Class.isArray:()Z
      64: ifeq          101
      67: aload         5
      69: invokestatic  #1178               // Method org/postgresql/jdbc/PrimitiveArraySupport.getArraySupport:(Ljava/lang/Object;)Lorg/postgresql/jdbc/PrimitiveArraySupport;
      72: astore        6
      74: aload         6
      76: ifnull        91
      79: aload         6
      81: aload_0
      82: iload_2
      83: aload         5
      85: invokevirtual #1181               // Method org/postgresql/jdbc/PrimitiveArraySupport.appendArray:(Ljava/lang/StringBuilder;CLjava/lang/Object;)V
      88: goto          98
      91: aload_0
      92: aload         5
      94: iload_2
      95: invokestatic  #1183               // Method appendArray:(Ljava/lang/StringBuilder;Ljava/lang/Object;C)V
      98: goto          114
     101: aload         5
     103: invokevirtual #1184               // Method java/lang/Object.toString:()Ljava/lang/String;
     106: astore        6
     108: aload_0
     109: aload         6
     111: invokestatic  #1190               // Method org/postgresql/jdbc/PgArray.escapeArrayElement:(Ljava/lang/StringBuilder;Ljava/lang/String;)V
     114: iinc          4, 1
     117: goto          15
     120: aload_0
     121: bipush        125
     123: invokevirtual #526                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     126: pop
     127: return

  private static int integerPart(java.lang.String);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: invokevirtual #1200               // Method java/lang/String.length:()I
       7: if_icmpge     27
      10: aload_0
      11: iload_1
      12: invokevirtual #1204               // Method java/lang/String.charAt:(I)C
      15: invokestatic  #1210               // Method java/lang/Character.isDigit:(C)Z
      18: ifne          27
      21: iinc          1, 1
      24: goto          2
      27: iload_1
      28: istore_2
      29: iload_2
      30: aload_0
      31: invokevirtual #1200               // Method java/lang/String.length:()I
      34: if_icmpge     54
      37: aload_0
      38: iload_2
      39: invokevirtual #1204               // Method java/lang/String.charAt:(I)C
      42: invokestatic  #1210               // Method java/lang/Character.isDigit:(C)Z
      45: ifeq          54
      48: iinc          2, 1
      51: goto          29
      54: iload_1
      55: iload_2
      56: if_icmpne     61
      59: iconst_0
      60: ireturn
      61: aload_0
      62: iload_1
      63: iload_2
      64: invokevirtual #1213               // Method java/lang/String.substring:(II)Ljava/lang/String;
      67: invokestatic  #1216               // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      70: ireturn

  public java.sql.Statement createStatement(int, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: new           #1222               // class org/postgresql/jdbc/PgStatement
       7: dup
       8: aload_0
       9: iload_1
      10: iload_2
      11: iload_3
      12: invokespecial #1225               // Method org/postgresql/jdbc/PgStatement."<init>":(Lorg/postgresql/jdbc/PgConnection;III)V
      15: areturn

  public java.sql.PreparedStatement prepareStatement(java.lang.String, int, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: new           #1229               // class org/postgresql/jdbc/PgPreparedStatement
       7: dup
       8: aload_0
       9: aload_1
      10: iload_2
      11: iload_3
      12: iload         4
      14: invokespecial #1232               // Method org/postgresql/jdbc/PgPreparedStatement."<init>":(Lorg/postgresql/jdbc/PgConnection;Ljava/lang/String;III)V
      17: areturn

  public java.sql.CallableStatement prepareCall(java.lang.String, int, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: new           #1235               // class org/postgresql/jdbc/PgCallableStatement
       7: dup
       8: aload_0
       9: aload_1
      10: iload_2
      11: iload_3
      12: iload         4
      14: invokespecial #1236               // Method org/postgresql/jdbc/PgCallableStatement."<init>":(Lorg/postgresql/jdbc/PgConnection;Ljava/lang/String;III)V
      17: areturn

  public java.sql.DatabaseMetaData getMetaData() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: getfield      #1240               // Field metadata:Ljava/sql/DatabaseMetaData;
       8: ifnonnull     23
      11: aload_0
      12: new           #1242               // class org/postgresql/jdbc/PgDatabaseMetaData
      15: dup
      16: aload_0
      17: invokespecial #1243               // Method org/postgresql/jdbc/PgDatabaseMetaData."<init>":(Lorg/postgresql/jdbc/PgConnection;)V
      20: putfield      #1240               // Field metadata:Ljava/sql/DatabaseMetaData;
      23: aload_0
      24: getfield      #1240               // Field metadata:Ljava/sql/DatabaseMetaData;
      27: areturn

  public void setTypeMap(java.util.Map<java.lang.String, java.lang.Class<?>>) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1246               // Method setTypeMapImpl:(Ljava/util/Map;)V
       5: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
       8: getstatic     #123                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      11: ldc_w         #1248               // String   setTypeMap = {0}
      14: aload_1
      15: invokevirtual #137                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      18: return

  protected java.sql.Array makeArray(int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: new           #1186               // class org/postgresql/jdbc/PgArray
       3: dup
       4: aload_0
       5: iload_1
       6: aload_2
       7: invokespecial #1253               // Method org/postgresql/jdbc/PgArray."<init>":(Lorg/postgresql/core/BaseConnection;ILjava/lang/String;)V
      10: areturn

  protected java.sql.Blob makeBlob(long) throws java.sql.SQLException;
    Code:
       0: new           #1258               // class org/postgresql/jdbc/PgBlob
       3: dup
       4: aload_0
       5: lload_1
       6: invokespecial #1261               // Method org/postgresql/jdbc/PgBlob."<init>":(Lorg/postgresql/core/BaseConnection;J)V
       9: areturn

  protected java.sql.Clob makeClob(long) throws java.sql.SQLException;
    Code:
       0: new           #1265               // class org/postgresql/jdbc/PgClob
       3: dup
       4: aload_0
       5: lload_1
       6: invokespecial #1266               // Method org/postgresql/jdbc/PgClob."<init>":(Lorg/postgresql/core/BaseConnection;J)V
       9: areturn

  protected java.sql.SQLXML makeSQLXML() throws java.sql.SQLException;
    Code:
       0: new           #1270               // class org/postgresql/jdbc/PgSQLXML
       3: dup
       4: aload_0
       5: invokespecial #1271               // Method org/postgresql/jdbc/PgSQLXML."<init>":(Lorg/postgresql/core/BaseConnection;)V
       8: areturn

  public java.sql.Clob createClob() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #1169               // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc_w         #1275               // String createClob()
      11: invokestatic  #1279               // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      14: athrow

  public java.sql.Blob createBlob() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #1169               // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc_w         #1283               // String createBlob()
      11: invokestatic  #1279               // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      14: athrow

  public java.sql.NClob createNClob() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #1169               // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc_w         #1287               // String createNClob()
      11: invokestatic  #1279               // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      14: athrow

  public java.sql.SQLXML createSQLXML() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #1290               // Method makeSQLXML:()Ljava/sql/SQLXML;
       8: areturn

  public java.sql.Struct createStruct(java.lang.String, java.lang.Object[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #1169               // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc_w         #1294               // String createStruct(String, Object[])
      11: invokestatic  #1279               // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      14: athrow

  public java.sql.Array createArrayOf(java.lang.String, java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #399                // Method getTypeInfo:()Lorg/postgresql/core/TypeInfo;
       8: astore_3
       9: aload_3
      10: aload_1
      11: invokeinterface #1301,  2         // InterfaceMethod org/postgresql/core/TypeInfo.getPGArrayType:(Ljava/lang/String;)I
      16: istore        4
      18: aload_3
      19: iload         4
      21: invokeinterface #1304,  2         // InterfaceMethod org/postgresql/core/TypeInfo.getArrayDelimiter:(I)C
      26: istore        5
      28: iload         4
      30: ifne          58
      33: new           #326                // class org/postgresql/util/PSQLException
      36: dup
      37: ldc_w         #1306               // String Unable to find server array type for provided name {0}.
      40: iconst_1
      41: anewarray     #4                  // class java/lang/Object
      44: dup
      45: iconst_0
      46: aload_1
      47: aastore
      48: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      51: getstatic     #1309               // Field org/postgresql/util/PSQLState.INVALID_NAME:Lorg/postgresql/util/PSQLState;
      54: invokespecial #343                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      57: athrow
      58: aload_2
      59: ifnonnull     70
      62: aload_0
      63: iload         4
      65: aconst_null
      66: invokevirtual #1311               // Method makeArray:(ILjava/lang/String;)Ljava/sql/Array;
      69: areturn
      70: aload_2
      71: invokestatic  #1178               // Method org/postgresql/jdbc/PrimitiveArraySupport.getArraySupport:(Ljava/lang/Object;)Lorg/postgresql/jdbc/PrimitiveArraySupport;
      74: astore        7
      76: aload         7
      78: ifnull        141
      81: iload         4
      83: aload         7
      85: aload_3
      86: invokevirtual #1315               // Method org/postgresql/jdbc/PrimitiveArraySupport.getDefaultArrayTypeOid:(Lorg/postgresql/core/TypeInfo;)I
      89: if_icmpne     128
      92: aload         7
      94: invokevirtual #1318               // Method org/postgresql/jdbc/PrimitiveArraySupport.supportBinaryRepresentation:()Z
      97: ifeq          128
     100: aload_0
     101: invokevirtual #1319               // Method getPreferQueryMode:()Lorg/postgresql/jdbc/PreferQueryMode;
     104: getstatic     #1325               // Field org/postgresql/jdbc/PreferQueryMode.SIMPLE:Lorg/postgresql/jdbc/PreferQueryMode;
     107: if_acmpeq     128
     110: new           #1186               // class org/postgresql/jdbc/PgArray
     113: dup
     114: aload_0
     115: iload         4
     117: aload         7
     119: aload_0
     120: aload_2
     121: invokevirtual #1329               // Method org/postgresql/jdbc/PrimitiveArraySupport.toBinaryRepresentation:(Ljava/sql/Connection;Ljava/lang/Object;)[B
     124: invokespecial #1332               // Method org/postgresql/jdbc/PgArray."<init>":(Lorg/postgresql/core/BaseConnection;I[B)V
     127: areturn
     128: aload         7
     130: iload         5
     132: aload_2
     133: invokevirtual #1336               // Method org/postgresql/jdbc/PrimitiveArraySupport.toArrayString:(CLjava/lang/Object;)Ljava/lang/String;
     136: astore        6
     138: goto          204
     141: aload_2
     142: invokevirtual #1169               // Method java/lang/Object.getClass:()Ljava/lang/Class;
     145: astore        8
     147: aload         8
     149: invokevirtual #1172               // Method java/lang/Class.isArray:()Z
     152: ifne          180
     155: new           #326                // class org/postgresql/util/PSQLException
     158: dup
     159: ldc_w         #1338               // String Invalid elements {0}
     162: iconst_1
     163: anewarray     #4                  // class java/lang/Object
     166: dup
     167: iconst_0
     168: aload_2
     169: aastore
     170: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     173: getstatic     #1341               // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_TYPE:Lorg/postgresql/util/PSQLState;
     176: invokespecial #343                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     179: athrow
     180: new           #498                // class java/lang/StringBuilder
     183: dup
     184: invokespecial #499                // Method java/lang/StringBuilder."<init>":()V
     187: astore        9
     189: aload         9
     191: aload_2
     192: iload         5
     194: invokestatic  #1183               // Method appendArray:(Ljava/lang/StringBuilder;Ljava/lang/Object;C)V
     197: aload         9
     199: invokevirtual #536                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     202: astore        6
     204: aload_0
     205: iload         4
     207: aload         6
     209: invokevirtual #1311               // Method makeArray:(ILjava/lang/String;)Ljava/sql/Array;
     212: areturn

  public java.sql.Array createArrayOf(java.lang.String, java.lang.Object[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #399                // Method getTypeInfo:()Lorg/postgresql/core/TypeInfo;
       8: aload_1
       9: invokeinterface #1301,  2         // InterfaceMethod org/postgresql/core/TypeInfo.getPGArrayType:(Ljava/lang/String;)I
      14: istore_3
      15: iload_3
      16: ifne          44
      19: new           #326                // class org/postgresql/util/PSQLException
      22: dup
      23: ldc_w         #1306               // String Unable to find server array type for provided name {0}.
      26: iconst_1
      27: anewarray     #4                  // class java/lang/Object
      30: dup
      31: iconst_0
      32: aload_1
      33: aastore
      34: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      37: getstatic     #1309               // Field org/postgresql/util/PSQLState.INVALID_NAME:Lorg/postgresql/util/PSQLState;
      40: invokespecial #343                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      43: athrow
      44: aload_2
      45: ifnonnull     55
      48: aload_0
      49: iload_3
      50: aconst_null
      51: invokevirtual #1311               // Method makeArray:(ILjava/lang/String;)Ljava/sql/Array;
      54: areturn
      55: aload_0
      56: invokevirtual #399                // Method getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      59: iload_3
      60: invokeinterface #1304,  2         // InterfaceMethod org/postgresql/core/TypeInfo.getArrayDelimiter:(I)C
      65: istore        4
      67: new           #498                // class java/lang/StringBuilder
      70: dup
      71: invokespecial #499                // Method java/lang/StringBuilder."<init>":()V
      74: astore        5
      76: aload         5
      78: aload_2
      79: iload         4
      81: invokestatic  #1183               // Method appendArray:(Ljava/lang/StringBuilder;Ljava/lang/Object;C)V
      84: aload_0
      85: iload_3
      86: aload         5
      88: invokevirtual #536                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokevirtual #1311               // Method makeArray:(ILjava/lang/String;)Ljava/sql/Array;
      94: areturn

  public boolean isValid(int) throws java.sql.SQLException;
    Code:
       0: iload_1
       1: ifge          32
       4: new           #326                // class org/postgresql/util/PSQLException
       7: dup
       8: ldc_w         #1348               // String Invalid timeout ({0}<0).
      11: iconst_1
      12: anewarray     #4                  // class java/lang/Object
      15: dup
      16: iconst_0
      17: iload_1
      18: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      21: aastore
      22: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      25: getstatic     #340                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      28: invokespecial #343                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      31: athrow
      32: aload_0
      33: invokevirtual #896                // Method isClosed:()Z
      36: ifeq          41
      39: iconst_0
      40: ireturn
      41: aload_0
      42: getfield      #457                // Field replicationConnection:Z
      45: ifeq          72
      48: aload_0
      49: invokevirtual #619                // Method createStatement:()Ljava/sql/Statement;
      52: astore_2
      53: aload_2
      54: ldc_w         #1350               // String IDENTIFY_SYSTEM
      57: invokeinterface #1354,  2         // InterfaceMethod java/sql/Statement.execute:(Ljava/lang/String;)Z
      62: pop
      63: aload_2
      64: invokeinterface #1355,  1         // InterfaceMethod java/sql/Statement.close:()V
      69: goto          110
      72: aload_0
      73: getfield      #1357               // Field checkConnectionQuery:Ljava/sql/PreparedStatement;
      76: ifnonnull     90
      79: aload_0
      80: aload_0
      81: ldc_w         #427                // String
      84: invokevirtual #1359               // Method prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      87: putfield      #1357               // Field checkConnectionQuery:Ljava/sql/PreparedStatement;
      90: aload_0
      91: getfield      #1357               // Field checkConnectionQuery:Ljava/sql/PreparedStatement;
      94: iload_1
      95: invokeinterface #1364,  2         // InterfaceMethod java/sql/PreparedStatement.setQueryTimeout:(I)V
     100: aload_0
     101: getfield      #1357               // Field checkConnectionQuery:Ljava/sql/PreparedStatement;
     104: invokeinterface #1367,  1         // InterfaceMethod java/sql/PreparedStatement.executeUpdate:()I
     109: pop
     110: iconst_1
     111: ireturn
     112: astore_2
     113: getstatic     #1370               // Field org/postgresql/util/PSQLState.IN_FAILED_SQL_TRANSACTION:Lorg/postgresql/util/PSQLState;
     116: invokevirtual #1373               // Method org/postgresql/util/PSQLState.getState:()Ljava/lang/String;
     119: aload_2
     120: invokevirtual #1376               // Method java/sql/SQLException.getSQLState:()Ljava/lang/String;
     123: invokevirtual #932                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     126: ifeq          131
     129: iconst_1
     130: ireturn
     131: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
     134: getstatic     #212                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
     137: ldc_w         #1378               // String Validating connection.
     140: iconst_0
     141: anewarray     #4                  // class java/lang/Object
     144: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     147: aload_2
     148: invokevirtual #967                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
     151: iconst_0
     152: ireturn
    Exception table:
       from    to  target type
          41   111   112   Class java/sql/SQLException

  public void setClientInfo(java.lang.String, java.lang.String) throws java.sql.SQLClientInfoException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: goto          50
       7: astore_3
       8: new           #1386               // class java/util/HashMap
      11: dup
      12: invokespecial #1387               // Method java/util/HashMap."<init>":()V
      15: astore        4
      17: aload         4
      19: aload_1
      20: getstatic     #1393               // Field java/sql/ClientInfoStatus.REASON_UNKNOWN:Ljava/sql/ClientInfoStatus;
      23: invokeinterface #1394,  3         // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: new           #1384               // class java/sql/SQLClientInfoException
      32: dup
      33: ldc_w         #898                // String This connection has been closed.
      36: iconst_0
      37: anewarray     #4                  // class java/lang/Object
      40: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      43: aload         4
      45: aload_3
      46: invokespecial #1397               // Method java/sql/SQLClientInfoException."<init>":(Ljava/lang/String;Ljava/util/Map;Ljava/lang/Throwable;)V
      49: athrow
      50: aload_0
      51: getstatic     #422                // Field org/postgresql/core/ServerVersion.v9_0:Lorg/postgresql/core/ServerVersion;
      54: invokevirtual #226                // Method haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
      57: ifeq          244
      60: ldc_w         #429                // String ApplicationName
      63: aload_1
      64: invokevirtual #932                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      67: ifeq          244
      70: aload_2
      71: ifnonnull     78
      74: ldc_w         #427                // String
      77: astore_2
      78: aload_0
      79: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
      82: invokeinterface #1400,  1         // InterfaceMethod org/postgresql/core/QueryExecutor.getApplicationName:()Ljava/lang/String;
      87: astore_3
      88: aload_2
      89: aload_3
      90: invokevirtual #932                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      93: ifeq          97
      96: return
      97: new           #498                // class java/lang/StringBuilder
     100: dup
     101: ldc_w         #1402               // String SET application_name = \'
     104: invokespecial #1403               // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     107: astore        4
     109: aload         4
     111: aload_2
     112: aload_0
     113: invokevirtual #1404               // Method getStandardConformingStrings:()Z
     116: invokestatic  #1027               // Method org/postgresql/core/Utils.escapeLiteral:(Ljava/lang/StringBuilder;Ljava/lang/String;Z)Ljava/lang/StringBuilder;
     119: pop
     120: aload         4
     122: ldc_w         #1406               // String \'
     125: invokevirtual #523                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: pop
     129: aload_0
     130: aload         4
     132: invokevirtual #536                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: invokevirtual #854                // Method execSQLUpdate:(Ljava/lang/String;)V
     138: goto          197
     141: astore        4
     143: new           #1386               // class java/util/HashMap
     146: dup
     147: invokespecial #1387               // Method java/util/HashMap."<init>":()V
     150: astore        5
     152: aload         5
     154: aload_1
     155: getstatic     #1393               // Field java/sql/ClientInfoStatus.REASON_UNKNOWN:Ljava/sql/ClientInfoStatus;
     158: invokeinterface #1394,  3         // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     163: pop
     164: new           #1384               // class java/sql/SQLClientInfoException
     167: dup
     168: ldc_w         #1408               // String Failed to set ClientInfo property: {0}
     171: iconst_1
     172: anewarray     #4                  // class java/lang/Object
     175: dup
     176: iconst_0
     177: ldc_w         #429                // String ApplicationName
     180: aastore
     181: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     184: aload         4
     186: invokevirtual #1376               // Method java/sql/SQLException.getSQLState:()Ljava/lang/String;
     189: aload         5
     191: aload         4
     193: invokespecial #1411               // Method java/sql/SQLClientInfoException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/lang/Throwable;)V
     196: athrow
     197: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
     200: getstatic     #123                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     203: invokevirtual #216                // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
     206: ifeq          233
     209: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
     212: getstatic     #123                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     215: ldc_w         #1413               // String   setClientInfo = {0} {1}
     218: iconst_2
     219: anewarray     #4                  // class java/lang/Object
     222: dup
     223: iconst_0
     224: aload_1
     225: aastore
     226: dup
     227: iconst_1
     228: aload_2
     229: aastore
     230: invokevirtual #667                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V
     233: aload_0
     234: getfield      #419                // Field _clientInfo:Ljava/util/Properties;
     237: aload_1
     238: aload_2
     239: invokevirtual #433                // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     242: pop
     243: return
     244: aload_0
     245: new           #573                // class java/sql/SQLWarning
     248: dup
     249: ldc_w         #1415               // String ClientInfo property not supported.
     252: iconst_0
     253: anewarray     #4                  // class java/lang/Object
     256: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     259: getstatic     #662                // Field org/postgresql/util/PSQLState.NOT_IMPLEMENTED:Lorg/postgresql/util/PSQLState;
     262: invokevirtual #1373               // Method org/postgresql/util/PSQLState.getState:()Ljava/lang/String;
     265: invokespecial #1416               // Method java/sql/SQLWarning."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     268: invokevirtual #606                // Method addWarning:(Ljava/sql/SQLWarning;)V
     271: return
    Exception table:
       from    to  target type
           0     4     7   Class java/sql/SQLException
          97   138   141   Class java/sql/SQLException

  public void setClientInfo(java.util.Properties) throws java.sql.SQLClientInfoException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: goto          92
       7: astore_2
       8: new           #1386               // class java/util/HashMap
      11: dup
      12: invokespecial #1387               // Method java/util/HashMap."<init>":()V
      15: astore_3
      16: aload_1
      17: invokevirtual #1425               // Method java/util/Properties.entrySet:()Ljava/util/Set;
      20: invokeinterface #503,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore        4
      27: aload         4
      29: invokeinterface #508,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          72
      37: aload         4
      39: invokeinterface #512,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #22                 // class java/util/Map$Entry
      47: astore        5
      49: aload_3
      50: aload         5
      52: invokeinterface #1428,  1         // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      57: checkcast     #201                // class java/lang/String
      60: getstatic     #1393               // Field java/sql/ClientInfoStatus.REASON_UNKNOWN:Ljava/sql/ClientInfoStatus;
      63: invokeinterface #1394,  3         // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: goto          27
      72: new           #1384               // class java/sql/SQLClientInfoException
      75: dup
      76: ldc_w         #898                // String This connection has been closed.
      79: iconst_0
      80: anewarray     #4                  // class java/lang/Object
      83: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      86: aload_3
      87: aload_2
      88: invokespecial #1397               // Method java/sql/SQLClientInfoException."<init>":(Ljava/lang/String;Ljava/util/Map;Ljava/lang/Throwable;)V
      91: athrow
      92: new           #1386               // class java/util/HashMap
      95: dup
      96: invokespecial #1387               // Method java/util/HashMap."<init>":()V
      99: astore_2
     100: iconst_1
     101: anewarray     #201                // class java/lang/String
     104: dup
     105: iconst_0
     106: ldc_w         #429                // String ApplicationName
     109: aastore
     110: astore_3
     111: aload_3
     112: arraylength
     113: istore        4
     115: iconst_0
     116: istore        5
     118: iload         5
     120: iload         4
     122: if_icmpge     166
     125: aload_3
     126: iload         5
     128: aaload
     129: astore        6
     131: aload_0
     132: aload         6
     134: aload_1
     135: aload         6
     137: aconst_null
     138: invokevirtual #1432               // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     141: invokevirtual #1434               // Method setClientInfo:(Ljava/lang/String;Ljava/lang/String;)V
     144: goto          160
     147: astore        7
     149: aload_2
     150: aload         7
     152: invokevirtual #1437               // Method java/sql/SQLClientInfoException.getFailedProperties:()Ljava/util/Map;
     155: invokeinterface #1440,  2         // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     160: iinc          5, 1
     163: goto          118
     166: aload_2
     167: invokeinterface #1443,  1         // InterfaceMethod java/util/Map.isEmpty:()Z
     172: ifne          200
     175: new           #1384               // class java/sql/SQLClientInfoException
     178: dup
     179: ldc_w         #1445               // String One ore more ClientInfo failed.
     182: iconst_0
     183: anewarray     #4                  // class java/lang/Object
     186: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     189: getstatic     #662                // Field org/postgresql/util/PSQLState.NOT_IMPLEMENTED:Lorg/postgresql/util/PSQLState;
     192: invokevirtual #1373               // Method org/postgresql/util/PSQLState.getState:()Ljava/lang/String;
     195: aload_2
     196: invokespecial #1448               // Method java/sql/SQLClientInfoException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
     199: athrow
     200: return
    Exception table:
       from    to  target type
           0     4     7   Class java/sql/SQLException
         131   144   147   Class java/sql/SQLClientInfoException

  public java.lang.String getClientInfo(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: getfield      #419                // Field _clientInfo:Ljava/util/Properties;
       8: ldc_w         #429                // String ApplicationName
      11: aload_0
      12: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
      15: invokeinterface #1400,  1         // InterfaceMethod org/postgresql/core/QueryExecutor.getApplicationName:()Ljava/lang/String;
      20: invokevirtual #433                // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: aload_0
      25: getfield      #419                // Field _clientInfo:Ljava/util/Properties;
      28: aload_1
      29: invokevirtual #806                // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      32: areturn

  public java.util.Properties getClientInfo() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: getfield      #419                // Field _clientInfo:Ljava/util/Properties;
       8: ldc_w         #429                // String ApplicationName
      11: aload_0
      12: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
      15: invokeinterface #1400,  1         // InterfaceMethod org/postgresql/core/QueryExecutor.getApplicationName:()Ljava/lang/String;
      20: invokevirtual #433                // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: aload_0
      25: getfield      #419                // Field _clientInfo:Ljava/util/Properties;
      28: areturn

  public <T> T createQueryObject(java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #1169               // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc_w         #1458               // String createQueryObject(Class<T>)
      11: invokestatic  #1279               // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      14: athrow

  public boolean isWrapperFor(java.lang.Class<?>) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_1
       5: aload_0
       6: invokevirtual #1169               // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #1465               // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      12: ireturn

  public <T> T unwrap(java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_1
       5: aload_0
       6: invokevirtual #1169               // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #1465               // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      12: ifeq          21
      15: aload_1
      16: aload_0
      17: invokevirtual #1470               // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn
      21: new           #81                 // class java/sql/SQLException
      24: dup
      25: new           #498                // class java/lang/StringBuilder
      28: dup
      29: invokespecial #499                // Method java/lang/StringBuilder."<init>":()V
      32: ldc_w         #1472               // String Cannot unwrap to
      35: invokevirtual #523                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_1
      39: invokevirtual #1475               // Method java/lang/Class.getName:()Ljava/lang/String;
      42: invokevirtual #523                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #536                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #1476               // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      51: athrow

  public java.lang.String getSchema() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #619                // Method createStatement:()Ljava/sql/Statement;
       8: astore_1
       9: aload_1
      10: ldc_w         #1479               // String select current_schema()
      13: invokeinterface #1482,  2         // InterfaceMethod java/sql/Statement.executeQuery:(Ljava/lang/String;)Ljava/sql/ResultSet;
      18: astore_2
      19: aload_2
      20: invokeinterface #913,  1          // InterfaceMethod java/sql/ResultSet.next:()Z
      25: ifne          44
      28: aconst_null
      29: astore_3
      30: aload_2
      31: invokeinterface #917,  1          // InterfaceMethod java/sql/ResultSet.close:()V
      36: aload_1
      37: invokeinterface #1355,  1         // InterfaceMethod java/sql/Statement.close:()V
      42: aload_3
      43: areturn
      44: aload_2
      45: iconst_1
      46: invokeinterface #916,  2          // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
      51: astore_3
      52: aload_2
      53: invokeinterface #917,  1          // InterfaceMethod java/sql/ResultSet.close:()V
      58: aload_1
      59: invokeinterface #1355,  1         // InterfaceMethod java/sql/Statement.close:()V
      64: aload_3
      65: areturn
      66: astore        4
      68: aload_2
      69: invokeinterface #917,  1          // InterfaceMethod java/sql/ResultSet.close:()V
      74: aload         4
      76: athrow
      77: astore        5
      79: aload_1
      80: invokeinterface #1355,  1         // InterfaceMethod java/sql/Statement.close:()V
      85: aload         5
      87: athrow
    Exception table:
       from    to  target type
          19    30    66   any
          44    52    66   any
          66    68    66   any
           9    36    77   any
          44    58    77   any
          66    79    77   any

  public void setSchema(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #619                // Method createStatement:()Ljava/sql/Statement;
       8: astore_2
       9: aload_1
      10: ifnonnull     26
      13: aload_2
      14: ldc_w         #1485               // String SET SESSION search_path TO DEFAULT
      17: invokeinterface #1487,  2         // InterfaceMethod java/sql/Statement.executeUpdate:(Ljava/lang/String;)I
      22: pop
      23: goto          84
      26: new           #498                // class java/lang/StringBuilder
      29: dup
      30: invokespecial #499                // Method java/lang/StringBuilder."<init>":()V
      33: astore_3
      34: aload_3
      35: ldc_w         #1489               // String SET SESSION search_path TO \'
      38: invokevirtual #523                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: pop
      42: aload_3
      43: aload_1
      44: aload_0
      45: invokevirtual #1404               // Method getStandardConformingStrings:()Z
      48: invokestatic  #1027               // Method org/postgresql/core/Utils.escapeLiteral:(Ljava/lang/StringBuilder;Ljava/lang/String;Z)Ljava/lang/StringBuilder;
      51: pop
      52: aload_3
      53: ldc_w         #1406               // String \'
      56: invokevirtual #523                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: pop
      60: aload_2
      61: aload_3
      62: invokevirtual #536                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokeinterface #1487,  2         // InterfaceMethod java/sql/Statement.executeUpdate:(Ljava/lang/String;)I
      70: pop
      71: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
      74: getstatic     #123                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      77: ldc_w         #1491               // String   setSchema = {0}
      80: aload_1
      81: invokevirtual #137                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      84: aload_2
      85: invokeinterface #1355,  1         // InterfaceMethod java/sql/Statement.close:()V
      90: goto          104
      93: astore        4
      95: aload_2
      96: invokeinterface #1355,  1         // InterfaceMethod java/sql/Statement.close:()V
     101: aload         4
     103: athrow
     104: return
    Exception table:
       from    to  target type
           9    84    93   any
          93    95    93   any

  public void abort(java.util.concurrent.Executor) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #896                // Method isClosed:()Z
       4: ifeq          8
       7: return
       8: getstatic     #1495               // Field SQL_PERMISSION_ABORT:Ljava/sql/SQLPermission;
      11: aload_0
      12: invokevirtual #1501               // Method java/sql/SQLPermission.checkGuard:(Ljava/lang/Object;)V
      15: new           #9                  // class org/postgresql/jdbc/PgConnection$AbortCommand
      18: dup
      19: aload_0
      20: invokespecial #1502               // Method org/postgresql/jdbc/PgConnection$AbortCommand."<init>":(Lorg/postgresql/jdbc/PgConnection;)V
      23: astore_2
      24: aload_1
      25: ifnull        38
      28: aload_1
      29: aload_2
      30: invokeinterface #1507,  2         // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      35: goto          42
      38: aload_2
      39: invokevirtual #1510               // Method org/postgresql/jdbc/PgConnection$AbortCommand.run:()V
      42: return

  public void setNetworkTimeout(java.util.concurrent.Executor, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: iload_2
       5: ifge          29
       8: new           #326                // class org/postgresql/util/PSQLException
      11: dup
      12: ldc_w         #1518               // String Network timeout must be a value greater than or equal to 0.
      15: iconst_0
      16: anewarray     #4                  // class java/lang/Object
      19: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      22: getstatic     #340                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      25: invokespecial #343                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      28: athrow
      29: invokestatic  #1524               // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
      32: astore_3
      33: aload_3
      34: ifnull        44
      37: aload_3
      38: getstatic     #1526               // Field SQL_PERMISSION_NETWORK_TIMEOUT:Ljava/sql/SQLPermission;
      41: invokevirtual #1532               // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      44: aload_0
      45: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
      48: iload_2
      49: invokeinterface #1534,  2         // InterfaceMethod org/postgresql/core/QueryExecutor.setNetworkTimeout:(I)V
      54: goto          82
      57: astore        4
      59: new           #326                // class org/postgresql/util/PSQLException
      62: dup
      63: ldc_w         #1536               // String Unable to set network timeout.
      66: iconst_0
      67: anewarray     #4                  // class java/lang/Object
      70: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      73: getstatic     #1539               // Field org/postgresql/util/PSQLState.COMMUNICATION_ERROR:Lorg/postgresql/util/PSQLState;
      76: aload         4
      78: invokespecial #699                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
      81: athrow
      82: return
    Exception table:
       from    to  target type
          44    54    57   Class java/io/IOException

  public int getNetworkTimeout() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       8: invokeinterface #1545,  1         // InterfaceMethod org/postgresql/core/QueryExecutor.getNetworkTimeout:()I
      13: ireturn
      14: astore_1
      15: new           #326                // class org/postgresql/util/PSQLException
      18: dup
      19: ldc_w         #1547               // String Unable to get network timeout.
      22: iconst_0
      23: anewarray     #4                  // class java/lang/Object
      26: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      29: getstatic     #1539               // Field org/postgresql/util/PSQLState.COMMUNICATION_ERROR:Lorg/postgresql/util/PSQLState;
      32: aload_1
      33: invokespecial #699                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
      36: athrow
    Exception table:
       from    to  target type
           4    13    14   Class java/io/IOException

  public void setHoldability(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: iload_1
       5: lookupswitch  { // 2
                     1: 40
                     2: 32
               default: 48
          }
      32: aload_0
      33: iload_1
      34: putfield      #149                // Field rsHoldability:I
      37: goto          76
      40: aload_0
      41: iload_1
      42: putfield      #149                // Field rsHoldability:I
      45: goto          76
      48: new           #326                // class org/postgresql/util/PSQLException
      51: dup
      52: ldc_w         #1550               // String Unknown ResultSet holdability setting: {0}.
      55: iconst_1
      56: anewarray     #4                  // class java/lang/Object
      59: dup
      60: iconst_0
      61: iload_1
      62: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      65: aastore
      66: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      69: getstatic     #340                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      72: invokespecial #343                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      75: athrow
      76: getstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
      79: getstatic     #123                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      82: ldc_w         #1552               // String   setHoldability = {0}
      85: iload_1
      86: invokestatic  #257                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      89: invokevirtual #137                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      92: return

  public int getHoldability() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: getfield      #149                // Field rsHoldability:I
       8: ireturn

  public java.sql.Savepoint setSavepoint() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #1558               // Method getAutoCommit:()Z
       8: ifeq          32
      11: new           #326                // class org/postgresql/util/PSQLException
      14: dup
      15: ldc_w         #1560               // String Cannot establish a savepoint in auto-commit mode.
      18: iconst_0
      19: anewarray     #4                  // class java/lang/Object
      22: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      25: getstatic     #891                // Field org/postgresql/util/PSQLState.NO_ACTIVE_SQL_TRANSACTION:Lorg/postgresql/util/PSQLState;
      28: invokespecial #343                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      31: athrow
      32: new           #1562               // class org/postgresql/jdbc/PSQLSavepoint
      35: dup
      36: aload_0
      37: dup
      38: getfield      #151                // Field savepointId:I
      41: dup_x1
      42: iconst_1
      43: iadd
      44: putfield      #151                // Field savepointId:I
      47: invokespecial #1564               // Method org/postgresql/jdbc/PSQLSavepoint."<init>":(I)V
      50: astore_2
      51: aload_2
      52: invokevirtual #1567               // Method org/postgresql/jdbc/PSQLSavepoint.getPGName:()Ljava/lang/String;
      55: astore_1
      56: aload_0
      57: invokevirtual #619                // Method createStatement:()Ljava/sql/Statement;
      60: astore_3
      61: aload_3
      62: new           #498                // class java/lang/StringBuilder
      65: dup
      66: invokespecial #499                // Method java/lang/StringBuilder."<init>":()V
      69: ldc_w         #1569               // String SAVEPOINT
      72: invokevirtual #523                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_1
      76: invokevirtual #523                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: invokevirtual #536                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokeinterface #1487,  2         // InterfaceMethod java/sql/Statement.executeUpdate:(Ljava/lang/String;)I
      87: pop
      88: aload_3
      89: invokeinterface #1355,  1         // InterfaceMethod java/sql/Statement.close:()V
      94: aload_2
      95: areturn

  public java.sql.Savepoint setSavepoint(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #1558               // Method getAutoCommit:()Z
       8: ifeq          32
      11: new           #326                // class org/postgresql/util/PSQLException
      14: dup
      15: ldc_w         #1560               // String Cannot establish a savepoint in auto-commit mode.
      18: iconst_0
      19: anewarray     #4                  // class java/lang/Object
      22: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      25: getstatic     #891                // Field org/postgresql/util/PSQLState.NO_ACTIVE_SQL_TRANSACTION:Lorg/postgresql/util/PSQLState;
      28: invokespecial #343                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      31: athrow
      32: new           #1562               // class org/postgresql/jdbc/PSQLSavepoint
      35: dup
      36: aload_1
      37: invokespecial #1574               // Method org/postgresql/jdbc/PSQLSavepoint."<init>":(Ljava/lang/String;)V
      40: astore_2
      41: aload_0
      42: invokevirtual #619                // Method createStatement:()Ljava/sql/Statement;
      45: astore_3
      46: aload_3
      47: new           #498                // class java/lang/StringBuilder
      50: dup
      51: invokespecial #499                // Method java/lang/StringBuilder."<init>":()V
      54: ldc_w         #1569               // String SAVEPOINT
      57: invokevirtual #523                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_2
      61: invokevirtual #1567               // Method org/postgresql/jdbc/PSQLSavepoint.getPGName:()Ljava/lang/String;
      64: invokevirtual #523                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #536                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokeinterface #1487,  2         // InterfaceMethod java/sql/Statement.executeUpdate:(Ljava/lang/String;)I
      75: pop
      76: aload_3
      77: invokeinterface #1355,  1         // InterfaceMethod java/sql/Statement.close:()V
      82: aload_2
      83: areturn

  public void rollback(java.sql.Savepoint) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_1
       5: checkcast     #1562               // class org/postgresql/jdbc/PSQLSavepoint
       8: astore_2
       9: aload_0
      10: new           #498                // class java/lang/StringBuilder
      13: dup
      14: invokespecial #499                // Method java/lang/StringBuilder."<init>":()V
      17: ldc_w         #1577               // String ROLLBACK TO SAVEPOINT
      20: invokevirtual #523                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_2
      24: invokevirtual #1567               // Method org/postgresql/jdbc/PSQLSavepoint.getPGName:()Ljava/lang/String;
      27: invokevirtual #523                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #536                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokevirtual #854                // Method execSQLUpdate:(Ljava/lang/String;)V
      36: return

  public void releaseSavepoint(java.sql.Savepoint) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_1
       5: checkcast     #1562               // class org/postgresql/jdbc/PSQLSavepoint
       8: astore_2
       9: aload_0
      10: new           #498                // class java/lang/StringBuilder
      13: dup
      14: invokespecial #499                // Method java/lang/StringBuilder."<init>":()V
      17: ldc_w         #1582               // String RELEASE SAVEPOINT
      20: invokevirtual #523                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_2
      24: invokevirtual #1567               // Method org/postgresql/jdbc/PSQLSavepoint.getPGName:()Ljava/lang/String;
      27: invokevirtual #523                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #536                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokevirtual #854                // Method execSQLUpdate:(Ljava/lang/String;)V
      36: aload_2
      37: invokevirtual #1585               // Method org/postgresql/jdbc/PSQLSavepoint.invalidate:()V
      40: return

  public java.sql.Statement createStatement(int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: iload_2
       7: aload_0
       8: invokevirtual #1587               // Method getHoldability:()I
      11: invokevirtual #1589               // Method createStatement:(III)Ljava/sql/Statement;
      14: areturn

  public java.sql.PreparedStatement prepareStatement(java.lang.String, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: iload_3
       8: aload_0
       9: invokevirtual #1587               // Method getHoldability:()I
      12: invokevirtual #1591               // Method prepareStatement:(Ljava/lang/String;III)Ljava/sql/PreparedStatement;
      15: areturn

  public java.sql.CallableStatement prepareCall(java.lang.String, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #561                // Method checkClosed:()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: iload_3
       8: aload_0
       9: invokevirtual #1587               // Method getHoldability:()I
      12: invokevirtual #1593               // Method prepareCall:(Ljava/lang/String;III)Ljava/sql/CallableStatement;
      15: areturn

  public java.sql.PreparedStatement prepareStatement(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: iload_2
       1: iconst_1
       2: if_icmpeq     11
       5: aload_0
       6: aload_1
       7: invokevirtual #1359               // Method prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      10: areturn
      11: aload_0
      12: aload_1
      13: aconst_null
      14: checkcast     #1429               // class "[Ljava/lang/String;"
      17: invokevirtual #1597               // Method prepareStatement:(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;
      20: areturn

  public java.sql.PreparedStatement prepareStatement(java.lang.String, int[]) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnull        15
       4: aload_2
       5: arraylength
       6: ifne          15
       9: aload_0
      10: aload_1
      11: invokevirtual #1359               // Method prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      14: areturn
      15: aload_0
      16: invokevirtual #561                // Method checkClosed:()V
      19: new           #326                // class org/postgresql/util/PSQLException
      22: dup
      23: ldc_w         #1601               // String Returning autogenerated keys is not supported.
      26: iconst_0
      27: anewarray     #4                  // class java/lang/Object
      30: invokestatic  #334                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: getstatic     #662                // Field org/postgresql/util/PSQLState.NOT_IMPLEMENTED:Lorg/postgresql/util/PSQLState;
      36: invokespecial #343                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      39: athrow

  public java.sql.PreparedStatement prepareStatement(java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnull        15
       4: aload_2
       5: arraylength
       6: ifne          15
       9: aload_0
      10: aload_1
      11: invokevirtual #1359               // Method prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      14: areturn
      15: aload_0
      16: aload_1
      17: aload_2
      18: invokespecial #1604               // Method borrowReturningQuery:(Ljava/lang/String;[Ljava/lang/String;)Lorg/postgresql/core/CachedQuery;
      21: astore_3
      22: new           #1229               // class org/postgresql/jdbc/PgPreparedStatement
      25: dup
      26: aload_0
      27: aload_3
      28: sipush        1003
      31: sipush        1007
      34: aload_0
      35: invokevirtual #1587               // Method getHoldability:()I
      38: invokespecial #1607               // Method org/postgresql/jdbc/PgPreparedStatement."<init>":(Lorg/postgresql/jdbc/PgConnection;Lorg/postgresql/core/CachedQuery;III)V
      41: astore        4
      43: aload_3
      44: getfield      #361                // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      47: astore        5
      49: aload         5
      51: invokeinterface #1611,  1         // InterfaceMethod org/postgresql/core/Query.getSqlCommand:()Lorg/postgresql/core/SqlCommand;
      56: astore        6
      58: aload         6
      60: ifnull        73
      63: aload         4
      65: aload         6
      67: invokevirtual #1616               // Method org/postgresql/core/SqlCommand.isReturningKeywordPresent:()Z
      70: putfield      #1619               // Field org/postgresql/jdbc/PgPreparedStatement.wantsGeneratedKeysAlways:Z
      73: aload         4
      75: areturn

  static org.postgresql.core.QueryExecutor access$000(org.postgresql.jdbc.PgConnection);
    Code:
       0: aload_0
       1: getfield      #83                 // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: areturn

  static {};
    Code:
       0: ldc           #2                  // class org/postgresql/jdbc/PgConnection
       2: invokevirtual #1475               // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #1630               // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #117                // Field LOGGER:Ljava/util/logging/Logger;
      11: new           #1497               // class java/sql/SQLPermission
      14: dup
      15: ldc_w         #1632               // String callAbort
      18: invokespecial #1633               // Method java/sql/SQLPermission."<init>":(Ljava/lang/String;)V
      21: putstatic     #1495               // Field SQL_PERMISSION_ABORT:Ljava/sql/SQLPermission;
      24: new           #1497               // class java/sql/SQLPermission
      27: dup
      28: ldc_w         #1634               // String setNetworkTimeout
      31: invokespecial #1633               // Method java/sql/SQLPermission."<init>":(Ljava/lang/String;)V
      34: putstatic     #1526               // Field SQL_PERMISSION_NETWORK_TIMEOUT:Ljava/sql/SQLPermission;
      37: return
}
