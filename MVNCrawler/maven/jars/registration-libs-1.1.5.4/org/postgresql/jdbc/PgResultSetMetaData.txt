Compiled from "PgResultSetMetaData.java"
public class org.postgresql.jdbc.PgResultSetMetaData implements java.sql.ResultSetMetaData,org.postgresql.PGResultSetMetaData {
  protected final org.postgresql.core.BaseConnection connection;

  protected final org.postgresql.core.Field[] fields;

  private boolean fieldInfoFetched;

  public org.postgresql.jdbc.PgResultSetMetaData(org.postgresql.core.BaseConnection, org.postgresql.core.Field[]);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #27                 // Field connection:Lorg/postgresql/core/BaseConnection;
       9: aload_0
      10: aload_2
      11: putfield      #29                 // Field fields:[Lorg/postgresql/core/Field;
      14: aload_0
      15: iconst_0
      16: putfield      #31                 // Field fieldInfoFetched:Z
      19: return

  public int getColumnCount() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field fields:[Lorg/postgresql/core/Field;
       4: arraylength
       5: ireturn

  public boolean isAutoIncrement(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #42                 // Method fetchFieldMetaData:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #46                 // Method getField:(I)Lorg/postgresql/core/Field;
       9: astore_2
      10: aload_2
      11: invokevirtual #52                 // Method org/postgresql/core/Field.getMetadata:()Lorg/postgresql/jdbc/FieldMetadata;
      14: astore_3
      15: aload_3
      16: ifnull        30
      19: aload_3
      20: getfield      #55                 // Field org/postgresql/jdbc/FieldMetadata.autoIncrement:Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public boolean isCaseSensitive(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #46                 // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_0
       7: getfield      #27                 // Field connection:Lorg/postgresql/core/BaseConnection;
      10: invokeinterface #68,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      15: aload_2
      16: invokevirtual #71                 // Method org/postgresql/core/Field.getOID:()I
      19: invokeinterface #75,  2           // InterfaceMethod org/postgresql/core/TypeInfo.isCaseSensitive:(I)Z
      24: ireturn

  public boolean isSearchable(int) throws java.sql.SQLException;
    Code:
       0: iconst_1
       1: ireturn

  public boolean isCurrency(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #81                 // Method getPGType:(I)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ldc           #83                 // String cash
       9: invokevirtual #89                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: ifne          24
      15: aload_2
      16: ldc           #91                 // String money
      18: invokevirtual #89                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public int isNullable(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #42                 // Method fetchFieldMetaData:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #46                 // Method getField:(I)Lorg/postgresql/core/Field;
       9: astore_2
      10: aload_2
      11: invokevirtual #52                 // Method org/postgresql/core/Field.getMetadata:()Lorg/postgresql/jdbc/FieldMetadata;
      14: getfield      #98                 // Field org/postgresql/jdbc/FieldMetadata.nullable:I
      17: ireturn

  public boolean isSigned(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #46                 // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_0
       7: getfield      #27                 // Field connection:Lorg/postgresql/core/BaseConnection;
      10: invokeinterface #68,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      15: aload_2
      16: invokevirtual #71                 // Method org/postgresql/core/Field.getOID:()I
      19: invokeinterface #101,  2          // InterfaceMethod org/postgresql/core/TypeInfo.isSigned:(I)Z
      24: ireturn

  public int getColumnDisplaySize(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #46                 // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_0
       7: getfield      #27                 // Field connection:Lorg/postgresql/core/BaseConnection;
      10: invokeinterface #68,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      15: aload_2
      16: invokevirtual #71                 // Method org/postgresql/core/Field.getOID:()I
      19: aload_2
      20: invokevirtual #105                // Method org/postgresql/core/Field.getMod:()I
      23: invokeinterface #109,  3          // InterfaceMethod org/postgresql/core/TypeInfo.getDisplaySize:(II)I
      28: ireturn

  public java.lang.String getColumnLabel(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #46                 // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_2
       7: invokevirtual #113                // Method org/postgresql/core/Field.getColumnLabel:()Ljava/lang/String;
      10: areturn

  public java.lang.String getColumnName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #116                // Method getColumnLabel:(I)Ljava/lang/String;
       5: areturn

  public java.lang.String getBaseColumnName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #46                 // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_2
       7: invokevirtual #120                // Method org/postgresql/core/Field.getTableOid:()I
      10: ifne          16
      13: ldc           #122                // String
      15: areturn
      16: aload_0
      17: invokespecial #42                 // Method fetchFieldMetaData:()V
      20: aload_2
      21: invokevirtual #52                 // Method org/postgresql/core/Field.getMetadata:()Lorg/postgresql/jdbc/FieldMetadata;
      24: getfield      #125                // Field org/postgresql/jdbc/FieldMetadata.columnName:Ljava/lang/String;
      27: areturn

  public java.lang.String getSchemaName(int) throws java.sql.SQLException;
    Code:
       0: ldc           #122                // String
       2: areturn

  private boolean populateFieldsWithCachedMetadata();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #27                 // Field connection:Lorg/postgresql/core/BaseConnection;
       6: invokeinterface #132,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getFieldMetadataCache:()Lorg/postgresql/util/LruCache;
      11: astore_2
      12: aload_0
      13: getfield      #29                 // Field fields:[Lorg/postgresql/core/Field;
      16: astore_3
      17: aload_3
      18: arraylength
      19: istore        4
      21: iconst_0
      22: istore        5
      24: iload         5
      26: iload         4
      28: if_icmpge     97
      31: aload_3
      32: iload         5
      34: aaload
      35: astore        6
      37: aload         6
      39: invokevirtual #52                 // Method org/postgresql/core/Field.getMetadata:()Lorg/postgresql/jdbc/FieldMetadata;
      42: ifnull        48
      45: goto          91
      48: aload_2
      49: new           #11                 // class org/postgresql/jdbc/FieldMetadata$Key
      52: dup
      53: aload         6
      55: invokevirtual #120                // Method org/postgresql/core/Field.getTableOid:()I
      58: aload         6
      60: invokevirtual #138                // Method org/postgresql/core/Field.getPositionInTable:()I
      63: invokespecial #141                // Method org/postgresql/jdbc/FieldMetadata$Key."<init>":(II)V
      66: invokevirtual #145                // Method org/postgresql/util/LruCache.get:(Ljava/lang/Object;)Lorg/postgresql/util/CanEstimateSize;
      69: checkcast     #13                 // class org/postgresql/jdbc/FieldMetadata
      72: astore        7
      74: aload         7
      76: ifnonnull     84
      79: iconst_0
      80: istore_1
      81: goto          91
      84: aload         6
      86: aload         7
      88: invokevirtual #149                // Method org/postgresql/core/Field.setMetadata:(Lorg/postgresql/jdbc/FieldMetadata;)V
      91: iinc          5, 1
      94: goto          24
      97: iload_1
      98: ireturn

  private void fetchFieldMetaData() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #31                 // Field fieldInfoFetched:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokespecial #155                // Method populateFieldsWithCachedMetadata:()Z
      12: ifeq          21
      15: aload_0
      16: iconst_1
      17: putfield      #31                 // Field fieldInfoFetched:Z
      20: return
      21: new           #157                // class java/lang/StringBuilder
      24: dup
      25: ldc           #159                // String SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = \'d\' AND t.typnotnull),
      27: invokespecial #162                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      30: astore_1
      31: aload_0
      32: getfield      #27                 // Field connection:Lorg/postgresql/core/BaseConnection;
      35: getstatic     #168                // Field org/postgresql/core/ServerVersion.v10:Lorg/postgresql/core/ServerVersion;
      38: invokeinterface #172,  2          // InterfaceMethod org/postgresql/core/BaseConnection.haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
      43: ifeq          56
      46: aload_1
      47: ldc           #174                // String a.attidentity != \'\' OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE \'%nextval(%\'
      49: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: pop
      53: goto          63
      56: aload_1
      57: ldc           #180                // String pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE \'%nextval(%\'
      59: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: pop
      63: aload_1
      64: ldc           #182                // String FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (
      66: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: pop
      70: iconst_0
      71: istore_2
      72: aload_0
      73: getfield      #29                 // Field fields:[Lorg/postgresql/core/Field;
      76: astore_3
      77: aload_3
      78: arraylength
      79: istore        4
      81: iconst_0
      82: istore        5
      84: iload         5
      86: iload         4
      88: if_icmpge     187
      91: aload_3
      92: iload         5
      94: aaload
      95: astore        6
      97: aload         6
      99: invokevirtual #52                 // Method org/postgresql/core/Field.getMetadata:()Lorg/postgresql/jdbc/FieldMetadata;
     102: ifnull        108
     105: goto          181
     108: iload_2
     109: ifeq          119
     112: aload_1
     113: ldc           #184                // String  UNION ALL
     115: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: pop
     119: aload_1
     120: ldc           #186                // String SELECT
     122: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: pop
     126: aload_1
     127: aload         6
     129: invokevirtual #120                // Method org/postgresql/core/Field.getTableOid:()I
     132: invokevirtual #189                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     135: pop
     136: iload_2
     137: ifne          147
     140: aload_1
     141: ldc           #191                // String  AS oid
     143: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: pop
     147: aload_1
     148: ldc           #193                // String ,
     150: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: pop
     154: aload_1
     155: aload         6
     157: invokevirtual #138                // Method org/postgresql/core/Field.getPositionInTable:()I
     160: invokevirtual #189                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     163: pop
     164: iload_2
     165: ifne          175
     168: aload_1
     169: ldc           #195                // String  AS attnum
     171: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: pop
     175: iload_2
     176: ifne          181
     179: iconst_1
     180: istore_2
     181: iinc          5, 1
     184: goto          84
     187: aload_1
     188: ldc           #197                // String ) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum)
     190: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     193: pop
     194: iload_2
     195: ifne          204
     198: aload_0
     199: iconst_1
     200: putfield      #31                 // Field fieldInfoFetched:Z
     203: return
     204: aload_0
     205: getfield      #27                 // Field connection:Lorg/postgresql/core/BaseConnection;
     208: invokeinterface #201,  1          // InterfaceMethod org/postgresql/core/BaseConnection.createStatement:()Ljava/sql/Statement;
     213: astore_3
     214: aconst_null
     215: astore        4
     217: aload_0
     218: getfield      #27                 // Field connection:Lorg/postgresql/core/BaseConnection;
     221: invokeinterface #132,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getFieldMetadataCache:()Lorg/postgresql/util/LruCache;
     226: astore        5
     228: aload_3
     229: aload_1
     230: invokevirtual #204                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     233: invokeinterface #210,  2          // InterfaceMethod java/sql/Statement.executeQuery:(Ljava/lang/String;)Ljava/sql/ResultSet;
     238: astore        4
     240: aload         4
     242: invokeinterface #215,  1          // InterfaceMethod java/sql/ResultSet.next:()Z
     247: ifeq          376
     250: aload         4
     252: iconst_1
     253: invokeinterface #219,  2          // InterfaceMethod java/sql/ResultSet.getLong:(I)J
     258: l2i
     259: istore        6
     261: aload         4
     263: iconst_2
     264: invokeinterface #219,  2          // InterfaceMethod java/sql/ResultSet.getLong:(I)J
     269: l2i
     270: istore        7
     272: aload         4
     274: iconst_3
     275: invokeinterface #222,  2          // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
     280: astore        8
     282: aload         4
     284: iconst_4
     285: invokeinterface #222,  2          // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
     290: astore        9
     292: aload         4
     294: iconst_5
     295: invokeinterface #222,  2          // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
     300: astore        10
     302: aload         4
     304: bipush        6
     306: invokeinterface #225,  2          // InterfaceMethod java/sql/ResultSet.getBoolean:(I)Z
     311: ifeq          318
     314: iconst_0
     315: goto          319
     318: iconst_1
     319: istore        11
     321: aload         4
     323: bipush        7
     325: invokeinterface #225,  2          // InterfaceMethod java/sql/ResultSet.getBoolean:(I)Z
     330: istore        12
     332: new           #13                 // class org/postgresql/jdbc/FieldMetadata
     335: dup
     336: aload         8
     338: aload         9
     340: aload         10
     342: iload         11
     344: iload         12
     346: invokespecial #228                // Method org/postgresql/jdbc/FieldMetadata."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZ)V
     349: astore        13
     351: new           #11                 // class org/postgresql/jdbc/FieldMetadata$Key
     354: dup
     355: iload         6
     357: iload         7
     359: invokespecial #141                // Method org/postgresql/jdbc/FieldMetadata$Key."<init>":(II)V
     362: astore        14
     364: aload         5
     366: aload         14
     368: aload         13
     370: invokevirtual #232                // Method org/postgresql/util/LruCache.put:(Ljava/lang/Object;Lorg/postgresql/util/CanEstimateSize;)V
     373: goto          240
     376: aload         4
     378: invokestatic  #238                // Method org/postgresql/util/JdbcBlackHole.close:(Ljava/sql/ResultSet;)V
     381: aload_3
     382: invokestatic  #241                // Method org/postgresql/util/JdbcBlackHole.close:(Ljava/sql/Statement;)V
     385: goto          402
     388: astore        15
     390: aload         4
     392: invokestatic  #238                // Method org/postgresql/util/JdbcBlackHole.close:(Ljava/sql/ResultSet;)V
     395: aload_3
     396: invokestatic  #241                // Method org/postgresql/util/JdbcBlackHole.close:(Ljava/sql/Statement;)V
     399: aload         15
     401: athrow
     402: aload_0
     403: invokespecial #155                // Method populateFieldsWithCachedMetadata:()Z
     406: pop
     407: return
    Exception table:
       from    to  target type
         217   376   388   any
         388   390   388   any

  public java.lang.String getBaseSchemaName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #42                 // Method fetchFieldMetaData:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #46                 // Method getField:(I)Lorg/postgresql/core/Field;
       9: astore_2
      10: aload_2
      11: invokevirtual #52                 // Method org/postgresql/core/Field.getMetadata:()Lorg/postgresql/jdbc/FieldMetadata;
      14: getfield      #259                // Field org/postgresql/jdbc/FieldMetadata.schemaName:Ljava/lang/String;
      17: areturn

  public int getPrecision(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #46                 // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_0
       7: getfield      #27                 // Field connection:Lorg/postgresql/core/BaseConnection;
      10: invokeinterface #68,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      15: aload_2
      16: invokevirtual #71                 // Method org/postgresql/core/Field.getOID:()I
      19: aload_2
      20: invokevirtual #105                // Method org/postgresql/core/Field.getMod:()I
      23: invokeinterface #262,  3          // InterfaceMethod org/postgresql/core/TypeInfo.getPrecision:(II)I
      28: ireturn

  public int getScale(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #46                 // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_0
       7: getfield      #27                 // Field connection:Lorg/postgresql/core/BaseConnection;
      10: invokeinterface #68,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      15: aload_2
      16: invokevirtual #71                 // Method org/postgresql/core/Field.getOID:()I
      19: aload_2
      20: invokevirtual #105                // Method org/postgresql/core/Field.getMod:()I
      23: invokeinterface #265,  3          // InterfaceMethod org/postgresql/core/TypeInfo.getScale:(II)I
      28: ireturn

  public java.lang.String getTableName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #269                // Method getBaseTableName:(I)Ljava/lang/String;
       5: areturn

  public java.lang.String getBaseTableName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #42                 // Method fetchFieldMetaData:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #46                 // Method getField:(I)Lorg/postgresql/core/Field;
       9: astore_2
      10: aload_2
      11: invokevirtual #52                 // Method org/postgresql/core/Field.getMetadata:()Lorg/postgresql/jdbc/FieldMetadata;
      14: getfield      #271                // Field org/postgresql/jdbc/FieldMetadata.tableName:Ljava/lang/String;
      17: areturn

  public java.lang.String getCatalogName(int) throws java.sql.SQLException;
    Code:
       0: ldc           #122                // String
       2: areturn

  public int getColumnType(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #276                // Method getSQLType:(I)I
       5: ireturn

  public int getFormat(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #46                 // Method getField:(I)Lorg/postgresql/core/Field;
       5: invokevirtual #279                // Method org/postgresql/core/Field.getFormat:()I
       8: ireturn

  public java.lang.String getColumnTypeName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #81                 // Method getPGType:(I)Ljava/lang/String;
       5: astore_2
       6: aload_0
       7: iload_1
       8: invokevirtual #282                // Method isAutoIncrement:(I)Z
      11: ifeq          42
      14: ldc_w         #284                // String int4
      17: aload_2
      18: invokevirtual #89                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifeq          28
      24: ldc_w         #286                // String serial
      27: areturn
      28: ldc_w         #288                // String int8
      31: aload_2
      32: invokevirtual #89                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      35: ifeq          42
      38: ldc_w         #290                // String bigserial
      41: areturn
      42: aload_2
      43: areturn

  public boolean isReadOnly(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean isWritable(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #295                // Method isReadOnly:(I)Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isDefinitelyWritable(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  protected org.postgresql.core.Field getField(int) throws java.sql.SQLException;
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmplt     14
       5: iload_1
       6: aload_0
       7: getfield      #29                 // Field fields:[Lorg/postgresql/core/Field;
      10: arraylength
      11: if_icmple     53
      14: new           #298                // class org/postgresql/util/PSQLException
      17: dup
      18: ldc_w         #300                // String The column index is out of range: {0}, number of columns: {1}.
      21: iconst_2
      22: anewarray     #4                  // class java/lang/Object
      25: dup
      26: iconst_0
      27: iload_1
      28: invokestatic  #306                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      31: aastore
      32: dup
      33: iconst_1
      34: aload_0
      35: getfield      #29                 // Field fields:[Lorg/postgresql/core/Field;
      38: arraylength
      39: invokestatic  #306                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      42: aastore
      43: invokestatic  #312                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      46: getstatic     #318                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      49: invokespecial #321                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      52: athrow
      53: aload_0
      54: getfield      #29                 // Field fields:[Lorg/postgresql/core/Field;
      57: iload_1
      58: iconst_1
      59: isub
      60: aaload
      61: areturn

  protected java.lang.String getPGType(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field connection:Lorg/postgresql/core/BaseConnection;
       4: invokeinterface #68,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
       9: aload_0
      10: iload_1
      11: invokevirtual #46                 // Method getField:(I)Lorg/postgresql/core/Field;
      14: invokevirtual #71                 // Method org/postgresql/core/Field.getOID:()I
      17: invokeinterface #323,  2          // InterfaceMethod org/postgresql/core/TypeInfo.getPGType:(I)Ljava/lang/String;
      22: areturn

  protected int getSQLType(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field connection:Lorg/postgresql/core/BaseConnection;
       4: invokeinterface #68,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
       9: aload_0
      10: iload_1
      11: invokevirtual #46                 // Method getField:(I)Lorg/postgresql/core/Field;
      14: invokevirtual #71                 // Method org/postgresql/core/Field.getOID:()I
      17: invokeinterface #324,  2          // InterfaceMethod org/postgresql/core/TypeInfo.getSQLType:(I)I
      22: ireturn

  public java.lang.String getColumnClassName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #46                 // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_0
       7: getfield      #27                 // Field connection:Lorg/postgresql/core/BaseConnection;
      10: invokeinterface #68,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      15: aload_2
      16: invokevirtual #71                 // Method org/postgresql/core/Field.getOID:()I
      19: invokeinterface #328,  2          // InterfaceMethod org/postgresql/core/TypeInfo.getJavaClass:(I)Ljava/lang/String;
      24: astore_3
      25: aload_3
      26: ifnull        31
      29: aload_3
      30: areturn
      31: aload_0
      32: iload_1
      33: invokevirtual #276                // Method getSQLType:(I)I
      36: istore        4
      38: iload         4
      40: lookupswitch  { // 1
                  2003: 60
               default: 64
          }
      60: ldc_w         #330                // String java.sql.Array
      63: areturn
      64: aload_0
      65: iload_1
      66: invokevirtual #81                 // Method getPGType:(I)Ljava/lang/String;
      69: astore        5
      71: ldc_w         #332                // String unknown
      74: aload         5
      76: invokevirtual #89                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      79: ifeq          86
      82: ldc_w         #334                // String java.lang.String
      85: areturn
      86: ldc_w         #336                // String java.lang.Object
      89: areturn

  public boolean isWrapperFor(java.lang.Class<?>) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #344                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #349                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ireturn

  public <T> T unwrap(java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #344                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #349                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ifeq          17
      11: aload_1
      12: aload_0
      13: invokevirtual #358                // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn
      17: new           #37                 // class java/sql/SQLException
      20: dup
      21: new           #157                // class java/lang/StringBuilder
      24: dup
      25: invokespecial #359                // Method java/lang/StringBuilder."<init>":()V
      28: ldc_w         #361                // String Cannot unwrap to
      31: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokevirtual #364                // Method java/lang/Class.getName:()Ljava/lang/String;
      38: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #204                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #365                // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      47: athrow
}
