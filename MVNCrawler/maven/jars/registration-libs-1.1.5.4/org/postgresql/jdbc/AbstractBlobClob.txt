Compiled from "AbstractBlobClob.java"
public abstract class org.postgresql.jdbc.AbstractBlobClob {
  protected org.postgresql.core.BaseConnection conn;

  private org.postgresql.largeobject.LargeObject currentLo;

  private boolean currentLoIsWriteable;

  private boolean support64bit;

  private java.util.ArrayList<org.postgresql.largeobject.LargeObject> subLOs;

  private final long oid;

  public org.postgresql.jdbc.AbstractBlobClob(org.postgresql.core.BaseConnection, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #27                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #29                 // Field conn:Lorg/postgresql/core/BaseConnection;
       9: aload_0
      10: lload_2
      11: putfield      #31                 // Field oid:J
      14: aload_0
      15: aconst_null
      16: putfield      #33                 // Field currentLo:Lorg/postgresql/largeobject/LargeObject;
      19: aload_0
      20: iconst_0
      21: putfield      #35                 // Field currentLoIsWriteable:Z
      24: aload_0
      25: aload_1
      26: ldc           #36                 // int 90300
      28: invokeinterface #42,  2           // InterfaceMethod org/postgresql/core/BaseConnection.haveMinimumServerVersion:(I)Z
      33: putfield      #44                 // Field support64bit:Z
      36: aload_0
      37: new           #46                 // class java/util/ArrayList
      40: dup
      41: invokespecial #47                 // Method java/util/ArrayList."<init>":()V
      44: putfield      #49                 // Field subLOs:Ljava/util/ArrayList;
      47: return

  public synchronized void free() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field currentLo:Lorg/postgresql/largeobject/LargeObject;
       4: ifnull        24
       7: aload_0
       8: getfield      #33                 // Field currentLo:Lorg/postgresql/largeobject/LargeObject;
      11: invokevirtual #57                 // Method org/postgresql/largeobject/LargeObject.close:()V
      14: aload_0
      15: aconst_null
      16: putfield      #33                 // Field currentLo:Lorg/postgresql/largeobject/LargeObject;
      19: aload_0
      20: iconst_0
      21: putfield      #35                 // Field currentLoIsWriteable:Z
      24: aload_0
      25: getfield      #49                 // Field subLOs:Ljava/util/ArrayList;
      28: invokevirtual #61                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      31: astore_1
      32: aload_1
      33: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          58
      41: aload_1
      42: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #54                 // class org/postgresql/largeobject/LargeObject
      50: astore_2
      51: aload_2
      52: invokevirtual #57                 // Method org/postgresql/largeobject/LargeObject.close:()V
      55: goto          32
      58: aload_0
      59: aconst_null
      60: putfield      #49                 // Field subLOs:Ljava/util/ArrayList;
      63: return

  public synchronized void truncate(long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method checkFreed:()V
       4: aload_0
       5: getfield      #29                 // Field conn:Lorg/postgresql/core/BaseConnection;
       8: getstatic     #83                 // Field org/postgresql/core/ServerVersion.v8_3:Lorg/postgresql/core/ServerVersion;
      11: invokeinterface #86,  2           // InterfaceMethod org/postgresql/core/BaseConnection.haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
      16: ifne          39
      19: new           #88                 // class org/postgresql/util/PSQLException
      22: dup
      23: ldc           #90                 // String Truncation of large objects is only implemented in 8.3 and later servers.
      25: iconst_0
      26: anewarray     #4                  // class java/lang/Object
      29: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      32: getstatic     #102                // Field org/postgresql/util/PSQLState.NOT_IMPLEMENTED:Lorg/postgresql/util/PSQLState;
      35: invokespecial #105                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      38: athrow
      39: lload_1
      40: lconst_0
      41: lcmp
      42: ifge          65
      45: new           #88                 // class org/postgresql/util/PSQLException
      48: dup
      49: ldc           #107                // String Cannot truncate LOB to a negative length.
      51: iconst_0
      52: anewarray     #4                  // class java/lang/Object
      55: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      58: getstatic     #110                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      61: invokespecial #105                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      64: athrow
      65: lload_1
      66: ldc2_w        #111                // long 2147483647l
      69: lcmp
      70: ifle          120
      73: aload_0
      74: getfield      #44                 // Field support64bit:Z
      77: ifeq          92
      80: aload_0
      81: iconst_1
      82: invokevirtual #116                // Method getLo:(Z)Lorg/postgresql/largeobject/LargeObject;
      85: lload_1
      86: invokevirtual #119                // Method org/postgresql/largeobject/LargeObject.truncate64:(J)V
      89: goto          130
      92: new           #88                 // class org/postgresql/util/PSQLException
      95: dup
      96: ldc           #121                // String PostgreSQL LOBs can only index to: {0}
      98: iconst_1
      99: anewarray     #4                  // class java/lang/Object
     102: dup
     103: iconst_0
     104: ldc           #122                // int 2147483647
     106: invokestatic  #128                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     109: aastore
     110: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     113: getstatic     #110                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
     116: invokespecial #105                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     119: athrow
     120: aload_0
     121: iconst_1
     122: invokevirtual #116                // Method getLo:(Z)Lorg/postgresql/largeobject/LargeObject;
     125: lload_1
     126: l2i
     127: invokevirtual #131                // Method org/postgresql/largeobject/LargeObject.truncate:(I)V
     130: return

  public synchronized long length() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method checkFreed:()V
       4: aload_0
       5: getfield      #44                 // Field support64bit:Z
       8: ifeq          20
      11: aload_0
      12: iconst_0
      13: invokevirtual #116                // Method getLo:(Z)Lorg/postgresql/largeobject/LargeObject;
      16: invokevirtual #137                // Method org/postgresql/largeobject/LargeObject.size64:()J
      19: lreturn
      20: aload_0
      21: iconst_0
      22: invokevirtual #116                // Method getLo:(Z)Lorg/postgresql/largeobject/LargeObject;
      25: invokevirtual #141                // Method org/postgresql/largeobject/LargeObject.size:()I
      28: i2l
      29: lreturn

  public synchronized byte[] getBytes(long, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #146                // Method assertPosition:(J)V
       5: aload_0
       6: iconst_0
       7: invokevirtual #116                // Method getLo:(Z)Lorg/postgresql/largeobject/LargeObject;
      10: lload_1
      11: lconst_1
      12: lsub
      13: l2i
      14: iconst_0
      15: invokevirtual #150                // Method org/postgresql/largeobject/LargeObject.seek:(II)V
      18: aload_0
      19: iconst_0
      20: invokevirtual #116                // Method getLo:(Z)Lorg/postgresql/largeobject/LargeObject;
      23: iload_3
      24: invokevirtual #154                // Method org/postgresql/largeobject/LargeObject.read:(I)[B
      27: areturn

  public synchronized java.io.InputStream getBinaryStream() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method checkFreed:()V
       4: aload_0
       5: iconst_0
       6: invokevirtual #116                // Method getLo:(Z)Lorg/postgresql/largeobject/LargeObject;
       9: invokevirtual #162                // Method org/postgresql/largeobject/LargeObject.copy:()Lorg/postgresql/largeobject/LargeObject;
      12: astore_1
      13: aload_0
      14: aload_1
      15: invokevirtual #166                // Method addSubLO:(Lorg/postgresql/largeobject/LargeObject;)V
      18: aload_1
      19: iconst_0
      20: iconst_0
      21: invokevirtual #150                // Method org/postgresql/largeobject/LargeObject.seek:(II)V
      24: aload_1
      25: invokevirtual #169                // Method org/postgresql/largeobject/LargeObject.getInputStream:()Ljava/io/InputStream;
      28: areturn

  public synchronized java.io.OutputStream setBinaryStream(long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #146                // Method assertPosition:(J)V
       5: aload_0
       6: iconst_1
       7: invokevirtual #116                // Method getLo:(Z)Lorg/postgresql/largeobject/LargeObject;
      10: invokevirtual #162                // Method org/postgresql/largeobject/LargeObject.copy:()Lorg/postgresql/largeobject/LargeObject;
      13: astore_3
      14: aload_0
      15: aload_3
      16: invokevirtual #166                // Method addSubLO:(Lorg/postgresql/largeobject/LargeObject;)V
      19: aload_3
      20: lload_1
      21: lconst_1
      22: lsub
      23: l2i
      24: invokevirtual #173                // Method org/postgresql/largeobject/LargeObject.seek:(I)V
      27: aload_3
      28: invokevirtual #177                // Method org/postgresql/largeobject/LargeObject.getOutputStream:()Ljava/io/OutputStream;
      31: areturn

  public synchronized long position(byte[], long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: lload_2
       2: aload_1
       3: arraylength
       4: i2l
       5: invokevirtual #182                // Method assertPosition:(JJ)V
       8: iconst_1
       9: istore        4
      11: iconst_0
      12: istore        5
      14: ldc2_w        #183                // long -1l
      17: lstore        6
      19: iconst_1
      20: istore        8
      22: new           #7                  // class org/postgresql/jdbc/AbstractBlobClob$LOIterator
      25: dup
      26: aload_0
      27: lload_2
      28: lconst_1
      29: lsub
      30: invokespecial #187                // Method org/postgresql/jdbc/AbstractBlobClob$LOIterator."<init>":(Lorg/postgresql/jdbc/AbstractBlobClob;J)V
      33: astore        9
      35: aload         9
      37: invokevirtual #190                // Method org/postgresql/jdbc/AbstractBlobClob$LOIterator.hasNext:()Z
      40: ifeq          95
      43: aload         9
      45: invokestatic  #194                // Method org/postgresql/jdbc/AbstractBlobClob$LOIterator.access$000:(Lorg/postgresql/jdbc/AbstractBlobClob$LOIterator;)B
      48: istore        10
      50: iload         10
      52: aload_1
      53: iload         5
      55: baload
      56: if_icmpne     86
      59: iload         5
      61: ifne          68
      64: iload         4
      66: istore        8
      68: iinc          5, 1
      71: iload         5
      73: aload_1
      74: arraylength
      75: if_icmpne     89
      78: iload         8
      80: i2l
      81: lstore        6
      83: goto          95
      86: iconst_0
      87: istore        5
      89: iinc          4, 1
      92: goto          35
      95: lload         6
      97: lreturn

  public synchronized long position(java.sql.Blob, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: lconst_1
       3: aload_1
       4: invokeinterface #208,  1          // InterfaceMethod java/sql/Blob.length:()J
       9: l2i
      10: invokeinterface #210,  4          // InterfaceMethod java/sql/Blob.getBytes:(JI)[B
      15: lload_2
      16: invokevirtual #212                // Method position:([BJ)J
      19: lreturn

  protected void assertPosition(long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: lload_1
       2: lconst_0
       3: invokevirtual #182                // Method assertPosition:(JJ)V
       6: return

  protected void assertPosition(long, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method checkFreed:()V
       4: lload_1
       5: lconst_1
       6: lcmp
       7: ifge          30
      10: new           #88                 // class org/postgresql/util/PSQLException
      13: dup
      14: ldc           #215                // String LOB positioning offsets start at 1.
      16: iconst_0
      17: anewarray     #4                  // class java/lang/Object
      20: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: getstatic     #110                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      26: invokespecial #105                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      29: athrow
      30: lload_1
      31: lload_3
      32: ladd
      33: lconst_1
      34: lsub
      35: ldc2_w        #111                // long 2147483647l
      38: lcmp
      39: ifle          70
      42: new           #88                 // class org/postgresql/util/PSQLException
      45: dup
      46: ldc           #121                // String PostgreSQL LOBs can only index to: {0}
      48: iconst_1
      49: anewarray     #4                  // class java/lang/Object
      52: dup
      53: iconst_0
      54: ldc           #122                // int 2147483647
      56: invokestatic  #128                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      59: aastore
      60: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      63: getstatic     #110                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      66: invokespecial #105                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      69: athrow
      70: return

  protected void checkFreed() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #49                 // Field subLOs:Ljava/util/ArrayList;
       4: ifnonnull     27
       7: new           #88                 // class org/postgresql/util/PSQLException
      10: dup
      11: ldc           #217                // String free() was called on this LOB previously
      13: iconst_0
      14: anewarray     #4                  // class java/lang/Object
      17: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      20: getstatic     #220                // Field org/postgresql/util/PSQLState.OBJECT_NOT_IN_STATE:Lorg/postgresql/util/PSQLState;
      23: invokespecial #105                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      26: athrow
      27: return

  protected synchronized org.postgresql.largeobject.LargeObject getLo(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field currentLo:Lorg/postgresql/largeobject/LargeObject;
       4: ifnull        83
       7: iload_1
       8: ifeq          78
      11: aload_0
      12: getfield      #35                 // Field currentLoIsWriteable:Z
      15: ifne          78
      18: aload_0
      19: getfield      #33                 // Field currentLo:Lorg/postgresql/largeobject/LargeObject;
      22: invokevirtual #223                // Method org/postgresql/largeobject/LargeObject.tell:()I
      25: istore_2
      26: aload_0
      27: getfield      #29                 // Field conn:Lorg/postgresql/core/BaseConnection;
      30: invokeinterface #227,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLargeObjectAPI:()Lorg/postgresql/largeobject/LargeObjectManager;
      35: astore_3
      36: aload_3
      37: aload_0
      38: getfield      #31                 // Field oid:J
      41: ldc           #228                // int 393216
      43: invokevirtual #234                // Method org/postgresql/largeobject/LargeObjectManager.open:(JI)Lorg/postgresql/largeobject/LargeObject;
      46: astore        4
      48: aload_0
      49: getfield      #49                 // Field subLOs:Ljava/util/ArrayList;
      52: aload_0
      53: getfield      #33                 // Field currentLo:Lorg/postgresql/largeobject/LargeObject;
      56: invokevirtual #238                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      59: pop
      60: aload_0
      61: aload         4
      63: putfield      #33                 // Field currentLo:Lorg/postgresql/largeobject/LargeObject;
      66: iload_2
      67: ifeq          78
      70: aload_0
      71: getfield      #33                 // Field currentLo:Lorg/postgresql/largeobject/LargeObject;
      74: iload_2
      75: invokevirtual #173                // Method org/postgresql/largeobject/LargeObject.seek:(I)V
      78: aload_0
      79: getfield      #33                 // Field currentLo:Lorg/postgresql/largeobject/LargeObject;
      82: areturn
      83: aload_0
      84: getfield      #29                 // Field conn:Lorg/postgresql/core/BaseConnection;
      87: invokeinterface #227,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLargeObjectAPI:()Lorg/postgresql/largeobject/LargeObjectManager;
      92: astore_2
      93: aload_0
      94: aload_2
      95: aload_0
      96: getfield      #31                 // Field oid:J
      99: iload_1
     100: ifeq          108
     103: ldc           #228                // int 393216
     105: goto          110
     108: ldc           #239                // int 262144
     110: invokevirtual #234                // Method org/postgresql/largeobject/LargeObjectManager.open:(JI)Lorg/postgresql/largeobject/LargeObject;
     113: putfield      #33                 // Field currentLo:Lorg/postgresql/largeobject/LargeObject;
     116: aload_0
     117: iload_1
     118: putfield      #35                 // Field currentLoIsWriteable:Z
     121: aload_0
     122: getfield      #33                 // Field currentLo:Lorg/postgresql/largeobject/LargeObject;
     125: areturn

  protected void addSubLO(org.postgresql.largeobject.LargeObject);
    Code:
       0: aload_0
       1: getfield      #49                 // Field subLOs:Ljava/util/ArrayList;
       4: aload_1
       5: invokevirtual #238                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: return
}
