Compiled from "PgStatement.java"
public class org.postgresql.jdbc.PgStatement implements java.sql.Statement,org.postgresql.core.BaseStatement {
  private static final java.lang.String[] NO_RETURNING_COLUMNS;

  private static final boolean DEFAULT_FORCE_BINARY_TRANSFERS;

  private boolean forceBinaryTransfers;

  protected java.util.ArrayList<org.postgresql.core.Query> batchStatements;

  protected java.util.ArrayList<org.postgresql.core.ParameterList> batchParameters;

  protected final int resultsettype;

  protected final int concurrency;

  private final int rsHoldability;

  private boolean poolable;

  private boolean closeOnCompletion;

  protected int fetchdirection;

  private volatile java.util.TimerTask cancelTimerTask;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<org.postgresql.jdbc.PgStatement, java.util.TimerTask> CANCEL_TIMER_UPDATER;

  private volatile org.postgresql.jdbc.StatementCancelState statementState;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<org.postgresql.jdbc.PgStatement, org.postgresql.jdbc.StatementCancelState> STATE_UPDATER;

  protected boolean wantsGeneratedKeysOnce;

  public boolean wantsGeneratedKeysAlways;

  protected final org.postgresql.core.BaseConnection connection;

  protected volatile org.postgresql.jdbc.PSQLWarningWrapper warnings;

  protected int maxrows;

  protected int fetchSize;

  protected int timeout;

  protected boolean replaceProcessingEnabled;

  protected org.postgresql.jdbc.ResultWrapper result;

  protected org.postgresql.jdbc.ResultWrapper firstUnclosedResult;

  protected org.postgresql.jdbc.ResultWrapper generatedKeys;

  protected int m_prepareThreshold;

  protected int maxfieldSize;

  private volatile boolean isClosed;

  org.postgresql.jdbc.PgStatement(org.postgresql.jdbc.PgConnection, int, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #64                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #66                 // Field DEFAULT_FORCE_BINARY_TRANSFERS:Z
       8: putfield      #68                 // Field forceBinaryTransfers:Z
      11: aload_0
      12: aconst_null
      13: putfield      #70                 // Field batchStatements:Ljava/util/ArrayList;
      16: aload_0
      17: aconst_null
      18: putfield      #72                 // Field batchParameters:Ljava/util/ArrayList;
      21: aload_0
      22: iconst_0
      23: putfield      #74                 // Field closeOnCompletion:Z
      26: aload_0
      27: sipush        1000
      30: putfield      #76                 // Field fetchdirection:I
      33: aload_0
      34: aconst_null
      35: putfield      #78                 // Field cancelTimerTask:Ljava/util/TimerTask;
      38: aload_0
      39: getstatic     #83                 // Field org/postgresql/jdbc/StatementCancelState.IDLE:Lorg/postgresql/jdbc/StatementCancelState;
      42: putfield      #85                 // Field statementState:Lorg/postgresql/jdbc/StatementCancelState;
      45: aload_0
      46: iconst_0
      47: putfield      #87                 // Field wantsGeneratedKeysOnce:Z
      50: aload_0
      51: iconst_0
      52: putfield      #89                 // Field wantsGeneratedKeysAlways:Z
      55: aload_0
      56: aconst_null
      57: putfield      #91                 // Field warnings:Lorg/postgresql/jdbc/PSQLWarningWrapper;
      60: aload_0
      61: iconst_0
      62: putfield      #93                 // Field maxrows:I
      65: aload_0
      66: iconst_0
      67: putfield      #95                 // Field fetchSize:I
      70: aload_0
      71: iconst_0
      72: putfield      #97                 // Field timeout:I
      75: aload_0
      76: iconst_1
      77: putfield      #99                 // Field replaceProcessingEnabled:Z
      80: aload_0
      81: aconst_null
      82: putfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      85: aload_0
      86: aconst_null
      87: putfield      #103                // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      90: aload_0
      91: aconst_null
      92: putfield      #105                // Field generatedKeys:Lorg/postgresql/jdbc/ResultWrapper;
      95: aload_0
      96: iconst_0
      97: putfield      #107                // Field maxfieldSize:I
     100: aload_0
     101: iconst_0
     102: putfield      #109                // Field isClosed:Z
     105: aload_0
     106: aload_1
     107: putfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
     110: aload_0
     111: dup
     112: getfield      #68                 // Field forceBinaryTransfers:Z
     115: aload_1
     116: invokevirtual #117                // Method org/postgresql/jdbc/PgConnection.getForceBinary:()Z
     119: ior
     120: putfield      #68                 // Field forceBinaryTransfers:Z
     123: aload_0
     124: iload_2
     125: putfield      #119                // Field resultsettype:I
     128: aload_0
     129: iload_3
     130: putfield      #121                // Field concurrency:I
     133: aload_0
     134: aload_1
     135: invokevirtual #125                // Method org/postgresql/jdbc/PgConnection.getDefaultFetchSize:()I
     138: invokevirtual #129                // Method setFetchSize:(I)V
     141: aload_0
     142: aload_1
     143: invokevirtual #132                // Method org/postgresql/jdbc/PgConnection.getPrepareThreshold:()I
     146: invokevirtual #135                // Method setPrepareThreshold:(I)V
     149: aload_0
     150: iload         4
     152: putfield      #137                // Field rsHoldability:I
     155: return

  public java.sql.ResultSet createResultSet(org.postgresql.core.Query, org.postgresql.core.Field[], java.util.List<byte[][]>, org.postgresql.core.ResultCursor) throws java.sql.SQLException;
    Code:
       0: new           #147                // class org/postgresql/jdbc/PgResultSet
       3: dup
       4: aload_1
       5: aload_0
       6: aload_2
       7: aload_3
       8: aload         4
      10: aload_0
      11: invokevirtual #150                // Method getMaxRows:()I
      14: aload_0
      15: invokevirtual #153                // Method getMaxFieldSize:()I
      18: aload_0
      19: invokevirtual #156                // Method getResultSetType:()I
      22: aload_0
      23: invokevirtual #159                // Method getResultSetConcurrency:()I
      26: aload_0
      27: invokevirtual #162                // Method getResultSetHoldability:()I
      30: invokespecial #165                // Method org/postgresql/jdbc/PgResultSet."<init>":(Lorg/postgresql/core/Query;Lorg/postgresql/core/BaseStatement;[Lorg/postgresql/core/Field;Ljava/util/List;Lorg/postgresql/core/ResultCursor;IIIII)V
      33: astore        5
      35: aload         5
      37: aload_0
      38: invokevirtual #168                // Method getFetchSize:()I
      41: invokevirtual #169                // Method org/postgresql/jdbc/PgResultSet.setFetchSize:(I)V
      44: aload         5
      46: aload_0
      47: invokevirtual #172                // Method getFetchDirection:()I
      50: invokevirtual #175                // Method org/postgresql/jdbc/PgResultSet.setFetchDirection:(I)V
      53: aload         5
      55: areturn

  public org.postgresql.core.BaseConnection getPGConnection();
    Code:
       0: aload_0
       1: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
       4: areturn

  public java.lang.String getFetchingCursorName();
    Code:
       0: aconst_null
       1: areturn

  public int getFetchSize();
    Code:
       0: aload_0
       1: getfield      #95                 // Field fetchSize:I
       4: ireturn

  protected boolean wantsScrollableResultSet();
    Code:
       0: aload_0
       1: getfield      #119                // Field resultsettype:I
       4: sipush        1003
       7: if_icmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  protected boolean wantsHoldableResultSet();
    Code:
       0: aload_0
       1: getfield      #137                // Field rsHoldability:I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public java.sql.ResultSet executeQuery(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #198                // Method executeWithFlags:(Ljava/lang/String;I)Z
       6: ifne          29
       9: new           #200                // class org/postgresql/util/PSQLException
      12: dup
      13: ldc           #202                // String No results were returned by the query.
      15: iconst_0
      16: anewarray     #4                  // class java/lang/Object
      19: invokestatic  #208                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      22: getstatic     #214                // Field org/postgresql/util/PSQLState.NO_DATA:Lorg/postgresql/util/PSQLState;
      25: invokespecial #217                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      28: athrow
      29: aload_0
      30: invokevirtual #221                // Method getSingleResultSet:()Ljava/sql/ResultSet;
      33: areturn

  protected java.sql.ResultSet getSingleResultSet() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: invokevirtual #226                // Method checkClosed:()V
       8: aload_0
       9: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      12: invokevirtual #232                // Method org/postgresql/jdbc/ResultWrapper.getNext:()Lorg/postgresql/jdbc/ResultWrapper;
      15: ifnull        38
      18: new           #200                // class org/postgresql/util/PSQLException
      21: dup
      22: ldc           #234                // String Multiple ResultSets were returned by the query.
      24: iconst_0
      25: anewarray     #4                  // class java/lang/Object
      28: invokestatic  #208                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      31: getstatic     #237                // Field org/postgresql/util/PSQLState.TOO_MANY_RESULTS:Lorg/postgresql/util/PSQLState;
      34: invokespecial #217                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      37: athrow
      38: aload_0
      39: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      42: invokevirtual #240                // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      45: aload_1
      46: monitorexit
      47: areturn
      48: astore_2
      49: aload_1
      50: monitorexit
      51: aload_2
      52: athrow
    Exception table:
       from    to  target type
           4    47    48   any
          48    51    48   any

  public int executeUpdate(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_4
       3: invokevirtual #198                // Method executeWithFlags:(Ljava/lang/String;I)Z
       6: pop
       7: aload_0
       8: invokevirtual #247                // Method getNoResultUpdateCount:()I
      11: ireturn

  protected int getNoResultUpdateCount() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: invokevirtual #226                // Method checkClosed:()V
       8: aload_0
       9: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      12: astore_2
      13: aload_2
      14: ifnull        52
      17: aload_2
      18: invokevirtual #240                // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      21: ifnull        44
      24: new           #200                // class org/postgresql/util/PSQLException
      27: dup
      28: ldc           #249                // String A result was returned when none was expected.
      30: iconst_0
      31: anewarray     #4                  // class java/lang/Object
      34: invokestatic  #208                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      37: getstatic     #237                // Field org/postgresql/util/PSQLState.TOO_MANY_RESULTS:Lorg/postgresql/util/PSQLState;
      40: invokespecial #217                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      43: athrow
      44: aload_2
      45: invokevirtual #232                // Method org/postgresql/jdbc/ResultWrapper.getNext:()Lorg/postgresql/jdbc/ResultWrapper;
      48: astore_2
      49: goto          13
      52: aload_0
      53: invokevirtual #252                // Method getUpdateCount:()I
      56: aload_1
      57: monitorexit
      58: ireturn
      59: astore_3
      60: aload_1
      61: monitorexit
      62: aload_3
      63: athrow
    Exception table:
       from    to  target type
           4    58    59   any
          59    62    59   any

  public boolean execute(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #198                // Method executeWithFlags:(Ljava/lang/String;I)Z
       6: ireturn

  public boolean executeWithFlags(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: getstatic     #257                // Field NO_RETURNING_COLUMNS:[Ljava/lang/String;
       6: invokespecial #261                // Method executeCachedSql:(Ljava/lang/String;I[Ljava/lang/String;)Z
       9: ireturn

  private boolean executeCachedSql(java.lang.String, int, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
       4: invokeinterface #269,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getPreferQueryMode:()Lorg/postgresql/jdbc/PreferQueryMode;
       9: astore        4
      11: iconst_0
      12: istore        5
      14: aload_0
      15: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
      18: invokeinterface #273,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
      23: astore        6
      25: aload         6
      27: aload_1
      28: aload_0
      29: getfield      #99                 // Field replaceProcessingEnabled:Z
      32: iload         5
      34: aload_3
      35: invokeinterface #279,  5          // InterfaceMethod org/postgresql/core/QueryExecutor.createQueryKey:(Ljava/lang/String;ZZ[Ljava/lang/String;)Ljava/lang/Object;
      40: astore        7
      42: aload         4
      44: getstatic     #285                // Field org/postgresql/jdbc/PreferQueryMode.EXTENDED_CACHE_EVERYTHING:Lorg/postgresql/jdbc/PreferQueryMode;
      47: if_acmpne     54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: istore        9
      57: iload         9
      59: ifeq          76
      62: aload         6
      64: aload         7
      66: invokeinterface #292,  2          // InterfaceMethod org/postgresql/core/QueryExecutor.borrowQueryByKey:(Ljava/lang/Object;)Lorg/postgresql/core/CachedQuery;
      71: astore        8
      73: goto          87
      76: aload         6
      78: aload         7
      80: invokeinterface #295,  2          // InterfaceMethod org/postgresql/core/QueryExecutor.createQueryByKey:(Ljava/lang/Object;)Lorg/postgresql/core/CachedQuery;
      85: astore        8
      87: aload_0
      88: getfield      #87                 // Field wantsGeneratedKeysOnce:Z
      91: ifeq          128
      94: aload         8
      96: getfield      #300                // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      99: invokeinterface #306,  1          // InterfaceMethod org/postgresql/core/Query.getSqlCommand:()Lorg/postgresql/core/SqlCommand;
     104: astore        10
     106: aload_0
     107: aload         10
     109: ifnull        124
     112: aload         10
     114: invokevirtual #311                // Method org/postgresql/core/SqlCommand.isReturningKeywordPresent:()Z
     117: ifeq          124
     120: iconst_1
     121: goto          125
     124: iconst_0
     125: putfield      #87                 // Field wantsGeneratedKeysOnce:Z
     128: aload_0
     129: aload         8
     131: iload_2
     132: invokevirtual #314                // Method executeWithFlags:(Lorg/postgresql/core/CachedQuery;I)Z
     135: istore        10
     137: iload         9
     139: ifeq          173
     142: aload         6
     144: aload         8
     146: invokeinterface #318,  2          // InterfaceMethod org/postgresql/core/QueryExecutor.releaseQuery:(Lorg/postgresql/core/CachedQuery;)V
     151: goto          173
     154: astore        11
     156: iload         9
     158: ifeq          170
     161: aload         6
     163: aload         8
     165: invokeinterface #318,  2          // InterfaceMethod org/postgresql/core/QueryExecutor.releaseQuery:(Lorg/postgresql/core/CachedQuery;)V
     170: aload         11
     172: athrow
     173: iload         10
     175: ireturn
    Exception table:
       from    to  target type
         128   137   154   any
         154   156   154   any

  public boolean executeWithFlags(org.postgresql.core.CachedQuery, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #226                // Method checkClosed:()V
       4: aload_0
       5: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
       8: invokeinterface #269,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getPreferQueryMode:()Lorg/postgresql/jdbc/PreferQueryMode;
      13: getstatic     #334                // Field org/postgresql/jdbc/PreferQueryMode.EXTENDED:Lorg/postgresql/jdbc/PreferQueryMode;
      16: invokevirtual #338                // Method org/postgresql/jdbc/PreferQueryMode.compareTo:(Ljava/lang/Enum;)I
      19: ifge          28
      22: iload_2
      23: sipush        1024
      26: ior
      27: istore_2
      28: aload_0
      29: aload_1
      30: aconst_null
      31: iload_2
      32: invokevirtual #341                // Method execute:(Lorg/postgresql/core/CachedQuery;Lorg/postgresql/core/ParameterList;I)V
      35: aload_0
      36: dup
      37: astore_3
      38: monitorenter
      39: aload_0
      40: invokevirtual #226                // Method checkClosed:()V
      43: aload_0
      44: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      47: ifnull        64
      50: aload_0
      51: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      54: invokevirtual #240                // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      57: ifnull        64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: aload_3
      66: monitorexit
      67: ireturn
      68: astore        4
      70: aload_3
      71: monitorexit
      72: aload         4
      74: athrow
    Exception table:
       from    to  target type
          39    67    68   any
          68    72    68   any

  public boolean executeWithFlags(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #226                // Method checkClosed:()V
       4: new           #200                // class org/postgresql/util/PSQLException
       7: dup
       8: ldc_w         #345                // String Can\'\'t use executeWithFlags(int) on a Statement.
      11: iconst_0
      12: anewarray     #4                  // class java/lang/Object
      15: invokestatic  #208                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      18: getstatic     #348                // Field org/postgresql/util/PSQLState.WRONG_OBJECT_TYPE:Lorg/postgresql/util/PSQLState;
      21: invokespecial #217                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      24: athrow

  protected void closeForNextExecution() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #352                // Method clearWarnings:()V
       4: aload_0
       5: dup
       6: astore_1
       7: monitorenter
       8: aload_0
       9: getfield      #103                // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      12: ifnull        47
      15: aload_0
      16: getfield      #103                // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      19: invokevirtual #240                // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      22: astore_2
      23: aload_2
      24: ifnull        33
      27: aload_2
      28: invokeinterface #357,  1          // InterfaceMethod java/sql/ResultSet.close:()V
      33: aload_0
      34: aload_0
      35: getfield      #103                // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      38: invokevirtual #232                // Method org/postgresql/jdbc/ResultWrapper.getNext:()Lorg/postgresql/jdbc/ResultWrapper;
      41: putfield      #103                // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      44: goto          8
      47: aload_0
      48: aconst_null
      49: putfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      52: aload_0
      53: getfield      #105                // Field generatedKeys:Lorg/postgresql/jdbc/ResultWrapper;
      56: ifnull        86
      59: aload_0
      60: getfield      #105                // Field generatedKeys:Lorg/postgresql/jdbc/ResultWrapper;
      63: invokevirtual #240                // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      66: ifnull        81
      69: aload_0
      70: getfield      #105                // Field generatedKeys:Lorg/postgresql/jdbc/ResultWrapper;
      73: invokevirtual #240                // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      76: invokeinterface #357,  1          // InterfaceMethod java/sql/ResultSet.close:()V
      81: aload_0
      82: aconst_null
      83: putfield      #105                // Field generatedKeys:Lorg/postgresql/jdbc/ResultWrapper;
      86: aload_1
      87: monitorexit
      88: goto          96
      91: astore_3
      92: aload_1
      93: monitorexit
      94: aload_3
      95: athrow
      96: return
    Exception table:
       from    to  target type
           8    88    91   any
          91    94    91   any

  protected boolean isOneShotQuery(org.postgresql.core.CachedQuery);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_1
       7: invokevirtual #364                // Method org/postgresql/core/CachedQuery.increaseExecuteCount:()V
      10: aload_0
      11: getfield      #366                // Field m_prepareThreshold:I
      14: ifeq          28
      17: aload_1
      18: invokevirtual #369                // Method org/postgresql/core/CachedQuery.getExecuteCount:()I
      21: aload_0
      22: getfield      #366                // Field m_prepareThreshold:I
      25: if_icmpge     37
      28: aload_0
      29: invokevirtual #372                // Method getForceBinaryTransfer:()Z
      32: ifne          37
      35: iconst_1
      36: ireturn
      37: iconst_0
      38: ireturn

  protected final void execute(org.postgresql.core.CachedQuery, org.postgresql.core.ParameterList, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #375                // Method executeInternal:(Lorg/postgresql/core/CachedQuery;Lorg/postgresql/core/ParameterList;I)V
       7: goto          62
      10: astore        4
      12: aload_1
      13: getfield      #300                // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      16: invokeinterface #379,  1          // InterfaceMethod org/postgresql/core/Query.getSubqueries:()[Lorg/postgresql/core/Query;
      21: ifnonnull     43
      24: aload_0
      25: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
      28: invokeinterface #273,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
      33: aload         4
      35: invokeinterface #383,  2          // InterfaceMethod org/postgresql/core/QueryExecutor.willHealOnRetry:(Ljava/sql/SQLException;)Z
      40: ifne          46
      43: aload         4
      45: athrow
      46: aload_1
      47: getfield      #300                // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      50: invokeinterface #384,  1          // InterfaceMethod org/postgresql/core/Query.close:()V
      55: aload_0
      56: aload_1
      57: aload_2
      58: iload_3
      59: invokespecial #375                // Method executeInternal:(Lorg/postgresql/core/CachedQuery;Lorg/postgresql/core/ParameterList;I)V
      62: return
    Exception table:
       from    to  target type
           0     7    10   Class java/sql/SQLException

  private void executeInternal(org.postgresql.core.CachedQuery, org.postgresql.core.ParameterList, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #390                // Method closeForNextExecution:()V
       4: aload_0
       5: getfield      #95                 // Field fetchSize:I
       8: ifle          42
      11: aload_0
      12: invokevirtual #392                // Method wantsScrollableResultSet:()Z
      15: ifne          42
      18: aload_0
      19: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
      22: invokeinterface #395,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getAutoCommit:()Z
      27: ifne          42
      30: aload_0
      31: invokevirtual #397                // Method wantsHoldableResultSet:()Z
      34: ifne          42
      37: iload_3
      38: bipush        8
      40: ior
      41: istore_3
      42: aload_0
      43: getfield      #87                 // Field wantsGeneratedKeysOnce:Z
      46: ifne          56
      49: aload_0
      50: getfield      #89                 // Field wantsGeneratedKeysAlways:Z
      53: ifeq          72
      56: iload_3
      57: bipush        64
      59: ior
      60: istore_3
      61: iload_3
      62: iconst_4
      63: iand
      64: ifeq          72
      67: iload_3
      68: bipush        -5
      70: iand
      71: istore_3
      72: aload_0
      73: aload_1
      74: invokevirtual #399                // Method isOneShotQuery:(Lorg/postgresql/core/CachedQuery;)Z
      77: ifeq          84
      80: iload_3
      81: iconst_1
      82: ior
      83: istore_3
      84: aload_0
      85: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
      88: invokeinterface #395,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getAutoCommit:()Z
      93: ifeq          101
      96: iload_3
      97: bipush        16
      99: ior
     100: istore_3
     101: aload_0
     102: getfield      #121                // Field concurrency:I
     105: sipush        1007
     108: if_icmpeq     117
     111: iload_3
     112: sipush        256
     115: ior
     116: istore_3
     117: aload_1
     118: getfield      #300                // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
     121: astore        4
     123: aload         4
     125: invokeinterface #402,  1          // InterfaceMethod org/postgresql/core/Query.isEmpty:()Z
     130: ifeq          138
     133: iload_3
     134: bipush        16
     136: ior
     137: istore_3
     138: aload         4
     140: invokeinterface #405,  1          // InterfaceMethod org/postgresql/core/Query.isStatementDescribed:()Z
     145: ifne          224
     148: aload_0
     149: getfield      #68                 // Field forceBinaryTransfers:Z
     152: ifeq          224
     155: iload_3
     156: sipush        1024
     159: iand
     160: ifne          224
     163: iload_3
     164: bipush        32
     166: ior
     167: istore        5
     169: new           #11                 // class org/postgresql/jdbc/PgStatement$StatementResultHandler
     172: dup
     173: aload_0
     174: invokespecial #408                // Method org/postgresql/jdbc/PgStatement$StatementResultHandler."<init>":(Lorg/postgresql/jdbc/PgStatement;)V
     177: astore        6
     179: aload_0
     180: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
     183: invokeinterface #273,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
     188: aload         4
     190: aload_2
     191: aload         6
     193: iconst_0
     194: iconst_0
     195: iload         5
     197: invokeinterface #411,  7          // InterfaceMethod org/postgresql/core/QueryExecutor.execute:(Lorg/postgresql/core/Query;Lorg/postgresql/core/ParameterList;Lorg/postgresql/core/ResultHandler;III)V
     202: aload         6
     204: invokevirtual #414                // Method org/postgresql/jdbc/PgStatement$StatementResultHandler.getResults:()Lorg/postgresql/jdbc/ResultWrapper;
     207: astore        7
     209: aload         7
     211: ifnull        224
     214: aload         7
     216: invokevirtual #240                // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
     219: invokeinterface #357,  1          // InterfaceMethod java/sql/ResultSet.close:()V
     224: new           #11                 // class org/postgresql/jdbc/PgStatement$StatementResultHandler
     227: dup
     228: aload_0
     229: invokespecial #408                // Method org/postgresql/jdbc/PgStatement$StatementResultHandler."<init>":(Lorg/postgresql/jdbc/PgStatement;)V
     232: astore        5
     234: aload_0
     235: dup
     236: astore        6
     238: monitorenter
     239: aload_0
     240: aconst_null
     241: putfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
     244: aload         6
     246: monitorexit
     247: goto          258
     250: astore        8
     252: aload         6
     254: monitorexit
     255: aload         8
     257: athrow
     258: aload_0
     259: invokespecial #419                // Method startTimer:()V
     262: aload_0
     263: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
     266: invokeinterface #273,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
     271: aload         4
     273: aload_2
     274: aload         5
     276: aload_0
     277: getfield      #93                 // Field maxrows:I
     280: aload_0
     281: getfield      #95                 // Field fetchSize:I
     284: iload_3
     285: invokeinterface #411,  7          // InterfaceMethod org/postgresql/core/QueryExecutor.execute:(Lorg/postgresql/core/Query;Lorg/postgresql/core/ParameterList;Lorg/postgresql/core/ResultHandler;III)V
     290: aload_0
     291: invokespecial #422                // Method killTimerTask:()V
     294: goto          306
     297: astore        9
     299: aload_0
     300: invokespecial #422                // Method killTimerTask:()V
     303: aload         9
     305: athrow
     306: aload_0
     307: dup
     308: astore        6
     310: monitorenter
     311: aload_0
     312: invokevirtual #226                // Method checkClosed:()V
     315: aload_0
     316: aload_0
     317: aload         5
     319: invokevirtual #414                // Method org/postgresql/jdbc/PgStatement$StatementResultHandler.getResults:()Lorg/postgresql/jdbc/ResultWrapper;
     322: dup_x1
     323: putfield      #103                // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
     326: putfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
     329: aload_0
     330: getfield      #87                 // Field wantsGeneratedKeysOnce:Z
     333: ifne          343
     336: aload_0
     337: getfield      #89                 // Field wantsGeneratedKeysAlways:Z
     340: ifeq          374
     343: aload_0
     344: aload_0
     345: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
     348: putfield      #105                // Field generatedKeys:Lorg/postgresql/jdbc/ResultWrapper;
     351: aload_0
     352: aload_0
     353: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
     356: invokevirtual #232                // Method org/postgresql/jdbc/ResultWrapper.getNext:()Lorg/postgresql/jdbc/ResultWrapper;
     359: putfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
     362: aload_0
     363: getfield      #87                 // Field wantsGeneratedKeysOnce:Z
     366: ifeq          374
     369: aload_0
     370: iconst_0
     371: putfield      #87                 // Field wantsGeneratedKeysOnce:Z
     374: aload         6
     376: monitorexit
     377: goto          388
     380: astore        10
     382: aload         6
     384: monitorexit
     385: aload         10
     387: athrow
     388: return
    Exception table:
       from    to  target type
         239   247   250   any
         250   255   250   any
         258   290   297   any
         297   299   297   any
         311   377   380   any
         380   385   380   any

  public void setCursorName(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #226                // Method checkClosed:()V
       4: return

  public int getUpdateCount() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: invokevirtual #226                // Method checkClosed:()V
       8: aload_0
       9: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      12: ifnull        25
      15: aload_0
      16: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      19: invokevirtual #240                // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      22: ifnull        29
      25: iconst_m1
      26: aload_1
      27: monitorexit
      28: ireturn
      29: aload_0
      30: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      33: invokevirtual #432                // Method org/postgresql/jdbc/ResultWrapper.getUpdateCount:()I
      36: aload_1
      37: monitorexit
      38: ireturn
      39: astore_2
      40: aload_1
      41: monitorexit
      42: aload_2
      43: athrow
    Exception table:
       from    to  target type
           4    28    39   any
          29    38    39   any
          39    42    39   any

  public boolean getMoreResults() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: invokevirtual #226                // Method checkClosed:()V
       8: aload_0
       9: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      12: ifnonnull     19
      15: iconst_0
      16: aload_1
      17: monitorexit
      18: ireturn
      19: aload_0
      20: aload_0
      21: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      24: invokevirtual #232                // Method org/postgresql/jdbc/ResultWrapper.getNext:()Lorg/postgresql/jdbc/ResultWrapper;
      27: putfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      30: aload_0
      31: getfield      #103                // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      34: aload_0
      35: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      38: if_acmpeq     77
      41: aload_0
      42: getfield      #103                // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      45: invokevirtual #240                // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      48: ifnull        63
      51: aload_0
      52: getfield      #103                // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      55: invokevirtual #240                // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      58: invokeinterface #357,  1          // InterfaceMethod java/sql/ResultSet.close:()V
      63: aload_0
      64: aload_0
      65: getfield      #103                // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      68: invokevirtual #232                // Method org/postgresql/jdbc/ResultWrapper.getNext:()Lorg/postgresql/jdbc/ResultWrapper;
      71: putfield      #103                // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      74: goto          30
      77: aload_0
      78: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      81: ifnull        98
      84: aload_0
      85: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      88: invokevirtual #240                // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      91: ifnull        98
      94: iconst_1
      95: goto          99
      98: iconst_0
      99: aload_1
     100: monitorexit
     101: ireturn
     102: astore_2
     103: aload_1
     104: monitorexit
     105: aload_2
     106: athrow
    Exception table:
       from    to  target type
           4    18   102   any
          19   101   102   any
         102   105   102   any

  public int getMaxRows() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #226                // Method checkClosed:()V
       4: aload_0
       5: getfield      #93                 // Field maxrows:I
       8: ireturn

  public void setMaxRows(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #226                // Method checkClosed:()V
       4: iload_1
       5: ifge          29
       8: new           #200                // class org/postgresql/util/PSQLException
      11: dup
      12: ldc_w         #436                // String Maximum number of rows must be a value grater than or equal to 0.
      15: iconst_0
      16: anewarray     #4                  // class java/lang/Object
      19: invokestatic  #208                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      22: getstatic     #439                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      25: invokespecial #217                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      28: athrow
      29: aload_0
      30: iload_1
      31: putfield      #93                 // Field maxrows:I
      34: return

  public void setEscapeProcessing(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #226                // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: putfield      #99                 // Field replaceProcessingEnabled:Z
       9: return

  public int getQueryTimeout() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #447                // Method getQueryTimeoutMs:()I
       4: sipush        1000
       7: idiv
       8: ireturn

  public void setQueryTimeout(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: sipush        1000
       5: imul
       6: invokevirtual #451                // Method setQueryTimeoutMs:(I)V
       9: return

  public int getQueryTimeoutMs() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #226                // Method checkClosed:()V
       4: aload_0
       5: getfield      #97                 // Field timeout:I
       8: ireturn

  public void setQueryTimeoutMs(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #226                // Method checkClosed:()V
       4: iload_1
       5: ifge          29
       8: new           #200                // class org/postgresql/util/PSQLException
      11: dup
      12: ldc_w         #454                // String Query timeout must be a value greater than or equals to 0.
      15: iconst_0
      16: anewarray     #4                  // class java/lang/Object
      19: invokestatic  #208                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      22: getstatic     #439                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      25: invokespecial #217                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      28: athrow
      29: aload_0
      30: iload_1
      31: putfield      #97                 // Field timeout:I
      34: return

  public void addWarning(java.sql.SQLWarning);
    Code:
       0: aload_0
       1: getfield      #91                 // Field warnings:Lorg/postgresql/jdbc/PSQLWarningWrapper;
       4: astore_2
       5: aload_2
       6: ifnonnull     24
       9: aload_0
      10: new           #459                // class org/postgresql/jdbc/PSQLWarningWrapper
      13: dup
      14: aload_1
      15: invokespecial #461                // Method org/postgresql/jdbc/PSQLWarningWrapper."<init>":(Ljava/sql/SQLWarning;)V
      18: putfield      #91                 // Field warnings:Lorg/postgresql/jdbc/PSQLWarningWrapper;
      21: goto          29
      24: aload_2
      25: aload_1
      26: invokevirtual #463                // Method org/postgresql/jdbc/PSQLWarningWrapper.addWarning:(Ljava/sql/SQLWarning;)V
      29: return

  public java.sql.SQLWarning getWarnings() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #226                // Method checkClosed:()V
       4: aload_0
       5: getfield      #91                 // Field warnings:Lorg/postgresql/jdbc/PSQLWarningWrapper;
       8: astore_1
       9: aload_1
      10: ifnull        20
      13: aload_1
      14: invokevirtual #471                // Method org/postgresql/jdbc/PSQLWarningWrapper.getFirstWarning:()Ljava/sql/SQLWarning;
      17: goto          21
      20: aconst_null
      21: areturn

  public int getMaxFieldSize() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #107                // Field maxfieldSize:I
       4: ireturn

  public void setMaxFieldSize(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #226                // Method checkClosed:()V
       4: iload_1
       5: ifge          29
       8: new           #200                // class org/postgresql/util/PSQLException
      11: dup
      12: ldc_w         #476                // String The maximum field size must be a value greater than or equal to 0.
      15: iconst_0
      16: anewarray     #4                  // class java/lang/Object
      19: invokestatic  #208                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      22: getstatic     #439                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      25: invokespecial #217                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      28: athrow
      29: aload_0
      30: iload_1
      31: putfield      #107                // Field maxfieldSize:I
      34: return

  public void clearWarnings() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #91                 // Field warnings:Lorg/postgresql/jdbc/PSQLWarningWrapper;
       5: return

  public java.sql.ResultSet getResultSet() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: invokevirtual #226                // Method checkClosed:()V
       8: aload_0
       9: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      12: ifnonnull     19
      15: aconst_null
      16: aload_1
      17: monitorexit
      18: areturn
      19: aload_0
      20: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      23: invokevirtual #240                // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      26: aload_1
      27: monitorexit
      28: areturn
      29: astore_2
      30: aload_1
      31: monitorexit
      32: aload_2
      33: athrow
    Exception table:
       from    to  target type
           4    18    29   any
          19    28    29   any
          29    32    29   any

  public final void close() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #109                // Field isClosed:Z
       8: ifeq          14
      11: aload_1
      12: monitorexit
      13: return
      14: aload_0
      15: iconst_1
      16: putfield      #109                // Field isClosed:Z
      19: aload_1
      20: monitorexit
      21: goto          29
      24: astore_2
      25: aload_1
      26: monitorexit
      27: aload_2
      28: athrow
      29: aload_0
      30: invokevirtual #479                // Method cancel:()V
      33: aload_0
      34: invokevirtual #390                // Method closeForNextExecution:()V
      37: aload_0
      38: invokevirtual #482                // Method closeImpl:()V
      41: return
    Exception table:
       from    to  target type
           4    13    24   any
          14    21    24   any
          24    27    24   any

  protected void closeImpl() throws java.sql.SQLException;
    Code:
       0: return

  public long getLastOID() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: invokevirtual #226                // Method checkClosed:()V
       8: aload_0
       9: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      12: ifnonnull     19
      15: lconst_0
      16: aload_1
      17: monitorexit
      18: lreturn
      19: aload_0
      20: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      23: invokevirtual #487                // Method org/postgresql/jdbc/ResultWrapper.getInsertOID:()J
      26: aload_1
      27: monitorexit
      28: lreturn
      29: astore_2
      30: aload_1
      31: monitorexit
      32: aload_2
      33: athrow
    Exception table:
       from    to  target type
           4    18    29   any
          19    28    29   any
          29    32    29   any

  public void setPrepareThreshold(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #226                // Method checkClosed:()V
       4: iload_1
       5: ifge          15
       8: aload_0
       9: iconst_1
      10: putfield      #68                 // Field forceBinaryTransfers:Z
      13: iconst_1
      14: istore_1
      15: aload_0
      16: iload_1
      17: putfield      #366                // Field m_prepareThreshold:I
      20: return

  public int getPrepareThreshold();
    Code:
       0: aload_0
       1: getfield      #366                // Field m_prepareThreshold:I
       4: ireturn

  public void setUseServerPrepare(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: invokevirtual #135                // Method setPrepareThreshold:(I)V
      13: return

  public boolean isUseServerPrepare();
    Code:
       0: iconst_0
       1: ireturn

  protected void checkClosed() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #493                // Method isClosed:()Z
       4: ifeq          28
       7: new           #200                // class org/postgresql/util/PSQLException
      10: dup
      11: ldc_w         #495                // String This statement has been closed.
      14: iconst_0
      15: anewarray     #4                  // class java/lang/Object
      18: invokestatic  #208                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      21: getstatic     #498                // Field org/postgresql/util/PSQLState.OBJECT_NOT_IN_STATE:Lorg/postgresql/util/PSQLState;
      24: invokespecial #217                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      27: athrow
      28: return

  public void addBatch(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #226                // Method checkClosed:()V
       4: aload_0
       5: getfield      #70                 // Field batchStatements:Ljava/util/ArrayList;
       8: ifnonnull     33
      11: aload_0
      12: new           #501                // class java/util/ArrayList
      15: dup
      16: invokespecial #502                // Method java/util/ArrayList."<init>":()V
      19: putfield      #70                 // Field batchStatements:Ljava/util/ArrayList;
      22: aload_0
      23: new           #501                // class java/util/ArrayList
      26: dup
      27: invokespecial #502                // Method java/util/ArrayList."<init>":()V
      30: putfield      #72                 // Field batchParameters:Ljava/util/ArrayList;
      33: iconst_0
      34: istore_2
      35: aload_0
      36: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
      39: aload_1
      40: aload_0
      41: getfield      #99                 // Field replaceProcessingEnabled:Z
      44: iload_2
      45: iconst_0
      46: anewarray     #287                // class java/lang/String
      49: invokeinterface #506,  5          // InterfaceMethod org/postgresql/core/BaseConnection.createQuery:(Ljava/lang/String;ZZ[Ljava/lang/String;)Lorg/postgresql/core/CachedQuery;
      54: astore_3
      55: aload_0
      56: getfield      #70                 // Field batchStatements:Ljava/util/ArrayList;
      59: aload_3
      60: getfield      #300                // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      63: invokevirtual #510                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      66: pop
      67: aload_0
      68: getfield      #72                 // Field batchParameters:Ljava/util/ArrayList;
      71: aconst_null
      72: invokevirtual #510                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      75: pop
      76: return

  public void clearBatch() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #70                 // Field batchStatements:Ljava/util/ArrayList;
       4: ifnull        21
       7: aload_0
       8: getfield      #70                 // Field batchStatements:Ljava/util/ArrayList;
      11: invokevirtual #514                // Method java/util/ArrayList.clear:()V
      14: aload_0
      15: getfield      #72                 // Field batchParameters:Ljava/util/ArrayList;
      18: invokevirtual #514                // Method java/util/ArrayList.clear:()V
      21: return

  protected org.postgresql.jdbc.BatchResultHandler createBatchHandler(org.postgresql.core.Query[], org.postgresql.core.ParameterList[]);
    Code:
       0: new           #518                // class org/postgresql/jdbc/BatchResultHandler
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_0
       8: getfield      #89                 // Field wantsGeneratedKeysAlways:Z
      11: invokespecial #521                // Method org/postgresql/jdbc/BatchResultHandler."<init>":(Lorg/postgresql/jdbc/PgStatement;[Lorg/postgresql/core/Query;[Lorg/postgresql/core/ParameterList;Z)V
      14: areturn

  public int[] executeBatch() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #226                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #390                // Method closeForNextExecution:()V
       8: aload_0
       9: getfield      #70                 // Field batchStatements:Ljava/util/ArrayList;
      12: ifnull        25
      15: aload_0
      16: getfield      #70                 // Field batchStatements:Ljava/util/ArrayList;
      19: invokevirtual #528                // Method java/util/ArrayList.isEmpty:()Z
      22: ifeq          29
      25: iconst_0
      26: newarray       int
      28: areturn
      29: aload_0
      30: invokevirtual #531                // Method transformQueriesAndParameters:()V
      33: aload_0
      34: getfield      #70                 // Field batchStatements:Ljava/util/ArrayList;
      37: iconst_0
      38: anewarray     #302                // class org/postgresql/core/Query
      41: invokevirtual #535                // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      44: checkcast     #536                // class "[Lorg/postgresql/core/Query;"
      47: astore_1
      48: aload_0
      49: getfield      #72                 // Field batchParameters:Ljava/util/ArrayList;
      52: iconst_0
      53: anewarray     #416                // class org/postgresql/core/ParameterList
      56: invokevirtual #535                // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      59: checkcast     #537                // class "[Lorg/postgresql/core/ParameterList;"
      62: astore_2
      63: aload_0
      64: getfield      #70                 // Field batchStatements:Ljava/util/ArrayList;
      67: invokevirtual #514                // Method java/util/ArrayList.clear:()V
      70: aload_0
      71: getfield      #72                 // Field batchParameters:Ljava/util/ArrayList;
      74: invokevirtual #514                // Method java/util/ArrayList.clear:()V
      77: iconst_0
      78: istore_3
      79: iconst_0
      80: istore        4
      82: aload_0
      83: getfield      #89                 // Field wantsGeneratedKeysAlways:Z
      86: ifeq          96
      89: sipush        320
      92: istore_3
      93: goto          98
      96: iconst_4
      97: istore_3
      98: aload_0
      99: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
     102: invokeinterface #269,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getPreferQueryMode:()Lorg/postgresql/jdbc/PreferQueryMode;
     107: astore        5
     109: aload         5
     111: getstatic     #540                // Field org/postgresql/jdbc/PreferQueryMode.SIMPLE:Lorg/postgresql/jdbc/PreferQueryMode;
     114: if_acmpeq     131
     117: aload         5
     119: getstatic     #543                // Field org/postgresql/jdbc/PreferQueryMode.EXTENDED_FOR_PREPARED:Lorg/postgresql/jdbc/PreferQueryMode;
     122: if_acmpne     137
     125: aload_2
     126: iconst_0
     127: aaload
     128: ifnonnull     137
     131: iload_3
     132: sipush        1024
     135: ior
     136: istore_3
     137: aload_1
     138: arraylength
     139: iconst_1
     140: if_icmple     156
     143: aload_1
     144: iconst_0
     145: aaload
     146: aload_1
     147: iconst_1
     148: aaload
     149: if_acmpne     156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: istore        6
     159: iload         6
     161: ifeq          172
     164: aload_0
     165: aconst_null
     166: invokevirtual #399                // Method isOneShotQuery:(Lorg/postgresql/core/CachedQuery;)Z
     169: ifeq          179
     172: iload_3
     173: iconst_1
     174: ior
     175: istore_3
     176: goto          215
     179: aload_0
     180: getfield      #89                 // Field wantsGeneratedKeysAlways:Z
     183: ifne          191
     186: iload         6
     188: ifeq          206
     191: aload_1
     192: iconst_0
     193: aaload
     194: invokeinterface #405,  1          // InterfaceMethod org/postgresql/core/Query.isStatementDescribed:()Z
     199: ifne          206
     202: iconst_1
     203: goto          207
     206: iconst_0
     207: istore        4
     209: iload_3
     210: sipush        512
     213: ior
     214: istore_3
     215: aload_0
     216: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
     219: invokeinterface #395,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getAutoCommit:()Z
     224: ifeq          232
     227: iload_3
     228: bipush        16
     230: ior
     231: istore_3
     232: aload_0
     233: aload_1
     234: aload_2
     235: invokevirtual #545                // Method createBatchHandler:([Lorg/postgresql/core/Query;[Lorg/postgresql/core/ParameterList;)Lorg/postgresql/jdbc/BatchResultHandler;
     238: astore        7
     240: iload         4
     242: ifne          252
     245: aload_0
     246: getfield      #68                 // Field forceBinaryTransfers:Z
     249: ifeq          341
     252: iload_3
     253: sipush        1024
     256: iand
     257: ifne          341
     260: iload_3
     261: bipush        32
     263: ior
     264: istore        8
     266: new           #11                 // class org/postgresql/jdbc/PgStatement$StatementResultHandler
     269: dup
     270: aload_0
     271: invokespecial #408                // Method org/postgresql/jdbc/PgStatement$StatementResultHandler."<init>":(Lorg/postgresql/jdbc/PgStatement;)V
     274: astore        9
     276: aload_0
     277: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
     280: invokeinterface #273,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
     285: aload_1
     286: iconst_0
     287: aaload
     288: aload_2
     289: iconst_0
     290: aaload
     291: aload         9
     293: iconst_0
     294: iconst_0
     295: iload         8
     297: invokeinterface #411,  7          // InterfaceMethod org/postgresql/core/QueryExecutor.execute:(Lorg/postgresql/core/Query;Lorg/postgresql/core/ParameterList;Lorg/postgresql/core/ResultHandler;III)V
     302: goto          319
     305: astore        10
     307: aload         7
     309: aload         10
     311: invokevirtual #549                // Method org/postgresql/jdbc/BatchResultHandler.handleError:(Ljava/sql/SQLException;)V
     314: aload         7
     316: invokevirtual #552                // Method org/postgresql/jdbc/BatchResultHandler.handleCompletion:()V
     319: aload         9
     321: invokevirtual #414                // Method org/postgresql/jdbc/PgStatement$StatementResultHandler.getResults:()Lorg/postgresql/jdbc/ResultWrapper;
     324: astore        10
     326: aload         10
     328: ifnull        341
     331: aload         10
     333: invokevirtual #240                // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
     336: invokeinterface #357,  1          // InterfaceMethod java/sql/ResultSet.close:()V
     341: aload_0
     342: dup
     343: astore        8
     345: monitorenter
     346: aload_0
     347: aconst_null
     348: putfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
     351: aload         8
     353: monitorexit
     354: goto          365
     357: astore        11
     359: aload         8
     361: monitorexit
     362: aload         11
     364: athrow
     365: aload_0
     366: invokespecial #419                // Method startTimer:()V
     369: aload_0
     370: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
     373: invokeinterface #273,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
     378: aload_1
     379: aload_2
     380: aload         7
     382: aload_0
     383: getfield      #93                 // Field maxrows:I
     386: aload_0
     387: getfield      #95                 // Field fetchSize:I
     390: iload_3
     391: invokeinterface #555,  7          // InterfaceMethod org/postgresql/core/QueryExecutor.execute:([Lorg/postgresql/core/Query;[Lorg/postgresql/core/ParameterList;Lorg/postgresql/jdbc/BatchResultHandler;III)V
     396: aload_0
     397: invokespecial #422                // Method killTimerTask:()V
     400: aload_0
     401: dup
     402: astore        8
     404: monitorenter
     405: aload_0
     406: invokevirtual #226                // Method checkClosed:()V
     409: aload_0
     410: getfield      #89                 // Field wantsGeneratedKeysAlways:Z
     413: ifeq          432
     416: aload_0
     417: new           #228                // class org/postgresql/jdbc/ResultWrapper
     420: dup
     421: aload         7
     423: invokevirtual #558                // Method org/postgresql/jdbc/BatchResultHandler.getGeneratedKeys:()Ljava/sql/ResultSet;
     426: invokespecial #561                // Method org/postgresql/jdbc/ResultWrapper."<init>":(Ljava/sql/ResultSet;)V
     429: putfield      #105                // Field generatedKeys:Lorg/postgresql/jdbc/ResultWrapper;
     432: aload         8
     434: monitorexit
     435: goto          446
     438: astore        12
     440: aload         8
     442: monitorexit
     443: aload         12
     445: athrow
     446: goto          504
     449: astore        13
     451: aload_0
     452: invokespecial #422                // Method killTimerTask:()V
     455: aload_0
     456: dup
     457: astore        14
     459: monitorenter
     460: aload_0
     461: invokevirtual #226                // Method checkClosed:()V
     464: aload_0
     465: getfield      #89                 // Field wantsGeneratedKeysAlways:Z
     468: ifeq          487
     471: aload_0
     472: new           #228                // class org/postgresql/jdbc/ResultWrapper
     475: dup
     476: aload         7
     478: invokevirtual #558                // Method org/postgresql/jdbc/BatchResultHandler.getGeneratedKeys:()Ljava/sql/ResultSet;
     481: invokespecial #561                // Method org/postgresql/jdbc/ResultWrapper."<init>":(Ljava/sql/ResultSet;)V
     484: putfield      #105                // Field generatedKeys:Lorg/postgresql/jdbc/ResultWrapper;
     487: aload         14
     489: monitorexit
     490: goto          501
     493: astore        15
     495: aload         14
     497: monitorexit
     498: aload         15
     500: athrow
     501: aload         13
     503: athrow
     504: aload         7
     506: invokevirtual #563                // Method org/postgresql/jdbc/BatchResultHandler.getUpdateCount:()[I
     509: areturn
    Exception table:
       from    to  target type
         276   302   305   Class java/sql/SQLException
         346   354   357   any
         357   362   357   any
         405   435   438   any
         438   443   438   any
         365   396   449   any
         460   490   493   any
         493   498   493   any
         449   451   449   any

  public void cancel() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #85                 // Field statementState:Lorg/postgresql/jdbc/StatementCancelState;
       4: getstatic     #83                 // Field org/postgresql/jdbc/StatementCancelState.IDLE:Lorg/postgresql/jdbc/StatementCancelState;
       7: if_acmpne     11
      10: return
      11: getstatic     #568                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      14: aload_0
      15: getstatic     #571                // Field org/postgresql/jdbc/StatementCancelState.IN_QUERY:Lorg/postgresql/jdbc/StatementCancelState;
      18: getstatic     #574                // Field org/postgresql/jdbc/StatementCancelState.CANCELING:Lorg/postgresql/jdbc/StatementCancelState;
      21: invokevirtual #580                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      24: ifne          28
      27: return
      28: aload_0
      29: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
      32: dup
      33: astore_1
      34: monitorenter
      35: aload_0
      36: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
      39: invokeinterface #583,  1          // InterfaceMethod org/postgresql/core/BaseConnection.cancelQuery:()V
      44: getstatic     #568                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      47: aload_0
      48: getstatic     #586                // Field org/postgresql/jdbc/StatementCancelState.CANCELLED:Lorg/postgresql/jdbc/StatementCancelState;
      51: invokevirtual #590                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      54: aload_0
      55: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
      58: invokevirtual #593                // Method java/lang/Object.notifyAll:()V
      61: goto          84
      64: astore_2
      65: getstatic     #568                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      68: aload_0
      69: getstatic     #586                // Field org/postgresql/jdbc/StatementCancelState.CANCELLED:Lorg/postgresql/jdbc/StatementCancelState;
      72: invokevirtual #590                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      75: aload_0
      76: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
      79: invokevirtual #593                // Method java/lang/Object.notifyAll:()V
      82: aload_2
      83: athrow
      84: aload_1
      85: monitorexit
      86: goto          94
      89: astore_3
      90: aload_1
      91: monitorexit
      92: aload_3
      93: athrow
      94: return
    Exception table:
       from    to  target type
          35    44    64   any
          35    86    89   any
          89    92    89   any

  public java.sql.Connection getConnection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
       4: areturn

  public int getFetchDirection();
    Code:
       0: aload_0
       1: getfield      #76                 // Field fetchdirection:I
       4: ireturn

  public int getResultSetConcurrency();
    Code:
       0: aload_0
       1: getfield      #121                // Field concurrency:I
       4: ireturn

  public int getResultSetType();
    Code:
       0: aload_0
       1: getfield      #119                // Field resultsettype:I
       4: ireturn

  public void setFetchDirection(int) throws java.sql.SQLException;
    Code:
       0: iload_1
       1: tableswitch   { // 1000 to 1002
                  1000: 28
                  1001: 28
                  1002: 28
               default: 36
          }
      28: aload_0
      29: iload_1
      30: putfield      #76                 // Field fetchdirection:I
      33: goto          64
      36: new           #200                // class org/postgresql/util/PSQLException
      39: dup
      40: ldc_w         #597                // String Invalid fetch direction constant: {0}.
      43: iconst_1
      44: anewarray     #4                  // class java/lang/Object
      47: dup
      48: iconst_0
      49: iload_1
      50: invokestatic  #603                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      53: aastore
      54: invokestatic  #208                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      57: getstatic     #439                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      60: invokespecial #217                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      63: athrow
      64: return

  public void setFetchSize(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #226                // Method checkClosed:()V
       4: iload_1
       5: ifge          29
       8: new           #200                // class org/postgresql/util/PSQLException
      11: dup
      12: ldc_w         #606                // String Fetch size must be a value greater to or equal to 0.
      15: iconst_0
      16: anewarray     #4                  // class java/lang/Object
      19: invokestatic  #208                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      22: getstatic     #439                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      25: invokespecial #217                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      28: athrow
      29: aload_0
      30: iload_1
      31: putfield      #95                 // Field fetchSize:I
      34: return

  private void startTimer();
    Code:
       0: aload_0
       1: invokespecial #610                // Method cleanupTimer:()Z
       4: pop
       5: getstatic     #568                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       8: aload_0
       9: getstatic     #571                // Field org/postgresql/jdbc/StatementCancelState.IN_QUERY:Lorg/postgresql/jdbc/StatementCancelState;
      12: invokevirtual #590                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      15: aload_0
      16: getfield      #97                 // Field timeout:I
      19: ifne          23
      22: return
      23: new           #14                 // class org/postgresql/jdbc/PgStatement$1
      26: dup
      27: aload_0
      28: invokespecial #611                // Method org/postgresql/jdbc/PgStatement$1."<init>":(Lorg/postgresql/jdbc/PgStatement;)V
      31: astore_1
      32: getstatic     #613                // Field CANCEL_TIMER_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      35: aload_0
      36: aload_1
      37: invokevirtual #590                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      40: aload_0
      41: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
      44: aload_1
      45: aload_0
      46: getfield      #97                 // Field timeout:I
      49: i2l
      50: invokeinterface #617,  4          // InterfaceMethod org/postgresql/core/BaseConnection.addTimerTask:(Ljava/util/TimerTask;J)V
      55: return

  private boolean cleanupTimer();
    Code:
       0: getstatic     #613                // Field CANCEL_TIMER_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokevirtual #622                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #624                // class java/util/TimerTask
      10: astore_1
      11: aload_1
      12: ifnonnull     28
      15: aload_0
      16: getfield      #97                 // Field timeout:I
      19: ifne          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn
      28: getstatic     #613                // Field CANCEL_TIMER_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      31: aload_0
      32: aload_1
      33: aconst_null
      34: invokevirtual #580                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      37: ifne          42
      40: iconst_0
      41: ireturn
      42: aload_1
      43: invokevirtual #626                // Method java/util/TimerTask.cancel:()Z
      46: pop
      47: aload_0
      48: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
      51: invokeinterface #629,  1          // InterfaceMethod org/postgresql/core/BaseConnection.purgeTimerTasks:()V
      56: iconst_1
      57: ireturn

  private void killTimerTask();
    Code:
       0: aload_0
       1: invokespecial #610                // Method cleanupTimer:()Z
       4: istore_1
       5: iload_1
       6: ifeq          26
       9: getstatic     #568                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: aload_0
      13: getstatic     #571                // Field org/postgresql/jdbc/StatementCancelState.IN_QUERY:Lorg/postgresql/jdbc/StatementCancelState;
      16: getstatic     #83                 // Field org/postgresql/jdbc/StatementCancelState.IDLE:Lorg/postgresql/jdbc/StatementCancelState;
      19: invokevirtual #580                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      22: ifeq          26
      25: return
      26: iconst_0
      27: istore_2
      28: aload_0
      29: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
      32: dup
      33: astore_3
      34: monitorenter
      35: getstatic     #568                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      38: aload_0
      39: getstatic     #586                // Field org/postgresql/jdbc/StatementCancelState.CANCELLED:Lorg/postgresql/jdbc/StatementCancelState;
      42: getstatic     #83                 // Field org/postgresql/jdbc/StatementCancelState.IDLE:Lorg/postgresql/jdbc/StatementCancelState;
      45: invokevirtual #580                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      48: ifne          71
      51: aload_0
      52: getfield      #111                // Field connection:Lorg/postgresql/core/BaseConnection;
      55: ldc2_w        #633                // long 10l
      58: invokevirtual #638                // Method java/lang/Object.wait:(J)V
      61: goto          35
      64: astore        4
      66: iconst_1
      67: istore_2
      68: goto          35
      71: aload_3
      72: monitorexit
      73: goto          83
      76: astore        5
      78: aload_3
      79: monitorexit
      80: aload         5
      82: athrow
      83: iload_2
      84: ifeq          93
      87: invokestatic  #644                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      90: invokevirtual #647                // Method java/lang/Thread.interrupt:()V
      93: return
    Exception table:
       from    to  target type
          51    61    64   Class java/lang/InterruptedException
          35    73    76   any
          76    80    76   any

  protected boolean getForceBinaryTransfer();
    Code:
       0: aload_0
       1: getfield      #68                 // Field forceBinaryTransfers:Z
       4: ireturn

  public long getLargeUpdateCount() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #655                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #656                // String getLargeUpdateCount
       7: invokestatic  #662                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public void setLargeMaxRows(long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #655                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #664                // String setLargeMaxRows
       7: invokestatic  #662                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public long getLargeMaxRows() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #655                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #667                // String getLargeMaxRows
       7: invokestatic  #662                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public long[] executeLargeBatch() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #655                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #670                // String executeLargeBatch
       7: invokestatic  #662                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public long executeLargeUpdate(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #655                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #673                // String executeLargeUpdate
       7: invokestatic  #662                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public long executeLargeUpdate(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #655                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #673                // String executeLargeUpdate
       7: invokestatic  #662                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public long executeLargeUpdate(java.lang.String, int[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #655                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #673                // String executeLargeUpdate
       7: invokestatic  #662                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public long executeLargeUpdate(java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #655                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #673                // String executeLargeUpdate
       7: invokestatic  #662                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public long executeLargeUpdate() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #655                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #673                // String executeLargeUpdate
       7: invokestatic  #662                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public boolean isClosed() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #109                // Field isClosed:Z
       4: ireturn

  public void setPoolable(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #226                // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: putfield      #682                // Field poolable:Z
       9: return

  public boolean isPoolable() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #226                // Method checkClosed:()V
       4: aload_0
       5: getfield      #682                // Field poolable:Z
       8: ireturn

  public boolean isWrapperFor(java.lang.Class<?>) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #655                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #690                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ireturn

  public <T> T unwrap(java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #655                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #690                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ifeq          17
      11: aload_1
      12: aload_0
      13: invokevirtual #698                // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn
      17: new           #61                 // class java/sql/SQLException
      20: dup
      21: new           #700                // class java/lang/StringBuilder
      24: dup
      25: invokespecial #701                // Method java/lang/StringBuilder."<init>":()V
      28: ldc_w         #703                // String Cannot unwrap to
      31: invokevirtual #707                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokevirtual #710                // Method java/lang/Class.getName:()Ljava/lang/String;
      38: invokevirtual #707                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #713                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #715                // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      47: athrow

  public void closeOnCompletion() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #74                 // Field closeOnCompletion:Z
       5: return

  public boolean isCloseOnCompletion() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #74                 // Field closeOnCompletion:Z
       4: ireturn

  protected void checkCompletion() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #74                 // Field closeOnCompletion:Z
       4: ifne          8
       7: return
       8: aload_0
       9: dup
      10: astore_1
      11: monitorenter
      12: aload_0
      13: getfield      #103                // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      16: astore_2
      17: aload_2
      18: ifnull        51
      21: aload_2
      22: invokevirtual #240                // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      25: ifnull        43
      28: aload_2
      29: invokevirtual #240                // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      32: invokeinterface #719,  1          // InterfaceMethod java/sql/ResultSet.isClosed:()Z
      37: ifne          43
      40: aload_1
      41: monitorexit
      42: return
      43: aload_2
      44: invokevirtual #232                // Method org/postgresql/jdbc/ResultWrapper.getNext:()Lorg/postgresql/jdbc/ResultWrapper;
      47: astore_2
      48: goto          17
      51: aload_1
      52: monitorexit
      53: goto          61
      56: astore_3
      57: aload_1
      58: monitorexit
      59: aload_3
      60: athrow
      61: aload_0
      62: iconst_0
      63: putfield      #74                 // Field closeOnCompletion:Z
      66: aload_0
      67: invokevirtual #720                // Method close:()V
      70: aload_0
      71: iconst_1
      72: putfield      #74                 // Field closeOnCompletion:Z
      75: goto          88
      78: astore        4
      80: aload_0
      81: iconst_1
      82: putfield      #74                 // Field closeOnCompletion:Z
      85: aload         4
      87: athrow
      88: return
    Exception table:
       from    to  target type
          12    42    56   any
          43    53    56   any
          56    59    56   any
          66    70    78   any
          78    80    78   any

  public boolean getMoreResults(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: invokevirtual #226                // Method checkClosed:()V
       8: iload_1
       9: iconst_1
      10: if_icmpne     42
      13: aload_0
      14: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      17: ifnull        42
      20: aload_0
      21: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      24: invokevirtual #240                // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      27: ifnull        42
      30: aload_0
      31: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      34: invokevirtual #240                // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      37: invokeinterface #357,  1          // InterfaceMethod java/sql/ResultSet.close:()V
      42: aload_0
      43: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      46: ifnull        60
      49: aload_0
      50: aload_0
      51: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      54: invokevirtual #232                // Method org/postgresql/jdbc/ResultWrapper.getNext:()Lorg/postgresql/jdbc/ResultWrapper;
      57: putfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      60: iload_1
      61: iconst_3
      62: if_icmpne     112
      65: aload_0
      66: getfield      #103                // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      69: aload_0
      70: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      73: if_acmpeq     112
      76: aload_0
      77: getfield      #103                // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      80: invokevirtual #240                // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      83: ifnull        98
      86: aload_0
      87: getfield      #103                // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      90: invokevirtual #240                // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      93: invokeinterface #357,  1          // InterfaceMethod java/sql/ResultSet.close:()V
      98: aload_0
      99: aload_0
     100: getfield      #103                // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
     103: invokevirtual #232                // Method org/postgresql/jdbc/ResultWrapper.getNext:()Lorg/postgresql/jdbc/ResultWrapper;
     106: putfield      #103                // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
     109: goto          65
     112: aload_0
     113: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
     116: ifnull        133
     119: aload_0
     120: getfield      #101                // Field result:Lorg/postgresql/jdbc/ResultWrapper;
     123: invokevirtual #240                // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
     126: ifnull        133
     129: iconst_1
     130: goto          134
     133: iconst_0
     134: aload_2
     135: monitorexit
     136: ireturn
     137: astore_3
     138: aload_2
     139: monitorexit
     140: aload_3
     141: athrow
    Exception table:
       from    to  target type
           4   136   137   any
         137   140   137   any

  public java.sql.ResultSet getGeneratedKeys() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: invokevirtual #226                // Method checkClosed:()V
       8: aload_0
       9: getfield      #105                // Field generatedKeys:Lorg/postgresql/jdbc/ResultWrapper;
      12: ifnull        25
      15: aload_0
      16: getfield      #105                // Field generatedKeys:Lorg/postgresql/jdbc/ResultWrapper;
      19: invokevirtual #240                // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      22: ifnonnull     43
      25: aload_0
      26: iconst_0
      27: anewarray     #723                // class org/postgresql/core/Field
      30: new           #501                // class java/util/ArrayList
      33: dup
      34: invokespecial #502                // Method java/util/ArrayList."<init>":()V
      37: invokevirtual #727                // Method createDriverResultSet:([Lorg/postgresql/core/Field;Ljava/util/List;)Ljava/sql/ResultSet;
      40: aload_1
      41: monitorexit
      42: areturn
      43: aload_0
      44: getfield      #105                // Field generatedKeys:Lorg/postgresql/jdbc/ResultWrapper;
      47: invokevirtual #240                // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      50: aload_1
      51: monitorexit
      52: areturn
      53: astore_2
      54: aload_1
      55: monitorexit
      56: aload_2
      57: athrow
    Exception table:
       from    to  target type
           4    42    53   any
          43    52    53   any
          53    56    53   any

  public int executeUpdate(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: iload_2
       1: iconst_2
       2: if_icmpne     11
       5: aload_0
       6: aload_1
       7: invokevirtual #730                // Method executeUpdate:(Ljava/lang/String;)I
      10: ireturn
      11: aload_0
      12: aload_1
      13: aconst_null
      14: checkcast     #288                // class "[Ljava/lang/String;"
      17: invokevirtual #733                // Method executeUpdate:(Ljava/lang/String;[Ljava/lang/String;)I
      20: ireturn

  public int executeUpdate(java.lang.String, int[]) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnull        9
       4: aload_2
       5: arraylength
       6: ifne          15
       9: aload_0
      10: aload_1
      11: invokevirtual #730                // Method executeUpdate:(Ljava/lang/String;)I
      14: ireturn
      15: new           #200                // class org/postgresql/util/PSQLException
      18: dup
      19: ldc_w         #736                // String Returning autogenerated keys by column index is not supported.
      22: iconst_0
      23: anewarray     #4                  // class java/lang/Object
      26: invokestatic  #208                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      29: getstatic     #739                // Field org/postgresql/util/PSQLState.NOT_IMPLEMENTED:Lorg/postgresql/util/PSQLState;
      32: invokespecial #217                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      35: athrow

  public int executeUpdate(java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnull        15
       4: aload_2
       5: arraylength
       6: ifne          15
       9: aload_0
      10: aload_1
      11: invokevirtual #730                // Method executeUpdate:(Ljava/lang/String;)I
      14: ireturn
      15: aload_0
      16: iconst_1
      17: putfield      #87                 // Field wantsGeneratedKeysOnce:Z
      20: aload_0
      21: aload_1
      22: iconst_0
      23: aload_2
      24: invokespecial #261                // Method executeCachedSql:(Ljava/lang/String;I[Ljava/lang/String;)Z
      27: ifne          30
      30: aload_0
      31: invokevirtual #252                // Method getUpdateCount:()I
      34: ireturn

  public boolean execute(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: iload_2
       1: iconst_2
       2: if_icmpne     11
       5: aload_0
       6: aload_1
       7: invokevirtual #741                // Method execute:(Ljava/lang/String;)Z
      10: ireturn
      11: aload_0
      12: aload_1
      13: aconst_null
      14: checkcast     #288                // class "[Ljava/lang/String;"
      17: invokevirtual #744                // Method execute:(Ljava/lang/String;[Ljava/lang/String;)Z
      20: ireturn

  public boolean execute(java.lang.String, int[]) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnull        15
       4: aload_2
       5: arraylength
       6: ifne          15
       9: aload_0
      10: aload_1
      11: invokevirtual #741                // Method execute:(Ljava/lang/String;)Z
      14: ireturn
      15: new           #200                // class org/postgresql/util/PSQLException
      18: dup
      19: ldc_w         #736                // String Returning autogenerated keys by column index is not supported.
      22: iconst_0
      23: anewarray     #4                  // class java/lang/Object
      26: invokestatic  #208                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      29: getstatic     #739                // Field org/postgresql/util/PSQLState.NOT_IMPLEMENTED:Lorg/postgresql/util/PSQLState;
      32: invokespecial #217                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      35: athrow

  public boolean execute(java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnull        15
       4: aload_2
       5: arraylength
       6: ifne          15
       9: aload_0
      10: aload_1
      11: invokevirtual #741                // Method execute:(Ljava/lang/String;)Z
      14: ireturn
      15: aload_0
      16: iconst_1
      17: putfield      #87                 // Field wantsGeneratedKeysOnce:Z
      20: aload_0
      21: aload_1
      22: iconst_0
      23: aload_2
      24: invokespecial #261                // Method executeCachedSql:(Ljava/lang/String;I[Ljava/lang/String;)Z
      27: ireturn

  public int getResultSetHoldability() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #137                // Field rsHoldability:I
       4: ireturn

  public java.sql.ResultSet createDriverResultSet(org.postgresql.core.Field[], java.util.List<byte[][]>) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: aconst_null
       5: invokevirtual #747                // Method createResultSet:(Lorg/postgresql/core/Query;[Lorg/postgresql/core/Field;Ljava/util/List;Lorg/postgresql/core/ResultCursor;)Ljava/sql/ResultSet;
       8: areturn

  protected void transformQueriesAndParameters() throws java.sql.SQLException;
    Code:
       0: return

  static java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$000();
    Code:
       0: getstatic     #613                // Field CANCEL_TIMER_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: areturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #287                // class java/lang/String
       4: putstatic     #257                // Field NO_RETURNING_COLUMNS:[Ljava/lang/String;
       7: ldc_w         #752                // String org.postgresql.forceBinary
      10: invokestatic  #757                // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
      13: putstatic     #66                 // Field DEFAULT_FORCE_BINARY_TRANSFERS:Z
      16: ldc           #2                  // class org/postgresql/jdbc/PgStatement
      18: ldc_w         #624                // class java/util/TimerTask
      21: ldc_w         #758                // String cancelTimerTask
      24: invokestatic  #762                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      27: putstatic     #613                // Field CANCEL_TIMER_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      30: ldc           #2                  // class org/postgresql/jdbc/PgStatement
      32: ldc           #80                 // class org/postgresql/jdbc/StatementCancelState
      34: ldc_w         #763                // String statementState
      37: invokestatic  #762                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      40: putstatic     #568                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      43: return
}
