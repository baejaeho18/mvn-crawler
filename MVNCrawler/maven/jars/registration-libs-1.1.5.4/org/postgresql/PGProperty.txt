Compiled from "PGProperty.java"
public final class org.postgresql.PGProperty extends java.lang.Enum<org.postgresql.PGProperty> {
  public static final org.postgresql.PGProperty PG_DBNAME;

  public static final org.postgresql.PGProperty PG_HOST;

  public static final org.postgresql.PGProperty PG_PORT;

  public static final org.postgresql.PGProperty USER;

  public static final org.postgresql.PGProperty PASSWORD;

  public static final org.postgresql.PGProperty PROTOCOL_VERSION;

  public static final org.postgresql.PGProperty LOGGER_LEVEL;

  public static final org.postgresql.PGProperty LOGGER_FILE;

  public static final org.postgresql.PGProperty PREPARE_THRESHOLD;

  public static final org.postgresql.PGProperty PREPARED_STATEMENT_CACHE_QUERIES;

  public static final org.postgresql.PGProperty PREPARED_STATEMENT_CACHE_SIZE_MIB;

  public static final org.postgresql.PGProperty DATABASE_METADATA_CACHE_FIELDS;

  public static final org.postgresql.PGProperty DATABASE_METADATA_CACHE_FIELDS_MIB;

  public static final org.postgresql.PGProperty DEFAULT_ROW_FETCH_SIZE;

  public static final org.postgresql.PGProperty BINARY_TRANSFER;

  public static final org.postgresql.PGProperty READ_ONLY;

  public static final org.postgresql.PGProperty BINARY_TRANSFER_ENABLE;

  public static final org.postgresql.PGProperty BINARY_TRANSFER_DISABLE;

  public static final org.postgresql.PGProperty STRING_TYPE;

  public static final org.postgresql.PGProperty UNKNOWN_LENGTH;

  public static final org.postgresql.PGProperty LOG_UNCLOSED_CONNECTIONS;

  public static final org.postgresql.PGProperty DISABLE_COLUMN_SANITISER;

  public static final org.postgresql.PGProperty SSL;

  public static final org.postgresql.PGProperty SSL_MODE;

  public static final org.postgresql.PGProperty SSL_FACTORY;

  public static final org.postgresql.PGProperty SSL_FACTORY_ARG;

  public static final org.postgresql.PGProperty SSL_HOSTNAME_VERIFIER;

  public static final org.postgresql.PGProperty SSL_CERT;

  public static final org.postgresql.PGProperty SSL_KEY;

  public static final org.postgresql.PGProperty SSL_ROOT_CERT;

  public static final org.postgresql.PGProperty SSL_PASSWORD;

  public static final org.postgresql.PGProperty SSL_PASSWORD_CALLBACK;

  public static final org.postgresql.PGProperty TCP_KEEP_ALIVE;

  public static final org.postgresql.PGProperty LOGIN_TIMEOUT;

  public static final org.postgresql.PGProperty CONNECT_TIMEOUT;

  public static final org.postgresql.PGProperty SOCKET_TIMEOUT;

  public static final org.postgresql.PGProperty CANCEL_SIGNAL_TIMEOUT;

  public static final org.postgresql.PGProperty SOCKET_FACTORY;

  public static final org.postgresql.PGProperty SOCKET_FACTORY_ARG;

  public static final org.postgresql.PGProperty RECEIVE_BUFFER_SIZE;

  public static final org.postgresql.PGProperty SEND_BUFFER_SIZE;

  public static final org.postgresql.PGProperty ASSUME_MIN_SERVER_VERSION;

  public static final org.postgresql.PGProperty APPLICATION_NAME;

  public static final org.postgresql.PGProperty JAAS_LOGIN;

  public static final org.postgresql.PGProperty JAAS_APPLICATION_NAME;

  public static final org.postgresql.PGProperty KERBEROS_SERVER_NAME;

  public static final org.postgresql.PGProperty USE_SPNEGO;

  public static final org.postgresql.PGProperty GSS_LIB;

  public static final org.postgresql.PGProperty SSPI_SERVICE_CLASS;

  public static final org.postgresql.PGProperty ALLOW_ENCODING_CHANGES;

  public static final org.postgresql.PGProperty CURRENT_SCHEMA;

  public static final org.postgresql.PGProperty TARGET_SERVER_TYPE;

  public static final org.postgresql.PGProperty LOAD_BALANCE_HOSTS;

  public static final org.postgresql.PGProperty HOST_RECHECK_SECONDS;

  public static final org.postgresql.PGProperty PREFER_QUERY_MODE;

  public static final org.postgresql.PGProperty AUTOSAVE;

  public static final org.postgresql.PGProperty REWRITE_BATCHED_INSERTS;

  public static final org.postgresql.PGProperty REPLICATION;

  private java.lang.String _name;

  private java.lang.String _defaultValue;

  private boolean _required;

  private java.lang.String _description;

  private java.lang.String[] _choices;

  private static final org.postgresql.PGProperty[] $VALUES;

  public static org.postgresql.PGProperty[] values();
    Code:
       0: getstatic     #79                 // Field $VALUES:[Lorg/postgresql/PGProperty;
       3: invokevirtual #84                 // Method "[Lorg/postgresql/PGProperty;".clone:()Ljava/lang/Object;
       6: checkcast     #80                 // class "[Lorg/postgresql/PGProperty;"
       9: areturn

  public static org.postgresql.PGProperty valueOf(java.lang.String);
    Code:
       0: ldc           #2                  // class org/postgresql/PGProperty
       2: aload_0
       3: invokestatic  #89                 // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #2                  // class org/postgresql/PGProperty
       9: areturn

  private org.postgresql.PGProperty(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iconst_0
       9: invokespecial #95                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
      12: return

  private org.postgresql.PGProperty(java.lang.String, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aconst_null
      11: checkcast     #99                 // class "[Ljava/lang/String;"
      14: invokespecial #102                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;)V
      17: return

  private org.postgresql.PGProperty(java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #106                // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: aload_3
       8: putfield      #108                // Field _name:Ljava/lang/String;
      11: aload_0
      12: aload         4
      14: putfield      #110                // Field _defaultValue:Ljava/lang/String;
      17: aload_0
      18: iload         6
      20: putfield      #112                // Field _required:Z
      23: aload_0
      24: aload         5
      26: putfield      #114                // Field _description:Ljava/lang/String;
      29: aload_0
      30: aload         7
      32: putfield      #116                // Field _choices:[Ljava/lang/String;
      35: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #108                // Field _name:Ljava/lang/String;
       4: areturn

  public java.lang.String getDefaultValue();
    Code:
       0: aload_0
       1: getfield      #110                // Field _defaultValue:Ljava/lang/String;
       4: areturn

  public java.lang.String[] getChoices();
    Code:
       0: aload_0
       1: getfield      #116                // Field _choices:[Ljava/lang/String;
       4: areturn

  public java.lang.String get(java.util.Properties);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #108                // Field _name:Ljava/lang/String;
       5: aload_0
       6: getfield      #110                // Field _defaultValue:Ljava/lang/String;
       9: invokevirtual #130                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      12: areturn

  public void set(java.util.Properties, java.lang.String);
    Code:
       0: aload_2
       1: ifnonnull     16
       4: aload_1
       5: aload_0
       6: getfield      #108                // Field _name:Ljava/lang/String;
       9: invokevirtual #138                // Method java/util/Properties.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      12: pop
      13: goto          26
      16: aload_1
      17: aload_0
      18: getfield      #108                // Field _name:Ljava/lang/String;
      21: aload_2
      22: invokevirtual #142                // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      25: pop
      26: return

  public boolean getBoolean(java.util.Properties);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #147                // Method get:(Ljava/util/Properties;)Ljava/lang/String;
       5: invokestatic  #152                // Method java/lang/Boolean.valueOf:(Ljava/lang/String;)Ljava/lang/Boolean;
       8: invokevirtual #156                // Method java/lang/Boolean.booleanValue:()Z
      11: ireturn

  public int getIntNoCheck(java.util.Properties);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #147                // Method get:(Ljava/util/Properties;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: invokestatic  #164                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      10: ireturn

  public int getInt(java.util.Properties) throws org.postgresql.util.PSQLException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #147                // Method get:(Ljava/util/Properties;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: invokestatic  #164                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      10: ireturn
      11: astore_3
      12: new           #167                // class org/postgresql/util/PSQLException
      15: dup
      16: ldc           #173                // String {0} parameter value must be an integer but was: {1}
      18: iconst_2
      19: anewarray     #175                // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_0
      25: invokevirtual #177                // Method getName:()Ljava/lang/String;
      28: aastore
      29: dup
      30: iconst_1
      31: aload_2
      32: aastore
      33: invokestatic  #183                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      36: getstatic     #189                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      39: aload_3
      40: invokespecial #192                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
      43: athrow
    Exception table:
       from    to  target type
           6    10    11   Class java/lang/NumberFormatException

  public java.lang.Integer getInteger(java.util.Properties) throws org.postgresql.util.PSQLException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #147                // Method get:(Ljava/util/Properties;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_2
      13: invokestatic  #164                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      16: invokestatic  #199                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: areturn
      20: astore_3
      21: new           #167                // class org/postgresql/util/PSQLException
      24: dup
      25: ldc           #173                // String {0} parameter value must be an integer but was: {1}
      27: iconst_2
      28: anewarray     #175                // class java/lang/Object
      31: dup
      32: iconst_0
      33: aload_0
      34: invokevirtual #177                // Method getName:()Ljava/lang/String;
      37: aastore
      38: dup
      39: iconst_1
      40: aload_2
      41: aastore
      42: invokestatic  #183                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      45: getstatic     #189                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      48: aload_3
      49: invokespecial #192                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
      52: athrow
    Exception table:
       from    to  target type
          12    19    20   Class java/lang/NumberFormatException

  public void set(java.util.Properties, boolean);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #108                // Field _name:Ljava/lang/String;
       5: iload_2
       6: invokestatic  #204                // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       9: invokevirtual #142                // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      12: pop
      13: return

  public void set(java.util.Properties, int);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #108                // Field _name:Ljava/lang/String;
       5: iload_2
       6: invokestatic  #208                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       9: invokevirtual #142                // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      12: pop
      13: return

  public boolean isPresent(java.util.Properties);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #213                // Method getSetString:(Ljava/util/Properties;)Ljava/lang/String;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public java.sql.DriverPropertyInfo toDriverPropertyInfo(java.util.Properties);
    Code:
       0: new           #217                // class java/sql/DriverPropertyInfo
       3: dup
       4: aload_0
       5: getfield      #108                // Field _name:Ljava/lang/String;
       8: aload_0
       9: aload_1
      10: invokevirtual #147                // Method get:(Ljava/util/Properties;)Ljava/lang/String;
      13: invokespecial #220                // Method java/sql/DriverPropertyInfo."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      16: astore_2
      17: aload_2
      18: aload_0
      19: getfield      #112                // Field _required:Z
      22: putfield      #222                // Field java/sql/DriverPropertyInfo.required:Z
      25: aload_2
      26: aload_0
      27: getfield      #114                // Field _description:Ljava/lang/String;
      30: putfield      #224                // Field java/sql/DriverPropertyInfo.description:Ljava/lang/String;
      33: aload_2
      34: aload_0
      35: getfield      #116                // Field _choices:[Ljava/lang/String;
      38: putfield      #226                // Field java/sql/DriverPropertyInfo.choices:[Ljava/lang/String;
      41: aload_2
      42: areturn

  public static org.postgresql.PGProperty forName(java.lang.String);
    Code:
       0: invokestatic  #231                // Method values:()[Lorg/postgresql/PGProperty;
       3: astore_1
       4: aload_1
       5: arraylength
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_2
      11: if_icmpge     40
      14: aload_1
      15: iload_3
      16: aaload
      17: astore        4
      19: aload         4
      21: invokevirtual #177                // Method getName:()Ljava/lang/String;
      24: aload_0
      25: invokevirtual #235                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ifeq          34
      31: aload         4
      33: areturn
      34: iinc          3, 1
      37: goto          9
      40: aconst_null
      41: areturn

  public java.lang.String getSetString(java.util.Properties);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #108                // Field _name:Ljava/lang/String;
       5: invokevirtual #238                // Method java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore_2
       9: aload_2
      10: instanceof    #171                // class java/lang/String
      13: ifeq          21
      16: aload_2
      17: checkcast     #171                // class java/lang/String
      20: areturn
      21: aconst_null
      22: areturn

  static {};
    Code:
       0: new           #2                  // class org/postgresql/PGProperty
       3: dup
       4: ldc           #243                // String PG_DBNAME
       6: iconst_0
       7: ldc           #245                // String PGDBNAME
       9: aconst_null
      10: ldc           #247                // String Database name to connect to (may be specified directly in the JDBC URL)
      12: iconst_1
      13: invokespecial #95                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
      16: putstatic     #249                // Field PG_DBNAME:Lorg/postgresql/PGProperty;
      19: new           #2                  // class org/postgresql/PGProperty
      22: dup
      23: ldc           #250                // String PG_HOST
      25: iconst_1
      26: ldc           #252                // String PGHOST
      28: aconst_null
      29: ldc           #254                // String Hostname of the PostgreSQL server (may be specified directly in the JDBC URL)
      31: iconst_0
      32: invokespecial #95                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
      35: putstatic     #256                // Field PG_HOST:Lorg/postgresql/PGProperty;
      38: new           #2                  // class org/postgresql/PGProperty
      41: dup
      42: ldc_w         #257                // String PG_PORT
      45: iconst_2
      46: ldc_w         #259                // String PGPORT
      49: aconst_null
      50: ldc_w         #261                // String Port of the PostgreSQL server (may be specified directly in the JDBC URL)
      53: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      56: putstatic     #265                // Field PG_PORT:Lorg/postgresql/PGProperty;
      59: new           #2                  // class org/postgresql/PGProperty
      62: dup
      63: ldc_w         #266                // String USER
      66: iconst_3
      67: ldc_w         #268                // String user
      70: aconst_null
      71: ldc_w         #270                // String Username to connect to the database as.
      74: iconst_1
      75: invokespecial #95                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
      78: putstatic     #272                // Field USER:Lorg/postgresql/PGProperty;
      81: new           #2                  // class org/postgresql/PGProperty
      84: dup
      85: ldc_w         #273                // String PASSWORD
      88: iconst_4
      89: ldc_w         #275                // String password
      92: aconst_null
      93: ldc_w         #277                // String Password to use when authenticating.
      96: iconst_0
      97: invokespecial #95                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
     100: putstatic     #279                // Field PASSWORD:Lorg/postgresql/PGProperty;
     103: new           #2                  // class org/postgresql/PGProperty
     106: dup
     107: ldc_w         #280                // String PROTOCOL_VERSION
     110: iconst_5
     111: ldc_w         #282                // String protocolVersion
     114: aconst_null
     115: ldc_w         #284                // String Force use of a particular protocol version when connecting, currently only version 3 is supported.
     118: iconst_0
     119: iconst_1
     120: anewarray     #171                // class java/lang/String
     123: dup
     124: iconst_0
     125: ldc_w         #286                // String 3
     128: aastore
     129: invokespecial #102                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;)V
     132: putstatic     #288                // Field PROTOCOL_VERSION:Lorg/postgresql/PGProperty;
     135: new           #2                  // class org/postgresql/PGProperty
     138: dup
     139: ldc_w         #289                // String LOGGER_LEVEL
     142: bipush        6
     144: ldc_w         #291                // String loggerLevel
     147: aconst_null
     148: ldc_w         #293                // String Logger level of the driver
     151: iconst_0
     152: iconst_3
     153: anewarray     #171                // class java/lang/String
     156: dup
     157: iconst_0
     158: ldc_w         #295                // String OFF
     161: aastore
     162: dup
     163: iconst_1
     164: ldc_w         #297                // String DEBUG
     167: aastore
     168: dup
     169: iconst_2
     170: ldc_w         #299                // String TRACE
     173: aastore
     174: invokespecial #102                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;)V
     177: putstatic     #301                // Field LOGGER_LEVEL:Lorg/postgresql/PGProperty;
     180: new           #2                  // class org/postgresql/PGProperty
     183: dup
     184: ldc_w         #302                // String LOGGER_FILE
     187: bipush        7
     189: ldc_w         #304                // String loggerFile
     192: aconst_null
     193: ldc_w         #306                // String File name output of the Logger
     196: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     199: putstatic     #308                // Field LOGGER_FILE:Lorg/postgresql/PGProperty;
     202: new           #2                  // class org/postgresql/PGProperty
     205: dup
     206: ldc_w         #309                // String PREPARE_THRESHOLD
     209: bipush        8
     211: ldc_w         #311                // String prepareThreshold
     214: ldc_w         #313                // String 5
     217: ldc_w         #315                // String Statement prepare threshold. A value of {@code -1} stands for forceBinary
     220: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     223: putstatic     #317                // Field PREPARE_THRESHOLD:Lorg/postgresql/PGProperty;
     226: new           #2                  // class org/postgresql/PGProperty
     229: dup
     230: ldc_w         #318                // String PREPARED_STATEMENT_CACHE_QUERIES
     233: bipush        9
     235: ldc_w         #320                // String preparedStatementCacheQueries
     238: ldc_w         #322                // String 256
     241: ldc_w         #324                // String Specifies the maximum number of entries in per-connection cache of prepared statements. A value of {@code 0} disables the cache.
     244: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     247: putstatic     #326                // Field PREPARED_STATEMENT_CACHE_QUERIES:Lorg/postgresql/PGProperty;
     250: new           #2                  // class org/postgresql/PGProperty
     253: dup
     254: ldc_w         #327                // String PREPARED_STATEMENT_CACHE_SIZE_MIB
     257: bipush        10
     259: ldc_w         #329                // String preparedStatementCacheSizeMiB
     262: ldc_w         #313                // String 5
     265: ldc_w         #331                // String Specifies the maximum size (in megabytes) of a per-connection prepared statement cache. A value of {@code 0} disables the cache.
     268: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     271: putstatic     #333                // Field PREPARED_STATEMENT_CACHE_SIZE_MIB:Lorg/postgresql/PGProperty;
     274: new           #2                  // class org/postgresql/PGProperty
     277: dup
     278: ldc_w         #334                // String DATABASE_METADATA_CACHE_FIELDS
     281: bipush        11
     283: ldc_w         #336                // String databaseMetadataCacheFields
     286: ldc_w         #338                // String 65536
     289: ldc_w         #340                // String Specifies the maximum number of fields to be cached per connection. A value of {@code 0} disables the cache.
     292: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     295: putstatic     #342                // Field DATABASE_METADATA_CACHE_FIELDS:Lorg/postgresql/PGProperty;
     298: new           #2                  // class org/postgresql/PGProperty
     301: dup
     302: ldc_w         #343                // String DATABASE_METADATA_CACHE_FIELDS_MIB
     305: bipush        12
     307: ldc_w         #345                // String databaseMetadataCacheFieldsMiB
     310: ldc_w         #313                // String 5
     313: ldc_w         #347                // String Specifies the maximum size (in megabytes) of fields to be cached per connection. A value of {@code 0} disables the cache.
     316: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     319: putstatic     #349                // Field DATABASE_METADATA_CACHE_FIELDS_MIB:Lorg/postgresql/PGProperty;
     322: new           #2                  // class org/postgresql/PGProperty
     325: dup
     326: ldc_w         #350                // String DEFAULT_ROW_FETCH_SIZE
     329: bipush        13
     331: ldc_w         #352                // String defaultRowFetchSize
     334: ldc_w         #354                // String 0
     337: ldc_w         #356                // String Positive number of rows that should be fetched from the database when more rows are needed for ResultSet by each fetch iteration
     340: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     343: putstatic     #358                // Field DEFAULT_ROW_FETCH_SIZE:Lorg/postgresql/PGProperty;
     346: new           #2                  // class org/postgresql/PGProperty
     349: dup
     350: ldc_w         #359                // String BINARY_TRANSFER
     353: bipush        14
     355: ldc_w         #361                // String binaryTransfer
     358: ldc_w         #363                // String true
     361: ldc_w         #365                // String Use binary format for sending and receiving data if possible
     364: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     367: putstatic     #367                // Field BINARY_TRANSFER:Lorg/postgresql/PGProperty;
     370: new           #2                  // class org/postgresql/PGProperty
     373: dup
     374: ldc_w         #368                // String READ_ONLY
     377: bipush        15
     379: ldc_w         #370                // String readOnly
     382: ldc_w         #372                // String false
     385: ldc_w         #374                // String Puts this connection in read-only mode
     388: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     391: putstatic     #376                // Field READ_ONLY:Lorg/postgresql/PGProperty;
     394: new           #2                  // class org/postgresql/PGProperty
     397: dup
     398: ldc_w         #377                // String BINARY_TRANSFER_ENABLE
     401: bipush        16
     403: ldc_w         #379                // String binaryTransferEnable
     406: ldc_w         #381                // String
     409: ldc_w         #383                // String Comma separated list of types to enable binary transfer. Either OID numbers or names
     412: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     415: putstatic     #385                // Field BINARY_TRANSFER_ENABLE:Lorg/postgresql/PGProperty;
     418: new           #2                  // class org/postgresql/PGProperty
     421: dup
     422: ldc_w         #386                // String BINARY_TRANSFER_DISABLE
     425: bipush        17
     427: ldc_w         #388                // String binaryTransferDisable
     430: ldc_w         #381                // String
     433: ldc_w         #390                // String Comma separated list of types to disable binary transfer. Either OID numbers or names. Overrides values in the driver default set and values set with binaryTransferEnable.
     436: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     439: putstatic     #392                // Field BINARY_TRANSFER_DISABLE:Lorg/postgresql/PGProperty;
     442: new           #2                  // class org/postgresql/PGProperty
     445: dup
     446: ldc_w         #393                // String STRING_TYPE
     449: bipush        18
     451: ldc_w         #395                // String stringtype
     454: aconst_null
     455: ldc_w         #397                // String The type to bind String parameters as (usually \'varchar\', \'unspecified\' allows implicit casting to other types)
     458: iconst_0
     459: iconst_2
     460: anewarray     #171                // class java/lang/String
     463: dup
     464: iconst_0
     465: ldc_w         #399                // String unspecified
     468: aastore
     469: dup
     470: iconst_1
     471: ldc_w         #401                // String varchar
     474: aastore
     475: invokespecial #102                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;)V
     478: putstatic     #403                // Field STRING_TYPE:Lorg/postgresql/PGProperty;
     481: new           #2                  // class org/postgresql/PGProperty
     484: dup
     485: ldc_w         #404                // String UNKNOWN_LENGTH
     488: bipush        19
     490: ldc_w         #406                // String unknownLength
     493: ldc_w         #407                // int 2147483647
     496: invokestatic  #208                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
     499: ldc_w         #409                // String Specifies the length to return for types of unknown length
     502: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     505: putstatic     #411                // Field UNKNOWN_LENGTH:Lorg/postgresql/PGProperty;
     508: new           #2                  // class org/postgresql/PGProperty
     511: dup
     512: ldc_w         #412                // String LOG_UNCLOSED_CONNECTIONS
     515: bipush        20
     517: ldc_w         #414                // String logUnclosedConnections
     520: ldc_w         #372                // String false
     523: ldc_w         #416                // String When connections that are not explicitly closed are garbage collected, log the stacktrace from the opening of the connection to trace the leak source
     526: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     529: putstatic     #418                // Field LOG_UNCLOSED_CONNECTIONS:Lorg/postgresql/PGProperty;
     532: new           #2                  // class org/postgresql/PGProperty
     535: dup
     536: ldc_w         #419                // String DISABLE_COLUMN_SANITISER
     539: bipush        21
     541: ldc_w         #421                // String disableColumnSanitiser
     544: ldc_w         #372                // String false
     547: ldc_w         #423                // String Enable optimization that disables column name sanitiser
     550: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     553: putstatic     #425                // Field DISABLE_COLUMN_SANITISER:Lorg/postgresql/PGProperty;
     556: new           #2                  // class org/postgresql/PGProperty
     559: dup
     560: ldc_w         #426                // String SSL
     563: bipush        22
     565: ldc_w         #428                // String ssl
     568: aconst_null
     569: ldc_w         #430                // String Control use of SSL (any non-null value causes SSL to be required)
     572: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     575: putstatic     #432                // Field SSL:Lorg/postgresql/PGProperty;
     578: new           #2                  // class org/postgresql/PGProperty
     581: dup
     582: ldc_w         #433                // String SSL_MODE
     585: bipush        23
     587: ldc_w         #435                // String sslmode
     590: aconst_null
     591: ldc_w         #437                // String Parameter governing the use of SSL
     594: iconst_0
     595: iconst_4
     596: anewarray     #171                // class java/lang/String
     599: dup
     600: iconst_0
     601: ldc_w         #439                // String disable
     604: aastore
     605: dup
     606: iconst_1
     607: ldc_w         #441                // String require
     610: aastore
     611: dup
     612: iconst_2
     613: ldc_w         #443                // String verify-ca
     616: aastore
     617: dup
     618: iconst_3
     619: ldc_w         #445                // String verify-full
     622: aastore
     623: invokespecial #102                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;)V
     626: putstatic     #447                // Field SSL_MODE:Lorg/postgresql/PGProperty;
     629: new           #2                  // class org/postgresql/PGProperty
     632: dup
     633: ldc_w         #448                // String SSL_FACTORY
     636: bipush        24
     638: ldc_w         #450                // String sslfactory
     641: aconst_null
     642: ldc_w         #452                // String Provide a SSLSocketFactory class when using SSL.
     645: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     648: putstatic     #454                // Field SSL_FACTORY:Lorg/postgresql/PGProperty;
     651: new           #2                  // class org/postgresql/PGProperty
     654: dup
     655: ldc_w         #455                // String SSL_FACTORY_ARG
     658: bipush        25
     660: ldc_w         #457                // String sslfactoryarg
     663: aconst_null
     664: ldc_w         #459                // String Argument forwarded to constructor of SSLSocketFactory class.
     667: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     670: putstatic     #461                // Field SSL_FACTORY_ARG:Lorg/postgresql/PGProperty;
     673: new           #2                  // class org/postgresql/PGProperty
     676: dup
     677: ldc_w         #462                // String SSL_HOSTNAME_VERIFIER
     680: bipush        26
     682: ldc_w         #464                // String sslhostnameverifier
     685: aconst_null
     686: ldc_w         #466                // String A class, implementing javax.net.ssl.HostnameVerifier that can verify the server
     689: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     692: putstatic     #468                // Field SSL_HOSTNAME_VERIFIER:Lorg/postgresql/PGProperty;
     695: new           #2                  // class org/postgresql/PGProperty
     698: dup
     699: ldc_w         #469                // String SSL_CERT
     702: bipush        27
     704: ldc_w         #471                // String sslcert
     707: aconst_null
     708: ldc_w         #473                // String The location of the client\'s SSL certificate
     711: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     714: putstatic     #475                // Field SSL_CERT:Lorg/postgresql/PGProperty;
     717: new           #2                  // class org/postgresql/PGProperty
     720: dup
     721: ldc_w         #476                // String SSL_KEY
     724: bipush        28
     726: ldc_w         #478                // String sslkey
     729: aconst_null
     730: ldc_w         #480                // String The location of the client\'s PKCS#8 SSL key
     733: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     736: putstatic     #482                // Field SSL_KEY:Lorg/postgresql/PGProperty;
     739: new           #2                  // class org/postgresql/PGProperty
     742: dup
     743: ldc_w         #483                // String SSL_ROOT_CERT
     746: bipush        29
     748: ldc_w         #485                // String sslrootcert
     751: aconst_null
     752: ldc_w         #487                // String The location of the root certificate for authenticating the server.
     755: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     758: putstatic     #489                // Field SSL_ROOT_CERT:Lorg/postgresql/PGProperty;
     761: new           #2                  // class org/postgresql/PGProperty
     764: dup
     765: ldc_w         #490                // String SSL_PASSWORD
     768: bipush        30
     770: ldc_w         #492                // String sslpassword
     773: aconst_null
     774: ldc_w         #494                // String The password for the client\'s ssl key (ignored if sslpasswordcallback is set)
     777: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     780: putstatic     #496                // Field SSL_PASSWORD:Lorg/postgresql/PGProperty;
     783: new           #2                  // class org/postgresql/PGProperty
     786: dup
     787: ldc_w         #497                // String SSL_PASSWORD_CALLBACK
     790: bipush        31
     792: ldc_w         #499                // String sslpasswordcallback
     795: aconst_null
     796: ldc_w         #501                // String A class, implementing javax.security.auth.callback.CallbackHandler that can handle PassworCallback for the ssl password.
     799: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     802: putstatic     #503                // Field SSL_PASSWORD_CALLBACK:Lorg/postgresql/PGProperty;
     805: new           #2                  // class org/postgresql/PGProperty
     808: dup
     809: ldc_w         #504                // String TCP_KEEP_ALIVE
     812: bipush        32
     814: ldc_w         #506                // String tcpKeepAlive
     817: ldc_w         #372                // String false
     820: ldc_w         #508                // String Enable or disable TCP keep-alive. The default is {@code false}.
     823: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     826: putstatic     #510                // Field TCP_KEEP_ALIVE:Lorg/postgresql/PGProperty;
     829: new           #2                  // class org/postgresql/PGProperty
     832: dup
     833: ldc_w         #511                // String LOGIN_TIMEOUT
     836: bipush        33
     838: ldc_w         #513                // String loginTimeout
     841: ldc_w         #354                // String 0
     844: ldc_w         #515                // String Specify how long to wait for establishment of a database connection.
     847: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     850: putstatic     #517                // Field LOGIN_TIMEOUT:Lorg/postgresql/PGProperty;
     853: new           #2                  // class org/postgresql/PGProperty
     856: dup
     857: ldc_w         #518                // String CONNECT_TIMEOUT
     860: bipush        34
     862: ldc_w         #520                // String connectTimeout
     865: ldc_w         #522                // String 10
     868: ldc_w         #524                // String The timeout value used for socket connect operations.
     871: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     874: putstatic     #526                // Field CONNECT_TIMEOUT:Lorg/postgresql/PGProperty;
     877: new           #2                  // class org/postgresql/PGProperty
     880: dup
     881: ldc_w         #527                // String SOCKET_TIMEOUT
     884: bipush        35
     886: ldc_w         #529                // String socketTimeout
     889: ldc_w         #354                // String 0
     892: ldc_w         #531                // String The timeout value used for socket read operations.
     895: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     898: putstatic     #533                // Field SOCKET_TIMEOUT:Lorg/postgresql/PGProperty;
     901: new           #2                  // class org/postgresql/PGProperty
     904: dup
     905: ldc_w         #534                // String CANCEL_SIGNAL_TIMEOUT
     908: bipush        36
     910: ldc_w         #536                // String cancelSignalTimeout
     913: ldc_w         #522                // String 10
     916: ldc_w         #538                // String The timeout that is used for sending cancel command.
     919: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     922: putstatic     #540                // Field CANCEL_SIGNAL_TIMEOUT:Lorg/postgresql/PGProperty;
     925: new           #2                  // class org/postgresql/PGProperty
     928: dup
     929: ldc_w         #541                // String SOCKET_FACTORY
     932: bipush        37
     934: ldc_w         #543                // String socketFactory
     937: aconst_null
     938: ldc_w         #545                // String Specify a socket factory for socket creation
     941: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     944: putstatic     #547                // Field SOCKET_FACTORY:Lorg/postgresql/PGProperty;
     947: new           #2                  // class org/postgresql/PGProperty
     950: dup
     951: ldc_w         #548                // String SOCKET_FACTORY_ARG
     954: bipush        38
     956: ldc_w         #550                // String socketFactoryArg
     959: aconst_null
     960: ldc_w         #552                // String Argument forwarded to constructor of SocketFactory class.
     963: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     966: putstatic     #554                // Field SOCKET_FACTORY_ARG:Lorg/postgresql/PGProperty;
     969: new           #2                  // class org/postgresql/PGProperty
     972: dup
     973: ldc_w         #555                // String RECEIVE_BUFFER_SIZE
     976: bipush        39
     978: ldc_w         #557                // String receiveBufferSize
     981: ldc_w         #559                // String -1
     984: ldc_w         #561                // String Socket read buffer size
     987: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     990: putstatic     #563                // Field RECEIVE_BUFFER_SIZE:Lorg/postgresql/PGProperty;
     993: new           #2                  // class org/postgresql/PGProperty
     996: dup
     997: ldc_w         #564                // String SEND_BUFFER_SIZE
    1000: bipush        40
    1002: ldc_w         #566                // String sendBufferSize
    1005: ldc_w         #559                // String -1
    1008: ldc_w         #568                // String Socket write buffer size
    1011: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    1014: putstatic     #570                // Field SEND_BUFFER_SIZE:Lorg/postgresql/PGProperty;
    1017: new           #2                  // class org/postgresql/PGProperty
    1020: dup
    1021: ldc_w         #571                // String ASSUME_MIN_SERVER_VERSION
    1024: bipush        41
    1026: ldc_w         #573                // String assumeMinServerVersion
    1029: aconst_null
    1030: ldc_w         #575                // String Assume the server is at least that version
    1033: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    1036: putstatic     #577                // Field ASSUME_MIN_SERVER_VERSION:Lorg/postgresql/PGProperty;
    1039: new           #2                  // class org/postgresql/PGProperty
    1042: dup
    1043: ldc_w         #578                // String APPLICATION_NAME
    1046: bipush        42
    1048: ldc_w         #580                // String ApplicationName
    1051: ldc_w         #582                // String PostgreSQL JDBC Driver
    1054: ldc_w         #584                // String Name of the Application (backend >= 9.0)
    1057: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    1060: putstatic     #586                // Field APPLICATION_NAME:Lorg/postgresql/PGProperty;
    1063: new           #2                  // class org/postgresql/PGProperty
    1066: dup
    1067: ldc_w         #587                // String JAAS_LOGIN
    1070: bipush        43
    1072: ldc_w         #589                // String jaasLogin
    1075: ldc_w         #363                // String true
    1078: ldc_w         #591                // String Login with JAAS before doing GSSAPI authentication
    1081: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    1084: putstatic     #593                // Field JAAS_LOGIN:Lorg/postgresql/PGProperty;
    1087: new           #2                  // class org/postgresql/PGProperty
    1090: dup
    1091: ldc_w         #594                // String JAAS_APPLICATION_NAME
    1094: bipush        44
    1096: ldc_w         #596                // String jaasApplicationName
    1099: aconst_null
    1100: ldc_w         #598                // String Specifies the name of the JAAS system or application login configuration.
    1103: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    1106: putstatic     #600                // Field JAAS_APPLICATION_NAME:Lorg/postgresql/PGProperty;
    1109: new           #2                  // class org/postgresql/PGProperty
    1112: dup
    1113: ldc_w         #601                // String KERBEROS_SERVER_NAME
    1116: bipush        45
    1118: ldc_w         #603                // String kerberosServerName
    1121: aconst_null
    1122: ldc_w         #605                // String The Kerberos service name to use when authenticating with GSSAPI.
    1125: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    1128: putstatic     #607                // Field KERBEROS_SERVER_NAME:Lorg/postgresql/PGProperty;
    1131: new           #2                  // class org/postgresql/PGProperty
    1134: dup
    1135: ldc_w         #608                // String USE_SPNEGO
    1138: bipush        46
    1140: ldc_w         #610                // String useSpnego
    1143: ldc_w         #372                // String false
    1146: ldc_w         #612                // String Use SPNEGO in SSPI authentication requests
    1149: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    1152: putstatic     #614                // Field USE_SPNEGO:Lorg/postgresql/PGProperty;
    1155: new           #2                  // class org/postgresql/PGProperty
    1158: dup
    1159: ldc_w         #615                // String GSS_LIB
    1162: bipush        47
    1164: ldc_w         #617                // String gsslib
    1167: ldc_w         #619                // String auto
    1170: ldc_w         #621                // String Force SSSPI or GSSAPI
    1173: iconst_0
    1174: iconst_3
    1175: anewarray     #171                // class java/lang/String
    1178: dup
    1179: iconst_0
    1180: ldc_w         #619                // String auto
    1183: aastore
    1184: dup
    1185: iconst_1
    1186: ldc_w         #623                // String sspi
    1189: aastore
    1190: dup
    1191: iconst_2
    1192: ldc_w         #625                // String gssapi
    1195: aastore
    1196: invokespecial #102                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;)V
    1199: putstatic     #627                // Field GSS_LIB:Lorg/postgresql/PGProperty;
    1202: new           #2                  // class org/postgresql/PGProperty
    1205: dup
    1206: ldc_w         #628                // String SSPI_SERVICE_CLASS
    1209: bipush        48
    1211: ldc_w         #630                // String sspiServiceClass
    1214: ldc_w         #632                // String POSTGRES
    1217: ldc_w         #634                // String The Windows SSPI service class for SPN
    1220: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    1223: putstatic     #636                // Field SSPI_SERVICE_CLASS:Lorg/postgresql/PGProperty;
    1226: new           #2                  // class org/postgresql/PGProperty
    1229: dup
    1230: ldc_w         #637                // String ALLOW_ENCODING_CHANGES
    1233: bipush        49
    1235: ldc_w         #639                // String allowEncodingChanges
    1238: ldc_w         #372                // String false
    1241: ldc_w         #641                // String Allow for changes in client_encoding
    1244: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    1247: putstatic     #643                // Field ALLOW_ENCODING_CHANGES:Lorg/postgresql/PGProperty;
    1250: new           #2                  // class org/postgresql/PGProperty
    1253: dup
    1254: ldc_w         #644                // String CURRENT_SCHEMA
    1257: bipush        50
    1259: ldc_w         #646                // String currentSchema
    1262: aconst_null
    1263: ldc_w         #648                // String Specify the schema to be set in the search-path
    1266: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    1269: putstatic     #650                // Field CURRENT_SCHEMA:Lorg/postgresql/PGProperty;
    1272: new           #2                  // class org/postgresql/PGProperty
    1275: dup
    1276: ldc_w         #651                // String TARGET_SERVER_TYPE
    1279: bipush        51
    1281: ldc_w         #653                // String targetServerType
    1284: ldc_w         #655                // String any
    1287: ldc_w         #657                // String Specifies what kind of server to connect
    1290: iconst_0
    1291: bipush        6
    1293: anewarray     #171                // class java/lang/String
    1296: dup
    1297: iconst_0
    1298: ldc_w         #655                // String any
    1301: aastore
    1302: dup
    1303: iconst_1
    1304: ldc_w         #659                // String master
    1307: aastore
    1308: dup
    1309: iconst_2
    1310: ldc_w         #661                // String slave
    1313: aastore
    1314: dup
    1315: iconst_3
    1316: ldc_w         #663                // String secondary
    1319: aastore
    1320: dup
    1321: iconst_4
    1322: ldc_w         #665                // String preferSlave
    1325: aastore
    1326: dup
    1327: iconst_5
    1328: ldc_w         #667                // String preferSecondary
    1331: aastore
    1332: invokespecial #102                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;)V
    1335: putstatic     #669                // Field TARGET_SERVER_TYPE:Lorg/postgresql/PGProperty;
    1338: new           #2                  // class org/postgresql/PGProperty
    1341: dup
    1342: ldc_w         #670                // String LOAD_BALANCE_HOSTS
    1345: bipush        52
    1347: ldc_w         #672                // String loadBalanceHosts
    1350: ldc_w         #372                // String false
    1353: ldc_w         #674                // String If disabled hosts are connected in the given order. If enabled hosts are chosen randomly from the set of suitable candidates
    1356: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    1359: putstatic     #676                // Field LOAD_BALANCE_HOSTS:Lorg/postgresql/PGProperty;
    1362: new           #2                  // class org/postgresql/PGProperty
    1365: dup
    1366: ldc_w         #677                // String HOST_RECHECK_SECONDS
    1369: bipush        53
    1371: ldc_w         #679                // String hostRecheckSeconds
    1374: ldc_w         #522                // String 10
    1377: ldc_w         #681                // String Specifies period (seconds) after which the host status is checked again in case it has changed
    1380: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    1383: putstatic     #683                // Field HOST_RECHECK_SECONDS:Lorg/postgresql/PGProperty;
    1386: new           #2                  // class org/postgresql/PGProperty
    1389: dup
    1390: ldc_w         #684                // String PREFER_QUERY_MODE
    1393: bipush        54
    1395: ldc_w         #686                // String preferQueryMode
    1398: ldc_w         #688                // String extended
    1401: ldc_w         #690                // String Specifies which mode is used to execute queries to database: simple means (\'Q\' execute, no parse, no bind, text mode only), extended means always use bind/execute messages, extendedForPrepared means extended for prepared statements only, extendedCacheEverything means use extended protocol and try cache every statement (including Statement.execute(String sql)) in a query cache.
    1404: iconst_0
    1405: iconst_4
    1406: anewarray     #171                // class java/lang/String
    1409: dup
    1410: iconst_0
    1411: ldc_w         #688                // String extended
    1414: aastore
    1415: dup
    1416: iconst_1
    1417: ldc_w         #692                // String extendedForPrepared
    1420: aastore
    1421: dup
    1422: iconst_2
    1423: ldc_w         #694                // String extendedCacheEverything
    1426: aastore
    1427: dup
    1428: iconst_3
    1429: ldc_w         #696                // String simple
    1432: aastore
    1433: invokespecial #102                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;)V
    1436: putstatic     #698                // Field PREFER_QUERY_MODE:Lorg/postgresql/PGProperty;
    1439: new           #2                  // class org/postgresql/PGProperty
    1442: dup
    1443: ldc_w         #699                // String AUTOSAVE
    1446: bipush        55
    1448: ldc_w         #701                // String autosave
    1451: ldc_w         #703                // String never
    1454: ldc_w         #705                // String Specifies what the driver should do if a query fails. In autosave=always mode, JDBC driver sets a savepoint before each query, and rolls back to that savepoint in case of failure. In autosave=never mode (default), no savepoint dance is made ever. In autosave=conservative mode, safepoint is set for each query, however the rollback is done only for rare cases like \'cached statement cannot change return type\' or \'statement XXX is not valid\' so JDBC driver rollsback and retries
    1457: iconst_0
    1458: iconst_3
    1459: anewarray     #171                // class java/lang/String
    1462: dup
    1463: iconst_0
    1464: ldc_w         #707                // String always
    1467: aastore
    1468: dup
    1469: iconst_1
    1470: ldc_w         #703                // String never
    1473: aastore
    1474: dup
    1475: iconst_2
    1476: ldc_w         #709                // String conservative
    1479: aastore
    1480: invokespecial #102                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;)V
    1483: putstatic     #711                // Field AUTOSAVE:Lorg/postgresql/PGProperty;
    1486: new           #2                  // class org/postgresql/PGProperty
    1489: dup
    1490: ldc_w         #712                // String REWRITE_BATCHED_INSERTS
    1493: bipush        56
    1495: ldc_w         #714                // String reWriteBatchedInserts
    1498: ldc_w         #372                // String false
    1501: ldc_w         #716                // String Enable optimization to rewrite and collapse compatible INSERT statements that are batched.
    1504: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    1507: putstatic     #718                // Field REWRITE_BATCHED_INSERTS:Lorg/postgresql/PGProperty;
    1510: new           #2                  // class org/postgresql/PGProperty
    1513: dup
    1514: ldc_w         #719                // String REPLICATION
    1517: bipush        57
    1519: ldc_w         #721                // String replication
    1522: aconst_null
    1523: ldc_w         #723                // String Connection parameter passed in startup message, one of \'true\' or \'database\' Passing \'true\' tells the backend to go into walsender mode, wherein a small set of replication commands can be issued instead of SQL statements. Only the simple query protocol can be used in walsender mode. Passing \'database\' as the value instructs walsender to connect to the database specified in the dbname parameter, which will allow the connection to be used for logical replication from that database. (backend >= 9.4)
    1526: invokespecial #263                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    1529: putstatic     #725                // Field REPLICATION:Lorg/postgresql/PGProperty;
    1532: bipush        58
    1534: anewarray     #2                  // class org/postgresql/PGProperty
    1537: dup
    1538: iconst_0
    1539: getstatic     #249                // Field PG_DBNAME:Lorg/postgresql/PGProperty;
    1542: aastore
    1543: dup
    1544: iconst_1
    1545: getstatic     #256                // Field PG_HOST:Lorg/postgresql/PGProperty;
    1548: aastore
    1549: dup
    1550: iconst_2
    1551: getstatic     #265                // Field PG_PORT:Lorg/postgresql/PGProperty;
    1554: aastore
    1555: dup
    1556: iconst_3
    1557: getstatic     #272                // Field USER:Lorg/postgresql/PGProperty;
    1560: aastore
    1561: dup
    1562: iconst_4
    1563: getstatic     #279                // Field PASSWORD:Lorg/postgresql/PGProperty;
    1566: aastore
    1567: dup
    1568: iconst_5
    1569: getstatic     #288                // Field PROTOCOL_VERSION:Lorg/postgresql/PGProperty;
    1572: aastore
    1573: dup
    1574: bipush        6
    1576: getstatic     #301                // Field LOGGER_LEVEL:Lorg/postgresql/PGProperty;
    1579: aastore
    1580: dup
    1581: bipush        7
    1583: getstatic     #308                // Field LOGGER_FILE:Lorg/postgresql/PGProperty;
    1586: aastore
    1587: dup
    1588: bipush        8
    1590: getstatic     #317                // Field PREPARE_THRESHOLD:Lorg/postgresql/PGProperty;
    1593: aastore
    1594: dup
    1595: bipush        9
    1597: getstatic     #326                // Field PREPARED_STATEMENT_CACHE_QUERIES:Lorg/postgresql/PGProperty;
    1600: aastore
    1601: dup
    1602: bipush        10
    1604: getstatic     #333                // Field PREPARED_STATEMENT_CACHE_SIZE_MIB:Lorg/postgresql/PGProperty;
    1607: aastore
    1608: dup
    1609: bipush        11
    1611: getstatic     #342                // Field DATABASE_METADATA_CACHE_FIELDS:Lorg/postgresql/PGProperty;
    1614: aastore
    1615: dup
    1616: bipush        12
    1618: getstatic     #349                // Field DATABASE_METADATA_CACHE_FIELDS_MIB:Lorg/postgresql/PGProperty;
    1621: aastore
    1622: dup
    1623: bipush        13
    1625: getstatic     #358                // Field DEFAULT_ROW_FETCH_SIZE:Lorg/postgresql/PGProperty;
    1628: aastore
    1629: dup
    1630: bipush        14
    1632: getstatic     #367                // Field BINARY_TRANSFER:Lorg/postgresql/PGProperty;
    1635: aastore
    1636: dup
    1637: bipush        15
    1639: getstatic     #376                // Field READ_ONLY:Lorg/postgresql/PGProperty;
    1642: aastore
    1643: dup
    1644: bipush        16
    1646: getstatic     #385                // Field BINARY_TRANSFER_ENABLE:Lorg/postgresql/PGProperty;
    1649: aastore
    1650: dup
    1651: bipush        17
    1653: getstatic     #392                // Field BINARY_TRANSFER_DISABLE:Lorg/postgresql/PGProperty;
    1656: aastore
    1657: dup
    1658: bipush        18
    1660: getstatic     #403                // Field STRING_TYPE:Lorg/postgresql/PGProperty;
    1663: aastore
    1664: dup
    1665: bipush        19
    1667: getstatic     #411                // Field UNKNOWN_LENGTH:Lorg/postgresql/PGProperty;
    1670: aastore
    1671: dup
    1672: bipush        20
    1674: getstatic     #418                // Field LOG_UNCLOSED_CONNECTIONS:Lorg/postgresql/PGProperty;
    1677: aastore
    1678: dup
    1679: bipush        21
    1681: getstatic     #425                // Field DISABLE_COLUMN_SANITISER:Lorg/postgresql/PGProperty;
    1684: aastore
    1685: dup
    1686: bipush        22
    1688: getstatic     #432                // Field SSL:Lorg/postgresql/PGProperty;
    1691: aastore
    1692: dup
    1693: bipush        23
    1695: getstatic     #447                // Field SSL_MODE:Lorg/postgresql/PGProperty;
    1698: aastore
    1699: dup
    1700: bipush        24
    1702: getstatic     #454                // Field SSL_FACTORY:Lorg/postgresql/PGProperty;
    1705: aastore
    1706: dup
    1707: bipush        25
    1709: getstatic     #461                // Field SSL_FACTORY_ARG:Lorg/postgresql/PGProperty;
    1712: aastore
    1713: dup
    1714: bipush        26
    1716: getstatic     #468                // Field SSL_HOSTNAME_VERIFIER:Lorg/postgresql/PGProperty;
    1719: aastore
    1720: dup
    1721: bipush        27
    1723: getstatic     #475                // Field SSL_CERT:Lorg/postgresql/PGProperty;
    1726: aastore
    1727: dup
    1728: bipush        28
    1730: getstatic     #482                // Field SSL_KEY:Lorg/postgresql/PGProperty;
    1733: aastore
    1734: dup
    1735: bipush        29
    1737: getstatic     #489                // Field SSL_ROOT_CERT:Lorg/postgresql/PGProperty;
    1740: aastore
    1741: dup
    1742: bipush        30
    1744: getstatic     #496                // Field SSL_PASSWORD:Lorg/postgresql/PGProperty;
    1747: aastore
    1748: dup
    1749: bipush        31
    1751: getstatic     #503                // Field SSL_PASSWORD_CALLBACK:Lorg/postgresql/PGProperty;
    1754: aastore
    1755: dup
    1756: bipush        32
    1758: getstatic     #510                // Field TCP_KEEP_ALIVE:Lorg/postgresql/PGProperty;
    1761: aastore
    1762: dup
    1763: bipush        33
    1765: getstatic     #517                // Field LOGIN_TIMEOUT:Lorg/postgresql/PGProperty;
    1768: aastore
    1769: dup
    1770: bipush        34
    1772: getstatic     #526                // Field CONNECT_TIMEOUT:Lorg/postgresql/PGProperty;
    1775: aastore
    1776: dup
    1777: bipush        35
    1779: getstatic     #533                // Field SOCKET_TIMEOUT:Lorg/postgresql/PGProperty;
    1782: aastore
    1783: dup
    1784: bipush        36
    1786: getstatic     #540                // Field CANCEL_SIGNAL_TIMEOUT:Lorg/postgresql/PGProperty;
    1789: aastore
    1790: dup
    1791: bipush        37
    1793: getstatic     #547                // Field SOCKET_FACTORY:Lorg/postgresql/PGProperty;
    1796: aastore
    1797: dup
    1798: bipush        38
    1800: getstatic     #554                // Field SOCKET_FACTORY_ARG:Lorg/postgresql/PGProperty;
    1803: aastore
    1804: dup
    1805: bipush        39
    1807: getstatic     #563                // Field RECEIVE_BUFFER_SIZE:Lorg/postgresql/PGProperty;
    1810: aastore
    1811: dup
    1812: bipush        40
    1814: getstatic     #570                // Field SEND_BUFFER_SIZE:Lorg/postgresql/PGProperty;
    1817: aastore
    1818: dup
    1819: bipush        41
    1821: getstatic     #577                // Field ASSUME_MIN_SERVER_VERSION:Lorg/postgresql/PGProperty;
    1824: aastore
    1825: dup
    1826: bipush        42
    1828: getstatic     #586                // Field APPLICATION_NAME:Lorg/postgresql/PGProperty;
    1831: aastore
    1832: dup
    1833: bipush        43
    1835: getstatic     #593                // Field JAAS_LOGIN:Lorg/postgresql/PGProperty;
    1838: aastore
    1839: dup
    1840: bipush        44
    1842: getstatic     #600                // Field JAAS_APPLICATION_NAME:Lorg/postgresql/PGProperty;
    1845: aastore
    1846: dup
    1847: bipush        45
    1849: getstatic     #607                // Field KERBEROS_SERVER_NAME:Lorg/postgresql/PGProperty;
    1852: aastore
    1853: dup
    1854: bipush        46
    1856: getstatic     #614                // Field USE_SPNEGO:Lorg/postgresql/PGProperty;
    1859: aastore
    1860: dup
    1861: bipush        47
    1863: getstatic     #627                // Field GSS_LIB:Lorg/postgresql/PGProperty;
    1866: aastore
    1867: dup
    1868: bipush        48
    1870: getstatic     #636                // Field SSPI_SERVICE_CLASS:Lorg/postgresql/PGProperty;
    1873: aastore
    1874: dup
    1875: bipush        49
    1877: getstatic     #643                // Field ALLOW_ENCODING_CHANGES:Lorg/postgresql/PGProperty;
    1880: aastore
    1881: dup
    1882: bipush        50
    1884: getstatic     #650                // Field CURRENT_SCHEMA:Lorg/postgresql/PGProperty;
    1887: aastore
    1888: dup
    1889: bipush        51
    1891: getstatic     #669                // Field TARGET_SERVER_TYPE:Lorg/postgresql/PGProperty;
    1894: aastore
    1895: dup
    1896: bipush        52
    1898: getstatic     #676                // Field LOAD_BALANCE_HOSTS:Lorg/postgresql/PGProperty;
    1901: aastore
    1902: dup
    1903: bipush        53
    1905: getstatic     #683                // Field HOST_RECHECK_SECONDS:Lorg/postgresql/PGProperty;
    1908: aastore
    1909: dup
    1910: bipush        54
    1912: getstatic     #698                // Field PREFER_QUERY_MODE:Lorg/postgresql/PGProperty;
    1915: aastore
    1916: dup
    1917: bipush        55
    1919: getstatic     #711                // Field AUTOSAVE:Lorg/postgresql/PGProperty;
    1922: aastore
    1923: dup
    1924: bipush        56
    1926: getstatic     #718                // Field REWRITE_BATCHED_INSERTS:Lorg/postgresql/PGProperty;
    1929: aastore
    1930: dup
    1931: bipush        57
    1933: getstatic     #725                // Field REPLICATION:Lorg/postgresql/PGProperty;
    1936: aastore
    1937: putstatic     #79                 // Field $VALUES:[Lorg/postgresql/PGProperty;
    1940: return
}
