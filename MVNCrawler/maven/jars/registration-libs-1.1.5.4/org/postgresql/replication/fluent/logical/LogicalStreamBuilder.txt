Compiled from "LogicalStreamBuilder.java"
public class org.postgresql.replication.fluent.logical.LogicalStreamBuilder extends org.postgresql.replication.fluent.AbstractStreamBuilder<org.postgresql.replication.fluent.logical.ChainedLogicalStreamBuilder> implements org.postgresql.replication.fluent.logical.ChainedLogicalStreamBuilder, org.postgresql.replication.fluent.logical.LogicalReplicationOptions {
  private final java.util.Properties slotOptions;

  private org.postgresql.replication.fluent.logical.StartLogicalReplicationCallback startCallback;

  public org.postgresql.replication.fluent.logical.LogicalStreamBuilder(org.postgresql.replication.fluent.logical.StartLogicalReplicationCallback);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method org/postgresql/replication/fluent/AbstractStreamBuilder."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #21                 // Field startCallback:Lorg/postgresql/replication/fluent/logical/StartLogicalReplicationCallback;
       9: aload_0
      10: new           #23                 // class java/util/Properties
      13: dup
      14: invokespecial #24                 // Method java/util/Properties."<init>":()V
      17: putfield      #26                 // Field slotOptions:Ljava/util/Properties;
      20: return

  protected org.postgresql.replication.fluent.logical.ChainedLogicalStreamBuilder self();
    Code:
       0: aload_0
       1: areturn

  public org.postgresql.replication.PGReplicationStream start() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #21                 // Field startCallback:Lorg/postgresql/replication/fluent/logical/StartLogicalReplicationCallback;
       4: aload_0
       5: invokeinterface #39,  2           // InterfaceMethod org/postgresql/replication/fluent/logical/StartLogicalReplicationCallback.start:(Lorg/postgresql/replication/fluent/logical/LogicalReplicationOptions;)Lorg/postgresql/replication/PGReplicationStream;
      10: areturn

  public java.lang.String getSlotName();
    Code:
       0: aload_0
       1: getfield      #45                 // Field slotName:Ljava/lang/String;
       4: areturn

  public org.postgresql.replication.fluent.logical.ChainedLogicalStreamBuilder withStartPosition(org.postgresql.replication.LogSequenceNumber);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field startPosition:Lorg/postgresql/replication/LogSequenceNumber;
       5: aload_0
       6: areturn

  public org.postgresql.replication.fluent.logical.ChainedLogicalStreamBuilder withSlotOption(java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #26                 // Field slotOptions:Ljava/util/Properties;
       4: aload_1
       5: iload_2
       6: invokestatic  #60                 // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
       9: invokevirtual #64                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      12: pop
      13: aload_0
      14: areturn

  public org.postgresql.replication.fluent.logical.ChainedLogicalStreamBuilder withSlotOption(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #26                 // Field slotOptions:Ljava/util/Properties;
       4: aload_1
       5: iload_2
       6: invokestatic  #71                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
       9: invokevirtual #64                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      12: pop
      13: aload_0
      14: areturn

  public org.postgresql.replication.fluent.logical.ChainedLogicalStreamBuilder withSlotOption(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #26                 // Field slotOptions:Ljava/util/Properties;
       4: aload_1
       5: aload_2
       6: invokevirtual #64                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: areturn

  public org.postgresql.replication.fluent.logical.ChainedLogicalStreamBuilder withSlotOptions(java.util.Properties);
    Code:
       0: aload_1
       1: invokevirtual #79                 // Method java/util/Properties.stringPropertyNames:()Ljava/util/Set;
       4: invokeinterface #85,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #91,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          46
      19: aload_2
      20: invokeinterface #95,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #56                 // class java/lang/String
      28: astore_3
      29: aload_0
      30: getfield      #26                 // Field slotOptions:Ljava/util/Properties;
      33: aload_3
      34: aload_1
      35: aload_3
      36: invokevirtual #99                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      39: invokevirtual #64                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      42: pop
      43: goto          10
      46: aload_0
      47: areturn

  public org.postgresql.replication.LogSequenceNumber getStartLSNPosition();
    Code:
       0: aload_0
       1: getfield      #51                 // Field startPosition:Lorg/postgresql/replication/LogSequenceNumber;
       4: areturn

  public java.util.Properties getSlotOptions();
    Code:
       0: aload_0
       1: getfield      #26                 // Field slotOptions:Ljava/util/Properties;
       4: areturn

  public int getStatusInterval();
    Code:
       0: aload_0
       1: getfield      #110                // Field statusIntervalMs:I
       4: ireturn

  public org.postgresql.replication.fluent.ChainedCommonStreamBuilder withStartPosition(org.postgresql.replication.LogSequenceNumber);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #113                // Method withStartPosition:(Lorg/postgresql/replication/LogSequenceNumber;)Lorg/postgresql/replication/fluent/logical/ChainedLogicalStreamBuilder;
       5: areturn

  protected org.postgresql.replication.fluent.ChainedCommonStreamBuilder self();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method self:()Lorg/postgresql/replication/fluent/logical/ChainedLogicalStreamBuilder;
       4: areturn
}
