Compiled from "StandardMatchingStrategy.java"
class org.modelmapper.convention.StandardMatchingStrategy$Matcher extends org.modelmapper.convention.InexactMatcher {
  org.modelmapper.convention.StandardMatchingStrategy$Matcher(org.modelmapper.spi.PropertyNameInfo);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method org/modelmapper/convention/InexactMatcher."<init>":(Lorg/modelmapper/spi/PropertyNameInfo;)V
       5: return

  boolean match();
    Code:
       0: new           #23                 // class java/util/HashSet
       3: dup
       4: invokespecial #26                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #28                 // Field propertyNameInfo:Lorg/modelmapper/spi/PropertyNameInfo;
      12: invokeinterface #34,  1           // InterfaceMethod org/modelmapper/spi/PropertyNameInfo.getDestinationPropertyTokens:()Ljava/util/List;
      17: invokeinterface #40,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          136
      32: aload_2
      33: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #53                 // class org/modelmapper/spi/Tokens
      41: astore_3
      42: iconst_0
      43: istore        4
      45: iload         4
      47: aload_3
      48: invokevirtual #57                 // Method org/modelmapper/spi/Tokens.size:()I
      51: if_icmpge     133
      54: aload_0
      55: aload_3
      56: iload         4
      58: invokevirtual #61                 // Method matchSourcePropertyName:(Lorg/modelmapper/spi/Tokens;I)Lorg/modelmapper/convention/InexactMatcher$DestTokensMatcher;
      61: astore        5
      63: aload         5
      65: invokevirtual #63                 // Method org/modelmapper/convention/InexactMatcher$DestTokensMatcher.match:()Z
      68: ifeq          96
      71: iload         4
      73: aload         5
      75: invokevirtual #66                 // Method org/modelmapper/convention/InexactMatcher$DestTokensMatcher.maxMatchTokens:()I
      78: iadd
      79: istore        4
      81: aload_1
      82: aload         5
      84: invokevirtual #70                 // Method org/modelmapper/convention/InexactMatcher$DestTokensMatcher.matchSources:()Ljava/util/Collection;
      87: invokeinterface #74,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      92: pop
      93: goto          130
      96: aload_0
      97: aload_3
      98: iload         4
     100: invokevirtual #78                 // Method org/modelmapper/spi/Tokens.token:(I)Ljava/lang/String;
     103: invokevirtual #82                 // Method matchSourcePropertyType:(Ljava/lang/String;)Z
     106: ifne          122
     109: aload_0
     110: aload_3
     111: iload         4
     113: invokevirtual #78                 // Method org/modelmapper/spi/Tokens.token:(I)Ljava/lang/String;
     116: invokevirtual #85                 // Method matchSourceClass:(Ljava/lang/String;)Z
     119: ifeq          128
     122: iinc          4, 1
     125: goto          130
     128: iconst_0
     129: ireturn
     130: goto          45
     133: goto          23
     136: aload_1
     137: invokeinterface #86,  1           // InterfaceMethod java/util/Set.size:()I
     142: aload_0
     143: getfield      #90                 // Field sourceTokens:Ljava/util/List;
     146: invokeinterface #91,  1           // InterfaceMethod java/util/List.size:()I
     151: if_icmpne     158
     154: iconst_1
     155: goto          159
     158: iconst_0
     159: ireturn
}
