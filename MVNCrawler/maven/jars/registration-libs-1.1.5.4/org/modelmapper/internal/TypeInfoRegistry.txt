Compiled from "TypeInfoRegistry.java"
class org.modelmapper.internal.TypeInfoRegistry {
  private static final java.util.Map<org.modelmapper.internal.TypeInfoRegistry$TypeInfoKey, org.modelmapper.internal.TypeInfoImpl<?>> cache;

  org.modelmapper.internal.TypeInfoRegistry();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Object."<init>":()V
       4: return

  static <T> org.modelmapper.internal.TypeInfoImpl<T> typeInfoFor(org.modelmapper.internal.Accessor, org.modelmapper.internal.InheritingConfiguration);
    Code:
       0: aconst_null
       1: aload_0
       2: invokeinterface #25,  1           // InterfaceMethod org/modelmapper/internal/Accessor.getType:()Ljava/lang/Class;
       7: aload_1
       8: invokestatic  #28                 // Method typeInfoFor:(Ljava/lang/Object;Ljava/lang/Class;Lorg/modelmapper/internal/InheritingConfiguration;)Lorg/modelmapper/internal/TypeInfoImpl;
      11: areturn

  static <T> org.modelmapper.internal.TypeInfoImpl<T> typeInfoFor(T, java.lang.Class<T>, org.modelmapper.internal.InheritingConfiguration);
    Code:
       0: aload_2
       1: getfield      #38                 // Field org/modelmapper/internal/InheritingConfiguration.valueAccessStore:Lorg/modelmapper/internal/valueaccess/ValueAccessStore;
       4: aload_1
       5: invokevirtual #44                 // Method org/modelmapper/internal/valueaccess/ValueAccessStore.getFirstSupportedReader:(Ljava/lang/Class;)Lorg/modelmapper/spi/ValueReader;
       8: ifnull        22
      11: new           #46                 // class org/modelmapper/internal/TypeInfoImpl
      14: dup
      15: aload_0
      16: aload_1
      17: aload_2
      18: invokespecial #49                 // Method org/modelmapper/internal/TypeInfoImpl."<init>":(Ljava/lang/Object;Ljava/lang/Class;Lorg/modelmapper/internal/InheritingConfiguration;)V
      21: areturn
      22: aload_1
      23: aload_2
      24: invokestatic  #52                 // Method typeInfoFor:(Ljava/lang/Class;Lorg/modelmapper/internal/InheritingConfiguration;)Lorg/modelmapper/internal/TypeInfoImpl;
      27: areturn

  static <T> org.modelmapper.internal.TypeInfoImpl<T> typeInfoFor(java.lang.Class<T>, org.modelmapper.internal.InheritingConfiguration);
    Code:
       0: new           #7                  // class org/modelmapper/internal/TypeInfoRegistry$TypeInfoKey
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #61                 // Method org/modelmapper/internal/TypeInfoRegistry$TypeInfoKey."<init>":(Ljava/lang/Class;Lorg/modelmapper/config/Configuration;)V
       9: astore_2
      10: getstatic     #63                 // Field cache:Ljava/util/Map;
      13: aload_2
      14: invokeinterface #69,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #46                 // class org/modelmapper/internal/TypeInfoImpl
      22: astore_3
      23: aload_3
      24: ifnonnull     87
      27: getstatic     #63                 // Field cache:Ljava/util/Map;
      30: dup
      31: astore        4
      33: monitorenter
      34: getstatic     #63                 // Field cache:Ljava/util/Map;
      37: aload_2
      38: invokeinterface #69,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #46                 // class org/modelmapper/internal/TypeInfoImpl
      46: astore_3
      47: aload_3
      48: ifnonnull     73
      51: new           #46                 // class org/modelmapper/internal/TypeInfoImpl
      54: dup
      55: aconst_null
      56: aload_0
      57: aload_1
      58: invokespecial #49                 // Method org/modelmapper/internal/TypeInfoImpl."<init>":(Ljava/lang/Object;Ljava/lang/Class;Lorg/modelmapper/internal/InheritingConfiguration;)V
      61: astore_3
      62: getstatic     #63                 // Field cache:Ljava/util/Map;
      65: aload_2
      66: aload_3
      67: invokeinterface #73,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: pop
      73: aload         4
      75: monitorexit
      76: goto          87
      79: astore        5
      81: aload         4
      83: monitorexit
      84: aload         5
      86: athrow
      87: aload_3
      88: areturn
    Exception table:
       from    to  target type
          34    76    79   any
          79    84    79   any

  static {};
    Code:
       0: new           #83                 // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #84                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: putstatic     #63                 // Field cache:Ljava/util/Map;
      10: return
}
