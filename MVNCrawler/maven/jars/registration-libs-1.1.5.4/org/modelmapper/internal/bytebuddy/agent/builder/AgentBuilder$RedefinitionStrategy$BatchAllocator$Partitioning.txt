Compiled from "AgentBuilder.java"
public class org.modelmapper.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$Partitioning implements org.modelmapper.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator {
  private final int parts;

  protected org.modelmapper.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$Partitioning(int);
    Code:
       0: aload_0
       1: invokespecial #27                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #29                 // Field parts:I
       9: return

  public static org.modelmapper.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator of(int);
    Code:
       0: iload_0
       1: iconst_1
       2: if_icmpge     32
       5: new           #35                 // class java/lang/IllegalArgumentException
       8: dup
       9: new           #37                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #40                 // String A batch size must be positive:
      18: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: iload_0
      22: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      25: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokespecial #54                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: new           #2                  // class org/modelmapper/internal/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator$Partitioning
      35: dup
      36: iload_0
      37: invokespecial #56                 // Method "<init>":(I)V
      40: areturn

  public java.lang.Iterable<? extends java.util.List<java.lang.Class<?>>> batch(java.util.List<java.lang.Class<?>>);
    Code:
       0: aload_1
       1: invokeinterface #64,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       6: ifeq          13
       9: invokestatic  #70                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      12: areturn
      13: new           #72                 // class java/util/ArrayList
      16: dup
      17: invokespecial #73                 // Method java/util/ArrayList."<init>":()V
      20: astore_2
      21: aload_1
      22: invokeinterface #77,  1           // InterfaceMethod java/util/List.size:()I
      27: aload_0
      28: getfield      #29                 // Field parts:I
      31: idiv
      32: istore_3
      33: aload_1
      34: invokeinterface #77,  1           // InterfaceMethod java/util/List.size:()I
      39: aload_0
      40: getfield      #29                 // Field parts:I
      43: irem
      44: istore        4
      46: iload         4
      48: istore        5
      50: iload         5
      52: aload_1
      53: invokeinterface #77,  1           // InterfaceMethod java/util/List.size:()I
      58: if_icmpge     96
      61: aload_2
      62: new           #72                 // class java/util/ArrayList
      65: dup
      66: aload_1
      67: iload         5
      69: iload         5
      71: iload_3
      72: iadd
      73: invokeinterface #81,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      78: invokespecial #84                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      81: invokeinterface #88,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      86: pop
      87: iload         5
      89: iload_3
      90: iadd
      91: istore        5
      93: goto          50
      96: aload_2
      97: invokeinterface #64,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     102: ifeq          110
     105: aload_1
     106: invokestatic  #92                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     109: areturn
     110: aload_2
     111: iconst_0
     112: invokeinterface #96,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     117: checkcast     #60                 // class java/util/List
     120: iconst_0
     121: aload_1
     122: iconst_0
     123: iload         4
     125: invokeinterface #81,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
     130: invokeinterface #100,  3          // InterfaceMethod java/util/List.addAll:(ILjava/util/Collection;)Z
     135: pop
     136: aload_2
     137: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #112                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #112                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_0
      27: getfield      #29                 // Field parts:I
      30: aload_1
      31: checkcast     #2                  // class org/modelmapper/internal/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator$Partitioning
      34: getfield      #29                 // Field parts:I
      37: if_icmpeq     42
      40: iconst_0
      41: ireturn
      42: iconst_1
      43: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: bipush        31
       4: imul
       5: aload_0
       6: getfield      #29                 // Field parts:I
       9: iadd
      10: ireturn
}
