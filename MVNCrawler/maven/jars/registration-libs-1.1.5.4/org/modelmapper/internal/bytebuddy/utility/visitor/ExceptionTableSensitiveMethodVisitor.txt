Compiled from "ExceptionTableSensitiveMethodVisitor.java"
public abstract class org.modelmapper.internal.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor extends org.modelmapper.internal.asm.MethodVisitor {
  private boolean trigger;

  protected org.modelmapper.internal.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor(int, org.modelmapper.internal.asm.MethodVisitor);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #11                 // Method org/modelmapper/internal/asm/MethodVisitor."<init>":(ILorg/modelmapper/internal/asm/MethodVisitor;)V
       6: aload_0
       7: iconst_1
       8: putfield      #13                 // Field trigger:Z
      11: return

  private void considerEndOfExceptionTable();
    Code:
       0: aload_0
       1: getfield      #13                 // Field trigger:Z
       4: ifeq          16
       7: aload_0
       8: iconst_0
       9: putfield      #13                 // Field trigger:Z
      12: aload_0
      13: invokevirtual #24                 // Method onAfterExceptionTable:()V
      16: return

  protected abstract void onAfterExceptionTable();

  public final void visitLabel(org.modelmapper.internal.asm.Label);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method considerEndOfExceptionTable:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #31                 // Method onVisitLabel:(Lorg/modelmapper/internal/asm/Label;)V
       9: return

  protected void onVisitLabel(org.modelmapper.internal.asm.Label);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #35                 // Method org/modelmapper/internal/asm/MethodVisitor.visitLabel:(Lorg/modelmapper/internal/asm/Label;)V
       5: return

  public final void visitIntInsn(int, int);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method considerEndOfExceptionTable:()V
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokevirtual #40                 // Method onVisitIntInsn:(II)V
      10: return

  protected void onVisitIntInsn(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #44                 // Method org/modelmapper/internal/asm/MethodVisitor.visitIntInsn:(II)V
       6: return

  public final void visitVarInsn(int, int);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method considerEndOfExceptionTable:()V
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokevirtual #48                 // Method onVisitVarInsn:(II)V
      10: return

  protected void onVisitVarInsn(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #51                 // Method org/modelmapper/internal/asm/MethodVisitor.visitVarInsn:(II)V
       6: return

  public final void visitTypeInsn(int, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method considerEndOfExceptionTable:()V
       4: aload_0
       5: iload_1
       6: aload_2
       7: invokevirtual #57                 // Method onVisitTypeInsn:(ILjava/lang/String;)V
      10: return

  protected void onVisitTypeInsn(int, java.lang.String);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #61                 // Method org/modelmapper/internal/asm/MethodVisitor.visitTypeInsn:(ILjava/lang/String;)V
       6: return

  public final void visitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method considerEndOfExceptionTable:()V
       4: aload_0
       5: iload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: invokevirtual #66                 // Method onVisitFieldInsn:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      13: return

  protected void onVisitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #71                 // Method org/modelmapper/internal/asm/MethodVisitor.visitFieldInsn:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
       9: return

  public final void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method considerEndOfExceptionTable:()V
       4: aload_0
       5: iload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: invokevirtual #76                 // Method onVisitMethodInsn:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      13: return

  protected void onVisitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method considerEndOfExceptionTable:()V
       4: aload_0
       5: iload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: invokespecial #79                 // Method org/modelmapper/internal/asm/MethodVisitor.visitMethodInsn:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      13: return

  public final void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method considerEndOfExceptionTable:()V
       4: aload_0
       5: iload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: iload         5
      12: invokevirtual #82                 // Method onVisitMethodInsn:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
      15: return

  protected void onVisitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: iload         5
       8: invokespecial #85                 // Method org/modelmapper/internal/asm/MethodVisitor.visitMethodInsn:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
      11: return

  public final void visitInvokeDynamicInsn(java.lang.String, java.lang.String, org.modelmapper.internal.asm.Handle, java.lang.Object...);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method considerEndOfExceptionTable:()V
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: invokevirtual #90                 // Method onVisitInvokeDynamicInsn:(Ljava/lang/String;Ljava/lang/String;Lorg/modelmapper/internal/asm/Handle;[Ljava/lang/Object;)V
      13: return

  protected void onVisitInvokeDynamicInsn(java.lang.String, java.lang.String, org.modelmapper.internal.asm.Handle, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #96                 // Method org/modelmapper/internal/asm/MethodVisitor.visitInvokeDynamicInsn:(Ljava/lang/String;Ljava/lang/String;Lorg/modelmapper/internal/asm/Handle;[Ljava/lang/Object;)V
       9: return

  public final void visitJumpInsn(int, org.modelmapper.internal.asm.Label);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method considerEndOfExceptionTable:()V
       4: aload_0
       5: iload_1
       6: aload_2
       7: invokevirtual #103                // Method onVisitJumpInsn:(ILorg/modelmapper/internal/asm/Label;)V
      10: return

  protected void onVisitJumpInsn(int, org.modelmapper.internal.asm.Label);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #105                // Method org/modelmapper/internal/asm/MethodVisitor.visitJumpInsn:(ILorg/modelmapper/internal/asm/Label;)V
       6: return

  public final void visitLdcInsn(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method considerEndOfExceptionTable:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #110                // Method onVisitLdcInsn:(Ljava/lang/Object;)V
       9: return

  protected void onVisitLdcInsn(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #114                // Method org/modelmapper/internal/asm/MethodVisitor.visitLdcInsn:(Ljava/lang/Object;)V
       5: return

  public final void visitIincInsn(int, int);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method considerEndOfExceptionTable:()V
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokevirtual #119                // Method onVisitIincInsn:(II)V
      10: return

  protected void onVisitIincInsn(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #122                // Method org/modelmapper/internal/asm/MethodVisitor.visitIincInsn:(II)V
       6: return

  public final void visitTableSwitchInsn(int, int, org.modelmapper.internal.asm.Label, org.modelmapper.internal.asm.Label...);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method considerEndOfExceptionTable:()V
       4: aload_0
       5: iload_1
       6: iload_2
       7: aload_3
       8: aload         4
      10: invokevirtual #127                // Method onVisitTableSwitchInsn:(IILorg/modelmapper/internal/asm/Label;[Lorg/modelmapper/internal/asm/Label;)V
      13: return

  protected void onVisitTableSwitchInsn(int, int, org.modelmapper.internal.asm.Label, org.modelmapper.internal.asm.Label...);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: invokespecial #134                // Method org/modelmapper/internal/asm/MethodVisitor.visitTableSwitchInsn:(IILorg/modelmapper/internal/asm/Label;[Lorg/modelmapper/internal/asm/Label;)V
       9: return

  public final void visitLookupSwitchInsn(org.modelmapper.internal.asm.Label, int[], org.modelmapper.internal.asm.Label[]);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method considerEndOfExceptionTable:()V
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokevirtual #140                // Method onVisitLookupSwitchInsn:(Lorg/modelmapper/internal/asm/Label;[I[Lorg/modelmapper/internal/asm/Label;)V
      11: return

  protected void onVisitLookupSwitchInsn(org.modelmapper.internal.asm.Label, int[], org.modelmapper.internal.asm.Label[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #144                // Method org/modelmapper/internal/asm/MethodVisitor.visitLookupSwitchInsn:(Lorg/modelmapper/internal/asm/Label;[I[Lorg/modelmapper/internal/asm/Label;)V
       7: return

  public final void visitMultiANewArrayInsn(java.lang.String, int);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method considerEndOfExceptionTable:()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: invokevirtual #150                // Method onVisitMultiANewArrayInsn:(Ljava/lang/String;I)V
      10: return

  protected void onVisitMultiANewArrayInsn(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #153                // Method org/modelmapper/internal/asm/MethodVisitor.visitMultiANewArrayInsn:(Ljava/lang/String;I)V
       6: return

  public final void visitInsn(int);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method considerEndOfExceptionTable:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #159                // Method onVisitInsn:(I)V
       9: return

  protected void onVisitInsn(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #161                // Method org/modelmapper/internal/asm/MethodVisitor.visitInsn:(I)V
       5: return
}
