Compiled from "ClassLoadingStrategy.java"
public class org.modelmapper.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy$UsingLookup implements org.modelmapper.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy<java.lang.ClassLoader> {
  private final org.modelmapper.internal.bytebuddy.dynamic.loading.ClassInjector classInjector;

  protected org.modelmapper.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy$UsingLookup(org.modelmapper.internal.bytebuddy.dynamic.loading.ClassInjector);
    Code:
       0: aload_0
       1: invokespecial #26                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #28                 // Field classInjector:Lorg/modelmapper/internal/bytebuddy/dynamic/loading/ClassInjector;
       9: return

  public static org.modelmapper.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy<java.lang.ClassLoader> of(java.lang.Object);
    Code:
       0: new           #2                  // class org/modelmapper/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy$UsingLookup
       3: dup
       4: aload_0
       5: invokestatic  #35                 // Method org/modelmapper/internal/bytebuddy/dynamic/loading/ClassInjector$UsingLookup.of:(Ljava/lang/Object;)Lorg/modelmapper/internal/bytebuddy/dynamic/loading/ClassInjector$UsingLookup;
       8: invokespecial #37                 // Method "<init>":(Lorg/modelmapper/internal/bytebuddy/dynamic/loading/ClassInjector;)V
      11: areturn

  public java.util.Map<org.modelmapper.internal.bytebuddy.description.type.TypeDescription, java.lang.Class<?>> load(java.lang.ClassLoader, java.util.Map<org.modelmapper.internal.bytebuddy.description.type.TypeDescription, byte[]>);
    Code:
       0: aload_0
       1: getfield      #28                 // Field classInjector:Lorg/modelmapper/internal/bytebuddy/dynamic/loading/ClassInjector;
       4: aload_2
       5: invokeinterface #45,  2           // InterfaceMethod org/modelmapper/internal/bytebuddy/dynamic/loading/ClassInjector.inject:(Ljava/util/Map;)Ljava/util/Map;
      10: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #56                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #56                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_0
      27: getfield      #28                 // Field classInjector:Lorg/modelmapper/internal/bytebuddy/dynamic/loading/ClassInjector;
      30: aload_1
      31: checkcast     #2                  // class org/modelmapper/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy$UsingLookup
      34: getfield      #28                 // Field classInjector:Lorg/modelmapper/internal/bytebuddy/dynamic/loading/ClassInjector;
      37: invokeinterface #58,  2           // InterfaceMethod org/modelmapper/internal/bytebuddy/dynamic/loading/ClassInjector.equals:(Ljava/lang/Object;)Z
      42: ifne          47
      45: iconst_0
      46: ireturn
      47: iconst_1
      48: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: bipush        31
       4: imul
       5: aload_0
       6: getfield      #28                 // Field classInjector:Lorg/modelmapper/internal/bytebuddy/dynamic/loading/ClassInjector;
       9: invokeinterface #62,  1           // InterfaceMethod org/modelmapper/internal/bytebuddy/dynamic/loading/ClassInjector.hashCode:()I
      14: iadd
      15: ireturn
}
