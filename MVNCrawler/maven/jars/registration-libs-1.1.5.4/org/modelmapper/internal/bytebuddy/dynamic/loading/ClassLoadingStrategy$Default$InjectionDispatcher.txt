Compiled from "ClassLoadingStrategy.java"
public class org.modelmapper.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy$Default$InjectionDispatcher implements org.modelmapper.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy$Configurable<java.lang.ClassLoader> {
  private final java.security.ProtectionDomain protectionDomain;

  private final org.modelmapper.internal.bytebuddy.dynamic.loading.PackageDefinitionStrategy packageDefinitionStrategy;

  private final boolean forbidExisting;

  protected org.modelmapper.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy$Default$InjectionDispatcher();
    Code:
       0: aload_0
       1: getstatic     #54                 // Field NO_PROTECTION_DOMAIN:Ljava/security/ProtectionDomain;
       4: getstatic     #58                 // Field org/modelmapper/internal/bytebuddy/dynamic/loading/PackageDefinitionStrategy$NoOp.INSTANCE:Lorg/modelmapper/internal/bytebuddy/dynamic/loading/PackageDefinitionStrategy$NoOp;
       7: iconst_1
       8: invokespecial #61                 // Method "<init>":(Ljava/security/ProtectionDomain;Lorg/modelmapper/internal/bytebuddy/dynamic/loading/PackageDefinitionStrategy;Z)V
      11: return

  private org.modelmapper.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy$Default$InjectionDispatcher(java.security.ProtectionDomain, org.modelmapper.internal.bytebuddy.dynamic.loading.PackageDefinitionStrategy, boolean);
    Code:
       0: aload_0
       1: invokespecial #65                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #67                 // Field protectionDomain:Ljava/security/ProtectionDomain;
       9: aload_0
      10: aload_2
      11: putfield      #69                 // Field packageDefinitionStrategy:Lorg/modelmapper/internal/bytebuddy/dynamic/loading/PackageDefinitionStrategy;
      14: aload_0
      15: iload_3
      16: putfield      #71                 // Field forbidExisting:Z
      19: return

  public java.util.Map<org.modelmapper.internal.bytebuddy.description.type.TypeDescription, java.lang.Class<?>> load(java.lang.ClassLoader, java.util.Map<org.modelmapper.internal.bytebuddy.description.type.TypeDescription, byte[]>);
    Code:
       0: new           #31                 // class org/modelmapper/internal/bytebuddy/dynamic/loading/ClassInjector$UsingReflection
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #67                 // Field protectionDomain:Ljava/security/ProtectionDomain;
       9: aload_0
      10: getfield      #69                 // Field packageDefinitionStrategy:Lorg/modelmapper/internal/bytebuddy/dynamic/loading/PackageDefinitionStrategy;
      13: aload_0
      14: getfield      #71                 // Field forbidExisting:Z
      17: invokespecial #76                 // Method org/modelmapper/internal/bytebuddy/dynamic/loading/ClassInjector$UsingReflection."<init>":(Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;Lorg/modelmapper/internal/bytebuddy/dynamic/loading/PackageDefinitionStrategy;Z)V
      20: aload_2
      21: invokevirtual #80                 // Method org/modelmapper/internal/bytebuddy/dynamic/loading/ClassInjector$UsingReflection.inject:(Ljava/util/Map;)Ljava/util/Map;
      24: areturn

  public org.modelmapper.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy$Configurable<java.lang.ClassLoader> with(java.security.ProtectionDomain);
    Code:
       0: new           #2                  // class org/modelmapper/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy$Default$InjectionDispatcher
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #69                 // Field packageDefinitionStrategy:Lorg/modelmapper/internal/bytebuddy/dynamic/loading/PackageDefinitionStrategy;
       9: aload_0
      10: getfield      #71                 // Field forbidExisting:Z
      13: invokespecial #61                 // Method "<init>":(Ljava/security/ProtectionDomain;Lorg/modelmapper/internal/bytebuddy/dynamic/loading/PackageDefinitionStrategy;Z)V
      16: areturn

  public org.modelmapper.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy$Configurable<java.lang.ClassLoader> with(org.modelmapper.internal.bytebuddy.dynamic.loading.PackageDefinitionStrategy);
    Code:
       0: new           #2                  // class org/modelmapper/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy$Default$InjectionDispatcher
       3: dup
       4: aload_0
       5: getfield      #67                 // Field protectionDomain:Ljava/security/ProtectionDomain;
       8: aload_1
       9: aload_0
      10: getfield      #71                 // Field forbidExisting:Z
      13: invokespecial #61                 // Method "<init>":(Ljava/security/ProtectionDomain;Lorg/modelmapper/internal/bytebuddy/dynamic/loading/PackageDefinitionStrategy;Z)V
      16: areturn

  public org.modelmapper.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy$Configurable<java.lang.ClassLoader> allowExistingTypes();
    Code:
       0: new           #2                  // class org/modelmapper/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy$Default$InjectionDispatcher
       3: dup
       4: aload_0
       5: getfield      #67                 // Field protectionDomain:Ljava/security/ProtectionDomain;
       8: aload_0
       9: getfield      #69                 // Field packageDefinitionStrategy:Lorg/modelmapper/internal/bytebuddy/dynamic/loading/PackageDefinitionStrategy;
      12: iconst_0
      13: invokespecial #61                 // Method "<init>":(Ljava/security/ProtectionDomain;Lorg/modelmapper/internal/bytebuddy/dynamic/loading/PackageDefinitionStrategy;Z)V
      16: areturn

  org.modelmapper.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy$Default$InjectionDispatcher(java.security.ProtectionDomain, org.modelmapper.internal.bytebuddy.dynamic.loading.PackageDefinitionStrategy, boolean, org.modelmapper.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #61                 // Method "<init>":(Ljava/security/ProtectionDomain;Lorg/modelmapper/internal/bytebuddy/dynamic/loading/PackageDefinitionStrategy;Z)V
       7: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #102                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #102                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_0
      27: getfield      #67                 // Field protectionDomain:Ljava/security/ProtectionDomain;
      30: aload_1
      31: checkcast     #2                  // class org/modelmapper/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy$Default$InjectionDispatcher
      34: getfield      #67                 // Field protectionDomain:Ljava/security/ProtectionDomain;
      37: astore_2
      38: astore_3
      39: aload_3
      40: aload_2
      41: ifnull        60
      44: ifnull        63
      47: aload_3
      48: aload_2
      49: invokevirtual #106                // Method java/security/ProtectionDomain.equals:(Ljava/lang/Object;)Z
      52: ifne          57
      55: iconst_0
      56: ireturn
      57: goto          65
      60: ifnull        65
      63: iconst_0
      64: ireturn
      65: aload_0
      66: getfield      #69                 // Field packageDefinitionStrategy:Lorg/modelmapper/internal/bytebuddy/dynamic/loading/PackageDefinitionStrategy;
      69: aload_1
      70: checkcast     #2                  // class org/modelmapper/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy$Default$InjectionDispatcher
      73: getfield      #69                 // Field packageDefinitionStrategy:Lorg/modelmapper/internal/bytebuddy/dynamic/loading/PackageDefinitionStrategy;
      76: invokeinterface #107,  2          // InterfaceMethod org/modelmapper/internal/bytebuddy/dynamic/loading/PackageDefinitionStrategy.equals:(Ljava/lang/Object;)Z
      81: ifne          86
      84: iconst_0
      85: ireturn
      86: aload_0
      87: getfield      #71                 // Field forbidExisting:Z
      90: aload_1
      91: checkcast     #2                  // class org/modelmapper/internal/bytebuddy/dynamic/loading/ClassLoadingStrategy$Default$InjectionDispatcher
      94: getfield      #71                 // Field forbidExisting:Z
      97: if_icmpeq     102
     100: iconst_0
     101: ireturn
     102: iconst_1
     103: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: bipush        31
       4: imul
       5: aload_0
       6: getfield      #67                 // Field protectionDomain:Ljava/security/ProtectionDomain;
       9: astore_1
      10: aload_1
      11: ifnull        19
      14: aload_1
      15: invokevirtual #111                // Method java/security/ProtectionDomain.hashCode:()I
      18: iadd
      19: bipush        31
      21: imul
      22: aload_0
      23: getfield      #69                 // Field packageDefinitionStrategy:Lorg/modelmapper/internal/bytebuddy/dynamic/loading/PackageDefinitionStrategy;
      26: invokeinterface #112,  1          // InterfaceMethod org/modelmapper/internal/bytebuddy/dynamic/loading/PackageDefinitionStrategy.hashCode:()I
      31: iadd
      32: bipush        31
      34: imul
      35: aload_0
      36: getfield      #71                 // Field forbidExisting:Z
      39: iadd
      40: ireturn
}
