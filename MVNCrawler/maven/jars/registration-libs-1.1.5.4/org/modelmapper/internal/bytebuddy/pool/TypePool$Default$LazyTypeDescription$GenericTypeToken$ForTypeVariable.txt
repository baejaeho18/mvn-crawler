Compiled from "TypePool.java"
public class org.modelmapper.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable implements org.modelmapper.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken {
  private final java.lang.String symbol;

  protected org.modelmapper.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #50                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #52                 // Field symbol:Ljava/lang/String;
       9: return

  public org.modelmapper.internal.bytebuddy.description.type.TypeDescription$Generic toGenericType(org.modelmapper.internal.bytebuddy.pool.TypePool, org.modelmapper.internal.bytebuddy.description.TypeVariableSource, java.lang.String, java.util.Map<java.lang.String, java.util.List<org.modelmapper.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$AnnotationToken>>);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #52                 // Field symbol:Ljava/lang/String;
       5: invokeinterface #62,  2           // InterfaceMethod org/modelmapper/internal/bytebuddy/description/TypeVariableSource.findVariable:(Ljava/lang/String;)Lorg/modelmapper/internal/bytebuddy/description/type/TypeDescription$Generic;
      10: astore        5
      12: aload         5
      14: ifnonnull     44
      17: new           #23                 // class org/modelmapper/internal/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$UnresolvedTypeVariable
      20: dup
      21: aload_2
      22: aload_1
      23: aload_0
      24: getfield      #52                 // Field symbol:Ljava/lang/String;
      27: aload         4
      29: aload_3
      30: invokeinterface #68,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #70                 // class java/util/List
      38: invokespecial #73                 // Method org/modelmapper/internal/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$UnresolvedTypeVariable."<init>":(Lorg/modelmapper/internal/bytebuddy/description/TypeVariableSource;Lorg/modelmapper/internal/bytebuddy/pool/TypePool;Ljava/lang/String;Ljava/util/List;)V
      41: goto          65
      44: new           #26                 // class org/modelmapper/internal/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$AnnotatedTypeVariable
      47: dup
      48: aload_1
      49: aload         4
      51: aload_3
      52: invokeinterface #68,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      57: checkcast     #70                 // class java/util/List
      60: aload         5
      62: invokespecial #76                 // Method org/modelmapper/internal/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$AnnotatedTypeVariable."<init>":(Lorg/modelmapper/internal/bytebuddy/pool/TypePool;Ljava/util/List;Lorg/modelmapper/internal/bytebuddy/description/type/TypeDescription$Generic;)V
      65: areturn

  public boolean isPrimaryBound(org.modelmapper.internal.bytebuddy.pool.TypePool);
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.String getTypePathPrefix();
    Code:
       0: new           #92                 // class java/lang/IllegalStateException
       3: dup
       4: new           #94                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #95                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #97                 // String A type variable cannot be the owner of a nested type:
      13: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: invokevirtual #107                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: invokespecial #109                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      26: athrow

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #115                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #115                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_0
      27: getfield      #52                 // Field symbol:Ljava/lang/String;
      30: aload_1
      31: checkcast     #2                  // class org/modelmapper/internal/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable
      34: getfield      #52                 // Field symbol:Ljava/lang/String;
      37: invokevirtual #119                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ifne          45
      43: iconst_0
      44: ireturn
      45: iconst_1
      46: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: bipush        31
       4: imul
       5: aload_0
       6: getfield      #52                 // Field symbol:Ljava/lang/String;
       9: invokevirtual #123                // Method java/lang/String.hashCode:()I
      12: iadd
      13: ireturn
}
