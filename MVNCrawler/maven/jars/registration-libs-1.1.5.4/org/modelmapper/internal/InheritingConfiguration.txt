Compiled from "InheritingConfiguration.java"
public class org.modelmapper.internal.InheritingConfiguration implements org.modelmapper.config.Configuration {
  private final org.modelmapper.config.Configuration parent;

  public final org.modelmapper.internal.TypeMapStore typeMapStore;

  public final org.modelmapper.internal.converter.ConverterStore converterStore;

  public final org.modelmapper.internal.valueaccess.ValueAccessStore valueAccessStore;

  public final org.modelmapper.internal.valuemutate.ValueMutateStore valueMutateStore;

  private org.modelmapper.spi.NameTokenizer destinationNameTokenizer;

  private org.modelmapper.spi.NameTransformer destinationNameTransformer;

  private org.modelmapper.spi.NamingConvention destinationNamingConvention;

  private org.modelmapper.config.Configuration$AccessLevel fieldAccessLevel;

  private org.modelmapper.spi.MatchingStrategy matchingStrategy;

  private org.modelmapper.config.Configuration$AccessLevel methodAccessLevel;

  private org.modelmapper.Provider<?> provider;

  private org.modelmapper.Condition<?, ?> propertyCondition;

  private org.modelmapper.spi.NameTokenizer sourceNameTokenizer;

  private org.modelmapper.spi.NameTransformer sourceNameTransformer;

  private org.modelmapper.spi.NamingConvention sourceNamingConvention;

  private java.lang.Boolean fieldMatchingEnabled;

  private java.lang.Boolean ambiguityIgnored;

  private java.lang.Boolean fullTypeMatchingRequired;

  private java.lang.Boolean implicitMatchingEnabled;

  private java.lang.Boolean skipNullEnabled;

  private java.lang.Boolean useOSGiClassLoaderBridging;

  public org.modelmapper.internal.InheritingConfiguration();
    Code:
       0: aload_0
       1: invokespecial #51                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #53                 // Field parent:Lorg/modelmapper/config/Configuration;
       9: aload_0
      10: new           #55                 // class org/modelmapper/internal/TypeMapStore
      13: dup
      14: aload_0
      15: invokespecial #58                 // Method org/modelmapper/internal/TypeMapStore."<init>":(Lorg/modelmapper/internal/InheritingConfiguration;)V
      18: putfield      #60                 // Field typeMapStore:Lorg/modelmapper/internal/TypeMapStore;
      21: aload_0
      22: new           #62                 // class org/modelmapper/internal/converter/ConverterStore
      25: dup
      26: invokespecial #63                 // Method org/modelmapper/internal/converter/ConverterStore."<init>":()V
      29: putfield      #65                 // Field converterStore:Lorg/modelmapper/internal/converter/ConverterStore;
      32: aload_0
      33: new           #67                 // class org/modelmapper/internal/valueaccess/ValueAccessStore
      36: dup
      37: invokespecial #68                 // Method org/modelmapper/internal/valueaccess/ValueAccessStore."<init>":()V
      40: putfield      #70                 // Field valueAccessStore:Lorg/modelmapper/internal/valueaccess/ValueAccessStore;
      43: aload_0
      44: new           #72                 // class org/modelmapper/internal/valuemutate/ValueMutateStore
      47: dup
      48: invokespecial #73                 // Method org/modelmapper/internal/valuemutate/ValueMutateStore."<init>":()V
      51: putfield      #75                 // Field valueMutateStore:Lorg/modelmapper/internal/valuemutate/ValueMutateStore;
      54: aload_0
      55: getstatic     #80                 // Field org/modelmapper/convention/NameTokenizers.CAMEL_CASE:Lorg/modelmapper/spi/NameTokenizer;
      58: putfield      #82                 // Field sourceNameTokenizer:Lorg/modelmapper/spi/NameTokenizer;
      61: aload_0
      62: getstatic     #80                 // Field org/modelmapper/convention/NameTokenizers.CAMEL_CASE:Lorg/modelmapper/spi/NameTokenizer;
      65: putfield      #84                 // Field destinationNameTokenizer:Lorg/modelmapper/spi/NameTokenizer;
      68: aload_0
      69: getstatic     #89                 // Field org/modelmapper/convention/NamingConventions.JAVABEANS_ACCESSOR:Lorg/modelmapper/spi/NamingConvention;
      72: putfield      #91                 // Field sourceNamingConvention:Lorg/modelmapper/spi/NamingConvention;
      75: aload_0
      76: getstatic     #94                 // Field org/modelmapper/convention/NamingConventions.JAVABEANS_MUTATOR:Lorg/modelmapper/spi/NamingConvention;
      79: putfield      #96                 // Field destinationNamingConvention:Lorg/modelmapper/spi/NamingConvention;
      82: aload_0
      83: getstatic     #100                // Field org/modelmapper/convention/NameTransformers.JAVABEANS_ACCESSOR:Lorg/modelmapper/spi/NameTransformer;
      86: putfield      #102                // Field sourceNameTransformer:Lorg/modelmapper/spi/NameTransformer;
      89: aload_0
      90: getstatic     #104                // Field org/modelmapper/convention/NameTransformers.JAVABEANS_MUTATOR:Lorg/modelmapper/spi/NameTransformer;
      93: putfield      #106                // Field destinationNameTransformer:Lorg/modelmapper/spi/NameTransformer;
      96: aload_0
      97: getstatic     #111                // Field org/modelmapper/convention/MatchingStrategies.STANDARD:Lorg/modelmapper/spi/MatchingStrategy;
     100: putfield      #113                // Field matchingStrategy:Lorg/modelmapper/spi/MatchingStrategy;
     103: aload_0
     104: getstatic     #116                // Field org/modelmapper/config/Configuration$AccessLevel.PUBLIC:Lorg/modelmapper/config/Configuration$AccessLevel;
     107: putfield      #118                // Field fieldAccessLevel:Lorg/modelmapper/config/Configuration$AccessLevel;
     110: aload_0
     111: getstatic     #116                // Field org/modelmapper/config/Configuration$AccessLevel.PUBLIC:Lorg/modelmapper/config/Configuration$AccessLevel;
     114: putfield      #120                // Field methodAccessLevel:Lorg/modelmapper/config/Configuration$AccessLevel;
     117: aload_0
     118: getstatic     #125                // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     121: putfield      #127                // Field fieldMatchingEnabled:Ljava/lang/Boolean;
     124: aload_0
     125: getstatic     #125                // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     128: putfield      #129                // Field ambiguityIgnored:Ljava/lang/Boolean;
     131: aload_0
     132: getstatic     #125                // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     135: putfield      #131                // Field fullTypeMatchingRequired:Ljava/lang/Boolean;
     138: aload_0
     139: getstatic     #134                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     142: putfield      #136                // Field implicitMatchingEnabled:Ljava/lang/Boolean;
     145: aload_0
     146: getstatic     #125                // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     149: putfield      #138                // Field skipNullEnabled:Ljava/lang/Boolean;
     152: aload_0
     153: getstatic     #125                // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     156: putfield      #140                // Field useOSGiClassLoaderBridging:Ljava/lang/Boolean;
     159: return

  org.modelmapper.internal.InheritingConfiguration(org.modelmapper.internal.InheritingConfiguration, boolean);
    Code:
       0: aload_0
       1: invokespecial #51                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #60                 // Field typeMapStore:Lorg/modelmapper/internal/TypeMapStore;
       9: putfield      #60                 // Field typeMapStore:Lorg/modelmapper/internal/TypeMapStore;
      12: aload_0
      13: aload_1
      14: getfield      #65                 // Field converterStore:Lorg/modelmapper/internal/converter/ConverterStore;
      17: putfield      #65                 // Field converterStore:Lorg/modelmapper/internal/converter/ConverterStore;
      20: aload_0
      21: aload_1
      22: getfield      #70                 // Field valueAccessStore:Lorg/modelmapper/internal/valueaccess/ValueAccessStore;
      25: putfield      #70                 // Field valueAccessStore:Lorg/modelmapper/internal/valueaccess/ValueAccessStore;
      28: aload_0
      29: aload_1
      30: getfield      #75                 // Field valueMutateStore:Lorg/modelmapper/internal/valuemutate/ValueMutateStore;
      33: putfield      #75                 // Field valueMutateStore:Lorg/modelmapper/internal/valuemutate/ValueMutateStore;
      36: iload_2
      37: ifeq          48
      40: aload_0
      41: aload_1
      42: putfield      #53                 // Field parent:Lorg/modelmapper/config/Configuration;
      45: goto          181
      48: aload_0
      49: aconst_null
      50: putfield      #53                 // Field parent:Lorg/modelmapper/config/Configuration;
      53: aload_0
      54: aload_1
      55: getfield      #82                 // Field sourceNameTokenizer:Lorg/modelmapper/spi/NameTokenizer;
      58: putfield      #82                 // Field sourceNameTokenizer:Lorg/modelmapper/spi/NameTokenizer;
      61: aload_0
      62: aload_1
      63: getfield      #84                 // Field destinationNameTokenizer:Lorg/modelmapper/spi/NameTokenizer;
      66: putfield      #84                 // Field destinationNameTokenizer:Lorg/modelmapper/spi/NameTokenizer;
      69: aload_0
      70: aload_1
      71: getfield      #91                 // Field sourceNamingConvention:Lorg/modelmapper/spi/NamingConvention;
      74: putfield      #91                 // Field sourceNamingConvention:Lorg/modelmapper/spi/NamingConvention;
      77: aload_0
      78: aload_1
      79: getfield      #96                 // Field destinationNamingConvention:Lorg/modelmapper/spi/NamingConvention;
      82: putfield      #96                 // Field destinationNamingConvention:Lorg/modelmapper/spi/NamingConvention;
      85: aload_0
      86: aload_1
      87: getfield      #102                // Field sourceNameTransformer:Lorg/modelmapper/spi/NameTransformer;
      90: putfield      #102                // Field sourceNameTransformer:Lorg/modelmapper/spi/NameTransformer;
      93: aload_0
      94: aload_1
      95: getfield      #106                // Field destinationNameTransformer:Lorg/modelmapper/spi/NameTransformer;
      98: putfield      #106                // Field destinationNameTransformer:Lorg/modelmapper/spi/NameTransformer;
     101: aload_0
     102: aload_1
     103: getfield      #113                // Field matchingStrategy:Lorg/modelmapper/spi/MatchingStrategy;
     106: putfield      #113                // Field matchingStrategy:Lorg/modelmapper/spi/MatchingStrategy;
     109: aload_0
     110: aload_1
     111: getfield      #118                // Field fieldAccessLevel:Lorg/modelmapper/config/Configuration$AccessLevel;
     114: putfield      #118                // Field fieldAccessLevel:Lorg/modelmapper/config/Configuration$AccessLevel;
     117: aload_0
     118: aload_1
     119: getfield      #120                // Field methodAccessLevel:Lorg/modelmapper/config/Configuration$AccessLevel;
     122: putfield      #120                // Field methodAccessLevel:Lorg/modelmapper/config/Configuration$AccessLevel;
     125: aload_0
     126: aload_1
     127: getfield      #127                // Field fieldMatchingEnabled:Ljava/lang/Boolean;
     130: putfield      #127                // Field fieldMatchingEnabled:Ljava/lang/Boolean;
     133: aload_0
     134: aload_1
     135: getfield      #129                // Field ambiguityIgnored:Ljava/lang/Boolean;
     138: putfield      #129                // Field ambiguityIgnored:Ljava/lang/Boolean;
     141: aload_0
     142: aload_1
     143: getfield      #145                // Field provider:Lorg/modelmapper/Provider;
     146: putfield      #145                // Field provider:Lorg/modelmapper/Provider;
     149: aload_0
     150: aload_1
     151: getfield      #147                // Field propertyCondition:Lorg/modelmapper/Condition;
     154: putfield      #147                // Field propertyCondition:Lorg/modelmapper/Condition;
     157: aload_0
     158: aload_1
     159: getfield      #131                // Field fullTypeMatchingRequired:Ljava/lang/Boolean;
     162: putfield      #131                // Field fullTypeMatchingRequired:Ljava/lang/Boolean;
     165: aload_0
     166: aload_1
     167: getfield      #136                // Field implicitMatchingEnabled:Ljava/lang/Boolean;
     170: putfield      #136                // Field implicitMatchingEnabled:Ljava/lang/Boolean;
     173: aload_0
     174: aload_1
     175: getfield      #138                // Field skipNullEnabled:Ljava/lang/Boolean;
     178: putfield      #138                // Field skipNullEnabled:Ljava/lang/Boolean;
     181: return

  public <T> org.modelmapper.config.Configuration addValueReader(org.modelmapper.spi.ValueReader<T>);
    Code:
       0: aload_0
       1: invokevirtual #156                // Method getValueReaders:()Ljava/util/List;
       4: aload_1
       5: invokeinterface #162,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public <T> org.modelmapper.config.Configuration addValueWriter(org.modelmapper.spi.ValueWriter<T>);
    Code:
       0: aload_0
       1: invokevirtual #170                // Method getValueWriters:()Ljava/util/List;
       4: aload_1
       5: invokeinterface #162,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.modelmapper.config.Configuration copy();
    Code:
       0: new           #2                  // class org/modelmapper/internal/InheritingConfiguration
       3: dup
       4: aload_0
       5: iconst_0
       6: invokespecial #177                // Method "<init>":(Lorg/modelmapper/internal/InheritingConfiguration;Z)V
       9: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #182                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #182                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #2                  // class org/modelmapper/internal/InheritingConfiguration
      28: astore_2
      29: aload_0
      30: invokevirtual #186                // Method getSourceNameTransformer:()Lorg/modelmapper/spi/NameTransformer;
      33: aload_2
      34: invokevirtual #186                // Method getSourceNameTransformer:()Lorg/modelmapper/spi/NameTransformer;
      37: invokevirtual #188                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      40: ifne          45
      43: iconst_0
      44: ireturn
      45: aload_0
      46: invokevirtual #191                // Method getDestinationNameTransformer:()Lorg/modelmapper/spi/NameTransformer;
      49: aload_2
      50: invokevirtual #191                // Method getDestinationNameTransformer:()Lorg/modelmapper/spi/NameTransformer;
      53: invokevirtual #188                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      56: ifne          61
      59: iconst_0
      60: ireturn
      61: aload_0
      62: invokevirtual #195                // Method getFieldAccessLevel:()Lorg/modelmapper/config/Configuration$AccessLevel;
      65: aload_2
      66: invokevirtual #195                // Method getFieldAccessLevel:()Lorg/modelmapper/config/Configuration$AccessLevel;
      69: if_acmpeq     74
      72: iconst_0
      73: ireturn
      74: aload_0
      75: invokevirtual #198                // Method getMethodAccessLevel:()Lorg/modelmapper/config/Configuration$AccessLevel;
      78: aload_2
      79: invokevirtual #198                // Method getMethodAccessLevel:()Lorg/modelmapper/config/Configuration$AccessLevel;
      82: if_acmpeq     87
      85: iconst_0
      86: ireturn
      87: aload_0
      88: invokevirtual #202                // Method isFieldMatchingEnabled:()Z
      91: aload_2
      92: invokevirtual #202                // Method isFieldMatchingEnabled:()Z
      95: if_icmpeq     100
      98: iconst_0
      99: ireturn
     100: iconst_1
     101: ireturn

  public java.util.List<org.modelmapper.spi.ConditionalConverter<?, ?>> getConverters();
    Code:
       0: aload_0
       1: getfield      #65                 // Field converterStore:Lorg/modelmapper/internal/converter/ConverterStore;
       4: invokevirtual #208                // Method org/modelmapper/internal/converter/ConverterStore.getConverters:()Ljava/util/List;
       7: areturn

  public org.modelmapper.spi.NameTokenizer getDestinationNameTokenizer();
    Code:
       0: aload_0
       1: getfield      #84                 // Field destinationNameTokenizer:Lorg/modelmapper/spi/NameTokenizer;
       4: ifnonnull     25
       7: aload_0
       8: getfield      #53                 // Field parent:Lorg/modelmapper/config/Configuration;
      11: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #6                  // class org/modelmapper/config/Configuration
      17: invokeinterface #218,  1          // InterfaceMethod org/modelmapper/config/Configuration.getDestinationNameTokenizer:()Lorg/modelmapper/spi/NameTokenizer;
      22: goto          29
      25: aload_0
      26: getfield      #84                 // Field destinationNameTokenizer:Lorg/modelmapper/spi/NameTokenizer;
      29: areturn

  public org.modelmapper.spi.NameTransformer getDestinationNameTransformer();
    Code:
       0: aload_0
       1: getfield      #106                // Field destinationNameTransformer:Lorg/modelmapper/spi/NameTransformer;
       4: ifnonnull     25
       7: aload_0
       8: getfield      #53                 // Field parent:Lorg/modelmapper/config/Configuration;
      11: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #6                  // class org/modelmapper/config/Configuration
      17: invokeinterface #221,  1          // InterfaceMethod org/modelmapper/config/Configuration.getDestinationNameTransformer:()Lorg/modelmapper/spi/NameTransformer;
      22: goto          29
      25: aload_0
      26: getfield      #106                // Field destinationNameTransformer:Lorg/modelmapper/spi/NameTransformer;
      29: areturn

  public org.modelmapper.spi.NamingConvention getDestinationNamingConvention();
    Code:
       0: aload_0
       1: getfield      #96                 // Field destinationNamingConvention:Lorg/modelmapper/spi/NamingConvention;
       4: ifnonnull     25
       7: aload_0
       8: getfield      #53                 // Field parent:Lorg/modelmapper/config/Configuration;
      11: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #6                  // class org/modelmapper/config/Configuration
      17: invokeinterface #227,  1          // InterfaceMethod org/modelmapper/config/Configuration.getDestinationNamingConvention:()Lorg/modelmapper/spi/NamingConvention;
      22: goto          29
      25: aload_0
      26: getfield      #96                 // Field destinationNamingConvention:Lorg/modelmapper/spi/NamingConvention;
      29: areturn

  public org.modelmapper.config.Configuration$AccessLevel getFieldAccessLevel();
    Code:
       0: aload_0
       1: getfield      #118                // Field fieldAccessLevel:Lorg/modelmapper/config/Configuration$AccessLevel;
       4: ifnonnull     25
       7: aload_0
       8: getfield      #53                 // Field parent:Lorg/modelmapper/config/Configuration;
      11: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #6                  // class org/modelmapper/config/Configuration
      17: invokeinterface #230,  1          // InterfaceMethod org/modelmapper/config/Configuration.getFieldAccessLevel:()Lorg/modelmapper/config/Configuration$AccessLevel;
      22: goto          29
      25: aload_0
      26: getfield      #118                // Field fieldAccessLevel:Lorg/modelmapper/config/Configuration$AccessLevel;
      29: areturn

  public org.modelmapper.spi.MatchingStrategy getMatchingStrategy();
    Code:
       0: aload_0
       1: getfield      #113                // Field matchingStrategy:Lorg/modelmapper/spi/MatchingStrategy;
       4: ifnonnull     25
       7: aload_0
       8: getfield      #53                 // Field parent:Lorg/modelmapper/config/Configuration;
      11: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #6                  // class org/modelmapper/config/Configuration
      17: invokeinterface #234,  1          // InterfaceMethod org/modelmapper/config/Configuration.getMatchingStrategy:()Lorg/modelmapper/spi/MatchingStrategy;
      22: goto          29
      25: aload_0
      26: getfield      #113                // Field matchingStrategy:Lorg/modelmapper/spi/MatchingStrategy;
      29: areturn

  public org.modelmapper.config.Configuration$AccessLevel getMethodAccessLevel();
    Code:
       0: aload_0
       1: getfield      #120                // Field methodAccessLevel:Lorg/modelmapper/config/Configuration$AccessLevel;
       4: ifnonnull     25
       7: aload_0
       8: getfield      #53                 // Field parent:Lorg/modelmapper/config/Configuration;
      11: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #6                  // class org/modelmapper/config/Configuration
      17: invokeinterface #237,  1          // InterfaceMethod org/modelmapper/config/Configuration.getMethodAccessLevel:()Lorg/modelmapper/config/Configuration$AccessLevel;
      22: goto          29
      25: aload_0
      26: getfield      #120                // Field methodAccessLevel:Lorg/modelmapper/config/Configuration$AccessLevel;
      29: areturn

  public org.modelmapper.Condition<?, ?> getPropertyCondition();
    Code:
       0: aload_0
       1: getfield      #53                 // Field parent:Lorg/modelmapper/config/Configuration;
       4: ifnull        31
       7: aload_0
       8: getfield      #147                // Field propertyCondition:Lorg/modelmapper/Condition;
      11: ifnonnull     26
      14: aload_0
      15: getfield      #53                 // Field parent:Lorg/modelmapper/config/Configuration;
      18: invokeinterface #241,  1          // InterfaceMethod org/modelmapper/config/Configuration.getPropertyCondition:()Lorg/modelmapper/Condition;
      23: goto          30
      26: aload_0
      27: getfield      #147                // Field propertyCondition:Lorg/modelmapper/Condition;
      30: areturn
      31: aload_0
      32: getfield      #147                // Field propertyCondition:Lorg/modelmapper/Condition;
      35: areturn

  public org.modelmapper.Provider<?> getProvider();
    Code:
       0: aload_0
       1: getfield      #53                 // Field parent:Lorg/modelmapper/config/Configuration;
       4: ifnull        37
       7: aload_0
       8: getfield      #145                // Field provider:Lorg/modelmapper/Provider;
      11: ifnonnull     32
      14: aload_0
      15: getfield      #53                 // Field parent:Lorg/modelmapper/config/Configuration;
      18: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #6                  // class org/modelmapper/config/Configuration
      24: invokeinterface #247,  1          // InterfaceMethod org/modelmapper/config/Configuration.getProvider:()Lorg/modelmapper/Provider;
      29: goto          36
      32: aload_0
      33: getfield      #145                // Field provider:Lorg/modelmapper/Provider;
      36: areturn
      37: aload_0
      38: getfield      #145                // Field provider:Lorg/modelmapper/Provider;
      41: areturn

  public org.modelmapper.spi.NameTokenizer getSourceNameTokenizer();
    Code:
       0: aload_0
       1: getfield      #82                 // Field sourceNameTokenizer:Lorg/modelmapper/spi/NameTokenizer;
       4: ifnonnull     25
       7: aload_0
       8: getfield      #53                 // Field parent:Lorg/modelmapper/config/Configuration;
      11: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #6                  // class org/modelmapper/config/Configuration
      17: invokeinterface #252,  1          // InterfaceMethod org/modelmapper/config/Configuration.getSourceNameTokenizer:()Lorg/modelmapper/spi/NameTokenizer;
      22: goto          29
      25: aload_0
      26: getfield      #82                 // Field sourceNameTokenizer:Lorg/modelmapper/spi/NameTokenizer;
      29: areturn

  public org.modelmapper.spi.NameTransformer getSourceNameTransformer();
    Code:
       0: aload_0
       1: getfield      #102                // Field sourceNameTransformer:Lorg/modelmapper/spi/NameTransformer;
       4: ifnonnull     25
       7: aload_0
       8: getfield      #53                 // Field parent:Lorg/modelmapper/config/Configuration;
      11: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #6                  // class org/modelmapper/config/Configuration
      17: invokeinterface #253,  1          // InterfaceMethod org/modelmapper/config/Configuration.getSourceNameTransformer:()Lorg/modelmapper/spi/NameTransformer;
      22: goto          29
      25: aload_0
      26: getfield      #102                // Field sourceNameTransformer:Lorg/modelmapper/spi/NameTransformer;
      29: areturn

  public org.modelmapper.spi.NamingConvention getSourceNamingConvention();
    Code:
       0: aload_0
       1: getfield      #91                 // Field sourceNamingConvention:Lorg/modelmapper/spi/NamingConvention;
       4: ifnonnull     25
       7: aload_0
       8: getfield      #53                 // Field parent:Lorg/modelmapper/config/Configuration;
      11: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #6                  // class org/modelmapper/config/Configuration
      17: invokeinterface #256,  1          // InterfaceMethod org/modelmapper/config/Configuration.getSourceNamingConvention:()Lorg/modelmapper/spi/NamingConvention;
      22: goto          29
      25: aload_0
      26: getfield      #91                 // Field sourceNamingConvention:Lorg/modelmapper/spi/NamingConvention;
      29: areturn

  public java.util.List<org.modelmapper.spi.ValueReader<?>> getValueReaders();
    Code:
       0: aload_0
       1: getfield      #70                 // Field valueAccessStore:Lorg/modelmapper/internal/valueaccess/ValueAccessStore;
       4: invokevirtual #257                // Method org/modelmapper/internal/valueaccess/ValueAccessStore.getValueReaders:()Ljava/util/List;
       7: areturn

  public java.util.List<org.modelmapper.spi.ValueWriter<?>> getValueWriters();
    Code:
       0: aload_0
       1: getfield      #75                 // Field valueMutateStore:Lorg/modelmapper/internal/valuemutate/ValueMutateStore;
       4: invokevirtual #258                // Method org/modelmapper/internal/valuemutate/ValueMutateStore.getValueWriters:()Ljava/util/List;
       7: areturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #186                // Method getSourceNameTransformer:()Lorg/modelmapper/spi/NameTransformer;
      13: invokevirtual #262                // Method java/lang/Object.hashCode:()I
      16: iadd
      17: istore_2
      18: bipush        31
      20: iload_2
      21: imul
      22: aload_0
      23: invokevirtual #191                // Method getDestinationNameTransformer:()Lorg/modelmapper/spi/NameTransformer;
      26: invokevirtual #262                // Method java/lang/Object.hashCode:()I
      29: iadd
      30: istore_2
      31: bipush        31
      33: iload_2
      34: imul
      35: aload_0
      36: invokevirtual #195                // Method getFieldAccessLevel:()Lorg/modelmapper/config/Configuration$AccessLevel;
      39: invokevirtual #263                // Method org/modelmapper/config/Configuration$AccessLevel.hashCode:()I
      42: iadd
      43: istore_2
      44: bipush        31
      46: iload_2
      47: imul
      48: aload_0
      49: invokevirtual #198                // Method getMethodAccessLevel:()Lorg/modelmapper/config/Configuration$AccessLevel;
      52: invokevirtual #263                // Method org/modelmapper/config/Configuration$AccessLevel.hashCode:()I
      55: iadd
      56: istore_2
      57: bipush        31
      59: iload_2
      60: imul
      61: aload_0
      62: invokevirtual #202                // Method isFieldMatchingEnabled:()Z
      65: ifeq          74
      68: sipush        1231
      71: goto          77
      74: sipush        1237
      77: iadd
      78: istore_2
      79: iload_2
      80: ireturn

  public boolean isAmbiguityIgnored();
    Code:
       0: aload_0
       1: getfield      #129                // Field ambiguityIgnored:Ljava/lang/Boolean;
       4: ifnonnull     25
       7: aload_0
       8: getfield      #53                 // Field parent:Lorg/modelmapper/config/Configuration;
      11: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #6                  // class org/modelmapper/config/Configuration
      17: invokeinterface #269,  1          // InterfaceMethod org/modelmapper/config/Configuration.isAmbiguityIgnored:()Z
      22: goto          32
      25: aload_0
      26: getfield      #129                // Field ambiguityIgnored:Ljava/lang/Boolean;
      29: invokevirtual #272                // Method java/lang/Boolean.booleanValue:()Z
      32: ireturn

  public boolean isFieldMatchingEnabled();
    Code:
       0: aload_0
       1: getfield      #127                // Field fieldMatchingEnabled:Ljava/lang/Boolean;
       4: ifnonnull     25
       7: aload_0
       8: getfield      #53                 // Field parent:Lorg/modelmapper/config/Configuration;
      11: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #6                  // class org/modelmapper/config/Configuration
      17: invokeinterface #273,  1          // InterfaceMethod org/modelmapper/config/Configuration.isFieldMatchingEnabled:()Z
      22: goto          32
      25: aload_0
      26: getfield      #127                // Field fieldMatchingEnabled:Ljava/lang/Boolean;
      29: invokevirtual #272                // Method java/lang/Boolean.booleanValue:()Z
      32: ireturn

  public boolean isFullTypeMatchingRequired();
    Code:
       0: aload_0
       1: getfield      #131                // Field fullTypeMatchingRequired:Ljava/lang/Boolean;
       4: ifnonnull     25
       7: aload_0
       8: getfield      #53                 // Field parent:Lorg/modelmapper/config/Configuration;
      11: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #6                  // class org/modelmapper/config/Configuration
      17: invokeinterface #276,  1          // InterfaceMethod org/modelmapper/config/Configuration.isFullTypeMatchingRequired:()Z
      22: goto          32
      25: aload_0
      26: getfield      #131                // Field fullTypeMatchingRequired:Ljava/lang/Boolean;
      29: invokevirtual #272                // Method java/lang/Boolean.booleanValue:()Z
      32: ireturn

  public boolean isImplicitMappingEnabled();
    Code:
       0: aload_0
       1: getfield      #136                // Field implicitMatchingEnabled:Ljava/lang/Boolean;
       4: ifnonnull     25
       7: aload_0
       8: getfield      #53                 // Field parent:Lorg/modelmapper/config/Configuration;
      11: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #6                  // class org/modelmapper/config/Configuration
      17: invokeinterface #279,  1          // InterfaceMethod org/modelmapper/config/Configuration.isImplicitMappingEnabled:()Z
      22: goto          32
      25: aload_0
      26: getfield      #136                // Field implicitMatchingEnabled:Ljava/lang/Boolean;
      29: invokevirtual #272                // Method java/lang/Boolean.booleanValue:()Z
      32: ireturn

  public boolean isSkipNullEnabled();
    Code:
       0: aload_0
       1: getfield      #138                // Field skipNullEnabled:Ljava/lang/Boolean;
       4: ifnonnull     25
       7: aload_0
       8: getfield      #53                 // Field parent:Lorg/modelmapper/config/Configuration;
      11: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #6                  // class org/modelmapper/config/Configuration
      17: invokeinterface #282,  1          // InterfaceMethod org/modelmapper/config/Configuration.isSkipNullEnabled:()Z
      22: goto          32
      25: aload_0
      26: getfield      #138                // Field skipNullEnabled:Ljava/lang/Boolean;
      29: invokevirtual #272                // Method java/lang/Boolean.booleanValue:()Z
      32: ireturn

  public boolean isUseOSGiClassLoaderBridging();
    Code:
       0: aload_0
       1: getfield      #140                // Field useOSGiClassLoaderBridging:Ljava/lang/Boolean;
       4: ifnonnull     25
       7: aload_0
       8: getfield      #53                 // Field parent:Lorg/modelmapper/config/Configuration;
      11: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #6                  // class org/modelmapper/config/Configuration
      17: invokeinterface #285,  1          // InterfaceMethod org/modelmapper/config/Configuration.isUseOSGiClassLoaderBridging:()Z
      22: goto          32
      25: aload_0
      26: getfield      #140                // Field useOSGiClassLoaderBridging:Ljava/lang/Boolean;
      29: invokevirtual #272                // Method java/lang/Boolean.booleanValue:()Z
      32: ireturn

  public boolean isDeepCopyEnabled();
    Code:
       0: aload_0
       1: getfield      #65                 // Field converterStore:Lorg/modelmapper/internal/converter/ConverterStore;
       4: ldc_w         #288                // class org/modelmapper/internal/converter/AssignableConverter
       7: invokevirtual #292                // Method org/modelmapper/internal/converter/ConverterStore.hasConverter:(Ljava/lang/Class;)Z
      10: ireturn

  public org.modelmapper.config.Configuration setAmbiguityIgnored(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #298                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #129                // Field ambiguityIgnored:Ljava/lang/Boolean;
       8: aload_0
       9: areturn

  public org.modelmapper.config.Configuration setDestinationNameTokenizer(org.modelmapper.spi.NameTokenizer);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #220                // class org/modelmapper/spi/NameTokenizer
       8: putfield      #84                 // Field destinationNameTokenizer:Lorg/modelmapper/spi/NameTokenizer;
      11: aload_0
      12: areturn

  public org.modelmapper.config.Configuration setDestinationNameTransformer(org.modelmapper.spi.NameTransformer);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #223                // class org/modelmapper/spi/NameTransformer
       8: putfield      #106                // Field destinationNameTransformer:Lorg/modelmapper/spi/NameTransformer;
      11: aload_0
      12: areturn

  public org.modelmapper.config.Configuration setDestinationNamingConvention(org.modelmapper.spi.NamingConvention);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #229                // class org/modelmapper/spi/NamingConvention
       8: putfield      #96                 // Field destinationNamingConvention:Lorg/modelmapper/spi/NamingConvention;
      11: aload_0
      12: areturn

  public org.modelmapper.config.Configuration setFieldAccessLevel(org.modelmapper.config.Configuration$AccessLevel);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #9                  // class org/modelmapper/config/Configuration$AccessLevel
       8: putfield      #118                // Field fieldAccessLevel:Lorg/modelmapper/config/Configuration$AccessLevel;
      11: aload_0
      12: areturn

  public org.modelmapper.config.Configuration setFieldMatchingEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #298                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #127                // Field fieldMatchingEnabled:Ljava/lang/Boolean;
       8: aload_0
       9: areturn

  public org.modelmapper.config.Configuration setFullTypeMatchingRequired(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #298                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #131                // Field fullTypeMatchingRequired:Ljava/lang/Boolean;
       8: aload_0
       9: areturn

  public org.modelmapper.config.Configuration setImplicitMappingEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #298                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #136                // Field implicitMatchingEnabled:Ljava/lang/Boolean;
       8: aload_0
       9: areturn

  public org.modelmapper.config.Configuration setSkipNullEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #298                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #138                // Field skipNullEnabled:Ljava/lang/Boolean;
       8: aload_0
       9: areturn

  public org.modelmapper.config.Configuration setDeepCopyEnabled(boolean);
    Code:
       0: iload_1
       1: ifeq          31
       4: aload_0
       5: getfield      #65                 // Field converterStore:Lorg/modelmapper/internal/converter/ConverterStore;
       8: ldc_w         #288                // class org/modelmapper/internal/converter/AssignableConverter
      11: invokevirtual #292                // Method org/modelmapper/internal/converter/ConverterStore.hasConverter:(Ljava/lang/Class;)Z
      14: ifeq          31
      17: aload_0
      18: getfield      #65                 // Field converterStore:Lorg/modelmapper/internal/converter/ConverterStore;
      21: ldc_w         #288                // class org/modelmapper/internal/converter/AssignableConverter
      24: invokevirtual #322                // Method org/modelmapper/internal/converter/ConverterStore.removeConverter:(Ljava/lang/Class;)Lorg/modelmapper/internal/converter/ConverterStore;
      27: pop
      28: goto          63
      31: iload_1
      32: ifne          63
      35: aload_0
      36: getfield      #65                 // Field converterStore:Lorg/modelmapper/internal/converter/ConverterStore;
      39: ldc_w         #288                // class org/modelmapper/internal/converter/AssignableConverter
      42: invokevirtual #292                // Method org/modelmapper/internal/converter/ConverterStore.hasConverter:(Ljava/lang/Class;)Z
      45: ifeq          63
      48: aload_0
      49: getfield      #65                 // Field converterStore:Lorg/modelmapper/internal/converter/ConverterStore;
      52: new           #288                // class org/modelmapper/internal/converter/AssignableConverter
      55: dup
      56: invokespecial #323                // Method org/modelmapper/internal/converter/AssignableConverter."<init>":()V
      59: invokevirtual #327                // Method org/modelmapper/internal/converter/ConverterStore.addConverter:(Lorg/modelmapper/spi/ConditionalConverter;)Lorg/modelmapper/internal/converter/ConverterStore;
      62: pop
      63: aload_0
      64: areturn

  public org.modelmapper.config.Configuration setMatchingStrategy(org.modelmapper.spi.MatchingStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #236                // class org/modelmapper/spi/MatchingStrategy
       8: putfield      #113                // Field matchingStrategy:Lorg/modelmapper/spi/MatchingStrategy;
      11: aload_0
      12: areturn

  public org.modelmapper.config.Configuration setMethodAccessLevel(org.modelmapper.config.Configuration$AccessLevel);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #9                  // class org/modelmapper/config/Configuration$AccessLevel
       8: putfield      #120                // Field methodAccessLevel:Lorg/modelmapper/config/Configuration$AccessLevel;
      11: aload_0
      12: areturn

  public org.modelmapper.config.Configuration setPropertyCondition(org.modelmapper.Condition<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #243                // class org/modelmapper/Condition
       8: putfield      #147                // Field propertyCondition:Lorg/modelmapper/Condition;
      11: aload_0
      12: areturn

  public org.modelmapper.config.Configuration setProvider(org.modelmapper.Provider<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #249                // class org/modelmapper/Provider
       8: putfield      #145                // Field provider:Lorg/modelmapper/Provider;
      11: aload_0
      12: areturn

  public org.modelmapper.config.Configuration setSourceNameTokenizer(org.modelmapper.spi.NameTokenizer);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #220                // class org/modelmapper/spi/NameTokenizer
       8: putfield      #82                 // Field sourceNameTokenizer:Lorg/modelmapper/spi/NameTokenizer;
      11: aload_0
      12: areturn

  public org.modelmapper.config.Configuration setSourceNameTransformer(org.modelmapper.spi.NameTransformer);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #223                // class org/modelmapper/spi/NameTransformer
       8: putfield      #102                // Field sourceNameTransformer:Lorg/modelmapper/spi/NameTransformer;
      11: aload_0
      12: areturn

  public org.modelmapper.config.Configuration setSourceNamingConvention(org.modelmapper.spi.NamingConvention);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #216                // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #229                // class org/modelmapper/spi/NamingConvention
       8: putfield      #91                 // Field sourceNamingConvention:Lorg/modelmapper/spi/NamingConvention;
      11: aload_0
      12: areturn

  public org.modelmapper.config.Configuration setUseOSGiClassLoaderBridging(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #298                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #140                // Field useOSGiClassLoaderBridging:Ljava/lang/Boolean;
       8: aload_0
       9: areturn
}
