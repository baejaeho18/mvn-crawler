Compiled from "PropertyMap.java"
public abstract class org.modelmapper.PropertyMap<S, D> {
  public S source;

  public D destination;

  java.lang.Class<D> destinationType;

  java.lang.Class<S> sourceType;

  private org.modelmapper.internal.ExplicitMappingBuilder<S, D> builder;

  protected org.modelmapper.PropertyMap();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: ldc           #2                  // class org/modelmapper/PropertyMap
       6: aload_0
       7: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: invokestatic  #33                 // Method org/modelmapper/internal/typetools/TypeResolver.resolveRawArguments:(Ljava/lang/Class;Ljava/lang/Class;)[Ljava/lang/Class;
      13: astore_1
      14: aload_1
      15: ldc           #35                 // String Must declare source type argument <S> and destination type argument <D> for PropertyMap
      17: invokestatic  #41                 // Method org/modelmapper/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      20: pop
      21: aload_0
      22: aload_1
      23: iconst_0
      24: aaload
      25: putfield      #43                 // Field sourceType:Ljava/lang/Class;
      28: aload_0
      29: aload_1
      30: iconst_1
      31: aaload
      32: putfield      #45                 // Field destinationType:Ljava/lang/Class;
      35: return

  protected org.modelmapper.PropertyMap(java.lang.Class<S>, java.lang.Class<D>);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #43                 // Field sourceType:Ljava/lang/Class;
       9: aload_0
      10: aload_2
      11: putfield      #45                 // Field destinationType:Ljava/lang/Class;
      14: return

  protected abstract void configure();

  protected final D map();
    Code:
       0: aload_0
       1: invokespecial #58                 // Method assertBuilder:()V
       4: aload_0
       5: getfield      #60                 // Field builder:Lorg/modelmapper/internal/ExplicitMappingBuilder;
       8: invokevirtual #64                 // Method org/modelmapper/internal/ExplicitMappingBuilder.map:()Ljava/lang/Object;
      11: areturn

  protected final D map(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #58                 // Method assertBuilder:()V
       4: aload_0
       5: getfield      #60                 // Field builder:Lorg/modelmapper/internal/ExplicitMappingBuilder;
       8: aload_1
       9: invokevirtual #67                 // Method org/modelmapper/internal/ExplicitMappingBuilder.map:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  protected final void map(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #58                 // Method assertBuilder:()V
       4: aload_0
       5: getfield      #60                 // Field builder:Lorg/modelmapper/internal/ExplicitMappingBuilder;
       8: aload_1
       9: aload_2
      10: invokevirtual #71                 // Method org/modelmapper/internal/ExplicitMappingBuilder.map:(Ljava/lang/Object;Ljava/lang/Object;)V
      13: return

  protected final D skip();
    Code:
       0: aload_0
       1: invokespecial #58                 // Method assertBuilder:()V
       4: aload_0
       5: getfield      #60                 // Field builder:Lorg/modelmapper/internal/ExplicitMappingBuilder;
       8: invokevirtual #74                 // Method org/modelmapper/internal/ExplicitMappingBuilder.skip:()Ljava/lang/Object;
      11: areturn

  protected final void skip(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #58                 // Method assertBuilder:()V
       4: aload_0
       5: getfield      #60                 // Field builder:Lorg/modelmapper/internal/ExplicitMappingBuilder;
       8: aload_1
       9: invokevirtual #77                 // Method org/modelmapper/internal/ExplicitMappingBuilder.skip:(Ljava/lang/Object;)V
      12: return

  protected final void skip(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #58                 // Method assertBuilder:()V
       4: aload_0
       5: getfield      #60                 // Field builder:Lorg/modelmapper/internal/ExplicitMappingBuilder;
       8: aload_1
       9: aload_2
      10: invokevirtual #79                 // Method org/modelmapper/internal/ExplicitMappingBuilder.skip:(Ljava/lang/Object;Ljava/lang/Object;)V
      13: return

  protected <T> T source(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #58                 // Method assertBuilder:()V
       4: aload_0
       5: getfield      #60                 // Field builder:Lorg/modelmapper/internal/ExplicitMappingBuilder;
       8: aload_1
       9: invokevirtual #82                 // Method org/modelmapper/internal/ExplicitMappingBuilder.source:(Ljava/lang/String;)Ljava/lang/Object;
      12: areturn

  protected java.lang.Object destination(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #58                 // Method assertBuilder:()V
       4: aload_0
       5: getfield      #60                 // Field builder:Lorg/modelmapper/internal/ExplicitMappingBuilder;
       8: aload_1
       9: invokevirtual #86                 // Method org/modelmapper/internal/ExplicitMappingBuilder.destination:(Ljava/lang/String;)Ljava/lang/Object;
      12: areturn

  protected final org.modelmapper.builder.MapExpression<D> using(org.modelmapper.Converter<?, ?>);
    Code:
       0: aload_0
       1: invokespecial #58                 // Method assertBuilder:()V
       4: aload_0
       5: getfield      #60                 // Field builder:Lorg/modelmapper/internal/ExplicitMappingBuilder;
       8: aload_1
       9: invokevirtual #92                 // Method org/modelmapper/internal/ExplicitMappingBuilder.using:(Lorg/modelmapper/Converter;)Lorg/modelmapper/builder/ConditionExpression;
      12: areturn

  protected final org.modelmapper.builder.ProviderExpression<S, D> when(org.modelmapper.Condition<?, ?>);
    Code:
       0: aload_0
       1: invokespecial #58                 // Method assertBuilder:()V
       4: aload_0
       5: getfield      #60                 // Field builder:Lorg/modelmapper/internal/ExplicitMappingBuilder;
       8: aload_1
       9: invokevirtual #100                // Method org/modelmapper/internal/ExplicitMappingBuilder.when:(Lorg/modelmapper/Condition;)Lorg/modelmapper/builder/ConditionExpression;
      12: areturn

  protected final org.modelmapper.builder.ConverterExpression<S, D> with(org.modelmapper.Provider<?>);
    Code:
       0: aload_0
       1: invokespecial #58                 // Method assertBuilder:()V
       4: aload_0
       5: getfield      #60                 // Field builder:Lorg/modelmapper/internal/ExplicitMappingBuilder;
       8: aload_1
       9: invokevirtual #108                // Method org/modelmapper/internal/ExplicitMappingBuilder.with:(Lorg/modelmapper/Provider;)Lorg/modelmapper/builder/ConditionExpression;
      12: areturn

  private void assertBuilder();
    Code:
       0: aload_0
       1: getfield      #60                 // Field builder:Lorg/modelmapper/internal/ExplicitMappingBuilder;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #113                // String PropertyMap should not be used outside the context of PropertyMap.configure().
      14: iconst_0
      15: anewarray     #5                  // class java/lang/Object
      18: invokestatic  #117                // Method org/modelmapper/internal/util/Assert.state:(ZLjava/lang/String;[Ljava/lang/Object;)V
      21: return

  private synchronized void configure(org.modelmapper.internal.ExplicitMappingBuilder<S, D>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #60                 // Field builder:Lorg/modelmapper/internal/ExplicitMappingBuilder;
       5: aload_1
       6: aload_0
       7: invokevirtual #122                // Method org/modelmapper/internal/ExplicitMappingBuilder.visitPropertyMap:(Lorg/modelmapper/PropertyMap;)V
      10: aload_0
      11: aload_1
      12: getfield      #124                // Field org/modelmapper/internal/ExplicitMappingBuilder.source:Ljava/lang/Object;
      15: putfield      #125                // Field source:Ljava/lang/Object;
      18: aload_0
      19: aload_1
      20: getfield      #127                // Field org/modelmapper/internal/ExplicitMappingBuilder.destination:Ljava/lang/Object;
      23: putfield      #128                // Field destination:Ljava/lang/Object;
      26: aload_0
      27: invokevirtual #130                // Method configure:()V
      30: aload_0
      31: aconst_null
      32: putfield      #60                 // Field builder:Lorg/modelmapper/internal/ExplicitMappingBuilder;
      35: aload_0
      36: aconst_null
      37: putfield      #125                // Field source:Ljava/lang/Object;
      40: goto          56
      43: astore_2
      44: aload_0
      45: aconst_null
      46: putfield      #60                 // Field builder:Lorg/modelmapper/internal/ExplicitMappingBuilder;
      49: aload_0
      50: aconst_null
      51: putfield      #125                // Field source:Ljava/lang/Object;
      54: aload_2
      55: athrow
      56: return
    Exception table:
       from    to  target type
           5    30    43   any
}
