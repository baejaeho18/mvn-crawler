Compiled from "Convert.java"
final class org.xmlunit.util.Convert$1 implements javax.xml.namespace.NamespaceContext {
  final java.util.Map val$copy;

  org.xmlunit.util.Convert$1(java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$copy:Ljava/util/Map;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public java.lang.String getNamespaceURI(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #3                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #4                  // String prefix must not be null
      10: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: ldc           #7                  // String xml
      16: aload_1
      17: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifeq          26
      23: ldc           #9                  // String http://www.w3.org/XML/1998/namespace
      25: areturn
      26: ldc           #10                 // String xmlns
      28: aload_1
      29: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifeq          38
      35: ldc           #11                 // String http://www.w3.org/2000/xmlns/
      37: areturn
      38: aload_0
      39: getfield      #1                  // Field val$copy:Ljava/util/Map;
      42: aload_1
      43: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      48: checkcast     #13                 // class java/lang/String
      51: astore_2
      52: aload_2
      53: ifnull        60
      56: aload_2
      57: goto          62
      60: ldc           #14                 // String
      62: areturn

  public java.lang.String getPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method getPrefixes:(Ljava/lang/String;)Ljava/util/Iterator;
       5: astore_2
       6: aload_2
       7: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      12: ifeq          27
      15: aload_2
      16: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      21: checkcast     #13                 // class java/lang/String
      24: goto          28
      27: aconst_null
      28: areturn

  public java.util.Iterator getPrefixes(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #3                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #18                 // String uri must not be null
      10: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #19                 // class java/util/LinkedHashSet
      17: dup
      18: invokespecial #20                 // Method java/util/LinkedHashSet."<init>":()V
      21: astore_2
      22: iconst_0
      23: istore_3
      24: ldc           #9                  // String http://www.w3.org/XML/1998/namespace
      26: aload_1
      27: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      30: ifeq          44
      33: aload_2
      34: ldc           #7                  // String xml
      36: invokeinterface #21,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      41: pop
      42: iconst_1
      43: istore_3
      44: ldc           #11                 // String http://www.w3.org/2000/xmlns/
      46: aload_1
      47: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      50: ifeq          64
      53: aload_2
      54: ldc           #10                 // String xmlns
      56: invokeinterface #21,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      61: pop
      62: iconst_1
      63: istore_3
      64: iload_3
      65: ifne          137
      68: aload_0
      69: getfield      #1                  // Field val$copy:Ljava/util/Map;
      72: invokeinterface #22,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      77: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      82: astore        4
      84: aload         4
      86: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      91: ifeq          137
      94: aload         4
      96: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     101: checkcast     #24                 // class java/util/Map$Entry
     104: astore        5
     106: aload_1
     107: aload         5
     109: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     114: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     117: ifeq          134
     120: aload_2
     121: aload         5
     123: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     128: invokeinterface #21,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     133: pop
     134: goto          84
     137: aload_2
     138: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     143: areturn
}
