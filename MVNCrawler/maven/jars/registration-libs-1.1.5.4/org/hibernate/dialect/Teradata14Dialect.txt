Compiled from "Teradata14Dialect.java"
public class org.hibernate.dialect.Teradata14Dialect extends org.hibernate.dialect.TeradataDialect {
  org.hibernate.tool.schema.internal.StandardIndexExporter TeraIndexExporter;

  private static org.hibernate.exception.spi.ViolatedConstraintNameExtracter EXTRACTER;

  public org.hibernate.dialect.Teradata14Dialect();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hibernate/dialect/TeradataDialect."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field TeraIndexExporter:Lorg/hibernate/tool/schema/internal/StandardIndexExporter;
       9: aload_0
      10: bipush        -5
      12: ldc           #4                  // String BIGINT
      14: invokevirtual #5                  // Method registerColumnType:(ILjava/lang/String;)V
      17: aload_0
      18: bipush        -2
      20: ldc           #6                  // String VARBYTE(100)
      22: invokevirtual #5                  // Method registerColumnType:(ILjava/lang/String;)V
      25: aload_0
      26: bipush        -4
      28: ldc           #7                  // String VARBYTE(32000)
      30: invokevirtual #5                  // Method registerColumnType:(ILjava/lang/String;)V
      33: aload_0
      34: iconst_m1
      35: ldc           #8                  // String VARCHAR(32000)
      37: invokevirtual #5                  // Method registerColumnType:(ILjava/lang/String;)V
      40: aload_0
      41: invokevirtual #9                  // Method getDefaultProperties:()Ljava/util/Properties;
      44: ldc           #11                 // String hibernate.jdbc.use_streams_for_binary
      46: ldc           #12                 // String true
      48: invokevirtual #13                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      51: pop
      52: aload_0
      53: invokevirtual #9                  // Method getDefaultProperties:()Ljava/util/Properties;
      56: ldc           #14                 // String hibernate.jdbc.batch_size
      58: ldc           #16                 // String 15
      60: invokevirtual #13                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      63: pop
      64: aload_0
      65: ldc           #17                 // String current_time
      67: new           #18                 // class org/hibernate/dialect/function/SQLFunctionTemplate
      70: dup
      71: getstatic     #19                 // Field org/hibernate/type/StandardBasicTypes.TIME:Lorg/hibernate/type/TimeType;
      74: ldc           #17                 // String current_time
      76: invokespecial #20                 // Method org/hibernate/dialect/function/SQLFunctionTemplate."<init>":(Lorg/hibernate/type/Type;Ljava/lang/String;)V
      79: invokevirtual #21                 // Method registerFunction:(Ljava/lang/String;Lorg/hibernate/dialect/function/SQLFunction;)V
      82: aload_0
      83: ldc           #22                 // String current_date
      85: new           #18                 // class org/hibernate/dialect/function/SQLFunctionTemplate
      88: dup
      89: getstatic     #23                 // Field org/hibernate/type/StandardBasicTypes.DATE:Lorg/hibernate/type/DateType;
      92: ldc           #22                 // String current_date
      94: invokespecial #20                 // Method org/hibernate/dialect/function/SQLFunctionTemplate."<init>":(Lorg/hibernate/type/Type;Ljava/lang/String;)V
      97: invokevirtual #21                 // Method registerFunction:(Ljava/lang/String;Lorg/hibernate/dialect/function/SQLFunction;)V
     100: aload_0
     101: new           #24                 // class org/hibernate/dialect/Teradata14Dialect$TeradataIndexExporter
     104: dup
     105: aload_0
     106: aload_0
     107: invokespecial #25                 // Method org/hibernate/dialect/Teradata14Dialect$TeradataIndexExporter."<init>":(Lorg/hibernate/dialect/Teradata14Dialect;Lorg/hibernate/dialect/Dialect;)V
     110: putfield      #2                  // Field TeraIndexExporter:Lorg/hibernate/tool/schema/internal/StandardIndexExporter;
     113: return

  public java.lang.String getAddColumnString();
    Code:
       0: ldc           #26                 // String Add
       2: areturn

  public java.lang.String getTypeName(int, int, int, int) throws org.hibernate.HibernateException;
    Code:
       0: iload_3
       1: ifle          13
       4: iload         4
       6: i2f
       7: iload_3
       8: i2f
       9: fdiv
      10: goto          14
      13: fconst_0
      14: fstore        5
      16: iload_3
      17: bipush        38
      19: if_icmple     27
      22: bipush        38
      24: goto          28
      27: iload_3
      28: istore        6
      30: iload_3
      31: bipush        38
      33: if_icmple     47
      36: ldc2_w        #27                 // double 38.0d
      39: fload         5
      41: f2d
      42: dmul
      43: d2i
      44: goto          61
      47: iload         4
      49: bipush        38
      51: if_icmple     59
      54: bipush        38
      56: goto          61
      59: iload         4
      61: istore        7
      63: aload_0
      64: iload_1
      65: iload_2
      66: iload         6
      68: iload         7
      70: invokespecial #29                 // Method org/hibernate/dialect/TeradataDialect.getTypeName:(IIII)Ljava/lang/String;
      73: areturn

  public boolean areStringComparisonsCaseInsensitive();
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsExpectedLobUsagePattern();
    Code:
       0: iconst_1
       1: ireturn

  public org.hibernate.exception.spi.ViolatedConstraintNameExtracter getViolatedConstraintNameExtracter();
    Code:
       0: getstatic     #30                 // Field EXTRACTER:Lorg/hibernate/exception/spi/ViolatedConstraintNameExtracter;
       3: areturn

  public boolean supportsTupleDistinctCounts();
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsExistsInSelect();
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsUnboundedLobLocatorMaterialization();
    Code:
       0: iconst_0
       1: ireturn

  public int registerResultSetOutParameter(java.sql.CallableStatement, int) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: iload_2
       2: sipush        2006
       5: invokeinterface #31,  3           // InterfaceMethod java/sql/CallableStatement.registerOutParameter:(II)V
      10: iinc          2, 1
      13: iload_2
      14: ireturn

  public java.sql.ResultSet getResultSet(java.sql.CallableStatement) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: invokeinterface #32,  1           // InterfaceMethod java/sql/CallableStatement.execute:()Z
       6: istore_2
       7: iload_2
       8: ifne          31
      11: aload_1
      12: invokeinterface #33,  1           // InterfaceMethod java/sql/CallableStatement.getUpdateCount:()I
      17: iconst_m1
      18: if_icmpeq     31
      21: aload_1
      22: invokeinterface #34,  1           // InterfaceMethod java/sql/CallableStatement.getMoreResults:()Z
      27: istore_2
      28: goto          7
      31: aload_1
      32: invokeinterface #35,  1           // InterfaceMethod java/sql/CallableStatement.getResultSet:()Ljava/sql/ResultSet;
      37: areturn

  public java.lang.String getWriteLockString(int);
    Code:
       0: ldc           #36                 // String  Locking row for write
       2: astore_2
       3: iload_1
       4: ifne          27
       7: new           #37                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      14: aload_2
      15: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #40                 // String  nowait
      20: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: areturn
      27: aload_2
      28: areturn

  public java.lang.String getReadLockString(int);
    Code:
       0: ldc           #42                 // String  Locking row for read
       2: astore_2
       3: iload_1
       4: ifne          27
       7: new           #37                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      14: aload_2
      15: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #40                 // String  nowait
      20: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: areturn
      27: aload_2
      28: areturn

  public java.lang.String applyLocksToSql(java.lang.String, org.hibernate.LockOptions, java.util.Map);
    Code:
       0: new           #37                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       7: new           #43                 // class org/hibernate/sql/ForUpdateFragment
      10: dup
      11: aload_0
      12: aload_2
      13: aload_3
      14: invokespecial #44                 // Method org/hibernate/sql/ForUpdateFragment."<init>":(Lorg/hibernate/dialect/Dialect;Lorg/hibernate/LockOptions;Ljava/util/Map;)V
      17: invokevirtual #45                 // Method org/hibernate/sql/ForUpdateFragment.toFragmentString:()Ljava/lang/String;
      20: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #46                 // String
      25: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: areturn

  public boolean useFollowOnLocking(org.hibernate.engine.spi.QueryParameters);
    Code:
       0: iconst_1
       1: ireturn

  public boolean supportsLockTimeouts();
    Code:
       0: iconst_0
       1: ireturn

  public org.hibernate.tool.schema.spi.Exporter<org.hibernate.mapping.Index> getIndexExporter();
    Code:
       0: aload_0
       1: getfield      #2                  // Field TeraIndexExporter:Lorg/hibernate/tool/schema/internal/StandardIndexExporter;
       4: areturn

  public org.hibernate.dialect.identity.IdentityColumnSupport getIdentityColumnSupport();
    Code:
       0: new           #47                 // class org/hibernate/dialect/identity/Teradata14IdentityColumnSupport
       3: dup
       4: invokespecial #48                 // Method org/hibernate/dialect/identity/Teradata14IdentityColumnSupport."<init>":()V
       7: areturn

  static {};
    Code:
       0: new           #49                 // class org/hibernate/dialect/Teradata14Dialect$1
       3: dup
       4: invokespecial #50                 // Method org/hibernate/dialect/Teradata14Dialect$1."<init>":()V
       7: putstatic     #30                 // Field EXTRACTER:Lorg/hibernate/exception/spi/ViolatedConstraintNameExtracter;
      10: return
}
