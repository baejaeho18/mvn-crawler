Compiled from "InterbaseDialect.java"
public class org.hibernate.dialect.InterbaseDialect extends org.hibernate.dialect.Dialect {
  private static final org.hibernate.dialect.pagination.AbstractLimitHandler LIMIT_HANDLER;

  public org.hibernate.dialect.InterbaseDialect();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hibernate/dialect/Dialect."<init>":()V
       4: aload_0
       5: bipush        -7
       7: ldc           #3                  // String smallint
       9: invokevirtual #4                  // Method registerColumnType:(ILjava/lang/String;)V
      12: aload_0
      13: bipush        -5
      15: ldc           #5                  // String numeric(18,0)
      17: invokevirtual #4                  // Method registerColumnType:(ILjava/lang/String;)V
      20: aload_0
      21: iconst_5
      22: ldc           #3                  // String smallint
      24: invokevirtual #4                  // Method registerColumnType:(ILjava/lang/String;)V
      27: aload_0
      28: bipush        -6
      30: ldc           #3                  // String smallint
      32: invokevirtual #4                  // Method registerColumnType:(ILjava/lang/String;)V
      35: aload_0
      36: iconst_4
      37: ldc           #6                  // String integer
      39: invokevirtual #4                  // Method registerColumnType:(ILjava/lang/String;)V
      42: aload_0
      43: iconst_1
      44: ldc           #7                  // String char(1)
      46: invokevirtual #4                  // Method registerColumnType:(ILjava/lang/String;)V
      49: aload_0
      50: bipush        12
      52: ldc           #8                  // String varchar($l)
      54: invokevirtual #4                  // Method registerColumnType:(ILjava/lang/String;)V
      57: aload_0
      58: bipush        6
      60: ldc           #9                  // String float
      62: invokevirtual #4                  // Method registerColumnType:(ILjava/lang/String;)V
      65: aload_0
      66: bipush        8
      68: ldc           #10                 // String double precision
      70: invokevirtual #4                  // Method registerColumnType:(ILjava/lang/String;)V
      73: aload_0
      74: bipush        91
      76: ldc           #11                 // String date
      78: invokevirtual #4                  // Method registerColumnType:(ILjava/lang/String;)V
      81: aload_0
      82: bipush        92
      84: ldc           #12                 // String time
      86: invokevirtual #4                  // Method registerColumnType:(ILjava/lang/String;)V
      89: aload_0
      90: bipush        93
      92: ldc           #13                 // String timestamp
      94: invokevirtual #4                  // Method registerColumnType:(ILjava/lang/String;)V
      97: aload_0
      98: bipush        -3
     100: ldc           #14                 // String blob
     102: invokevirtual #4                  // Method registerColumnType:(ILjava/lang/String;)V
     105: aload_0
     106: iconst_2
     107: ldc           #15                 // String numeric($p,$s)
     109: invokevirtual #4                  // Method registerColumnType:(ILjava/lang/String;)V
     112: aload_0
     113: sipush        2004
     116: ldc           #14                 // String blob
     118: invokevirtual #4                  // Method registerColumnType:(ILjava/lang/String;)V
     121: aload_0
     122: sipush        2005
     125: ldc           #16                 // String blob sub_type 1
     127: invokevirtual #4                  // Method registerColumnType:(ILjava/lang/String;)V
     130: aload_0
     131: bipush        16
     133: ldc           #3                  // String smallint
     135: invokevirtual #4                  // Method registerColumnType:(ILjava/lang/String;)V
     138: aload_0
     139: ldc           #17                 // String concat
     141: new           #18                 // class org/hibernate/dialect/function/VarArgsSQLFunction
     144: dup
     145: getstatic     #19                 // Field org/hibernate/type/StandardBasicTypes.STRING:Lorg/hibernate/type/StringType;
     148: ldc           #20                 // String (
     150: ldc           #21                 // String ||
     152: ldc           #22                 // String )
     154: invokespecial #23                 // Method org/hibernate/dialect/function/VarArgsSQLFunction."<init>":(Lorg/hibernate/type/Type;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     157: invokevirtual #24                 // Method registerFunction:(Ljava/lang/String;Lorg/hibernate/dialect/function/SQLFunction;)V
     160: aload_0
     161: ldc           #25                 // String current_date
     163: new           #26                 // class org/hibernate/dialect/function/NoArgSQLFunction
     166: dup
     167: ldc           #25                 // String current_date
     169: getstatic     #27                 // Field org/hibernate/type/StandardBasicTypes.DATE:Lorg/hibernate/type/DateType;
     172: iconst_0
     173: invokespecial #28                 // Method org/hibernate/dialect/function/NoArgSQLFunction."<init>":(Ljava/lang/String;Lorg/hibernate/type/Type;Z)V
     176: invokevirtual #24                 // Method registerFunction:(Ljava/lang/String;Lorg/hibernate/dialect/function/SQLFunction;)V
     179: aload_0
     180: invokevirtual #29                 // Method getDefaultProperties:()Ljava/util/Properties;
     183: ldc           #31                 // String hibernate.jdbc.batch_size
     185: ldc           #33                 // String 0
     187: invokevirtual #34                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     190: pop
     191: return

  public java.lang.String getAddColumnString();
    Code:
       0: ldc           #35                 // String add
       2: areturn

  public java.lang.String getSequenceNextValString(java.lang.String);
    Code:
       0: new           #36                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #38                 // String select
       9: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: aload_1
      14: invokevirtual #40                 // Method getSelectSequenceNextValString:(Ljava/lang/String;)Ljava/lang/String;
      17: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #41                 // String  from RDB$DATABASE
      22: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: areturn

  public java.lang.String getSelectSequenceNextValString(java.lang.String);
    Code:
       0: new           #36                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #43                 // String gen_id(
       9: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_1
      13: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #44                 // String , 1 )
      18: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: areturn

  public java.lang.String getCreateSequenceString(java.lang.String);
    Code:
       0: new           #36                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #45                 // String create generator
       9: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_1
      13: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: areturn

  public java.lang.String getDropSequenceString(java.lang.String);
    Code:
       0: new           #36                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #46                 // String delete from RDB$GENERATORS where RDB$GENERATOR_NAME = \'
       9: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_1
      13: getstatic     #47                 // Field java/util/Locale.ROOT:Ljava/util/Locale;
      16: invokevirtual #48                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      19: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #49                 // String \'
      24: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: areturn

  public java.lang.String getQuerySequencesString();
    Code:
       0: ldc           #50                 // String select RDB$GENERATOR_NAME from RDB$GENERATORS
       2: areturn

  public java.lang.String getForUpdateString();
    Code:
       0: ldc           #51                 // String  with lock
       2: areturn

  public java.lang.String getForUpdateString(java.lang.String);
    Code:
       0: new           #36                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #52                 // String  for update of
       9: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_1
      13: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #51                 // String  with lock
      18: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: areturn

  public boolean supportsSequences();
    Code:
       0: iconst_1
       1: ireturn

  public org.hibernate.dialect.pagination.LimitHandler getLimitHandler();
    Code:
       0: getstatic     #53                 // Field LIMIT_HANDLER:Lorg/hibernate/dialect/pagination/AbstractLimitHandler;
       3: areturn

  public boolean supportsLimit();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.String getLimitString(java.lang.String, boolean);
    Code:
       0: iload_2
       1: ifeq          26
       4: new           #36                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_1
      12: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #54                 // String  rows ? to ?
      17: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: goto          45
      26: new           #36                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      33: aload_1
      34: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #55                 // String  rows ?
      39: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: areturn

  public boolean bindLimitParametersFirst();
    Code:
       0: iconst_0
       1: ireturn

  public boolean bindLimitParametersInReverseOrder();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String getCurrentTimestampSelectString();
    Code:
       0: ldc           #56                 // String {?= call CURRENT_TIMESTAMP }
       2: areturn

  public boolean isCurrentTimestampSelectStringCallable();
    Code:
       0: iconst_1
       1: ireturn

  static {};
    Code:
       0: new           #57                 // class org/hibernate/dialect/InterbaseDialect$1
       3: dup
       4: invokespecial #58                 // Method org/hibernate/dialect/InterbaseDialect$1."<init>":()V
       7: putstatic     #53                 // Field LIMIT_HANDLER:Lorg/hibernate/dialect/pagination/AbstractLimitHandler;
      10: return
}
