Compiled from "LogicalConnectionManagedImpl.java"
public class org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl extends org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor {
  private static final org.jboss.logging.Logger log;

  private final transient org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess jdbcConnectionAccess;

  private final transient org.hibernate.resource.jdbc.spi.JdbcObserver observer;

  private final transient org.hibernate.engine.jdbc.spi.SqlExceptionHelper sqlExceptionHelper;

  private final transient org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode connectionHandlingMode;

  private transient java.sql.Connection physicalConnection;

  private boolean closed;

  boolean initiallyAutoCommit;

  public org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl(org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess, org.hibernate.resource.jdbc.spi.JdbcSessionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #1                  // class org/hibernate/resource/jdbc/internal/ResourceRegistryStandardImpl
       6: dup
       7: invokespecial #2                  // Method org/hibernate/resource/jdbc/internal/ResourceRegistryStandardImpl."<init>":()V
      10: invokespecial #3                  // Method "<init>":(Lorg/hibernate/engine/jdbc/connections/spi/JdbcConnectionAccess;Lorg/hibernate/resource/jdbc/spi/JdbcSessionContext;Lorg/hibernate/resource/jdbc/ResourceRegistry;)V
      13: return

  public org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl(org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess, org.hibernate.resource.jdbc.spi.JdbcSessionContext, org.hibernate.resource.jdbc.ResourceRegistry);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/hibernate/resource/jdbc/internal/AbstractLogicalConnectionImplementor."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field jdbcConnectionAccess:Lorg/hibernate/engine/jdbc/connections/spi/JdbcConnectionAccess;
       9: aload_0
      10: aload_2
      11: invokeinterface #6,  1            // InterfaceMethod org/hibernate/resource/jdbc/spi/JdbcSessionContext.getObserver:()Lorg/hibernate/resource/jdbc/spi/JdbcObserver;
      16: putfield      #7                  // Field observer:Lorg/hibernate/resource/jdbc/spi/JdbcObserver;
      19: aload_0
      20: aload_3
      21: putfield      #8                  // Field resourceRegistry:Lorg/hibernate/resource/jdbc/ResourceRegistry;
      24: aload_0
      25: aload_0
      26: aload_2
      27: invokeinterface #9,  1            // InterfaceMethod org/hibernate/resource/jdbc/spi/JdbcSessionContext.getPhysicalConnectionHandlingMode:()Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
      32: aload_1
      33: invokespecial #10                 // Method determineConnectionHandlingMode:(Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;Lorg/hibernate/engine/jdbc/connections/spi/JdbcConnectionAccess;)Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
      36: putfield      #11                 // Field connectionHandlingMode:Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
      39: aload_0
      40: aload_2
      41: invokeinterface #12,  1           // InterfaceMethod org/hibernate/resource/jdbc/spi/JdbcSessionContext.getServiceRegistry:()Lorg/hibernate/service/ServiceRegistry;
      46: ldc           #13                 // class org/hibernate/engine/jdbc/spi/JdbcServices
      48: invokeinterface #14,  2           // InterfaceMethod org/hibernate/service/ServiceRegistry.getService:(Ljava/lang/Class;)Lorg/hibernate/service/Service;
      53: checkcast     #13                 // class org/hibernate/engine/jdbc/spi/JdbcServices
      56: invokeinterface #15,  1           // InterfaceMethod org/hibernate/engine/jdbc/spi/JdbcServices.getSqlExceptionHelper:()Lorg/hibernate/engine/jdbc/spi/SqlExceptionHelper;
      61: putfield      #16                 // Field sqlExceptionHelper:Lorg/hibernate/engine/jdbc/spi/SqlExceptionHelper;
      64: aload_0
      65: getfield      #11                 // Field connectionHandlingMode:Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
      68: invokevirtual #17                 // Method org/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode.getAcquisitionMode:()Lorg/hibernate/ConnectionAcquisitionMode;
      71: getstatic     #18                 // Field org/hibernate/ConnectionAcquisitionMode.IMMEDIATELY:Lorg/hibernate/ConnectionAcquisitionMode;
      74: if_acmpne     82
      77: aload_0
      78: invokespecial #19                 // Method acquireConnectionIfNeeded:()Ljava/sql/Connection;
      81: pop
      82: return

  private org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode determineConnectionHandlingMode(org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode, org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method org/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode.getReleaseMode:()Lorg/hibernate/ConnectionReleaseMode;
       4: getstatic     #21                 // Field org/hibernate/ConnectionReleaseMode.AFTER_STATEMENT:Lorg/hibernate/ConnectionReleaseMode;
       7: if_acmpne     23
      10: aload_2
      11: invokeinterface #22,  1           // InterfaceMethod org/hibernate/engine/jdbc/connections/spi/JdbcConnectionAccess.supportsAggressiveRelease:()Z
      16: ifne          23
      19: getstatic     #23                 // Field org/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode.DELAYED_ACQUISITION_AND_RELEASE_AFTER_TRANSACTION:Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
      22: areturn
      23: aload_1
      24: areturn

  private org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl(org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess, org.hibernate.resource.jdbc.spi.JdbcSessionContext, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #1                  // class org/hibernate/resource/jdbc/internal/ResourceRegistryStandardImpl
       6: dup
       7: invokespecial #2                  // Method org/hibernate/resource/jdbc/internal/ResourceRegistryStandardImpl."<init>":()V
      10: invokespecial #3                  // Method "<init>":(Lorg/hibernate/engine/jdbc/connections/spi/JdbcConnectionAccess;Lorg/hibernate/resource/jdbc/spi/JdbcSessionContext;Lorg/hibernate/resource/jdbc/ResourceRegistry;)V
      13: aload_0
      14: iload_3
      15: putfield      #24                 // Field closed:Z
      18: return

  private java.sql.Connection acquireConnectionIfNeeded();
    Code:
       0: aload_0
       1: getfield      #25                 // Field physicalConnection:Ljava/sql/Connection;
       4: ifnonnull     73
       7: aload_0
       8: getfield      #7                  // Field observer:Lorg/hibernate/resource/jdbc/spi/JdbcObserver;
      11: invokeinterface #26,  1           // InterfaceMethod org/hibernate/resource/jdbc/spi/JdbcObserver.jdbcConnectionAcquisitionStart:()V
      16: aload_0
      17: aload_0
      18: getfield      #5                  // Field jdbcConnectionAccess:Lorg/hibernate/engine/jdbc/connections/spi/JdbcConnectionAccess;
      21: invokeinterface #27,  1           // InterfaceMethod org/hibernate/engine/jdbc/connections/spi/JdbcConnectionAccess.obtainConnection:()Ljava/sql/Connection;
      26: putfield      #25                 // Field physicalConnection:Ljava/sql/Connection;
      29: aload_0
      30: getfield      #7                  // Field observer:Lorg/hibernate/resource/jdbc/spi/JdbcObserver;
      33: aload_0
      34: getfield      #25                 // Field physicalConnection:Ljava/sql/Connection;
      37: invokeinterface #28,  2           // InterfaceMethod org/hibernate/resource/jdbc/spi/JdbcObserver.jdbcConnectionAcquisitionEnd:(Ljava/sql/Connection;)V
      42: goto          73
      45: astore_1
      46: aload_0
      47: getfield      #16                 // Field sqlExceptionHelper:Lorg/hibernate/engine/jdbc/spi/SqlExceptionHelper;
      50: aload_1
      51: ldc           #30                 // String Unable to acquire JDBC Connection
      53: invokevirtual #31                 // Method org/hibernate/engine/jdbc/spi/SqlExceptionHelper.convert:(Ljava/sql/SQLException;Ljava/lang/String;)Lorg/hibernate/JDBCException;
      56: athrow
      57: astore_2
      58: aload_0
      59: getfield      #7                  // Field observer:Lorg/hibernate/resource/jdbc/spi/JdbcObserver;
      62: aload_0
      63: getfield      #25                 // Field physicalConnection:Ljava/sql/Connection;
      66: invokeinterface #28,  2           // InterfaceMethod org/hibernate/resource/jdbc/spi/JdbcObserver.jdbcConnectionAcquisitionEnd:(Ljava/sql/Connection;)V
      71: aload_2
      72: athrow
      73: aload_0
      74: getfield      #25                 // Field physicalConnection:Ljava/sql/Connection;
      77: areturn
    Exception table:
       from    to  target type
          16    29    45   Class java/sql/SQLException
          16    29    57   any
          45    58    57   any

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #24                 // Field closed:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode getConnectionHandlingMode();
    Code:
       0: aload_0
       1: getfield      #11                 // Field connectionHandlingMode:Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
       4: areturn

  public boolean isPhysicallyConnected();
    Code:
       0: aload_0
       1: getfield      #25                 // Field physicalConnection:Ljava/sql/Connection;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.sql.Connection getPhysicalConnection();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method errorIfClosed:()V
       4: aload_0
       5: invokespecial #19                 // Method acquireConnectionIfNeeded:()Ljava/sql/Connection;
       8: areturn

  public void afterStatement();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method org/hibernate/resource/jdbc/internal/AbstractLogicalConnectionImplementor.afterStatement:()V
       4: aload_0
       5: getfield      #11                 // Field connectionHandlingMode:Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
       8: invokevirtual #20                 // Method org/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode.getReleaseMode:()Lorg/hibernate/ConnectionReleaseMode;
      11: getstatic     #21                 // Field org/hibernate/ConnectionReleaseMode.AFTER_STATEMENT:Lorg/hibernate/ConnectionReleaseMode;
      14: if_acmpne     52
      17: aload_0
      18: invokevirtual #34                 // Method getResourceRegistry:()Lorg/hibernate/resource/jdbc/ResourceRegistry;
      21: invokeinterface #35,  1           // InterfaceMethod org/hibernate/resource/jdbc/ResourceRegistry.hasRegisteredResources:()Z
      26: ifeq          40
      29: getstatic     #36                 // Field log:Lorg/jboss/logging/Logger;
      32: ldc           #37                 // String Skipping aggressive release of JDBC Connection afterQuery-statement due to held resources
      34: invokevirtual #38                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      37: goto          52
      40: getstatic     #36                 // Field log:Lorg/jboss/logging/Logger;
      43: ldc           #39                 // String Initiating JDBC connection release from afterStatement
      45: invokevirtual #38                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      48: aload_0
      49: invokespecial #40                 // Method releaseConnection:()V
      52: return

  public void afterTransaction();
    Code:
       0: aload_0
       1: invokespecial #41                 // Method org/hibernate/resource/jdbc/internal/AbstractLogicalConnectionImplementor.afterTransaction:()V
       4: aload_0
       5: getfield      #11                 // Field connectionHandlingMode:Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
       8: invokevirtual #20                 // Method org/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode.getReleaseMode:()Lorg/hibernate/ConnectionReleaseMode;
      11: getstatic     #42                 // Field org/hibernate/ConnectionReleaseMode.ON_CLOSE:Lorg/hibernate/ConnectionReleaseMode;
      14: if_acmpeq     29
      17: getstatic     #36                 // Field log:Lorg/jboss/logging/Logger;
      20: ldc           #43                 // String Initiating JDBC connection release from afterTransaction
      22: invokevirtual #38                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      25: aload_0
      26: invokespecial #40                 // Method releaseConnection:()V
      29: return

  public java.sql.Connection manualDisconnect();
    Code:
       0: aload_0
       1: getfield      #24                 // Field closed:Z
       4: ifeq          17
       7: new           #44                 // class org/hibernate/ResourceClosedException
      10: dup
      11: ldc           #45                 // String Logical connection is closed
      13: invokespecial #46                 // Method org/hibernate/ResourceClosedException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #25                 // Field physicalConnection:Ljava/sql/Connection;
      21: astore_1
      22: aload_0
      23: invokespecial #40                 // Method releaseConnection:()V
      26: aload_1
      27: areturn

  public void manualReconnect(java.sql.Connection);
    Code:
       0: aload_0
       1: getfield      #24                 // Field closed:Z
       4: ifeq          17
       7: new           #44                 // class org/hibernate/ResourceClosedException
      10: dup
      11: ldc           #45                 // String Logical connection is closed
      13: invokespecial #46                 // Method org/hibernate/ResourceClosedException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: new           #47                 // class java/lang/IllegalStateException
      20: dup
      21: ldc           #48                 // String Cannot manually reconnect unless Connection was originally supplied by user
      23: invokespecial #49                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      26: athrow

  private void releaseConnection();
    Code:
       0: aload_0
       1: getfield      #25                 // Field physicalConnection:Ljava/sql/Connection;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #7                  // Field observer:Lorg/hibernate/resource/jdbc/spi/JdbcObserver;
      12: invokeinterface #50,  1           // InterfaceMethod org/hibernate/resource/jdbc/spi/JdbcObserver.jdbcConnectionReleaseStart:()V
      17: aload_0
      18: getfield      #25                 // Field physicalConnection:Ljava/sql/Connection;
      21: invokeinterface #51,  1           // InterfaceMethod java/sql/Connection.isClosed:()Z
      26: ifne          40
      29: aload_0
      30: getfield      #16                 // Field sqlExceptionHelper:Lorg/hibernate/engine/jdbc/spi/SqlExceptionHelper;
      33: aload_0
      34: getfield      #25                 // Field physicalConnection:Ljava/sql/Connection;
      37: invokevirtual #52                 // Method org/hibernate/engine/jdbc/spi/SqlExceptionHelper.logAndClearWarnings:(Ljava/sql/Connection;)V
      40: aload_0
      41: getfield      #5                  // Field jdbcConnectionAccess:Lorg/hibernate/engine/jdbc/connections/spi/JdbcConnectionAccess;
      44: aload_0
      45: getfield      #25                 // Field physicalConnection:Ljava/sql/Connection;
      48: invokeinterface #53,  2           // InterfaceMethod org/hibernate/engine/jdbc/connections/spi/JdbcConnectionAccess.releaseConnection:(Ljava/sql/Connection;)V
      53: aload_0
      54: getfield      #7                  // Field observer:Lorg/hibernate/resource/jdbc/spi/JdbcObserver;
      57: invokeinterface #54,  1           // InterfaceMethod org/hibernate/resource/jdbc/spi/JdbcObserver.jdbcConnectionReleaseEnd:()V
      62: aload_0
      63: aconst_null
      64: putfield      #25                 // Field physicalConnection:Ljava/sql/Connection;
      67: aload_0
      68: invokevirtual #34                 // Method getResourceRegistry:()Lorg/hibernate/resource/jdbc/ResourceRegistry;
      71: invokeinterface #55,  1           // InterfaceMethod org/hibernate/resource/jdbc/ResourceRegistry.releaseResources:()V
      76: goto          117
      79: astore_1
      80: aload_0
      81: getfield      #16                 // Field sqlExceptionHelper:Lorg/hibernate/engine/jdbc/spi/SqlExceptionHelper;
      84: aload_1
      85: ldc           #56                 // String Unable to release JDBC Connection
      87: invokevirtual #31                 // Method org/hibernate/engine/jdbc/spi/SqlExceptionHelper.convert:(Ljava/sql/SQLException;Ljava/lang/String;)Lorg/hibernate/JDBCException;
      90: athrow
      91: astore_2
      92: aload_0
      93: getfield      #7                  // Field observer:Lorg/hibernate/resource/jdbc/spi/JdbcObserver;
      96: invokeinterface #54,  1           // InterfaceMethod org/hibernate/resource/jdbc/spi/JdbcObserver.jdbcConnectionReleaseEnd:()V
     101: aload_0
     102: aconst_null
     103: putfield      #25                 // Field physicalConnection:Ljava/sql/Connection;
     106: aload_0
     107: invokevirtual #34                 // Method getResourceRegistry:()Lorg/hibernate/resource/jdbc/ResourceRegistry;
     110: invokeinterface #55,  1           // InterfaceMethod org/hibernate/resource/jdbc/ResourceRegistry.releaseResources:()V
     115: aload_2
     116: athrow
     117: return
    Exception table:
       from    to  target type
          17    53    79   Class java/sql/SQLException
          17    53    91   any
          79    92    91   any

  public org.hibernate.resource.jdbc.spi.LogicalConnectionImplementor makeShareableCopy();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method errorIfClosed:()V
       4: aconst_null
       5: areturn

  public void serialize(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #24                 // Field closed:Z
       5: invokevirtual #57                 // Method java/io/ObjectOutputStream.writeBoolean:(Z)V
       8: return

  public static org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl deserialize(java.io.ObjectInputStream, org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess, org.hibernate.resource.jdbc.spi.JdbcSessionContext) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method java/io/ObjectInputStream.readBoolean:()Z
       4: istore_3
       5: new           #59                 // class org/hibernate/resource/jdbc/internal/LogicalConnectionManagedImpl
       8: dup
       9: aload_1
      10: aload_2
      11: iload_3
      12: invokespecial #60                 // Method "<init>":(Lorg/hibernate/engine/jdbc/connections/spi/JdbcConnectionAccess;Lorg/hibernate/resource/jdbc/spi/JdbcSessionContext;Z)V
      15: areturn

  public java.sql.Connection close();
    Code:
       0: aload_0
       1: getfield      #24                 // Field closed:Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: invokevirtual #34                 // Method getResourceRegistry:()Lorg/hibernate/resource/jdbc/ResourceRegistry;
      13: invokeinterface #55,  1           // InterfaceMethod org/hibernate/resource/jdbc/ResourceRegistry.releaseResources:()V
      18: getstatic     #36                 // Field log:Lorg/jboss/logging/Logger;
      21: ldc           #61                 // String Closing logical connection
      23: invokevirtual #62                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      26: aload_0
      27: invokespecial #40                 // Method releaseConnection:()V
      30: aload_0
      31: iconst_1
      32: putfield      #24                 // Field closed:Z
      35: getstatic     #36                 // Field log:Lorg/jboss/logging/Logger;
      38: ldc           #63                 // String Logical connection closed
      40: invokevirtual #62                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      43: goto          62
      46: astore_1
      47: aload_0
      48: iconst_1
      49: putfield      #24                 // Field closed:Z
      52: getstatic     #36                 // Field log:Lorg/jboss/logging/Logger;
      55: ldc           #63                 // String Logical connection closed
      57: invokevirtual #62                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      60: aload_1
      61: athrow
      62: aconst_null
      63: areturn
    Exception table:
       from    to  target type
          26    30    46   any

  protected java.sql.Connection getConnectionForTransactionManagement();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method getPhysicalConnection:()Ljava/sql/Connection;
       4: areturn

  public void begin();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #65                 // Method getConnectionForTransactionManagement:()Ljava/sql/Connection;
       5: invokestatic  #66                 // Method determineInitialAutoCommitMode:(Ljava/sql/Connection;)Z
       8: putfield      #67                 // Field initiallyAutoCommit:Z
      11: aload_0
      12: invokespecial #68                 // Method org/hibernate/resource/jdbc/internal/AbstractLogicalConnectionImplementor.begin:()V
      15: return

  protected void afterCompletion();
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method afterTransaction:()V
       4: aload_0
       5: aload_0
       6: getfield      #67                 // Field initiallyAutoCommit:Z
       9: invokevirtual #70                 // Method resetConnection:(Z)V
      12: aload_0
      13: iconst_0
      14: putfield      #67                 // Field initiallyAutoCommit:Z
      17: return

  static {};
    Code:
       0: ldc           #59                 // class org/hibernate/resource/jdbc/internal/LogicalConnectionManagedImpl
       2: invokestatic  #71                 // Method org/jboss/logging/Logger.getLogger:(Ljava/lang/Class;)Lorg/jboss/logging/Logger;
       5: putstatic     #36                 // Field log:Lorg/jboss/logging/Logger;
       8: return
}
