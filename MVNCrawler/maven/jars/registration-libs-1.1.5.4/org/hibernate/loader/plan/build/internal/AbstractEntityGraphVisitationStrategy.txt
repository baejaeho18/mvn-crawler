Compiled from "AbstractEntityGraphVisitationStrategy.java"
public abstract class org.hibernate.loader.plan.build.internal.AbstractEntityGraphVisitationStrategy extends org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy {
  private static final org.jboss.logging.Logger LOG;

  protected static final org.hibernate.engine.FetchStrategy DEFAULT_EAGER;

  protected static final org.hibernate.engine.FetchStrategy DEFAULT_LAZY;

  protected final org.hibernate.engine.spi.LoadQueryInfluencers loadQueryInfluencers;

  private final java.util.ArrayDeque<org.hibernate.graph.spi.GraphNodeImplementor> graphStack;

  private final java.util.ArrayDeque<org.hibernate.graph.spi.AttributeNodeImplementor> attributeStack;

  private final java.util.ArrayDeque<java.util.Map<java.lang.String, org.hibernate.graph.spi.AttributeNodeImplementor>> attributeMapStack;

  private org.hibernate.loader.plan.spi.EntityReturn rootEntityReturn;

  private final org.hibernate.LockMode lockMode;

  private static final org.hibernate.graph.spi.AttributeNodeImplementor NON_EXIST_ATTRIBUTE_NODE;

  private static final org.hibernate.graph.spi.GraphNodeImplementor NON_EXIST_SUBGRAPH_NODE;

  protected org.hibernate.loader.plan.build.internal.AbstractEntityGraphVisitationStrategy(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers, org.hibernate.LockMode);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/hibernate/loader/plan/build/internal/AbstractLoadPlanBuildingAssociationVisitationStrategy."<init>":(Lorg/hibernate/engine/spi/SessionFactoryImplementor;)V
       5: aload_0
       6: new           #2                  // class java/util/ArrayDeque
       9: dup
      10: invokespecial #3                  // Method java/util/ArrayDeque."<init>":()V
      13: putfield      #4                  // Field graphStack:Ljava/util/ArrayDeque;
      16: aload_0
      17: new           #2                  // class java/util/ArrayDeque
      20: dup
      21: invokespecial #3                  // Method java/util/ArrayDeque."<init>":()V
      24: putfield      #5                  // Field attributeStack:Ljava/util/ArrayDeque;
      27: aload_0
      28: new           #2                  // class java/util/ArrayDeque
      31: dup
      32: invokespecial #3                  // Method java/util/ArrayDeque."<init>":()V
      35: putfield      #6                  // Field attributeMapStack:Ljava/util/ArrayDeque;
      38: aload_0
      39: aload_2
      40: putfield      #7                  // Field loadQueryInfluencers:Lorg/hibernate/engine/spi/LoadQueryInfluencers;
      43: aload_0
      44: aload_3
      45: putfield      #8                  // Field lockMode:Lorg/hibernate/LockMode;
      48: return

  public void start();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method org/hibernate/loader/plan/build/internal/AbstractLoadPlanBuildingAssociationVisitationStrategy.start:()V
       4: aload_0
       5: getfield      #4                  // Field graphStack:Ljava/util/ArrayDeque;
       8: aload_0
       9: invokevirtual #10                 // Method getRootEntityGraph:()Lorg/hibernate/graph/spi/GraphNodeImplementor;
      12: invokevirtual #11                 // Method java/util/ArrayDeque.addLast:(Ljava/lang/Object;)V
      15: return

  public void finish();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method org/hibernate/loader/plan/build/internal/AbstractLoadPlanBuildingAssociationVisitationStrategy.finish:()V
       4: aload_0
       5: getfield      #4                  // Field graphStack:Ljava/util/ArrayDeque;
       8: invokevirtual #13                 // Method java/util/ArrayDeque.removeLast:()Ljava/lang/Object;
      11: pop
      12: aload_0
      13: getfield      #4                  // Field graphStack:Ljava/util/ArrayDeque;
      16: invokevirtual #14                 // Method java/util/ArrayDeque.isEmpty:()Z
      19: ifeq          42
      22: aload_0
      23: getfield      #5                  // Field attributeStack:Ljava/util/ArrayDeque;
      26: invokevirtual #14                 // Method java/util/ArrayDeque.isEmpty:()Z
      29: ifeq          42
      32: aload_0
      33: getfield      #6                  // Field attributeMapStack:Ljava/util/ArrayDeque;
      36: invokevirtual #14                 // Method java/util/ArrayDeque.isEmpty:()Z
      39: ifne          52
      42: new           #15                 // class org/hibernate/persister/walking/spi/WalkingException
      45: dup
      46: ldc           #16                 // String Internal stack error
      48: invokespecial #17                 // Method org/hibernate/persister/walking/spi/WalkingException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: return

  public void startingEntity(org.hibernate.persister.walking.spi.EntityDefinition);
    Code:
       0: aload_0
       1: getfield      #6                  // Field attributeMapStack:Ljava/util/ArrayDeque;
       4: aload_0
       5: invokevirtual #18                 // Method buildAttributeNodeMap:()Ljava/util/Map;
       8: invokevirtual #11                 // Method java/util/ArrayDeque.addLast:(Ljava/lang/Object;)V
      11: aload_0
      12: aload_1
      13: invokespecial #19                 // Method org/hibernate/loader/plan/build/internal/AbstractLoadPlanBuildingAssociationVisitationStrategy.startingEntity:(Lorg/hibernate/persister/walking/spi/EntityDefinition;)V
      16: return

  protected java.util.Map<java.lang.String, org.hibernate.graph.spi.AttributeNodeImplementor> buildAttributeNodeMap();
    Code:
       0: aload_0
       1: getfield      #4                  // Field graphStack:Ljava/util/ArrayDeque;
       4: invokevirtual #20                 // Method java/util/ArrayDeque.peekLast:()Ljava/lang/Object;
       7: checkcast     #21                 // class org/hibernate/graph/spi/GraphNodeImplementor
      10: astore_1
      11: aload_1
      12: invokeinterface #22,  1           // InterfaceMethod org/hibernate/graph/spi/GraphNodeImplementor.attributeImplementorNodes:()Ljava/util/List;
      17: astore_2
      18: aload_2
      19: invokeinterface #23,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      24: ifeq          33
      27: invokestatic  #24                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      30: goto          46
      33: new           #25                 // class java/util/HashMap
      36: dup
      37: aload_2
      38: invokeinterface #26,  1           // InterfaceMethod java/util/List.size:()I
      43: invokespecial #27                 // Method java/util/HashMap."<init>":(I)V
      46: astore_3
      47: aload_2
      48: invokeinterface #28,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      53: astore        4
      55: aload         4
      57: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      62: ifeq          96
      65: aload         4
      67: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      72: checkcast     #31                 // class org/hibernate/graph/spi/AttributeNodeImplementor
      75: astore        5
      77: aload_3
      78: aload         5
      80: invokeinterface #32,  1           // InterfaceMethod org/hibernate/graph/spi/AttributeNodeImplementor.getAttributeName:()Ljava/lang/String;
      85: aload         5
      87: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      92: pop
      93: goto          55
      96: aload_3
      97: areturn

  public void finishingEntity(org.hibernate.persister.walking.spi.EntityDefinition);
    Code:
       0: aload_0
       1: getfield      #6                  // Field attributeMapStack:Ljava/util/ArrayDeque;
       4: invokevirtual #13                 // Method java/util/ArrayDeque.removeLast:()Ljava/lang/Object;
       7: pop
       8: aload_0
       9: aload_1
      10: invokespecial #34                 // Method org/hibernate/loader/plan/build/internal/AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingEntity:(Lorg/hibernate/persister/walking/spi/EntityDefinition;)V
      13: return

  public boolean startingAttribute(org.hibernate.persister.walking.spi.AttributeDefinition);
    Code:
       0: aload_0
       1: getfield      #6                  // Field attributeMapStack:Ljava/util/ArrayDeque;
       4: invokevirtual #20                 // Method java/util/ArrayDeque.peekLast:()Ljava/lang/Object;
       7: checkcast     #35                 // class java/util/Map
      10: astore_2
      11: aload_1
      12: invokeinterface #36,  1           // InterfaceMethod org/hibernate/persister/walking/spi/AttributeDefinition.getName:()Ljava/lang/String;
      17: astore_3
      18: getstatic     #37                 // Field NON_EXIST_ATTRIBUTE_NODE:Lorg/hibernate/graph/spi/AttributeNodeImplementor;
      21: astore        4
      23: getstatic     #38                 // Field NON_EXIST_SUBGRAPH_NODE:Lorg/hibernate/graph/spi/GraphNodeImplementor;
      26: astore        5
      28: aload_2
      29: aload_3
      30: invokeinterface #39,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      35: ifeq          108
      38: aload_2
      39: aload_3
      40: invokeinterface #40,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #31                 // class org/hibernate/graph/spi/AttributeNodeImplementor
      48: astore        4
      50: aload         4
      52: invokeinterface #41,  1           // InterfaceMethod org/hibernate/graph/spi/AttributeNodeImplementor.getSubgraphs:()Ljava/util/Map;
      57: astore        6
      59: aload_1
      60: invokeinterface #42,  1           // InterfaceMethod org/hibernate/persister/walking/spi/AttributeDefinition.getType:()Lorg/hibernate/type/Type;
      65: invokeinterface #43,  1           // InterfaceMethod org/hibernate/type/Type.getReturnedClass:()Ljava/lang/Class;
      70: astore        7
      72: aload         6
      74: invokeinterface #44,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      79: ifne          108
      82: aload         6
      84: aload         7
      86: invokeinterface #39,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      91: ifeq          108
      94: aload         6
      96: aload         7
      98: invokeinterface #40,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     103: checkcast     #21                 // class org/hibernate/graph/spi/GraphNodeImplementor
     106: astore        5
     108: aload_0
     109: getfield      #5                  // Field attributeStack:Ljava/util/ArrayDeque;
     112: aload         4
     114: invokevirtual #11                 // Method java/util/ArrayDeque.addLast:(Ljava/lang/Object;)V
     117: aload_0
     118: getfield      #4                  // Field graphStack:Ljava/util/ArrayDeque;
     121: aload         5
     123: invokevirtual #11                 // Method java/util/ArrayDeque.addLast:(Ljava/lang/Object;)V
     126: aload_0
     127: aload_1
     128: invokespecial #45                 // Method org/hibernate/loader/plan/build/internal/AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute:(Lorg/hibernate/persister/walking/spi/AttributeDefinition;)Z
     131: ireturn

  public void finishingAttribute(org.hibernate.persister.walking.spi.AttributeDefinition);
    Code:
       0: aload_0
       1: getfield      #5                  // Field attributeStack:Ljava/util/ArrayDeque;
       4: invokevirtual #13                 // Method java/util/ArrayDeque.removeLast:()Ljava/lang/Object;
       7: pop
       8: aload_0
       9: getfield      #4                  // Field graphStack:Ljava/util/ArrayDeque;
      12: invokevirtual #13                 // Method java/util/ArrayDeque.removeLast:()Ljava/lang/Object;
      15: pop
      16: aload_0
      17: aload_1
      18: invokespecial #46                 // Method org/hibernate/loader/plan/build/internal/AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute:(Lorg/hibernate/persister/walking/spi/AttributeDefinition;)V
      21: return

  public void startingCollectionElements(org.hibernate.persister.walking.spi.CollectionElementDefinition);
    Code:
       0: aload_0
       1: getfield      #5                  // Field attributeStack:Ljava/util/ArrayDeque;
       4: invokevirtual #20                 // Method java/util/ArrayDeque.peekLast:()Ljava/lang/Object;
       7: checkcast     #31                 // class org/hibernate/graph/spi/AttributeNodeImplementor
      10: astore_2
      11: getstatic     #38                 // Field NON_EXIST_SUBGRAPH_NODE:Lorg/hibernate/graph/spi/GraphNodeImplementor;
      14: astore_3
      15: aload_2
      16: invokeinterface #41,  1           // InterfaceMethod org/hibernate/graph/spi/AttributeNodeImplementor.getSubgraphs:()Ljava/util/Map;
      21: astore        4
      23: aload_1
      24: invokeinterface #47,  1           // InterfaceMethod org/hibernate/persister/walking/spi/CollectionElementDefinition.getType:()Lorg/hibernate/type/Type;
      29: invokeinterface #43,  1           // InterfaceMethod org/hibernate/type/Type.getReturnedClass:()Ljava/lang/Class;
      34: astore        5
      36: aload         4
      38: invokeinterface #44,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      43: ifne          71
      46: aload         4
      48: aload         5
      50: invokeinterface #39,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      55: ifeq          71
      58: aload         4
      60: aload         5
      62: invokeinterface #40,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      67: checkcast     #21                 // class org/hibernate/graph/spi/GraphNodeImplementor
      70: astore_3
      71: aload_0
      72: getfield      #4                  // Field graphStack:Ljava/util/ArrayDeque;
      75: aload_3
      76: invokevirtual #11                 // Method java/util/ArrayDeque.addLast:(Ljava/lang/Object;)V
      79: aload_0
      80: aload_1
      81: invokespecial #48                 // Method org/hibernate/loader/plan/build/internal/AbstractLoadPlanBuildingAssociationVisitationStrategy.startingCollectionElements:(Lorg/hibernate/persister/walking/spi/CollectionElementDefinition;)V
      84: return

  public void finishingCollectionElements(org.hibernate.persister.walking.spi.CollectionElementDefinition);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #49                 // Method org/hibernate/loader/plan/build/internal/AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingCollectionElements:(Lorg/hibernate/persister/walking/spi/CollectionElementDefinition;)V
       5: aload_0
       6: getfield      #4                  // Field graphStack:Ljava/util/ArrayDeque;
       9: invokevirtual #13                 // Method java/util/ArrayDeque.removeLast:()Ljava/lang/Object;
      12: pop
      13: return

  public void startingCollectionIndex(org.hibernate.persister.walking.spi.CollectionIndexDefinition);
    Code:
       0: aload_0
       1: getfield      #5                  // Field attributeStack:Ljava/util/ArrayDeque;
       4: invokevirtual #20                 // Method java/util/ArrayDeque.peekLast:()Ljava/lang/Object;
       7: checkcast     #31                 // class org/hibernate/graph/spi/AttributeNodeImplementor
      10: astore_2
      11: getstatic     #38                 // Field NON_EXIST_SUBGRAPH_NODE:Lorg/hibernate/graph/spi/GraphNodeImplementor;
      14: astore_3
      15: aload_2
      16: invokeinterface #50,  1           // InterfaceMethod org/hibernate/graph/spi/AttributeNodeImplementor.getKeySubgraphs:()Ljava/util/Map;
      21: astore        4
      23: aload_1
      24: invokeinterface #51,  1           // InterfaceMethod org/hibernate/persister/walking/spi/CollectionIndexDefinition.getType:()Lorg/hibernate/type/Type;
      29: invokeinterface #43,  1           // InterfaceMethod org/hibernate/type/Type.getReturnedClass:()Ljava/lang/Class;
      34: astore        5
      36: aload         4
      38: invokeinterface #44,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      43: ifne          71
      46: aload         4
      48: aload         5
      50: invokeinterface #39,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      55: ifeq          71
      58: aload         4
      60: aload         5
      62: invokeinterface #40,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      67: checkcast     #21                 // class org/hibernate/graph/spi/GraphNodeImplementor
      70: astore_3
      71: aload_0
      72: getfield      #4                  // Field graphStack:Ljava/util/ArrayDeque;
      75: aload_3
      76: invokevirtual #11                 // Method java/util/ArrayDeque.addLast:(Ljava/lang/Object;)V
      79: aload_0
      80: aload_1
      81: invokespecial #52                 // Method org/hibernate/loader/plan/build/internal/AbstractLoadPlanBuildingAssociationVisitationStrategy.startingCollectionIndex:(Lorg/hibernate/persister/walking/spi/CollectionIndexDefinition;)V
      84: return

  public void finishingCollectionIndex(org.hibernate.persister.walking.spi.CollectionIndexDefinition);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #53                 // Method org/hibernate/loader/plan/build/internal/AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingCollectionIndex:(Lorg/hibernate/persister/walking/spi/CollectionIndexDefinition;)V
       5: aload_0
       6: getfield      #4                  // Field graphStack:Ljava/util/ArrayDeque;
       9: invokevirtual #13                 // Method java/util/ArrayDeque.removeLast:()Ljava/lang/Object;
      12: pop
      13: return

  protected boolean supportsRootCollectionReturns();
    Code:
       0: iconst_0
       1: ireturn

  protected void addRootReturn(org.hibernate.loader.plan.spi.Return);
    Code:
       0: aload_0
       1: getfield      #54                 // Field rootEntityReturn:Lorg/hibernate/loader/plan/spi/EntityReturn;
       4: ifnull        17
       7: new           #55                 // class org/hibernate/HibernateException
      10: dup
      11: ldc           #56                 // String Root return already identified
      13: invokespecial #57                 // Method org/hibernate/HibernateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: instanceof    #58                 // class org/hibernate/loader/plan/spi/EntityReturn
      21: ifne          34
      24: new           #55                 // class org/hibernate/HibernateException
      27: dup
      28: ldc           #59                 // String Load entity graph only supports EntityReturn
      30: invokespecial #57                 // Method org/hibernate/HibernateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: aload_1
      36: checkcast     #58                 // class org/hibernate/loader/plan/spi/EntityReturn
      39: putfield      #54                 // Field rootEntityReturn:Lorg/hibernate/loader/plan/spi/EntityReturn;
      42: return

  protected org.hibernate.engine.FetchStrategy determineFetchStrategy(org.hibernate.persister.walking.spi.AssociationAttributeDefinition);
    Code:
       0: aload_0
       1: getfield      #5                  // Field attributeStack:Ljava/util/ArrayDeque;
       4: invokevirtual #20                 // Method java/util/ArrayDeque.peekLast:()Ljava/lang/Object;
       7: getstatic     #37                 // Field NON_EXIST_ATTRIBUTE_NODE:Lorg/hibernate/graph/spi/AttributeNodeImplementor;
      10: if_acmpeq     19
      13: getstatic     #60                 // Field DEFAULT_EAGER:Lorg/hibernate/engine/FetchStrategy;
      16: goto          24
      19: aload_0
      20: aload_1
      21: invokevirtual #61                 // Method resolveImplicitFetchStrategyFromEntityGraph:(Lorg/hibernate/persister/walking/spi/AssociationAttributeDefinition;)Lorg/hibernate/engine/FetchStrategy;
      24: areturn

  protected abstract org.hibernate.engine.FetchStrategy resolveImplicitFetchStrategyFromEntityGraph(org.hibernate.persister.walking.spi.AssociationAttributeDefinition);

  protected org.hibernate.engine.FetchStrategy adjustJoinFetchIfNeeded(org.hibernate.persister.walking.spi.AssociationAttributeDefinition, org.hibernate.engine.FetchStrategy);
    Code:
       0: aload_0
       1: getfield      #8                  // Field lockMode:Lorg/hibernate/LockMode;
       4: getstatic     #62                 // Field org/hibernate/LockMode.READ:Lorg/hibernate/LockMode;
       7: invokevirtual #63                 // Method org/hibernate/LockMode.greaterThan:(Lorg/hibernate/LockMode;)Z
      10: ifeq          28
      13: new           #64                 // class org/hibernate/engine/FetchStrategy
      16: dup
      17: aload_2
      18: invokevirtual #65                 // Method org/hibernate/engine/FetchStrategy.getTiming:()Lorg/hibernate/engine/FetchTiming;
      21: getstatic     #66                 // Field org/hibernate/engine/FetchStyle.SELECT:Lorg/hibernate/engine/FetchStyle;
      24: invokespecial #67                 // Method org/hibernate/engine/FetchStrategy."<init>":(Lorg/hibernate/engine/FetchTiming;Lorg/hibernate/engine/FetchStyle;)V
      27: areturn
      28: aload_0
      29: invokevirtual #68                 // Method sessionFactory:()Lorg/hibernate/engine/spi/SessionFactoryImplementor;
      32: invokeinterface #69,  1           // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getSettings:()Lorg/hibernate/cfg/Settings;
      37: invokevirtual #70                 // Method org/hibernate/cfg/Settings.getMaximumFetchDepth:()Ljava/lang/Integer;
      40: astore_3
      41: aload_3
      42: ifnull        71
      45: aload_0
      46: invokevirtual #71                 // Method currentDepth:()I
      49: aload_3
      50: invokevirtual #72                 // Method java/lang/Integer.intValue:()I
      53: if_icmple     71
      56: new           #64                 // class org/hibernate/engine/FetchStrategy
      59: dup
      60: aload_2
      61: invokevirtual #65                 // Method org/hibernate/engine/FetchStrategy.getTiming:()Lorg/hibernate/engine/FetchTiming;
      64: getstatic     #66                 // Field org/hibernate/engine/FetchStyle.SELECT:Lorg/hibernate/engine/FetchStyle;
      67: invokespecial #67                 // Method org/hibernate/engine/FetchStrategy."<init>":(Lorg/hibernate/engine/FetchTiming;Lorg/hibernate/engine/FetchStyle;)V
      70: areturn
      71: aload_1
      72: invokeinterface #73,  1           // InterfaceMethod org/hibernate/persister/walking/spi/AssociationAttributeDefinition.getType:()Lorg/hibernate/type/AssociationType;
      77: invokeinterface #74,  1           // InterfaceMethod org/hibernate/type/AssociationType.isCollectionType:()Z
      82: ifeq          107
      85: aload_0
      86: invokevirtual #75                 // Method isTooManyCollections:()Z
      89: ifeq          107
      92: new           #64                 // class org/hibernate/engine/FetchStrategy
      95: dup
      96: aload_2
      97: invokevirtual #65                 // Method org/hibernate/engine/FetchStrategy.getTiming:()Lorg/hibernate/engine/FetchTiming;
     100: getstatic     #66                 // Field org/hibernate/engine/FetchStyle.SELECT:Lorg/hibernate/engine/FetchStyle;
     103: invokespecial #67                 // Method org/hibernate/engine/FetchStrategy."<init>":(Lorg/hibernate/engine/FetchTiming;Lorg/hibernate/engine/FetchStyle;)V
     106: areturn
     107: aload_2
     108: areturn

  public org.hibernate.loader.plan.spi.LoadPlan buildLoadPlan();
    Code:
       0: getstatic     #76                 // Field LOG:Lorg/jboss/logging/Logger;
       3: ldc           #77                 // String Building LoadPlan...
       5: invokevirtual #78                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
       8: new           #79                 // class org/hibernate/loader/plan/build/internal/LoadPlanImpl
      11: dup
      12: aload_0
      13: getfield      #54                 // Field rootEntityReturn:Lorg/hibernate/loader/plan/spi/EntityReturn;
      16: aload_0
      17: invokevirtual #80                 // Method getQuerySpaces:()Lorg/hibernate/loader/plan/build/spi/ExpandingQuerySpaces;
      20: invokespecial #81                 // Method org/hibernate/loader/plan/build/internal/LoadPlanImpl."<init>":(Lorg/hibernate/loader/plan/spi/EntityReturn;Lorg/hibernate/loader/plan/spi/QuerySpaces;)V
      23: areturn

  protected abstract org.hibernate.graph.spi.GraphNodeImplementor getRootEntityGraph();

  public void foundCircularAssociation(org.hibernate.persister.walking.spi.AssociationAttributeDefinition);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #82                 // Method determineFetchStrategy:(Lorg/hibernate/persister/walking/spi/AssociationAttributeDefinition;)Lorg/hibernate/engine/FetchStrategy;
       5: astore_2
       6: aload_2
       7: invokevirtual #83                 // Method org/hibernate/engine/FetchStrategy.getStyle:()Lorg/hibernate/engine/FetchStyle;
      10: getstatic     #84                 // Field org/hibernate/engine/FetchStyle.JOIN:Lorg/hibernate/engine/FetchStyle;
      13: if_acmpeq     17
      16: return
      17: aload_0
      18: getfield      #4                  // Field graphStack:Ljava/util/ArrayDeque;
      21: invokevirtual #20                 // Method java/util/ArrayDeque.peekLast:()Ljava/lang/Object;
      24: checkcast     #21                 // class org/hibernate/graph/spi/GraphNodeImplementor
      27: astore_3
      28: aload_1
      29: invokeinterface #85,  1           // InterfaceMethod org/hibernate/persister/walking/spi/AssociationAttributeDefinition.getAssociationNature:()Lorg/hibernate/persister/walking/spi/AssociationAttributeDefinition$AssociationNature;
      34: getstatic     #86                 // Field org/hibernate/persister/walking/spi/AssociationAttributeDefinition$AssociationNature.COLLECTION:Lorg/hibernate/persister/walking/spi/AssociationAttributeDefinition$AssociationNature;
      37: if_acmpne     77
      40: aload_3
      41: getstatic     #38                 // Field NON_EXIST_SUBGRAPH_NODE:Lorg/hibernate/graph/spi/GraphNodeImplementor;
      44: invokevirtual #87                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifne          77
      50: aload_3
      51: aload_1
      52: invokeinterface #88,  1           // InterfaceMethod org/hibernate/persister/walking/spi/AssociationAttributeDefinition.getName:()Ljava/lang/String;
      57: invokeinterface #89,  2           // InterfaceMethod org/hibernate/graph/spi/GraphNodeImplementor.containsAttribute:(Ljava/lang/String;)Z
      62: ifeq          77
      65: aload_0
      66: invokevirtual #90                 // Method currentSource:()Lorg/hibernate/loader/plan/build/spi/ExpandingFetchSource;
      69: aload_1
      70: aload_2
      71: invokeinterface #91,  3           // InterfaceMethod org/hibernate/loader/plan/build/spi/ExpandingFetchSource.buildCollectionAttributeFetch:(Lorg/hibernate/persister/walking/spi/AssociationAttributeDefinition;Lorg/hibernate/engine/FetchStrategy;)Lorg/hibernate/loader/plan/spi/CollectionAttributeFetch;
      76: pop
      77: aload_0
      78: aload_1
      79: invokespecial #92                 // Method org/hibernate/loader/plan/build/internal/AbstractLoadPlanBuildingAssociationVisitationStrategy.foundCircularAssociation:(Lorg/hibernate/persister/walking/spi/AssociationAttributeDefinition;)V
      82: return

  static {};
    Code:
       0: ldc           #93                 // class org/hibernate/loader/plan/build/internal/AbstractEntityGraphVisitationStrategy
       2: invokestatic  #94                 // Method org/hibernate/internal/CoreLogging.logger:(Ljava/lang/Class;)Lorg/jboss/logging/Logger;
       5: putstatic     #76                 // Field LOG:Lorg/jboss/logging/Logger;
       8: new           #64                 // class org/hibernate/engine/FetchStrategy
      11: dup
      12: getstatic     #95                 // Field org/hibernate/engine/FetchTiming.IMMEDIATE:Lorg/hibernate/engine/FetchTiming;
      15: getstatic     #84                 // Field org/hibernate/engine/FetchStyle.JOIN:Lorg/hibernate/engine/FetchStyle;
      18: invokespecial #67                 // Method org/hibernate/engine/FetchStrategy."<init>":(Lorg/hibernate/engine/FetchTiming;Lorg/hibernate/engine/FetchStyle;)V
      21: putstatic     #60                 // Field DEFAULT_EAGER:Lorg/hibernate/engine/FetchStrategy;
      24: new           #64                 // class org/hibernate/engine/FetchStrategy
      27: dup
      28: getstatic     #96                 // Field org/hibernate/engine/FetchTiming.DELAYED:Lorg/hibernate/engine/FetchTiming;
      31: getstatic     #66                 // Field org/hibernate/engine/FetchStyle.SELECT:Lorg/hibernate/engine/FetchStyle;
      34: invokespecial #67                 // Method org/hibernate/engine/FetchStrategy."<init>":(Lorg/hibernate/engine/FetchTiming;Lorg/hibernate/engine/FetchStyle;)V
      37: putstatic     #97                 // Field DEFAULT_LAZY:Lorg/hibernate/engine/FetchStrategy;
      40: new           #98                 // class org/hibernate/loader/plan/build/internal/AbstractEntityGraphVisitationStrategy$1
      43: dup
      44: invokespecial #99                 // Method org/hibernate/loader/plan/build/internal/AbstractEntityGraphVisitationStrategy$1."<init>":()V
      47: putstatic     #37                 // Field NON_EXIST_ATTRIBUTE_NODE:Lorg/hibernate/graph/spi/AttributeNodeImplementor;
      50: new           #100                // class org/hibernate/loader/plan/build/internal/AbstractEntityGraphVisitationStrategy$2
      53: dup
      54: invokespecial #101                // Method org/hibernate/loader/plan/build/internal/AbstractEntityGraphVisitationStrategy$2."<init>":()V
      57: putstatic     #38                 // Field NON_EXIST_SUBGRAPH_NODE:Lorg/hibernate/graph/spi/GraphNodeImplementor;
      60: return
}
