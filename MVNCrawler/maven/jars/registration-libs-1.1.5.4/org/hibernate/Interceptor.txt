Compiled from "Interceptor.java"
public interface org.hibernate.Interceptor {
  public abstract boolean onLoad(java.lang.Object, java.io.Serializable, java.lang.Object[], java.lang.String[], org.hibernate.type.Type[]) throws org.hibernate.CallbackException;

  public abstract boolean onFlushDirty(java.lang.Object, java.io.Serializable, java.lang.Object[], java.lang.Object[], java.lang.String[], org.hibernate.type.Type[]) throws org.hibernate.CallbackException;

  public abstract boolean onSave(java.lang.Object, java.io.Serializable, java.lang.Object[], java.lang.String[], org.hibernate.type.Type[]) throws org.hibernate.CallbackException;

  public abstract void onDelete(java.lang.Object, java.io.Serializable, java.lang.Object[], java.lang.String[], org.hibernate.type.Type[]) throws org.hibernate.CallbackException;

  public abstract void onCollectionRecreate(java.lang.Object, java.io.Serializable) throws org.hibernate.CallbackException;

  public abstract void onCollectionRemove(java.lang.Object, java.io.Serializable) throws org.hibernate.CallbackException;

  public abstract void onCollectionUpdate(java.lang.Object, java.io.Serializable) throws org.hibernate.CallbackException;

  public abstract void preFlush(java.util.Iterator) throws org.hibernate.CallbackException;

  public abstract void postFlush(java.util.Iterator) throws org.hibernate.CallbackException;

  public abstract java.lang.Boolean isTransient(java.lang.Object);

  public abstract int[] findDirty(java.lang.Object, java.io.Serializable, java.lang.Object[], java.lang.Object[], java.lang.String[], org.hibernate.type.Type[]);

  public abstract java.lang.Object instantiate(java.lang.String, org.hibernate.EntityMode, java.io.Serializable) throws org.hibernate.CallbackException;

  public abstract java.lang.String getEntityName(java.lang.Object) throws org.hibernate.CallbackException;

  public abstract java.lang.Object getEntity(java.lang.String, java.io.Serializable) throws org.hibernate.CallbackException;

  public abstract void afterTransactionBegin(org.hibernate.Transaction);

  public abstract void beforeTransactionCompletion(org.hibernate.Transaction);

  public abstract void afterTransactionCompletion(org.hibernate.Transaction);

  public abstract java.lang.String onPrepareStatement(java.lang.String);
}
