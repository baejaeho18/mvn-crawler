Compiled from "ExportableColumn.java"
public class org.hibernate.id.ExportableColumn$ValueImpl implements org.hibernate.mapping.Value {
  private final org.hibernate.id.ExportableColumn column;

  private final org.hibernate.mapping.Table table;

  private final org.hibernate.type.BasicType type;

  private final org.hibernate.boot.model.relational.Database database;

  public org.hibernate.id.ExportableColumn$ValueImpl(org.hibernate.id.ExportableColumn, org.hibernate.mapping.Table, org.hibernate.type.BasicType, org.hibernate.boot.model.relational.Database);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field column:Lorg/hibernate/id/ExportableColumn;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field table:Lorg/hibernate/mapping/Table;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field type:Lorg/hibernate/type/BasicType;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field database:Lorg/hibernate/boot/model/relational/Database;
      25: return

  public int getColumnSpan();
    Code:
       0: iconst_1
       1: ireturn

  public java.util.Iterator<org.hibernate.mapping.Selectable> getColumnIterator();
    Code:
       0: new           #6                  // class org/hibernate/id/ExportableColumn$ColumnIterator
       3: dup
       4: aload_0
       5: getfield      #2                  // Field column:Lorg/hibernate/id/ExportableColumn;
       8: invokespecial #7                  // Method org/hibernate/id/ExportableColumn$ColumnIterator."<init>":(Lorg/hibernate/id/ExportableColumn;)V
      11: areturn

  public org.hibernate.type.Type getType() throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:Lorg/hibernate/type/BasicType;
       4: areturn

  public org.hibernate.FetchMode getFetchMode();
    Code:
       0: aconst_null
       1: areturn

  public org.hibernate.mapping.Table getTable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field table:Lorg/hibernate/mapping/Table;
       4: areturn

  public boolean hasFormula();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isAlternateUniqueKey();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isNullable();
    Code:
       0: iconst_0
       1: ireturn

  public boolean[] getColumnUpdateability();
    Code:
       0: iconst_1
       1: newarray       boolean
       3: dup
       4: iconst_0
       5: iconst_1
       6: bastore
       7: areturn

  public boolean[] getColumnInsertability();
    Code:
       0: iconst_1
       1: newarray       boolean
       3: dup
       4: iconst_0
       5: iconst_1
       6: bastore
       7: areturn

  public void createForeignKey() throws org.hibernate.MappingException;
    Code:
       0: return

  public boolean isSimpleValue();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isValid(org.hibernate.engine.spi.Mapping) throws org.hibernate.MappingException;
    Code:
       0: iconst_0
       1: ireturn

  public void setTypeUsingReflection(java.lang.String, java.lang.String) throws org.hibernate.MappingException;
    Code:
       0: return

  public java.lang.Object accept(org.hibernate.mapping.ValueVisitor);
    Code:
       0: aconst_null
       1: areturn

  public org.hibernate.service.ServiceRegistry getServiceRegistry();
    Code:
       0: aload_0
       1: getfield      #5                  // Field database:Lorg/hibernate/boot/model/relational/Database;
       4: invokevirtual #8                  // Method org/hibernate/boot/model/relational/Database.getBuildingOptions:()Lorg/hibernate/boot/spi/MetadataBuildingOptions;
       7: invokeinterface #9,  1            // InterfaceMethod org/hibernate/boot/spi/MetadataBuildingOptions.getServiceRegistry:()Lorg/hibernate/boot/registry/StandardServiceRegistry;
      12: areturn
}
