Compiled from "HibernateValidatorConfiguration.java"
public interface org.hibernate.validator.HibernateValidatorConfiguration extends javax.validation.Configuration<org.hibernate.validator.HibernateValidatorConfiguration> {
  public static final java.lang.String FAIL_FAST;

  public static final java.lang.String ALLOW_PARAMETER_CONSTRAINT_OVERRIDE;

  public static final java.lang.String ALLOW_MULTIPLE_CASCADED_VALIDATION_ON_RESULT;

  public static final java.lang.String ALLOW_PARALLEL_METHODS_DEFINE_PARAMETER_CONSTRAINTS;

  public static final java.lang.String CONSTRAINT_MAPPING_CONTRIBUTOR;

  public static final java.lang.String CONSTRAINT_MAPPING_CONTRIBUTORS;

  public static final java.lang.String ENABLE_TRAVERSABLE_RESOLVER_RESULT_CACHE;

  public static final java.lang.String SCRIPT_EVALUATOR_FACTORY_CLASSNAME;

  public static final java.lang.String TEMPORAL_VALIDATION_TOLERANCE;

  public abstract org.hibernate.validator.spi.resourceloading.ResourceBundleLocator getDefaultResourceBundleLocator();

  public abstract org.hibernate.validator.cfg.ConstraintMapping createConstraintMapping();

  public abstract java.util.Set<javax.validation.valueextraction.ValueExtractor<?>> getDefaultValueExtractors();

  public abstract org.hibernate.validator.HibernateValidatorConfiguration addMapping(org.hibernate.validator.cfg.ConstraintMapping);

  public abstract org.hibernate.validator.HibernateValidatorConfiguration failFast(boolean);

  public abstract org.hibernate.validator.HibernateValidatorConfiguration externalClassLoader(java.lang.ClassLoader);

  public abstract org.hibernate.validator.HibernateValidatorConfiguration allowOverridingMethodAlterParameterConstraint(boolean);

  public abstract org.hibernate.validator.HibernateValidatorConfiguration allowMultipleCascadedValidationOnReturnValues(boolean);

  public abstract org.hibernate.validator.HibernateValidatorConfiguration allowParallelMethodsDefineParameterConstraints(boolean);

  public abstract org.hibernate.validator.HibernateValidatorConfiguration enableTraversableResolverResultCache(boolean);

  public abstract org.hibernate.validator.HibernateValidatorConfiguration scriptEvaluatorFactory(org.hibernate.validator.spi.scripting.ScriptEvaluatorFactory);

  public abstract org.hibernate.validator.HibernateValidatorConfiguration temporalValidationTolerance(java.time.Duration);

  public abstract org.hibernate.validator.HibernateValidatorConfiguration constraintValidatorPayload(java.lang.Object);
}
