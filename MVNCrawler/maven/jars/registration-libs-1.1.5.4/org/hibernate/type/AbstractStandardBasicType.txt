Compiled from "AbstractStandardBasicType.java"
public abstract class org.hibernate.type.AbstractStandardBasicType<T> implements org.hibernate.type.BasicType, org.hibernate.type.StringRepresentableType<T>, org.hibernate.type.ProcedureParameterExtractionAware<T>, org.hibernate.type.ProcedureParameterNamedBinder {
  private static final org.hibernate.engine.jdbc.Size DEFAULT_SIZE;

  private final org.hibernate.engine.jdbc.Size dictatedSize;

  private org.hibernate.type.descriptor.sql.SqlTypeDescriptor sqlTypeDescriptor;

  private org.hibernate.type.descriptor.java.JavaTypeDescriptor<T> javaTypeDescriptor;

  private int[] sqlTypes;

  public org.hibernate.type.AbstractStandardBasicType(org.hibernate.type.descriptor.sql.SqlTypeDescriptor, org.hibernate.type.descriptor.java.JavaTypeDescriptor<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/hibernate/engine/jdbc/Size
       8: dup
       9: invokespecial #3                  // Method org/hibernate/engine/jdbc/Size."<init>":()V
      12: putfield      #4                  // Field dictatedSize:Lorg/hibernate/engine/jdbc/Size;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field sqlTypeDescriptor:Lorg/hibernate/type/descriptor/sql/SqlTypeDescriptor;
      20: aload_0
      21: iconst_1
      22: newarray       int
      24: dup
      25: iconst_0
      26: aload_1
      27: invokeinterface #6,  1            // InterfaceMethod org/hibernate/type/descriptor/sql/SqlTypeDescriptor.getSqlType:()I
      32: iastore
      33: putfield      #7                  // Field sqlTypes:[I
      36: aload_0
      37: aload_2
      38: putfield      #8                  // Field javaTypeDescriptor:Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;
      41: return

  public T fromString(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field javaTypeDescriptor:Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod org/hibernate/type/descriptor/java/JavaTypeDescriptor.fromString:(Ljava/lang/String;)Ljava/lang/Object;
      10: areturn

  public java.lang.String toString(T);
    Code:
       0: aload_0
       1: getfield      #8                  // Field javaTypeDescriptor:Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod org/hibernate/type/descriptor/java/JavaTypeDescriptor.toString:(Ljava/lang/Object;)Ljava/lang/String;
      10: areturn

  public T fromStringValue(java.lang.String) throws org.hibernate.HibernateException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method fromString:(Ljava/lang/String;)Ljava/lang/Object;
       5: areturn

  protected org.hibernate.type.descriptor.java.MutabilityPlan<T> getMutabilityPlan();
    Code:
       0: aload_0
       1: getfield      #8                  // Field javaTypeDescriptor:Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;
       4: invokeinterface #12,  1           // InterfaceMethod org/hibernate/type/descriptor/java/JavaTypeDescriptor.getMutabilityPlan:()Lorg/hibernate/type/descriptor/java/MutabilityPlan;
       9: areturn

  protected T getReplacement(T, T, org.hibernate.engine.spi.SharedSessionContractImplementor);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method isMutable:()Z
       4: ifne          9
       7: aload_1
       8: areturn
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokevirtual #14                 // Method isEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      15: ifeq          20
      18: aload_1
      19: areturn
      20: aload_0
      21: aload_1
      22: invokevirtual #15                 // Method deepCopy:(Ljava/lang/Object;)Ljava/lang/Object;
      25: areturn

  public boolean[] toColumnNullness(java.lang.Object, org.hibernate.engine.spi.Mapping);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: getstatic     #16                 // Field org/hibernate/internal/util/collections/ArrayHelper.FALSE:[Z
       7: goto          13
      10: getstatic     #17                 // Field org/hibernate/internal/util/collections/ArrayHelper.TRUE:[Z
      13: areturn

  public java.lang.String[] getRegistrationKeys();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method registerUnderJavaType:()Z
       4: ifeq          36
       7: iconst_2
       8: anewarray     #19                 // class java/lang/String
      11: dup
      12: iconst_0
      13: aload_0
      14: invokevirtual #20                 // Method getName:()Ljava/lang/String;
      17: aastore
      18: dup
      19: iconst_1
      20: aload_0
      21: getfield      #8                  // Field javaTypeDescriptor:Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;
      24: invokeinterface #21,  1           // InterfaceMethod org/hibernate/type/descriptor/java/JavaTypeDescriptor.getJavaTypeClass:()Ljava/lang/Class;
      29: invokevirtual #22                 // Method java/lang/Class.getName:()Ljava/lang/String;
      32: aastore
      33: goto          47
      36: iconst_1
      37: anewarray     #19                 // class java/lang/String
      40: dup
      41: iconst_0
      42: aload_0
      43: invokevirtual #20                 // Method getName:()Ljava/lang/String;
      46: aastore
      47: areturn

  protected boolean registerUnderJavaType();
    Code:
       0: iconst_0
       1: ireturn

  protected static org.hibernate.engine.jdbc.Size getDefaultSize();
    Code:
       0: getstatic     #23                 // Field DEFAULT_SIZE:Lorg/hibernate/engine/jdbc/Size;
       3: areturn

  protected org.hibernate.engine.jdbc.Size getDictatedSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field dictatedSize:Lorg/hibernate/engine/jdbc/Size;
       4: areturn

  public final org.hibernate.type.descriptor.java.JavaTypeDescriptor<T> getJavaTypeDescriptor();
    Code:
       0: aload_0
       1: getfield      #8                  // Field javaTypeDescriptor:Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;
       4: areturn

  public final void setJavaTypeDescriptor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<T>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field javaTypeDescriptor:Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;
       5: return

  public final org.hibernate.type.descriptor.sql.SqlTypeDescriptor getSqlTypeDescriptor();
    Code:
       0: aload_0
       1: getfield      #5                  // Field sqlTypeDescriptor:Lorg/hibernate/type/descriptor/sql/SqlTypeDescriptor;
       4: areturn

  public final void setSqlTypeDescriptor(org.hibernate.type.descriptor.sql.SqlTypeDescriptor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field sqlTypeDescriptor:Lorg/hibernate/type/descriptor/sql/SqlTypeDescriptor;
       5: aload_0
       6: iconst_1
       7: newarray       int
       9: dup
      10: iconst_0
      11: aload_1
      12: invokeinterface #6,  1            // InterfaceMethod org/hibernate/type/descriptor/sql/SqlTypeDescriptor.getSqlType:()I
      17: iastore
      18: putfield      #7                  // Field sqlTypes:[I
      21: return

  public final java.lang.Class getReturnedClass();
    Code:
       0: aload_0
       1: getfield      #8                  // Field javaTypeDescriptor:Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;
       4: invokeinterface #21,  1           // InterfaceMethod org/hibernate/type/descriptor/java/JavaTypeDescriptor.getJavaTypeClass:()Ljava/lang/Class;
       9: areturn

  public final int getColumnSpan(org.hibernate.engine.spi.Mapping) throws org.hibernate.MappingException;
    Code:
       0: iconst_1
       1: ireturn

  public final int[] sqlTypes(org.hibernate.engine.spi.Mapping) throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field sqlTypes:[I
       4: areturn

  public org.hibernate.engine.jdbc.Size[] dictatedSizes(org.hibernate.engine.spi.Mapping) throws org.hibernate.MappingException;
    Code:
       0: iconst_1
       1: anewarray     #2                  // class org/hibernate/engine/jdbc/Size
       4: dup
       5: iconst_0
       6: aload_0
       7: invokevirtual #24                 // Method getDictatedSize:()Lorg/hibernate/engine/jdbc/Size;
      10: aastore
      11: areturn

  public org.hibernate.engine.jdbc.Size[] defaultSizes(org.hibernate.engine.spi.Mapping) throws org.hibernate.MappingException;
    Code:
       0: iconst_1
       1: anewarray     #2                  // class org/hibernate/engine/jdbc/Size
       4: dup
       5: iconst_0
       6: invokestatic  #25                 // Method getDefaultSize:()Lorg/hibernate/engine/jdbc/Size;
       9: aastore
      10: areturn

  public final boolean isAssociationType();
    Code:
       0: iconst_0
       1: ireturn

  public final boolean isCollectionType();
    Code:
       0: iconst_0
       1: ireturn

  public final boolean isComponentType();
    Code:
       0: iconst_0
       1: ireturn

  public final boolean isEntityType();
    Code:
       0: iconst_0
       1: ireturn

  public final boolean isAnyType();
    Code:
       0: iconst_0
       1: ireturn

  public final boolean isXMLElement();
    Code:
       0: iconst_0
       1: ireturn

  public final boolean isSame(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #14                 // Method isEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public final boolean isEqual(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #14                 // Method isEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public final boolean isEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #8                  // Field javaTypeDescriptor:Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;
       4: aload_1
       5: aload_2
       6: invokeinterface #26,  3           // InterfaceMethod org/hibernate/type/descriptor/java/JavaTypeDescriptor.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      11: ireturn

  public final int getHashCode(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #8                  // Field javaTypeDescriptor:Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod org/hibernate/type/descriptor/java/JavaTypeDescriptor.extractHashCode:(Ljava/lang/Object;)I
      10: ireturn

  public final int getHashCode(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method getHashCode:(Ljava/lang/Object;)I
       5: ireturn

  public final int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #8                  // Field javaTypeDescriptor:Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;
       4: invokeinterface #29,  1           // InterfaceMethod org/hibernate/type/descriptor/java/JavaTypeDescriptor.getComparator:()Ljava/util/Comparator;
       9: aload_1
      10: aload_2
      11: invokeinterface #30,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      16: ireturn

  public final boolean isDirty(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #31                 // Method isDirty:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public final boolean isDirty(java.lang.Object, java.lang.Object, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor);
    Code:
       0: aload_3
       1: iconst_0
       2: baload
       3: ifeq          19
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #31                 // Method isDirty:(Ljava/lang/Object;Ljava/lang/Object;)Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  protected final boolean isDirty(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #32                 // Method isSame:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public final boolean isModified(java.lang.Object, java.lang.Object, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #31                 // Method isDirty:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public final java.lang.Object nullSafeGet(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: aaload
       5: aload_3
       6: invokevirtual #33                 // Method nullSafeGet:(Ljava/sql/ResultSet;Ljava/lang/String;Lorg/hibernate/engine/spi/SharedSessionContractImplementor;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object nullSafeGet(java.sql.ResultSet, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #33                 // Method nullSafeGet:(Ljava/sql/ResultSet;Ljava/lang/String;Lorg/hibernate/engine/spi/SharedSessionContractImplementor;)Ljava/lang/Object;
       7: areturn

  public final T nullSafeGet(java.sql.ResultSet, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #34                 // Method nullSafeGet:(Ljava/sql/ResultSet;Ljava/lang/String;Lorg/hibernate/type/descriptor/WrapperOptions;)Ljava/lang/Object;
       7: areturn

  protected final T nullSafeGet(java.sql.ResultSet, java.lang.String, org.hibernate.type.descriptor.WrapperOptions) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_3
       2: invokevirtual #35                 // Method remapSqlTypeDescriptor:(Lorg/hibernate/type/descriptor/WrapperOptions;)Lorg/hibernate/type/descriptor/sql/SqlTypeDescriptor;
       5: aload_0
       6: getfield      #8                  // Field javaTypeDescriptor:Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;
       9: invokeinterface #36,  2           // InterfaceMethod org/hibernate/type/descriptor/sql/SqlTypeDescriptor.getExtractor:(Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;)Lorg/hibernate/type/descriptor/ValueExtractor;
      14: aload_1
      15: aload_2
      16: aload_3
      17: invokeinterface #37,  4           // InterfaceMethod org/hibernate/type/descriptor/ValueExtractor.extract:(Ljava/sql/ResultSet;Ljava/lang/String;Lorg/hibernate/type/descriptor/WrapperOptions;)Ljava/lang/Object;
      22: areturn

  public java.lang.Object get(java.sql.ResultSet, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor) throws org.hibernate.HibernateException, java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #33                 // Method nullSafeGet:(Ljava/sql/ResultSet;Ljava/lang/String;Lorg/hibernate/engine/spi/SharedSessionContractImplementor;)Ljava/lang/Object;
       7: areturn

  public final void nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: invokevirtual #38                 // Method nullSafeSet:(Ljava/sql/PreparedStatement;Ljava/lang/Object;ILorg/hibernate/type/descriptor/WrapperOptions;)V
       9: return

  protected final void nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, org.hibernate.type.descriptor.WrapperOptions) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload         4
       3: invokevirtual #35                 // Method remapSqlTypeDescriptor:(Lorg/hibernate/type/descriptor/WrapperOptions;)Lorg/hibernate/type/descriptor/sql/SqlTypeDescriptor;
       6: aload_0
       7: getfield      #8                  // Field javaTypeDescriptor:Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;
      10: invokeinterface #39,  2           // InterfaceMethod org/hibernate/type/descriptor/sql/SqlTypeDescriptor.getBinder:(Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;)Lorg/hibernate/type/descriptor/ValueBinder;
      15: aload_1
      16: aload_2
      17: iload_3
      18: aload         4
      20: invokeinterface #40,  5           // InterfaceMethod org/hibernate/type/descriptor/ValueBinder.bind:(Ljava/sql/PreparedStatement;Ljava/lang/Object;ILorg/hibernate/type/descriptor/WrapperOptions;)V
      25: return

  protected org.hibernate.type.descriptor.sql.SqlTypeDescriptor remapSqlTypeDescriptor(org.hibernate.type.descriptor.WrapperOptions);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #5                  // Field sqlTypeDescriptor:Lorg/hibernate/type/descriptor/sql/SqlTypeDescriptor;
       5: invokeinterface #41,  2           // InterfaceMethod org/hibernate/type/descriptor/WrapperOptions.remapSqlTypeDescriptor:(Lorg/hibernate/type/descriptor/sql/SqlTypeDescriptor;)Lorg/hibernate/type/descriptor/sql/SqlTypeDescriptor;
      10: areturn

  public void set(java.sql.PreparedStatement, T, int, org.hibernate.engine.spi.SharedSessionContractImplementor) throws org.hibernate.HibernateException, java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: invokevirtual #42                 // Method nullSafeSet:(Ljava/sql/PreparedStatement;Ljava/lang/Object;ILorg/hibernate/engine/spi/SharedSessionContractImplementor;)V
       9: return

  public final java.lang.String toLoggableString(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor);
    Code:
       0: aload_1
       1: getstatic     #43                 // Field org/hibernate/bytecode/enhance/spi/LazyPropertyInitializer.UNFETCHED_PROPERTY:Ljava/io/Serializable;
       4: if_acmpeq     14
       7: aload_1
       8: invokestatic  #44                 // Method org/hibernate/Hibernate.isInitialized:(Ljava/lang/Object;)Z
      11: ifne          17
      14: ldc           #45                 // String <uninitialized>
      16: areturn
      17: aload_0
      18: getfield      #8                  // Field javaTypeDescriptor:Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;
      21: aload_1
      22: invokeinterface #46,  2           // InterfaceMethod org/hibernate/type/descriptor/java/JavaTypeDescriptor.extractLoggableRepresentation:(Ljava/lang/Object;)Ljava/lang/String;
      27: areturn

  public final boolean isMutable();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getMutabilityPlan:()Lorg/hibernate/type/descriptor/java/MutabilityPlan;
       4: invokeinterface #48,  1           // InterfaceMethod org/hibernate/type/descriptor/java/MutabilityPlan.isMutable:()Z
       9: ireturn

  public final java.lang.Object deepCopy(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method deepCopy:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  protected final T deepCopy(T);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getMutabilityPlan:()Lorg/hibernate/type/descriptor/java/MutabilityPlan;
       4: aload_1
       5: invokeinterface #49,  2           // InterfaceMethod org/hibernate/type/descriptor/java/MutabilityPlan.deepCopy:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public final java.io.Serializable disassemble(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object) throws org.hibernate.HibernateException;
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getMutabilityPlan:()Lorg/hibernate/type/descriptor/java/MutabilityPlan;
       4: aload_1
       5: invokeinterface #50,  2           // InterfaceMethod org/hibernate/type/descriptor/java/MutabilityPlan.disassemble:(Ljava/lang/Object;)Ljava/io/Serializable;
      10: areturn

  public final java.lang.Object assemble(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object) throws org.hibernate.HibernateException;
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getMutabilityPlan:()Lorg/hibernate/type/descriptor/java/MutabilityPlan;
       4: aload_1
       5: invokeinterface #51,  2           // InterfaceMethod org/hibernate/type/descriptor/java/MutabilityPlan.assemble:(Ljava/io/Serializable;)Ljava/lang/Object;
      10: areturn

  public final void beforeAssemble(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor);
    Code:
       0: return

  public final java.lang.Object hydrate(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object) throws org.hibernate.HibernateException, java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #52                 // Method nullSafeGet:(Ljava/sql/ResultSet;[Ljava/lang/String;Lorg/hibernate/engine/spi/SharedSessionContractImplementor;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object resolve(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object) throws org.hibernate.HibernateException;
    Code:
       0: aload_1
       1: areturn

  public final java.lang.Object semiResolve(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object) throws org.hibernate.HibernateException;
    Code:
       0: aload_1
       1: areturn

  public final org.hibernate.type.Type getSemiResolvedType(org.hibernate.engine.spi.SessionFactoryImplementor);
    Code:
       0: aload_0
       1: areturn

  public final java.lang.Object replace(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #53                 // Method getReplacement:(Ljava/lang/Object;Ljava/lang/Object;Lorg/hibernate/engine/spi/SharedSessionContractImplementor;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object replace(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.util.Map, org.hibernate.type.ForeignKeyDirection);
    Code:
       0: getstatic     #54                 // Field org/hibernate/type/ForeignKeyDirection.FROM_PARENT:Lorg/hibernate/type/ForeignKeyDirection;
       3: aload         6
       5: if_acmpne     18
       8: aload_0
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokevirtual #53                 // Method getReplacement:(Ljava/lang/Object;Ljava/lang/Object;Lorg/hibernate/engine/spi/SharedSessionContractImplementor;)Ljava/lang/Object;
      15: goto          19
      18: aload_2
      19: areturn

  public boolean canDoExtraction();
    Code:
       0: iconst_1
       1: ireturn

  public T extract(java.sql.CallableStatement, int, org.hibernate.engine.spi.SharedSessionContractImplementor) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_3
       2: invokevirtual #35                 // Method remapSqlTypeDescriptor:(Lorg/hibernate/type/descriptor/WrapperOptions;)Lorg/hibernate/type/descriptor/sql/SqlTypeDescriptor;
       5: aload_0
       6: getfield      #8                  // Field javaTypeDescriptor:Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;
       9: invokeinterface #36,  2           // InterfaceMethod org/hibernate/type/descriptor/sql/SqlTypeDescriptor.getExtractor:(Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;)Lorg/hibernate/type/descriptor/ValueExtractor;
      14: aload_1
      15: iload_2
      16: aload_3
      17: invokeinterface #55,  4           // InterfaceMethod org/hibernate/type/descriptor/ValueExtractor.extract:(Ljava/sql/CallableStatement;ILorg/hibernate/type/descriptor/WrapperOptions;)Ljava/lang/Object;
      22: areturn

  public T extract(java.sql.CallableStatement, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_3
       2: invokevirtual #35                 // Method remapSqlTypeDescriptor:(Lorg/hibernate/type/descriptor/WrapperOptions;)Lorg/hibernate/type/descriptor/sql/SqlTypeDescriptor;
       5: aload_0
       6: getfield      #8                  // Field javaTypeDescriptor:Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;
       9: invokeinterface #36,  2           // InterfaceMethod org/hibernate/type/descriptor/sql/SqlTypeDescriptor.getExtractor:(Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;)Lorg/hibernate/type/descriptor/ValueExtractor;
      14: aload_1
      15: aload_2
      16: aload_3
      17: invokeinterface #56,  4           // InterfaceMethod org/hibernate/type/descriptor/ValueExtractor.extract:(Ljava/sql/CallableStatement;[Ljava/lang/String;Lorg/hibernate/type/descriptor/WrapperOptions;)Ljava/lang/Object;
      22: areturn

  public void nullSafeSet(java.sql.CallableStatement, java.lang.Object, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #57                 // Method nullSafeSet:(Ljava/sql/CallableStatement;Ljava/lang/Object;Ljava/lang/String;Lorg/hibernate/type/descriptor/WrapperOptions;)V
       9: return

  protected final void nullSafeSet(java.sql.CallableStatement, java.lang.Object, java.lang.String, org.hibernate.type.descriptor.WrapperOptions) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload         4
       3: invokevirtual #35                 // Method remapSqlTypeDescriptor:(Lorg/hibernate/type/descriptor/WrapperOptions;)Lorg/hibernate/type/descriptor/sql/SqlTypeDescriptor;
       6: aload_0
       7: getfield      #8                  // Field javaTypeDescriptor:Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;
      10: invokeinterface #39,  2           // InterfaceMethod org/hibernate/type/descriptor/sql/SqlTypeDescriptor.getBinder:(Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;)Lorg/hibernate/type/descriptor/ValueBinder;
      15: aload_1
      16: aload_2
      17: aload_3
      18: aload         4
      20: invokeinterface #58,  5           // InterfaceMethod org/hibernate/type/descriptor/ValueBinder.bind:(Ljava/sql/CallableStatement;Ljava/lang/Object;Ljava/lang/String;Lorg/hibernate/type/descriptor/WrapperOptions;)V
      25: return

  public boolean canDoSetting();
    Code:
       0: iconst_1
       1: ireturn

  static {};
    Code:
       0: new           #2                  // class org/hibernate/engine/jdbc/Size
       3: dup
       4: bipush        19
       6: iconst_2
       7: ldc2_w        #59                 // long 255l
      10: getstatic     #61                 // Field org/hibernate/engine/jdbc/Size$LobMultiplier.NONE:Lorg/hibernate/engine/jdbc/Size$LobMultiplier;
      13: invokespecial #62                 // Method org/hibernate/engine/jdbc/Size."<init>":(IIJLorg/hibernate/engine/jdbc/Size$LobMultiplier;)V
      16: putstatic     #23                 // Field DEFAULT_SIZE:Lorg/hibernate/engine/jdbc/Size;
      19: return
}
