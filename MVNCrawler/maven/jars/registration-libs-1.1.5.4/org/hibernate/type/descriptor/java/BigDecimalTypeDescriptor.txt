Compiled from "BigDecimalTypeDescriptor.java"
public class org.hibernate.type.descriptor.java.BigDecimalTypeDescriptor extends org.hibernate.type.descriptor.java.AbstractTypeDescriptor<java.math.BigDecimal> {
  public static final org.hibernate.type.descriptor.java.BigDecimalTypeDescriptor INSTANCE;

  public org.hibernate.type.descriptor.java.BigDecimalTypeDescriptor();
    Code:
       0: aload_0
       1: ldc           #1                  // class java/math/BigDecimal
       3: invokespecial #2                  // Method org/hibernate/type/descriptor/java/AbstractTypeDescriptor."<init>":(Ljava/lang/Class;)V
       6: return

  public java.lang.String toString(java.math.BigDecimal);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method java/math/BigDecimal.toString:()Ljava/lang/String;
       4: areturn

  public java.math.BigDecimal fromString(java.lang.String);
    Code:
       0: new           #1                  // class java/math/BigDecimal
       3: dup
       4: aload_1
       5: invokespecial #4                  // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
       8: areturn

  public boolean areEqual(java.math.BigDecimal, java.math.BigDecimal);
    Code:
       0: aload_1
       1: aload_2
       2: if_acmpeq     21
       5: aload_1
       6: ifnull        25
       9: aload_2
      10: ifnull        25
      13: aload_1
      14: aload_2
      15: invokevirtual #5                  // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public int extractHashCode(java.math.BigDecimal);
    Code:
       0: aload_1
       1: invokevirtual #6                  // Method java/math/BigDecimal.intValue:()I
       4: ireturn

  public <X> X unwrap(java.math.BigDecimal, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: ldc           #1                  // class java/math/BigDecimal
       8: aload_2
       9: invokevirtual #7                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      12: ifeq          17
      15: aload_1
      16: areturn
      17: ldc           #8                  // class java/math/BigInteger
      19: aload_2
      20: invokevirtual #7                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      23: ifeq          31
      26: aload_1
      27: invokevirtual #9                  // Method java/math/BigDecimal.toBigIntegerExact:()Ljava/math/BigInteger;
      30: areturn
      31: ldc           #10                 // class java/lang/Byte
      33: aload_2
      34: invokevirtual #7                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      37: ifeq          48
      40: aload_1
      41: invokevirtual #11                 // Method java/math/BigDecimal.byteValue:()B
      44: invokestatic  #12                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      47: areturn
      48: ldc           #13                 // class java/lang/Short
      50: aload_2
      51: invokevirtual #7                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      54: ifeq          65
      57: aload_1
      58: invokevirtual #14                 // Method java/math/BigDecimal.shortValue:()S
      61: invokestatic  #15                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
      64: areturn
      65: ldc           #16                 // class java/lang/Integer
      67: aload_2
      68: invokevirtual #7                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      71: ifeq          82
      74: aload_1
      75: invokevirtual #6                  // Method java/math/BigDecimal.intValue:()I
      78: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      81: areturn
      82: ldc           #18                 // class java/lang/Long
      84: aload_2
      85: invokevirtual #7                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      88: ifeq          99
      91: aload_1
      92: invokevirtual #19                 // Method java/math/BigDecimal.longValue:()J
      95: invokestatic  #20                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      98: areturn
      99: ldc           #21                 // class java/lang/Double
     101: aload_2
     102: invokevirtual #7                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     105: ifeq          116
     108: aload_1
     109: invokevirtual #22                 // Method java/math/BigDecimal.doubleValue:()D
     112: invokestatic  #23                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     115: areturn
     116: ldc           #24                 // class java/lang/Float
     118: aload_2
     119: invokevirtual #7                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     122: ifeq          133
     125: aload_1
     126: invokevirtual #25                 // Method java/math/BigDecimal.floatValue:()F
     129: invokestatic  #26                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
     132: areturn
     133: aload_0
     134: aload_2
     135: invokevirtual #27                 // Method unknownUnwrap:(Ljava/lang/Class;)Lorg/hibernate/HibernateException;
     138: athrow

  public <X> java.math.BigDecimal wrap(X, org.hibernate.type.descriptor.WrapperOptions);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: ldc           #1                  // class java/math/BigDecimal
       8: aload_1
       9: invokevirtual #28                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      12: ifeq          20
      15: aload_1
      16: checkcast     #1                  // class java/math/BigDecimal
      19: areturn
      20: ldc           #8                  // class java/math/BigInteger
      22: aload_1
      23: invokevirtual #28                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      26: ifeq          41
      29: new           #1                  // class java/math/BigDecimal
      32: dup
      33: aload_1
      34: checkcast     #8                  // class java/math/BigInteger
      37: invokespecial #29                 // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;)V
      40: areturn
      41: ldc           #30                 // class java/lang/Number
      43: aload_1
      44: invokevirtual #28                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      47: ifeq          61
      50: aload_1
      51: checkcast     #30                 // class java/lang/Number
      54: invokevirtual #31                 // Method java/lang/Number.doubleValue:()D
      57: invokestatic  #32                 // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;
      60: areturn
      61: aload_0
      62: aload_1
      63: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      66: invokevirtual #34                 // Method unknownWrap:(Ljava/lang/Class;)Lorg/hibernate/HibernateException;
      69: athrow

  public boolean areEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class java/math/BigDecimal
       5: aload_2
       6: checkcast     #1                  // class java/math/BigDecimal
       9: invokevirtual #35                 // Method areEqual:(Ljava/math/BigDecimal;Ljava/math/BigDecimal;)Z
      12: ireturn

  public int extractHashCode(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class java/math/BigDecimal
       5: invokevirtual #36                 // Method extractHashCode:(Ljava/math/BigDecimal;)I
       8: ireturn

  public java.lang.Object wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #37                 // Method wrap:(Ljava/lang/Object;Lorg/hibernate/type/descriptor/WrapperOptions;)Ljava/math/BigDecimal;
       6: areturn

  public java.lang.Object unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class java/math/BigDecimal
       5: aload_2
       6: aload_3
       7: invokevirtual #38                 // Method unwrap:(Ljava/math/BigDecimal;Ljava/lang/Class;Lorg/hibernate/type/descriptor/WrapperOptions;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object fromString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #39                 // Method fromString:(Ljava/lang/String;)Ljava/math/BigDecimal;
       5: areturn

  public java.lang.String toString(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class java/math/BigDecimal
       5: invokevirtual #40                 // Method toString:(Ljava/math/BigDecimal;)Ljava/lang/String;
       8: areturn

  static {};
    Code:
       0: new           #41                 // class org/hibernate/type/descriptor/java/BigDecimalTypeDescriptor
       3: dup
       4: invokespecial #42                 // Method "<init>":()V
       7: putstatic     #43                 // Field INSTANCE:Lorg/hibernate/type/descriptor/java/BigDecimalTypeDescriptor;
      10: return
}
