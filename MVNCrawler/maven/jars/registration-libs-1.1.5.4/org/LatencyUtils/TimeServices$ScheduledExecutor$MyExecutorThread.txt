Compiled from "TimeServices.java"
class org.LatencyUtils.TimeServices$ScheduledExecutor$MyExecutorThread extends java.lang.Thread {
  volatile boolean doRun;

  final org.LatencyUtils.TimeServices$ScheduledExecutor this$0;

  private org.LatencyUtils.TimeServices$ScheduledExecutor$MyExecutorThread(org.LatencyUtils.TimeServices$ScheduledExecutor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/LatencyUtils/TimeServices$ScheduledExecutor;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Thread."<init>":()V
       9: aload_0
      10: iconst_1
      11: putfield      #4                  // Field doRun:Z
      14: return

  void terminate();
    Code:
       0: invokestatic  #5                  // Method org/LatencyUtils/TimeServices.access$200:()Ljava/lang/Object;
       3: dup
       4: astore_1
       5: monitorenter
       6: aload_0
       7: iconst_0
       8: putfield      #4                  // Field doRun:Z
      11: invokestatic  #5                  // Method org/LatencyUtils/TimeServices.access$200:()Ljava/lang/Object;
      14: invokevirtual #6                  // Method java/lang/Object.notifyAll:()V
      17: aload_1
      18: monitorexit
      19: goto          27
      22: astore_2
      23: aload_1
      24: monitorexit
      25: aload_2
      26: athrow
      27: return
    Exception table:
       from    to  target type
           6    19    22   any
          22    25    22   any

  public void run();
    Code:
       0: aload_0
       1: getfield      #4                  // Field doRun:Z
       4: ifeq          113
       7: invokestatic  #5                  // Method org/LatencyUtils/TimeServices.access$200:()Ljava/lang/Object;
      10: dup
      11: astore_1
      12: monitorenter
      13: aload_0
      14: getfield      #2                  // Field this$0:Lorg/LatencyUtils/TimeServices$ScheduledExecutor;
      17: getfield      #7                  // Field org/LatencyUtils/TimeServices$ScheduledExecutor.taskEntries:Ljava/util/concurrent/PriorityBlockingQueue;
      20: invokevirtual #8                  // Method java/util/concurrent/PriorityBlockingQueue.peek:()Ljava/lang/Object;
      23: checkcast     #9                  // class org/LatencyUtils/TimeServices$ScheduledExecutor$RunnableTaskEntry
      26: astore_2
      27: aload_2
      28: ifnull        94
      31: aload_2
      32: invokevirtual #10                 // Method org/LatencyUtils/TimeServices$ScheduledExecutor$RunnableTaskEntry.getStartTime:()J
      35: invokestatic  #11                 // Method org/LatencyUtils/TimeServices.access$100:()J
      38: lcmp
      39: ifge          94
      42: aload_2
      43: invokevirtual #12                 // Method org/LatencyUtils/TimeServices$ScheduledExecutor$RunnableTaskEntry.getCommand:()Ljava/lang/Runnable;
      46: invokeinterface #13,  1           // InterfaceMethod java/lang/Runnable.run:()V
      51: aload_2
      52: invokevirtual #14                 // Method org/LatencyUtils/TimeServices$ScheduledExecutor$RunnableTaskEntry.shouldReschedule:()Z
      55: ifeq          77
      58: aload_2
      59: invokestatic  #11                 // Method org/LatencyUtils/TimeServices.access$100:()J
      62: invokevirtual #15                 // Method org/LatencyUtils/TimeServices$ScheduledExecutor$RunnableTaskEntry.setNewStartTime:(J)V
      65: aload_0
      66: getfield      #2                  // Field this$0:Lorg/LatencyUtils/TimeServices$ScheduledExecutor;
      69: getfield      #7                  // Field org/LatencyUtils/TimeServices$ScheduledExecutor.taskEntries:Ljava/util/concurrent/PriorityBlockingQueue;
      72: aload_2
      73: invokevirtual #16                 // Method java/util/concurrent/PriorityBlockingQueue.add:(Ljava/lang/Object;)Z
      76: pop
      77: aload_0
      78: getfield      #2                  // Field this$0:Lorg/LatencyUtils/TimeServices$ScheduledExecutor;
      81: getfield      #7                  // Field org/LatencyUtils/TimeServices$ScheduledExecutor.taskEntries:Ljava/util/concurrent/PriorityBlockingQueue;
      84: invokevirtual #8                  // Method java/util/concurrent/PriorityBlockingQueue.peek:()Ljava/lang/Object;
      87: checkcast     #9                  // class org/LatencyUtils/TimeServices$ScheduledExecutor$RunnableTaskEntry
      90: astore_2
      91: goto          27
      94: invokestatic  #5                  // Method org/LatencyUtils/TimeServices.access$200:()Ljava/lang/Object;
      97: invokevirtual #17                 // Method java/lang/Object.wait:()V
     100: aload_1
     101: monitorexit
     102: goto          110
     105: astore_3
     106: aload_1
     107: monitorexit
     108: aload_3
     109: athrow
     110: goto          0
     113: goto          121
     116: astore_1
     117: goto          121
     120: astore_1
     121: return
    Exception table:
       from    to  target type
          13   102   105   any
         105   108   105   any
           0   113   116   Class java/lang/InterruptedException
           0   113   120   Class java/util/concurrent/CancellationException

  org.LatencyUtils.TimeServices$ScheduledExecutor$MyExecutorThread(org.LatencyUtils.TimeServices$ScheduledExecutor, org.LatencyUtils.TimeServices$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/LatencyUtils/TimeServices$ScheduledExecutor;)V
       5: return
}
