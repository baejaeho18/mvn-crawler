Compiled from "TimeServices.java"
public class org.LatencyUtils.TimeServices$ScheduledExecutor {
  private final java.util.concurrent.ScheduledThreadPoolExecutor actualExecutor;

  final org.LatencyUtils.TimeServices$ScheduledExecutor$MyExecutorThread internalExecutorThread;

  final java.util.concurrent.PriorityBlockingQueue<org.LatencyUtils.TimeServices$ScheduledExecutor$RunnableTaskEntry> taskEntries;

  private static org.LatencyUtils.TimeServices$ScheduledExecutor$CompareRunnableTaskEntryByStartTime compareRunnableTaskEntryByStartTime;

  org.LatencyUtils.TimeServices$ScheduledExecutor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: getstatic     #2                  // Field org/LatencyUtils/TimeServices.useActualTime:Z
       7: ifeq          35
      10: aload_0
      11: new           #3                  // class java/util/concurrent/ScheduledThreadPoolExecutor
      14: dup
      15: iconst_1
      16: invokespecial #4                  // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(I)V
      19: putfield      #5                  // Field actualExecutor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      22: aload_0
      23: aconst_null
      24: putfield      #6                  // Field internalExecutorThread:Lorg/LatencyUtils/TimeServices$ScheduledExecutor$MyExecutorThread;
      27: aload_0
      28: aconst_null
      29: putfield      #7                  // Field taskEntries:Ljava/util/concurrent/PriorityBlockingQueue;
      32: goto          85
      35: aload_0
      36: aconst_null
      37: putfield      #5                  // Field actualExecutor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      40: aload_0
      41: new           #8                  // class java/util/concurrent/PriorityBlockingQueue
      44: dup
      45: sipush        10000
      48: getstatic     #9                  // Field compareRunnableTaskEntryByStartTime:Lorg/LatencyUtils/TimeServices$ScheduledExecutor$CompareRunnableTaskEntryByStartTime;
      51: invokespecial #10                 // Method java/util/concurrent/PriorityBlockingQueue."<init>":(ILjava/util/Comparator;)V
      54: putfield      #7                  // Field taskEntries:Ljava/util/concurrent/PriorityBlockingQueue;
      57: aload_0
      58: new           #11                 // class org/LatencyUtils/TimeServices$ScheduledExecutor$MyExecutorThread
      61: dup
      62: aload_0
      63: aconst_null
      64: invokespecial #12                 // Method org/LatencyUtils/TimeServices$ScheduledExecutor$MyExecutorThread."<init>":(Lorg/LatencyUtils/TimeServices$ScheduledExecutor;Lorg/LatencyUtils/TimeServices$1;)V
      67: putfield      #6                  // Field internalExecutorThread:Lorg/LatencyUtils/TimeServices$ScheduledExecutor$MyExecutorThread;
      70: aload_0
      71: getfield      #6                  // Field internalExecutorThread:Lorg/LatencyUtils/TimeServices$ScheduledExecutor$MyExecutorThread;
      74: iconst_1
      75: invokevirtual #13                 // Method org/LatencyUtils/TimeServices$ScheduledExecutor$MyExecutorThread.setDaemon:(Z)V
      78: aload_0
      79: getfield      #6                  // Field internalExecutorThread:Lorg/LatencyUtils/TimeServices$ScheduledExecutor$MyExecutorThread;
      82: invokevirtual #14                 // Method org/LatencyUtils/TimeServices$ScheduledExecutor$MyExecutorThread.start:()V
      85: return

  public void scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: getstatic     #2                  // Field org/LatencyUtils/TimeServices.useActualTime:Z
       3: ifeq          21
       6: aload_0
       7: getfield      #5                  // Field actualExecutor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      10: aload_1
      11: lload_2
      12: lload         4
      14: aload         6
      16: invokevirtual #15                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      19: pop
      20: return
      21: invokestatic  #16                 // Method org/LatencyUtils/TimeServices.access$100:()J
      24: getstatic     #17                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      27: lload_2
      28: aload         6
      30: invokevirtual #18                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      33: ladd
      34: lstore        7
      36: getstatic     #17                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      39: lload         4
      41: aload         6
      43: invokevirtual #18                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      46: lstore        9
      48: new           #19                 // class org/LatencyUtils/TimeServices$ScheduledExecutor$RunnableTaskEntry
      51: dup
      52: aload_1
      53: lload         7
      55: lload         9
      57: iconst_1
      58: invokespecial #20                 // Method org/LatencyUtils/TimeServices$ScheduledExecutor$RunnableTaskEntry."<init>":(Ljava/lang/Runnable;JJZ)V
      61: astore        11
      63: invokestatic  #21                 // Method org/LatencyUtils/TimeServices.access$200:()Ljava/lang/Object;
      66: dup
      67: astore        12
      69: monitorenter
      70: aload_0
      71: getfield      #7                  // Field taskEntries:Ljava/util/concurrent/PriorityBlockingQueue;
      74: aload         11
      76: invokevirtual #22                 // Method java/util/concurrent/PriorityBlockingQueue.add:(Ljava/lang/Object;)Z
      79: pop
      80: invokestatic  #21                 // Method org/LatencyUtils/TimeServices.access$200:()Ljava/lang/Object;
      83: invokevirtual #23                 // Method java/lang/Object.notifyAll:()V
      86: aload         12
      88: monitorexit
      89: goto          100
      92: astore        13
      94: aload         12
      96: monitorexit
      97: aload         13
      99: athrow
     100: return
    Exception table:
       from    to  target type
          70    89    92   any
          92    97    92   any

  public void shutdown();
    Code:
       0: getstatic     #2                  // Field org/LatencyUtils/TimeServices.useActualTime:Z
       3: ifeq          15
       6: aload_0
       7: getfield      #5                  // Field actualExecutor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      10: invokevirtual #24                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.shutdownNow:()Ljava/util/List;
      13: pop
      14: return
      15: aload_0
      16: getfield      #6                  // Field internalExecutorThread:Lorg/LatencyUtils/TimeServices$ScheduledExecutor$MyExecutorThread;
      19: invokevirtual #25                 // Method org/LatencyUtils/TimeServices$ScheduledExecutor$MyExecutorThread.terminate:()V
      22: return

  static {};
    Code:
       0: new           #26                 // class org/LatencyUtils/TimeServices$ScheduledExecutor$CompareRunnableTaskEntryByStartTime
       3: dup
       4: invokespecial #27                 // Method org/LatencyUtils/TimeServices$ScheduledExecutor$CompareRunnableTaskEntryByStartTime."<init>":()V
       7: putstatic     #9                  // Field compareRunnableTaskEntryByStartTime:Lorg/LatencyUtils/TimeServices$ScheduledExecutor$CompareRunnableTaskEntryByStartTime;
      10: return
}
