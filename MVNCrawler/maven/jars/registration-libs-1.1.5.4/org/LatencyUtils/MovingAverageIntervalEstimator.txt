Compiled from "MovingAverageIntervalEstimator.java"
public class org.LatencyUtils.MovingAverageIntervalEstimator extends org.LatencyUtils.IntervalEstimator {
  protected final long[] intervalEndTimes;

  protected final int windowMagnitude;

  protected final int windowLength;

  protected final int windowMask;

  protected java.util.concurrent.atomic.AtomicLong count;

  public org.LatencyUtils.MovingAverageIntervalEstimator(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/LatencyUtils/IntervalEstimator."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: lconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      13: putfield      #4                  // Field count:Ljava/util/concurrent/atomic/AtomicLong;
      16: aload_0
      17: iload_1
      18: i2d
      19: invokestatic  #5                  // Method java/lang/Math.log:(D)D
      22: ldc2_w        #6                  // double 2.0d
      25: invokestatic  #5                  // Method java/lang/Math.log:(D)D
      28: ddiv
      29: invokestatic  #8                  // Method java/lang/Math.ceil:(D)D
      32: d2i
      33: putfield      #9                  // Field windowMagnitude:I
      36: aload_0
      37: ldc2_w        #6                  // double 2.0d
      40: aload_0
      41: getfield      #9                  // Field windowMagnitude:I
      44: i2d
      45: invokestatic  #10                 // Method java/lang/Math.pow:(DD)D
      48: d2i
      49: putfield      #11                 // Field windowLength:I
      52: aload_0
      53: aload_0
      54: getfield      #11                 // Field windowLength:I
      57: iconst_1
      58: isub
      59: putfield      #12                 // Field windowMask:I
      62: aload_0
      63: aload_0
      64: getfield      #11                 // Field windowLength:I
      67: newarray       long
      69: putfield      #13                 // Field intervalEndTimes:[J
      72: iconst_0
      73: istore_2
      74: iload_2
      75: aload_0
      76: getfield      #13                 // Field intervalEndTimes:[J
      79: arraylength
      80: if_icmpge     98
      83: aload_0
      84: getfield      #13                 // Field intervalEndTimes:[J
      87: iload_2
      88: ldc2_w        #15                 // long -9223372036854775808l
      91: lastore
      92: iinc          2, 1
      95: goto          74
      98: return

  public void recordInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #17                 // Method recordIntervalAndReturnWindowPosition:(J)I
       5: pop
       6: return

  int recordIntervalAndReturnWindowPosition(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field count:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
       7: lstore_3
       8: lload_3
       9: aload_0
      10: getfield      #12                 // Field windowMask:I
      13: i2l
      14: land
      15: l2i
      16: istore        5
      18: aload_0
      19: getfield      #13                 // Field intervalEndTimes:[J
      22: iload         5
      24: lload_1
      25: lastore
      26: iload         5
      28: ireturn

  public long getEstimatedInterval(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field count:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lstore_3
       8: lload_3
       9: aload_0
      10: getfield      #11                 // Field windowLength:I
      13: i2l
      14: lcmp
      15: ifge          22
      18: ldc2_w        #20                 // long 9223372036854775807l
      21: lreturn
      22: lload_3
      23: lstore        5
      25: lload_3
      26: aload_0
      27: getfield      #12                 // Field windowMask:I
      30: i2l
      31: land
      32: l2i
      33: istore        9
      35: lload_3
      36: aload_0
      37: getfield      #11                 // Field windowLength:I
      40: i2l
      41: ladd
      42: lconst_1
      43: lsub
      44: aload_0
      45: getfield      #12                 // Field windowMask:I
      48: i2l
      49: land
      50: l2i
      51: istore        10
      53: aload_0
      54: getfield      #13                 // Field intervalEndTimes:[J
      57: iload         9
      59: laload
      60: lstore        11
      62: aload_0
      63: getfield      #13                 // Field intervalEndTimes:[J
      66: iload         10
      68: laload
      69: lload_1
      70: invokestatic  #22                 // Method java/lang/Math.max:(JJ)J
      73: lstore        13
      75: lload         13
      77: lload         11
      79: lsub
      80: lstore        7
      82: aload_0
      83: getfield      #4                  // Field count:Ljava/util/concurrent/atomic/AtomicLong;
      86: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      89: lstore_3
      90: lload_3
      91: lload         5
      93: lcmp
      94: ifne          22
      97: lload         7
      99: lconst_0
     100: lcmp
     101: iflt          22
     104: lload         7
     106: aload_0
     107: getfield      #11                 // Field windowLength:I
     110: iconst_1
     111: isub
     112: i2l
     113: ldiv
     114: lstore        9
     116: lload         9
     118: lconst_1
     119: invokestatic  #22                 // Method java/lang/Math.max:(JJ)J
     122: lreturn

  protected int getCurrentPosition();
    Code:
       0: aload_0
       1: getfield      #4                  // Field count:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: aload_0
       8: getfield      #12                 // Field windowMask:I
      11: i2l
      12: land
      13: l2i
      14: ireturn
}
