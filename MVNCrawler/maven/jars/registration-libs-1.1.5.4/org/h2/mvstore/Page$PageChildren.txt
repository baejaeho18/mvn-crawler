Compiled from "Page.java"
public class org.h2.mvstore.Page$PageChildren {
  public static final long[] EMPTY_ARRAY;

  final long pos;

  long[] children;

  boolean chunkList;

  private org.h2.mvstore.Page$PageChildren(long, long[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #2                  // Field pos:J
       9: aload_0
      10: aload_3
      11: putfield      #3                  // Field children:[J
      14: return

  org.h2.mvstore.Page$PageChildren(org.h2.mvstore.Page);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #4                  // Method org/h2/mvstore/Page.getPos:()J
       9: putfield      #2                  // Field pos:J
      12: aload_1
      13: invokevirtual #5                  // Method org/h2/mvstore/Page.getRawChildPageCount:()I
      16: istore_2
      17: aload_0
      18: iload_2
      19: newarray       long
      21: putfield      #3                  // Field children:[J
      24: iconst_0
      25: istore_3
      26: iload_3
      27: iload_2
      28: if_icmpge     48
      31: aload_0
      32: getfield      #3                  // Field children:[J
      35: iload_3
      36: aload_1
      37: iload_3
      38: invokevirtual #6                  // Method org/h2/mvstore/Page.getChildPagePos:(I)J
      41: lastore
      42: iinc          3, 1
      45: goto          26
      48: return

  int getMemory();
    Code:
       0: bipush        64
       2: bipush        8
       4: aload_0
       5: getfield      #3                  // Field children:[J
       8: arraylength
       9: imul
      10: iadd
      11: ireturn

  static org.h2.mvstore.Page$PageChildren read(org.h2.mvstore.FileStore, long, int, long, long);
    Code:
       0: lload_1
       1: invokestatic  #7                  // Method org/h2/mvstore/DataUtils.getPageMaxLength:(J)I
       4: istore        9
       6: iload         9
       8: ldc           #8                  // int 2097152
      10: if_icmpne     31
      13: aload_0
      14: lload         4
      16: sipush        128
      19: invokevirtual #9                  // Method org/h2/mvstore/FileStore.readFully:(JI)Ljava/nio/ByteBuffer;
      22: astore        8
      24: aload         8
      26: invokevirtual #10                 // Method java/nio/ByteBuffer.getInt:()I
      29: istore        9
      31: lload         6
      33: lload         4
      35: lsub
      36: iload         9
      38: i2l
      39: invokestatic  #11                 // Method java/lang/Math.min:(JJ)J
      42: l2i
      43: istore        9
      45: iload         9
      47: istore        10
      49: iload         10
      51: ifge          90
      54: bipush        6
      56: ldc           #12                 // String Illegal page length {0} reading at {1}; max pos {2}
      58: iconst_3
      59: anewarray     #13                 // class java/lang/Object
      62: dup
      63: iconst_0
      64: iload         10
      66: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      69: aastore
      70: dup
      71: iconst_1
      72: lload         4
      74: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      77: aastore
      78: dup
      79: iconst_2
      80: lload         6
      82: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      85: aastore
      86: invokestatic  #16                 // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      89: athrow
      90: aload_0
      91: lload         4
      93: iload         10
      95: invokevirtual #9                  // Method org/h2/mvstore/FileStore.readFully:(JI)Ljava/nio/ByteBuffer;
      98: astore        8
     100: lload_1
     101: invokestatic  #17                 // Method org/h2/mvstore/DataUtils.getPageChunkId:(J)I
     104: istore        11
     106: lload_1
     107: invokestatic  #18                 // Method org/h2/mvstore/DataUtils.getPageOffset:(J)I
     110: istore        12
     112: aload         8
     114: invokevirtual #19                 // Method java/nio/ByteBuffer.position:()I
     117: istore        13
     119: aload         8
     121: invokevirtual #10                 // Method java/nio/ByteBuffer.getInt:()I
     124: istore        14
     126: iload         14
     128: iload         9
     130: if_icmple     169
     133: bipush        6
     135: ldc           #20                 // String File corrupted in chunk {0}, expected page length =< {1}, got {2}
     137: iconst_3
     138: anewarray     #13                 // class java/lang/Object
     141: dup
     142: iconst_0
     143: iload         11
     145: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     148: aastore
     149: dup
     150: iconst_1
     151: iload         9
     153: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     156: aastore
     157: dup
     158: iconst_2
     159: iload         14
     161: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     164: aastore
     165: invokestatic  #16                 // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
     168: athrow
     169: aload         8
     171: iload         13
     173: iload         14
     175: iadd
     176: invokevirtual #21                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     179: pop
     180: aload         8
     182: invokevirtual #22                 // Method java/nio/ByteBuffer.getShort:()S
     185: istore        15
     187: aload         8
     189: invokestatic  #23                 // Method org/h2/mvstore/DataUtils.readVarInt:(Ljava/nio/ByteBuffer;)I
     192: istore        16
     194: iload         16
     196: iload_3
     197: if_icmpeq     235
     200: bipush        6
     202: ldc           #24                 // String File corrupted in chunk {0}, expected map id {1}, got {2}
     204: iconst_3
     205: anewarray     #13                 // class java/lang/Object
     208: dup
     209: iconst_0
     210: iload         11
     212: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     215: aastore
     216: dup
     217: iconst_1
     218: iload_3
     219: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     222: aastore
     223: dup
     224: iconst_2
     225: iload         16
     227: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     230: aastore
     231: invokestatic  #16                 // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
     234: athrow
     235: iload         11
     237: invokestatic  #25                 // Method org/h2/mvstore/DataUtils.getCheckValue:(I)S
     240: iload         12
     242: invokestatic  #25                 // Method org/h2/mvstore/DataUtils.getCheckValue:(I)S
     245: ixor
     246: iload         14
     248: invokestatic  #25                 // Method org/h2/mvstore/DataUtils.getCheckValue:(I)S
     251: ixor
     252: istore        17
     254: iload         15
     256: iload         17
     258: i2s
     259: if_icmpeq     298
     262: bipush        6
     264: ldc           #26                 // String File corrupted in chunk {0}, expected check value {1}, got {2}
     266: iconst_3
     267: anewarray     #13                 // class java/lang/Object
     270: dup
     271: iconst_0
     272: iload         11
     274: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     277: aastore
     278: dup
     279: iconst_1
     280: iload         17
     282: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     285: aastore
     286: dup
     287: iconst_2
     288: iload         15
     290: invokestatic  #27                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
     293: aastore
     294: invokestatic  #16                 // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
     297: athrow
     298: aload         8
     300: invokestatic  #23                 // Method org/h2/mvstore/DataUtils.readVarInt:(Ljava/nio/ByteBuffer;)I
     303: istore        18
     305: aload         8
     307: invokevirtual #28                 // Method java/nio/ByteBuffer.get:()B
     310: istore        19
     312: iload         19
     314: iconst_1
     315: iand
     316: iconst_1
     317: if_icmpne     324
     320: iconst_1
     321: goto          325
     324: iconst_0
     325: istore        20
     327: iload         20
     329: ifne          334
     332: aconst_null
     333: areturn
     334: iload         18
     336: iconst_1
     337: iadd
     338: newarray       long
     340: astore        21
     342: iconst_0
     343: istore        22
     345: iload         22
     347: iload         18
     349: if_icmpgt     368
     352: aload         21
     354: iload         22
     356: aload         8
     358: invokevirtual #29                 // Method java/nio/ByteBuffer.getLong:()J
     361: lastore
     362: iinc          22, 1
     365: goto          345
     368: new           #30                 // class org/h2/mvstore/Page$PageChildren
     371: dup
     372: lload_1
     373: aload         21
     375: invokespecial #31                 // Method "<init>":(J[J)V
     378: areturn

  void removeDuplicateChunkReferences();
    Code:
       0: new           #32                 // class java/util/HashSet
       3: dup
       4: invokespecial #33                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field pos:J
      13: invokestatic  #17                 // Method org/h2/mvstore/DataUtils.getPageChunkId:(J)I
      16: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: invokevirtual #34                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      22: pop
      23: iconst_0
      24: istore_2
      25: iload_2
      26: aload_0
      27: getfield      #3                  // Field children:[J
      30: arraylength
      31: if_icmpge     91
      34: aload_0
      35: getfield      #3                  // Field children:[J
      38: iload_2
      39: laload
      40: lstore_3
      41: lload_3
      42: invokestatic  #17                 // Method org/h2/mvstore/DataUtils.getPageChunkId:(J)I
      45: istore        5
      47: aload_1
      48: iload         5
      50: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      53: invokevirtual #34                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      56: istore        6
      58: lload_3
      59: invokestatic  #35                 // Method org/h2/mvstore/DataUtils.getPageType:(J)I
      62: iconst_1
      63: if_icmpne     69
      66: goto          85
      69: iload         6
      71: ifeq          77
      74: goto          85
      77: aload_0
      78: iload_2
      79: iinc          2, -1
      82: invokespecial #36                 // Method removeChild:(I)V
      85: iinc          2, 1
      88: goto          25
      91: return

  private void removeChild(int);
    Code:
       0: iload_1
       1: ifne          21
       4: aload_0
       5: getfield      #3                  // Field children:[J
       8: arraylength
       9: iconst_1
      10: if_icmpne     21
      13: aload_0
      14: getstatic     #37                 // Field EMPTY_ARRAY:[J
      17: putfield      #3                  // Field children:[J
      20: return
      21: aload_0
      22: getfield      #3                  // Field children:[J
      25: arraylength
      26: iconst_1
      27: isub
      28: newarray       long
      30: astore_2
      31: aload_0
      32: getfield      #3                  // Field children:[J
      35: aload_2
      36: aload_0
      37: getfield      #3                  // Field children:[J
      40: arraylength
      41: iload_1
      42: invokestatic  #38                 // Method org/h2/mvstore/DataUtils.copyExcept:(Ljava/lang/Object;Ljava/lang/Object;II)V
      45: aload_0
      46: aload_2
      47: putfield      #3                  // Field children:[J
      50: return

  static {};
    Code:
       0: iconst_0
       1: newarray       long
       3: putstatic     #37                 // Field EMPTY_ARRAY:[J
       6: return
}
