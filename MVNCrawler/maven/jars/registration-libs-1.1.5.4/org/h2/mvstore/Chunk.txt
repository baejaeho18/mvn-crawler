Compiled from "Chunk.java"
public class org.h2.mvstore.Chunk {
  public static final int MAX_ID;

  static final int MAX_HEADER_LENGTH;

  static final int FOOTER_LENGTH;

  public final int id;

  public long block;

  public int len;

  public int pageCount;

  public int pageCountLive;

  public long maxLen;

  public long maxLenLive;

  public int collectPriority;

  public long metaRootPos;

  public long version;

  public long time;

  public long unused;

  public int mapId;

  public long next;

  org.h2.mvstore.Chunk(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field id:I
       9: return

  static org.h2.mvstore.Chunk readChunkHeader(java.nio.ByteBuffer, long);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method java/nio/ByteBuffer.position:()I
       4: istore_3
       5: aload_0
       6: invokevirtual #4                  // Method java/nio/ByteBuffer.remaining:()I
       9: sipush        1024
      12: invokestatic  #5                  // Method java/lang/Math.min:(II)I
      15: newarray       byte
      17: astore        4
      19: aload_0
      20: aload         4
      22: invokevirtual #6                  // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      25: pop
      26: iconst_0
      27: istore        5
      29: iload         5
      31: aload         4
      33: arraylength
      34: if_icmpge     90
      37: aload         4
      39: iload         5
      41: baload
      42: bipush        10
      44: if_icmpne     84
      47: aload_0
      48: iload_3
      49: iload         5
      51: iadd
      52: iconst_1
      53: iadd
      54: invokevirtual #7                  // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      57: pop
      58: new           #8                  // class java/lang/String
      61: dup
      62: aload         4
      64: iconst_0
      65: iload         5
      67: getstatic     #9                  // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
      70: invokespecial #10                 // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
      73: invokevirtual #11                 // Method java/lang/String.trim:()Ljava/lang/String;
      76: astore        6
      78: aload         6
      80: invokestatic  #12                 // Method fromString:(Ljava/lang/String;)Lorg/h2/mvstore/Chunk;
      83: areturn
      84: iinc          5, 1
      87: goto          29
      90: goto          119
      93: astore        5
      95: bipush        6
      97: ldc           #14                 // String File corrupt reading chunk at position {0}
      99: iconst_2
     100: anewarray     #15                 // class java/lang/Object
     103: dup
     104: iconst_0
     105: lload_1
     106: invokestatic  #16                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     109: aastore
     110: dup
     111: iconst_1
     112: aload         5
     114: aastore
     115: invokestatic  #17                 // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
     118: athrow
     119: bipush        6
     121: ldc           #14                 // String File corrupt reading chunk at position {0}
     123: iconst_1
     124: anewarray     #15                 // class java/lang/Object
     127: dup
     128: iconst_0
     129: lload_1
     130: invokestatic  #16                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     133: aastore
     134: invokestatic  #17                 // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
     137: athrow
    Exception table:
       from    to  target type
          26    83    93   Class java/lang/Exception
          84    90    93   Class java/lang/Exception

  void writeChunkHeader(org.h2.mvstore.WriteBuffer, int);
    Code:
       0: aload_1
       1: invokevirtual #18                 // Method org/h2/mvstore/WriteBuffer.position:()I
       4: i2l
       5: lstore_3
       6: aload_1
       7: aload_0
       8: invokevirtual #19                 // Method asString:()Ljava/lang/String;
      11: getstatic     #9                  // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
      14: invokevirtual #20                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      17: invokevirtual #21                 // Method org/h2/mvstore/WriteBuffer.put:([B)Lorg/h2/mvstore/WriteBuffer;
      20: pop
      21: aload_1
      22: invokevirtual #18                 // Method org/h2/mvstore/WriteBuffer.position:()I
      25: i2l
      26: lload_3
      27: lsub
      28: iload_2
      29: iconst_1
      30: isub
      31: i2l
      32: lcmp
      33: ifge          46
      36: aload_1
      37: bipush        32
      39: invokevirtual #22                 // Method org/h2/mvstore/WriteBuffer.put:(B)Lorg/h2/mvstore/WriteBuffer;
      42: pop
      43: goto          21
      46: iload_2
      47: ifeq          69
      50: aload_1
      51: invokevirtual #18                 // Method org/h2/mvstore/WriteBuffer.position:()I
      54: iload_2
      55: if_icmple     69
      58: iconst_3
      59: ldc           #23                 // String Chunk metadata too long
      61: iconst_0
      62: anewarray     #15                 // class java/lang/Object
      65: invokestatic  #17                 // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      68: athrow
      69: aload_1
      70: bipush        10
      72: invokevirtual #22                 // Method org/h2/mvstore/WriteBuffer.put:(B)Lorg/h2/mvstore/WriteBuffer;
      75: pop
      76: return

  static java.lang.String getMetaKey(int);
    Code:
       0: new           #24                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #26                 // String chunk.
       9: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: iload_0
      13: invokestatic  #28                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      16: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  public static org.h2.mvstore.Chunk fromString(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #30                 // Method org/h2/mvstore/DataUtils.parseMap:(Ljava/lang/String;)Ljava/util/HashMap;
       4: astore_1
       5: aload_1
       6: ldc           #31                 // String chunk
       8: iconst_0
       9: invokestatic  #32                 // Method org/h2/mvstore/DataUtils.readHexInt:(Ljava/util/HashMap;Ljava/lang/String;I)I
      12: istore_2
      13: new           #33                 // class org/h2/mvstore/Chunk
      16: dup
      17: iload_2
      18: invokespecial #34                 // Method "<init>":(I)V
      21: astore_3
      22: aload_3
      23: aload_1
      24: ldc           #35                 // String block
      26: lconst_0
      27: invokestatic  #36                 // Method org/h2/mvstore/DataUtils.readHexLong:(Ljava/util/Map;Ljava/lang/String;J)J
      30: putfield      #37                 // Field block:J
      33: aload_3
      34: aload_1
      35: ldc           #38                 // String len
      37: iconst_0
      38: invokestatic  #32                 // Method org/h2/mvstore/DataUtils.readHexInt:(Ljava/util/HashMap;Ljava/lang/String;I)I
      41: putfield      #39                 // Field len:I
      44: aload_3
      45: aload_1
      46: ldc           #40                 // String pages
      48: iconst_0
      49: invokestatic  #32                 // Method org/h2/mvstore/DataUtils.readHexInt:(Ljava/util/HashMap;Ljava/lang/String;I)I
      52: putfield      #41                 // Field pageCount:I
      55: aload_3
      56: aload_1
      57: ldc           #42                 // String livePages
      59: aload_3
      60: getfield      #41                 // Field pageCount:I
      63: invokestatic  #32                 // Method org/h2/mvstore/DataUtils.readHexInt:(Ljava/util/HashMap;Ljava/lang/String;I)I
      66: putfield      #43                 // Field pageCountLive:I
      69: aload_3
      70: aload_1
      71: ldc           #44                 // String map
      73: iconst_0
      74: invokestatic  #32                 // Method org/h2/mvstore/DataUtils.readHexInt:(Ljava/util/HashMap;Ljava/lang/String;I)I
      77: putfield      #45                 // Field mapId:I
      80: aload_3
      81: aload_1
      82: ldc           #46                 // String max
      84: lconst_0
      85: invokestatic  #36                 // Method org/h2/mvstore/DataUtils.readHexLong:(Ljava/util/Map;Ljava/lang/String;J)J
      88: putfield      #47                 // Field maxLen:J
      91: aload_3
      92: aload_1
      93: ldc           #48                 // String liveMax
      95: aload_3
      96: getfield      #47                 // Field maxLen:J
      99: invokestatic  #36                 // Method org/h2/mvstore/DataUtils.readHexLong:(Ljava/util/Map;Ljava/lang/String;J)J
     102: putfield      #49                 // Field maxLenLive:J
     105: aload_3
     106: aload_1
     107: ldc           #50                 // String root
     109: lconst_0
     110: invokestatic  #36                 // Method org/h2/mvstore/DataUtils.readHexLong:(Ljava/util/Map;Ljava/lang/String;J)J
     113: putfield      #51                 // Field metaRootPos:J
     116: aload_3
     117: aload_1
     118: ldc           #52                 // String time
     120: lconst_0
     121: invokestatic  #36                 // Method org/h2/mvstore/DataUtils.readHexLong:(Ljava/util/Map;Ljava/lang/String;J)J
     124: putfield      #53                 // Field time:J
     127: aload_3
     128: aload_1
     129: ldc           #54                 // String unused
     131: lconst_0
     132: invokestatic  #36                 // Method org/h2/mvstore/DataUtils.readHexLong:(Ljava/util/Map;Ljava/lang/String;J)J
     135: putfield      #55                 // Field unused:J
     138: aload_3
     139: aload_1
     140: ldc           #56                 // String version
     142: iload_2
     143: i2l
     144: invokestatic  #36                 // Method org/h2/mvstore/DataUtils.readHexLong:(Ljava/util/Map;Ljava/lang/String;J)J
     147: putfield      #57                 // Field version:J
     150: aload_3
     151: aload_1
     152: ldc           #58                 // String next
     154: lconst_0
     155: invokestatic  #36                 // Method org/h2/mvstore/DataUtils.readHexLong:(Ljava/util/Map;Ljava/lang/String;J)J
     158: putfield      #59                 // Field next:J
     161: aload_3
     162: areturn

  public int getFillRate();
    Code:
       0: aload_0
       1: getfield      #49                 // Field maxLenLive:J
       4: lconst_0
       5: lcmp
       6: ifgt          11
       9: iconst_0
      10: ireturn
      11: aload_0
      12: getfield      #49                 // Field maxLenLive:J
      15: aload_0
      16: getfield      #47                 // Field maxLen:J
      19: lcmp
      20: ifne          26
      23: bipush        100
      25: ireturn
      26: iconst_1
      27: ldc2_w        #60                 // long 98l
      30: aload_0
      31: getfield      #49                 // Field maxLenLive:J
      34: lmul
      35: aload_0
      36: getfield      #47                 // Field maxLen:J
      39: ldiv
      40: l2i
      41: iadd
      42: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field id:I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #33                 // class org/h2/mvstore/Chunk
       4: ifeq          25
       7: aload_1
       8: checkcast     #33                 // class org/h2/mvstore/Chunk
      11: getfield      #2                  // Field id:I
      14: aload_0
      15: getfield      #2                  // Field id:I
      18: if_icmpne     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public java.lang.String asString();
    Code:
       0: new           #24                 // class java/lang/StringBuilder
       3: dup
       4: sipush        240
       7: invokespecial #62                 // Method java/lang/StringBuilder."<init>":(I)V
      10: astore_1
      11: aload_1
      12: ldc           #31                 // String chunk
      14: aload_0
      15: getfield      #2                  // Field id:I
      18: invokestatic  #63                 // Method org/h2/mvstore/DataUtils.appendMap:(Ljava/lang/StringBuilder;Ljava/lang/String;I)V
      21: aload_1
      22: ldc           #35                 // String block
      24: aload_0
      25: getfield      #37                 // Field block:J
      28: invokestatic  #64                 // Method org/h2/mvstore/DataUtils.appendMap:(Ljava/lang/StringBuilder;Ljava/lang/String;J)V
      31: aload_1
      32: ldc           #38                 // String len
      34: aload_0
      35: getfield      #39                 // Field len:I
      38: invokestatic  #63                 // Method org/h2/mvstore/DataUtils.appendMap:(Ljava/lang/StringBuilder;Ljava/lang/String;I)V
      41: aload_0
      42: getfield      #47                 // Field maxLen:J
      45: aload_0
      46: getfield      #49                 // Field maxLenLive:J
      49: lcmp
      50: ifeq          63
      53: aload_1
      54: ldc           #48                 // String liveMax
      56: aload_0
      57: getfield      #49                 // Field maxLenLive:J
      60: invokestatic  #64                 // Method org/h2/mvstore/DataUtils.appendMap:(Ljava/lang/StringBuilder;Ljava/lang/String;J)V
      63: aload_0
      64: getfield      #41                 // Field pageCount:I
      67: aload_0
      68: getfield      #43                 // Field pageCountLive:I
      71: if_icmpeq     84
      74: aload_1
      75: ldc           #42                 // String livePages
      77: aload_0
      78: getfield      #43                 // Field pageCountLive:I
      81: invokestatic  #63                 // Method org/h2/mvstore/DataUtils.appendMap:(Ljava/lang/StringBuilder;Ljava/lang/String;I)V
      84: aload_1
      85: ldc           #44                 // String map
      87: aload_0
      88: getfield      #45                 // Field mapId:I
      91: invokestatic  #63                 // Method org/h2/mvstore/DataUtils.appendMap:(Ljava/lang/StringBuilder;Ljava/lang/String;I)V
      94: aload_1
      95: ldc           #46                 // String max
      97: aload_0
      98: getfield      #47                 // Field maxLen:J
     101: invokestatic  #64                 // Method org/h2/mvstore/DataUtils.appendMap:(Ljava/lang/StringBuilder;Ljava/lang/String;J)V
     104: aload_0
     105: getfield      #59                 // Field next:J
     108: lconst_0
     109: lcmp
     110: ifeq          123
     113: aload_1
     114: ldc           #58                 // String next
     116: aload_0
     117: getfield      #59                 // Field next:J
     120: invokestatic  #64                 // Method org/h2/mvstore/DataUtils.appendMap:(Ljava/lang/StringBuilder;Ljava/lang/String;J)V
     123: aload_1
     124: ldc           #40                 // String pages
     126: aload_0
     127: getfield      #41                 // Field pageCount:I
     130: invokestatic  #63                 // Method org/h2/mvstore/DataUtils.appendMap:(Ljava/lang/StringBuilder;Ljava/lang/String;I)V
     133: aload_1
     134: ldc           #50                 // String root
     136: aload_0
     137: getfield      #51                 // Field metaRootPos:J
     140: invokestatic  #64                 // Method org/h2/mvstore/DataUtils.appendMap:(Ljava/lang/StringBuilder;Ljava/lang/String;J)V
     143: aload_1
     144: ldc           #52                 // String time
     146: aload_0
     147: getfield      #53                 // Field time:J
     150: invokestatic  #64                 // Method org/h2/mvstore/DataUtils.appendMap:(Ljava/lang/StringBuilder;Ljava/lang/String;J)V
     153: aload_0
     154: getfield      #55                 // Field unused:J
     157: lconst_0
     158: lcmp
     159: ifeq          172
     162: aload_1
     163: ldc           #54                 // String unused
     165: aload_0
     166: getfield      #55                 // Field unused:J
     169: invokestatic  #64                 // Method org/h2/mvstore/DataUtils.appendMap:(Ljava/lang/StringBuilder;Ljava/lang/String;J)V
     172: aload_1
     173: ldc           #56                 // String version
     175: aload_0
     176: getfield      #57                 // Field version:J
     179: invokestatic  #64                 // Method org/h2/mvstore/DataUtils.appendMap:(Ljava/lang/StringBuilder;Ljava/lang/String;J)V
     182: aload_1
     183: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     186: areturn

  byte[] getFooterBytes();
    Code:
       0: new           #24                 // class java/lang/StringBuilder
       3: dup
       4: sipush        128
       7: invokespecial #62                 // Method java/lang/StringBuilder."<init>":(I)V
      10: astore_1
      11: aload_1
      12: ldc           #31                 // String chunk
      14: aload_0
      15: getfield      #2                  // Field id:I
      18: invokestatic  #63                 // Method org/h2/mvstore/DataUtils.appendMap:(Ljava/lang/StringBuilder;Ljava/lang/String;I)V
      21: aload_1
      22: ldc           #35                 // String block
      24: aload_0
      25: getfield      #37                 // Field block:J
      28: invokestatic  #64                 // Method org/h2/mvstore/DataUtils.appendMap:(Ljava/lang/StringBuilder;Ljava/lang/String;J)V
      31: aload_1
      32: ldc           #56                 // String version
      34: aload_0
      35: getfield      #57                 // Field version:J
      38: invokestatic  #64                 // Method org/h2/mvstore/DataUtils.appendMap:(Ljava/lang/StringBuilder;Ljava/lang/String;J)V
      41: aload_1
      42: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: getstatic     #9                  // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
      48: invokevirtual #20                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      51: astore_2
      52: aload_2
      53: iconst_0
      54: aload_2
      55: arraylength
      56: invokestatic  #65                 // Method org/h2/mvstore/DataUtils.getFletcher32:([BII)I
      59: istore_3
      60: aload_1
      61: ldc           #66                 // String fletcher
      63: iload_3
      64: invokestatic  #63                 // Method org/h2/mvstore/DataUtils.appendMap:(Ljava/lang/StringBuilder;Ljava/lang/String;I)V
      67: aload_1
      68: invokevirtual #67                 // Method java/lang/StringBuilder.length:()I
      71: bipush        127
      73: if_icmpge     86
      76: aload_1
      77: bipush        32
      79: invokevirtual #68                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      82: pop
      83: goto          67
      86: aload_1
      87: bipush        10
      89: invokevirtual #68                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      92: pop
      93: aload_1
      94: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: getstatic     #9                  // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
     100: invokevirtual #20                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     103: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method asString:()Ljava/lang/String;
       4: areturn
}
