Compiled from "WriteBuffer.java"
public class org.h2.mvstore.WriteBuffer {
  private static final int MAX_REUSE_CAPACITY;

  private static final int MIN_GROW;

  private java.nio.ByteBuffer reuse;

  private java.nio.ByteBuffer buff;

  public org.h2.mvstore.WriteBuffer(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: invokestatic  #2                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       9: putfield      #3                  // Field reuse:Ljava/nio/ByteBuffer;
      12: aload_0
      13: aload_0
      14: getfield      #3                  // Field reuse:Ljava/nio/ByteBuffer;
      17: putfield      #4                  // Field buff:Ljava/nio/ByteBuffer;
      20: return

  public org.h2.mvstore.WriteBuffer();
    Code:
       0: aload_0
       1: ldc           #5                  // int 1048576
       3: invokespecial #6                  // Method "<init>":(I)V
       6: return

  public org.h2.mvstore.WriteBuffer putVarInt(int);
    Code:
       0: aload_0
       1: iconst_5
       2: invokespecial #7                  // Method ensureCapacity:(I)Ljava/nio/ByteBuffer;
       5: iload_1
       6: invokestatic  #8                  // Method org/h2/mvstore/DataUtils.writeVarInt:(Ljava/nio/ByteBuffer;I)V
       9: aload_0
      10: areturn

  public org.h2.mvstore.WriteBuffer putVarLong(long);
    Code:
       0: aload_0
       1: bipush        10
       3: invokespecial #7                  // Method ensureCapacity:(I)Ljava/nio/ByteBuffer;
       6: lload_1
       7: invokestatic  #9                  // Method org/h2/mvstore/DataUtils.writeVarLong:(Ljava/nio/ByteBuffer;J)V
      10: aload_0
      11: areturn

  public org.h2.mvstore.WriteBuffer putStringData(java.lang.String, int);
    Code:
       0: aload_0
       1: iconst_3
       2: iload_2
       3: imul
       4: invokespecial #7                  // Method ensureCapacity:(I)Ljava/nio/ByteBuffer;
       7: astore_3
       8: aload_3
       9: aload_1
      10: iload_2
      11: invokestatic  #10                 // Method org/h2/mvstore/DataUtils.writeStringData:(Ljava/nio/ByteBuffer;Ljava/lang/String;I)V
      14: aload_0
      15: areturn

  public org.h2.mvstore.WriteBuffer put(byte);
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #7                  // Method ensureCapacity:(I)Ljava/nio/ByteBuffer;
       5: iload_1
       6: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
       9: pop
      10: aload_0
      11: areturn

  public org.h2.mvstore.WriteBuffer putChar(char);
    Code:
       0: aload_0
       1: iconst_2
       2: invokespecial #7                  // Method ensureCapacity:(I)Ljava/nio/ByteBuffer;
       5: iload_1
       6: invokevirtual #12                 // Method java/nio/ByteBuffer.putChar:(C)Ljava/nio/ByteBuffer;
       9: pop
      10: aload_0
      11: areturn

  public org.h2.mvstore.WriteBuffer putShort(short);
    Code:
       0: aload_0
       1: iconst_2
       2: invokespecial #7                  // Method ensureCapacity:(I)Ljava/nio/ByteBuffer;
       5: iload_1
       6: invokevirtual #13                 // Method java/nio/ByteBuffer.putShort:(S)Ljava/nio/ByteBuffer;
       9: pop
      10: aload_0
      11: areturn

  public org.h2.mvstore.WriteBuffer putInt(int);
    Code:
       0: aload_0
       1: iconst_4
       2: invokespecial #7                  // Method ensureCapacity:(I)Ljava/nio/ByteBuffer;
       5: iload_1
       6: invokevirtual #14                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
       9: pop
      10: aload_0
      11: areturn

  public org.h2.mvstore.WriteBuffer putLong(long);
    Code:
       0: aload_0
       1: bipush        8
       3: invokespecial #7                  // Method ensureCapacity:(I)Ljava/nio/ByteBuffer;
       6: lload_1
       7: invokevirtual #15                 // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
      10: pop
      11: aload_0
      12: areturn

  public org.h2.mvstore.WriteBuffer putFloat(float);
    Code:
       0: aload_0
       1: iconst_4
       2: invokespecial #7                  // Method ensureCapacity:(I)Ljava/nio/ByteBuffer;
       5: fload_1
       6: invokevirtual #16                 // Method java/nio/ByteBuffer.putFloat:(F)Ljava/nio/ByteBuffer;
       9: pop
      10: aload_0
      11: areturn

  public org.h2.mvstore.WriteBuffer putDouble(double);
    Code:
       0: aload_0
       1: bipush        8
       3: invokespecial #7                  // Method ensureCapacity:(I)Ljava/nio/ByteBuffer;
       6: dload_1
       7: invokevirtual #17                 // Method java/nio/ByteBuffer.putDouble:(D)Ljava/nio/ByteBuffer;
      10: pop
      11: aload_0
      12: areturn

  public org.h2.mvstore.WriteBuffer put(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: arraylength
       3: invokespecial #7                  // Method ensureCapacity:(I)Ljava/nio/ByteBuffer;
       6: aload_1
       7: invokevirtual #18                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      10: pop
      11: aload_0
      12: areturn

  public org.h2.mvstore.WriteBuffer put(byte[], int, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokespecial #7                  // Method ensureCapacity:(I)Ljava/nio/ByteBuffer;
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokevirtual #19                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      11: pop
      12: aload_0
      13: areturn

  public org.h2.mvstore.WriteBuffer put(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
       5: invokespecial #7                  // Method ensureCapacity:(I)Ljava/nio/ByteBuffer;
       8: aload_1
       9: invokevirtual #21                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      12: pop
      13: aload_0
      14: areturn

  public org.h2.mvstore.WriteBuffer limit(int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: getfield      #4                  // Field buff:Ljava/nio/ByteBuffer;
       6: invokevirtual #22                 // Method java/nio/ByteBuffer.position:()I
       9: isub
      10: invokespecial #7                  // Method ensureCapacity:(I)Ljava/nio/ByteBuffer;
      13: iload_1
      14: invokevirtual #23                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      17: pop
      18: aload_0
      19: areturn

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #4                  // Field buff:Ljava/nio/ByteBuffer;
       4: invokevirtual #24                 // Method java/nio/ByteBuffer.capacity:()I
       7: ireturn

  public org.h2.mvstore.WriteBuffer position(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field buff:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokevirtual #25                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
       8: pop
       9: aload_0
      10: areturn

  public int limit();
    Code:
       0: aload_0
       1: getfield      #4                  // Field buff:Ljava/nio/ByteBuffer;
       4: invokevirtual #26                 // Method java/nio/ByteBuffer.limit:()I
       7: ireturn

  public int position();
    Code:
       0: aload_0
       1: getfield      #4                  // Field buff:Ljava/nio/ByteBuffer;
       4: invokevirtual #22                 // Method java/nio/ByteBuffer.position:()I
       7: ireturn

  public org.h2.mvstore.WriteBuffer get(byte[]);
    Code:
       0: aload_0
       1: getfield      #4                  // Field buff:Ljava/nio/ByteBuffer;
       4: aload_1
       5: invokevirtual #27                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
       8: pop
       9: aload_0
      10: areturn

  public org.h2.mvstore.WriteBuffer putInt(int, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field buff:Ljava/nio/ByteBuffer;
       4: iload_1
       5: iload_2
       6: invokevirtual #28                 // Method java/nio/ByteBuffer.putInt:(II)Ljava/nio/ByteBuffer;
       9: pop
      10: aload_0
      11: areturn

  public org.h2.mvstore.WriteBuffer putShort(int, short);
    Code:
       0: aload_0
       1: getfield      #4                  // Field buff:Ljava/nio/ByteBuffer;
       4: iload_1
       5: iload_2
       6: invokevirtual #29                 // Method java/nio/ByteBuffer.putShort:(IS)Ljava/nio/ByteBuffer;
       9: pop
      10: aload_0
      11: areturn

  public org.h2.mvstore.WriteBuffer clear();
    Code:
       0: aload_0
       1: getfield      #4                  // Field buff:Ljava/nio/ByteBuffer;
       4: invokevirtual #26                 // Method java/nio/ByteBuffer.limit:()I
       7: ldc           #30                 // int 4194304
       9: if_icmple     23
      12: aload_0
      13: aload_0
      14: getfield      #3                  // Field reuse:Ljava/nio/ByteBuffer;
      17: putfield      #4                  // Field buff:Ljava/nio/ByteBuffer;
      20: goto          42
      23: aload_0
      24: getfield      #4                  // Field buff:Ljava/nio/ByteBuffer;
      27: aload_0
      28: getfield      #3                  // Field reuse:Ljava/nio/ByteBuffer;
      31: if_acmpeq     42
      34: aload_0
      35: aload_0
      36: getfield      #4                  // Field buff:Ljava/nio/ByteBuffer;
      39: putfield      #3                  // Field reuse:Ljava/nio/ByteBuffer;
      42: aload_0
      43: getfield      #4                  // Field buff:Ljava/nio/ByteBuffer;
      46: invokevirtual #31                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      49: pop
      50: aload_0
      51: areturn

  public java.nio.ByteBuffer getBuffer();
    Code:
       0: aload_0
       1: getfield      #4                  // Field buff:Ljava/nio/ByteBuffer;
       4: areturn

  private java.nio.ByteBuffer ensureCapacity(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field buff:Ljava/nio/ByteBuffer;
       4: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
       7: iload_1
       8: if_icmpge     16
      11: aload_0
      12: iload_1
      13: invokespecial #32                 // Method grow:(I)V
      16: aload_0
      17: getfield      #4                  // Field buff:Ljava/nio/ByteBuffer;
      20: areturn

  private void grow(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field buff:Ljava/nio/ByteBuffer;
       4: astore_2
       5: iload_1
       6: aload_2
       7: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
      10: isub
      11: istore_3
      12: iload_3
      13: ldc           #5                  // int 1048576
      15: invokestatic  #33                 // Method java/lang/Math.max:(II)I
      18: i2l
      19: lstore        4
      21: aload_2
      22: invokevirtual #24                 // Method java/nio/ByteBuffer.capacity:()I
      25: iconst_2
      26: idiv
      27: i2l
      28: lload         4
      30: invokestatic  #34                 // Method java/lang/Math.max:(JJ)J
      33: lstore        4
      35: ldc2_w        #35                 // long 2147483647l
      38: aload_2
      39: invokevirtual #24                 // Method java/nio/ByteBuffer.capacity:()I
      42: i2l
      43: lload         4
      45: ladd
      46: invokestatic  #37                 // Method java/lang/Math.min:(JJ)J
      49: l2i
      50: istore        6
      52: iload         6
      54: iload_3
      55: if_icmpge     95
      58: new           #38                 // class java/lang/OutOfMemoryError
      61: dup
      62: new           #39                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #41                 // String Capacity:
      71: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: iload         6
      76: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      79: ldc           #44                 // String  needed:
      81: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: iload_3
      85: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      88: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokespecial #46                 // Method java/lang/OutOfMemoryError."<init>":(Ljava/lang/String;)V
      94: athrow
      95: aload_0
      96: iload         6
      98: invokestatic  #2                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     101: putfield      #4                  // Field buff:Ljava/nio/ByteBuffer;
     104: goto          137
     107: astore        7
     109: new           #38                 // class java/lang/OutOfMemoryError
     112: dup
     113: new           #39                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     120: ldc           #41                 // String Capacity:
     122: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: iload         6
     127: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     130: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     133: invokespecial #46                 // Method java/lang/OutOfMemoryError."<init>":(Ljava/lang/String;)V
     136: athrow
     137: aload_2
     138: invokevirtual #47                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     141: pop
     142: aload_0
     143: getfield      #4                  // Field buff:Ljava/nio/ByteBuffer;
     146: aload_2
     147: invokevirtual #21                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     150: pop
     151: iload         6
     153: ldc           #30                 // int 4194304
     155: if_icmpgt     166
     158: aload_0
     159: aload_0
     160: getfield      #4                  // Field buff:Ljava/nio/ByteBuffer;
     163: putfield      #3                  // Field reuse:Ljava/nio/ByteBuffer;
     166: return
    Exception table:
       from    to  target type
          95   104   107   Class java/lang/OutOfMemoryError
}
