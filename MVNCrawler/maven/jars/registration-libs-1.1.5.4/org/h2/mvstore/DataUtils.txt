Compiled from "DataUtils.java"
public final class org.h2.mvstore.DataUtils {
  public static final int ERROR_READING_FAILED;

  public static final int ERROR_WRITING_FAILED;

  public static final int ERROR_INTERNAL;

  public static final int ERROR_CLOSED;

  public static final int ERROR_UNSUPPORTED_FORMAT;

  public static final int ERROR_FILE_CORRUPT;

  public static final int ERROR_FILE_LOCKED;

  public static final int ERROR_SERIALIZATION;

  public static final int ERROR_CHUNK_NOT_FOUND;

  public static final int ERROR_BLOCK_NOT_FOUND;

  public static final int ERROR_TRANSACTION_CORRUPT;

  public static final int ERROR_TRANSACTION_LOCKED;

  public static final int ERROR_TOO_MANY_OPEN_TRANSACTIONS;

  public static final int ERROR_TRANSACTION_ILLEGAL_STATE;

  public static final int PAGE_TYPE_LEAF;

  public static final int PAGE_TYPE_NODE;

  public static final int PAGE_COMPRESSED;

  public static final int PAGE_COMPRESSED_HIGH;

  public static final int MAX_VAR_INT_LEN;

  public static final int MAX_VAR_LONG_LEN;

  public static final int COMPRESSED_VAR_INT_MAX;

  public static final long COMPRESSED_VAR_LONG_MAX;

  public static final int PAGE_MEMORY;

  public static final int PAGE_MEMORY_CHILD;

  public static final int PAGE_LARGE;

  public org.h2.mvstore.DataUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static int getVarIntLen(int);
    Code:
       0: iload_0
       1: bipush        -128
       3: iand
       4: ifne          9
       7: iconst_1
       8: ireturn
       9: iload_0
      10: sipush        -16384
      13: iand
      14: ifne          19
      17: iconst_2
      18: ireturn
      19: iload_0
      20: ldc           #2                  // int -2097152
      22: iand
      23: ifne          28
      26: iconst_3
      27: ireturn
      28: iload_0
      29: ldc           #3                  // int -268435456
      31: iand
      32: ifne          37
      35: iconst_4
      36: ireturn
      37: iconst_5
      38: ireturn

  public static int getVarLongLen(long);
    Code:
       0: iconst_1
       1: istore_2
       2: lload_0
       3: bipush        7
       5: lushr
       6: lstore_0
       7: lload_0
       8: lconst_0
       9: lcmp
      10: ifne          15
      13: iload_2
      14: ireturn
      15: iinc          2, 1
      18: goto          2

  public static int readVarInt(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method java/nio/ByteBuffer.get:()B
       4: istore_1
       5: iload_1
       6: iflt          11
       9: iload_1
      10: ireturn
      11: aload_0
      12: iload_1
      13: invokestatic  #5                  // Method readVarIntRest:(Ljava/nio/ByteBuffer;I)I
      16: ireturn

  private static int readVarIntRest(java.nio.ByteBuffer, int);
    Code:
       0: iload_1
       1: bipush        127
       3: iand
       4: istore_2
       5: aload_0
       6: invokevirtual #4                  // Method java/nio/ByteBuffer.get:()B
       9: istore_1
      10: iload_1
      11: iflt          21
      14: iload_2
      15: iload_1
      16: bipush        7
      18: ishl
      19: ior
      20: ireturn
      21: iload_2
      22: iload_1
      23: bipush        127
      25: iand
      26: bipush        7
      28: ishl
      29: ior
      30: istore_2
      31: aload_0
      32: invokevirtual #4                  // Method java/nio/ByteBuffer.get:()B
      35: istore_1
      36: iload_1
      37: iflt          47
      40: iload_2
      41: iload_1
      42: bipush        14
      44: ishl
      45: ior
      46: ireturn
      47: iload_2
      48: iload_1
      49: bipush        127
      51: iand
      52: bipush        14
      54: ishl
      55: ior
      56: istore_2
      57: aload_0
      58: invokevirtual #4                  // Method java/nio/ByteBuffer.get:()B
      61: istore_1
      62: iload_1
      63: iflt          73
      66: iload_2
      67: iload_1
      68: bipush        21
      70: ishl
      71: ior
      72: ireturn
      73: iload_2
      74: iload_1
      75: bipush        127
      77: iand
      78: bipush        21
      80: ishl
      81: aload_0
      82: invokevirtual #4                  // Method java/nio/ByteBuffer.get:()B
      85: bipush        28
      87: ishl
      88: ior
      89: ior
      90: istore_2
      91: iload_2
      92: ireturn

  public static long readVarLong(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method java/nio/ByteBuffer.get:()B
       4: i2l
       5: lstore_1
       6: lload_1
       7: lconst_0
       8: lcmp
       9: iflt          14
      12: lload_1
      13: lreturn
      14: lload_1
      15: ldc2_w        #6                  // long 127l
      18: land
      19: lstore_1
      20: bipush        7
      22: istore_3
      23: iload_3
      24: bipush        64
      26: if_icmpge     63
      29: aload_0
      30: invokevirtual #4                  // Method java/nio/ByteBuffer.get:()B
      33: i2l
      34: lstore        4
      36: lload_1
      37: lload         4
      39: ldc2_w        #6                  // long 127l
      42: land
      43: iload_3
      44: lshl
      45: lor
      46: lstore_1
      47: lload         4
      49: lconst_0
      50: lcmp
      51: iflt          57
      54: goto          63
      57: iinc          3, 7
      60: goto          23
      63: lload_1
      64: lreturn

  public static void writeVarInt(java.io.OutputStream, int) throws java.io.IOException;
    Code:
       0: iload_1
       1: bipush        -128
       3: iand
       4: ifeq          28
       7: aload_0
       8: sipush        128
      11: iload_1
      12: bipush        127
      14: iand
      15: ior
      16: i2b
      17: invokevirtual #8                  // Method java/io/OutputStream.write:(I)V
      20: iload_1
      21: bipush        7
      23: iushr
      24: istore_1
      25: goto          0
      28: aload_0
      29: iload_1
      30: i2b
      31: invokevirtual #8                  // Method java/io/OutputStream.write:(I)V
      34: return

  public static void writeVarInt(java.nio.ByteBuffer, int);
    Code:
       0: iload_1
       1: bipush        -128
       3: iand
       4: ifeq          29
       7: aload_0
       8: sipush        128
      11: iload_1
      12: bipush        127
      14: iand
      15: ior
      16: i2b
      17: invokevirtual #9                  // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      20: pop
      21: iload_1
      22: bipush        7
      24: iushr
      25: istore_1
      26: goto          0
      29: aload_0
      30: iload_1
      31: i2b
      32: invokevirtual #9                  // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      35: pop
      36: return

  public static void writeStringData(java.nio.ByteBuffer, java.lang.String, int);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: iload_2
       4: if_icmpge     116
       7: aload_1
       8: iload_3
       9: invokevirtual #10                 // Method java/lang/String.charAt:(I)C
      12: istore        4
      14: iload         4
      16: sipush        128
      19: if_icmpge     33
      22: aload_0
      23: iload         4
      25: i2b
      26: invokevirtual #9                  // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      29: pop
      30: goto          110
      33: iload         4
      35: sipush        2048
      38: if_icmplt     84
      41: aload_0
      42: sipush        224
      45: iload         4
      47: bipush        12
      49: ishr
      50: ior
      51: i2b
      52: invokevirtual #9                  // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      55: pop
      56: aload_0
      57: iload         4
      59: bipush        6
      61: ishr
      62: bipush        63
      64: iand
      65: i2b
      66: invokevirtual #9                  // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      69: pop
      70: aload_0
      71: iload         4
      73: bipush        63
      75: iand
      76: i2b
      77: invokevirtual #9                  // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      80: pop
      81: goto          110
      84: aload_0
      85: sipush        192
      88: iload         4
      90: bipush        6
      92: ishr
      93: ior
      94: i2b
      95: invokevirtual #9                  // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      98: pop
      99: aload_0
     100: iload         4
     102: bipush        63
     104: iand
     105: i2b
     106: invokevirtual #9                  // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     109: pop
     110: iinc          3, 1
     113: goto          2
     116: return

  public static java.lang.String readString(java.nio.ByteBuffer, int);
    Code:
       0: iload_1
       1: newarray       char
       3: astore_2
       4: iconst_0
       5: istore_3
       6: iload_3
       7: iload_1
       8: if_icmpge     106
      11: aload_0
      12: invokevirtual #4                  // Method java/nio/ByteBuffer.get:()B
      15: sipush        255
      18: iand
      19: istore        4
      21: iload         4
      23: sipush        128
      26: if_icmpge     38
      29: aload_2
      30: iload_3
      31: iload         4
      33: i2c
      34: castore
      35: goto          100
      38: iload         4
      40: sipush        224
      43: if_icmplt     80
      46: aload_2
      47: iload_3
      48: iload         4
      50: bipush        15
      52: iand
      53: bipush        12
      55: ishl
      56: aload_0
      57: invokevirtual #4                  // Method java/nio/ByteBuffer.get:()B
      60: bipush        63
      62: iand
      63: bipush        6
      65: ishl
      66: iadd
      67: aload_0
      68: invokevirtual #4                  // Method java/nio/ByteBuffer.get:()B
      71: bipush        63
      73: iand
      74: iadd
      75: i2c
      76: castore
      77: goto          100
      80: aload_2
      81: iload_3
      82: iload         4
      84: bipush        31
      86: iand
      87: bipush        6
      89: ishl
      90: aload_0
      91: invokevirtual #4                  // Method java/nio/ByteBuffer.get:()B
      94: bipush        63
      96: iand
      97: iadd
      98: i2c
      99: castore
     100: iinc          3, 1
     103: goto          6
     106: new           #11                 // class java/lang/String
     109: dup
     110: aload_2
     111: invokespecial #12                 // Method java/lang/String."<init>":([C)V
     114: areturn

  public static void writeVarLong(java.nio.ByteBuffer, long);
    Code:
       0: lload_1
       1: ldc2_w        #13                 // long -128l
       4: land
       5: lconst_0
       6: lcmp
       7: ifeq          34
      10: aload_0
      11: ldc2_w        #15                 // long 128l
      14: lload_1
      15: ldc2_w        #6                  // long 127l
      18: land
      19: lor
      20: l2i
      21: i2b
      22: invokevirtual #9                  // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      25: pop
      26: lload_1
      27: bipush        7
      29: lushr
      30: lstore_1
      31: goto          0
      34: aload_0
      35: lload_1
      36: l2i
      37: i2b
      38: invokevirtual #9                  // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      41: pop
      42: return

  public static void writeVarLong(java.io.OutputStream, long) throws java.io.IOException;
    Code:
       0: lload_1
       1: ldc2_w        #13                 // long -128l
       4: land
       5: lconst_0
       6: lcmp
       7: ifeq          33
      10: aload_0
      11: ldc2_w        #15                 // long 128l
      14: lload_1
      15: ldc2_w        #6                  // long 127l
      18: land
      19: lor
      20: l2i
      21: i2b
      22: invokevirtual #8                  // Method java/io/OutputStream.write:(I)V
      25: lload_1
      26: bipush        7
      28: lushr
      29: lstore_1
      30: goto          0
      33: aload_0
      34: lload_1
      35: l2i
      36: i2b
      37: invokevirtual #8                  // Method java/io/OutputStream.write:(I)V
      40: return

  public static void copyWithGap(java.lang.Object, java.lang.Object, int, int);
    Code:
       0: iload_3
       1: ifle          12
       4: aload_0
       5: iconst_0
       6: aload_1
       7: iconst_0
       8: iload_3
       9: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      12: iload_3
      13: iload_2
      14: if_icmpge     29
      17: aload_0
      18: iload_3
      19: aload_1
      20: iload_3
      21: iconst_1
      22: iadd
      23: iload_2
      24: iload_3
      25: isub
      26: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      29: return

  public static void copyExcept(java.lang.Object, java.lang.Object, int, int);
    Code:
       0: iload_3
       1: ifle          16
       4: iload_2
       5: ifle          16
       8: aload_0
       9: iconst_0
      10: aload_1
      11: iconst_0
      12: iload_3
      13: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      16: iload_3
      17: iload_2
      18: if_icmpge     35
      21: aload_0
      22: iload_3
      23: iconst_1
      24: iadd
      25: aload_1
      26: iload_3
      27: iload_2
      28: iload_3
      29: isub
      30: iconst_1
      31: isub
      32: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      35: return

  public static void readFully(java.nio.channels.FileChannel, long, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_3
       2: lload_1
       3: invokevirtual #18                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;J)I
       6: istore        4
       8: iload         4
      10: ifge          21
      13: new           #19                 // class java/io/EOFException
      16: dup
      17: invokespecial #20                 // Method java/io/EOFException."<init>":()V
      20: athrow
      21: lload_1
      22: iload         4
      24: i2l
      25: ladd
      26: lstore_1
      27: aload_3
      28: invokevirtual #21                 // Method java/nio/ByteBuffer.remaining:()I
      31: ifgt          0
      34: aload_3
      35: invokevirtual #22                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      38: pop
      39: goto          105
      42: astore        4
      44: aload_0
      45: invokevirtual #24                 // Method java/nio/channels/FileChannel.size:()J
      48: lstore        5
      50: goto          60
      53: astore        7
      55: ldc2_w        #25                 // long -1l
      58: lstore        5
      60: iconst_1
      61: ldc           #27                 // String Reading from {0} failed; file length {1} read length {2} at {3}
      63: iconst_5
      64: anewarray     #28                 // class java/lang/Object
      67: dup
      68: iconst_0
      69: aload_0
      70: aastore
      71: dup
      72: iconst_1
      73: lload         5
      75: invokestatic  #29                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      78: aastore
      79: dup
      80: iconst_2
      81: aload_3
      82: invokevirtual #21                 // Method java/nio/ByteBuffer.remaining:()I
      85: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      88: aastore
      89: dup
      90: iconst_3
      91: lload_1
      92: invokestatic  #29                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      95: aastore
      96: dup
      97: iconst_4
      98: aload         4
     100: aastore
     101: invokestatic  #31                 // Method newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
     104: athrow
     105: return
    Exception table:
       from    to  target type
           0    39    42   Class java/io/IOException
          44    50    53   Class java/io/IOException

  public static void writeFully(java.nio.channels.FileChannel, long, java.nio.ByteBuffer);
    Code:
       0: iconst_0
       1: istore        4
       3: aload_0
       4: aload_3
       5: lload_1
       6: iload         4
       8: i2l
       9: ladd
      10: invokevirtual #32                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;J)I
      13: istore        5
      15: iload         4
      17: iload         5
      19: iadd
      20: istore        4
      22: aload_3
      23: invokevirtual #21                 // Method java/nio/ByteBuffer.remaining:()I
      26: ifgt          3
      29: goto          71
      32: astore        4
      34: iconst_2
      35: ldc           #33                 // String Writing to {0} failed; length {1} at {2}
      37: iconst_4
      38: anewarray     #28                 // class java/lang/Object
      41: dup
      42: iconst_0
      43: aload_0
      44: aastore
      45: dup
      46: iconst_1
      47: aload_3
      48: invokevirtual #21                 // Method java/nio/ByteBuffer.remaining:()I
      51: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      54: aastore
      55: dup
      56: iconst_2
      57: lload_1
      58: invokestatic  #29                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      61: aastore
      62: dup
      63: iconst_3
      64: aload         4
      66: aastore
      67: invokestatic  #31                 // Method newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      70: athrow
      71: return
    Exception table:
       from    to  target type
           0    29    32   Class java/io/IOException

  public static int encodeLength(int);
    Code:
       0: iload_0
       1: bipush        32
       3: if_icmpgt     8
       6: iconst_0
       7: ireturn
       8: iload_0
       9: invokestatic  #34                 // Method java/lang/Integer.numberOfLeadingZeros:(I)I
      12: istore_1
      13: iload_0
      14: iload_1
      15: iconst_1
      16: iadd
      17: ishl
      18: istore_2
      19: iload_1
      20: iload_1
      21: iadd
      22: istore_1
      23: iload_2
      24: ldc           #35                 // int -2147483648
      26: iand
      27: ifeq          33
      30: iinc          1, -1
      33: iload_2
      34: iconst_1
      35: ishl
      36: ifeq          42
      39: iinc          1, -1
      42: bipush        31
      44: bipush        52
      46: iload_1
      47: isub
      48: invokestatic  #36                 // Method java/lang/Math.min:(II)I
      51: istore_1
      52: iload_1
      53: ireturn

  public static int getPageChunkId(long);
    Code:
       0: lload_0
       1: bipush        38
       3: lushr
       4: l2i
       5: ireturn

  public static int getPageMaxLength(long);
    Code:
       0: lload_0
       1: iconst_1
       2: lshr
       3: ldc2_w        #37                 // long 31l
       6: land
       7: l2i
       8: istore_2
       9: iload_2
      10: bipush        31
      12: if_icmpne     18
      15: ldc           #39                 // int 2097152
      17: ireturn
      18: iconst_2
      19: iload_2
      20: iconst_1
      21: iand
      22: iadd
      23: iload_2
      24: iconst_1
      25: ishr
      26: iconst_4
      27: iadd
      28: ishl
      29: ireturn

  public static int getPageOffset(long);
    Code:
       0: lload_0
       1: bipush        6
       3: lshr
       4: l2i
       5: ireturn

  public static int getPageType(long);
    Code:
       0: lload_0
       1: l2i
       2: iconst_1
       3: iand
       4: ireturn

  public static long getPagePos(int, int, int, int);
    Code:
       0: iload_0
       1: i2l
       2: bipush        38
       4: lshl
       5: lstore        4
       7: lload         4
       9: iload_1
      10: i2l
      11: bipush        6
      13: lshl
      14: lor
      15: lstore        4
      17: lload         4
      19: iload_2
      20: invokestatic  #40                 // Method encodeLength:(I)I
      23: iconst_1
      24: ishl
      25: i2l
      26: lor
      27: lstore        4
      29: lload         4
      31: iload_3
      32: i2l
      33: lor
      34: lstore        4
      36: lload         4
      38: lreturn

  public static short getCheckValue(int);
    Code:
       0: iload_0
       1: bipush        16
       3: ishr
       4: iload_0
       5: ixor
       6: i2s
       7: ireturn

  public static java.lang.StringBuilder appendMap(java.lang.StringBuilder, java.util.HashMap<java.lang.String, ?>);
    Code:
       0: aload_1
       1: invokevirtual #41                 // Method java/util/HashMap.keySet:()Ljava/util/Set;
       4: invokeinterface #42,  1           // InterfaceMethod java/util/Set.toArray:()[Ljava/lang/Object;
       9: astore_2
      10: aload_2
      11: invokestatic  #43                 // Method java/util/Arrays.sort:([Ljava/lang/Object;)V
      14: aload_2
      15: astore_3
      16: aload_3
      17: arraylength
      18: istore        4
      20: iconst_0
      21: istore        5
      23: iload         5
      25: iload         4
      27: if_icmpge     118
      30: aload_3
      31: iload         5
      33: aaload
      34: astore        6
      36: aload         6
      38: checkcast     #11                 // class java/lang/String
      41: astore        7
      43: aload_1
      44: aload         7
      46: invokevirtual #44                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      49: astore        8
      51: aload         8
      53: instanceof    #45                 // class java/lang/Long
      56: ifeq          76
      59: aload_0
      60: aload         7
      62: aload         8
      64: checkcast     #45                 // class java/lang/Long
      67: invokevirtual #46                 // Method java/lang/Long.longValue:()J
      70: invokestatic  #47                 // Method appendMap:(Ljava/lang/StringBuilder;Ljava/lang/String;J)V
      73: goto          112
      76: aload         8
      78: instanceof    #48                 // class java/lang/Integer
      81: ifeq          101
      84: aload_0
      85: aload         7
      87: aload         8
      89: checkcast     #48                 // class java/lang/Integer
      92: invokevirtual #49                 // Method java/lang/Integer.intValue:()I
      95: invokestatic  #50                 // Method appendMap:(Ljava/lang/StringBuilder;Ljava/lang/String;I)V
      98: goto          112
     101: aload_0
     102: aload         7
     104: aload         8
     106: invokevirtual #51                 // Method java/lang/Object.toString:()Ljava/lang/String;
     109: invokestatic  #52                 // Method appendMap:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V
     112: iinc          5, 1
     115: goto          23
     118: aload_0
     119: areturn

  private static java.lang.StringBuilder appendMapKey(java.lang.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method java/lang/StringBuilder.length:()I
       4: ifle          14
       7: aload_0
       8: bipush        44
      10: invokevirtual #54                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      13: pop
      14: aload_0
      15: aload_1
      16: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: bipush        58
      21: invokevirtual #54                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: areturn

  public static void appendMap(java.lang.StringBuilder, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #56                 // Method appendMapKey:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;
       5: pop
       6: aload_2
       7: bipush        44
       9: invokevirtual #57                 // Method java/lang/String.indexOf:(I)I
      12: ifge          33
      15: aload_2
      16: bipush        34
      18: invokevirtual #57                 // Method java/lang/String.indexOf:(I)I
      21: ifge          33
      24: aload_0
      25: aload_2
      26: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: pop
      30: goto          95
      33: aload_0
      34: bipush        34
      36: invokevirtual #54                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      39: pop
      40: iconst_0
      41: istore_3
      42: aload_2
      43: invokevirtual #58                 // Method java/lang/String.length:()I
      46: istore        4
      48: iload_3
      49: iload         4
      51: if_icmpge     88
      54: aload_2
      55: iload_3
      56: invokevirtual #10                 // Method java/lang/String.charAt:(I)C
      59: istore        5
      61: iload         5
      63: bipush        34
      65: if_icmpne     75
      68: aload_0
      69: bipush        92
      71: invokevirtual #54                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      74: pop
      75: aload_0
      76: iload         5
      78: invokevirtual #54                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      81: pop
      82: iinc          3, 1
      85: goto          48
      88: aload_0
      89: bipush        34
      91: invokevirtual #54                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      94: pop
      95: return

  public static void appendMap(java.lang.StringBuilder, java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #56                 // Method appendMapKey:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;
       5: lload_2
       6: invokestatic  #59                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
       9: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: pop
      13: return

  public static void appendMap(java.lang.StringBuilder, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #56                 // Method appendMapKey:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;
       5: iload_2
       6: invokestatic  #60                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
       9: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: pop
      13: return

  private static int parseMapValue(java.lang.StringBuilder, java.lang.String, int, int);
    Code:
       0: iload_2
       1: iload_3
       2: if_icmpge     118
       5: aload_1
       6: iload_2
       7: iinc          2, 1
      10: invokevirtual #10                 // Method java/lang/String.charAt:(I)C
      13: istore        4
      15: iload         4
      17: bipush        44
      19: if_icmpne     25
      22: goto          118
      25: iload         4
      27: bipush        34
      29: if_icmpne     108
      32: iload_2
      33: iload_3
      34: if_icmpge     115
      37: aload_1
      38: iload_2
      39: iinc          2, 1
      42: invokevirtual #10                 // Method java/lang/String.charAt:(I)C
      45: istore        4
      47: iload         4
      49: bipush        92
      51: if_icmpne     88
      54: iload_2
      55: iload_3
      56: if_icmpne     75
      59: bipush        6
      61: ldc           #61                 // String Not a map: {0}
      63: iconst_1
      64: anewarray     #28                 // class java/lang/Object
      67: dup
      68: iconst_0
      69: aload_1
      70: aastore
      71: invokestatic  #31                 // Method newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      74: athrow
      75: aload_1
      76: iload_2
      77: iinc          2, 1
      80: invokevirtual #10                 // Method java/lang/String.charAt:(I)C
      83: istore        4
      85: goto          98
      88: iload         4
      90: bipush        34
      92: if_icmpne     98
      95: goto          115
      98: aload_0
      99: iload         4
     101: invokevirtual #54                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     104: pop
     105: goto          32
     108: aload_0
     109: iload         4
     111: invokevirtual #54                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     114: pop
     115: goto          0
     118: iload_2
     119: ireturn

  public static java.util.HashMap<java.lang.String, java.lang.String> parseMap(java.lang.String);
    Code:
       0: new           #62                 // class java/util/HashMap
       3: dup
       4: invokespecial #63                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: new           #64                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
      15: astore_2
      16: iconst_0
      17: istore_3
      18: aload_0
      19: invokevirtual #58                 // Method java/lang/String.length:()I
      22: istore        4
      24: iload_3
      25: iload         4
      27: if_icmpge     101
      30: iload_3
      31: istore        5
      33: aload_0
      34: bipush        58
      36: iload_3
      37: invokevirtual #66                 // Method java/lang/String.indexOf:(II)I
      40: istore_3
      41: iload_3
      42: ifge          61
      45: bipush        6
      47: ldc           #61                 // String Not a map: {0}
      49: iconst_1
      50: anewarray     #28                 // class java/lang/Object
      53: dup
      54: iconst_0
      55: aload_0
      56: aastore
      57: invokestatic  #31                 // Method newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      60: athrow
      61: aload_0
      62: iload         5
      64: iload_3
      65: iinc          3, 1
      68: invokevirtual #67                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      71: astore        6
      73: aload_2
      74: aload_0
      75: iload_3
      76: iload         4
      78: invokestatic  #68                 // Method parseMapValue:(Ljava/lang/StringBuilder;Ljava/lang/String;II)I
      81: istore_3
      82: aload_1
      83: aload         6
      85: aload_2
      86: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #70                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      92: pop
      93: aload_2
      94: iconst_0
      95: invokevirtual #71                 // Method java/lang/StringBuilder.setLength:(I)V
      98: goto          24
     101: aload_1
     102: areturn

  public static java.util.HashMap<java.lang.String, java.lang.String> parseChecksummedMap(byte[]);
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: arraylength
       4: istore_2
       5: iload_1
       6: iload_2
       7: if_icmpge     24
      10: aload_0
      11: iload_1
      12: baload
      13: bipush        32
      15: if_icmpgt     24
      18: iinc          1, 1
      21: goto          5
      24: iload_1
      25: iload_2
      26: if_icmpge     45
      29: aload_0
      30: iload_2
      31: iconst_1
      32: isub
      33: baload
      34: bipush        32
      36: if_icmpgt     45
      39: iinc          2, -1
      42: goto          24
      45: new           #11                 // class java/lang/String
      48: dup
      49: aload_0
      50: iload_1
      51: iload_2
      52: iload_1
      53: isub
      54: getstatic     #72                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
      57: invokespecial #73                 // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
      60: astore_3
      61: new           #62                 // class java/util/HashMap
      64: dup
      65: invokespecial #63                 // Method java/util/HashMap."<init>":()V
      68: astore        4
      70: new           #64                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
      77: astore        5
      79: iconst_0
      80: istore        6
      82: aload_3
      83: invokevirtual #58                 // Method java/lang/String.length:()I
      86: istore        7
      88: iload         6
      90: iload         7
      92: if_icmpge     246
      95: iload         6
      97: istore        8
      99: aload_3
     100: bipush        58
     102: iload         6
     104: invokevirtual #66                 // Method java/lang/String.indexOf:(II)I
     107: istore        6
     109: iload         6
     111: ifge          130
     114: bipush        6
     116: ldc           #61                 // String Not a map: {0}
     118: iconst_1
     119: anewarray     #28                 // class java/lang/Object
     122: dup
     123: iconst_0
     124: aload_3
     125: aastore
     126: invokestatic  #31                 // Method newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
     129: athrow
     130: iload         6
     132: iload         8
     134: isub
     135: bipush        8
     137: if_icmpne     199
     140: aload_3
     141: iload         8
     143: ldc           #74                 // String fletcher
     145: iconst_0
     146: bipush        8
     148: invokevirtual #75                 // Method java/lang/String.regionMatches:(ILjava/lang/String;II)Z
     151: ifeq          199
     154: aload         5
     156: aload_3
     157: iload         6
     159: iconst_1
     160: iadd
     161: iload         7
     163: invokestatic  #68                 // Method parseMapValue:(Ljava/lang/StringBuilder;Ljava/lang/String;II)I
     166: pop
     167: aload         5
     169: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     172: bipush        16
     174: invokestatic  #76                 // Method java/lang/Long.parseLong:(Ljava/lang/String;I)J
     177: l2i
     178: istore        9
     180: iload         9
     182: aload_0
     183: iload_1
     184: iload         8
     186: iconst_1
     187: isub
     188: invokestatic  #77                 // Method getFletcher32:([BII)I
     191: if_icmpne     197
     194: aload         4
     196: areturn
     197: aconst_null
     198: areturn
     199: aload_3
     200: iload         8
     202: iload         6
     204: iinc          6, 1
     207: invokevirtual #67                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     210: astore        9
     212: aload         5
     214: aload_3
     215: iload         6
     217: iload         7
     219: invokestatic  #68                 // Method parseMapValue:(Ljava/lang/StringBuilder;Ljava/lang/String;II)I
     222: istore        6
     224: aload         4
     226: aload         9
     228: aload         5
     230: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     233: invokevirtual #70                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     236: pop
     237: aload         5
     239: iconst_0
     240: invokevirtual #71                 // Method java/lang/StringBuilder.setLength:(I)V
     243: goto          88
     246: aconst_null
     247: areturn

  public static java.lang.String getMapName(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #78                 // String name
       3: invokestatic  #79                 // Method getFromMap:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public static java.lang.String getFromMap(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #58                 // Method java/lang/String.length:()I
       4: istore_2
       5: iconst_0
       6: istore_3
       7: aload_0
       8: invokevirtual #58                 // Method java/lang/String.length:()I
      11: istore        4
      13: iload_3
      14: iload         4
      16: if_icmpge     195
      19: iload_3
      20: istore        5
      22: aload_0
      23: bipush        58
      25: iload_3
      26: invokevirtual #66                 // Method java/lang/String.indexOf:(II)I
      29: istore_3
      30: iload_3
      31: ifge          50
      34: bipush        6
      36: ldc           #61                 // String Not a map: {0}
      38: iconst_1
      39: anewarray     #28                 // class java/lang/Object
      42: dup
      43: iconst_0
      44: aload_0
      45: aastore
      46: invokestatic  #31                 // Method newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      49: athrow
      50: iload_3
      51: iinc          3, 1
      54: iload         5
      56: isub
      57: iload_2
      58: if_icmpne     98
      61: aload_0
      62: iload         5
      64: aload_1
      65: iconst_0
      66: iload_2
      67: invokevirtual #75                 // Method java/lang/String.regionMatches:(ILjava/lang/String;II)Z
      70: ifeq          98
      73: new           #64                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
      80: astore        6
      82: aload         6
      84: aload_0
      85: iload_3
      86: iload         4
      88: invokestatic  #68                 // Method parseMapValue:(Ljava/lang/StringBuilder;Ljava/lang/String;II)I
      91: pop
      92: aload         6
      94: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: areturn
      98: iload_3
      99: iload         4
     101: if_icmpge     192
     104: aload_0
     105: iload_3
     106: iinc          3, 1
     109: invokevirtual #10                 // Method java/lang/String.charAt:(I)C
     112: istore        6
     114: iload         6
     116: bipush        44
     118: if_icmpne     124
     121: goto          192
     124: iload         6
     126: bipush        34
     128: if_icmpne     189
     131: iload_3
     132: iload         4
     134: if_icmpge     189
     137: aload_0
     138: iload_3
     139: iinc          3, 1
     142: invokevirtual #10                 // Method java/lang/String.charAt:(I)C
     145: istore        6
     147: iload         6
     149: bipush        92
     151: if_icmpne     179
     154: iload_3
     155: iinc          3, 1
     158: iload         4
     160: if_icmpne     131
     163: bipush        6
     165: ldc           #61                 // String Not a map: {0}
     167: iconst_1
     168: anewarray     #28                 // class java/lang/Object
     171: dup
     172: iconst_0
     173: aload_0
     174: aastore
     175: invokestatic  #31                 // Method newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
     178: athrow
     179: iload         6
     181: bipush        34
     183: if_icmpne     131
     186: goto          189
     189: goto          98
     192: goto          13
     195: aconst_null
     196: areturn

  public static int getFletcher32(byte[], int, int);
    Code:
       0: ldc           #80                 // int 65535
       2: istore_3
       3: ldc           #80                 // int 65535
       5: istore        4
       7: iload_1
       8: istore        5
      10: iload_1
      11: iload_2
      12: bipush        -2
      14: iand
      15: iadd
      16: istore        6
      18: iload         5
      20: iload         6
      22: if_icmpge     113
      25: iload         5
      27: sipush        720
      30: iadd
      31: iload         6
      33: invokestatic  #36                 // Method java/lang/Math.min:(II)I
      36: istore        7
      38: iload         5
      40: iload         7
      42: if_icmpge     87
      45: aload_0
      46: iload         5
      48: iinc          5, 1
      51: baload
      52: sipush        255
      55: iand
      56: bipush        8
      58: ishl
      59: aload_0
      60: iload         5
      62: iinc          5, 1
      65: baload
      66: sipush        255
      69: iand
      70: ior
      71: istore        8
      73: iload         4
      75: iload_3
      76: iload         8
      78: iadd
      79: dup
      80: istore_3
      81: iadd
      82: istore        4
      84: goto          38
      87: iload_3
      88: ldc           #80                 // int 65535
      90: iand
      91: iload_3
      92: bipush        16
      94: iushr
      95: iadd
      96: istore_3
      97: iload         4
      99: ldc           #80                 // int 65535
     101: iand
     102: iload         4
     104: bipush        16
     106: iushr
     107: iadd
     108: istore        4
     110: goto          18
     113: iload_2
     114: iconst_1
     115: iand
     116: ifeq          143
     119: aload_0
     120: iload         5
     122: baload
     123: sipush        255
     126: iand
     127: bipush        8
     129: ishl
     130: istore        7
     132: iload         4
     134: iload_3
     135: iload         7
     137: iadd
     138: dup
     139: istore_3
     140: iadd
     141: istore        4
     143: iload_3
     144: ldc           #80                 // int 65535
     146: iand
     147: iload_3
     148: bipush        16
     150: iushr
     151: iadd
     152: istore_3
     153: iload         4
     155: ldc           #80                 // int 65535
     157: iand
     158: iload         4
     160: bipush        16
     162: iushr
     163: iadd
     164: istore        4
     166: iload         4
     168: bipush        16
     170: ishl
     171: iload_3
     172: ior
     173: ireturn

  public static void checkArgument(boolean, java.lang.String, java.lang.Object...);
    Code:
       0: iload_0
       1: ifne          10
       4: aload_1
       5: aload_2
       6: invokestatic  #81                 // Method newIllegalArgumentException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;
       9: athrow
      10: return

  public static java.lang.IllegalArgumentException newIllegalArgumentException(java.lang.String, java.lang.Object...);
    Code:
       0: new           #82                 // class java/lang/IllegalArgumentException
       3: dup
       4: iconst_0
       5: aload_0
       6: aload_1
       7: invokestatic  #83                 // Method formatMessage:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      10: invokespecial #84                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: aload_1
      14: invokestatic  #85                 // Method initCause:(Ljava/lang/Exception;[Ljava/lang/Object;)Ljava/lang/Exception;
      17: checkcast     #82                 // class java/lang/IllegalArgumentException
      20: areturn

  public static java.lang.UnsupportedOperationException newUnsupportedOperationException(java.lang.String);
    Code:
       0: new           #86                 // class java/lang/UnsupportedOperationException
       3: dup
       4: iconst_0
       5: aload_0
       6: iconst_0
       7: anewarray     #28                 // class java/lang/Object
      10: invokestatic  #83                 // Method formatMessage:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      13: invokespecial #87                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: areturn

  public static java.lang.IllegalStateException newIllegalStateException(int, java.lang.String, java.lang.Object...);
    Code:
       0: new           #88                 // class java/lang/IllegalStateException
       3: dup
       4: iload_0
       5: aload_1
       6: aload_2
       7: invokestatic  #83                 // Method formatMessage:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      10: invokespecial #89                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      13: aload_2
      14: invokestatic  #85                 // Method initCause:(Ljava/lang/Exception;[Ljava/lang/Object;)Ljava/lang/Exception;
      17: checkcast     #88                 // class java/lang/IllegalStateException
      20: areturn

  private static <T extends java.lang.Exception> T initCause(T, java.lang.Object...);
    Code:
       0: aload_1
       1: arraylength
       2: istore_2
       3: iload_2
       4: ifle          29
       7: aload_1
       8: iload_2
       9: iconst_1
      10: isub
      11: aaload
      12: astore_3
      13: aload_3
      14: instanceof    #90                 // class java/lang/Throwable
      17: ifeq          29
      20: aload_0
      21: aload_3
      22: checkcast     #90                 // class java/lang/Throwable
      25: invokevirtual #91                 // Method java/lang/Exception.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      28: pop
      29: aload_0
      30: areturn

  public static java.lang.String formatMessage(int, java.lang.String, java.lang.Object...);
    Code:
       0: aload_2
       1: invokevirtual #92                 // Method "[Ljava/lang/Object;".clone:()Ljava/lang/Object;
       4: checkcast     #93                 // class "[Ljava/lang/Object;"
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: aload_2
      12: arraylength
      13: if_icmpge     97
      16: aload_2
      17: iload_3
      18: aaload
      19: astore        4
      21: aload         4
      23: instanceof    #94                 // class java/lang/Exception
      26: ifne          91
      29: aload         4
      31: ifnonnull     39
      34: ldc           #95                 // String null
      36: goto          44
      39: aload         4
      41: invokevirtual #51                 // Method java/lang/Object.toString:()Ljava/lang/String;
      44: astore        5
      46: aload         5
      48: invokevirtual #58                 // Method java/lang/String.length:()I
      51: sipush        1000
      54: if_icmple     86
      57: new           #64                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
      64: aload         5
      66: iconst_0
      67: sipush        1000
      70: invokevirtual #67                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      73: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc           #96                 // String ...
      78: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: astore        5
      86: aload_2
      87: iload_3
      88: aload         5
      90: aastore
      91: iinc          3, 1
      94: goto          10
      97: new           #64                 // class java/lang/StringBuilder
     100: dup
     101: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
     104: aload_1
     105: aload_2
     106: invokestatic  #97                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     109: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: ldc           #98                 // String  [
     114: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: iconst_1
     118: invokevirtual #99                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     121: ldc           #100                // String .
     123: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: iconst_4
     127: invokevirtual #99                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     130: ldc           #100                // String .
     132: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: sipush        197
     138: invokevirtual #99                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     141: ldc           #101                // String /
     143: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: iload_0
     147: invokevirtual #99                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     150: ldc           #102                // String ]
     152: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     158: areturn

  public static int getErrorCode(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        44
       4: aload_0
       5: ldc           #102                // String ]
       7: invokevirtual #103                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      10: ifeq          44
      13: aload_0
      14: bipush        47
      16: invokevirtual #104                // Method java/lang/String.lastIndexOf:(I)I
      19: istore_1
      20: iload_1
      21: iflt          44
      24: aload_0
      25: iload_1
      26: iconst_1
      27: iadd
      28: aload_0
      29: invokevirtual #58                 // Method java/lang/String.length:()I
      32: iconst_1
      33: isub
      34: invokevirtual #67                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      37: astore_2
      38: aload_2
      39: invokestatic  #105                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      42: ireturn
      43: astore_3
      44: iconst_0
      45: ireturn
    Exception table:
       from    to  target type
          38    42    43   Class java/lang/NumberFormatException

  public static long readHexLong(java.util.Map<java.lang.String, ?>, java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #107,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: astore        4
       9: aload         4
      11: ifnonnull     16
      14: lload_2
      15: lreturn
      16: aload         4
      18: instanceof    #45                 // class java/lang/Long
      21: ifeq          33
      24: aload         4
      26: checkcast     #45                 // class java/lang/Long
      29: invokevirtual #46                 // Method java/lang/Long.longValue:()J
      32: lreturn
      33: aload         4
      35: checkcast     #11                 // class java/lang/String
      38: invokestatic  #108                // Method parseHexLong:(Ljava/lang/String;)J
      41: lreturn
      42: astore        5
      44: bipush        6
      46: ldc           #109                // String Error parsing the value {0}
      48: iconst_2
      49: anewarray     #28                 // class java/lang/Object
      52: dup
      53: iconst_0
      54: aload         4
      56: aastore
      57: dup
      58: iconst_1
      59: aload         5
      61: aastore
      62: invokestatic  #31                 // Method newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      65: athrow
    Exception table:
       from    to  target type
          33    41    42   Class java/lang/NumberFormatException

  public static long parseHexLong(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method java/lang/String.length:()I
       4: bipush        16
       6: if_icmpne     39
       9: aload_0
      10: iconst_0
      11: bipush        8
      13: invokevirtual #67                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      16: bipush        16
      18: invokestatic  #76                 // Method java/lang/Long.parseLong:(Ljava/lang/String;I)J
      21: bipush        32
      23: lshl
      24: aload_0
      25: bipush        8
      27: bipush        16
      29: invokevirtual #67                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      32: bipush        16
      34: invokestatic  #76                 // Method java/lang/Long.parseLong:(Ljava/lang/String;I)J
      37: lor
      38: lreturn
      39: aload_0
      40: bipush        16
      42: invokestatic  #76                 // Method java/lang/Long.parseLong:(Ljava/lang/String;I)J
      45: lreturn
      46: astore_1
      47: bipush        6
      49: ldc           #109                // String Error parsing the value {0}
      51: iconst_2
      52: anewarray     #28                 // class java/lang/Object
      55: dup
      56: iconst_0
      57: aload_0
      58: aastore
      59: dup
      60: iconst_1
      61: aload_1
      62: aastore
      63: invokestatic  #31                 // Method newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      66: athrow
    Exception table:
       from    to  target type
           0    38    46   Class java/lang/NumberFormatException
          39    45    46   Class java/lang/NumberFormatException

  public static int parseHexInt(java.lang.String);
    Code:
       0: aload_0
       1: bipush        16
       3: invokestatic  #76                 // Method java/lang/Long.parseLong:(Ljava/lang/String;I)J
       6: l2i
       7: ireturn
       8: astore_1
       9: bipush        6
      11: ldc           #109                // String Error parsing the value {0}
      13: iconst_2
      14: anewarray     #28                 // class java/lang/Object
      17: dup
      18: iconst_0
      19: aload_0
      20: aastore
      21: dup
      22: iconst_1
      23: aload_1
      24: aastore
      25: invokestatic  #31                 // Method newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      28: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/NumberFormatException

  public static int readHexInt(java.util.HashMap<java.lang.String, ?>, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: iload_2
      11: ireturn
      12: aload_3
      13: instanceof    #48                 // class java/lang/Integer
      16: ifeq          27
      19: aload_3
      20: checkcast     #48                 // class java/lang/Integer
      23: invokevirtual #49                 // Method java/lang/Integer.intValue:()I
      26: ireturn
      27: aload_3
      28: checkcast     #11                 // class java/lang/String
      31: bipush        16
      33: invokestatic  #76                 // Method java/lang/Long.parseLong:(Ljava/lang/String;I)J
      36: l2i
      37: ireturn
      38: astore        4
      40: bipush        6
      42: ldc           #109                // String Error parsing the value {0}
      44: iconst_2
      45: anewarray     #28                 // class java/lang/Object
      48: dup
      49: iconst_0
      50: aload_3
      51: aastore
      52: dup
      53: iconst_1
      54: aload         4
      56: aastore
      57: invokestatic  #31                 // Method newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      60: athrow
    Exception table:
       from    to  target type
          27    37    38   Class java/lang/NumberFormatException

  public static int getConfigParam(java.util.Map<java.lang.String, ?>, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #107,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: astore_3
       8: aload_3
       9: instanceof    #110                // class java/lang/Number
      12: ifeq          23
      15: aload_3
      16: checkcast     #110                // class java/lang/Number
      19: invokevirtual #111                // Method java/lang/Number.intValue:()I
      22: ireturn
      23: aload_3
      24: ifnull        40
      27: aload_3
      28: invokevirtual #51                 // Method java/lang/Object.toString:()Ljava/lang/String;
      31: invokestatic  #112                // Method java/lang/Integer.decode:(Ljava/lang/String;)Ljava/lang/Integer;
      34: invokevirtual #49                 // Method java/lang/Integer.intValue:()I
      37: ireturn
      38: astore        4
      40: iload_2
      41: ireturn
    Exception table:
       from    to  target type
          27    37    38   Class java/lang/NumberFormatException
}
