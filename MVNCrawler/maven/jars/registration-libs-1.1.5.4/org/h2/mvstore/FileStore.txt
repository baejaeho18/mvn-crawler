Compiled from "FileStore.java"
public class org.h2.mvstore.FileStore {
  protected final java.util.concurrent.atomic.AtomicLong readCount;

  protected final java.util.concurrent.atomic.AtomicLong readBytes;

  protected final java.util.concurrent.atomic.AtomicLong writeCount;

  protected final java.util.concurrent.atomic.AtomicLong writeBytes;

  protected final org.h2.mvstore.FreeSpaceBitSet freeSpace;

  protected java.lang.String fileName;

  protected boolean readOnly;

  protected long fileSize;

  protected java.nio.channels.FileChannel file;

  protected java.nio.channels.FileChannel encryptedFile;

  protected java.nio.channels.FileLock fileLock;

  public org.h2.mvstore.FileStore();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: lconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      13: putfield      #4                  // Field readCount:Ljava/util/concurrent/atomic/AtomicLong;
      16: aload_0
      17: new           #2                  // class java/util/concurrent/atomic/AtomicLong
      20: dup
      21: lconst_0
      22: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      25: putfield      #5                  // Field readBytes:Ljava/util/concurrent/atomic/AtomicLong;
      28: aload_0
      29: new           #2                  // class java/util/concurrent/atomic/AtomicLong
      32: dup
      33: lconst_0
      34: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      37: putfield      #6                  // Field writeCount:Ljava/util/concurrent/atomic/AtomicLong;
      40: aload_0
      41: new           #2                  // class java/util/concurrent/atomic/AtomicLong
      44: dup
      45: lconst_0
      46: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      49: putfield      #7                  // Field writeBytes:Ljava/util/concurrent/atomic/AtomicLong;
      52: aload_0
      53: new           #8                  // class org/h2/mvstore/FreeSpaceBitSet
      56: dup
      57: iconst_2
      58: sipush        4096
      61: invokespecial #9                  // Method org/h2/mvstore/FreeSpaceBitSet."<init>":(II)V
      64: putfield      #10                 // Field freeSpace:Lorg/h2/mvstore/FreeSpaceBitSet;
      67: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #11                 // Field fileName:Ljava/lang/String;
       4: areturn

  public java.nio.ByteBuffer readFully(long, int);
    Code:
       0: iload_3
       1: invokestatic  #12                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       4: astore        4
       6: aload_0
       7: getfield      #13                 // Field file:Ljava/nio/channels/FileChannel;
      10: lload_1
      11: aload         4
      13: invokestatic  #14                 // Method org/h2/mvstore/DataUtils.readFully:(Ljava/nio/channels/FileChannel;JLjava/nio/ByteBuffer;)V
      16: aload_0
      17: getfield      #4                  // Field readCount:Ljava/util/concurrent/atomic/AtomicLong;
      20: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      23: pop2
      24: aload_0
      25: getfield      #5                  // Field readBytes:Ljava/util/concurrent/atomic/AtomicLong;
      28: iload_3
      29: i2l
      30: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      33: pop2
      34: aload         4
      36: areturn

  public void writeFully(long, java.nio.ByteBuffer);
    Code:
       0: aload_3
       1: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
       4: istore        4
       6: aload_0
       7: aload_0
       8: getfield      #18                 // Field fileSize:J
      11: lload_1
      12: iload         4
      14: i2l
      15: ladd
      16: invokestatic  #19                 // Method java/lang/Math.max:(JJ)J
      19: putfield      #18                 // Field fileSize:J
      22: aload_0
      23: getfield      #13                 // Field file:Ljava/nio/channels/FileChannel;
      26: lload_1
      27: aload_3
      28: invokestatic  #20                 // Method org/h2/mvstore/DataUtils.writeFully:(Ljava/nio/channels/FileChannel;JLjava/nio/ByteBuffer;)V
      31: aload_0
      32: getfield      #6                  // Field writeCount:Ljava/util/concurrent/atomic/AtomicLong;
      35: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      38: pop2
      39: aload_0
      40: getfield      #7                  // Field writeBytes:Ljava/util/concurrent/atomic/AtomicLong;
      43: iload         4
      45: i2l
      46: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      49: pop2
      50: return

  public void open(java.lang.String, boolean, char[]);
    Code:
       0: aload_0
       1: getfield      #13                 // Field file:Ljava/nio/channels/FileChannel;
       4: ifnull        8
       7: return
       8: aload_1
       9: ifnull        90
      12: getstatic     #21                 // Field org/h2/mvstore/cache/FilePathCache.INSTANCE:Lorg/h2/mvstore/cache/FilePathCache;
      15: invokevirtual #22                 // Method org/h2/mvstore/cache/FilePathCache.getScheme:()Ljava/lang/String;
      18: pop
      19: aload_1
      20: invokestatic  #23                 // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
      23: astore        4
      25: aload         4
      27: instanceof    #24                 // class org/h2/store/fs/FilePathDisk
      30: ifeq          90
      33: aload_1
      34: new           #25                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      41: aload         4
      43: invokevirtual #27                 // Method org/h2/store/fs/FilePath.getScheme:()Ljava/lang/String;
      46: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #29                 // String :
      51: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokevirtual #31                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      60: ifne          90
      63: ldc_w         #32                 // class org/h2/store/fs/FilePathNio
      66: invokevirtual #33                 // Method java/lang/Class.getName:()Ljava/lang/String;
      69: pop
      70: new           #25                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      77: ldc           #34                 // String nio:
      79: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_1
      83: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: astore_1
      90: aload_0
      91: aload_1
      92: putfield      #11                 // Field fileName:Ljava/lang/String;
      95: aload_1
      96: invokestatic  #23                 // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
      99: astore        4
     101: aload         4
     103: invokevirtual #35                 // Method org/h2/store/fs/FilePath.getParent:()Lorg/h2/store/fs/FilePath;
     106: astore        5
     108: aload         5
     110: ifnull        136
     113: aload         5
     115: invokevirtual #36                 // Method org/h2/store/fs/FilePath.exists:()Z
     118: ifne          136
     121: ldc           #37                 // String Directory does not exist: {0}
     123: iconst_1
     124: anewarray     #38                 // class java/lang/Object
     127: dup
     128: iconst_0
     129: aload         5
     131: aastore
     132: invokestatic  #39                 // Method org/h2/mvstore/DataUtils.newIllegalArgumentException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;
     135: athrow
     136: aload         4
     138: invokevirtual #36                 // Method org/h2/store/fs/FilePath.exists:()Z
     141: ifeq          154
     144: aload         4
     146: invokevirtual #40                 // Method org/h2/store/fs/FilePath.canWrite:()Z
     149: ifne          154
     152: iconst_1
     153: istore_2
     154: aload_0
     155: iload_2
     156: putfield      #41                 // Field readOnly:Z
     159: aload_0
     160: aload         4
     162: iload_2
     163: ifeq          171
     166: ldc           #42                 // String r
     168: goto          173
     171: ldc           #43                 // String rw
     173: invokevirtual #44                 // Method org/h2/store/fs/FilePath.open:(Ljava/lang/String;)Ljava/nio/channels/FileChannel;
     176: putfield      #13                 // Field file:Ljava/nio/channels/FileChannel;
     179: aload_3
     180: ifnull        215
     183: aload_3
     184: invokestatic  #45                 // Method org/h2/store/fs/FilePathEncrypt.getPasswordBytes:([C)[B
     187: astore        6
     189: aload_0
     190: aload_0
     191: getfield      #13                 // Field file:Ljava/nio/channels/FileChannel;
     194: putfield      #46                 // Field encryptedFile:Ljava/nio/channels/FileChannel;
     197: aload_0
     198: new           #47                 // class org/h2/store/fs/FilePathEncrypt$FileEncrypt
     201: dup
     202: aload_1
     203: aload         6
     205: aload_0
     206: getfield      #13                 // Field file:Ljava/nio/channels/FileChannel;
     209: invokespecial #48                 // Method org/h2/store/fs/FilePathEncrypt$FileEncrypt."<init>":(Ljava/lang/String;[BLjava/nio/channels/FileChannel;)V
     212: putfield      #13                 // Field file:Ljava/nio/channels/FileChannel;
     215: iload_2
     216: ifeq          238
     219: aload_0
     220: aload_0
     221: getfield      #13                 // Field file:Ljava/nio/channels/FileChannel;
     224: lconst_0
     225: ldc2_w        #49                 // long 9223372036854775807l
     228: iconst_1
     229: invokevirtual #51                 // Method java/nio/channels/FileChannel.tryLock:(JJZ)Ljava/nio/channels/FileLock;
     232: putfield      #52                 // Field fileLock:Ljava/nio/channels/FileLock;
     235: goto          249
     238: aload_0
     239: aload_0
     240: getfield      #13                 // Field file:Ljava/nio/channels/FileChannel;
     243: invokevirtual #53                 // Method java/nio/channels/FileChannel.tryLock:()Ljava/nio/channels/FileLock;
     246: putfield      #52                 // Field fileLock:Ljava/nio/channels/FileLock;
     249: goto          275
     252: astore        6
     254: bipush        7
     256: ldc           #55                 // String The file is locked: {0}
     258: iconst_2
     259: anewarray     #38                 // class java/lang/Object
     262: dup
     263: iconst_0
     264: aload_1
     265: aastore
     266: dup
     267: iconst_1
     268: aload         6
     270: aastore
     271: invokestatic  #56                 // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
     274: athrow
     275: aload_0
     276: getfield      #52                 // Field fileLock:Ljava/nio/channels/FileLock;
     279: ifnonnull     298
     282: bipush        7
     284: ldc           #55                 // String The file is locked: {0}
     286: iconst_1
     287: anewarray     #38                 // class java/lang/Object
     290: dup
     291: iconst_0
     292: aload_1
     293: aastore
     294: invokestatic  #56                 // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
     297: athrow
     298: aload_0
     299: aload_0
     300: getfield      #13                 // Field file:Ljava/nio/channels/FileChannel;
     303: invokevirtual #57                 // Method java/nio/channels/FileChannel.size:()J
     306: putfield      #18                 // Field fileSize:J
     309: goto          334
     312: astore        6
     314: iconst_1
     315: ldc           #59                 // String Could not open file {0}
     317: iconst_2
     318: anewarray     #38                 // class java/lang/Object
     321: dup
     322: iconst_0
     323: aload_1
     324: aastore
     325: dup
     326: iconst_1
     327: aload         6
     329: aastore
     330: invokestatic  #56                 // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
     333: athrow
     334: return
    Exception table:
       from    to  target type
         215   249   252   Class java/nio/channels/OverlappingFileLockException
         159   309   312   Class java/io/IOException

  public void close();
    Code:
       0: aload_0
       1: getfield      #52                 // Field fileLock:Ljava/nio/channels/FileLock;
       4: ifnull        19
       7: aload_0
       8: getfield      #52                 // Field fileLock:Ljava/nio/channels/FileLock;
      11: invokevirtual #60                 // Method java/nio/channels/FileLock.release:()V
      14: aload_0
      15: aconst_null
      16: putfield      #52                 // Field fileLock:Ljava/nio/channels/FileLock;
      19: aload_0
      20: getfield      #13                 // Field file:Ljava/nio/channels/FileChannel;
      23: invokevirtual #61                 // Method java/nio/channels/FileChannel.close:()V
      26: aload_0
      27: getfield      #10                 // Field freeSpace:Lorg/h2/mvstore/FreeSpaceBitSet;
      30: invokevirtual #62                 // Method org/h2/mvstore/FreeSpaceBitSet.clear:()V
      33: aload_0
      34: aconst_null
      35: putfield      #13                 // Field file:Ljava/nio/channels/FileChannel;
      38: goto          72
      41: astore_1
      42: iconst_2
      43: ldc           #64                 // String Closing failed for file {0}
      45: iconst_2
      46: anewarray     #38                 // class java/lang/Object
      49: dup
      50: iconst_0
      51: aload_0
      52: getfield      #11                 // Field fileName:Ljava/lang/String;
      55: aastore
      56: dup
      57: iconst_1
      58: aload_1
      59: aastore
      60: invokestatic  #56                 // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      63: athrow
      64: astore_2
      65: aload_0
      66: aconst_null
      67: putfield      #13                 // Field file:Ljava/nio/channels/FileChannel;
      70: aload_2
      71: athrow
      72: return
    Exception table:
       from    to  target type
           0    33    41   Class java/lang/Exception
           0    33    64   any
          41    65    64   any

  public void sync();
    Code:
       0: aload_0
       1: getfield      #13                 // Field file:Ljava/nio/channels/FileChannel;
       4: iconst_1
       5: invokevirtual #65                 // Method java/nio/channels/FileChannel.force:(Z)V
       8: goto          34
      11: astore_1
      12: iconst_2
      13: ldc           #66                 // String Could not sync file {0}
      15: iconst_2
      16: anewarray     #38                 // class java/lang/Object
      19: dup
      20: iconst_0
      21: aload_0
      22: getfield      #11                 // Field fileName:Ljava/lang/String;
      25: aastore
      26: dup
      27: iconst_1
      28: aload_1
      29: aastore
      30: invokestatic  #56                 // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      33: athrow
      34: return
    Exception table:
       from    to  target type
           0     8    11   Class java/io/IOException

  public long size();
    Code:
       0: aload_0
       1: getfield      #18                 // Field fileSize:J
       4: lreturn

  public void truncate(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field writeCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: aload_0
       9: getfield      #13                 // Field file:Ljava/nio/channels/FileChannel;
      12: lload_1
      13: invokevirtual #67                 // Method java/nio/channels/FileChannel.truncate:(J)Ljava/nio/channels/FileChannel;
      16: pop
      17: aload_0
      18: aload_0
      19: getfield      #18                 // Field fileSize:J
      22: lload_1
      23: invokestatic  #68                 // Method java/lang/Math.min:(JJ)J
      26: putfield      #18                 // Field fileSize:J
      29: goto          62
      32: astore_3
      33: iconst_2
      34: ldc           #69                 // String Could not truncate file {0} to size {1}
      36: iconst_3
      37: anewarray     #38                 // class java/lang/Object
      40: dup
      41: iconst_0
      42: aload_0
      43: getfield      #11                 // Field fileName:Ljava/lang/String;
      46: aastore
      47: dup
      48: iconst_1
      49: lload_1
      50: invokestatic  #70                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      53: aastore
      54: dup
      55: iconst_2
      56: aload_3
      57: aastore
      58: invokestatic  #56                 // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      61: athrow
      62: return
    Exception table:
       from    to  target type
           0    29    32   Class java/io/IOException

  public java.nio.channels.FileChannel getFile();
    Code:
       0: aload_0
       1: getfield      #13                 // Field file:Ljava/nio/channels/FileChannel;
       4: areturn

  public java.nio.channels.FileChannel getEncryptedFile();
    Code:
       0: aload_0
       1: getfield      #46                 // Field encryptedFile:Ljava/nio/channels/FileChannel;
       4: areturn

  public long getWriteCount();
    Code:
       0: aload_0
       1: getfield      #6                  // Field writeCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #71                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getWriteBytes();
    Code:
       0: aload_0
       1: getfield      #7                  // Field writeBytes:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #71                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getReadCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field readCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #71                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getReadBytes();
    Code:
       0: aload_0
       1: getfield      #5                  // Field readBytes:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #71                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public boolean isReadOnly();
    Code:
       0: aload_0
       1: getfield      #41                 // Field readOnly:Z
       4: ireturn

  public int getDefaultRetentionTime();
    Code:
       0: ldc           #72                 // int 45000
       2: ireturn

  public void markUsed(long, int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field freeSpace:Lorg/h2/mvstore/FreeSpaceBitSet;
       4: lload_1
       5: iload_3
       6: invokevirtual #73                 // Method org/h2/mvstore/FreeSpaceBitSet.markUsed:(JI)V
       9: return

  public long allocate(int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field freeSpace:Lorg/h2/mvstore/FreeSpaceBitSet;
       4: iload_1
       5: invokevirtual #74                 // Method org/h2/mvstore/FreeSpaceBitSet.allocate:(I)J
       8: lreturn

  public void free(long, int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field freeSpace:Lorg/h2/mvstore/FreeSpaceBitSet;
       4: lload_1
       5: iload_3
       6: invokevirtual #75                 // Method org/h2/mvstore/FreeSpaceBitSet.free:(JI)V
       9: return

  public int getFillRate();
    Code:
       0: aload_0
       1: getfield      #10                 // Field freeSpace:Lorg/h2/mvstore/FreeSpaceBitSet;
       4: invokevirtual #76                 // Method org/h2/mvstore/FreeSpaceBitSet.getFillRate:()I
       7: ireturn

  long getFirstFree();
    Code:
       0: aload_0
       1: getfield      #10                 // Field freeSpace:Lorg/h2/mvstore/FreeSpaceBitSet;
       4: invokevirtual #77                 // Method org/h2/mvstore/FreeSpaceBitSet.getFirstFree:()J
       7: lreturn

  long getFileLengthInUse();
    Code:
       0: aload_0
       1: getfield      #10                 // Field freeSpace:Lorg/h2/mvstore/FreeSpaceBitSet;
       4: invokevirtual #78                 // Method org/h2/mvstore/FreeSpaceBitSet.getLastFree:()J
       7: lreturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #10                 // Field freeSpace:Lorg/h2/mvstore/FreeSpaceBitSet;
       4: invokevirtual #62                 // Method org/h2/mvstore/FreeSpaceBitSet.clear:()V
       7: return

  public java.lang.String getFileName();
    Code:
       0: aload_0
       1: getfield      #11                 // Field fileName:Ljava/lang/String;
       4: areturn
}
