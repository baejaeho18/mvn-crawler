Compiled from "MVStore.java"
public final class org.h2.mvstore.MVStore {
  public static final boolean ASSERT;

  static final int BLOCK_SIZE;

  private static final int FORMAT_WRITE;

  private static final int FORMAT_READ;

  private static final int MARKED_FREE;

  volatile org.h2.mvstore.MVStore$BackgroundWriterThread backgroundWriterThread;

  private volatile boolean reuseSpace;

  private volatile boolean closed;

  private final org.h2.mvstore.FileStore fileStore;

  private final boolean fileStoreIsProvided;

  private final int pageSplitSize;

  private final org.h2.mvstore.cache.CacheLongKeyLIRS<org.h2.mvstore.Page> cache;

  private final org.h2.mvstore.cache.CacheLongKeyLIRS<org.h2.mvstore.Page$PageChildren> cacheChunkRef;

  private org.h2.mvstore.Chunk lastChunk;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.Integer, org.h2.mvstore.Chunk> chunks;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.Long, java.util.concurrent.ConcurrentHashMap<java.lang.Integer, org.h2.mvstore.Chunk>> freedPageSpace;

  private final org.h2.mvstore.MVMap<java.lang.String, java.lang.String> meta;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.Integer, org.h2.mvstore.MVMap<?, ?>> maps;

  private final java.util.HashMap<java.lang.String, java.lang.Object> storeHeader;

  private org.h2.mvstore.WriteBuffer writeBuffer;

  private int lastMapId;

  private int versionsToKeep;

  private final int compressionLevel;

  private org.h2.compress.Compressor compressorFast;

  private org.h2.compress.Compressor compressorHigh;

  private final java.lang.Thread$UncaughtExceptionHandler backgroundExceptionHandler;

  private volatile long currentVersion;

  private long lastStoredVersion;

  private int unsavedMemory;

  private final int autoCommitMemory;

  private boolean saveNeeded;

  private long creationTime;

  private int retentionTime;

  private long lastCommitTime;

  private org.h2.mvstore.Chunk retainChunk;

  private volatile long currentStoreVersion;

  private java.lang.Thread currentStoreThread;

  private volatile boolean metaChanged;

  private int autoCommitDelay;

  private final int autoCompactFillRate;

  private long autoCompactLastFileOpCount;

  private final java.lang.Object compactSync;

  private java.lang.IllegalStateException panicException;

  private long lastTimeAbsolute;

  private long lastFreeUnusedChunks;

  static final boolean $assertionsDisabled;

  org.h2.mvstore.MVStore(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field reuseSpace:Z
       9: aload_0
      10: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      17: putfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
      20: aload_0
      21: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      24: dup
      25: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      28: putfield      #6                  // Field freedPageSpace:Ljava/util/concurrent/ConcurrentHashMap;
      31: aload_0
      32: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      35: dup
      36: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      39: putfield      #7                  // Field maps:Ljava/util/concurrent/ConcurrentHashMap;
      42: aload_0
      43: new           #8                  // class java/util/HashMap
      46: dup
      47: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      50: putfield      #10                 // Field storeHeader:Ljava/util/HashMap;
      53: aload_0
      54: iconst_5
      55: putfield      #11                 // Field versionsToKeep:I
      58: aload_0
      59: ldc2_w        #12                 // long -1l
      62: putfield      #14                 // Field currentStoreVersion:J
      65: aload_0
      66: new           #15                 // class java/lang/Object
      69: dup
      70: invokespecial #1                  // Method java/lang/Object."<init>":()V
      73: putfield      #16                 // Field compactSync:Ljava/lang/Object;
      76: aload_0
      77: aload_1
      78: ldc           #17                 // String compress
      80: iconst_0
      81: invokestatic  #18                 // Method org/h2/mvstore/DataUtils.getConfigParam:(Ljava/util/Map;Ljava/lang/String;I)I
      84: putfield      #19                 // Field compressionLevel:I
      87: aload_1
      88: ldc           #20                 // String fileName
      90: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      95: checkcast     #22                 // class java/lang/String
      98: astore_2
      99: aload_1
     100: ldc           #23                 // String fileStore
     102: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     107: checkcast     #24                 // class org/h2/mvstore/FileStore
     110: astore_3
     111: aload_0
     112: aload_3
     113: ifnull        120
     116: iconst_1
     117: goto          121
     120: iconst_0
     121: putfield      #25                 // Field fileStoreIsProvided:Z
     124: aload_3
     125: ifnonnull     140
     128: aload_2
     129: ifnull        140
     132: new           #24                 // class org/h2/mvstore/FileStore
     135: dup
     136: invokespecial #26                 // Method org/h2/mvstore/FileStore."<init>":()V
     139: astore_3
     140: aload_0
     141: aload_3
     142: putfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     145: bipush        48
     147: istore        4
     149: aconst_null
     150: astore        5
     152: aload_0
     153: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     156: ifnull        232
     159: aload_1
     160: ldc           #28                 // String cacheSize
     162: bipush        16
     164: invokestatic  #18                 // Method org/h2/mvstore/DataUtils.getConfigParam:(Ljava/util/Map;Ljava/lang/String;I)I
     167: istore        6
     169: iload         6
     171: ifle          227
     174: new           #29                 // class org/h2/mvstore/cache/CacheLongKeyLIRS$Config
     177: dup
     178: invokespecial #30                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS$Config."<init>":()V
     181: astore        5
     183: aload         5
     185: iload         6
     187: i2l
     188: ldc2_w        #31                 // long 1024l
     191: lmul
     192: ldc2_w        #31                 // long 1024l
     195: lmul
     196: putfield      #33                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Config.maxMemory:J
     199: aload_1
     200: ldc           #34                 // String cacheConcurrency
     202: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     207: astore        7
     209: aload         7
     211: ifnull        227
     214: aload         5
     216: aload         7
     218: checkcast     #35                 // class java/lang/Integer
     221: invokevirtual #36                 // Method java/lang/Integer.intValue:()I
     224: putfield      #37                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Config.segmentCount:I
     227: sipush        16384
     230: istore        4
     232: aload         5
     234: ifnull        279
     237: aload_0
     238: new           #38                 // class org/h2/mvstore/cache/CacheLongKeyLIRS
     241: dup
     242: aload         5
     244: invokespecial #39                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS."<init>":(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Config;)V
     247: putfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
     250: aload         5
     252: dup
     253: getfield      #33                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Config.maxMemory:J
     256: ldc2_w        #41                 // long 4l
     259: ldiv
     260: putfield      #33                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Config.maxMemory:J
     263: aload_0
     264: new           #38                 // class org/h2/mvstore/cache/CacheLongKeyLIRS
     267: dup
     268: aload         5
     270: invokespecial #39                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS."<init>":(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Config;)V
     273: putfield      #43                 // Field cacheChunkRef:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
     276: goto          289
     279: aload_0
     280: aconst_null
     281: putfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
     284: aload_0
     285: aconst_null
     286: putfield      #43                 // Field cacheChunkRef:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
     289: aload_1
     290: ldc           #44                 // String pageSplitSize
     292: iload         4
     294: invokestatic  #18                 // Method org/h2/mvstore/DataUtils.getConfigParam:(Ljava/util/Map;Ljava/lang/String;I)I
     297: istore        4
     299: aload_0
     300: getfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
     303: ifnull        330
     306: iload         4
     308: i2l
     309: aload_0
     310: getfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
     313: invokevirtual #45                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS.getMaxItemSize:()J
     316: lcmp
     317: ifle          330
     320: aload_0
     321: getfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
     324: invokevirtual #45                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS.getMaxItemSize:()J
     327: l2i
     328: istore        4
     330: aload_0
     331: iload         4
     333: putfield      #46                 // Field pageSplitSize:I
     336: aload_0
     337: aload_1
     338: ldc           #47                 // String backgroundExceptionHandler
     340: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     345: checkcast     #48                 // class java/lang/Thread$UncaughtExceptionHandler
     348: putfield      #49                 // Field backgroundExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
     351: aload_0
     352: new           #50                 // class org/h2/mvstore/MVMap
     355: dup
     356: getstatic     #51                 // Field org/h2/mvstore/type/StringDataType.INSTANCE:Lorg/h2/mvstore/type/StringDataType;
     359: getstatic     #51                 // Field org/h2/mvstore/type/StringDataType.INSTANCE:Lorg/h2/mvstore/type/StringDataType;
     362: invokespecial #52                 // Method org/h2/mvstore/MVMap."<init>":(Lorg/h2/mvstore/type/DataType;Lorg/h2/mvstore/type/DataType;)V
     365: putfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     368: aload_0
     369: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     372: aload_0
     373: iconst_0
     374: aload_0
     375: getfield      #54                 // Field currentVersion:J
     378: invokevirtual #55                 // Method org/h2/mvstore/MVMap.init:(Lorg/h2/mvstore/MVStore;IJ)V
     381: aload_0
     382: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     385: ifnull        660
     388: aload_0
     389: aload_0
     390: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     393: invokevirtual #56                 // Method org/h2/mvstore/FileStore.getDefaultRetentionTime:()I
     396: putfield      #57                 // Field retentionTime:I
     399: aload_1
     400: ldc           #58                 // String autoCommitBufferSize
     402: sipush        1024
     405: invokestatic  #18                 // Method org/h2/mvstore/DataUtils.getConfigParam:(Ljava/util/Map;Ljava/lang/String;I)I
     408: istore        6
     410: aload_0
     411: iload         6
     413: sipush        1024
     416: imul
     417: bipush        19
     419: imul
     420: putfield      #59                 // Field autoCommitMemory:I
     423: aload_0
     424: aload_1
     425: ldc           #60                 // String autoCompactFillRate
     427: bipush        40
     429: invokestatic  #18                 // Method org/h2/mvstore/DataUtils.getConfigParam:(Ljava/util/Map;Ljava/lang/String;I)I
     432: putfield      #61                 // Field autoCompactFillRate:I
     435: aload_1
     436: ldc           #62                 // String encryptionKey
     438: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     443: checkcast     #63                 // class "[C"
     446: checkcast     #63                 // class "[C"
     449: astore        7
     451: aload_0
     452: getfield      #25                 // Field fileStoreIsProvided:Z
     455: ifne          480
     458: aload_1
     459: ldc           #64                 // String readOnly
     461: invokeinterface #65,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     466: istore        8
     468: aload_0
     469: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     472: aload_2
     473: iload         8
     475: aload         7
     477: invokevirtual #66                 // Method org/h2/mvstore/FileStore.open:(Ljava/lang/String;Z[C)V
     480: aload_0
     481: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     484: invokevirtual #67                 // Method org/h2/mvstore/FileStore.size:()J
     487: lconst_0
     488: lcmp
     489: ifne          576
     492: aload_0
     493: aload_0
     494: invokespecial #68                 // Method getTimeAbsolute:()J
     497: putfield      #69                 // Field creationTime:J
     500: aload_0
     501: aload_0
     502: getfield      #69                 // Field creationTime:J
     505: putfield      #70                 // Field lastCommitTime:J
     508: aload_0
     509: getfield      #10                 // Field storeHeader:Ljava/util/HashMap;
     512: ldc           #71                 // String H
     514: iconst_2
     515: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     518: invokevirtual #73                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     521: pop
     522: aload_0
     523: getfield      #10                 // Field storeHeader:Ljava/util/HashMap;
     526: ldc           #74                 // String blockSize
     528: sipush        4096
     531: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     534: invokevirtual #73                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     537: pop
     538: aload_0
     539: getfield      #10                 // Field storeHeader:Ljava/util/HashMap;
     542: ldc           #75                 // String format
     544: iconst_1
     545: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     548: invokevirtual #73                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     551: pop
     552: aload_0
     553: getfield      #10                 // Field storeHeader:Ljava/util/HashMap;
     556: ldc           #76                 // String created
     558: aload_0
     559: getfield      #69                 // Field creationTime:J
     562: invokestatic  #77                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     565: invokevirtual #73                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     568: pop
     569: aload_0
     570: invokespecial #78                 // Method writeStoreHeader:()V
     573: goto          580
     576: aload_0
     577: invokespecial #79                 // Method readStoreHeader:()V
     580: aload         7
     582: ifnull        632
     585: aload         7
     587: iconst_0
     588: invokestatic  #80                 // Method java/util/Arrays.fill:([CC)V
     591: goto          632
     594: astore        8
     596: aload_0
     597: aload         8
     599: invokespecial #82                 // Method panic:(Ljava/lang/IllegalStateException;)V
     602: aload         7
     604: ifnull        632
     607: aload         7
     609: iconst_0
     610: invokestatic  #80                 // Method java/util/Arrays.fill:([CC)V
     613: goto          632
     616: astore        9
     618: aload         7
     620: ifnull        629
     623: aload         7
     625: iconst_0
     626: invokestatic  #80                 // Method java/util/Arrays.fill:([CC)V
     629: aload         9
     631: athrow
     632: aload_0
     633: aload_0
     634: invokespecial #83                 // Method getTimeSinceCreation:()J
     637: putfield      #70                 // Field lastCommitTime:J
     640: aload_1
     641: ldc           #84                 // String autoCommitDelay
     643: sipush        1000
     646: invokestatic  #18                 // Method org/h2/mvstore/DataUtils.getConfigParam:(Ljava/util/Map;Ljava/lang/String;I)I
     649: istore        8
     651: aload_0
     652: iload         8
     654: invokevirtual #85                 // Method setAutoCommitDelay:(I)V
     657: goto          670
     660: aload_0
     661: iconst_0
     662: putfield      #59                 // Field autoCommitMemory:I
     665: aload_0
     666: iconst_0
     667: putfield      #61                 // Field autoCompactFillRate:I
     670: return
    Exception table:
       from    to  target type
         451   580   594   Class java/lang/IllegalStateException
         451   580   616   any
         594   602   616   any
         616   618   616   any

  private void panic(java.lang.IllegalStateException);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #86                 // Method handleException:(Ljava/lang/Throwable;)V
       5: aload_0
       6: aload_1
       7: putfield      #87                 // Field panicException:Ljava/lang/IllegalStateException;
      10: aload_0
      11: invokevirtual #88                 // Method closeImmediately:()V
      14: aload_1
      15: athrow

  public static org.h2.mvstore.MVStore open(java.lang.String);
    Code:
       0: new           #8                  // class java/util/HashMap
       3: dup
       4: invokespecial #9                  // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #20                 // String fileName
      11: aload_0
      12: invokevirtual #73                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: new           #89                 // class org/h2/mvstore/MVStore
      19: dup
      20: aload_1
      21: invokespecial #90                 // Method "<init>":(Ljava/util/Map;)V
      24: areturn

  <T extends org.h2.mvstore.MVMap<?, ?>> T openMapVersion(long, int, org.h2.mvstore.MVMap<?, ?>);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #91                 // Method getMetaMap:(J)Lorg/h2/mvstore/MVMap;
       5: astore        5
       7: aload         5
       9: iload_3
      10: invokestatic  #92                 // Method getRootPos:(Lorg/h2/mvstore/MVMap;I)J
      13: lstore        6
      15: aload         4
      17: invokevirtual #93                 // Method org/h2/mvstore/MVMap.openReadOnly:()Lorg/h2/mvstore/MVMap;
      20: astore        8
      22: aload         8
      24: lload         6
      26: lload_1
      27: invokevirtual #94                 // Method org/h2/mvstore/MVMap.setRootPos:(JJ)V
      30: aload         8
      32: areturn

  public <K, V> org.h2.mvstore.MVMap<K, V> openMap(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #95                 // class org/h2/mvstore/MVMap$Builder
       5: dup
       6: invokespecial #96                 // Method org/h2/mvstore/MVMap$Builder."<init>":()V
       9: invokevirtual #97                 // Method openMap:(Ljava/lang/String;Lorg/h2/mvstore/MVMap$MapBuilder;)Lorg/h2/mvstore/MVMap;
      12: areturn

  public synchronized <M extends org.h2.mvstore.MVMap<K, V>, K, V> M openMap(java.lang.String, org.h2.mvstore.MVMap$MapBuilder<M, K, V>);
    Code:
       0: aload_0
       1: invokespecial #98                 // Method checkOpen:()V
       4: aload_0
       5: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
       8: new           #99                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #101                // String name.
      17: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_1
      21: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #103                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokevirtual #104                // Method org/h2/mvstore/MVMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #22                 // class java/lang/String
      33: astore_3
      34: aload_3
      35: ifnull        139
      38: aload_3
      39: invokestatic  #105                // Method org/h2/mvstore/DataUtils.parseHexInt:(Ljava/lang/String;)I
      42: istore        4
      44: aload_0
      45: getfield      #7                  // Field maps:Ljava/util/concurrent/ConcurrentHashMap;
      48: iload         4
      50: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      53: invokevirtual #106                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #50                 // class org/h2/mvstore/MVMap
      59: astore        8
      61: aload         8
      63: ifnull        69
      66: aload         8
      68: areturn
      69: aload_2
      70: invokeinterface #107,  1          // InterfaceMethod org/h2/mvstore/MVMap$MapBuilder.create:()Lorg/h2/mvstore/MVMap;
      75: astore        7
      77: aload_0
      78: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
      81: iload         4
      83: invokestatic  #108                // Method org/h2/mvstore/MVMap.getMapKey:(I)Ljava/lang/String;
      86: invokevirtual #104                // Method org/h2/mvstore/MVMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      89: checkcast     #22                 // class java/lang/String
      92: astore        9
      94: aload         9
      96: ldc           #109                // String createVersion
      98: invokestatic  #110                // Method org/h2/mvstore/DataUtils.getFromMap:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     101: astore        10
     103: aload         7
     105: aload_0
     106: iload         4
     108: aload         10
     110: ifnull        121
     113: aload         10
     115: invokestatic  #111                // Method org/h2/mvstore/DataUtils.parseHexLong:(Ljava/lang/String;)J
     118: goto          122
     121: lconst_0
     122: invokevirtual #55                 // Method org/h2/mvstore/MVMap.init:(Lorg/h2/mvstore/MVStore;IJ)V
     125: aload_0
     126: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     129: iload         4
     131: invokestatic  #92                 // Method getRootPos:(Lorg/h2/mvstore/MVMap;I)J
     134: lstore        5
     136: goto          232
     139: aload_0
     140: dup
     141: getfield      #112                // Field lastMapId:I
     144: iconst_1
     145: iadd
     146: dup_x1
     147: putfield      #112                // Field lastMapId:I
     150: istore        4
     152: aload_2
     153: invokeinterface #107,  1          // InterfaceMethod org/h2/mvstore/MVMap$MapBuilder.create:()Lorg/h2/mvstore/MVMap;
     158: astore        7
     160: aload         7
     162: aload_0
     163: iload         4
     165: aload_0
     166: getfield      #54                 // Field currentVersion:J
     169: invokevirtual #55                 // Method org/h2/mvstore/MVMap.init:(Lorg/h2/mvstore/MVStore;IJ)V
     172: aload_0
     173: invokespecial #113                // Method markMetaChanged:()V
     176: iload         4
     178: invokestatic  #114                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     181: astore_3
     182: aload_0
     183: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     186: iload         4
     188: invokestatic  #108                // Method org/h2/mvstore/MVMap.getMapKey:(I)Ljava/lang/String;
     191: aload         7
     193: aload_1
     194: invokevirtual #115                // Method org/h2/mvstore/MVMap.asString:(Ljava/lang/String;)Ljava/lang/String;
     197: invokevirtual #116                // Method org/h2/mvstore/MVMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     200: pop
     201: aload_0
     202: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     205: new           #99                 // class java/lang/StringBuilder
     208: dup
     209: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
     212: ldc           #101                // String name.
     214: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     217: aload_1
     218: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     221: invokevirtual #103                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     224: aload_3
     225: invokevirtual #116                // Method org/h2/mvstore/MVMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     228: pop
     229: lconst_0
     230: lstore        5
     232: aload         7
     234: lload         5
     236: ldc2_w        #12                 // long -1l
     239: invokevirtual #94                 // Method org/h2/mvstore/MVMap.setRootPos:(JJ)V
     242: aload_0
     243: getfield      #7                  // Field maps:Ljava/util/concurrent/ConcurrentHashMap;
     246: iload         4
     248: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     251: aload         7
     253: invokevirtual #117                // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     256: pop
     257: aload         7
     259: areturn

  public synchronized java.util.Set<java.lang.String> getMapNames();
    Code:
       0: new           #118                // class java/util/HashSet
       3: dup
       4: invokespecial #119                // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: invokespecial #98                 // Method checkOpen:()V
      12: aload_0
      13: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
      16: ldc           #101                // String name.
      18: invokevirtual #120                // Method org/h2/mvstore/MVMap.keyIterator:(Ljava/lang/Object;)Ljava/util/Iterator;
      21: astore_2
      22: aload_2
      23: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          70
      31: aload_2
      32: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #22                 // class java/lang/String
      40: astore_3
      41: aload_3
      42: ldc           #101                // String name.
      44: invokevirtual #123                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      47: ifne          53
      50: goto          70
      53: aload_1
      54: aload_3
      55: ldc           #101                // String name.
      57: invokevirtual #124                // Method java/lang/String.length:()I
      60: invokevirtual #125                // Method java/lang/String.substring:(I)Ljava/lang/String;
      63: invokevirtual #126                // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      66: pop
      67: goto          22
      70: aload_1
      71: areturn

  public org.h2.mvstore.MVMap<java.lang.String, java.lang.String> getMetaMap();
    Code:
       0: aload_0
       1: invokespecial #98                 // Method checkOpen:()V
       4: aload_0
       5: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
       8: areturn

  private org.h2.mvstore.MVMap<java.lang.String, java.lang.String> getMetaMap(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #127                // Method getChunkForVersion:(J)Lorg/h2/mvstore/Chunk;
       5: astore_3
       6: aload_3
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ldc           #128                // String Unknown version {0}
      17: iconst_1
      18: anewarray     #15                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: lload_1
      24: invokestatic  #77                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      27: aastore
      28: invokestatic  #129                // Method org/h2/mvstore/DataUtils.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      31: aload_0
      32: aload_3
      33: getfield      #130                // Field org/h2/mvstore/Chunk.block:J
      36: invokespecial #131                // Method readChunkHeader:(J)Lorg/h2/mvstore/Chunk;
      39: astore_3
      40: aload_0
      41: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
      44: invokevirtual #93                 // Method org/h2/mvstore/MVMap.openReadOnly:()Lorg/h2/mvstore/MVMap;
      47: astore        4
      49: aload         4
      51: aload_3
      52: getfield      #132                // Field org/h2/mvstore/Chunk.metaRootPos:J
      55: lload_1
      56: invokevirtual #94                 // Method org/h2/mvstore/MVMap.setRootPos:(JJ)V
      59: aload         4
      61: areturn

  private org.h2.mvstore.Chunk getChunkForVersion(long);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
       6: invokevirtual #133                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
       9: invokeinterface #134,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore        4
      16: aload         4
      18: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          70
      26: aload         4
      28: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #135                // class org/h2/mvstore/Chunk
      36: astore        5
      38: aload         5
      40: getfield      #136                // Field org/h2/mvstore/Chunk.version:J
      43: lload_1
      44: lcmp
      45: ifgt          67
      48: aload_3
      49: ifnull        64
      52: aload         5
      54: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
      57: aload_3
      58: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
      61: if_icmple     67
      64: aload         5
      66: astore_3
      67: goto          16
      70: aload_3
      71: areturn

  public boolean hasMap(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
       4: new           #99                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #101                // String name.
      13: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #103                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: invokevirtual #138                // Method org/h2/mvstore/MVMap.containsKey:(Ljava/lang/Object;)Z
      26: ireturn

  private void markMetaChanged();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #139                // Field metaChanged:Z
       5: return

  private synchronized void readStoreHeader();
    Code:
       0: aconst_null
       1: astore_1
       2: iconst_0
       3: istore_2
       4: aload_0
       5: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
       8: lconst_0
       9: sipush        8192
      12: invokevirtual #140                // Method org/h2/mvstore/FileStore.readFully:(JI)Ljava/nio/ByteBuffer;
      15: astore_3
      16: sipush        4096
      19: newarray       byte
      21: astore        4
      23: iconst_0
      24: istore        5
      26: iload         5
      28: sipush        4096
      31: if_icmpgt     202
      34: aload_3
      35: aload         4
      37: invokevirtual #141                // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      40: pop
      41: aload         4
      43: invokestatic  #142                // Method org/h2/mvstore/DataUtils.parseChecksummedMap:([B)Ljava/util/HashMap;
      46: astore        6
      48: aload         6
      50: ifnonnull     56
      53: goto          193
      56: aload         6
      58: ldc           #74                 // String blockSize
      60: sipush        4096
      63: invokestatic  #143                // Method org/h2/mvstore/DataUtils.readHexInt:(Ljava/util/HashMap;Ljava/lang/String;I)I
      66: istore        7
      68: iload         7
      70: sipush        4096
      73: if_icmpeq     95
      76: iconst_5
      77: ldc           #144                // String Block size {0} is currently not supported
      79: iconst_1
      80: anewarray     #15                 // class java/lang/Object
      83: dup
      84: iconst_0
      85: iload         7
      87: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      90: aastore
      91: invokestatic  #145                // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      94: athrow
      95: aload         6
      97: ldc           #146                // String version
      99: lconst_0
     100: invokestatic  #147                // Method org/h2/mvstore/DataUtils.readHexLong:(Ljava/util/Map;Ljava/lang/String;J)J
     103: lstore        8
     105: aload_1
     106: ifnull        119
     109: lload         8
     111: aload_1
     112: getfield      #136                // Field org/h2/mvstore/Chunk.version:J
     115: lcmp
     116: ifle          188
     119: iconst_1
     120: istore_2
     121: aload_0
     122: getfield      #10                 // Field storeHeader:Ljava/util/HashMap;
     125: aload         6
     127: invokevirtual #148                // Method java/util/HashMap.putAll:(Ljava/util/Map;)V
     130: aload_0
     131: aload         6
     133: ldc           #76                 // String created
     135: lconst_0
     136: invokestatic  #147                // Method org/h2/mvstore/DataUtils.readHexLong:(Ljava/util/Map;Ljava/lang/String;J)J
     139: putfield      #69                 // Field creationTime:J
     142: aload         6
     144: ldc           #149                // String chunk
     146: iconst_0
     147: invokestatic  #143                // Method org/h2/mvstore/DataUtils.readHexInt:(Ljava/util/HashMap;Ljava/lang/String;I)I
     150: istore        10
     152: aload         6
     154: ldc           #150                // String block
     156: lconst_0
     157: invokestatic  #147                // Method org/h2/mvstore/DataUtils.readHexLong:(Ljava/util/Map;Ljava/lang/String;J)J
     160: lstore        11
     162: aload_0
     163: lload         11
     165: invokespecial #151                // Method readChunkHeaderAndFooter:(J)Lorg/h2/mvstore/Chunk;
     168: astore        13
     170: aload         13
     172: ifnull        188
     175: aload         13
     177: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     180: iload         10
     182: if_icmpne     188
     185: aload         13
     187: astore_1
     188: goto          193
     191: astore        6
     193: iinc_w        5, 4096
     199: goto          26
     202: iload_2
     203: ifne          225
     206: bipush        6
     208: ldc           #153                // String Store header is corrupt: {0}
     210: iconst_1
     211: anewarray     #15                 // class java/lang/Object
     214: dup
     215: iconst_0
     216: aload_0
     217: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     220: aastore
     221: invokestatic  #145                // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
     224: athrow
     225: aload_0
     226: getfield      #10                 // Field storeHeader:Ljava/util/HashMap;
     229: ldc           #75                 // String format
     231: lconst_1
     232: invokestatic  #147                // Method org/h2/mvstore/DataUtils.readHexLong:(Ljava/util/Map;Ljava/lang/String;J)J
     235: lstore        5
     237: lload         5
     239: lconst_1
     240: lcmp
     241: ifle          280
     244: aload_0
     245: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     248: invokevirtual #154                // Method org/h2/mvstore/FileStore.isReadOnly:()Z
     251: ifne          280
     254: iconst_5
     255: ldc           #155                // String The write format {0} is larger than the supported format {1}, and the file was not opened in read-only mode
     257: iconst_2
     258: anewarray     #15                 // class java/lang/Object
     261: dup
     262: iconst_0
     263: lload         5
     265: invokestatic  #77                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     268: aastore
     269: dup
     270: iconst_1
     271: iconst_1
     272: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     275: aastore
     276: invokestatic  #145                // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
     279: athrow
     280: aload_0
     281: getfield      #10                 // Field storeHeader:Ljava/util/HashMap;
     284: ldc           #156                // String formatRead
     286: lload         5
     288: invokestatic  #147                // Method org/h2/mvstore/DataUtils.readHexLong:(Ljava/util/Map;Ljava/lang/String;J)J
     291: lstore        5
     293: lload         5
     295: lconst_1
     296: lcmp
     297: ifle          326
     300: iconst_5
     301: ldc           #157                // String The read format {0} is larger than the supported format {1}
     303: iconst_2
     304: anewarray     #15                 // class java/lang/Object
     307: dup
     308: iconst_0
     309: lload         5
     311: invokestatic  #77                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     314: aastore
     315: dup
     316: iconst_1
     317: iconst_1
     318: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     321: aastore
     322: invokestatic  #145                // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
     325: athrow
     326: aload_0
     327: ldc2_w        #12                 // long -1l
     330: putfield      #158                // Field lastStoredVersion:J
     333: aload_0
     334: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
     337: invokevirtual #159                // Method java/util/concurrent/ConcurrentHashMap.clear:()V
     340: invokestatic  #160                // Method java/lang/System.currentTimeMillis:()J
     343: lstore        7
     345: sipush        1970
     348: lload         7
     350: ldc2_w        #161                // long 31557600000l
     353: ldiv
     354: l2i
     355: iadd
     356: istore        9
     358: iload         9
     360: sipush        2014
     363: if_icmpge     384
     366: aload_0
     367: lload         7
     369: aload_0
     370: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     373: invokevirtual #56                 // Method org/h2/mvstore/FileStore.getDefaultRetentionTime:()I
     376: i2l
     377: lsub
     378: putfield      #69                 // Field creationTime:J
     381: goto          417
     384: lload         7
     386: aload_0
     387: getfield      #69                 // Field creationTime:J
     390: lcmp
     391: ifge          417
     394: aload_0
     395: lload         7
     397: putfield      #69                 // Field creationTime:J
     400: aload_0
     401: getfield      #10                 // Field storeHeader:Ljava/util/HashMap;
     404: ldc           #76                 // String created
     406: aload_0
     407: getfield      #69                 // Field creationTime:J
     410: invokestatic  #77                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     413: invokevirtual #73                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     416: pop
     417: aload_0
     418: aload_0
     419: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     422: invokevirtual #67                 // Method org/h2/mvstore/FileStore.size:()J
     425: invokespecial #163                // Method readChunkFooter:(J)Lorg/h2/mvstore/Chunk;
     428: astore        10
     430: aload         10
     432: ifnull        471
     435: aload_0
     436: aload         10
     438: getfield      #130                // Field org/h2/mvstore/Chunk.block:J
     441: invokespecial #151                // Method readChunkHeaderAndFooter:(J)Lorg/h2/mvstore/Chunk;
     444: astore        10
     446: aload         10
     448: ifnull        471
     451: aload_1
     452: ifnull        468
     455: aload         10
     457: getfield      #136                // Field org/h2/mvstore/Chunk.version:J
     460: aload_1
     461: getfield      #136                // Field org/h2/mvstore/Chunk.version:J
     464: lcmp
     465: ifle          471
     468: aload         10
     470: astore_1
     471: aload_1
     472: ifnonnull     476
     475: return
     476: aload_1
     477: getfield      #164                // Field org/h2/mvstore/Chunk.next:J
     480: lconst_0
     481: lcmp
     482: ifeq          543
     485: aload_1
     486: getfield      #164                // Field org/h2/mvstore/Chunk.next:J
     489: aload_0
     490: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     493: invokevirtual #67                 // Method org/h2/mvstore/FileStore.size:()J
     496: ldc2_w        #165                // long 4096l
     499: ldiv
     500: lcmp
     501: iflt          507
     504: goto          543
     507: aload_0
     508: aload_1
     509: getfield      #164                // Field org/h2/mvstore/Chunk.next:J
     512: invokespecial #151                // Method readChunkHeaderAndFooter:(J)Lorg/h2/mvstore/Chunk;
     515: astore        10
     517: aload         10
     519: ifnull        543
     522: aload         10
     524: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     527: aload_1
     528: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     531: if_icmpgt     537
     534: goto          543
     537: aload         10
     539: astore_1
     540: goto          476
     543: aload_0
     544: aload_1
     545: invokespecial #167                // Method setLastChunk:(Lorg/h2/mvstore/Chunk;)V
     548: aload_0
     549: invokespecial #168                // Method loadChunkMeta:()V
     552: aload_0
     553: invokespecial #169                // Method verifyLastChunks:()V
     556: aload_0
     557: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
     560: invokevirtual #133                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
     563: invokeinterface #134,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     568: astore        11
     570: aload         11
     572: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     577: ifeq          651
     580: aload         11
     582: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     587: checkcast     #135                // class org/h2/mvstore/Chunk
     590: astore        12
     592: aload         12
     594: getfield      #170                // Field org/h2/mvstore/Chunk.pageCountLive:I
     597: ifne          615
     600: aload_0
     601: aload_0
     602: getfield      #54                 // Field currentVersion:J
     605: aload         12
     607: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     610: lconst_0
     611: iconst_0
     612: invokespecial #171                // Method registerFreePage:(JIJI)V
     615: aload         12
     617: getfield      #130                // Field org/h2/mvstore/Chunk.block:J
     620: ldc2_w        #165                // long 4096l
     623: lmul
     624: lstore        13
     626: aload         12
     628: getfield      #172                // Field org/h2/mvstore/Chunk.len:I
     631: sipush        4096
     634: imul
     635: istore        15
     637: aload_0
     638: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     641: lload         13
     643: iload         15
     645: invokevirtual #173                // Method org/h2/mvstore/FileStore.markUsed:(JI)V
     648: goto          570
     651: return
    Exception table:
       from    to  target type
          41    53   191   Class java/lang/Exception
          56   188   191   Class java/lang/Exception

  private void loadChunkMeta();
    Code:
       0: aload_0
       1: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
       4: ldc           #174                // String chunk.
       6: invokevirtual #120                // Method org/h2/mvstore/MVMap.keyIterator:(Ljava/lang/Object;)Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          112
      19: aload_1
      20: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #22                 // class java/lang/String
      28: astore_2
      29: aload_2
      30: ldc           #174                // String chunk.
      32: invokevirtual #123                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      35: ifne          41
      38: goto          112
      41: aload_0
      42: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
      45: aload_2
      46: invokevirtual #104                // Method org/h2/mvstore/MVMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #22                 // class java/lang/String
      52: astore_2
      53: aload_2
      54: invokestatic  #175                // Method org/h2/mvstore/Chunk.fromString:(Ljava/lang/String;)Lorg/h2/mvstore/Chunk;
      57: astore_3
      58: aload_0
      59: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
      62: aload_3
      63: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
      66: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      69: aload_3
      70: invokevirtual #176                // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: ifnonnull     109
      76: aload_3
      77: getfield      #130                // Field org/h2/mvstore/Chunk.block:J
      80: ldc2_w        #177                // long 9223372036854775807l
      83: lcmp
      84: ifne          109
      87: bipush        6
      89: ldc           #179                // String Chunk {0} is invalid
      91: iconst_1
      92: anewarray     #15                 // class java/lang/Object
      95: dup
      96: iconst_0
      97: aload_3
      98: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     101: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     104: aastore
     105: invokestatic  #145                // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
     108: athrow
     109: goto          10
     112: return

  private void setLastChunk(org.h2.mvstore.Chunk);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
       5: aload_1
       6: ifnonnull     33
       9: aload_0
      10: iconst_0
      11: putfield      #112                // Field lastMapId:I
      14: aload_0
      15: lconst_0
      16: putfield      #54                 // Field currentVersion:J
      19: aload_0
      20: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
      23: lconst_0
      24: ldc2_w        #12                 // long -1l
      27: invokevirtual #94                 // Method org/h2/mvstore/MVMap.setRootPos:(JJ)V
      30: goto          79
      33: aload_0
      34: aload_1
      35: getfield      #181                // Field org/h2/mvstore/Chunk.mapId:I
      38: putfield      #112                // Field lastMapId:I
      41: aload_0
      42: aload_1
      43: getfield      #136                // Field org/h2/mvstore/Chunk.version:J
      46: putfield      #54                 // Field currentVersion:J
      49: aload_0
      50: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
      53: aload_1
      54: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
      57: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      60: aload_1
      61: invokevirtual #117                // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: aload_0
      66: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
      69: aload_1
      70: getfield      #132                // Field org/h2/mvstore/Chunk.metaRootPos:J
      73: ldc2_w        #12                 // long -1l
      76: invokevirtual #94                 // Method org/h2/mvstore/MVMap.setRootPos:(JJ)V
      79: aload_0
      80: aload_0
      81: getfield      #54                 // Field currentVersion:J
      84: invokespecial #182                // Method setWriteVersion:(J)V
      87: return

  private void verifyLastChunks();
    Code:
       0: aload_0
       1: invokespecial #83                 // Method getTimeSinceCreation:()J
       4: lstore_1
       5: new           #183                // class java/util/ArrayList
       8: dup
       9: aload_0
      10: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
      13: invokevirtual #184                // Method java/util/concurrent/ConcurrentHashMap.keySet:()Ljava/util/Set;
      16: invokespecial #185                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      19: astore_3
      20: aload_3
      21: invokestatic  #186                // Method java/util/Collections.sort:(Ljava/util/List;)V
      24: iconst_m1
      25: istore        4
      27: aconst_null
      28: astore        5
      30: aload_3
      31: invokevirtual #187                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      34: astore        6
      36: aload         6
      38: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          166
      46: aload         6
      48: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      53: checkcast     #35                 // class java/lang/Integer
      56: astore        7
      58: aload_0
      59: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
      62: aload         7
      64: invokevirtual #106                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      67: checkcast     #135                // class org/h2/mvstore/Chunk
      70: astore        8
      72: aload         5
      74: ifnull        94
      77: aload         8
      79: getfield      #188                // Field org/h2/mvstore/Chunk.time:J
      82: aload         5
      84: getfield      #188                // Field org/h2/mvstore/Chunk.time:J
      87: lcmp
      88: ifge          94
      91: goto          166
      94: aload         8
      96: astore        5
      98: aload         8
     100: getfield      #188                // Field org/h2/mvstore/Chunk.time:J
     103: aload_0
     104: getfield      #57                 // Field retentionTime:I
     107: i2l
     108: ladd
     109: lload_1
     110: lcmp
     111: ifge          124
     114: aload         8
     116: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     119: istore        4
     121: goto          36
     124: aload_0
     125: aload         8
     127: getfield      #130                // Field org/h2/mvstore/Chunk.block:J
     130: invokespecial #151                // Method readChunkHeaderAndFooter:(J)Lorg/h2/mvstore/Chunk;
     133: astore        9
     135: aload         9
     137: ifnull        166
     140: aload         9
     142: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     145: aload         8
     147: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     150: if_icmpeq     156
     153: goto          166
     156: aload         7
     158: invokevirtual #36                 // Method java/lang/Integer.intValue:()I
     161: istore        4
     163: goto          36
     166: aload_0
     167: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
     170: iload         4
     172: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     175: invokevirtual #106                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     178: checkcast     #135                // class org/h2/mvstore/Chunk
     181: astore        6
     183: aload         6
     185: aload_0
     186: getfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
     189: if_acmpeq     210
     192: aload_0
     193: aload         6
     195: ifnonnull     202
     198: lconst_0
     199: goto          207
     202: aload         6
     204: getfield      #136                // Field org/h2/mvstore/Chunk.version:J
     207: invokevirtual #189                // Method rollbackTo:(J)V
     210: return

  private org.h2.mvstore.Chunk readChunkHeaderAndFooter(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #131                // Method readChunkHeader:(J)Lorg/h2/mvstore/Chunk;
       5: astore_3
       6: goto          13
       9: astore        4
      11: aconst_null
      12: areturn
      13: aload_3
      14: ifnonnull     19
      17: aconst_null
      18: areturn
      19: aload_0
      20: lload_1
      21: aload_3
      22: getfield      #172                // Field org/h2/mvstore/Chunk.len:I
      25: i2l
      26: ladd
      27: ldc2_w        #165                // long 4096l
      30: lmul
      31: invokespecial #163                // Method readChunkFooter:(J)Lorg/h2/mvstore/Chunk;
      34: astore        4
      36: aload         4
      38: ifnull        53
      41: aload         4
      43: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
      46: aload_3
      47: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
      50: if_icmpeq     55
      53: aconst_null
      54: areturn
      55: aload_3
      56: areturn
    Exception table:
       from    to  target type
           0     6     9   Class java/lang/Exception

  private org.h2.mvstore.Chunk readChunkFooter(long);
    Code:
       0: aload_0
       1: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
       4: lload_1
       5: ldc2_w        #190                // long 128l
       8: lsub
       9: sipush        128
      12: invokevirtual #140                // Method org/h2/mvstore/FileStore.readFully:(JI)Ljava/nio/ByteBuffer;
      15: astore_3
      16: sipush        128
      19: newarray       byte
      21: astore        4
      23: aload_3
      24: aload         4
      26: invokevirtual #141                // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      29: pop
      30: aload         4
      32: invokestatic  #142                // Method org/h2/mvstore/DataUtils.parseChecksummedMap:([B)Ljava/util/HashMap;
      35: astore        5
      37: aload         5
      39: ifnull        92
      42: aload         5
      44: ldc           #149                // String chunk
      46: iconst_0
      47: invokestatic  #143                // Method org/h2/mvstore/DataUtils.readHexInt:(Ljava/util/HashMap;Ljava/lang/String;I)I
      50: istore        6
      52: new           #135                // class org/h2/mvstore/Chunk
      55: dup
      56: iload         6
      58: invokespecial #192                // Method org/h2/mvstore/Chunk."<init>":(I)V
      61: astore        7
      63: aload         7
      65: aload         5
      67: ldc           #146                // String version
      69: lconst_0
      70: invokestatic  #147                // Method org/h2/mvstore/DataUtils.readHexLong:(Ljava/util/Map;Ljava/lang/String;J)J
      73: putfield      #136                // Field org/h2/mvstore/Chunk.version:J
      76: aload         7
      78: aload         5
      80: ldc           #150                // String block
      82: lconst_0
      83: invokestatic  #147                // Method org/h2/mvstore/DataUtils.readHexLong:(Ljava/util/Map;Ljava/lang/String;J)J
      86: putfield      #130                // Field org/h2/mvstore/Chunk.block:J
      89: aload         7
      91: areturn
      92: goto          96
      95: astore_3
      96: aconst_null
      97: areturn
    Exception table:
       from    to  target type
           0    91    95   Class java/lang/Exception

  private void writeStoreHeader();
    Code:
       0: new           #99                 // class java/lang/StringBuilder
       3: dup
       4: bipush        112
       6: invokespecial #193                // Method java/lang/StringBuilder."<init>":(I)V
       9: astore_1
      10: aload_0
      11: getfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
      14: ifnull        77
      17: aload_0
      18: getfield      #10                 // Field storeHeader:Ljava/util/HashMap;
      21: ldc           #150                // String block
      23: aload_0
      24: getfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
      27: getfield      #130                // Field org/h2/mvstore/Chunk.block:J
      30: invokestatic  #77                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      33: invokevirtual #73                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: aload_0
      38: getfield      #10                 // Field storeHeader:Ljava/util/HashMap;
      41: ldc           #149                // String chunk
      43: aload_0
      44: getfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
      47: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
      50: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      53: invokevirtual #73                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: aload_0
      58: getfield      #10                 // Field storeHeader:Ljava/util/HashMap;
      61: ldc           #146                // String version
      63: aload_0
      64: getfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
      67: getfield      #136                // Field org/h2/mvstore/Chunk.version:J
      70: invokestatic  #77                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      73: invokevirtual #73                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      76: pop
      77: aload_1
      78: aload_0
      79: getfield      #10                 // Field storeHeader:Ljava/util/HashMap;
      82: invokestatic  #194                // Method org/h2/mvstore/DataUtils.appendMap:(Ljava/lang/StringBuilder;Ljava/util/HashMap;)Ljava/lang/StringBuilder;
      85: pop
      86: aload_1
      87: invokevirtual #103                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: getstatic     #195                // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
      93: invokevirtual #196                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      96: astore_2
      97: aload_2
      98: iconst_0
      99: aload_2
     100: arraylength
     101: invokestatic  #197                // Method org/h2/mvstore/DataUtils.getFletcher32:([BII)I
     104: istore_3
     105: aload_1
     106: ldc           #198                // String fletcher
     108: iload_3
     109: invokestatic  #199                // Method org/h2/mvstore/DataUtils.appendMap:(Ljava/lang/StringBuilder;Ljava/lang/String;I)V
     112: aload_1
     113: bipush        10
     115: invokevirtual #200                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     118: pop
     119: aload_1
     120: invokevirtual #103                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: getstatic     #195                // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
     126: invokevirtual #196                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     129: astore_2
     130: sipush        8192
     133: invokestatic  #201                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     136: astore        4
     138: aload         4
     140: aload_2
     141: invokevirtual #202                // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     144: pop
     145: aload         4
     147: sipush        4096
     150: invokevirtual #203                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     153: pop
     154: aload         4
     156: aload_2
     157: invokevirtual #202                // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     160: pop
     161: aload         4
     163: invokevirtual #204                // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
     166: pop
     167: aload_0
     168: lconst_0
     169: aload         4
     171: invokespecial #205                // Method write:(JLjava/nio/ByteBuffer;)V
     174: return

  private void write(long, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
       4: lload_1
       5: aload_3
       6: invokevirtual #206                // Method org/h2/mvstore/FileStore.writeFully:(JLjava/nio/ByteBuffer;)V
       9: goto          23
      12: astore        4
      14: aload_0
      15: aload         4
      17: invokespecial #82                 // Method panic:(Ljava/lang/IllegalStateException;)V
      20: aload         4
      22: athrow
      23: return
    Exception table:
       from    to  target type
           0     9    12   Class java/lang/IllegalStateException

  public void close();
    Code:
       0: aload_0
       1: getfield      #207                // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
      12: astore_1
      13: aload_1
      14: ifnull        40
      17: aload_1
      18: invokevirtual #154                // Method org/h2/mvstore/FileStore.isReadOnly:()Z
      21: ifne          40
      24: aload_0
      25: invokespecial #208                // Method stopBackgroundThread:()V
      28: aload_0
      29: invokevirtual #209                // Method hasUnsavedChanges:()Z
      32: ifeq          40
      35: aload_0
      36: invokespecial #210                // Method commitAndSave:()J
      39: pop2
      40: aload_0
      41: iconst_1
      42: invokespecial #211                // Method closeStore:(Z)V
      45: return

  public void closeImmediately();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #211                // Method closeStore:(Z)V
       5: goto          14
       8: astore_1
       9: aload_0
      10: aload_1
      11: invokespecial #86                 // Method handleException:(Ljava/lang/Throwable;)V
      14: return
    Exception table:
       from    to  target type
           0     5     8   Class java/lang/Throwable

  private void closeStore(boolean);
    Code:
       0: aload_0
       1: getfield      #207                // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokespecial #208                // Method stopBackgroundThread:()V
      12: aload_0
      13: iconst_1
      14: putfield      #207                // Field closed:Z
      17: aload_0
      18: dup
      19: astore_2
      20: monitorenter
      21: aload_0
      22: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
      25: ifnull        37
      28: iload_1
      29: ifeq          37
      32: aload_0
      33: iconst_0
      34: invokespecial #213                // Method shrinkFileIfPossible:(I)V
      37: aload_0
      38: getfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
      41: ifnull        51
      44: aload_0
      45: getfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
      48: invokevirtual #214                // Method org/h2/mvstore/cache/CacheLongKeyLIRS.clear:()V
      51: aload_0
      52: getfield      #43                 // Field cacheChunkRef:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
      55: ifnull        65
      58: aload_0
      59: getfield      #43                 // Field cacheChunkRef:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
      62: invokevirtual #214                // Method org/h2/mvstore/cache/CacheLongKeyLIRS.clear:()V
      65: new           #183                // class java/util/ArrayList
      68: dup
      69: aload_0
      70: getfield      #7                  // Field maps:Ljava/util/concurrent/ConcurrentHashMap;
      73: invokevirtual #133                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      76: invokespecial #185                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      79: invokevirtual #187                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      82: astore_3
      83: aload_3
      84: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      89: ifeq          111
      92: aload_3
      93: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      98: checkcast     #50                 // class org/h2/mvstore/MVMap
     101: astore        4
     103: aload         4
     105: invokevirtual #215                // Method org/h2/mvstore/MVMap.close:()V
     108: goto          83
     111: aload_0
     112: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
     115: invokevirtual #159                // Method java/util/concurrent/ConcurrentHashMap.clear:()V
     118: aload_0
     119: getfield      #7                  // Field maps:Ljava/util/concurrent/ConcurrentHashMap;
     122: invokevirtual #159                // Method java/util/concurrent/ConcurrentHashMap.clear:()V
     125: aload_0
     126: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     129: ifnull        146
     132: aload_0
     133: getfield      #25                 // Field fileStoreIsProvided:Z
     136: ifne          146
     139: aload_0
     140: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     143: invokevirtual #216                // Method org/h2/mvstore/FileStore.close:()V
     146: aload_2
     147: monitorexit
     148: goto          158
     151: astore        5
     153: aload_2
     154: monitorexit
     155: aload         5
     157: athrow
     158: return
    Exception table:
       from    to  target type
          21   148   151   any
         151   155   151   any

  private org.h2.mvstore.Chunk getChunk(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #217                // Method getChunkIfFound:(J)Lorg/h2/mvstore/Chunk;
       5: astore_3
       6: aload_3
       7: ifnonnull     36
      10: lload_1
      11: invokestatic  #218                // Method org/h2/mvstore/DataUtils.getPageChunkId:(J)I
      14: istore        4
      16: bipush        6
      18: ldc           #219                // String Chunk {0} not found
      20: iconst_1
      21: anewarray     #15                 // class java/lang/Object
      24: dup
      25: iconst_0
      26: iload         4
      28: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      31: aastore
      32: invokestatic  #145                // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      35: athrow
      36: aload_3
      37: areturn

  private org.h2.mvstore.Chunk getChunkIfFound(long);
    Code:
       0: lload_1
       1: invokestatic  #218                // Method org/h2/mvstore/DataUtils.getPageChunkId:(J)I
       4: istore_3
       5: aload_0
       6: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
       9: iload_3
      10: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: invokevirtual #106                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #135                // class org/h2/mvstore/Chunk
      19: astore        4
      21: aload         4
      23: ifnonnull     135
      26: aload_0
      27: invokespecial #98                 // Method checkOpen:()V
      30: aload_0
      31: invokestatic  #220                // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      34: ifne          56
      37: bipush        9
      39: ldc           #221                // String Chunk {0} no longer exists
      41: iconst_1
      42: anewarray     #15                 // class java/lang/Object
      45: dup
      46: iconst_0
      47: iload_3
      48: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: aastore
      52: invokestatic  #145                // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      55: athrow
      56: aload_0
      57: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
      60: iload_3
      61: invokestatic  #222                // Method org/h2/mvstore/Chunk.getMetaKey:(I)Ljava/lang/String;
      64: invokevirtual #104                // Method org/h2/mvstore/MVMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      67: checkcast     #22                 // class java/lang/String
      70: astore        5
      72: aload         5
      74: ifnonnull     79
      77: aconst_null
      78: areturn
      79: aload         5
      81: invokestatic  #175                // Method org/h2/mvstore/Chunk.fromString:(Ljava/lang/String;)Lorg/h2/mvstore/Chunk;
      84: astore        4
      86: aload         4
      88: getfield      #130                // Field org/h2/mvstore/Chunk.block:J
      91: ldc2_w        #177                // long 9223372036854775807l
      94: lcmp
      95: ifne          117
      98: bipush        6
     100: ldc           #179                // String Chunk {0} is invalid
     102: iconst_1
     103: anewarray     #15                 // class java/lang/Object
     106: dup
     107: iconst_0
     108: iload_3
     109: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     112: aastore
     113: invokestatic  #145                // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
     116: athrow
     117: aload_0
     118: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
     121: aload         4
     123: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     126: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     129: aload         4
     131: invokevirtual #117                // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     134: pop
     135: aload         4
     137: areturn

  private void setWriteVersion(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field maps:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #133                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
       7: invokeinterface #134,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      12: astore_3
      13: aload_3
      14: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          42
      22: aload_3
      23: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #50                 // class org/h2/mvstore/MVMap
      31: astore        4
      33: aload         4
      35: lload_1
      36: invokevirtual #223                // Method org/h2/mvstore/MVMap.setWriteVersion:(J)V
      39: goto          13
      42: aload_0
      43: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
      46: astore_3
      47: aload_3
      48: ifnonnull     55
      51: aload_0
      52: invokespecial #98                 // Method checkOpen:()V
      55: aload_3
      56: lload_1
      57: invokevirtual #223                // Method org/h2/mvstore/MVMap.setWriteVersion:(J)V
      60: return

  public synchronized long commit();
    Code:
       0: aload_0
       1: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
       4: ifnull        12
       7: aload_0
       8: invokespecial #210                // Method commitAndSave:()J
      11: lreturn
      12: aload_0
      13: dup
      14: getfield      #54                 // Field currentVersion:J
      17: lconst_1
      18: ladd
      19: dup2_x1
      20: putfield      #54                 // Field currentVersion:J
      23: lstore_1
      24: aload_0
      25: lload_1
      26: invokespecial #182                // Method setWriteVersion:(J)V
      29: lload_1
      30: lreturn

  private synchronized long commitAndSave();
    Code:
       0: aload_0
       1: getfield      #207                // Field closed:Z
       4: ifeq          12
       7: aload_0
       8: getfield      #54                 // Field currentVersion:J
      11: lreturn
      12: aload_0
      13: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
      16: ifnonnull     30
      19: iconst_2
      20: ldc           #224                // String This is an in-memory store
      22: iconst_0
      23: anewarray     #15                 // class java/lang/Object
      26: invokestatic  #145                // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      29: athrow
      30: aload_0
      31: getfield      #14                 // Field currentStoreVersion:J
      34: lconst_0
      35: lcmp
      36: iflt          44
      39: aload_0
      40: getfield      #54                 // Field currentVersion:J
      43: lreturn
      44: aload_0
      45: invokevirtual #209                // Method hasUnsavedChanges:()Z
      48: ifne          56
      51: aload_0
      52: getfield      #54                 // Field currentVersion:J
      55: lreturn
      56: aload_0
      57: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
      60: invokevirtual #154                // Method org/h2/mvstore/FileStore.isReadOnly:()Z
      63: ifeq          77
      66: iconst_2
      67: ldc           #225                // String This store is read-only
      69: iconst_0
      70: anewarray     #15                 // class java/lang/Object
      73: invokestatic  #145                // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      76: athrow
      77: aload_0
      78: aload_0
      79: getfield      #54                 // Field currentVersion:J
      82: putfield      #14                 // Field currentStoreVersion:J
      85: aload_0
      86: invokestatic  #226                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      89: putfield      #227                // Field currentStoreThread:Ljava/lang/Thread;
      92: aload_0
      93: invokespecial #228                // Method storeNow:()J
      96: lstore_1
      97: aload_0
      98: ldc2_w        #12                 // long -1l
     101: putfield      #14                 // Field currentStoreVersion:J
     104: aload_0
     105: aconst_null
     106: putfield      #227                // Field currentStoreThread:Ljava/lang/Thread;
     109: lload_1
     110: lreturn
     111: astore_3
     112: aload_0
     113: ldc2_w        #12                 // long -1l
     116: putfield      #14                 // Field currentStoreVersion:J
     119: aload_0
     120: aconst_null
     121: putfield      #227                // Field currentStoreThread:Ljava/lang/Thread;
     124: aload_3
     125: athrow
    Exception table:
       from    to  target type
          77    97   111   any
         111   112   111   any

  private long storeNow();
    Code:
       0: aload_0
       1: invokespecial #229                // Method storeNowTry:()J
       4: lreturn
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokespecial #82                 // Method panic:(Ljava/lang/IllegalStateException;)V
      11: ldc2_w        #12                 // long -1l
      14: lreturn
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/IllegalStateException

  private long storeNowTry();
    Code:
       0: aload_0
       1: invokespecial #83                 // Method getTimeSinceCreation:()J
       4: lstore_1
       5: aload_0
       6: lload_1
       7: invokespecial #230                // Method freeUnusedIfNeeded:(J)V
      10: aload_0
      11: getfield      #231                // Field unsavedMemory:I
      14: istore_3
      15: aload_0
      16: getfield      #14                 // Field currentStoreVersion:J
      19: lstore        4
      21: aload_0
      22: dup
      23: getfield      #54                 // Field currentVersion:J
      26: lconst_1
      27: ladd
      28: dup2_x1
      29: putfield      #54                 // Field currentVersion:J
      32: lstore        6
      34: aload_0
      35: lload_1
      36: putfield      #70                 // Field lastCommitTime:J
      39: aload_0
      40: aconst_null
      41: putfield      #232                // Field retainChunk:Lorg/h2/mvstore/Chunk;
      44: aload_0
      45: getfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
      48: ifnonnull     57
      51: iconst_0
      52: istore        8
      54: goto          98
      57: aload_0
      58: getfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
      61: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
      64: istore        8
      66: aload_0
      67: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
      70: iload         8
      72: invokestatic  #222                // Method org/h2/mvstore/Chunk.getMetaKey:(I)Ljava/lang/String;
      75: aload_0
      76: getfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
      79: invokevirtual #233                // Method org/h2/mvstore/Chunk.asString:()Ljava/lang/String;
      82: invokevirtual #116                // Method org/h2/mvstore/MVMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      85: pop
      86: aload_0
      87: getfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
      90: getfield      #188                // Field org/h2/mvstore/Chunk.time:J
      93: lload_1
      94: invokestatic  #234                // Method java/lang/Math.max:(JJ)J
      97: lstore_1
      98: iload         8
     100: istore        9
     102: iload         9
     104: iconst_1
     105: iadd
     106: ldc           #235                // int 67108863
     108: irem
     109: istore        9
     111: aload_0
     112: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
     115: iload         9
     117: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     120: invokevirtual #106                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     123: checkcast     #135                // class org/h2/mvstore/Chunk
     126: astore        10
     128: aload         10
     130: ifnonnull     136
     133: goto          169
     136: aload         10
     138: getfield      #130                // Field org/h2/mvstore/Chunk.block:J
     141: ldc2_w        #177                // long 9223372036854775807l
     144: lcmp
     145: ifne          166
     148: iconst_3
     149: ldc           #236                // String Last block not stored, possibly due to out-of-memory
     151: iconst_0
     152: anewarray     #15                 // class java/lang/Object
     155: invokestatic  #145                // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
     158: astore        11
     160: aload_0
     161: aload         11
     163: invokespecial #82                 // Method panic:(Ljava/lang/IllegalStateException;)V
     166: goto          102
     169: new           #135                // class org/h2/mvstore/Chunk
     172: dup
     173: iload         9
     175: invokespecial #192                // Method org/h2/mvstore/Chunk."<init>":(I)V
     178: astore        10
     180: aload         10
     182: ldc           #237                // int 2147483647
     184: putfield      #238                // Field org/h2/mvstore/Chunk.pageCount:I
     187: aload         10
     189: ldc           #237                // int 2147483647
     191: putfield      #170                // Field org/h2/mvstore/Chunk.pageCountLive:I
     194: aload         10
     196: ldc2_w        #177                // long 9223372036854775807l
     199: putfield      #239                // Field org/h2/mvstore/Chunk.maxLen:J
     202: aload         10
     204: ldc2_w        #177                // long 9223372036854775807l
     207: putfield      #240                // Field org/h2/mvstore/Chunk.maxLenLive:J
     210: aload         10
     212: ldc2_w        #177                // long 9223372036854775807l
     215: putfield      #132                // Field org/h2/mvstore/Chunk.metaRootPos:J
     218: aload         10
     220: ldc2_w        #177                // long 9223372036854775807l
     223: putfield      #130                // Field org/h2/mvstore/Chunk.block:J
     226: aload         10
     228: ldc           #237                // int 2147483647
     230: putfield      #172                // Field org/h2/mvstore/Chunk.len:I
     233: aload         10
     235: lload_1
     236: putfield      #188                // Field org/h2/mvstore/Chunk.time:J
     239: aload         10
     241: lload         6
     243: putfield      #136                // Field org/h2/mvstore/Chunk.version:J
     246: aload         10
     248: aload_0
     249: getfield      #112                // Field lastMapId:I
     252: putfield      #181                // Field org/h2/mvstore/Chunk.mapId:I
     255: aload         10
     257: ldc2_w        #177                // long 9223372036854775807l
     260: putfield      #164                // Field org/h2/mvstore/Chunk.next:J
     263: aload_0
     264: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
     267: aload         10
     269: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     272: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     275: aload         10
     277: invokevirtual #117                // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     280: pop
     281: aload_0
     282: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     285: aload         10
     287: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     290: invokestatic  #222                // Method org/h2/mvstore/Chunk.getMetaKey:(I)Ljava/lang/String;
     293: aload         10
     295: invokevirtual #233                // Method org/h2/mvstore/Chunk.asString:()Ljava/lang/String;
     298: invokevirtual #116                // Method org/h2/mvstore/MVMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     301: pop
     302: aload_0
     303: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     306: aload         10
     308: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     311: invokestatic  #222                // Method org/h2/mvstore/Chunk.getMetaKey:(I)Ljava/lang/String;
     314: invokevirtual #241                // Method org/h2/mvstore/MVMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     317: pop
     318: new           #183                // class java/util/ArrayList
     321: dup
     322: aload_0
     323: getfield      #7                  // Field maps:Ljava/util/concurrent/ConcurrentHashMap;
     326: invokevirtual #133                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
     329: invokespecial #185                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     332: astore        11
     334: invokestatic  #242                // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
     337: astore        12
     339: aload         11
     341: invokevirtual #187                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     344: astore        13
     346: aload         13
     348: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     353: ifeq          457
     356: aload         13
     358: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     363: checkcast     #50                 // class org/h2/mvstore/MVMap
     366: astore        14
     368: aload         14
     370: lload         6
     372: invokevirtual #223                // Method org/h2/mvstore/MVMap.setWriteVersion:(J)V
     375: aload         14
     377: invokevirtual #243                // Method org/h2/mvstore/MVMap.getVersion:()J
     380: lstore        15
     382: aload         14
     384: invokevirtual #244                // Method org/h2/mvstore/MVMap.getCreateVersion:()J
     387: lload         4
     389: lcmp
     390: ifle          396
     393: goto          346
     396: aload         14
     398: invokevirtual #245                // Method org/h2/mvstore/MVMap.isVolatile:()Z
     401: ifeq          407
     404: goto          346
     407: lload         15
     409: lconst_0
     410: lcmp
     411: iflt          454
     414: lload         15
     416: aload_0
     417: getfield      #158                // Field lastStoredVersion:J
     420: lcmp
     421: iflt          454
     424: aload         14
     426: lload         4
     428: invokevirtual #246                // Method org/h2/mvstore/MVMap.openVersion:(J)Lorg/h2/mvstore/MVMap;
     431: astore        17
     433: aload         17
     435: invokevirtual #247                // Method org/h2/mvstore/MVMap.getRoot:()Lorg/h2/mvstore/Page;
     438: invokevirtual #248                // Method org/h2/mvstore/Page.getPos:()J
     441: lconst_0
     442: lcmp
     443: ifne          454
     446: aload         12
     448: aload         17
     450: invokevirtual #249                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     453: pop
     454: goto          346
     457: aload_0
     458: lload         4
     460: invokespecial #250                // Method applyFreedSpace:(J)V
     463: aload_0
     464: invokespecial #251                // Method getWriteBuffer:()Lorg/h2/mvstore/WriteBuffer;
     467: astore        13
     469: aload         10
     471: aload         13
     473: iconst_0
     474: invokevirtual #252                // Method org/h2/mvstore/Chunk.writeChunkHeader:(Lorg/h2/mvstore/WriteBuffer;I)V
     477: aload         13
     479: invokevirtual #253                // Method org/h2/mvstore/WriteBuffer.position:()I
     482: istore        14
     484: aload         10
     486: iconst_0
     487: putfield      #238                // Field org/h2/mvstore/Chunk.pageCount:I
     490: aload         10
     492: iconst_0
     493: putfield      #170                // Field org/h2/mvstore/Chunk.pageCountLive:I
     496: aload         10
     498: lconst_0
     499: putfield      #239                // Field org/h2/mvstore/Chunk.maxLen:J
     502: aload         10
     504: lconst_0
     505: putfield      #240                // Field org/h2/mvstore/Chunk.maxLenLive:J
     508: aload         12
     510: invokevirtual #187                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     513: astore        15
     515: aload         15
     517: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     522: ifeq          614
     525: aload         15
     527: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     532: checkcast     #50                 // class org/h2/mvstore/MVMap
     535: astore        16
     537: aload         16
     539: invokevirtual #247                // Method org/h2/mvstore/MVMap.getRoot:()Lorg/h2/mvstore/Page;
     542: astore        17
     544: aload         16
     546: invokevirtual #254                // Method org/h2/mvstore/MVMap.getId:()I
     549: invokestatic  #255                // Method org/h2/mvstore/MVMap.getMapRootKey:(I)Ljava/lang/String;
     552: astore        18
     554: aload         17
     556: invokevirtual #256                // Method org/h2/mvstore/Page.getTotalCount:()J
     559: lconst_0
     560: lcmp
     561: ifne          580
     564: aload_0
     565: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     568: aload         18
     570: ldc_w         #257                // String 0
     573: invokevirtual #116                // Method org/h2/mvstore/MVMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     576: pop
     577: goto          611
     580: aload         17
     582: aload         10
     584: aload         13
     586: invokevirtual #258                // Method org/h2/mvstore/Page.writeUnsavedRecursive:(Lorg/h2/mvstore/Chunk;Lorg/h2/mvstore/WriteBuffer;)V
     589: aload         17
     591: invokevirtual #248                // Method org/h2/mvstore/Page.getPos:()J
     594: lstore        19
     596: aload_0
     597: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     600: aload         18
     602: lload         19
     604: invokestatic  #259                // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
     607: invokevirtual #116                // Method org/h2/mvstore/MVMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     610: pop
     611: goto          515
     614: aload_0
     615: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     618: lload         6
     620: invokevirtual #223                // Method org/h2/mvstore/MVMap.setWriteVersion:(J)V
     623: aload_0
     624: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     627: invokevirtual #247                // Method org/h2/mvstore/MVMap.getRoot:()Lorg/h2/mvstore/Page;
     630: astore        15
     632: aload         15
     634: aload         10
     636: aload         13
     638: invokevirtual #258                // Method org/h2/mvstore/Page.writeUnsavedRecursive:(Lorg/h2/mvstore/Chunk;Lorg/h2/mvstore/WriteBuffer;)V
     641: aload         13
     643: invokevirtual #253                // Method org/h2/mvstore/WriteBuffer.position:()I
     646: istore        16
     648: iload         16
     650: sipush        128
     653: iadd
     654: sipush        4096
     657: invokestatic  #260                // Method org/h2/util/MathUtils.roundUpInt:(II)I
     660: istore        17
     662: aload         13
     664: iload         17
     666: invokevirtual #261                // Method org/h2/mvstore/WriteBuffer.limit:(I)Lorg/h2/mvstore/WriteBuffer;
     669: pop
     670: aload_0
     671: invokespecial #262                // Method getFileLengthInUse:()J
     674: lstore        18
     676: aload_0
     677: getfield      #2                  // Field reuseSpace:Z
     680: ifeq          697
     683: aload_0
     684: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     687: iload         17
     689: invokevirtual #263                // Method org/h2/mvstore/FileStore.allocate:(I)J
     692: lstore        20
     694: goto          701
     697: lload         18
     699: lstore        20
     701: lload         20
     703: iload         17
     705: i2l
     706: ladd
     707: aload_0
     708: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     711: invokevirtual #67                 // Method org/h2/mvstore/FileStore.size:()J
     714: lcmp
     715: iflt          722
     718: iconst_1
     719: goto          723
     722: iconst_0
     723: istore        22
     725: aload_0
     726: getfield      #2                  // Field reuseSpace:Z
     729: ifne          743
     732: aload_0
     733: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     736: lload         18
     738: iload         17
     740: invokevirtual #173                // Method org/h2/mvstore/FileStore.markUsed:(JI)V
     743: aload         10
     745: lload         20
     747: ldc2_w        #165                // long 4096l
     750: ldiv
     751: putfield      #130                // Field org/h2/mvstore/Chunk.block:J
     754: aload         10
     756: iload         17
     758: sipush        4096
     761: idiv
     762: putfield      #172                // Field org/h2/mvstore/Chunk.len:I
     765: aload         10
     767: aload         15
     769: invokevirtual #248                // Method org/h2/mvstore/Page.getPos:()J
     772: putfield      #132                // Field org/h2/mvstore/Chunk.metaRootPos:J
     775: aload_0
     776: getfield      #2                  // Field reuseSpace:Z
     779: ifeq          833
     782: aload         10
     784: getfield      #172                // Field org/h2/mvstore/Chunk.len:I
     787: istore        23
     789: aload_0
     790: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     793: iload         23
     795: sipush        4096
     798: imul
     799: invokevirtual #263                // Method org/h2/mvstore/FileStore.allocate:(I)J
     802: lstore        24
     804: aload_0
     805: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     808: lload         24
     810: iload         23
     812: sipush        4096
     815: imul
     816: invokevirtual #264                // Method org/h2/mvstore/FileStore.free:(JI)V
     819: aload         10
     821: lload         24
     823: ldc2_w        #165                // long 4096l
     826: ldiv
     827: putfield      #164                // Field org/h2/mvstore/Chunk.next:J
     830: goto          839
     833: aload         10
     835: lconst_0
     836: putfield      #164                // Field org/h2/mvstore/Chunk.next:J
     839: aload         13
     841: iconst_0
     842: invokevirtual #265                // Method org/h2/mvstore/WriteBuffer.position:(I)Lorg/h2/mvstore/WriteBuffer;
     845: pop
     846: aload         10
     848: aload         13
     850: iload         14
     852: invokevirtual #252                // Method org/h2/mvstore/Chunk.writeChunkHeader:(Lorg/h2/mvstore/WriteBuffer;I)V
     855: aload_0
     856: lload         4
     858: invokespecial #266                // Method revertTemp:(J)V
     861: aload         13
     863: aload         13
     865: invokevirtual #267                // Method org/h2/mvstore/WriteBuffer.limit:()I
     868: sipush        128
     871: isub
     872: invokevirtual #265                // Method org/h2/mvstore/WriteBuffer.position:(I)Lorg/h2/mvstore/WriteBuffer;
     875: pop
     876: aload         13
     878: aload         10
     880: invokevirtual #268                // Method org/h2/mvstore/Chunk.getFooterBytes:()[B
     883: invokevirtual #269                // Method org/h2/mvstore/WriteBuffer.put:([B)Lorg/h2/mvstore/WriteBuffer;
     886: pop
     887: aload         13
     889: iconst_0
     890: invokevirtual #265                // Method org/h2/mvstore/WriteBuffer.position:(I)Lorg/h2/mvstore/WriteBuffer;
     893: pop
     894: aload_0
     895: lload         20
     897: aload         13
     899: invokevirtual #270                // Method org/h2/mvstore/WriteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     902: invokespecial #205                // Method write:(JLjava/nio/ByteBuffer;)V
     905: aload_0
     906: aload         13
     908: invokespecial #271                // Method releaseWriteBuffer:(Lorg/h2/mvstore/WriteBuffer;)V
     911: iconst_0
     912: istore        23
     914: iload         22
     916: ifne          1050
     919: aload_0
     920: getfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
     923: ifnonnull     932
     926: iconst_1
     927: istore        23
     929: goto          1050
     932: aload_0
     933: getfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
     936: getfield      #164                // Field org/h2/mvstore/Chunk.next:J
     939: aload         10
     941: getfield      #130                // Field org/h2/mvstore/Chunk.block:J
     944: lcmp
     945: ifeq          954
     948: iconst_1
     949: istore        23
     951: goto          1050
     954: aload_0
     955: getfield      #10                 // Field storeHeader:Ljava/util/HashMap;
     958: ldc           #146                // String version
     960: lconst_0
     961: invokestatic  #147                // Method org/h2/mvstore/DataUtils.readHexLong:(Ljava/util/Map;Ljava/lang/String;J)J
     964: lstore        24
     966: aload_0
     967: getfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
     970: getfield      #136                // Field org/h2/mvstore/Chunk.version:J
     973: lload         24
     975: lsub
     976: ldc2_w        #272                // long 20l
     979: lcmp
     980: ifle          989
     983: iconst_1
     984: istore        23
     986: goto          1050
     989: aload_0
     990: getfield      #10                 // Field storeHeader:Ljava/util/HashMap;
     993: ldc           #149                // String chunk
     995: iconst_0
     996: invokestatic  #143                // Method org/h2/mvstore/DataUtils.readHexInt:(Ljava/util/HashMap;Ljava/lang/String;I)I
     999: istore        26
    1001: aload_0
    1002: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
    1005: iload         26
    1007: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1010: invokevirtual #106                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
    1013: checkcast     #135                // class org/h2/mvstore/Chunk
    1016: astore        27
    1018: aload         27
    1020: ifnonnull     1029
    1023: iconst_1
    1024: istore        23
    1026: goto          1050
    1029: iload         26
    1031: aload_0
    1032: getfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
    1035: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
    1038: if_icmpne     1044
    1041: goto          1050
    1044: iinc          26, 1
    1047: goto          1001
    1050: aload_0
    1051: aload         10
    1053: putfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
    1056: iload         23
    1058: ifeq          1065
    1061: aload_0
    1062: invokespecial #78                 // Method writeStoreHeader:()V
    1065: iload         22
    1067: ifne          1075
    1070: aload_0
    1071: iconst_1
    1072: invokespecial #213                // Method shrinkFileIfPossible:(I)V
    1075: aload         12
    1077: invokevirtual #187                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
    1080: astore        24
    1082: aload         24
    1084: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
    1089: ifeq          1129
    1092: aload         24
    1094: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
    1099: checkcast     #50                 // class org/h2/mvstore/MVMap
    1102: astore        25
    1104: aload         25
    1106: invokevirtual #247                // Method org/h2/mvstore/MVMap.getRoot:()Lorg/h2/mvstore/Page;
    1109: astore        26
    1111: aload         26
    1113: invokevirtual #256                // Method org/h2/mvstore/Page.getTotalCount:()J
    1116: lconst_0
    1117: lcmp
    1118: ifle          1126
    1121: aload         26
    1123: invokevirtual #274                // Method org/h2/mvstore/Page.writeEnd:()V
    1126: goto          1082
    1129: aload         15
    1131: invokevirtual #274                // Method org/h2/mvstore/Page.writeEnd:()V
    1134: aload_0
    1135: iconst_0
    1136: aload_0
    1137: getfield      #231                // Field unsavedMemory:I
    1140: iload_3
    1141: isub
    1142: invokestatic  #275                // Method java/lang/Math.max:(II)I
    1145: putfield      #231                // Field unsavedMemory:I
    1148: aload_0
    1149: iconst_0
    1150: putfield      #139                // Field metaChanged:Z
    1153: aload_0
    1154: lload         4
    1156: putfield      #158                // Field lastStoredVersion:J
    1159: lload         6
    1161: lreturn

  private void freeUnusedIfNeeded(long);
    Code:
       0: aload_0
       1: getfield      #57                 // Field retentionTime:I
       4: iconst_5
       5: idiv
       6: istore_3
       7: lload_1
       8: aload_0
       9: getfield      #276                // Field lastFreeUnusedChunks:J
      12: iload_3
      13: i2l
      14: ladd
      15: lcmp
      16: iflt          36
      19: aload_0
      20: lload_1
      21: putfield      #276                // Field lastFreeUnusedChunks:J
      24: aload_0
      25: invokespecial #277                // Method freeUnusedChunks:()V
      28: aload_0
      29: aload_0
      30: invokespecial #83                 // Method getTimeSinceCreation:()J
      33: putfield      #276                // Field lastFreeUnusedChunks:J
      36: return

  private synchronized void freeUnusedChunks();
    Code:
       0: aload_0
       1: getfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
       4: ifnull        14
       7: aload_0
       8: getfield      #2                  // Field reuseSpace:Z
      11: ifne          15
      14: return
      15: aload_0
      16: invokespecial #278                // Method collectReferencedChunks:()Ljava/util/Set;
      19: astore_1
      20: aload_0
      21: invokespecial #83                 // Method getTimeSinceCreation:()J
      24: lstore_2
      25: aload_0
      26: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
      29: invokevirtual #133                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      32: invokeinterface #279,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      37: astore        4
      39: aload         4
      41: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          195
      49: aload         4
      51: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #135                // class org/h2/mvstore/Chunk
      59: astore        5
      61: aload_1
      62: aload         5
      64: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
      67: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      70: invokeinterface #280,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      75: ifne          192
      78: aload_0
      79: aload         5
      81: lload_2
      82: invokespecial #281                // Method canOverwriteChunk:(Lorg/h2/mvstore/Chunk;J)Z
      85: ifeq          151
      88: aload         4
      90: invokeinterface #282,  1          // InterfaceMethod java/util/Iterator.remove:()V
      95: aload_0
      96: invokespecial #113                // Method markMetaChanged:()V
      99: aload_0
     100: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     103: aload         5
     105: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     108: invokestatic  #222                // Method org/h2/mvstore/Chunk.getMetaKey:(I)Ljava/lang/String;
     111: invokevirtual #241                // Method org/h2/mvstore/MVMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     114: pop
     115: aload         5
     117: getfield      #130                // Field org/h2/mvstore/Chunk.block:J
     120: ldc2_w        #165                // long 4096l
     123: lmul
     124: lstore        6
     126: aload         5
     128: getfield      #172                // Field org/h2/mvstore/Chunk.len:I
     131: sipush        4096
     134: imul
     135: istore        8
     137: aload_0
     138: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     141: lload         6
     143: iload         8
     145: invokevirtual #264                // Method org/h2/mvstore/FileStore.free:(JI)V
     148: goto          192
     151: aload         5
     153: getfield      #283                // Field org/h2/mvstore/Chunk.unused:J
     156: lconst_0
     157: lcmp
     158: ifne          192
     161: aload         5
     163: lload_2
     164: putfield      #283                // Field org/h2/mvstore/Chunk.unused:J
     167: aload_0
     168: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     171: aload         5
     173: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     176: invokestatic  #222                // Method org/h2/mvstore/Chunk.getMetaKey:(I)Ljava/lang/String;
     179: aload         5
     181: invokevirtual #233                // Method org/h2/mvstore/Chunk.asString:()Ljava/lang/String;
     184: invokevirtual #116                // Method org/h2/mvstore/MVMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     187: pop
     188: aload_0
     189: invokespecial #113                // Method markMetaChanged:()V
     192: goto          39
     195: return

  private java.util.Set<java.lang.Integer> collectReferencedChunks();
    Code:
       0: aload_0
       1: getfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
       4: getfield      #136                // Field org/h2/mvstore/Chunk.version:J
       7: lstore_1
       8: lload_1
       9: lconst_0
      10: lcmp
      11: ifle          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc_w         #284                // String Collect references on version 0
      22: iconst_0
      23: anewarray     #15                 // class java/lang/Object
      26: invokestatic  #129                // Method org/h2/mvstore/DataUtils.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      29: aload_0
      30: invokevirtual #285                // Method getFileStore:()Lorg/h2/mvstore/FileStore;
      33: getfield      #286                // Field org/h2/mvstore/FileStore.readCount:Ljava/util/concurrent/atomic/AtomicLong;
      36: invokevirtual #287                // Method java/util/concurrent/atomic/AtomicLong.get:()J
      39: lstore_3
      40: new           #118                // class java/util/HashSet
      43: dup
      44: invokespecial #119                // Method java/util/HashSet."<init>":()V
      47: astore        5
      49: aload_0
      50: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
      53: ldc_w         #288                // String root.
      56: invokevirtual #289                // Method org/h2/mvstore/MVMap.cursor:(Ljava/lang/Object;)Lorg/h2/mvstore/Cursor;
      59: astore        6
      61: aload         6
      63: invokevirtual #290                // Method org/h2/mvstore/Cursor.hasNext:()Z
      66: ifeq          146
      69: aload         6
      71: invokevirtual #291                // Method org/h2/mvstore/Cursor.next:()Ljava/lang/Object;
      74: checkcast     #22                 // class java/lang/String
      77: astore        7
      79: aload         7
      81: ldc_w         #288                // String root.
      84: invokevirtual #123                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      87: ifne          93
      90: goto          146
      93: aload         6
      95: invokevirtual #292                // Method org/h2/mvstore/Cursor.getValue:()Ljava/lang/Object;
      98: checkcast     #22                 // class java/lang/String
     101: invokestatic  #111                // Method org/h2/mvstore/DataUtils.parseHexLong:(Ljava/lang/String;)J
     104: lstore        8
     106: lload         8
     108: lconst_0
     109: lcmp
     110: ifne          116
     113: goto          61
     116: aload         7
     118: ldc_w         #288                // String root.
     121: invokevirtual #124                // Method java/lang/String.length:()I
     124: invokevirtual #125                // Method java/lang/String.substring:(I)Ljava/lang/String;
     127: invokestatic  #105                // Method org/h2/mvstore/DataUtils.parseHexInt:(Ljava/lang/String;)I
     130: istore        10
     132: aload_0
     133: aload         5
     135: iload         10
     137: lload         8
     139: iconst_0
     140: invokespecial #293                // Method collectReferencedChunks:(Ljava/util/Set;IJI)V
     143: goto          61
     146: aload_0
     147: getfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
     150: getfield      #132                // Field org/h2/mvstore/Chunk.metaRootPos:J
     153: lstore        6
     155: aload_0
     156: aload         5
     158: iconst_0
     159: lload         6
     161: iconst_0
     162: invokespecial #293                // Method collectReferencedChunks:(Ljava/util/Set;IJI)V
     165: aload_0
     166: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     169: getfield      #286                // Field org/h2/mvstore/FileStore.readCount:Ljava/util/concurrent/atomic/AtomicLong;
     172: invokevirtual #287                // Method java/util/concurrent/atomic/AtomicLong.get:()J
     175: lload_3
     176: lsub
     177: lstore_3
     178: aload         5
     180: areturn

  private void collectReferencedChunks(java.util.Set<java.lang.Integer>, int, long, int);
    Code:
       0: lload_3
       1: invokestatic  #218                // Method org/h2/mvstore/DataUtils.getPageChunkId:(J)I
       4: istore        6
       6: aload_1
       7: iload         6
       9: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: invokeinterface #294,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      17: pop
      18: lload_3
      19: invokestatic  #295                // Method org/h2/mvstore/DataUtils.getPageType:(J)I
      22: ifne          26
      25: return
      26: aload_0
      27: iload_2
      28: lload_3
      29: iconst_m1
      30: invokespecial #296                // Method readPageChunkReferences:(IJI)Lorg/h2/mvstore/Page$PageChildren;
      33: astore        7
      35: aload         7
      37: getfield      #297                // Field org/h2/mvstore/Page$PageChildren.chunkList:Z
      40: ifne          215
      43: new           #118                // class java/util/HashSet
      46: dup
      47: invokespecial #119                // Method java/util/HashSet."<init>":()V
      50: astore        8
      52: iconst_0
      53: istore        9
      55: iload         9
      57: aload         7
      59: getfield      #298                // Field org/h2/mvstore/Page$PageChildren.children:[J
      62: arraylength
      63: if_icmpge     95
      66: aload         7
      68: getfield      #298                // Field org/h2/mvstore/Page$PageChildren.children:[J
      71: iload         9
      73: laload
      74: lstore        10
      76: aload_0
      77: aload         8
      79: iload_2
      80: lload         10
      82: iload         5
      84: iconst_1
      85: iadd
      86: invokespecial #293                // Method collectReferencedChunks:(Ljava/util/Set;IJI)V
      89: iinc          9, 1
      92: goto          55
      95: aload         8
      97: iload         6
      99: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     102: invokeinterface #299,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     107: pop
     108: aload         8
     110: invokeinterface #300,  1          // InterfaceMethod java/util/Set.size:()I
     115: newarray       long
     117: astore        9
     119: iconst_0
     120: istore        10
     122: aload         8
     124: invokeinterface #301,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     129: astore        11
     131: aload         11
     133: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     138: ifeq          175
     141: aload         11
     143: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     148: checkcast     #35                 // class java/lang/Integer
     151: astore        12
     153: aload         9
     155: iload         10
     157: iinc          10, 1
     160: aload         12
     162: invokevirtual #36                 // Method java/lang/Integer.intValue:()I
     165: iconst_0
     166: iconst_0
     167: iconst_0
     168: invokestatic  #302                // Method org/h2/mvstore/DataUtils.getPagePos:(IIII)J
     171: lastore
     172: goto          131
     175: aload         7
     177: aload         9
     179: putfield      #298                // Field org/h2/mvstore/Page$PageChildren.children:[J
     182: aload         7
     184: iconst_1
     185: putfield      #297                // Field org/h2/mvstore/Page$PageChildren.chunkList:Z
     188: aload_0
     189: getfield      #43                 // Field cacheChunkRef:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
     192: ifnull        215
     195: aload_0
     196: getfield      #43                 // Field cacheChunkRef:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
     199: aload         7
     201: getfield      #303                // Field org/h2/mvstore/Page$PageChildren.pos:J
     204: aload         7
     206: aload         7
     208: invokevirtual #304                // Method org/h2/mvstore/Page$PageChildren.getMemory:()I
     211: invokevirtual #305                // Method org/h2/mvstore/cache/CacheLongKeyLIRS.put:(JLjava/lang/Object;I)Ljava/lang/Object;
     214: pop
     215: aload         7
     217: getfield      #298                // Field org/h2/mvstore/Page$PageChildren.children:[J
     220: astore        8
     222: aload         8
     224: arraylength
     225: istore        9
     227: iconst_0
     228: istore        10
     230: iload         10
     232: iload         9
     234: if_icmpge     265
     237: aload         8
     239: iload         10
     241: laload
     242: lstore        11
     244: aload_1
     245: lload         11
     247: invokestatic  #218                // Method org/h2/mvstore/DataUtils.getPageChunkId:(J)I
     250: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     253: invokeinterface #294,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     258: pop
     259: iinc          10, 1
     262: goto          230
     265: return

  private org.h2.mvstore.Page$PageChildren readPageChunkReferences(int, long, int);
    Code:
       0: lload_2
       1: invokestatic  #295                // Method org/h2/mvstore/DataUtils.getPageType:(J)I
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #43                 // Field cacheChunkRef:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
      13: ifnull        32
      16: aload_0
      17: getfield      #43                 // Field cacheChunkRef:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
      20: lload_2
      21: invokevirtual #306                // Method org/h2/mvstore/cache/CacheLongKeyLIRS.get:(J)Ljava/lang/Object;
      24: checkcast     #307                // class org/h2/mvstore/Page$PageChildren
      27: astore        5
      29: goto          35
      32: aconst_null
      33: astore        5
      35: aload         5
      37: ifnonnull     213
      40: aload_0
      41: getfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
      44: ifnull        76
      47: aload_0
      48: getfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
      51: lload_2
      52: invokevirtual #306                // Method org/h2/mvstore/cache/CacheLongKeyLIRS.get:(J)Ljava/lang/Object;
      55: checkcast     #308                // class org/h2/mvstore/Page
      58: astore        6
      60: aload         6
      62: ifnull        76
      65: new           #307                // class org/h2/mvstore/Page$PageChildren
      68: dup
      69: aload         6
      71: invokespecial #309                // Method org/h2/mvstore/Page$PageChildren."<init>":(Lorg/h2/mvstore/Page;)V
      74: astore        5
      76: aload         5
      78: ifnonnull     185
      81: aload_0
      82: lload_2
      83: invokespecial #310                // Method getChunk:(J)Lorg/h2/mvstore/Chunk;
      86: astore        6
      88: aload         6
      90: getfield      #130                // Field org/h2/mvstore/Chunk.block:J
      93: ldc2_w        #165                // long 4096l
      96: lmul
      97: lstore        7
      99: lload         7
     101: lload_2
     102: invokestatic  #311                // Method org/h2/mvstore/DataUtils.getPageOffset:(J)I
     105: i2l
     106: ladd
     107: lstore        7
     109: lload         7
     111: lconst_0
     112: lcmp
     113: ifge          152
     116: bipush        6
     118: ldc_w         #312                // String Negative position {0}; p={1}, c={2}
     121: iconst_3
     122: anewarray     #15                 // class java/lang/Object
     125: dup
     126: iconst_0
     127: lload         7
     129: invokestatic  #77                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     132: aastore
     133: dup
     134: iconst_1
     135: lload_2
     136: invokestatic  #77                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     139: aastore
     140: dup
     141: iconst_2
     142: aload         6
     144: invokevirtual #313                // Method org/h2/mvstore/Chunk.toString:()Ljava/lang/String;
     147: aastore
     148: invokestatic  #145                // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
     151: athrow
     152: aload         6
     154: getfield      #130                // Field org/h2/mvstore/Chunk.block:J
     157: aload         6
     159: getfield      #172                // Field org/h2/mvstore/Chunk.len:I
     162: i2l
     163: ladd
     164: ldc2_w        #165                // long 4096l
     167: lmul
     168: lstore        9
     170: aload_0
     171: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     174: lload_2
     175: iload_1
     176: lload         7
     178: lload         9
     180: invokestatic  #314                // Method org/h2/mvstore/Page$PageChildren.read:(Lorg/h2/mvstore/FileStore;JIJJ)Lorg/h2/mvstore/Page$PageChildren;
     183: astore        5
     185: aload         5
     187: invokevirtual #315                // Method org/h2/mvstore/Page$PageChildren.removeDuplicateChunkReferences:()V
     190: aload_0
     191: getfield      #43                 // Field cacheChunkRef:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
     194: ifnull        213
     197: aload_0
     198: getfield      #43                 // Field cacheChunkRef:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
     201: lload_2
     202: aload         5
     204: aload         5
     206: invokevirtual #304                // Method org/h2/mvstore/Page$PageChildren.getMemory:()I
     209: invokevirtual #305                // Method org/h2/mvstore/cache/CacheLongKeyLIRS.put:(JLjava/lang/Object;I)Ljava/lang/Object;
     212: pop
     213: aload         5
     215: getfield      #298                // Field org/h2/mvstore/Page$PageChildren.children:[J
     218: arraylength
     219: ifne          237
     222: lload_2
     223: invokestatic  #218                // Method org/h2/mvstore/DataUtils.getPageChunkId:(J)I
     226: istore        6
     228: iload         6
     230: iload         4
     232: if_icmpne     237
     235: aconst_null
     236: areturn
     237: aload         5
     239: areturn

  private org.h2.mvstore.WriteBuffer getWriteBuffer();
    Code:
       0: aload_0
       1: getfield      #316                // Field writeBuffer:Lorg/h2/mvstore/WriteBuffer;
       4: ifnull        20
       7: aload_0
       8: getfield      #316                // Field writeBuffer:Lorg/h2/mvstore/WriteBuffer;
      11: astore_1
      12: aload_1
      13: invokevirtual #317                // Method org/h2/mvstore/WriteBuffer.clear:()Lorg/h2/mvstore/WriteBuffer;
      16: pop
      17: goto          28
      20: new           #318                // class org/h2/mvstore/WriteBuffer
      23: dup
      24: invokespecial #319                // Method org/h2/mvstore/WriteBuffer."<init>":()V
      27: astore_1
      28: aload_1
      29: areturn

  private void releaseWriteBuffer(org.h2.mvstore.WriteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #320                // Method org/h2/mvstore/WriteBuffer.capacity:()I
       4: ldc_w         #321                // int 4194304
       7: if_icmpgt     15
      10: aload_0
      11: aload_1
      12: putfield      #316                // Field writeBuffer:Lorg/h2/mvstore/WriteBuffer;
      15: return

  private boolean canOverwriteChunk(org.h2.mvstore.Chunk, long);
    Code:
       0: aload_0
       1: getfield      #57                 // Field retentionTime:I
       4: iflt          52
       7: aload_1
       8: getfield      #188                // Field org/h2/mvstore/Chunk.time:J
      11: aload_0
      12: getfield      #57                 // Field retentionTime:I
      15: i2l
      16: ladd
      17: lload_2
      18: lcmp
      19: ifle          24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: getfield      #283                // Field org/h2/mvstore/Chunk.unused:J
      28: lconst_0
      29: lcmp
      30: ifeq          50
      33: aload_1
      34: getfield      #283                // Field org/h2/mvstore/Chunk.unused:J
      37: aload_0
      38: getfield      #57                 // Field retentionTime:I
      41: iconst_2
      42: idiv
      43: i2l
      44: ladd
      45: lload_2
      46: lcmp
      47: ifle          52
      50: iconst_0
      51: ireturn
      52: aload_0
      53: getfield      #232                // Field retainChunk:Lorg/h2/mvstore/Chunk;
      56: astore        4
      58: aload         4
      60: ifnull        78
      63: aload_1
      64: getfield      #136                // Field org/h2/mvstore/Chunk.version:J
      67: aload         4
      69: getfield      #136                // Field org/h2/mvstore/Chunk.version:J
      72: lcmp
      73: ifle          78
      76: iconst_0
      77: ireturn
      78: iconst_1
      79: ireturn

  private long getTimeSinceCreation();
    Code:
       0: lconst_0
       1: aload_0
       2: invokespecial #68                 // Method getTimeAbsolute:()J
       5: aload_0
       6: getfield      #69                 // Field creationTime:J
       9: lsub
      10: invokestatic  #234                // Method java/lang/Math.max:(JJ)J
      13: lreturn

  private long getTimeAbsolute();
    Code:
       0: invokestatic  #160                // Method java/lang/System.currentTimeMillis:()J
       3: lstore_1
       4: aload_0
       5: getfield      #322                // Field lastTimeAbsolute:J
       8: lconst_0
       9: lcmp
      10: ifeq          30
      13: lload_1
      14: aload_0
      15: getfield      #322                // Field lastTimeAbsolute:J
      18: lcmp
      19: ifge          30
      22: aload_0
      23: getfield      #322                // Field lastTimeAbsolute:J
      26: lstore_1
      27: goto          35
      30: aload_0
      31: lload_1
      32: putfield      #322                // Field lastTimeAbsolute:J
      35: lload_1
      36: lreturn

  private void applyFreedSpace(long);
    Code:
       0: invokestatic  #242                // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
       3: astore_3
       4: aload_0
       5: getfield      #6                  // Field freedPageSpace:Ljava/util/concurrent/ConcurrentHashMap;
       8: invokevirtual #323                // Method java/util/concurrent/ConcurrentHashMap.entrySet:()Ljava/util/Set;
      11: invokeinterface #324,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore        4
      18: aload         4
      20: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          242
      28: aload         4
      30: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #325                // class java/util/Map$Entry
      38: astore        5
      40: aload         5
      42: invokeinterface #326,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      47: checkcast     #327                // class java/lang/Long
      50: invokevirtual #328                // Method java/lang/Long.longValue:()J
      53: lstore        6
      55: lload         6
      57: lload_1
      58: lcmp
      59: ifle          65
      62: goto          18
      65: aload         5
      67: invokeinterface #329,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      72: checkcast     #3                  // class java/util/concurrent/ConcurrentHashMap
      75: astore        8
      77: aload         8
      79: invokevirtual #133                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      82: invokeinterface #134,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      87: astore        9
      89: aload         9
      91: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      96: ifeq          232
      99: aload         9
     101: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     106: checkcast     #135                // class org/h2/mvstore/Chunk
     109: astore        10
     111: aload_0
     112: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
     115: aload         10
     117: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     120: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     123: invokevirtual #106                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     126: checkcast     #135                // class org/h2/mvstore/Chunk
     129: astore        11
     131: aload         11
     133: ifnonnull     139
     136: goto          89
     139: aload         11
     141: dup
     142: getfield      #240                // Field org/h2/mvstore/Chunk.maxLenLive:J
     145: aload         10
     147: getfield      #240                // Field org/h2/mvstore/Chunk.maxLenLive:J
     150: ladd
     151: putfield      #240                // Field org/h2/mvstore/Chunk.maxLenLive:J
     154: aload         11
     156: dup
     157: getfield      #170                // Field org/h2/mvstore/Chunk.pageCountLive:I
     160: aload         10
     162: getfield      #170                // Field org/h2/mvstore/Chunk.pageCountLive:I
     165: iadd
     166: putfield      #170                // Field org/h2/mvstore/Chunk.pageCountLive:I
     169: aload         11
     171: getfield      #170                // Field org/h2/mvstore/Chunk.pageCountLive:I
     174: ifge          194
     177: aload         11
     179: getfield      #170                // Field org/h2/mvstore/Chunk.pageCountLive:I
     182: ldc_w         #330                // int -10000000
     185: if_icmple     194
     188: aload         11
     190: iconst_0
     191: putfield      #170                // Field org/h2/mvstore/Chunk.pageCountLive:I
     194: aload         11
     196: getfield      #240                // Field org/h2/mvstore/Chunk.maxLenLive:J
     199: lconst_0
     200: lcmp
     201: ifge          222
     204: aload         11
     206: getfield      #240                // Field org/h2/mvstore/Chunk.maxLenLive:J
     209: ldc2_w        #331                // long -10000000l
     212: lcmp
     213: ifle          222
     216: aload         11
     218: lconst_0
     219: putfield      #240                // Field org/h2/mvstore/Chunk.maxLenLive:J
     222: aload_3
     223: aload         11
     225: invokevirtual #249                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     228: pop
     229: goto          89
     232: aload         4
     234: invokeinterface #282,  1          // InterfaceMethod java/util/Iterator.remove:()V
     239: goto          18
     242: aload_3
     243: invokevirtual #187                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     246: astore        5
     248: aload         5
     250: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     255: ifeq          294
     258: aload         5
     260: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     265: checkcast     #135                // class org/h2/mvstore/Chunk
     268: astore        6
     270: aload_0
     271: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     274: aload         6
     276: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     279: invokestatic  #222                // Method org/h2/mvstore/Chunk.getMetaKey:(I)Ljava/lang/String;
     282: aload         6
     284: invokevirtual #233                // Method org/h2/mvstore/Chunk.asString:()Ljava/lang/String;
     287: invokevirtual #116                // Method org/h2/mvstore/MVMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     290: pop
     291: goto          248
     294: aload_3
     295: invokevirtual #333                // Method java/util/ArrayList.isEmpty:()Z
     298: ifeq          304
     301: goto          307
     304: goto          0
     307: return

  private void shrinkFileIfPossible(int);
    Code:
       0: aload_0
       1: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
       4: invokevirtual #154                // Method org/h2/mvstore/FileStore.isReadOnly:()Z
       7: ifeq          11
      10: return
      11: aload_0
      12: invokespecial #262                // Method getFileLengthInUse:()J
      15: lstore_2
      16: aload_0
      17: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
      20: invokevirtual #67                 // Method org/h2/mvstore/FileStore.size:()J
      23: lstore        4
      25: lload_2
      26: lload         4
      28: lcmp
      29: iflt          33
      32: return
      33: iload_1
      34: ifle          49
      37: lload         4
      39: lload_2
      40: lsub
      41: ldc2_w        #165                // long 4096l
      44: lcmp
      45: ifge          49
      48: return
      49: ldc2_w        #334                // long 100l
      52: lload_2
      53: ldc2_w        #334                // long 100l
      56: lmul
      57: lload         4
      59: ldiv
      60: lsub
      61: l2i
      62: istore        6
      64: iload         6
      66: iload_1
      67: if_icmpge     71
      70: return
      71: aload_0
      72: getfield      #207                // Field closed:Z
      75: ifne          82
      78: aload_0
      79: invokevirtual #336                // Method sync:()V
      82: aload_0
      83: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
      86: lload_2
      87: invokevirtual #337                // Method org/h2/mvstore/FileStore.truncate:(J)V
      90: return

  private long getFileLengthInUse();
    Code:
       0: aload_0
       1: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
       4: invokevirtual #338                // Method org/h2/mvstore/FileStore.getFileLengthInUse:()J
       7: lstore_1
       8: getstatic     #339                // Field $assertionsDisabled:Z
      11: ifne          58
      14: lload_1
      15: aload_0
      16: invokespecial #340                // Method measureFileLengthInUse:()J
      19: lcmp
      20: ifeq          58
      23: new           #341                // class java/lang/AssertionError
      26: dup
      27: new           #99                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
      34: lload_1
      35: invokevirtual #342                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      38: ldc_w         #343                // String  !=
      41: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: invokespecial #340                // Method measureFileLengthInUse:()J
      48: invokevirtual #342                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      51: invokevirtual #103                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #344                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      57: athrow
      58: lload_1
      59: lreturn

  private long measureFileLengthInUse();
    Code:
       0: ldc2_w        #345                // long 2l
       3: lstore_1
       4: aload_0
       5: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
       8: invokevirtual #133                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      11: invokeinterface #134,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          67
      26: aload_3
      27: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #135                // class org/h2/mvstore/Chunk
      35: astore        4
      37: aload         4
      39: getfield      #172                // Field org/h2/mvstore/Chunk.len:I
      42: ldc           #237                // int 2147483647
      44: if_icmpeq     64
      47: lload_1
      48: aload         4
      50: getfield      #130                // Field org/h2/mvstore/Chunk.block:J
      53: aload         4
      55: getfield      #172                // Field org/h2/mvstore/Chunk.len:I
      58: i2l
      59: ladd
      60: invokestatic  #234                // Method java/lang/Math.max:(JJ)J
      63: lstore_1
      64: goto          17
      67: lload_1
      68: ldc2_w        #165                // long 4096l
      71: lmul
      72: lreturn

  public boolean hasUnsavedChanges();
    Code:
       0: aload_0
       1: invokespecial #98                 // Method checkOpen:()V
       4: aload_0
       5: getfield      #139                // Field metaChanged:Z
       8: ifeq          13
      11: iconst_1
      12: ireturn
      13: aload_0
      14: getfield      #7                  // Field maps:Ljava/util/concurrent/ConcurrentHashMap;
      17: invokevirtual #133                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      20: invokeinterface #134,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      25: astore_1
      26: aload_1
      27: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          77
      35: aload_1
      36: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #50                 // class org/h2/mvstore/MVMap
      44: astore_2
      45: aload_2
      46: invokevirtual #347                // Method org/h2/mvstore/MVMap.isClosed:()Z
      49: ifne          74
      52: aload_2
      53: invokevirtual #243                // Method org/h2/mvstore/MVMap.getVersion:()J
      56: lstore_3
      57: lload_3
      58: lconst_0
      59: lcmp
      60: iflt          74
      63: lload_3
      64: aload_0
      65: getfield      #158                // Field lastStoredVersion:J
      68: lcmp
      69: ifle          74
      72: iconst_1
      73: ireturn
      74: goto          26
      77: iconst_0
      78: ireturn

  private org.h2.mvstore.Chunk readChunkHeader(long);
    Code:
       0: lload_1
       1: ldc2_w        #165                // long 4096l
       4: lmul
       5: lstore_3
       6: aload_0
       7: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
      10: lload_3
      11: sipush        1024
      14: invokevirtual #140                // Method org/h2/mvstore/FileStore.readFully:(JI)Ljava/nio/ByteBuffer;
      17: astore        5
      19: aload         5
      21: lload_3
      22: invokestatic  #348                // Method org/h2/mvstore/Chunk.readChunkHeader:(Ljava/nio/ByteBuffer;J)Lorg/h2/mvstore/Chunk;
      25: areturn

  public synchronized boolean compactRewriteFully();
    Code:
       0: aload_0
       1: invokespecial #98                 // Method checkOpen:()V
       4: aload_0
       5: getfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: getfield      #7                  // Field maps:Ljava/util/concurrent/ConcurrentHashMap;
      17: invokevirtual #133                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      20: invokeinterface #134,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      25: astore_1
      26: aload_1
      27: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          123
      35: aload_1
      36: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #50                 // class org/h2/mvstore/MVMap
      44: astore_2
      45: aload_2
      46: astore_3
      47: aload_3
      48: aconst_null
      49: invokevirtual #289                // Method org/h2/mvstore/MVMap.cursor:(Ljava/lang/Object;)Lorg/h2/mvstore/Cursor;
      52: astore        4
      54: aconst_null
      55: astore        5
      57: aload         4
      59: invokevirtual #290                // Method org/h2/mvstore/Cursor.hasNext:()Z
      62: ifeq          120
      65: aload         4
      67: invokevirtual #291                // Method org/h2/mvstore/Cursor.next:()Ljava/lang/Object;
      70: pop
      71: aload         4
      73: invokevirtual #349                // Method org/h2/mvstore/Cursor.getPage:()Lorg/h2/mvstore/Page;
      76: astore        6
      78: aload         6
      80: aload         5
      82: if_acmpne     88
      85: goto          57
      88: aload         6
      90: iconst_0
      91: invokevirtual #350                // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
      94: astore        7
      96: aload         6
      98: iconst_0
      99: invokevirtual #351                // Method org/h2/mvstore/Page.getValue:(I)Ljava/lang/Object;
     102: astore        8
     104: aload_3
     105: aload         7
     107: aload         8
     109: invokevirtual #116                // Method org/h2/mvstore/MVMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     112: pop
     113: aload         6
     115: astore        5
     117: goto          57
     120: goto          26
     123: aload_0
     124: invokespecial #210                // Method commitAndSave:()J
     127: pop2
     128: iconst_1
     129: ireturn

  public synchronized boolean compactMoveChunks();
    Code:
       0: aload_0
       1: bipush        100
       3: ldc2_w        #177                // long 9223372036854775807l
       6: invokevirtual #352                // Method compactMoveChunks:(IJ)Z
       9: ireturn

  public synchronized boolean compactMoveChunks(int, long);
    Code:
       0: aload_0
       1: invokespecial #98                 // Method checkOpen:()V
       4: aload_0
       5: getfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
       8: ifnull        18
      11: aload_0
      12: getfield      #2                  // Field reuseSpace:Z
      15: ifne          20
      18: iconst_0
      19: ireturn
      20: aload_0
      21: getfield      #57                 // Field retentionTime:I
      24: istore        4
      26: aload_0
      27: getfield      #2                  // Field reuseSpace:Z
      30: istore        5
      32: aload_0
      33: iconst_m1
      34: putfield      #57                 // Field retentionTime:I
      37: aload_0
      38: invokespecial #277                // Method freeUnusedChunks:()V
      41: aload_0
      42: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
      45: invokevirtual #353                // Method org/h2/mvstore/FileStore.getFillRate:()I
      48: iload_1
      49: if_icmple     70
      52: iconst_0
      53: istore        6
      55: aload_0
      56: iload         5
      58: putfield      #2                  // Field reuseSpace:Z
      61: aload_0
      62: iload         4
      64: putfield      #57                 // Field retentionTime:I
      67: iload         6
      69: ireturn
      70: aload_0
      71: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
      74: invokevirtual #354                // Method org/h2/mvstore/FileStore.getFirstFree:()J
      77: ldc2_w        #165                // long 4096l
      80: ldiv
      81: lstore        6
      83: aload_0
      84: lload         6
      86: lload_2
      87: invokespecial #355                // Method compactGetMoveBlocks:(JJ)Ljava/util/ArrayList;
      90: astore        8
      92: aload_0
      93: aload         8
      95: invokespecial #356                // Method compactMoveChunks:(Ljava/util/ArrayList;)V
      98: aload_0
      99: invokespecial #277                // Method freeUnusedChunks:()V
     102: aload_0
     103: invokespecial #228                // Method storeNow:()J
     106: pop2
     107: aload_0
     108: iload         5
     110: putfield      #2                  // Field reuseSpace:Z
     113: aload_0
     114: iload         4
     116: putfield      #57                 // Field retentionTime:I
     119: goto          139
     122: astore        9
     124: aload_0
     125: iload         5
     127: putfield      #2                  // Field reuseSpace:Z
     130: aload_0
     131: iload         4
     133: putfield      #57                 // Field retentionTime:I
     136: aload         9
     138: athrow
     139: iconst_1
     140: ireturn
    Exception table:
       from    to  target type
          32    55   122   any
          70   107   122   any
         122   124   122   any

  private java.util.ArrayList<org.h2.mvstore.Chunk> compactGetMoveBlocks(long, long);
    Code:
       0: invokestatic  #242                // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
       3: astore        5
       5: aload_0
       6: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
       9: invokevirtual #133                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      12: invokeinterface #134,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      17: astore        6
      19: aload         6
      21: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          62
      29: aload         6
      31: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #135                // class org/h2/mvstore/Chunk
      39: astore        7
      41: aload         7
      43: getfield      #130                // Field org/h2/mvstore/Chunk.block:J
      46: lload_1
      47: lcmp
      48: ifle          59
      51: aload         5
      53: aload         7
      55: invokevirtual #249                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      58: pop
      59: goto          19
      62: aload         5
      64: new           #357                // class org/h2/mvstore/MVStore$1
      67: dup
      68: aload_0
      69: invokespecial #358                // Method org/h2/mvstore/MVStore$1."<init>":(Lorg/h2/mvstore/MVStore;)V
      72: invokestatic  #359                // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      75: iconst_0
      76: istore        6
      78: lconst_0
      79: lstore        7
      81: aload         5
      83: invokevirtual #187                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      86: astore        9
      88: aload         9
      90: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      95: ifeq          148
      98: aload         9
     100: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     105: checkcast     #135                // class org/h2/mvstore/Chunk
     108: astore        10
     110: aload         10
     112: getfield      #172                // Field org/h2/mvstore/Chunk.len:I
     115: i2l
     116: ldc2_w        #165                // long 4096l
     119: lmul
     120: lstore        11
     122: lload         7
     124: lload         11
     126: ladd
     127: lload_3
     128: lcmp
     129: ifle          135
     132: goto          148
     135: lload         7
     137: lload         11
     139: ladd
     140: lstore        7
     142: iinc          6, 1
     145: goto          88
     148: aload         5
     150: invokevirtual #360                // Method java/util/ArrayList.size:()I
     153: iload         6
     155: if_icmple     177
     158: aload         5
     160: invokevirtual #360                // Method java/util/ArrayList.size:()I
     163: iconst_1
     164: if_icmple     177
     167: aload         5
     169: iconst_1
     170: invokevirtual #361                // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;
     173: pop
     174: goto          148
     177: aload         5
     179: areturn

  private void compactMoveChunks(java.util.ArrayList<org.h2.mvstore.Chunk>);
    Code:
       0: aload_1
       1: invokevirtual #187                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
       4: astore_2
       5: aload_2
       6: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          232
      14: aload_2
      15: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: checkcast     #135                // class org/h2/mvstore/Chunk
      23: astore_3
      24: aload_0
      25: invokespecial #251                // Method getWriteBuffer:()Lorg/h2/mvstore/WriteBuffer;
      28: astore        4
      30: aload_3
      31: getfield      #130                // Field org/h2/mvstore/Chunk.block:J
      34: ldc2_w        #165                // long 4096l
      37: lmul
      38: lstore        5
      40: aload_3
      41: getfield      #172                // Field org/h2/mvstore/Chunk.len:I
      44: sipush        4096
      47: imul
      48: istore        7
      50: aload         4
      52: iload         7
      54: invokevirtual #261                // Method org/h2/mvstore/WriteBuffer.limit:(I)Lorg/h2/mvstore/WriteBuffer;
      57: pop
      58: aload_0
      59: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
      62: lload         5
      64: iload         7
      66: invokevirtual #140                // Method org/h2/mvstore/FileStore.readFully:(JI)Ljava/nio/ByteBuffer;
      69: astore        8
      71: aload         8
      73: lload         5
      75: invokestatic  #348                // Method org/h2/mvstore/Chunk.readChunkHeader:(Ljava/nio/ByteBuffer;J)Lorg/h2/mvstore/Chunk;
      78: pop
      79: aload         8
      81: invokevirtual #362                // Method java/nio/ByteBuffer.position:()I
      84: istore        9
      86: aload         4
      88: iload         9
      90: invokevirtual #265                // Method org/h2/mvstore/WriteBuffer.position:(I)Lorg/h2/mvstore/WriteBuffer;
      93: pop
      94: aload         4
      96: aload         8
      98: invokevirtual #363                // Method org/h2/mvstore/WriteBuffer.put:(Ljava/nio/ByteBuffer;)Lorg/h2/mvstore/WriteBuffer;
     101: pop
     102: aload_0
     103: invokespecial #262                // Method getFileLengthInUse:()J
     106: lstore        10
     108: aload_0
     109: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     112: lload         10
     114: iload         7
     116: invokevirtual #173                // Method org/h2/mvstore/FileStore.markUsed:(JI)V
     119: aload_0
     120: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     123: lload         5
     125: iload         7
     127: invokevirtual #264                // Method org/h2/mvstore/FileStore.free:(JI)V
     130: aload_3
     131: lload         10
     133: ldc2_w        #165                // long 4096l
     136: ldiv
     137: putfield      #130                // Field org/h2/mvstore/Chunk.block:J
     140: aload_3
     141: lconst_0
     142: putfield      #164                // Field org/h2/mvstore/Chunk.next:J
     145: aload         4
     147: iconst_0
     148: invokevirtual #265                // Method org/h2/mvstore/WriteBuffer.position:(I)Lorg/h2/mvstore/WriteBuffer;
     151: pop
     152: aload_3
     153: aload         4
     155: iload         9
     157: invokevirtual #252                // Method org/h2/mvstore/Chunk.writeChunkHeader:(Lorg/h2/mvstore/WriteBuffer;I)V
     160: aload         4
     162: iload         7
     164: sipush        128
     167: isub
     168: invokevirtual #265                // Method org/h2/mvstore/WriteBuffer.position:(I)Lorg/h2/mvstore/WriteBuffer;
     171: pop
     172: aload         4
     174: aload_3
     175: invokevirtual #268                // Method org/h2/mvstore/Chunk.getFooterBytes:()[B
     178: invokevirtual #269                // Method org/h2/mvstore/WriteBuffer.put:([B)Lorg/h2/mvstore/WriteBuffer;
     181: pop
     182: aload         4
     184: iconst_0
     185: invokevirtual #265                // Method org/h2/mvstore/WriteBuffer.position:(I)Lorg/h2/mvstore/WriteBuffer;
     188: pop
     189: aload_0
     190: lload         10
     192: aload         4
     194: invokevirtual #270                // Method org/h2/mvstore/WriteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     197: invokespecial #205                // Method write:(JLjava/nio/ByteBuffer;)V
     200: aload_0
     201: aload         4
     203: invokespecial #271                // Method releaseWriteBuffer:(Lorg/h2/mvstore/WriteBuffer;)V
     206: aload_0
     207: invokespecial #113                // Method markMetaChanged:()V
     210: aload_0
     211: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     214: aload_3
     215: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     218: invokestatic  #222                // Method org/h2/mvstore/Chunk.getMetaKey:(I)Ljava/lang/String;
     221: aload_3
     222: invokevirtual #233                // Method org/h2/mvstore/Chunk.asString:()Ljava/lang/String;
     225: invokevirtual #116                // Method org/h2/mvstore/MVMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     228: pop
     229: goto          5
     232: aload_0
     233: iconst_0
     234: putfield      #2                  // Field reuseSpace:Z
     237: aload_0
     238: invokespecial #210                // Method commitAndSave:()J
     241: pop2
     242: aload_0
     243: invokevirtual #336                // Method sync:()V
     246: aload_0
     247: iconst_1
     248: putfield      #2                  // Field reuseSpace:Z
     251: aload_1
     252: invokevirtual #187                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     255: astore_2
     256: aload_2
     257: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     262: ifeq          491
     265: aload_2
     266: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     271: checkcast     #135                // class org/h2/mvstore/Chunk
     274: astore_3
     275: aload_0
     276: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
     279: aload_3
     280: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     283: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     286: invokevirtual #364                // Method java/util/concurrent/ConcurrentHashMap.containsKey:(Ljava/lang/Object;)Z
     289: ifne          295
     292: goto          256
     295: aload_0
     296: invokespecial #251                // Method getWriteBuffer:()Lorg/h2/mvstore/WriteBuffer;
     299: astore        4
     301: aload_3
     302: getfield      #130                // Field org/h2/mvstore/Chunk.block:J
     305: ldc2_w        #165                // long 4096l
     308: lmul
     309: lstore        5
     311: aload_3
     312: getfield      #172                // Field org/h2/mvstore/Chunk.len:I
     315: sipush        4096
     318: imul
     319: istore        7
     321: aload         4
     323: iload         7
     325: invokevirtual #261                // Method org/h2/mvstore/WriteBuffer.limit:(I)Lorg/h2/mvstore/WriteBuffer;
     328: pop
     329: aload_0
     330: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     333: lload         5
     335: iload         7
     337: invokevirtual #140                // Method org/h2/mvstore/FileStore.readFully:(JI)Ljava/nio/ByteBuffer;
     340: astore        8
     342: aload         8
     344: lconst_0
     345: invokestatic  #348                // Method org/h2/mvstore/Chunk.readChunkHeader:(Ljava/nio/ByteBuffer;J)Lorg/h2/mvstore/Chunk;
     348: pop
     349: aload         8
     351: invokevirtual #362                // Method java/nio/ByteBuffer.position:()I
     354: istore        9
     356: aload         4
     358: iload         9
     360: invokevirtual #265                // Method org/h2/mvstore/WriteBuffer.position:(I)Lorg/h2/mvstore/WriteBuffer;
     363: pop
     364: aload         4
     366: aload         8
     368: invokevirtual #363                // Method org/h2/mvstore/WriteBuffer.put:(Ljava/nio/ByteBuffer;)Lorg/h2/mvstore/WriteBuffer;
     371: pop
     372: aload_0
     373: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     376: iload         7
     378: invokevirtual #263                // Method org/h2/mvstore/FileStore.allocate:(I)J
     381: lstore        10
     383: aload_0
     384: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     387: lload         5
     389: iload         7
     391: invokevirtual #264                // Method org/h2/mvstore/FileStore.free:(JI)V
     394: aload         4
     396: iconst_0
     397: invokevirtual #265                // Method org/h2/mvstore/WriteBuffer.position:(I)Lorg/h2/mvstore/WriteBuffer;
     400: pop
     401: aload_3
     402: lload         10
     404: ldc2_w        #165                // long 4096l
     407: ldiv
     408: putfield      #130                // Field org/h2/mvstore/Chunk.block:J
     411: aload_3
     412: aload         4
     414: iload         9
     416: invokevirtual #252                // Method org/h2/mvstore/Chunk.writeChunkHeader:(Lorg/h2/mvstore/WriteBuffer;I)V
     419: aload         4
     421: iload         7
     423: sipush        128
     426: isub
     427: invokevirtual #265                // Method org/h2/mvstore/WriteBuffer.position:(I)Lorg/h2/mvstore/WriteBuffer;
     430: pop
     431: aload         4
     433: aload_3
     434: invokevirtual #268                // Method org/h2/mvstore/Chunk.getFooterBytes:()[B
     437: invokevirtual #269                // Method org/h2/mvstore/WriteBuffer.put:([B)Lorg/h2/mvstore/WriteBuffer;
     440: pop
     441: aload         4
     443: iconst_0
     444: invokevirtual #265                // Method org/h2/mvstore/WriteBuffer.position:(I)Lorg/h2/mvstore/WriteBuffer;
     447: pop
     448: aload_0
     449: lload         10
     451: aload         4
     453: invokevirtual #270                // Method org/h2/mvstore/WriteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     456: invokespecial #205                // Method write:(JLjava/nio/ByteBuffer;)V
     459: aload_0
     460: aload         4
     462: invokespecial #271                // Method releaseWriteBuffer:(Lorg/h2/mvstore/WriteBuffer;)V
     465: aload_0
     466: invokespecial #113                // Method markMetaChanged:()V
     469: aload_0
     470: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     473: aload_3
     474: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     477: invokestatic  #222                // Method org/h2/mvstore/Chunk.getMetaKey:(I)Ljava/lang/String;
     480: aload_3
     481: invokevirtual #233                // Method org/h2/mvstore/Chunk.asString:()Ljava/lang/String;
     484: invokevirtual #116                // Method org/h2/mvstore/MVMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     487: pop
     488: goto          256
     491: aload_0
     492: invokespecial #210                // Method commitAndSave:()J
     495: pop2
     496: aload_0
     497: invokevirtual #336                // Method sync:()V
     500: aload_0
     501: iconst_0
     502: invokespecial #213                // Method shrinkFileIfPossible:(I)V
     505: return

  public void sync();
    Code:
       0: aload_0
       1: invokespecial #98                 // Method checkOpen:()V
       4: aload_0
       5: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
       8: astore_1
       9: aload_1
      10: ifnull        17
      13: aload_1
      14: invokevirtual #365                // Method org/h2/mvstore/FileStore.sync:()V
      17: return

  public boolean compact(int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field reuseSpace:Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #16                 // Field compactSync:Ljava/lang/Object;
      13: dup
      14: astore_3
      15: monitorenter
      16: aload_0
      17: invokespecial #98                 // Method checkOpen:()V
      20: aload_0
      21: dup
      22: astore        5
      24: monitorenter
      25: aload_0
      26: iload_1
      27: iload_2
      28: invokespecial #366                // Method compactGetOldChunks:(II)Ljava/util/ArrayList;
      31: astore        4
      33: aload         5
      35: monitorexit
      36: goto          47
      39: astore        6
      41: aload         5
      43: monitorexit
      44: aload         6
      46: athrow
      47: aload         4
      49: ifnull        60
      52: aload         4
      54: invokevirtual #333                // Method java/util/ArrayList.isEmpty:()Z
      57: ifeq          64
      60: iconst_0
      61: aload_3
      62: monitorexit
      63: ireturn
      64: aload_0
      65: aload         4
      67: invokespecial #367                // Method compactRewrite:(Ljava/util/ArrayList;)V
      70: iconst_1
      71: aload_3
      72: monitorexit
      73: ireturn
      74: astore        7
      76: aload_3
      77: monitorexit
      78: aload         7
      80: athrow
    Exception table:
       from    to  target type
          25    36    39   any
          39    44    39   any
          16    63    74   any
          64    73    74   any
          74    78    74   any

  public int getCurrentFillRate();
    Code:
       0: lconst_1
       1: lstore_1
       2: lconst_1
       3: lstore_3
       4: aload_0
       5: invokespecial #83                 // Method getTimeSinceCreation:()J
       8: lstore        5
      10: aload_0
      11: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
      14: invokevirtual #133                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      17: invokeinterface #134,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore        7
      24: aload         7
      26: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          93
      34: aload         7
      36: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #135                // class org/h2/mvstore/Chunk
      44: astore        8
      46: lload_1
      47: aload         8
      49: getfield      #239                // Field org/h2/mvstore/Chunk.maxLen:J
      52: ladd
      53: lstore_1
      54: aload         8
      56: getfield      #188                // Field org/h2/mvstore/Chunk.time:J
      59: aload_0
      60: getfield      #57                 // Field retentionTime:I
      63: i2l
      64: ladd
      65: lload         5
      67: lcmp
      68: ifle          82
      71: lload_3
      72: aload         8
      74: getfield      #239                // Field org/h2/mvstore/Chunk.maxLen:J
      77: ladd
      78: lstore_3
      79: goto          90
      82: lload_3
      83: aload         8
      85: getfield      #240                // Field org/h2/mvstore/Chunk.maxLenLive:J
      88: ladd
      89: lstore_3
      90: goto          24
      93: lload_1
      94: lconst_0
      95: lcmp
      96: ifgt          101
      99: lconst_1
     100: lstore_1
     101: ldc2_w        #334                // long 100l
     104: lload_3
     105: lmul
     106: lload_1
     107: ldiv
     108: l2i
     109: istore        7
     111: iload         7
     113: ireturn

  private java.util.ArrayList<org.h2.mvstore.Chunk> compactGetOldChunks(int, int);
    Code:
       0: aload_0
       1: getfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: invokespecial #83                 // Method getTimeSinceCreation:()J
      13: lstore_3
      14: aload_0
      15: invokevirtual #368                // Method getCurrentFillRate:()I
      18: istore        5
      20: iload         5
      22: iload_1
      23: if_icmplt     28
      26: aconst_null
      27: areturn
      28: invokestatic  #242                // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
      31: astore        6
      33: aload_0
      34: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
      37: aload_0
      38: getfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
      41: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
      44: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      47: invokevirtual #106                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      50: checkcast     #135                // class org/h2/mvstore/Chunk
      53: astore        7
      55: aload_0
      56: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
      59: invokevirtual #133                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      62: invokeinterface #134,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      67: astore        8
      69: aload         8
      71: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      76: ifeq          155
      79: aload         8
      81: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      86: checkcast     #135                // class org/h2/mvstore/Chunk
      89: astore        9
      91: aload         9
      93: getfield      #188                // Field org/h2/mvstore/Chunk.time:J
      96: aload_0
      97: getfield      #57                 // Field retentionTime:I
     100: i2l
     101: ladd
     102: lload_3
     103: lcmp
     104: ifle          110
     107: goto          69
     110: aload         7
     112: getfield      #136                // Field org/h2/mvstore/Chunk.version:J
     115: aload         9
     117: getfield      #136                // Field org/h2/mvstore/Chunk.version:J
     120: lsub
     121: lconst_1
     122: ladd
     123: lstore        10
     125: aload         9
     127: aload         9
     129: invokevirtual #369                // Method org/h2/mvstore/Chunk.getFillRate:()I
     132: sipush        1000
     135: imul
     136: i2l
     137: lload         10
     139: ldiv
     140: l2i
     141: putfield      #370                // Field org/h2/mvstore/Chunk.collectPriority:I
     144: aload         6
     146: aload         9
     148: invokevirtual #249                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     151: pop
     152: goto          69
     155: aload         6
     157: invokevirtual #333                // Method java/util/ArrayList.isEmpty:()Z
     160: ifeq          165
     163: aconst_null
     164: areturn
     165: aload         6
     167: new           #371                // class org/h2/mvstore/MVStore$2
     170: dup
     171: aload_0
     172: invokespecial #372                // Method org/h2/mvstore/MVStore$2."<init>":(Lorg/h2/mvstore/MVStore;)V
     175: invokestatic  #359                // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
     178: lconst_0
     179: lstore        8
     181: iconst_0
     182: istore        10
     184: aconst_null
     185: astore        11
     187: aload         6
     189: invokevirtual #187                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     192: astore        12
     194: aload         12
     196: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     201: ifeq          260
     204: aload         12
     206: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     211: checkcast     #135                // class org/h2/mvstore/Chunk
     214: astore        13
     216: aload         11
     218: ifnull        240
     221: aload         13
     223: getfield      #370                // Field org/h2/mvstore/Chunk.collectPriority:I
     226: ifle          240
     229: lload         8
     231: iload_2
     232: i2l
     233: lcmp
     234: ifle          240
     237: goto          260
     240: lload         8
     242: aload         13
     244: getfield      #240                // Field org/h2/mvstore/Chunk.maxLenLive:J
     247: ladd
     248: lstore        8
     250: iinc          10, 1
     253: aload         13
     255: astore        11
     257: goto          194
     260: iload         10
     262: iconst_1
     263: if_icmpge     268
     266: aconst_null
     267: areturn
     268: iconst_0
     269: istore        12
     271: aload         6
     273: invokevirtual #373                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     276: astore        13
     278: aload         13
     280: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     285: ifeq          328
     288: aload         13
     290: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     295: checkcast     #135                // class org/h2/mvstore/Chunk
     298: astore        14
     300: aload         11
     302: aload         14
     304: if_acmpne     313
     307: iconst_1
     308: istore        12
     310: goto          325
     313: iload         12
     315: ifeq          325
     318: aload         13
     320: invokeinterface #282,  1          // InterfaceMethod java/util/Iterator.remove:()V
     325: goto          278
     328: aload         6
     330: areturn

  private void compactRewrite(java.util.ArrayList<org.h2.mvstore.Chunk>);
    Code:
       0: new           #118                // class java/util/HashSet
       3: dup
       4: invokespecial #119                // Method java/util/HashSet."<init>":()V
       7: astore_2
       8: aload_1
       9: invokevirtual #187                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      12: astore_3
      13: aload_3
      14: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          49
      22: aload_3
      23: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #135                // class org/h2/mvstore/Chunk
      31: astore        4
      33: aload_2
      34: aload         4
      36: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
      39: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      42: invokevirtual #126                // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      45: pop
      46: goto          13
      49: aload_0
      50: getfield      #7                  // Field maps:Ljava/util/concurrent/ConcurrentHashMap;
      53: invokevirtual #133                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      56: invokeinterface #134,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      61: astore_3
      62: aload_3
      63: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      68: ifeq          99
      71: aload_3
      72: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      77: checkcast     #50                 // class org/h2/mvstore/MVMap
      80: astore        4
      82: aload         4
      84: astore        5
      86: aload         5
      88: aload_2
      89: invokevirtual #374                // Method org/h2/mvstore/MVMap.rewrite:(Ljava/util/Set;)Z
      92: ifne          96
      95: return
      96: goto          62
      99: aload_0
     100: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     103: aload_2
     104: invokevirtual #374                // Method org/h2/mvstore/MVMap.rewrite:(Ljava/util/Set;)Z
     107: ifne          111
     110: return
     111: aload_0
     112: invokespecial #277                // Method freeUnusedChunks:()V
     115: aload_0
     116: invokespecial #210                // Method commitAndSave:()J
     119: pop2
     120: return

  org.h2.mvstore.Page readPage(org.h2.mvstore.MVMap<?, ?>, long);
    Code:
       0: lload_2
       1: lconst_0
       2: lcmp
       3: ifne          19
       6: bipush        6
       8: ldc_w         #375                // String Position 0
      11: iconst_0
      12: anewarray     #15                 // class java/lang/Object
      15: invokestatic  #145                // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      18: athrow
      19: aload_0
      20: getfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
      23: ifnonnull     30
      26: aconst_null
      27: goto          41
      30: aload_0
      31: getfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
      34: lload_2
      35: invokevirtual #306                // Method org/h2/mvstore/cache/CacheLongKeyLIRS.get:(J)Ljava/lang/Object;
      38: checkcast     #308                // class org/h2/mvstore/Page
      41: astore        4
      43: aload         4
      45: ifnonnull     149
      48: aload_0
      49: lload_2
      50: invokespecial #310                // Method getChunk:(J)Lorg/h2/mvstore/Chunk;
      53: astore        5
      55: aload         5
      57: getfield      #130                // Field org/h2/mvstore/Chunk.block:J
      60: ldc2_w        #165                // long 4096l
      63: lmul
      64: lstore        6
      66: lload         6
      68: lload_2
      69: invokestatic  #311                // Method org/h2/mvstore/DataUtils.getPageOffset:(J)I
      72: i2l
      73: ladd
      74: lstore        6
      76: lload         6
      78: lconst_0
      79: lcmp
      80: ifge          104
      83: bipush        6
      85: ldc_w         #376                // String Negative position {0}
      88: iconst_1
      89: anewarray     #15                 // class java/lang/Object
      92: dup
      93: iconst_0
      94: lload         6
      96: invokestatic  #77                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      99: aastore
     100: invokestatic  #145                // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
     103: athrow
     104: aload         5
     106: getfield      #130                // Field org/h2/mvstore/Chunk.block:J
     109: aload         5
     111: getfield      #172                // Field org/h2/mvstore/Chunk.len:I
     114: i2l
     115: ladd
     116: ldc2_w        #165                // long 4096l
     119: lmul
     120: lstore        8
     122: aload_0
     123: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     126: lload_2
     127: aload_1
     128: lload         6
     130: lload         8
     132: invokestatic  #377                // Method org/h2/mvstore/Page.read:(Lorg/h2/mvstore/FileStore;JLorg/h2/mvstore/MVMap;JJ)Lorg/h2/mvstore/Page;
     135: astore        4
     137: aload_0
     138: lload_2
     139: aload         4
     141: aload         4
     143: invokevirtual #378                // Method org/h2/mvstore/Page.getMemory:()I
     146: invokevirtual #379                // Method cachePage:(JLorg/h2/mvstore/Page;I)V
     149: aload         4
     151: areturn

  void removePage(org.h2.mvstore.MVMap<?, ?>, long, int);
    Code:
       0: lload_2
       1: lconst_0
       2: lcmp
       3: ifne          22
       6: aload_0
       7: iconst_0
       8: aload_0
       9: getfield      #231                // Field unsavedMemory:I
      12: iload         4
      14: isub
      15: invokestatic  #275                // Method java/lang/Math.max:(II)I
      18: putfield      #231                // Field unsavedMemory:I
      21: return
      22: aload_0
      23: getfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
      26: ifnull        45
      29: lload_2
      30: invokestatic  #295                // Method org/h2/mvstore/DataUtils.getPageType:(J)I
      33: ifne          45
      36: aload_0
      37: getfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
      40: lload_2
      41: invokevirtual #380                // Method org/h2/mvstore/cache/CacheLongKeyLIRS.remove:(J)Ljava/lang/Object;
      44: pop
      45: aload_0
      46: lload_2
      47: invokespecial #310                // Method getChunk:(J)Lorg/h2/mvstore/Chunk;
      50: astore        5
      52: aload_0
      53: getfield      #54                 // Field currentVersion:J
      56: lstore        6
      58: aload_1
      59: aload_0
      60: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
      63: if_acmpne     91
      66: aload_0
      67: getfield      #14                 // Field currentStoreVersion:J
      70: lconst_0
      71: lcmp
      72: iflt          91
      75: invokestatic  #226                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      78: aload_0
      79: getfield      #227                // Field currentStoreThread:Ljava/lang/Thread;
      82: if_acmpne     91
      85: aload_0
      86: getfield      #14                 // Field currentStoreVersion:J
      89: lstore        6
      91: aload_0
      92: lload         6
      94: aload         5
      96: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
      99: lload_2
     100: invokestatic  #381                // Method org/h2/mvstore/DataUtils.getPageMaxLength:(J)I
     103: i2l
     104: iconst_1
     105: invokespecial #171                // Method registerFreePage:(JIJI)V
     108: return

  private void registerFreePage(long, int, long, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field freedPageSpace:Ljava/util/concurrent/ConcurrentHashMap;
       4: lload_1
       5: invokestatic  #77                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokevirtual #106                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #3                  // class java/util/concurrent/ConcurrentHashMap
      14: astore        7
      16: aload         7
      18: ifnonnull     57
      21: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      24: dup
      25: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      28: astore        7
      30: aload_0
      31: getfield      #6                  // Field freedPageSpace:Ljava/util/concurrent/ConcurrentHashMap;
      34: lload_1
      35: invokestatic  #77                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      38: aload         7
      40: invokevirtual #176                // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #3                  // class java/util/concurrent/ConcurrentHashMap
      46: astore        8
      48: aload         8
      50: ifnull        57
      53: aload         8
      55: astore        7
      57: aload         7
      59: dup
      60: astore        8
      62: monitorenter
      63: aload         7
      65: iload_3
      66: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      69: invokevirtual #106                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      72: checkcast     #135                // class org/h2/mvstore/Chunk
      75: astore        9
      77: aload         9
      79: ifnonnull     117
      82: new           #135                // class org/h2/mvstore/Chunk
      85: dup
      86: iload_3
      87: invokespecial #192                // Method org/h2/mvstore/Chunk."<init>":(I)V
      90: astore        9
      92: aload         7
      94: iload_3
      95: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      98: aload         9
     100: invokevirtual #176                // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: checkcast     #135                // class org/h2/mvstore/Chunk
     106: astore        10
     108: aload         10
     110: ifnull        117
     113: aload         10
     115: astore        9
     117: aload         9
     119: dup
     120: getfield      #240                // Field org/h2/mvstore/Chunk.maxLenLive:J
     123: lload         4
     125: lsub
     126: putfield      #240                // Field org/h2/mvstore/Chunk.maxLenLive:J
     129: aload         9
     131: dup
     132: getfield      #170                // Field org/h2/mvstore/Chunk.pageCountLive:I
     135: iload         6
     137: isub
     138: putfield      #170                // Field org/h2/mvstore/Chunk.pageCountLive:I
     141: aload         8
     143: monitorexit
     144: goto          155
     147: astore        11
     149: aload         8
     151: monitorexit
     152: aload         11
     154: athrow
     155: return
    Exception table:
       from    to  target type
          63   144   147   any
         147   152   147   any

  org.h2.compress.Compressor getCompressorFast();
    Code:
       0: aload_0
       1: getfield      #382                // Field compressorFast:Lorg/h2/compress/Compressor;
       4: ifnonnull     18
       7: aload_0
       8: new           #383                // class org/h2/compress/CompressLZF
      11: dup
      12: invokespecial #384                // Method org/h2/compress/CompressLZF."<init>":()V
      15: putfield      #382                // Field compressorFast:Lorg/h2/compress/Compressor;
      18: aload_0
      19: getfield      #382                // Field compressorFast:Lorg/h2/compress/Compressor;
      22: areturn

  org.h2.compress.Compressor getCompressorHigh();
    Code:
       0: aload_0
       1: getfield      #385                // Field compressorHigh:Lorg/h2/compress/Compressor;
       4: ifnonnull     18
       7: aload_0
       8: new           #386                // class org/h2/compress/CompressDeflate
      11: dup
      12: invokespecial #387                // Method org/h2/compress/CompressDeflate."<init>":()V
      15: putfield      #385                // Field compressorHigh:Lorg/h2/compress/Compressor;
      18: aload_0
      19: getfield      #385                // Field compressorHigh:Lorg/h2/compress/Compressor;
      22: areturn

  int getCompressionLevel();
    Code:
       0: aload_0
       1: getfield      #19                 // Field compressionLevel:I
       4: ireturn

  public int getPageSplitSize();
    Code:
       0: aload_0
       1: getfield      #46                 // Field pageSplitSize:I
       4: ireturn

  public boolean getReuseSpace();
    Code:
       0: aload_0
       1: getfield      #2                  // Field reuseSpace:Z
       4: ireturn

  public void setReuseSpace(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field reuseSpace:Z
       5: return

  public int getRetentionTime();
    Code:
       0: aload_0
       1: getfield      #57                 // Field retentionTime:I
       4: ireturn

  public void setRetentionTime(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #57                 // Field retentionTime:I
       5: return

  public void setVersionsToKeep(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field versionsToKeep:I
       5: return

  public long getVersionsToKeep();
    Code:
       0: aload_0
       1: getfield      #11                 // Field versionsToKeep:I
       4: i2l
       5: lreturn

  long getOldestVersionToKeep();
    Code:
       0: aload_0
       1: getfield      #54                 // Field currentVersion:J
       4: lstore_1
       5: aload_0
       6: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
       9: ifnonnull     20
      12: lload_1
      13: aload_0
      14: getfield      #11                 // Field versionsToKeep:I
      17: i2l
      18: lsub
      19: lreturn
      20: aload_0
      21: getfield      #14                 // Field currentStoreVersion:J
      24: lstore_3
      25: lload_3
      26: ldc2_w        #12                 // long -1l
      29: lcmp
      30: ifle          39
      33: lload_1
      34: lload_3
      35: invokestatic  #388                // Method java/lang/Math.min:(JJ)J
      38: lstore_1
      39: lload_1
      40: lreturn

  private boolean isKnownVersion(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #54                 // Field currentVersion:J
       5: lcmp
       6: ifgt          15
       9: lload_1
      10: lconst_0
      11: lcmp
      12: ifge          17
      15: iconst_0
      16: ireturn
      17: lload_1
      18: aload_0
      19: getfield      #54                 // Field currentVersion:J
      22: lcmp
      23: ifeq          36
      26: aload_0
      27: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
      30: invokevirtual #389                // Method java/util/concurrent/ConcurrentHashMap.size:()I
      33: ifne          38
      36: iconst_1
      37: ireturn
      38: aload_0
      39: lload_1
      40: invokespecial #127                // Method getChunkForVersion:(J)Lorg/h2/mvstore/Chunk;
      43: astore_3
      44: aload_3
      45: ifnonnull     50
      48: iconst_0
      49: ireturn
      50: aload_0
      51: lload_1
      52: invokespecial #91                 // Method getMetaMap:(J)Lorg/h2/mvstore/MVMap;
      55: astore        4
      57: aload         4
      59: ifnonnull     64
      62: iconst_0
      63: ireturn
      64: aload         4
      66: ldc           #174                // String chunk.
      68: invokevirtual #120                // Method org/h2/mvstore/MVMap.keyIterator:(Ljava/lang/Object;)Ljava/util/Iterator;
      71: astore        5
      73: aload         5
      75: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      80: ifeq          191
      83: aload         5
      85: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      90: checkcast     #22                 // class java/lang/String
      93: astore        6
      95: aload         6
      97: ldc           #174                // String chunk.
      99: invokevirtual #123                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     102: ifne          108
     105: goto          191
     108: aload_0
     109: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     112: aload         6
     114: invokevirtual #138                // Method org/h2/mvstore/MVMap.containsKey:(Ljava/lang/Object;)Z
     117: ifne          188
     120: aload         4
     122: aload         6
     124: invokevirtual #104                // Method org/h2/mvstore/MVMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     127: checkcast     #22                 // class java/lang/String
     130: astore        7
     132: aload         7
     134: invokestatic  #175                // Method org/h2/mvstore/Chunk.fromString:(Ljava/lang/String;)Lorg/h2/mvstore/Chunk;
     137: astore        8
     139: aload_0
     140: aload         8
     142: getfield      #130                // Field org/h2/mvstore/Chunk.block:J
     145: invokespecial #151                // Method readChunkHeaderAndFooter:(J)Lorg/h2/mvstore/Chunk;
     148: astore        9
     150: aload         9
     152: ifnull        168
     155: aload         9
     157: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     160: aload         8
     162: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     165: if_icmpeq     170
     168: iconst_0
     169: ireturn
     170: aload_0
     171: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
     174: aload         8
     176: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     179: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     182: aload         8
     184: invokevirtual #117                // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     187: pop
     188: goto          73
     191: goto          198
     194: astore        5
     196: iconst_0
     197: ireturn
     198: iconst_1
     199: ireturn
    Exception table:
       from    to  target type
          64   169   194   Class java/lang/IllegalStateException
         170   191   194   Class java/lang/IllegalStateException

  void registerUnsavedPage(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #231                // Field unsavedMemory:I
       5: iload_1
       6: iadd
       7: putfield      #231                // Field unsavedMemory:I
      10: aload_0
      11: getfield      #231                // Field unsavedMemory:I
      14: istore_2
      15: iload_2
      16: aload_0
      17: getfield      #59                 // Field autoCommitMemory:I
      20: if_icmple     35
      23: aload_0
      24: getfield      #59                 // Field autoCommitMemory:I
      27: ifle          35
      30: aload_0
      31: iconst_1
      32: putfield      #390                // Field saveNeeded:Z
      35: return

  void beforeWrite(org.h2.mvstore.MVMap<?, ?>);
    Code:
       0: aload_0
       1: getfield      #390                // Field saveNeeded:Z
       4: ifeq          44
       7: aload_1
       8: aload_0
       9: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
      12: if_acmpne     16
      15: return
      16: aload_0
      17: iconst_0
      18: putfield      #390                // Field saveNeeded:Z
      21: aload_0
      22: getfield      #231                // Field unsavedMemory:I
      25: aload_0
      26: getfield      #59                 // Field autoCommitMemory:I
      29: if_icmple     44
      32: aload_0
      33: getfield      #59                 // Field autoCommitMemory:I
      36: ifle          44
      39: aload_0
      40: invokespecial #210                // Method commitAndSave:()J
      43: pop2
      44: return

  public int getStoreVersion();
    Code:
       0: aload_0
       1: invokespecial #98                 // Method checkOpen:()V
       4: aload_0
       5: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
       8: ldc_w         #391                // String setting.storeVersion
      11: invokevirtual #104                // Method org/h2/mvstore/MVMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #22                 // class java/lang/String
      17: astore_1
      18: aload_1
      19: ifnonnull     26
      22: iconst_0
      23: goto          30
      26: aload_1
      27: invokestatic  #105                // Method org/h2/mvstore/DataUtils.parseHexInt:(Ljava/lang/String;)I
      30: ireturn

  public synchronized void setStoreVersion(int);
    Code:
       0: aload_0
       1: invokespecial #98                 // Method checkOpen:()V
       4: aload_0
       5: invokespecial #113                // Method markMetaChanged:()V
       8: aload_0
       9: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
      12: ldc_w         #391                // String setting.storeVersion
      15: iload_1
      16: invokestatic  #114                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      19: invokevirtual #116                // Method org/h2/mvstore/MVMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: return

  public void rollback();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #54                 // Field currentVersion:J
       5: invokevirtual #189                // Method rollbackTo:(J)V
       8: return

  public synchronized void rollbackTo(long);
    Code:
       0: aload_0
       1: invokespecial #98                 // Method checkOpen:()V
       4: lload_1
       5: lconst_0
       6: lcmp
       7: ifne          109
      10: aload_0
      11: getfield      #7                  // Field maps:Ljava/util/concurrent/ConcurrentHashMap;
      14: invokevirtual #133                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      17: invokeinterface #134,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          51
      32: aload_3
      33: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #50                 // class org/h2/mvstore/MVMap
      41: astore        4
      43: aload         4
      45: invokevirtual #215                // Method org/h2/mvstore/MVMap.close:()V
      48: goto          23
      51: aload_0
      52: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
      55: invokevirtual #392                // Method org/h2/mvstore/MVMap.clear:()V
      58: aload_0
      59: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
      62: invokevirtual #159                // Method java/util/concurrent/ConcurrentHashMap.clear:()V
      65: aload_0
      66: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
      69: ifnull        79
      72: aload_0
      73: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
      76: invokevirtual #393                // Method org/h2/mvstore/FileStore.clear:()V
      79: aload_0
      80: getfield      #7                  // Field maps:Ljava/util/concurrent/ConcurrentHashMap;
      83: invokevirtual #159                // Method java/util/concurrent/ConcurrentHashMap.clear:()V
      86: aload_0
      87: getfield      #6                  // Field freedPageSpace:Ljava/util/concurrent/ConcurrentHashMap;
      90: invokevirtual #159                // Method java/util/concurrent/ConcurrentHashMap.clear:()V
      93: aload_0
      94: lload_1
      95: putfield      #54                 // Field currentVersion:J
      98: aload_0
      99: lload_1
     100: invokespecial #182                // Method setWriteVersion:(J)V
     103: aload_0
     104: iconst_0
     105: putfield      #139                // Field metaChanged:Z
     108: return
     109: aload_0
     110: lload_1
     111: invokespecial #394                // Method isKnownVersion:(J)Z
     114: ldc           #128                // String Unknown version {0}
     116: iconst_1
     117: anewarray     #15                 // class java/lang/Object
     120: dup
     121: iconst_0
     122: lload_1
     123: invokestatic  #77                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     126: aastore
     127: invokestatic  #129                // Method org/h2/mvstore/DataUtils.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     130: aload_0
     131: getfield      #7                  // Field maps:Ljava/util/concurrent/ConcurrentHashMap;
     134: invokevirtual #133                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
     137: invokeinterface #134,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     142: astore_3
     143: aload_3
     144: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     149: ifeq          172
     152: aload_3
     153: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     158: checkcast     #50                 // class org/h2/mvstore/MVMap
     161: astore        4
     163: aload         4
     165: lload_1
     166: invokevirtual #395                // Method org/h2/mvstore/MVMap.rollbackTo:(J)V
     169: goto          143
     172: aload_0
     173: getfield      #54                 // Field currentVersion:J
     176: lstore_3
     177: lload_3
     178: lload_1
     179: lcmp
     180: iflt          215
     183: aload_0
     184: getfield      #6                  // Field freedPageSpace:Ljava/util/concurrent/ConcurrentHashMap;
     187: invokevirtual #389                // Method java/util/concurrent/ConcurrentHashMap.size:()I
     190: ifne          196
     193: goto          215
     196: aload_0
     197: getfield      #6                  // Field freedPageSpace:Ljava/util/concurrent/ConcurrentHashMap;
     200: lload_3
     201: invokestatic  #77                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     204: invokevirtual #396                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     207: pop
     208: lload_3
     209: lconst_1
     210: lsub
     211: lstore_3
     212: goto          177
     215: aload_0
     216: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     219: lload_1
     220: invokevirtual #395                // Method org/h2/mvstore/MVMap.rollbackTo:(J)V
     223: aload_0
     224: iconst_0
     225: putfield      #139                // Field metaChanged:Z
     228: iconst_0
     229: istore_3
     230: new           #183                // class java/util/ArrayList
     233: dup
     234: invokespecial #397                // Method java/util/ArrayList."<init>":()V
     237: astore        4
     239: aconst_null
     240: astore        5
     242: aload_0
     243: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
     246: invokevirtual #133                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
     249: invokeinterface #134,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     254: astore        6
     256: aload         6
     258: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     263: ifeq          330
     266: aload         6
     268: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     273: checkcast     #135                // class org/h2/mvstore/Chunk
     276: astore        7
     278: aload         7
     280: getfield      #136                // Field org/h2/mvstore/Chunk.version:J
     283: lload_1
     284: lcmp
     285: ifle          305
     288: aload         4
     290: aload         7
     292: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     295: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     298: invokevirtual #249                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     301: pop
     302: goto          327
     305: aload         5
     307: ifnull        323
     310: aload         5
     312: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     315: aload         7
     317: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     320: if_icmpge     327
     323: aload         7
     325: astore        5
     327: goto          256
     330: aload         4
     332: invokevirtual #333                // Method java/util/ArrayList.isEmpty:()Z
     335: ifne          499
     338: aload         4
     340: invokestatic  #398                // Method java/util/Collections.reverseOrder:()Ljava/util/Comparator;
     343: invokestatic  #359                // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
     346: aload_0
     347: lload_1
     348: invokespecial #266                // Method revertTemp:(J)V
     351: iconst_1
     352: istore_3
     353: aload         4
     355: invokevirtual #187                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     358: astore        6
     360: aload         6
     362: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     367: ifeq          485
     370: aload         6
     372: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     377: checkcast     #35                 // class java/lang/Integer
     380: invokevirtual #36                 // Method java/lang/Integer.intValue:()I
     383: istore        7
     385: aload_0
     386: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
     389: iload         7
     391: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     394: invokevirtual #396                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     397: checkcast     #135                // class org/h2/mvstore/Chunk
     400: astore        8
     402: aload         8
     404: getfield      #130                // Field org/h2/mvstore/Chunk.block:J
     407: ldc2_w        #165                // long 4096l
     410: lmul
     411: lstore        9
     413: aload         8
     415: getfield      #172                // Field org/h2/mvstore/Chunk.len:I
     418: sipush        4096
     421: imul
     422: istore        11
     424: aload_0
     425: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     428: lload         9
     430: iload         11
     432: invokevirtual #264                // Method org/h2/mvstore/FileStore.free:(JI)V
     435: aload_0
     436: invokespecial #251                // Method getWriteBuffer:()Lorg/h2/mvstore/WriteBuffer;
     439: astore        12
     441: aload         12
     443: iload         11
     445: invokevirtual #261                // Method org/h2/mvstore/WriteBuffer.limit:(I)Lorg/h2/mvstore/WriteBuffer;
     448: pop
     449: aload         12
     451: invokevirtual #270                // Method org/h2/mvstore/WriteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     454: invokevirtual #399                // Method java/nio/ByteBuffer.array:()[B
     457: iconst_0
     458: invokestatic  #400                // Method java/util/Arrays.fill:([BB)V
     461: aload_0
     462: lload         9
     464: aload         12
     466: invokevirtual #270                // Method org/h2/mvstore/WriteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     469: invokespecial #205                // Method write:(JLjava/nio/ByteBuffer;)V
     472: aload_0
     473: aload         12
     475: invokespecial #271                // Method releaseWriteBuffer:(Lorg/h2/mvstore/WriteBuffer;)V
     478: aload_0
     479: invokevirtual #336                // Method sync:()V
     482: goto          360
     485: aload_0
     486: aload         5
     488: putfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
     491: aload_0
     492: invokespecial #78                 // Method writeStoreHeader:()V
     495: aload_0
     496: invokespecial #79                 // Method readStoreHeader:()V
     499: new           #183                // class java/util/ArrayList
     502: dup
     503: aload_0
     504: getfield      #7                  // Field maps:Ljava/util/concurrent/ConcurrentHashMap;
     507: invokevirtual #133                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
     510: invokespecial #185                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     513: invokevirtual #187                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     516: astore        6
     518: aload         6
     520: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     525: ifeq          602
     528: aload         6
     530: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     535: checkcast     #50                 // class org/h2/mvstore/MVMap
     538: astore        7
     540: aload         7
     542: invokevirtual #254                // Method org/h2/mvstore/MVMap.getId:()I
     545: istore        8
     547: aload         7
     549: invokevirtual #244                // Method org/h2/mvstore/MVMap.getCreateVersion:()J
     552: lload_1
     553: lcmp
     554: iflt          578
     557: aload         7
     559: invokevirtual #215                // Method org/h2/mvstore/MVMap.close:()V
     562: aload_0
     563: getfield      #7                  // Field maps:Ljava/util/concurrent/ConcurrentHashMap;
     566: iload         8
     568: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     571: invokevirtual #396                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     574: pop
     575: goto          599
     578: iload_3
     579: ifeq          599
     582: aload         7
     584: aload_0
     585: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     588: iload         8
     590: invokestatic  #92                 // Method getRootPos:(Lorg/h2/mvstore/MVMap;I)J
     593: ldc2_w        #12                 // long -1l
     596: invokevirtual #94                 // Method org/h2/mvstore/MVMap.setRootPos:(JJ)V
     599: goto          518
     602: aload_0
     603: getfield      #180                // Field lastChunk:Lorg/h2/mvstore/Chunk;
     606: ifnull        669
     609: aload_0
     610: getfield      #5                  // Field chunks:Ljava/util/concurrent/ConcurrentHashMap;
     613: invokevirtual #133                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
     616: invokeinterface #134,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     621: astore        6
     623: aload         6
     625: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     630: ifeq          669
     633: aload         6
     635: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     640: checkcast     #135                // class org/h2/mvstore/Chunk
     643: astore        7
     645: aload_0
     646: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     649: aload         7
     651: getfield      #137                // Field org/h2/mvstore/Chunk.id:I
     654: invokestatic  #222                // Method org/h2/mvstore/Chunk.getMetaKey:(I)Ljava/lang/String;
     657: aload         7
     659: invokevirtual #233                // Method org/h2/mvstore/Chunk.asString:()Ljava/lang/String;
     662: invokevirtual #116                // Method org/h2/mvstore/MVMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     665: pop
     666: goto          623
     669: aload_0
     670: lload_1
     671: putfield      #54                 // Field currentVersion:J
     674: aload_0
     675: lload_1
     676: invokespecial #182                // Method setWriteVersion:(J)V
     679: return

  private static long getRootPos(org.h2.mvstore.MVMap<java.lang.String, java.lang.String>, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #255                // Method org/h2/mvstore/MVMap.getMapRootKey:(I)Ljava/lang/String;
       5: invokevirtual #104                // Method org/h2/mvstore/MVMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #22                 // class java/lang/String
      11: astore_2
      12: aload_2
      13: ifnonnull     20
      16: lconst_0
      17: goto          24
      20: aload_2
      21: invokestatic  #111                // Method org/h2/mvstore/DataUtils.parseHexLong:(Ljava/lang/String;)J
      24: lreturn

  private void revertTemp(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field freedPageSpace:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #323                // Method java/util/concurrent/ConcurrentHashMap.entrySet:()Ljava/util/Set;
       7: invokeinterface #324,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      12: astore_3
      13: aload_3
      14: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          64
      22: aload_3
      23: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #325                // class java/util/Map$Entry
      31: astore        4
      33: aload         4
      35: invokeinterface #326,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      40: checkcast     #327                // class java/lang/Long
      43: astore        5
      45: aload         5
      47: invokevirtual #328                // Method java/lang/Long.longValue:()J
      50: lload_1
      51: lcmp
      52: ifgt          61
      55: aload_3
      56: invokeinterface #282,  1          // InterfaceMethod java/util/Iterator.remove:()V
      61: goto          13
      64: aload_0
      65: getfield      #7                  // Field maps:Ljava/util/concurrent/ConcurrentHashMap;
      68: invokevirtual #133                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      71: invokeinterface #134,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      76: astore_3
      77: aload_3
      78: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      83: ifeq          105
      86: aload_3
      87: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      92: checkcast     #50                 // class org/h2/mvstore/MVMap
      95: astore        4
      97: aload         4
      99: invokevirtual #401                // Method org/h2/mvstore/MVMap.removeUnusedOldVersions:()V
     102: goto          77
     105: return

  public long getCurrentVersion();
    Code:
       0: aload_0
       1: getfield      #54                 // Field currentVersion:J
       4: lreturn

  public org.h2.mvstore.FileStore getFileStore();
    Code:
       0: aload_0
       1: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getStoreHeader();
    Code:
       0: aload_0
       1: getfield      #10                 // Field storeHeader:Ljava/util/HashMap;
       4: areturn

  private void checkOpen();
    Code:
       0: aload_0
       1: getfield      #207                // Field closed:Z
       4: ifeq          26
       7: iconst_4
       8: ldc_w         #402                // String This store is closed
      11: iconst_1
      12: anewarray     #15                 // class java/lang/Object
      15: dup
      16: iconst_0
      17: aload_0
      18: getfield      #87                 // Field panicException:Ljava/lang/IllegalStateException;
      21: aastore
      22: invokestatic  #145                // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      25: athrow
      26: return

  public synchronized void renameMap(org.h2.mvstore.MVMap<?, ?>, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #98                 // Method checkOpen:()V
       4: aload_1
       5: aload_0
       6: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
       9: if_acmpeq     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ldc_w         #403                // String Renaming the meta map is not allowed
      20: iconst_0
      21: anewarray     #15                 // class java/lang/Object
      24: invokestatic  #129                // Method org/h2/mvstore/DataUtils.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      27: aload_1
      28: invokevirtual #254                // Method org/h2/mvstore/MVMap.getId:()I
      31: istore_3
      32: aload_0
      33: iload_3
      34: invokevirtual #404                // Method getMapName:(I)Ljava/lang/String;
      37: astore        4
      39: aload         4
      41: aload_2
      42: invokevirtual #405                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      45: ifeq          49
      48: return
      49: aload_0
      50: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
      53: new           #99                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #101                // String name.
      62: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_2
      66: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #103                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokevirtual #138                // Method org/h2/mvstore/MVMap.containsKey:(Ljava/lang/Object;)Z
      75: ifne          82
      78: iconst_1
      79: goto          83
      82: iconst_0
      83: ldc_w         #406                // String A map named {0} already exists
      86: iconst_1
      87: anewarray     #15                 // class java/lang/Object
      90: dup
      91: iconst_0
      92: aload_2
      93: aastore
      94: invokestatic  #129                // Method org/h2/mvstore/DataUtils.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      97: aload_0
      98: invokespecial #113                // Method markMetaChanged:()V
     101: iload_3
     102: invokestatic  #114                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     105: astore        5
     107: aload_0
     108: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     111: new           #99                 // class java/lang/StringBuilder
     114: dup
     115: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
     118: ldc           #101                // String name.
     120: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload         4
     125: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: invokevirtual #103                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     131: invokevirtual #241                // Method org/h2/mvstore/MVMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     134: pop
     135: aload_0
     136: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     139: iload_3
     140: invokestatic  #108                // Method org/h2/mvstore/MVMap.getMapKey:(I)Ljava/lang/String;
     143: aload_1
     144: aload_2
     145: invokevirtual #115                // Method org/h2/mvstore/MVMap.asString:(Ljava/lang/String;)Ljava/lang/String;
     148: invokevirtual #116                // Method org/h2/mvstore/MVMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     151: pop
     152: aload_0
     153: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
     156: new           #99                 // class java/lang/StringBuilder
     159: dup
     160: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
     163: ldc           #101                // String name.
     165: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: aload_2
     169: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: invokevirtual #103                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     175: aload         5
     177: invokevirtual #116                // Method org/h2/mvstore/MVMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     180: pop
     181: return

  public synchronized void removeMap(org.h2.mvstore.MVMap<?, ?>);
    Code:
       0: aload_0
       1: invokespecial #98                 // Method checkOpen:()V
       4: aload_1
       5: aload_0
       6: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
       9: if_acmpeq     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ldc_w         #407                // String Removing the meta map is not allowed
      20: iconst_0
      21: anewarray     #15                 // class java/lang/Object
      24: invokestatic  #129                // Method org/h2/mvstore/DataUtils.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      27: aload_1
      28: invokevirtual #392                // Method org/h2/mvstore/MVMap.clear:()V
      31: aload_1
      32: invokevirtual #254                // Method org/h2/mvstore/MVMap.getId:()I
      35: istore_2
      36: aload_0
      37: iload_2
      38: invokevirtual #404                // Method getMapName:(I)Ljava/lang/String;
      41: astore_3
      42: aload_0
      43: invokespecial #113                // Method markMetaChanged:()V
      46: aload_0
      47: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
      50: iload_2
      51: invokestatic  #108                // Method org/h2/mvstore/MVMap.getMapKey:(I)Ljava/lang/String;
      54: invokevirtual #241                // Method org/h2/mvstore/MVMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: aload_0
      59: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
      62: new           #99                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #101                // String name.
      71: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_3
      75: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: invokevirtual #103                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokevirtual #241                // Method org/h2/mvstore/MVMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: aload_0
      86: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
      89: iload_2
      90: invokestatic  #255                // Method org/h2/mvstore/MVMap.getMapRootKey:(I)Ljava/lang/String;
      93: invokevirtual #241                // Method org/h2/mvstore/MVMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      96: pop
      97: aload_0
      98: getfield      #7                  // Field maps:Ljava/util/concurrent/ConcurrentHashMap;
     101: iload_2
     102: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     105: invokevirtual #396                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     108: pop
     109: return

  public synchronized java.lang.String getMapName(int);
    Code:
       0: aload_0
       1: invokespecial #98                 // Method checkOpen:()V
       4: aload_0
       5: getfield      #53                 // Field meta:Lorg/h2/mvstore/MVMap;
       8: iload_1
       9: invokestatic  #108                // Method org/h2/mvstore/MVMap.getMapKey:(I)Ljava/lang/String;
      12: invokevirtual #104                // Method org/h2/mvstore/MVMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #22                 // class java/lang/String
      18: astore_2
      19: aload_2
      20: ifnonnull     27
      23: aconst_null
      24: goto          31
      27: aload_2
      28: invokestatic  #408                // Method org/h2/mvstore/DataUtils.getMapName:(Ljava/lang/String;)Ljava/lang/String;
      31: areturn

  void writeInBackground();
    Code:
       0: aload_0
       1: getfield      #207                // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokespecial #83                 // Method getTimeSinceCreation:()J
      12: lstore_1
      13: lload_1
      14: aload_0
      15: getfield      #70                 // Field lastCommitTime:J
      18: aload_0
      19: getfield      #409                // Field autoCommitDelay:I
      22: i2l
      23: ladd
      24: lcmp
      25: ifgt          29
      28: return
      29: aload_0
      30: invokevirtual #209                // Method hasUnsavedChanges:()Z
      33: ifeq          51
      36: aload_0
      37: invokespecial #210                // Method commitAndSave:()J
      40: pop2
      41: goto          51
      44: astore_3
      45: aload_0
      46: aload_3
      47: invokespecial #86                 // Method handleException:(Ljava/lang/Throwable;)V
      50: return
      51: aload_0
      52: getfield      #61                 // Field autoCompactFillRate:I
      55: ifle          141
      58: aload_0
      59: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
      62: invokevirtual #410                // Method org/h2/mvstore/FileStore.getWriteCount:()J
      65: aload_0
      66: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
      69: invokevirtual #411                // Method org/h2/mvstore/FileStore.getReadCount:()J
      72: ladd
      73: lstore        4
      75: aload_0
      76: getfield      #412                // Field autoCompactLastFileOpCount:J
      79: lload         4
      81: lcmp
      82: ifeq          90
      85: iconst_1
      86: istore_3
      87: goto          92
      90: iconst_0
      91: istore_3
      92: iload_3
      93: ifeq          105
      96: aload_0
      97: getfield      #61                 // Field autoCompactFillRate:I
     100: iconst_3
     101: idiv
     102: goto          109
     105: aload_0
     106: getfield      #61                 // Field autoCompactFillRate:I
     109: istore        6
     111: aload_0
     112: iload         6
     114: aload_0
     115: getfield      #59                 // Field autoCommitMemory:I
     118: invokevirtual #413                // Method compact:(II)Z
     121: pop
     122: aload_0
     123: aload_0
     124: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     127: invokevirtual #410                // Method org/h2/mvstore/FileStore.getWriteCount:()J
     130: aload_0
     131: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
     134: invokevirtual #411                // Method org/h2/mvstore/FileStore.getReadCount:()J
     137: ladd
     138: putfield      #412                // Field autoCompactLastFileOpCount:J
     141: goto          150
     144: astore_1
     145: aload_0
     146: aload_1
     147: invokespecial #86                 // Method handleException:(Ljava/lang/Throwable;)V
     150: return
    Exception table:
       from    to  target type
          36    41    44   Class java/lang/Throwable
           0     7   144   Class java/lang/Throwable
           8    28   144   Class java/lang/Throwable
          29    50   144   Class java/lang/Throwable
          51   141   144   Class java/lang/Throwable

  private void handleException(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #49                 // Field backgroundExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
       4: ifnull        32
       7: aload_0
       8: getfield      #49                 // Field backgroundExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
      11: aconst_null
      12: aload_1
      13: invokeinterface #414,  3          // InterfaceMethod java/lang/Thread$UncaughtExceptionHandler.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V
      18: goto          32
      21: astore_2
      22: aload_1
      23: aload_2
      24: if_acmpeq     32
      27: aload_1
      28: aload_2
      29: invokevirtual #415                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      32: return
    Exception table:
       from    to  target type
           7    18    21   Class java/lang/Throwable

  public void setCacheSize(int);
    Code:
       0: iload_1
       1: i2l
       2: ldc2_w        #31                 // long 1024l
       5: lmul
       6: ldc2_w        #31                 // long 1024l
       9: lmul
      10: lstore_2
      11: aload_0
      12: getfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
      15: ifnull        33
      18: aload_0
      19: getfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
      22: lload_2
      23: invokevirtual #416                // Method org/h2/mvstore/cache/CacheLongKeyLIRS.setMaxMemory:(J)V
      26: aload_0
      27: getfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
      30: invokevirtual #214                // Method org/h2/mvstore/cache/CacheLongKeyLIRS.clear:()V
      33: aload_0
      34: getfield      #43                 // Field cacheChunkRef:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
      37: ifnull        59
      40: aload_0
      41: getfield      #43                 // Field cacheChunkRef:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
      44: lload_2
      45: ldc2_w        #41                 // long 4l
      48: ldiv
      49: invokevirtual #416                // Method org/h2/mvstore/cache/CacheLongKeyLIRS.setMaxMemory:(J)V
      52: aload_0
      53: getfield      #43                 // Field cacheChunkRef:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
      56: invokevirtual #214                // Method org/h2/mvstore/cache/CacheLongKeyLIRS.clear:()V
      59: return

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #207                // Field closed:Z
       4: ireturn

  private void stopBackgroundThread();
    Code:
       0: aload_0
       1: getfield      #417                // Field backgroundWriterThread:Lorg/h2/mvstore/MVStore$BackgroundWriterThread;
       4: astore_1
       5: aload_1
       6: ifnonnull     10
       9: return
      10: aload_0
      11: aconst_null
      12: putfield      #417                // Field backgroundWriterThread:Lorg/h2/mvstore/MVStore$BackgroundWriterThread;
      15: invokestatic  #226                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      18: aload_1
      19: if_acmpne     23
      22: return
      23: aload_1
      24: getfield      #418                // Field org/h2/mvstore/MVStore$BackgroundWriterThread.sync:Ljava/lang/Object;
      27: dup
      28: astore_2
      29: monitorenter
      30: aload_1
      31: getfield      #418                // Field org/h2/mvstore/MVStore$BackgroundWriterThread.sync:Ljava/lang/Object;
      34: invokevirtual #419                // Method java/lang/Object.notifyAll:()V
      37: aload_2
      38: monitorexit
      39: goto          47
      42: astore_3
      43: aload_2
      44: monitorexit
      45: aload_3
      46: athrow
      47: aload_0
      48: invokestatic  #220                // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      51: ifeq          55
      54: return
      55: aload_1
      56: invokevirtual #420                // Method org/h2/mvstore/MVStore$BackgroundWriterThread.join:()V
      59: goto          63
      62: astore_2
      63: return
    Exception table:
       from    to  target type
          30    39    42   any
          42    45    42   any
          55    59    62   Class java/lang/Exception

  public void setAutoCommitDelay(int);
    Code:
       0: aload_0
       1: getfield      #409                // Field autoCommitDelay:I
       4: iload_1
       5: if_icmpne     9
       8: return
       9: aload_0
      10: iload_1
      11: putfield      #409                // Field autoCommitDelay:I
      14: aload_0
      15: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
      18: ifnull        31
      21: aload_0
      22: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
      25: invokevirtual #154                // Method org/h2/mvstore/FileStore.isReadOnly:()Z
      28: ifeq          32
      31: return
      32: aload_0
      33: invokespecial #208                // Method stopBackgroundThread:()V
      36: iload_1
      37: ifle          75
      40: iconst_1
      41: iload_1
      42: bipush        10
      44: idiv
      45: invokestatic  #275                // Method java/lang/Math.max:(II)I
      48: istore_2
      49: new           #421                // class org/h2/mvstore/MVStore$BackgroundWriterThread
      52: dup
      53: aload_0
      54: iload_2
      55: aload_0
      56: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
      59: invokevirtual #422                // Method org/h2/mvstore/FileStore.toString:()Ljava/lang/String;
      62: invokespecial #423                // Method org/h2/mvstore/MVStore$BackgroundWriterThread."<init>":(Lorg/h2/mvstore/MVStore;ILjava/lang/String;)V
      65: astore_3
      66: aload_3
      67: invokevirtual #424                // Method org/h2/mvstore/MVStore$BackgroundWriterThread.start:()V
      70: aload_0
      71: aload_3
      72: putfield      #417                // Field backgroundWriterThread:Lorg/h2/mvstore/MVStore$BackgroundWriterThread;
      75: return

  public int getAutoCommitDelay();
    Code:
       0: aload_0
       1: getfield      #409                // Field autoCommitDelay:I
       4: ireturn

  public int getAutoCommitMemory();
    Code:
       0: aload_0
       1: getfield      #59                 // Field autoCommitMemory:I
       4: ireturn

  public int getUnsavedMemory();
    Code:
       0: aload_0
       1: getfield      #231                // Field unsavedMemory:I
       4: ireturn

  void cachePage(long, org.h2.mvstore.Page, int);
    Code:
       0: aload_0
       1: getfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
       4: ifnull        19
       7: aload_0
       8: getfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
      11: lload_1
      12: aload_3
      13: iload         4
      15: invokevirtual #305                // Method org/h2/mvstore/cache/CacheLongKeyLIRS.put:(JLjava/lang/Object;I)Ljava/lang/Object;
      18: pop
      19: return

  public int getCacheSizeUsed();
    Code:
       0: aload_0
       1: getfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
      13: invokevirtual #425                // Method org/h2/mvstore/cache/CacheLongKeyLIRS.getUsedMemory:()J
      16: ldc2_w        #31                 // long 1024l
      19: ldiv
      20: ldc2_w        #31                 // long 1024l
      23: ldiv
      24: l2i
      25: ireturn

  public int getCacheSize();
    Code:
       0: aload_0
       1: getfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
      13: invokevirtual #426                // Method org/h2/mvstore/cache/CacheLongKeyLIRS.getMaxMemory:()J
      16: ldc2_w        #31                 // long 1024l
      19: ldiv
      20: ldc2_w        #31                 // long 1024l
      23: ldiv
      24: l2i
      25: ireturn

  public org.h2.mvstore.cache.CacheLongKeyLIRS<org.h2.mvstore.Page> getCache();
    Code:
       0: aload_0
       1: getfield      #40                 // Field cache:Lorg/h2/mvstore/cache/CacheLongKeyLIRS;
       4: areturn

  public boolean isReadOnly();
    Code:
       0: aload_0
       1: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
       4: ifnonnull     11
       7: iconst_0
       8: goto          18
      11: aload_0
      12: getfield      #27                 // Field fileStore:Lorg/h2/mvstore/FileStore;
      15: invokevirtual #154                // Method org/h2/mvstore/FileStore.isReadOnly:()Z
      18: ireturn

  static {};
    Code:
       0: ldc_w         #89                 // class org/h2/mvstore/MVStore
       3: invokevirtual #427                // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #339                // Field $assertionsDisabled:Z
      17: return
}
