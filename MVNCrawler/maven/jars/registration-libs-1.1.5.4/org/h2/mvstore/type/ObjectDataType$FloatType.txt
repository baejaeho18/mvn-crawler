Compiled from "ObjectDataType.java"
class org.h2.mvstore.type.ObjectDataType$FloatType extends org.h2.mvstore.type.ObjectDataType$AutoDetectDataType {
  org.h2.mvstore.type.ObjectDataType$FloatType(org.h2.mvstore.type.ObjectDataType);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        7
       4: invokespecial #1                  // Method org/h2/mvstore/type/ObjectDataType$AutoDetectDataType."<init>":(Lorg/h2/mvstore/type/ObjectDataType;I)V
       7: return

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class java/lang/Float
       4: ifeq          32
       7: aload_2
       8: instanceof    #2                  // class java/lang/Float
      11: ifeq          32
      14: aload_1
      15: checkcast     #2                  // class java/lang/Float
      18: astore_3
      19: aload_2
      20: checkcast     #2                  // class java/lang/Float
      23: astore        4
      25: aload_3
      26: aload         4
      28: invokevirtual #3                  // Method java/lang/Float.compareTo:(Ljava/lang/Float;)I
      31: ireturn
      32: aload_0
      33: aload_1
      34: aload_2
      35: invokespecial #4                  // Method org/h2/mvstore/type/ObjectDataType$AutoDetectDataType.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      38: ireturn

  public int getMemory(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class java/lang/Float
       4: ifeq          12
       7: bipush        24
       9: goto          17
      12: aload_0
      13: aload_1
      14: invokespecial #5                  // Method org/h2/mvstore/type/ObjectDataType$AutoDetectDataType.getMemory:(Ljava/lang/Object;)I
      17: ireturn

  public void write(org.h2.mvstore.WriteBuffer, java.lang.Object);
    Code:
       0: aload_2
       1: instanceof    #2                  // class java/lang/Float
       4: ifne          14
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #6                  // Method org/h2/mvstore/type/ObjectDataType$AutoDetectDataType.write:(Lorg/h2/mvstore/WriteBuffer;Ljava/lang/Object;)V
      13: return
      14: aload_2
      15: checkcast     #2                  // class java/lang/Float
      18: invokevirtual #7                  // Method java/lang/Float.floatValue:()F
      21: fstore_3
      22: fload_3
      23: invokestatic  #8                  // Method java/lang/Float.floatToIntBits:(F)I
      26: istore        4
      28: iload         4
      30: getstatic     #9                  // Field org/h2/mvstore/type/ObjectDataType.FLOAT_ZERO_BITS:I
      33: if_icmpne     46
      36: aload_1
      37: bipush        40
      39: invokevirtual #10                 // Method org/h2/mvstore/WriteBuffer.put:(B)Lorg/h2/mvstore/WriteBuffer;
      42: pop
      43: goto          109
      46: iload         4
      48: getstatic     #11                 // Field org/h2/mvstore/type/ObjectDataType.FLOAT_ONE_BITS:I
      51: if_icmpne     64
      54: aload_1
      55: bipush        41
      57: invokevirtual #10                 // Method org/h2/mvstore/WriteBuffer.put:(B)Lorg/h2/mvstore/WriteBuffer;
      60: pop
      61: goto          109
      64: iload         4
      66: invokestatic  #12                 // Method java/lang/Integer.reverse:(I)I
      69: istore        5
      71: iload         5
      73: iflt          98
      76: iload         5
      78: ldc           #13                 // int 2097151
      80: if_icmpgt     98
      83: aload_1
      84: bipush        7
      86: invokevirtual #10                 // Method org/h2/mvstore/WriteBuffer.put:(B)Lorg/h2/mvstore/WriteBuffer;
      89: iload         5
      91: invokevirtual #14                 // Method org/h2/mvstore/WriteBuffer.putVarInt:(I)Lorg/h2/mvstore/WriteBuffer;
      94: pop
      95: goto          109
      98: aload_1
      99: bipush        42
     101: invokevirtual #10                 // Method org/h2/mvstore/WriteBuffer.put:(B)Lorg/h2/mvstore/WriteBuffer;
     104: fload_3
     105: invokevirtual #15                 // Method org/h2/mvstore/WriteBuffer.putFloat:(F)Lorg/h2/mvstore/WriteBuffer;
     108: pop
     109: return

  public java.lang.Object read(java.nio.ByteBuffer, int);
    Code:
       0: iload_2
       1: tableswitch   { // 40 to 42
                    40: 28
                    41: 33
                    42: 38
               default: 46
          }
      28: fconst_0
      29: invokestatic  #16                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      32: areturn
      33: fconst_1
      34: invokestatic  #16                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      37: areturn
      38: aload_1
      39: invokevirtual #17                 // Method java/nio/ByteBuffer.getFloat:()F
      42: invokestatic  #16                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      45: areturn
      46: aload_1
      47: invokestatic  #18                 // Method org/h2/mvstore/DataUtils.readVarInt:(Ljava/nio/ByteBuffer;)I
      50: invokestatic  #12                 // Method java/lang/Integer.reverse:(I)I
      53: invokestatic  #19                 // Method java/lang/Float.intBitsToFloat:(I)F
      56: invokestatic  #16                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      59: areturn
}
