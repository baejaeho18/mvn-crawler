Compiled from "MVStoreTool.java"
class org.h2.mvstore.MVStoreTool$GenericDataType implements org.h2.mvstore.type.DataType {
  org.h2.mvstore.MVStoreTool$GenericDataType();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: ldc           #2                  // String Can not compare
       2: invokestatic  #3                  // Method org/h2/mvstore/DataUtils.newUnsupportedOperationException:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       5: athrow

  public int getMemory(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: iconst_0
       5: goto          19
       8: aload_1
       9: checkcast     #4                  // class "[B"
      12: checkcast     #4                  // class "[B"
      15: arraylength
      16: bipush        8
      18: imul
      19: ireturn

  public void write(org.h2.mvstore.WriteBuffer, java.lang.Object);
    Code:
       0: aload_2
       1: ifnull        16
       4: aload_1
       5: aload_2
       6: checkcast     #4                  // class "[B"
       9: checkcast     #4                  // class "[B"
      12: invokevirtual #5                  // Method org/h2/mvstore/WriteBuffer.put:([B)Lorg/h2/mvstore/WriteBuffer;
      15: pop
      16: return

  public void write(org.h2.mvstore.WriteBuffer, java.lang.Object[], int, boolean);
    Code:
       0: aload_2
       1: astore        5
       3: aload         5
       5: arraylength
       6: istore        6
       8: iconst_0
       9: istore        7
      11: iload         7
      13: iload         6
      15: if_icmpge     38
      18: aload         5
      20: iload         7
      22: aaload
      23: astore        8
      25: aload_0
      26: aload_1
      27: aload         8
      29: invokevirtual #6                  // Method write:(Lorg/h2/mvstore/WriteBuffer;Ljava/lang/Object;)V
      32: iinc          7, 1
      35: goto          11
      38: return

  public java.lang.Object read(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
       4: istore_2
       5: iload_2
       6: ifne          11
       9: aconst_null
      10: areturn
      11: iload_2
      12: newarray       byte
      14: astore_3
      15: aload_1
      16: aload_3
      17: invokevirtual #8                  // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      20: pop
      21: aload_3
      22: areturn

  public void read(java.nio.ByteBuffer, java.lang.Object[], int, boolean);
    Code:
       0: iconst_0
       1: istore        5
       3: iload         5
       5: aload_2
       6: arraylength
       7: if_icmpge     25
      10: aload_2
      11: iload         5
      13: aload_0
      14: aload_1
      15: invokevirtual #9                  // Method read:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
      18: aastore
      19: iinc          5, 1
      22: goto          3
      25: return
}
