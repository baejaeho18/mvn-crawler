Compiled from "TransactionStore.java"
class org.h2.mvstore.db.TransactionStore$TransactionMap$1 implements java.util.Iterator<K> {
  private K currentKey;

  private org.h2.mvstore.Cursor<K, org.h2.mvstore.db.TransactionStore$VersionedValue> cursor;

  final java.lang.Object val$from;

  final boolean val$includeUncommitted;

  final org.h2.mvstore.db.TransactionStore$TransactionMap this$0;

  org.h2.mvstore.db.TransactionStore$TransactionMap$1(org.h2.mvstore.db.TransactionStore$TransactionMap, java.lang.Object, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/h2/mvstore/db/TransactionStore$TransactionMap;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$from:Ljava/lang/Object;
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field val$includeUncommitted:Z
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: aload_0
      20: aload_0
      21: getfield      #2                  // Field val$from:Ljava/lang/Object;
      24: putfield      #5                  // Field currentKey:Ljava/lang/Object;
      27: aload_0
      28: aload_0
      29: getfield      #1                  // Field this$0:Lorg/h2/mvstore/db/TransactionStore$TransactionMap;
      32: getfield      #6                  // Field org/h2/mvstore/db/TransactionStore$TransactionMap.map:Lorg/h2/mvstore/MVMap;
      35: aload_0
      36: getfield      #5                  // Field currentKey:Ljava/lang/Object;
      39: invokevirtual #7                  // Method org/h2/mvstore/MVMap.cursor:(Ljava/lang/Object;)Lorg/h2/mvstore/Cursor;
      42: putfield      #8                  // Field cursor:Lorg/h2/mvstore/Cursor;
      45: aload_0
      46: invokespecial #9                  // Method fetchNext:()V
      49: return

  private void fetchNext();
    Code:
       0: aload_0
       1: getfield      #8                  // Field cursor:Lorg/h2/mvstore/Cursor;
       4: invokevirtual #10                 // Method org/h2/mvstore/Cursor.hasNext:()Z
       7: ifeq          127
      10: aload_0
      11: getfield      #8                  // Field cursor:Lorg/h2/mvstore/Cursor;
      14: invokevirtual #11                 // Method org/h2/mvstore/Cursor.next:()Ljava/lang/Object;
      17: astore_1
      18: goto          99
      21: astore_2
      22: aload_2
      23: invokevirtual #13                 // Method java/lang/IllegalStateException.getMessage:()Ljava/lang/String;
      26: invokestatic  #14                 // Method org/h2/mvstore/DataUtils.getErrorCode:(Ljava/lang/String;)I
      29: bipush        9
      31: if_icmpne     97
      34: aload_0
      35: aload_0
      36: getfield      #1                  // Field this$0:Lorg/h2/mvstore/db/TransactionStore$TransactionMap;
      39: getfield      #6                  // Field org/h2/mvstore/db/TransactionStore$TransactionMap.map:Lorg/h2/mvstore/MVMap;
      42: aload_0
      43: getfield      #5                  // Field currentKey:Ljava/lang/Object;
      46: invokevirtual #7                  // Method org/h2/mvstore/MVMap.cursor:(Ljava/lang/Object;)Lorg/h2/mvstore/Cursor;
      49: putfield      #8                  // Field cursor:Lorg/h2/mvstore/Cursor;
      52: aload_0
      53: getfield      #8                  // Field cursor:Lorg/h2/mvstore/Cursor;
      56: invokevirtual #10                 // Method org/h2/mvstore/Cursor.hasNext:()Z
      59: ifne          65
      62: goto          127
      65: aload_0
      66: getfield      #8                  // Field cursor:Lorg/h2/mvstore/Cursor;
      69: invokevirtual #11                 // Method org/h2/mvstore/Cursor.next:()Ljava/lang/Object;
      72: pop
      73: aload_0
      74: getfield      #8                  // Field cursor:Lorg/h2/mvstore/Cursor;
      77: invokevirtual #10                 // Method org/h2/mvstore/Cursor.hasNext:()Z
      80: ifne          86
      83: goto          127
      86: aload_0
      87: getfield      #8                  // Field cursor:Lorg/h2/mvstore/Cursor;
      90: invokevirtual #11                 // Method org/h2/mvstore/Cursor.next:()Ljava/lang/Object;
      93: astore_1
      94: goto          99
      97: aload_2
      98: athrow
      99: aload_0
     100: aload_1
     101: putfield      #5                  // Field currentKey:Ljava/lang/Object;
     104: aload_0
     105: getfield      #3                  // Field val$includeUncommitted:Z
     108: ifeq          112
     111: return
     112: aload_0
     113: getfield      #1                  // Field this$0:Lorg/h2/mvstore/db/TransactionStore$TransactionMap;
     116: aload_1
     117: invokevirtual #15                 // Method org/h2/mvstore/db/TransactionStore$TransactionMap.containsKey:(Ljava/lang/Object;)Z
     120: ifeq          124
     123: return
     124: goto          0
     127: aload_0
     128: aconst_null
     129: putfield      #5                  // Field currentKey:Ljava/lang/Object;
     132: return
    Exception table:
       from    to  target type
          10    18    21   Class java/lang/IllegalStateException

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #5                  // Field currentKey:Ljava/lang/Object;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public K next();
    Code:
       0: aload_0
       1: getfield      #5                  // Field currentKey:Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: invokespecial #9                  // Method fetchNext:()V
       9: aload_1
      10: areturn

  public void remove();
    Code:
       0: ldc           #16                 // String Removing is not supported
       2: invokestatic  #17                 // Method org/h2/mvstore/DataUtils.newUnsupportedOperationException:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       5: athrow
}
