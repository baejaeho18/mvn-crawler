Compiled from "TransactionStore.java"
public class org.h2.mvstore.db.TransactionStore$TransactionMap<K, V> {
  final int mapId;

  long readLogId;

  final org.h2.mvstore.MVMap<K, org.h2.mvstore.db.TransactionStore$VersionedValue> map;

  final org.h2.mvstore.db.TransactionStore$Transaction transaction;

  org.h2.mvstore.db.TransactionStore$TransactionMap(org.h2.mvstore.db.TransactionStore$Transaction, org.h2.mvstore.MVMap<K, org.h2.mvstore.db.TransactionStore$VersionedValue>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #2                  // long 9223372036854775807l
       8: putfield      #4                  // Field readLogId:J
      11: aload_0
      12: aload_1
      13: putfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
      16: aload_0
      17: aload_2
      18: putfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
      21: aload_0
      22: iload_3
      23: putfield      #7                  // Field mapId:I
      26: return

  public void setSavepoint(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #4                  // Field readLogId:J
       5: return

  public org.h2.mvstore.db.TransactionStore$TransactionMap<K, V> getInstance(org.h2.mvstore.db.TransactionStore$Transaction, long);
    Code:
       0: new           #8                  // class org/h2/mvstore/db/TransactionStore$TransactionMap
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
       9: aload_0
      10: getfield      #7                  // Field mapId:I
      13: invokespecial #9                  // Method "<init>":(Lorg/h2/mvstore/db/TransactionStore$Transaction;Lorg/h2/mvstore/MVMap;I)V
      16: astore        4
      18: aload         4
      20: lload_2
      21: invokevirtual #10                 // Method setSavepoint:(J)V
      24: aload         4
      26: areturn

  public long sizeAsLongMax();
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
       4: invokevirtual #11                 // Method org/h2/mvstore/MVMap.sizeAsLong:()J
       7: lreturn

  public long sizeAsLong();
    Code:
       0: aload_0
       1: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
       4: getfield      #12                 // Field org/h2/mvstore/db/TransactionStore$Transaction.store:Lorg/h2/mvstore/db/TransactionStore;
       7: getfield      #13                 // Field org/h2/mvstore/db/TransactionStore.rwLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      10: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      13: invokevirtual #15                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      16: aload_0
      17: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
      20: invokevirtual #11                 // Method org/h2/mvstore/MVMap.sizeAsLong:()J
      23: lstore_1
      24: aload_0
      25: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
      28: getfield      #12                 // Field org/h2/mvstore/db/TransactionStore$Transaction.store:Lorg/h2/mvstore/db/TransactionStore;
      31: getfield      #16                 // Field org/h2/mvstore/db/TransactionStore.undoLog:Lorg/h2/mvstore/MVMap;
      34: astore_3
      35: aload_3
      36: dup
      37: astore        6
      39: monitorenter
      40: aload_3
      41: invokevirtual #11                 // Method org/h2/mvstore/MVMap.sizeAsLong:()J
      44: lstore        4
      46: aload         6
      48: monitorexit
      49: goto          60
      52: astore        7
      54: aload         6
      56: monitorexit
      57: aload         7
      59: athrow
      60: lload         4
      62: lconst_0
      63: lcmp
      64: ifne          89
      67: lload_1
      68: lstore        6
      70: aload_0
      71: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
      74: getfield      #12                 // Field org/h2/mvstore/db/TransactionStore$Transaction.store:Lorg/h2/mvstore/db/TransactionStore;
      77: getfield      #13                 // Field org/h2/mvstore/db/TransactionStore.rwLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      80: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      83: invokevirtual #17                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      86: lload         6
      88: lreturn
      89: lload         4
      91: lload_1
      92: lcmp
      93: ifle          197
      96: lconst_0
      97: lstore        6
      99: aload_0
     100: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
     103: aconst_null
     104: invokevirtual #18                 // Method org/h2/mvstore/MVMap.cursor:(Ljava/lang/Object;)Lorg/h2/mvstore/Cursor;
     107: astore        8
     109: aload         8
     111: invokevirtual #19                 // Method org/h2/mvstore/Cursor.hasNext:()Z
     114: ifeq          174
     117: aload         8
     119: invokevirtual #20                 // Method org/h2/mvstore/Cursor.next:()Ljava/lang/Object;
     122: astore        9
     124: aload_0
     125: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
     128: aload         9
     130: invokevirtual #21                 // Method org/h2/mvstore/MVMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     133: checkcast     #22                 // class org/h2/mvstore/db/TransactionStore$VersionedValue
     136: astore        10
     138: aload_0
     139: aload         9
     141: aload_0
     142: getfield      #4                  // Field readLogId:J
     145: aload         10
     147: invokevirtual #23                 // Method getValue:(Ljava/lang/Object;JLorg/h2/mvstore/db/TransactionStore$VersionedValue;)Lorg/h2/mvstore/db/TransactionStore$VersionedValue;
     150: astore        10
     152: aload         10
     154: ifnull        171
     157: aload         10
     159: getfield      #24                 // Field org/h2/mvstore/db/TransactionStore$VersionedValue.value:Ljava/lang/Object;
     162: ifnull        171
     165: lload         6
     167: lconst_1
     168: ladd
     169: lstore        6
     171: goto          109
     174: lload         6
     176: lstore        9
     178: aload_0
     179: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
     182: getfield      #12                 // Field org/h2/mvstore/db/TransactionStore$Transaction.store:Lorg/h2/mvstore/db/TransactionStore;
     185: getfield      #13                 // Field org/h2/mvstore/db/TransactionStore.rwLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     188: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     191: invokevirtual #17                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     194: lload         9
     196: lreturn
     197: aload_3
     198: dup
     199: astore        6
     201: monitorenter
     202: aload_0
     203: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
     206: invokevirtual #11                 // Method org/h2/mvstore/MVMap.sizeAsLong:()J
     209: lstore        7
     211: aload_0
     212: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
     215: getfield      #12                 // Field org/h2/mvstore/db/TransactionStore$Transaction.store:Lorg/h2/mvstore/db/TransactionStore;
     218: invokevirtual #25                 // Method org/h2/mvstore/db/TransactionStore.createTempMap:()Lorg/h2/mvstore/MVMap;
     221: astore        9
     223: aload_3
     224: invokevirtual #26                 // Method org/h2/mvstore/MVMap.entrySet:()Ljava/util/Set;
     227: invokeinterface #27,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     232: astore        10
     234: aload         10
     236: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     241: ifeq          337
     244: aload         10
     246: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     251: checkcast     #30                 // class java/util/Map$Entry
     254: astore        11
     256: aload         11
     258: invokeinterface #31,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     263: checkcast     #32                 // class "[Ljava/lang/Object;"
     266: astore        12
     268: aload         12
     270: iconst_0
     271: aaload
     272: checkcast     #33                 // class java/lang/Integer
     275: invokevirtual #34                 // Method java/lang/Integer.intValue:()I
     278: istore        13
     280: iload         13
     282: aload_0
     283: getfield      #7                  // Field mapId:I
     286: if_icmpeq     292
     289: goto          234
     292: aload         12
     294: iconst_1
     295: aaload
     296: astore        14
     298: aload_0
     299: aload         14
     301: invokevirtual #35                 // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
     304: ifnonnull     334
     307: aload         9
     309: aload         14
     311: iconst_1
     312: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     315: invokevirtual #37                 // Method org/h2/mvstore/MVMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     318: checkcast     #33                 // class java/lang/Integer
     321: astore        15
     323: aload         15
     325: ifnonnull     334
     328: lload         7
     330: lconst_1
     331: lsub
     332: lstore        7
     334: goto          234
     337: aload_0
     338: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
     341: getfield      #12                 // Field org/h2/mvstore/db/TransactionStore$Transaction.store:Lorg/h2/mvstore/db/TransactionStore;
     344: getfield      #38                 // Field org/h2/mvstore/db/TransactionStore.store:Lorg/h2/mvstore/MVStore;
     347: aload         9
     349: invokevirtual #39                 // Method org/h2/mvstore/MVStore.removeMap:(Lorg/h2/mvstore/MVMap;)V
     352: goto          375
     355: astore        16
     357: aload_0
     358: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
     361: getfield      #12                 // Field org/h2/mvstore/db/TransactionStore$Transaction.store:Lorg/h2/mvstore/db/TransactionStore;
     364: getfield      #38                 // Field org/h2/mvstore/db/TransactionStore.store:Lorg/h2/mvstore/MVStore;
     367: aload         9
     369: invokevirtual #39                 // Method org/h2/mvstore/MVStore.removeMap:(Lorg/h2/mvstore/MVMap;)V
     372: aload         16
     374: athrow
     375: lload         7
     377: lstore        10
     379: aload         6
     381: monitorexit
     382: aload_0
     383: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
     386: getfield      #12                 // Field org/h2/mvstore/db/TransactionStore$Transaction.store:Lorg/h2/mvstore/db/TransactionStore;
     389: getfield      #13                 // Field org/h2/mvstore/db/TransactionStore.rwLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     392: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     395: invokevirtual #17                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     398: lload         10
     400: lreturn
     401: astore        17
     403: aload         6
     405: monitorexit
     406: aload         17
     408: athrow
     409: astore        18
     411: aload_0
     412: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
     415: getfield      #12                 // Field org/h2/mvstore/db/TransactionStore$Transaction.store:Lorg/h2/mvstore/db/TransactionStore;
     418: getfield      #13                 // Field org/h2/mvstore/db/TransactionStore.rwLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     421: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     424: invokevirtual #17                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     427: aload         18
     429: athrow
    Exception table:
       from    to  target type
          40    49    52   any
          52    57    52   any
         223   337   355   any
         355   357   355   any
         202   382   401   any
         401   406   401   any
          16    70   409   any
          89   178   409   any
         197   382   409   any
         401   411   409   any

  public V remove(K);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #40                 // Method set:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public V put(K, V);
    Code:
       0: aload_2
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #41                 // String The value may not be null
      11: iconst_0
      12: anewarray     #42                 // class java/lang/Object
      15: invokestatic  #43                 // Method org/h2/mvstore/DataUtils.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      18: aload_0
      19: aload_1
      20: aload_2
      21: invokespecial #40                 // Method set:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: areturn

  public V putCommitted(K, V);
    Code:
       0: aload_2
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #41                 // String The value may not be null
      11: iconst_0
      12: anewarray     #42                 // class java/lang/Object
      15: invokestatic  #43                 // Method org/h2/mvstore/DataUtils.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      18: new           #22                 // class org/h2/mvstore/db/TransactionStore$VersionedValue
      21: dup
      22: lconst_0
      23: aload_2
      24: invokespecial #44                 // Method org/h2/mvstore/db/TransactionStore$VersionedValue."<init>":(JLjava/lang/Object;)V
      27: astore_3
      28: aload_0
      29: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
      32: aload_1
      33: aload_3
      34: invokevirtual #37                 // Method org/h2/mvstore/MVMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #22                 // class org/h2/mvstore/db/TransactionStore$VersionedValue
      40: astore        4
      42: aload         4
      44: ifnonnull     51
      47: aconst_null
      48: goto          56
      51: aload         4
      53: getfield      #24                 // Field org/h2/mvstore/db/TransactionStore$VersionedValue.value:Ljava/lang/Object;
      56: areturn

  private V set(K, V);
    Code:
       0: aload_0
       1: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
       4: invokevirtual #45                 // Method org/h2/mvstore/db/TransactionStore$Transaction.checkNotClosed:()V
       7: aload_0
       8: aload_1
       9: invokevirtual #35                 // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: astore_3
      13: aload_0
      14: aload_1
      15: aload_2
      16: iconst_0
      17: invokevirtual #46                 // Method trySet:(Ljava/lang/Object;Ljava/lang/Object;Z)Z
      20: istore        4
      22: iload         4
      24: ifeq          29
      27: aload_3
      28: areturn
      29: bipush        101
      31: ldc           #47                 // String Entry is locked
      33: iconst_0
      34: anewarray     #42                 // class java/lang/Object
      37: invokestatic  #48                 // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      40: athrow

  public boolean tryRemove(K);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: iconst_0
       4: invokevirtual #46                 // Method trySet:(Ljava/lang/Object;Ljava/lang/Object;Z)Z
       7: ireturn

  public boolean tryPut(K, V);
    Code:
       0: aload_2
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #41                 // String The value may not be null
      11: iconst_0
      12: anewarray     #42                 // class java/lang/Object
      15: invokestatic  #43                 // Method org/h2/mvstore/DataUtils.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      18: aload_0
      19: aload_1
      20: aload_2
      21: iconst_0
      22: invokevirtual #46                 // Method trySet:(Ljava/lang/Object;Ljava/lang/Object;Z)Z
      25: ireturn

  public boolean trySet(K, V, boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
       4: aload_1
       5: invokevirtual #21                 // Method org/h2/mvstore/MVMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #22                 // class org/h2/mvstore/db/TransactionStore$VersionedValue
      11: astore        4
      13: iload_3
      14: ifeq          88
      17: aload_0
      18: aload_1
      19: aload_0
      20: getfield      #4                  // Field readLogId:J
      23: invokespecial #49                 // Method getValue:(Ljava/lang/Object;J)Lorg/h2/mvstore/db/TransactionStore$VersionedValue;
      26: astore        5
      28: aload_0
      29: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
      32: aload         5
      34: aload         4
      36: invokevirtual #50                 // Method org/h2/mvstore/MVMap.areValuesEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      39: ifne          88
      42: aload         4
      44: getfield      #51                 // Field org/h2/mvstore/db/TransactionStore$VersionedValue.operationId:J
      47: invokestatic  #52                 // Method org/h2/mvstore/db/TransactionStore.getTransactionId:(J)I
      50: i2l
      51: lstore        6
      53: lload         6
      55: aload_0
      56: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
      59: getfield      #53                 // Field org/h2/mvstore/db/TransactionStore$Transaction.transactionId:I
      62: i2l
      63: lcmp
      64: ifne          86
      67: aload_2
      68: ifnonnull     73
      71: iconst_1
      72: ireturn
      73: aload         4
      75: getfield      #24                 // Field org/h2/mvstore/db/TransactionStore$VersionedValue.value:Ljava/lang/Object;
      78: ifnonnull     84
      81: goto          88
      84: iconst_0
      85: ireturn
      86: iconst_0
      87: ireturn
      88: new           #22                 // class org/h2/mvstore/db/TransactionStore$VersionedValue
      91: dup
      92: aload_0
      93: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
      96: getfield      #53                 // Field org/h2/mvstore/db/TransactionStore$Transaction.transactionId:I
      99: aload_0
     100: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
     103: getfield      #54                 // Field org/h2/mvstore/db/TransactionStore$Transaction.logId:J
     106: invokestatic  #55                 // Method org/h2/mvstore/db/TransactionStore.getOperationId:(IJ)J
     109: aload_2
     110: invokespecial #44                 // Method org/h2/mvstore/db/TransactionStore$VersionedValue."<init>":(JLjava/lang/Object;)V
     113: astore        5
     115: aload         4
     117: ifnonnull     165
     120: aload_0
     121: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
     124: aload_0
     125: getfield      #7                  // Field mapId:I
     128: aload_1
     129: aload         4
     131: invokevirtual #56                 // Method org/h2/mvstore/db/TransactionStore$Transaction.log:(ILjava/lang/Object;Ljava/lang/Object;)V
     134: aload_0
     135: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
     138: aload_1
     139: aload         5
     141: invokevirtual #57                 // Method org/h2/mvstore/MVMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     144: checkcast     #22                 // class org/h2/mvstore/db/TransactionStore$VersionedValue
     147: astore        6
     149: aload         6
     151: ifnull        163
     154: aload_0
     155: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
     158: invokevirtual #58                 // Method org/h2/mvstore/db/TransactionStore$Transaction.logUndo:()V
     161: iconst_0
     162: ireturn
     163: iconst_1
     164: ireturn
     165: aload         4
     167: getfield      #51                 // Field org/h2/mvstore/db/TransactionStore$VersionedValue.operationId:J
     170: lstore        6
     172: lload         6
     174: lconst_0
     175: lcmp
     176: ifne          219
     179: aload_0
     180: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
     183: aload_0
     184: getfield      #7                  // Field mapId:I
     187: aload_1
     188: aload         4
     190: invokevirtual #56                 // Method org/h2/mvstore/db/TransactionStore$Transaction.log:(ILjava/lang/Object;Ljava/lang/Object;)V
     193: aload_0
     194: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
     197: aload_1
     198: aload         4
     200: aload         5
     202: invokevirtual #59                 // Method org/h2/mvstore/MVMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     205: ifne          217
     208: aload_0
     209: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
     212: invokevirtual #58                 // Method org/h2/mvstore/db/TransactionStore$Transaction.logUndo:()V
     215: iconst_0
     216: ireturn
     217: iconst_1
     218: ireturn
     219: aload         4
     221: getfield      #51                 // Field org/h2/mvstore/db/TransactionStore$VersionedValue.operationId:J
     224: invokestatic  #52                 // Method org/h2/mvstore/db/TransactionStore.getTransactionId:(J)I
     227: istore        8
     229: iload         8
     231: aload_0
     232: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
     235: getfield      #53                 // Field org/h2/mvstore/db/TransactionStore$Transaction.transactionId:I
     238: if_icmpne     281
     241: aload_0
     242: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
     245: aload_0
     246: getfield      #7                  // Field mapId:I
     249: aload_1
     250: aload         4
     252: invokevirtual #56                 // Method org/h2/mvstore/db/TransactionStore$Transaction.log:(ILjava/lang/Object;Ljava/lang/Object;)V
     255: aload_0
     256: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
     259: aload_1
     260: aload         4
     262: aload         5
     264: invokevirtual #59                 // Method org/h2/mvstore/MVMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     267: ifne          279
     270: aload_0
     271: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
     274: invokevirtual #58                 // Method org/h2/mvstore/db/TransactionStore$Transaction.logUndo:()V
     277: iconst_0
     278: ireturn
     279: iconst_1
     280: ireturn
     281: iconst_0
     282: ireturn

  public V get(K);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #4                  // Field readLogId:J
       6: invokevirtual #60                 // Method get:(Ljava/lang/Object;J)Ljava/lang/Object;
       9: areturn

  public V getLatest(K);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #2                  // long 9223372036854775807l
       5: invokevirtual #60                 // Method get:(Ljava/lang/Object;J)Ljava/lang/Object;
       8: areturn

  public boolean containsKey(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #35                 // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public V get(K, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokespecial #49                 // Method getValue:(Ljava/lang/Object;J)Lorg/h2/mvstore/db/TransactionStore$VersionedValue;
       6: astore        4
       8: aload         4
      10: ifnonnull     17
      13: aconst_null
      14: goto          22
      17: aload         4
      19: getfield      #24                 // Field org/h2/mvstore/db/TransactionStore$VersionedValue.value:Ljava/lang/Object;
      22: areturn

  public boolean isSameTransaction(K);
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
       4: aload_1
       5: invokevirtual #21                 // Method org/h2/mvstore/MVMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #22                 // class org/h2/mvstore/db/TransactionStore$VersionedValue
      11: astore_2
      12: aload_2
      13: ifnonnull     18
      16: iconst_0
      17: ireturn
      18: aload_2
      19: getfield      #51                 // Field org/h2/mvstore/db/TransactionStore$VersionedValue.operationId:J
      22: invokestatic  #52                 // Method org/h2/mvstore/db/TransactionStore.getTransactionId:(J)I
      25: istore_3
      26: iload_3
      27: aload_0
      28: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
      31: getfield      #53                 // Field org/h2/mvstore/db/TransactionStore$Transaction.transactionId:I
      34: if_icmpne     41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  private org.h2.mvstore.db.TransactionStore$VersionedValue getValue(K, long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
       4: getfield      #12                 // Field org/h2/mvstore/db/TransactionStore$Transaction.store:Lorg/h2/mvstore/db/TransactionStore;
       7: getfield      #13                 // Field org/h2/mvstore/db/TransactionStore.rwLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      10: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      13: invokevirtual #15                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      16: aload_0
      17: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
      20: aload_1
      21: invokevirtual #21                 // Method org/h2/mvstore/MVMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #22                 // class org/h2/mvstore/db/TransactionStore$VersionedValue
      27: astore        4
      29: aload_0
      30: aload_1
      31: lload_2
      32: aload         4
      34: invokevirtual #23                 // Method getValue:(Ljava/lang/Object;JLorg/h2/mvstore/db/TransactionStore$VersionedValue;)Lorg/h2/mvstore/db/TransactionStore$VersionedValue;
      37: astore        5
      39: aload_0
      40: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
      43: getfield      #12                 // Field org/h2/mvstore/db/TransactionStore$Transaction.store:Lorg/h2/mvstore/db/TransactionStore;
      46: getfield      #13                 // Field org/h2/mvstore/db/TransactionStore.rwLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      49: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      52: invokevirtual #17                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      55: aload         5
      57: areturn
      58: astore        6
      60: aload_0
      61: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
      64: getfield      #12                 // Field org/h2/mvstore/db/TransactionStore$Transaction.store:Lorg/h2/mvstore/db/TransactionStore;
      67: getfield      #13                 // Field org/h2/mvstore/db/TransactionStore.rwLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      70: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      73: invokevirtual #17                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      76: aload         6
      78: athrow
    Exception table:
       from    to  target type
          16    39    58   any
          58    60    58   any

  org.h2.mvstore.db.TransactionStore$VersionedValue getValue(K, long, org.h2.mvstore.db.TransactionStore$VersionedValue);
    Code:
       0: aload         4
       2: ifnonnull     7
       5: aconst_null
       6: areturn
       7: aload         4
       9: getfield      #51                 // Field org/h2/mvstore/db/TransactionStore$VersionedValue.operationId:J
      12: lstore        5
      14: lload         5
      16: lconst_0
      17: lcmp
      18: ifne          24
      21: aload         4
      23: areturn
      24: lload         5
      26: invokestatic  #52                 // Method org/h2/mvstore/db/TransactionStore.getTransactionId:(J)I
      29: istore        7
      31: iload         7
      33: aload_0
      34: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
      37: getfield      #53                 // Field org/h2/mvstore/db/TransactionStore$Transaction.transactionId:I
      40: if_icmpne     56
      43: lload         5
      45: invokestatic  #61                 // Method org/h2/mvstore/db/TransactionStore.getLogId:(J)J
      48: lload_2
      49: lcmp
      50: ifge          56
      53: aload         4
      55: areturn
      56: aload_0
      57: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
      60: getfield      #12                 // Field org/h2/mvstore/db/TransactionStore$Transaction.store:Lorg/h2/mvstore/db/TransactionStore;
      63: getfield      #16                 // Field org/h2/mvstore/db/TransactionStore.undoLog:Lorg/h2/mvstore/MVMap;
      66: lload         5
      68: invokestatic  #62                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      71: invokevirtual #21                 // Method org/h2/mvstore/MVMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      74: checkcast     #32                 // class "[Ljava/lang/Object;"
      77: astore        8
      79: aload         8
      81: ifnonnull     118
      84: aload_0
      85: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
      88: getfield      #12                 // Field org/h2/mvstore/db/TransactionStore$Transaction.store:Lorg/h2/mvstore/db/TransactionStore;
      91: getfield      #38                 // Field org/h2/mvstore/db/TransactionStore.store:Lorg/h2/mvstore/MVStore;
      94: invokevirtual #63                 // Method org/h2/mvstore/MVStore.isReadOnly:()Z
      97: ifeq          102
     100: aconst_null
     101: areturn
     102: aload_0
     103: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
     106: aload_1
     107: invokevirtual #21                 // Method org/h2/mvstore/MVMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     110: checkcast     #22                 // class org/h2/mvstore/db/TransactionStore$VersionedValue
     113: astore        4
     115: goto          127
     118: aload         8
     120: iconst_2
     121: aaload
     122: checkcast     #22                 // class org/h2/mvstore/db/TransactionStore$VersionedValue
     125: astore        4
     127: goto          0

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
       4: invokevirtual #64                 // Method org/h2/mvstore/MVMap.isClosed:()Z
       7: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
       4: invokevirtual #65                 // Method org/h2/mvstore/MVMap.clear:()V
       7: return

  public K firstKey();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #66                 // Method keyIterator:(Ljava/lang/Object;)Ljava/util/Iterator;
       5: astore_1
       6: aload_1
       7: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      12: ifeq          24
      15: aload_1
      16: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      21: goto          25
      24: aconst_null
      25: areturn

  public K lastKey();
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
       4: invokevirtual #67                 // Method org/h2/mvstore/MVMap.lastKey:()Ljava/lang/Object;
       7: astore_1
       8: aload_1
       9: ifnull        32
      12: aload_0
      13: aload_1
      14: invokevirtual #35                 // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: ifnonnull     32
      20: aload_0
      21: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
      24: aload_1
      25: invokevirtual #68                 // Method org/h2/mvstore/MVMap.lowerKey:(Ljava/lang/Object;)Ljava/lang/Object;
      28: astore_1
      29: goto          8
      32: aload_1
      33: areturn

  public K higherKey(K);
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
       4: aload_1
       5: invokevirtual #69                 // Method org/h2/mvstore/MVMap.higherKey:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore_1
       9: aload_1
      10: ifnull        21
      13: aload_0
      14: aload_1
      15: invokevirtual #35                 // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: ifnull        0
      21: aload_1
      22: areturn

  public K ceilingKey(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #66                 // Method keyIterator:(Ljava/lang/Object;)Ljava/util/Iterator;
       5: astore_2
       6: aload_2
       7: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      12: ifeq          24
      15: aload_2
      16: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      21: goto          25
      24: aconst_null
      25: areturn

  public K relativeKey(K, long);
    Code:
       0: lload_2
       1: lconst_0
       2: lcmp
       3: ifle          17
       6: aload_0
       7: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
      10: aload_1
      11: invokevirtual #70                 // Method org/h2/mvstore/MVMap.ceilingKey:(Ljava/lang/Object;)Ljava/lang/Object;
      14: goto          25
      17: aload_0
      18: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
      21: aload_1
      22: invokevirtual #71                 // Method org/h2/mvstore/MVMap.floorKey:(Ljava/lang/Object;)Ljava/lang/Object;
      25: astore        4
      27: aload         4
      29: ifnonnull     35
      32: aload         4
      34: areturn
      35: aload_0
      36: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
      39: aload         4
      41: invokevirtual #72                 // Method org/h2/mvstore/MVMap.getKeyIndex:(Ljava/lang/Object;)J
      44: lstore        5
      46: aload_0
      47: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
      50: lload         5
      52: lload_2
      53: ladd
      54: invokevirtual #73                 // Method org/h2/mvstore/MVMap.getKey:(J)Ljava/lang/Object;
      57: areturn

  public K floorKey(K);
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
       4: aload_1
       5: invokevirtual #71                 // Method org/h2/mvstore/MVMap.floorKey:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore_1
       9: aload_1
      10: ifnull        33
      13: aload_0
      14: aload_1
      15: invokevirtual #35                 // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: ifnonnull     33
      21: aload_0
      22: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
      25: aload_1
      26: invokevirtual #68                 // Method org/h2/mvstore/MVMap.lowerKey:(Ljava/lang/Object;)Ljava/lang/Object;
      29: astore_1
      30: goto          9
      33: aload_1
      34: areturn

  public K lowerKey(K);
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
       4: aload_1
       5: invokevirtual #68                 // Method org/h2/mvstore/MVMap.lowerKey:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore_1
       9: aload_1
      10: ifnull        21
      13: aload_0
      14: aload_1
      15: invokevirtual #35                 // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: ifnull        0
      21: aload_1
      22: areturn

  public java.util.Iterator<K> keyIterator(K);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #74                 // Method keyIterator:(Ljava/lang/Object;Z)Ljava/util/Iterator;
       6: areturn

  public java.util.Iterator<K> keyIterator(K, boolean);
    Code:
       0: new           #75                 // class org/h2/mvstore/db/TransactionStore$TransactionMap$1
       3: dup
       4: aload_0
       5: aload_1
       6: iload_2
       7: invokespecial #76                 // Method org/h2/mvstore/db/TransactionStore$TransactionMap$1."<init>":(Lorg/h2/mvstore/db/TransactionStore$TransactionMap;Ljava/lang/Object;Z)V
      10: areturn

  public java.util.Iterator<java.util.Map$Entry<K, V>> entryIterator(K, K);
    Code:
       0: new           #77                 // class org/h2/mvstore/db/TransactionStore$TransactionMap$2
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #78                 // Method org/h2/mvstore/db/TransactionStore$TransactionMap$2."<init>":(Lorg/h2/mvstore/db/TransactionStore$TransactionMap;Ljava/lang/Object;Ljava/lang/Object;)V
      10: areturn

  public java.util.Iterator<K> wrapIterator(java.util.Iterator<K>, boolean);
    Code:
       0: new           #79                 // class org/h2/mvstore/db/TransactionStore$TransactionMap$3
       3: dup
       4: aload_0
       5: aload_1
       6: iload_2
       7: invokespecial #80                 // Method org/h2/mvstore/db/TransactionStore$TransactionMap$3."<init>":(Lorg/h2/mvstore/db/TransactionStore$TransactionMap;Ljava/util/Iterator;Z)V
      10: areturn

  public org.h2.mvstore.db.TransactionStore$Transaction getTransaction();
    Code:
       0: aload_0
       1: getfield      #5                  // Field transaction:Lorg/h2/mvstore/db/TransactionStore$Transaction;
       4: areturn

  public org.h2.mvstore.type.DataType getKeyType();
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Lorg/h2/mvstore/MVMap;
       4: invokevirtual #81                 // Method org/h2/mvstore/MVMap.getKeyType:()Lorg/h2/mvstore/type/DataType;
       7: areturn
}
