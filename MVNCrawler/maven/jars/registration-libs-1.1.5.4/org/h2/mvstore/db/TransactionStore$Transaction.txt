Compiled from "TransactionStore.java"
public class org.h2.mvstore.db.TransactionStore$Transaction {
  public static final int STATUS_CLOSED;

  public static final int STATUS_OPEN;

  public static final int STATUS_PREPARED;

  public static final int STATUS_COMMITTING;

  final org.h2.mvstore.db.TransactionStore store;

  final int transactionId;

  long logId;

  private int status;

  private java.lang.String name;

  org.h2.mvstore.db.TransactionStore$Transaction(org.h2.mvstore.db.TransactionStore, int, int, java.lang.String, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field store:Lorg/h2/mvstore/db/TransactionStore;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field transactionId:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field status:I
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field name:Ljava/lang/String;
      25: aload_0
      26: lload         5
      28: putfield      #6                  // Field logId:J
      31: return

  public int getId();
    Code:
       0: aload_0
       1: getfield      #3                  // Field transactionId:I
       4: ireturn

  public int getStatus();
    Code:
       0: aload_0
       1: getfield      #4                  // Field status:I
       4: ireturn

  void setStatus(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field status:I
       5: return

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method checkNotClosed:()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field name:Ljava/lang/String;
       9: aload_0
      10: getfield      #2                  // Field store:Lorg/h2/mvstore/db/TransactionStore;
      13: aload_0
      14: invokevirtual #8                  // Method org/h2/mvstore/db/TransactionStore.storeTransaction:(Lorg/h2/mvstore/db/TransactionStore$Transaction;)V
      17: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field name:Ljava/lang/String;
       4: areturn

  public long setSavepoint();
    Code:
       0: aload_0
       1: getfield      #6                  // Field logId:J
       4: lreturn

  void log(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field store:Lorg/h2/mvstore/db/TransactionStore;
       4: aload_0
       5: aload_0
       6: getfield      #6                  // Field logId:J
       9: iload_1
      10: aload_2
      11: aload_3
      12: invokevirtual #9                  // Method org/h2/mvstore/db/TransactionStore.log:(Lorg/h2/mvstore/db/TransactionStore$Transaction;JILjava/lang/Object;Ljava/lang/Object;)V
      15: aload_0
      16: dup
      17: getfield      #6                  // Field logId:J
      20: lconst_1
      21: ladd
      22: putfield      #6                  // Field logId:J
      25: return

  void logUndo();
    Code:
       0: aload_0
       1: getfield      #2                  // Field store:Lorg/h2/mvstore/db/TransactionStore;
       4: aload_0
       5: aload_0
       6: dup
       7: getfield      #6                  // Field logId:J
      10: lconst_1
      11: lsub
      12: dup2_x1
      13: putfield      #6                  // Field logId:J
      16: invokevirtual #10                 // Method org/h2/mvstore/db/TransactionStore.logUndo:(Lorg/h2/mvstore/db/TransactionStore$Transaction;J)V
      19: return

  public <K, V> org.h2.mvstore.db.TransactionStore$TransactionMap<K, V> openMap(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: invokevirtual #11                 // Method openMap:(Ljava/lang/String;Lorg/h2/mvstore/type/DataType;Lorg/h2/mvstore/type/DataType;)Lorg/h2/mvstore/db/TransactionStore$TransactionMap;
       7: areturn

  public <K, V> org.h2.mvstore.db.TransactionStore$TransactionMap<K, V> openMap(java.lang.String, org.h2.mvstore.type.DataType, org.h2.mvstore.type.DataType);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method checkNotClosed:()V
       4: aload_0
       5: getfield      #2                  // Field store:Lorg/h2/mvstore/db/TransactionStore;
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokevirtual #12                 // Method org/h2/mvstore/db/TransactionStore.openMap:(Ljava/lang/String;Lorg/h2/mvstore/type/DataType;Lorg/h2/mvstore/type/DataType;)Lorg/h2/mvstore/MVMap;
      14: astore        4
      16: aload         4
      18: invokevirtual #13                 // Method org/h2/mvstore/MVMap.getId:()I
      21: istore        5
      23: new           #14                 // class org/h2/mvstore/db/TransactionStore$TransactionMap
      26: dup
      27: aload_0
      28: aload         4
      30: iload         5
      32: invokespecial #15                 // Method org/h2/mvstore/db/TransactionStore$TransactionMap."<init>":(Lorg/h2/mvstore/db/TransactionStore$Transaction;Lorg/h2/mvstore/MVMap;I)V
      35: areturn

  public <K, V> org.h2.mvstore.db.TransactionStore$TransactionMap<K, V> openMap(org.h2.mvstore.MVMap<K, org.h2.mvstore.db.TransactionStore$VersionedValue>);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method checkNotClosed:()V
       4: aload_1
       5: invokevirtual #13                 // Method org/h2/mvstore/MVMap.getId:()I
       8: istore_2
       9: new           #14                 // class org/h2/mvstore/db/TransactionStore$TransactionMap
      12: dup
      13: aload_0
      14: aload_1
      15: iload_2
      16: invokespecial #15                 // Method org/h2/mvstore/db/TransactionStore$TransactionMap."<init>":(Lorg/h2/mvstore/db/TransactionStore$Transaction;Lorg/h2/mvstore/MVMap;I)V
      19: areturn

  public void prepare();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method checkNotClosed:()V
       4: aload_0
       5: iconst_2
       6: putfield      #4                  // Field status:I
       9: aload_0
      10: getfield      #2                  // Field store:Lorg/h2/mvstore/db/TransactionStore;
      13: aload_0
      14: invokevirtual #8                  // Method org/h2/mvstore/db/TransactionStore.storeTransaction:(Lorg/h2/mvstore/db/TransactionStore$Transaction;)V
      17: return

  public void commit();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method checkNotClosed:()V
       4: aload_0
       5: getfield      #2                  // Field store:Lorg/h2/mvstore/db/TransactionStore;
       8: aload_0
       9: aload_0
      10: getfield      #6                  // Field logId:J
      13: invokevirtual #16                 // Method org/h2/mvstore/db/TransactionStore.commit:(Lorg/h2/mvstore/db/TransactionStore$Transaction;J)V
      16: return

  public void rollbackToSavepoint(long);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method checkNotClosed:()V
       4: aload_0
       5: getfield      #2                  // Field store:Lorg/h2/mvstore/db/TransactionStore;
       8: aload_0
       9: aload_0
      10: getfield      #6                  // Field logId:J
      13: lload_1
      14: invokevirtual #17                 // Method org/h2/mvstore/db/TransactionStore.rollbackTo:(Lorg/h2/mvstore/db/TransactionStore$Transaction;JJ)V
      17: aload_0
      18: lload_1
      19: putfield      #6                  // Field logId:J
      22: return

  public void rollback();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method checkNotClosed:()V
       4: aload_0
       5: getfield      #2                  // Field store:Lorg/h2/mvstore/db/TransactionStore;
       8: aload_0
       9: aload_0
      10: getfield      #6                  // Field logId:J
      13: lconst_0
      14: invokevirtual #17                 // Method org/h2/mvstore/db/TransactionStore.rollbackTo:(Lorg/h2/mvstore/db/TransactionStore$Transaction;JJ)V
      17: aload_0
      18: getfield      #2                  // Field store:Lorg/h2/mvstore/db/TransactionStore;
      21: aload_0
      22: aload_0
      23: getfield      #4                  // Field status:I
      26: invokevirtual #18                 // Method org/h2/mvstore/db/TransactionStore.endTransaction:(Lorg/h2/mvstore/db/TransactionStore$Transaction;I)V
      29: return

  public java.util.Iterator<org.h2.mvstore.db.TransactionStore$Change> getChanges(long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field store:Lorg/h2/mvstore/db/TransactionStore;
       4: aload_0
       5: aload_0
       6: getfield      #6                  // Field logId:J
       9: lload_1
      10: invokevirtual #19                 // Method org/h2/mvstore/db/TransactionStore.getChanges:(Lorg/h2/mvstore/db/TransactionStore$Transaction;JJ)Ljava/util/Iterator;
      13: areturn

  void checkNotClosed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field status:I
       4: ifne          18
       7: iconst_4
       8: ldc           #20                 // String Transaction is closed
      10: iconst_0
      11: anewarray     #21                 // class java/lang/Object
      14: invokestatic  #22                 // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      17: athrow
      18: return

  public <K, V> void removeMap(org.h2.mvstore.db.TransactionStore$TransactionMap<K, V>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field store:Lorg/h2/mvstore/db/TransactionStore;
       4: aload_1
       5: invokevirtual #23                 // Method org/h2/mvstore/db/TransactionStore.removeMap:(Lorg/h2/mvstore/db/TransactionStore$TransactionMap;)V
       8: return

  public java.lang.String toString();
    Code:
       0: new           #24                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #26                 // String
       9: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #3                  // Field transactionId:I
      16: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn
}
