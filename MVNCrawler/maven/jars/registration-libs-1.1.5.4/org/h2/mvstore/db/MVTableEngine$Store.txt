Compiled from "MVTableEngine.java"
public class org.h2.mvstore.db.MVTableEngine$Store {
  final java.util.concurrent.ConcurrentHashMap<java.lang.String, org.h2.mvstore.db.MVTable> tableMap;

  private org.h2.mvstore.MVStore store;

  private org.h2.mvstore.db.TransactionStore transactionStore;

  private long statisticsStart;

  private int temporaryMapId;

  private boolean encrypted;

  private java.lang.String fileName;

  public org.h2.mvstore.db.MVTableEngine$Store();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field tableMap:Ljava/util/concurrent/ConcurrentHashMap;
      15: return

  void open(org.h2.engine.Database, org.h2.mvstore.MVStore$Builder, boolean);
    Code:
       0: aload_0
       1: iload_3
       2: putfield      #5                  // Field encrypted:Z
       5: aload_0
       6: aload_2
       7: invokevirtual #6                  // Method org/h2/mvstore/MVStore$Builder.open:()Lorg/h2/mvstore/MVStore;
      10: putfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
      13: aload_0
      14: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
      17: invokevirtual #8                  // Method org/h2/mvstore/MVStore.getFileStore:()Lorg/h2/mvstore/FileStore;
      20: astore        4
      22: aload         4
      24: ifnull        36
      27: aload_0
      28: aload         4
      30: invokevirtual #9                  // Method org/h2/mvstore/FileStore.getFileName:()Ljava/lang/String;
      33: putfield      #10                 // Field fileName:Ljava/lang/String;
      36: aload_1
      37: invokevirtual #11                 // Method org/h2/engine/Database.getSettings:()Lorg/h2/engine/DbSettings;
      40: getfield      #12                 // Field org/h2/engine/DbSettings.reuseSpace:Z
      43: ifne          54
      46: aload_0
      47: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
      50: iconst_0
      51: invokevirtual #13                 // Method org/h2/mvstore/MVStore.setReuseSpace:(Z)V
      54: aload_0
      55: new           #14                 // class org/h2/mvstore/db/TransactionStore
      58: dup
      59: aload_0
      60: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
      63: new           #15                 // class org/h2/mvstore/db/ValueDataType
      66: dup
      67: aload_1
      68: invokevirtual #16                 // Method org/h2/engine/Database.getCompareMode:()Lorg/h2/value/CompareMode;
      71: aload_1
      72: aconst_null
      73: invokespecial #17                 // Method org/h2/mvstore/db/ValueDataType."<init>":(Lorg/h2/value/CompareMode;Lorg/h2/store/DataHandler;[I)V
      76: invokespecial #18                 // Method org/h2/mvstore/db/TransactionStore."<init>":(Lorg/h2/mvstore/MVStore;Lorg/h2/mvstore/type/DataType;)V
      79: putfield      #19                 // Field transactionStore:Lorg/h2/mvstore/db/TransactionStore;
      82: aload_0
      83: getfield      #19                 // Field transactionStore:Lorg/h2/mvstore/db/TransactionStore;
      86: invokevirtual #20                 // Method org/h2/mvstore/db/TransactionStore.init:()V
      89: goto          101
      92: astore        4
      94: aload_0
      95: aload         4
      97: invokevirtual #22                 // Method convertIllegalStateException:(Ljava/lang/IllegalStateException;)Lorg/h2/message/DbException;
     100: athrow
     101: return
    Exception table:
       from    to  target type
           5    89    92   Class java/lang/IllegalStateException

  org.h2.message.DbException convertIllegalStateException(java.lang.IllegalStateException);
    Code:
       0: aload_1
       1: invokevirtual #23                 // Method java/lang/IllegalStateException.getMessage:()Ljava/lang/String;
       4: invokestatic  #24                 // Method org/h2/mvstore/DataUtils.getErrorCode:(Ljava/lang/String;)I
       7: istore_2
       8: iload_2
       9: bipush        6
      11: if_icmpne     39
      14: aload_0
      15: getfield      #5                  // Field encrypted:Z
      18: ifeq          86
      21: ldc           #25                 // int 90049
      23: aload_1
      24: iconst_1
      25: anewarray     #26                 // class java/lang/String
      28: dup
      29: iconst_0
      30: aload_0
      31: getfield      #10                 // Field fileName:Ljava/lang/String;
      34: aastore
      35: invokestatic  #27                 // Method org/h2/message/DbException.get:(ILjava/lang/Throwable;[Ljava/lang/String;)Lorg/h2/message/DbException;
      38: athrow
      39: iload_2
      40: bipush        7
      42: if_icmpne     63
      45: ldc           #28                 // int 90020
      47: aload_1
      48: iconst_1
      49: anewarray     #26                 // class java/lang/String
      52: dup
      53: iconst_0
      54: aload_0
      55: getfield      #10                 // Field fileName:Ljava/lang/String;
      58: aastore
      59: invokestatic  #27                 // Method org/h2/message/DbException.get:(ILjava/lang/Throwable;[Ljava/lang/String;)Lorg/h2/message/DbException;
      62: athrow
      63: iload_2
      64: iconst_1
      65: if_icmpne     86
      68: ldc           #29                 // int 90028
      70: aload_1
      71: iconst_1
      72: anewarray     #26                 // class java/lang/String
      75: dup
      76: iconst_0
      77: aload_0
      78: getfield      #10                 // Field fileName:Ljava/lang/String;
      81: aastore
      82: invokestatic  #27                 // Method org/h2/message/DbException.get:(ILjava/lang/Throwable;[Ljava/lang/String;)Lorg/h2/message/DbException;
      85: athrow
      86: ldc           #30                 // int 90030
      88: aload_1
      89: iconst_1
      90: anewarray     #26                 // class java/lang/String
      93: dup
      94: iconst_0
      95: aload_0
      96: getfield      #10                 // Field fileName:Ljava/lang/String;
      99: aastore
     100: invokestatic  #27                 // Method org/h2/message/DbException.get:(ILjava/lang/Throwable;[Ljava/lang/String;)Lorg/h2/message/DbException;
     103: athrow

  public org.h2.mvstore.MVStore getStore();
    Code:
       0: aload_0
       1: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
       4: areturn

  public org.h2.mvstore.db.TransactionStore getTransactionStore();
    Code:
       0: aload_0
       1: getfield      #19                 // Field transactionStore:Lorg/h2/mvstore/db/TransactionStore;
       4: areturn

  public java.util.HashMap<java.lang.String, org.h2.mvstore.db.MVTable> getTables();
    Code:
       0: new           #31                 // class java/util/HashMap
       3: dup
       4: aload_0
       5: getfield      #4                  // Field tableMap:Ljava/util/concurrent/ConcurrentHashMap;
       8: invokespecial #32                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      11: areturn

  public void removeTable(org.h2.mvstore.db.MVTable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field tableMap:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #33                 // Method org/h2/mvstore/db/MVTable.getMapName:()Ljava/lang/String;
       8: invokevirtual #34                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public void flush();
    Code:
       0: aload_0
       1: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
       4: invokevirtual #8                  // Method org/h2/mvstore/MVStore.getFileStore:()Lorg/h2/mvstore/FileStore;
       7: astore_1
       8: aload_1
       9: ifnull        19
      12: aload_1
      13: invokevirtual #35                 // Method org/h2/mvstore/FileStore.isReadOnly:()Z
      16: ifeq          20
      19: return
      20: aload_0
      21: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
      24: bipush        50
      26: ldc           #36                 // int 4194304
      28: invokevirtual #37                 // Method org/h2/mvstore/MVStore.compact:(II)Z
      31: ifne          42
      34: aload_0
      35: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
      38: invokevirtual #38                 // Method org/h2/mvstore/MVStore.commit:()J
      41: pop2
      42: return

  public void closeImmediately();
    Code:
       0: aload_0
       1: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
       4: invokevirtual #39                 // Method org/h2/mvstore/MVStore.isClosed:()Z
       7: ifeq          11
      10: return
      11: aload_0
      12: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
      15: invokevirtual #40                 // Method org/h2/mvstore/MVStore.closeImmediately:()V
      18: return

  public void initTransactions();
    Code:
       0: aload_0
       1: getfield      #19                 // Field transactionStore:Lorg/h2/mvstore/db/TransactionStore;
       4: invokevirtual #41                 // Method org/h2/mvstore/db/TransactionStore.getOpenTransactions:()Ljava/util/List;
       7: astore_1
       8: aload_1
       9: invokeinterface #42,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          64
      24: aload_2
      25: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #45                 // class org/h2/mvstore/db/TransactionStore$Transaction
      33: astore_3
      34: aload_3
      35: invokevirtual #46                 // Method org/h2/mvstore/db/TransactionStore$Transaction.getStatus:()I
      38: iconst_3
      39: if_icmpne     49
      42: aload_3
      43: invokevirtual #47                 // Method org/h2/mvstore/db/TransactionStore$Transaction.commit:()V
      46: goto          61
      49: aload_3
      50: invokevirtual #46                 // Method org/h2/mvstore/db/TransactionStore$Transaction.getStatus:()I
      53: iconst_2
      54: if_icmpeq     61
      57: aload_3
      58: invokevirtual #48                 // Method org/h2/mvstore/db/TransactionStore$Transaction.rollback:()V
      61: goto          15
      64: return

  public void removeTemporaryMaps(org.h2.util.BitField);
    Code:
       0: aload_0
       1: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
       4: invokevirtual #49                 // Method org/h2/mvstore/MVStore.getMapNames:()Ljava/util/Set;
       7: invokeinterface #50,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          169
      22: aload_2
      23: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #26                 // class java/lang/String
      31: astore_3
      32: aload_3
      33: ldc           #51                 // String temp.
      35: invokevirtual #52                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      38: ifeq          63
      41: aload_0
      42: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
      45: aload_3
      46: invokevirtual #53                 // Method org/h2/mvstore/MVStore.openMap:(Ljava/lang/String;)Lorg/h2/mvstore/MVMap;
      49: astore        4
      51: aload_0
      52: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
      55: aload         4
      57: invokevirtual #54                 // Method org/h2/mvstore/MVStore.removeMap:(Lorg/h2/mvstore/MVMap;)V
      60: goto          166
      63: aload_3
      64: ldc           #55                 // String table.
      66: invokevirtual #52                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      69: ifne          81
      72: aload_3
      73: ldc           #56                 // String index.
      75: invokevirtual #52                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      78: ifeq          166
      81: aload_3
      82: iconst_1
      83: aload_3
      84: bipush        46
      86: invokevirtual #57                 // Method java/lang/String.indexOf:(I)I
      89: iadd
      90: invokevirtual #58                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      93: invokestatic  #59                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      96: istore        4
      98: aload_1
      99: iload         4
     101: invokevirtual #60                 // Method org/h2/util/BitField.get:(I)Z
     104: ifne          166
     107: new           #15                 // class org/h2/mvstore/db/ValueDataType
     110: dup
     111: aconst_null
     112: aconst_null
     113: aconst_null
     114: invokespecial #17                 // Method org/h2/mvstore/db/ValueDataType."<init>":(Lorg/h2/value/CompareMode;Lorg/h2/store/DataHandler;[I)V
     117: astore        5
     119: new           #15                 // class org/h2/mvstore/db/ValueDataType
     122: dup
     123: aconst_null
     124: aconst_null
     125: aconst_null
     126: invokespecial #17                 // Method org/h2/mvstore/db/ValueDataType."<init>":(Lorg/h2/value/CompareMode;Lorg/h2/store/DataHandler;[I)V
     129: astore        6
     131: aload_0
     132: getfield      #19                 // Field transactionStore:Lorg/h2/mvstore/db/TransactionStore;
     135: invokevirtual #61                 // Method org/h2/mvstore/db/TransactionStore.begin:()Lorg/h2/mvstore/db/TransactionStore$Transaction;
     138: astore        7
     140: aload         7
     142: aload_3
     143: aload         5
     145: aload         6
     147: invokevirtual #62                 // Method org/h2/mvstore/db/TransactionStore$Transaction.openMap:(Ljava/lang/String;Lorg/h2/mvstore/type/DataType;Lorg/h2/mvstore/type/DataType;)Lorg/h2/mvstore/db/TransactionStore$TransactionMap;
     150: astore        8
     152: aload_0
     153: getfield      #19                 // Field transactionStore:Lorg/h2/mvstore/db/TransactionStore;
     156: aload         8
     158: invokevirtual #63                 // Method org/h2/mvstore/db/TransactionStore.removeMap:(Lorg/h2/mvstore/db/TransactionStore$TransactionMap;)V
     161: aload         7
     163: invokevirtual #47                 // Method org/h2/mvstore/db/TransactionStore$Transaction.commit:()V
     166: goto          13
     169: return

  public synchronized java.lang.String nextTemporaryMapName();
    Code:
       0: new           #64                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #51                 // String temp.
       9: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: dup
      14: getfield      #67                 // Field temporaryMapId:I
      17: dup_x1
      18: iconst_1
      19: iadd
      20: putfield      #67                 // Field temporaryMapId:I
      23: invokevirtual #68                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  public void prepareCommit(org.h2.engine.Session, java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #70                 // Method org/h2/engine/Session.getTransaction:()Lorg/h2/mvstore/db/TransactionStore$Transaction;
       4: astore_3
       5: aload_3
       6: aload_2
       7: invokevirtual #71                 // Method org/h2/mvstore/db/TransactionStore$Transaction.setName:(Ljava/lang/String;)V
      10: aload_3
      11: invokevirtual #72                 // Method org/h2/mvstore/db/TransactionStore$Transaction.prepare:()V
      14: aload_0
      15: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
      18: invokevirtual #38                 // Method org/h2/mvstore/MVStore.commit:()J
      21: pop2
      22: return

  public java.util.ArrayList<org.h2.store.InDoubtTransaction> getInDoubtTransactions();
    Code:
       0: aload_0
       1: getfield      #19                 // Field transactionStore:Lorg/h2/mvstore/db/TransactionStore;
       4: invokevirtual #41                 // Method org/h2/mvstore/db/TransactionStore.getOpenTransactions:()Ljava/util/List;
       7: astore_1
       8: invokestatic  #73                 // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
      11: astore_2
      12: aload_1
      13: invokeinterface #42,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore_3
      19: aload_3
      20: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          69
      28: aload_3
      29: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #45                 // class org/h2/mvstore/db/TransactionStore$Transaction
      37: astore        4
      39: aload         4
      41: invokevirtual #46                 // Method org/h2/mvstore/db/TransactionStore$Transaction.getStatus:()I
      44: iconst_2
      45: if_icmpne     66
      48: aload_2
      49: new           #74                 // class org/h2/mvstore/db/MVTableEngine$MVInDoubtTransaction
      52: dup
      53: aload_0
      54: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
      57: aload         4
      59: invokespecial #75                 // Method org/h2/mvstore/db/MVTableEngine$MVInDoubtTransaction."<init>":(Lorg/h2/mvstore/MVStore;Lorg/h2/mvstore/db/TransactionStore$Transaction;)V
      62: invokevirtual #76                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      65: pop
      66: goto          19
      69: aload_2
      70: areturn

  public void setCacheSize(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
       4: iconst_1
       5: iload_1
       6: sipush        1024
       9: idiv
      10: invokestatic  #77                 // Method java/lang/Math.max:(II)I
      13: invokevirtual #78                 // Method org/h2/mvstore/MVStore.setCacheSize:(I)V
      16: return

  public java.io.InputStream getInputStream();
    Code:
       0: aload_0
       1: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
       4: invokevirtual #8                  // Method org/h2/mvstore/MVStore.getFileStore:()Lorg/h2/mvstore/FileStore;
       7: invokevirtual #79                 // Method org/h2/mvstore/FileStore.getEncryptedFile:()Ljava/nio/channels/FileChannel;
      10: astore_1
      11: aload_1
      12: ifnonnull     26
      15: aload_0
      16: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
      19: invokevirtual #8                  // Method org/h2/mvstore/MVStore.getFileStore:()Lorg/h2/mvstore/FileStore;
      22: invokevirtual #80                 // Method org/h2/mvstore/FileStore.getFile:()Ljava/nio/channels/FileChannel;
      25: astore_1
      26: new           #81                 // class org/h2/store/fs/FileChannelInputStream
      29: dup
      30: aload_1
      31: iconst_0
      32: invokespecial #82                 // Method org/h2/store/fs/FileChannelInputStream."<init>":(Ljava/nio/channels/FileChannel;Z)V
      35: areturn

  public void sync();
    Code:
       0: aload_0
       1: invokevirtual #83                 // Method flush:()V
       4: aload_0
       5: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
       8: invokevirtual #84                 // Method org/h2/mvstore/MVStore.sync:()V
      11: return

  public void compactFile(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
       4: iconst_0
       5: invokevirtual #85                 // Method org/h2/mvstore/MVStore.setRetentionTime:(I)V
       8: invokestatic  #86                 // Method java/lang/System.nanoTime:()J
      11: lstore_3
      12: aload_0
      13: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
      16: bipush        95
      18: ldc           #87                 // int 16777216
      20: invokevirtual #37                 // Method org/h2/mvstore/MVStore.compact:(II)Z
      23: ifeq          72
      26: aload_0
      27: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
      30: invokevirtual #84                 // Method org/h2/mvstore/MVStore.sync:()V
      33: aload_0
      34: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
      37: bipush        95
      39: ldc2_w        #88                 // long 16777216l
      42: invokevirtual #90                 // Method org/h2/mvstore/MVStore.compactMoveChunks:(IJ)Z
      45: pop
      46: invokestatic  #86                 // Method java/lang/System.nanoTime:()J
      49: lload_3
      50: lsub
      51: lstore        5
      53: lload         5
      55: getstatic     #91                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      58: lload_1
      59: invokevirtual #92                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      62: lcmp
      63: ifle          69
      66: goto          72
      69: goto          12
      72: return

  public void close(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
       4: invokevirtual #39                 // Method org/h2/mvstore/MVStore.isClosed:()Z
       7: ifne          89
      10: aload_0
      11: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
      14: invokevirtual #8                  // Method org/h2/mvstore/MVStore.getFileStore:()Lorg/h2/mvstore/FileStore;
      17: ifnull        89
      20: iconst_0
      21: istore_3
      22: aload_0
      23: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
      26: invokevirtual #8                  // Method org/h2/mvstore/MVStore.getFileStore:()Lorg/h2/mvstore/FileStore;
      29: invokevirtual #35                 // Method org/h2/mvstore/FileStore.isReadOnly:()Z
      32: ifne          52
      35: aload_0
      36: getfield      #19                 // Field transactionStore:Lorg/h2/mvstore/db/TransactionStore;
      39: invokevirtual #93                 // Method org/h2/mvstore/db/TransactionStore.close:()V
      42: lload_1
      43: ldc2_w        #94                 // long 9223372036854775807l
      46: lcmp
      47: ifne          52
      50: iconst_1
      51: istore_3
      52: aload_0
      53: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
      56: invokevirtual #8                  // Method org/h2/mvstore/MVStore.getFileStore:()Lorg/h2/mvstore/FileStore;
      59: invokevirtual #9                  // Method org/h2/mvstore/FileStore.getFileName:()Ljava/lang/String;
      62: astore        4
      64: aload_0
      65: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
      68: invokevirtual #96                 // Method org/h2/mvstore/MVStore.close:()V
      71: iload_3
      72: ifeq          89
      75: aload         4
      77: invokestatic  #97                 // Method org/h2/store/fs/FileUtils.exists:(Ljava/lang/String;)Z
      80: ifeq          89
      83: aload         4
      85: iconst_1
      86: invokestatic  #98                 // Method org/h2/mvstore/MVStoreTool.compact:(Ljava/lang/String;Z)V
      89: goto          141
      92: astore_3
      93: aload_3
      94: invokevirtual #23                 // Method java/lang/IllegalStateException.getMessage:()Ljava/lang/String;
      97: invokestatic  #24                 // Method org/h2/mvstore/DataUtils.getErrorCode:(Ljava/lang/String;)I
     100: istore        4
     102: iload         4
     104: iconst_2
     105: if_icmpne     111
     108: goto          118
     111: iload         4
     113: bipush        6
     115: if_icmpne     118
     118: aload_0
     119: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
     122: invokevirtual #40                 // Method org/h2/mvstore/MVStore.closeImmediately:()V
     125: ldc           #29                 // int 90028
     127: aload_3
     128: iconst_1
     129: anewarray     #26                 // class java/lang/String
     132: dup
     133: iconst_0
     134: ldc           #99                 // String Closing
     136: aastore
     137: invokestatic  #27                 // Method org/h2/message/DbException.get:(ILjava/lang/Throwable;[Ljava/lang/String;)Lorg/h2/message/DbException;
     140: athrow
     141: return
    Exception table:
       from    to  target type
           0    89    92   Class java/lang/IllegalStateException

  public void statisticsStart();
    Code:
       0: aload_0
       1: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
       4: invokevirtual #8                  // Method org/h2/mvstore/MVStore.getFileStore:()Lorg/h2/mvstore/FileStore;
       7: astore_1
       8: aload_0
       9: aload_1
      10: ifnonnull     17
      13: lconst_0
      14: goto          21
      17: aload_1
      18: invokevirtual #100                // Method org/h2/mvstore/FileStore.getReadCount:()J
      21: putfield      #101                // Field statisticsStart:J
      24: return

  public java.util.Map<java.lang.String, java.lang.Integer> statisticsEnd();
    Code:
       0: new           #31                 // class java/util/HashMap
       3: dup
       4: invokespecial #102                // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #7                  // Field store:Lorg/h2/mvstore/MVStore;
      12: invokevirtual #8                  // Method org/h2/mvstore/MVStore.getFileStore:()Lorg/h2/mvstore/FileStore;
      15: astore_2
      16: aload_2
      17: ifnonnull     24
      20: iconst_0
      21: goto          34
      24: aload_2
      25: invokevirtual #100                // Method org/h2/mvstore/FileStore.getReadCount:()J
      28: aload_0
      29: getfield      #101                // Field statisticsStart:J
      32: lsub
      33: l2i
      34: istore_3
      35: aload_1
      36: ldc           #103                // String reads
      38: iload_3
      39: invokestatic  #104                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      42: invokevirtual #105                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload_1
      47: areturn
}
