Compiled from "MVSpatialIndex.java"
public class org.h2.mvstore.db.MVSpatialIndex extends org.h2.index.BaseIndex implements org.h2.index.SpatialIndex,org.h2.mvstore.db.MVIndex {
  final org.h2.mvstore.db.MVTable mvTable;

  private final java.lang.String mapName;

  private final org.h2.mvstore.db.TransactionStore$TransactionMap<org.h2.mvstore.rtree.SpatialKey, org.h2.value.Value> dataMap;

  private final org.h2.mvstore.rtree.MVRTreeMap<org.h2.mvstore.db.TransactionStore$VersionedValue> spatialMap;

  public org.h2.mvstore.db.MVSpatialIndex(org.h2.engine.Database, org.h2.mvstore.db.MVTable, int, java.lang.String, org.h2.table.IndexColumn[], org.h2.index.IndexType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/index/BaseIndex."<init>":()V
       4: aload         5
       6: arraylength
       7: iconst_1
       8: if_icmpeq     17
      11: ldc           #2                  // String Can only index one column
      13: invokestatic  #3                  // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
      16: athrow
      17: aload         5
      19: iconst_0
      20: aaload
      21: astore        7
      23: aload         7
      25: getfield      #4                  // Field org/h2/table/IndexColumn.sortType:I
      28: iconst_1
      29: iand
      30: ifeq          39
      33: ldc           #5                  // String Cannot index in descending order
      35: invokestatic  #3                  // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
      38: athrow
      39: aload         7
      41: getfield      #4                  // Field org/h2/table/IndexColumn.sortType:I
      44: iconst_2
      45: iand
      46: ifeq          55
      49: ldc           #6                  // String Nulls first is not supported
      51: invokestatic  #3                  // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
      54: athrow
      55: aload         7
      57: getfield      #4                  // Field org/h2/table/IndexColumn.sortType:I
      60: iconst_4
      61: iand
      62: ifeq          71
      65: ldc           #7                  // String Nulls last is not supported
      67: invokestatic  #3                  // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
      70: athrow
      71: aload         7
      73: getfield      #8                  // Field org/h2/table/IndexColumn.column:Lorg/h2/table/Column;
      76: invokevirtual #9                  // Method org/h2/table/Column.getType:()I
      79: bipush        22
      81: if_icmpeq     114
      84: new           #10                 // class java/lang/StringBuilder
      87: dup
      88: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      91: ldc           #12                 // String Spatial index on non-geometry column,
      93: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload         7
      98: getfield      #8                  // Field org/h2/table/IndexColumn.column:Lorg/h2/table/Column;
     101: invokevirtual #14                 // Method org/h2/table/Column.getCreateSQL:()Ljava/lang/String;
     104: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: invokestatic  #3                  // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
     113: athrow
     114: aload_0
     115: aload_2
     116: putfield      #16                 // Field mvTable:Lorg/h2/mvstore/db/MVTable;
     119: aload_0
     120: aload_2
     121: iload_3
     122: aload         4
     124: aload         5
     126: aload         6
     128: invokevirtual #17                 // Method initBaseIndex:(Lorg/h2/table/Table;ILjava/lang/String;[Lorg/h2/table/IndexColumn;Lorg/h2/index/IndexType;)V
     131: aload_0
     132: getfield      #18                 // Field database:Lorg/h2/engine/Database;
     135: invokevirtual #19                 // Method org/h2/engine/Database.isStarting:()Z
     138: ifne          146
     141: aload         5
     143: invokestatic  #20                 // Method checkIndexColumnTypes:([Lorg/h2/table/IndexColumn;)V
     146: aload_0
     147: new           #10                 // class java/lang/StringBuilder
     150: dup
     151: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     154: ldc           #21                 // String index.
     156: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: aload_0
     160: invokevirtual #22                 // Method getId:()I
     163: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     166: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     169: putfield      #24                 // Field mapName:Ljava/lang/String;
     172: new           #25                 // class org/h2/mvstore/db/ValueDataType
     175: dup
     176: aconst_null
     177: aconst_null
     178: aconst_null
     179: invokespecial #26                 // Method org/h2/mvstore/db/ValueDataType."<init>":(Lorg/h2/value/CompareMode;Lorg/h2/store/DataHandler;[I)V
     182: astore        8
     184: new           #27                 // class org/h2/mvstore/db/TransactionStore$VersionedValueType
     187: dup
     188: aload         8
     190: invokespecial #28                 // Method org/h2/mvstore/db/TransactionStore$VersionedValueType."<init>":(Lorg/h2/mvstore/type/DataType;)V
     193: astore        9
     195: new           #29                 // class org/h2/mvstore/rtree/MVRTreeMap$Builder
     198: dup
     199: invokespecial #30                 // Method org/h2/mvstore/rtree/MVRTreeMap$Builder."<init>":()V
     202: aload         9
     204: invokevirtual #31                 // Method org/h2/mvstore/rtree/MVRTreeMap$Builder.valueType:(Lorg/h2/mvstore/type/DataType;)Lorg/h2/mvstore/rtree/MVRTreeMap$Builder;
     207: astore        10
     209: aload_0
     210: aload_1
     211: invokevirtual #32                 // Method org/h2/engine/Database.getMvStore:()Lorg/h2/mvstore/db/MVTableEngine$Store;
     214: invokevirtual #33                 // Method org/h2/mvstore/db/MVTableEngine$Store.getStore:()Lorg/h2/mvstore/MVStore;
     217: aload_0
     218: getfield      #24                 // Field mapName:Ljava/lang/String;
     221: aload         10
     223: invokevirtual #34                 // Method org/h2/mvstore/MVStore.openMap:(Ljava/lang/String;Lorg/h2/mvstore/MVMap$MapBuilder;)Lorg/h2/mvstore/MVMap;
     226: checkcast     #35                 // class org/h2/mvstore/rtree/MVRTreeMap
     229: putfield      #36                 // Field spatialMap:Lorg/h2/mvstore/rtree/MVRTreeMap;
     232: aload_0
     233: getfield      #16                 // Field mvTable:Lorg/h2/mvstore/db/MVTable;
     236: invokevirtual #37                 // Method org/h2/mvstore/db/MVTable.getTransactionBegin:()Lorg/h2/mvstore/db/TransactionStore$Transaction;
     239: astore        11
     241: aload_0
     242: aload         11
     244: aload_0
     245: getfield      #36                 // Field spatialMap:Lorg/h2/mvstore/rtree/MVRTreeMap;
     248: invokevirtual #38                 // Method org/h2/mvstore/db/TransactionStore$Transaction.openMap:(Lorg/h2/mvstore/MVMap;)Lorg/h2/mvstore/db/TransactionStore$TransactionMap;
     251: putfield      #39                 // Field dataMap:Lorg/h2/mvstore/db/TransactionStore$TransactionMap;
     254: aload         11
     256: invokevirtual #40                 // Method org/h2/mvstore/db/TransactionStore$Transaction.commit:()V
     259: return

  public void addRowsToBuffer(java.util.List<org.h2.result.Row>, java.lang.String);
    Code:
       0: invokestatic  #41                 // Method org/h2/message/DbException.throwInternalError:()Ljava/lang/RuntimeException;
       3: athrow

  public void addBufferedRows(java.util.List<java.lang.String>);
    Code:
       0: invokestatic  #41                 // Method org/h2/message/DbException.throwInternalError:()Ljava/lang/RuntimeException;
       3: athrow

  public void close(org.h2.engine.Session);
    Code:
       0: return

  public void add(org.h2.engine.Session, org.h2.result.Row);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #42                 // Method getMap:(Lorg/h2/engine/Session;)Lorg/h2/mvstore/db/TransactionStore$TransactionMap;
       5: astore_3
       6: aload_0
       7: aload_2
       8: invokespecial #43                 // Method getKey:(Lorg/h2/result/SearchRow;)Lorg/h2/mvstore/rtree/SpatialKey;
      11: astore        4
      13: aload         4
      15: invokevirtual #44                 // Method org/h2/mvstore/rtree/SpatialKey.isNull:()Z
      18: ifeq          22
      21: return
      22: aload_0
      23: getfield      #45                 // Field indexType:Lorg/h2/index/IndexType;
      26: invokevirtual #46                 // Method org/h2/index/IndexType.isUnique:()Z
      29: ifeq          97
      32: aload_0
      33: getfield      #36                 // Field spatialMap:Lorg/h2/mvstore/rtree/MVRTreeMap;
      36: aload         4
      38: invokevirtual #47                 // Method org/h2/mvstore/rtree/MVRTreeMap.findContainedKeys:(Lorg/h2/mvstore/rtree/SpatialKey;)Lorg/h2/mvstore/rtree/MVRTreeMap$RTreeCursor;
      41: astore        5
      43: aload_3
      44: aload         5
      46: iconst_0
      47: invokevirtual #48                 // Method org/h2/mvstore/db/TransactionStore$TransactionMap.wrapIterator:(Ljava/util/Iterator;Z)Ljava/util/Iterator;
      50: astore        6
      52: aload         6
      54: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          97
      62: aload         6
      64: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      69: checkcast     #51                 // class org/h2/mvstore/rtree/SpatialKey
      72: astore        7
      74: aload         7
      76: aload         4
      78: invokevirtual #52                 // Method org/h2/mvstore/rtree/SpatialKey.equalsIgnoringId:(Lorg/h2/mvstore/rtree/SpatialKey;)Z
      81: ifeq          94
      84: aload_0
      85: aload         4
      87: invokevirtual #53                 // Method org/h2/mvstore/rtree/SpatialKey.toString:()Ljava/lang/String;
      90: invokevirtual #54                 // Method getDuplicateKeyException:(Ljava/lang/String;)Lorg/h2/message/DbException;
      93: athrow
      94: goto          52
      97: aload_3
      98: aload         4
     100: lconst_0
     101: invokestatic  #55                 // Method org/h2/value/ValueLong.get:(J)Lorg/h2/value/ValueLong;
     104: invokevirtual #56                 // Method org/h2/mvstore/db/TransactionStore$TransactionMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     107: pop
     108: goto          123
     111: astore        5
     113: aload_0
     114: getfield      #16                 // Field mvTable:Lorg/h2/mvstore/db/MVTable;
     117: aload         5
     119: invokevirtual #58                 // Method org/h2/mvstore/db/MVTable.convertException:(Ljava/lang/IllegalStateException;)Lorg/h2/message/DbException;
     122: athrow
     123: aload_0
     124: getfield      #45                 // Field indexType:Lorg/h2/index/IndexType;
     127: invokevirtual #46                 // Method org/h2/index/IndexType.isUnique:()Z
     130: ifeq          239
     133: aload_0
     134: getfield      #36                 // Field spatialMap:Lorg/h2/mvstore/rtree/MVRTreeMap;
     137: aload         4
     139: invokevirtual #47                 // Method org/h2/mvstore/rtree/MVRTreeMap.findContainedKeys:(Lorg/h2/mvstore/rtree/SpatialKey;)Lorg/h2/mvstore/rtree/MVRTreeMap$RTreeCursor;
     142: astore        5
     144: aload_3
     145: aload         5
     147: iconst_1
     148: invokevirtual #48                 // Method org/h2/mvstore/db/TransactionStore$TransactionMap.wrapIterator:(Ljava/util/Iterator;Z)Ljava/util/Iterator;
     151: astore        6
     153: aload         6
     155: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     160: ifeq          239
     163: aload         6
     165: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     170: checkcast     #51                 // class org/h2/mvstore/rtree/SpatialKey
     173: astore        7
     175: aload         7
     177: aload         4
     179: invokevirtual #52                 // Method org/h2/mvstore/rtree/SpatialKey.equalsIgnoringId:(Lorg/h2/mvstore/rtree/SpatialKey;)Z
     182: ifeq          236
     185: aload_3
     186: aload         7
     188: invokevirtual #59                 // Method org/h2/mvstore/db/TransactionStore$TransactionMap.isSameTransaction:(Ljava/lang/Object;)Z
     191: ifeq          197
     194: goto          153
     197: aload_3
     198: aload         4
     200: invokevirtual #60                 // Method org/h2/mvstore/db/TransactionStore$TransactionMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     203: pop
     204: aload_3
     205: aload         7
     207: invokevirtual #61                 // Method org/h2/mvstore/db/TransactionStore$TransactionMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     210: ifnull        223
     213: aload_0
     214: aload         7
     216: invokevirtual #53                 // Method org/h2/mvstore/rtree/SpatialKey.toString:()Ljava/lang/String;
     219: invokevirtual #54                 // Method getDuplicateKeyException:(Ljava/lang/String;)Lorg/h2/message/DbException;
     222: athrow
     223: ldc           #62                 // int 90131
     225: aload_0
     226: getfield      #63                 // Field table:Lorg/h2/table/Table;
     229: invokevirtual #64                 // Method org/h2/table/Table.getName:()Ljava/lang/String;
     232: invokestatic  #65                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
     235: athrow
     236: goto          153
     239: return
    Exception table:
       from    to  target type
          97   108   111   Class java/lang/IllegalStateException

  public void remove(org.h2.engine.Session, org.h2.result.Row);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #43                 // Method getKey:(Lorg/h2/result/SearchRow;)Lorg/h2/mvstore/rtree/SpatialKey;
       5: astore_3
       6: aload_3
       7: invokevirtual #44                 // Method org/h2/mvstore/rtree/SpatialKey.isNull:()Z
      10: ifeq          14
      13: return
      14: aload_0
      15: aload_1
      16: invokevirtual #42                 // Method getMap:(Lorg/h2/engine/Session;)Lorg/h2/mvstore/db/TransactionStore$TransactionMap;
      19: astore        4
      21: aload         4
      23: aload_3
      24: invokevirtual #60                 // Method org/h2/mvstore/db/TransactionStore$TransactionMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #66                 // class org/h2/value/Value
      30: astore        5
      32: aload         5
      34: ifnonnull     85
      37: aload         4
      39: aload_3
      40: invokevirtual #60                 // Method org/h2/mvstore/db/TransactionStore$TransactionMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #66                 // class org/h2/value/Value
      46: astore        5
      48: ldc           #67                 // int 90112
      50: new           #10                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      57: aload_0
      58: invokevirtual #68                 // Method getSQL:()Ljava/lang/String;
      61: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: ldc           #69                 // String :
      66: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_2
      70: invokeinterface #70,  1           // InterfaceMethod org/h2/result/Row.getKey:()J
      75: invokevirtual #71                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      78: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokestatic  #65                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      84: athrow
      85: goto          100
      88: astore        5
      90: aload_0
      91: getfield      #16                 // Field mvTable:Lorg/h2/mvstore/db/MVTable;
      94: aload         5
      96: invokevirtual #58                 // Method org/h2/mvstore/db/MVTable.convertException:(Ljava/lang/IllegalStateException;)Lorg/h2/message/DbException;
      99: athrow
     100: return
    Exception table:
       from    to  target type
          21    85    88   Class java/lang/IllegalStateException

  public org.h2.index.Cursor find(org.h2.table.TableFilter, org.h2.result.SearchRow, org.h2.result.SearchRow);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #72                 // Method org/h2/table/TableFilter.getSession:()Lorg/h2/engine/Session;
       5: invokespecial #73                 // Method find:(Lorg/h2/engine/Session;)Lorg/h2/index/Cursor;
       8: areturn

  public org.h2.index.Cursor find(org.h2.engine.Session, org.h2.result.SearchRow, org.h2.result.SearchRow);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #73                 // Method find:(Lorg/h2/engine/Session;)Lorg/h2/index/Cursor;
       5: areturn

  private org.h2.index.Cursor find(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #36                 // Field spatialMap:Lorg/h2/mvstore/rtree/MVRTreeMap;
       4: aconst_null
       5: invokevirtual #74                 // Method org/h2/mvstore/rtree/MVRTreeMap.keyIterator:(Ljava/lang/Object;)Ljava/util/Iterator;
       8: astore_2
       9: aload_0
      10: aload_1
      11: invokevirtual #42                 // Method getMap:(Lorg/h2/engine/Session;)Lorg/h2/mvstore/db/TransactionStore$TransactionMap;
      14: astore_3
      15: aload_3
      16: aload_2
      17: iconst_0
      18: invokevirtual #48                 // Method org/h2/mvstore/db/TransactionStore$TransactionMap.wrapIterator:(Ljava/util/Iterator;Z)Ljava/util/Iterator;
      21: astore        4
      23: new           #75                 // class org/h2/mvstore/db/MVSpatialIndex$MVStoreCursor
      26: dup
      27: aload_0
      28: aload_1
      29: aload         4
      31: invokespecial #76                 // Method org/h2/mvstore/db/MVSpatialIndex$MVStoreCursor."<init>":(Lorg/h2/mvstore/db/MVSpatialIndex;Lorg/h2/engine/Session;Ljava/util/Iterator;)V
      34: areturn

  public org.h2.index.Cursor findByGeometry(org.h2.table.TableFilter, org.h2.result.SearchRow, org.h2.result.SearchRow, org.h2.result.SearchRow);
    Code:
       0: aload_1
       1: invokevirtual #72                 // Method org/h2/table/TableFilter.getSession:()Lorg/h2/engine/Session;
       4: astore        5
       6: aload         4
       8: ifnonnull     20
      11: aload_0
      12: aload         5
      14: aload_2
      15: aload_3
      16: invokevirtual #77                 // Method find:(Lorg/h2/engine/Session;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)Lorg/h2/index/Cursor;
      19: areturn
      20: aload_0
      21: getfield      #36                 // Field spatialMap:Lorg/h2/mvstore/rtree/MVRTreeMap;
      24: aload_0
      25: aload         4
      27: invokespecial #43                 // Method getKey:(Lorg/h2/result/SearchRow;)Lorg/h2/mvstore/rtree/SpatialKey;
      30: invokevirtual #78                 // Method org/h2/mvstore/rtree/MVRTreeMap.findIntersectingKeys:(Lorg/h2/mvstore/rtree/SpatialKey;)Lorg/h2/mvstore/rtree/MVRTreeMap$RTreeCursor;
      33: astore        6
      35: aload_0
      36: aload         5
      38: invokevirtual #42                 // Method getMap:(Lorg/h2/engine/Session;)Lorg/h2/mvstore/db/TransactionStore$TransactionMap;
      41: astore        7
      43: aload         7
      45: aload         6
      47: iconst_0
      48: invokevirtual #48                 // Method org/h2/mvstore/db/TransactionStore$TransactionMap.wrapIterator:(Ljava/util/Iterator;Z)Ljava/util/Iterator;
      51: astore        8
      53: new           #75                 // class org/h2/mvstore/db/MVSpatialIndex$MVStoreCursor
      56: dup
      57: aload_0
      58: aload         5
      60: aload         8
      62: invokespecial #76                 // Method org/h2/mvstore/db/MVSpatialIndex$MVStoreCursor."<init>":(Lorg/h2/mvstore/db/MVSpatialIndex;Lorg/h2/engine/Session;Ljava/util/Iterator;)V
      65: areturn

  private org.h2.mvstore.rtree.SpatialKey getKey(org.h2.result.SearchRow);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #79                 // Field columnIds:[I
       5: iconst_0
       6: iaload
       7: invokeinterface #80,  2           // InterfaceMethod org/h2/result/SearchRow.getValue:(I)Lorg/h2/value/Value;
      12: astore_2
      13: aload_2
      14: getstatic     #81                 // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
      17: if_acmpne     37
      20: new           #51                 // class org/h2/mvstore/rtree/SpatialKey
      23: dup
      24: aload_1
      25: invokeinterface #82,  1           // InterfaceMethod org/h2/result/SearchRow.getKey:()J
      30: iconst_0
      31: newarray       float
      33: invokespecial #83                 // Method org/h2/mvstore/rtree/SpatialKey."<init>":(J[F)V
      36: areturn
      37: aload_2
      38: bipush        22
      40: invokevirtual #84                 // Method org/h2/value/Value.convertTo:(I)Lorg/h2/value/Value;
      43: checkcast     #85                 // class org/h2/value/ValueGeometry
      46: invokevirtual #86                 // Method org/h2/value/ValueGeometry.getGeometryNoCopy:()Lorg/locationtech/jts/geom/Geometry;
      49: astore_3
      50: aload_3
      51: invokevirtual #87                 // Method org/locationtech/jts/geom/Geometry.getEnvelopeInternal:()Lorg/locationtech/jts/geom/Envelope;
      54: astore        4
      56: new           #51                 // class org/h2/mvstore/rtree/SpatialKey
      59: dup
      60: aload_1
      61: invokeinterface #82,  1           // InterfaceMethod org/h2/result/SearchRow.getKey:()J
      66: iconst_4
      67: newarray       float
      69: dup
      70: iconst_0
      71: aload         4
      73: invokevirtual #88                 // Method org/locationtech/jts/geom/Envelope.getMinX:()D
      76: d2f
      77: fastore
      78: dup
      79: iconst_1
      80: aload         4
      82: invokevirtual #89                 // Method org/locationtech/jts/geom/Envelope.getMaxX:()D
      85: d2f
      86: fastore
      87: dup
      88: iconst_2
      89: aload         4
      91: invokevirtual #90                 // Method org/locationtech/jts/geom/Envelope.getMinY:()D
      94: d2f
      95: fastore
      96: dup
      97: iconst_3
      98: aload         4
     100: invokevirtual #91                 // Method org/locationtech/jts/geom/Envelope.getMaxY:()D
     103: d2f
     104: fastore
     105: invokespecial #83                 // Method org/h2/mvstore/rtree/SpatialKey."<init>":(J[F)V
     108: areturn

  org.h2.result.SearchRow getRow(org.h2.mvstore.rtree.SpatialKey);
    Code:
       0: aload_0
       1: getfield      #16                 // Field mvTable:Lorg/h2/mvstore/db/MVTable;
       4: invokevirtual #92                 // Method org/h2/mvstore/db/MVTable.getTemplateRow:()Lorg/h2/result/Row;
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #93                 // Method org/h2/mvstore/rtree/SpatialKey.getId:()J
      13: invokeinterface #94,  3           // InterfaceMethod org/h2/result/SearchRow.setKey:(J)V
      18: aload_2
      19: areturn

  public org.h2.mvstore.db.MVTable getTable();
    Code:
       0: aload_0
       1: getfield      #16                 // Field mvTable:Lorg/h2/mvstore/db/MVTable;
       4: areturn

  public double getCost(org.h2.engine.Session, int[], org.h2.table.TableFilter[], int, org.h2.result.SortOrder, java.util.HashSet<org.h2.table.Column>);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #95                 // Field columns:[Lorg/h2/table/Column;
       5: invokestatic  #96                 // Method org/h2/index/SpatialTreeIndex.getCostRangeIndex:([I[Lorg/h2/table/Column;)J
       8: l2d
       9: dreturn

  public void remove(org.h2.engine.Session);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #42                 // Method getMap:(Lorg/h2/engine/Session;)Lorg/h2/mvstore/db/TransactionStore$TransactionMap;
       5: astore_2
       6: aload_2
       7: invokevirtual #97                 // Method org/h2/mvstore/db/TransactionStore$TransactionMap.isClosed:()Z
      10: ifne          23
      13: aload_1
      14: invokevirtual #98                 // Method org/h2/engine/Session.getTransaction:()Lorg/h2/mvstore/db/TransactionStore$Transaction;
      17: astore_3
      18: aload_3
      19: aload_2
      20: invokevirtual #99                 // Method org/h2/mvstore/db/TransactionStore$Transaction.removeMap:(Lorg/h2/mvstore/db/TransactionStore$TransactionMap;)V
      23: return

  public void truncate(org.h2.engine.Session);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #42                 // Method getMap:(Lorg/h2/engine/Session;)Lorg/h2/mvstore/db/TransactionStore$TransactionMap;
       5: astore_2
       6: aload_2
       7: invokevirtual #100                // Method org/h2/mvstore/db/TransactionStore$TransactionMap.clear:()V
      10: return

  public boolean canGetFirstOrLast();
    Code:
       0: iconst_1
       1: ireturn

  public org.h2.index.Cursor findFirstOrLast(org.h2.engine.Session, boolean);
    Code:
       0: iload_2
       1: ifne          10
       4: ldc           #101                // String Spatial Index can only be fetch in ascending order
       6: invokestatic  #102                // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
       9: athrow
      10: aload_0
      11: aload_1
      12: invokespecial #73                 // Method find:(Lorg/h2/engine/Session;)Lorg/h2/index/Cursor;
      15: areturn

  public boolean needRebuild();
    Code:
       0: aload_0
       1: getfield      #39                 // Field dataMap:Lorg/h2/mvstore/db/TransactionStore$TransactionMap;
       4: invokevirtual #103                // Method org/h2/mvstore/db/TransactionStore$TransactionMap.sizeAsLongMax:()J
       7: lconst_0
       8: lcmp
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn
      18: astore_1
      19: ldc           #104                // int 90007
      21: aload_1
      22: iconst_0
      23: anewarray     #105                // class java/lang/String
      26: invokestatic  #106                // Method org/h2/message/DbException.get:(ILjava/lang/Throwable;[Ljava/lang/String;)Lorg/h2/message/DbException;
      29: athrow
    Exception table:
       from    to  target type
           0    17    18   Class java/lang/IllegalStateException

  public long getRowCount(org.h2.engine.Session);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #42                 // Method getMap:(Lorg/h2/engine/Session;)Lorg/h2/mvstore/db/TransactionStore$TransactionMap;
       5: astore_2
       6: aload_2
       7: invokevirtual #107                // Method org/h2/mvstore/db/TransactionStore$TransactionMap.sizeAsLong:()J
      10: lreturn

  public long getRowCountApproximation();
    Code:
       0: aload_0
       1: getfield      #39                 // Field dataMap:Lorg/h2/mvstore/db/TransactionStore$TransactionMap;
       4: invokevirtual #103                // Method org/h2/mvstore/db/TransactionStore$TransactionMap.sizeAsLongMax:()J
       7: lreturn
       8: astore_1
       9: ldc           #104                // int 90007
      11: aload_1
      12: iconst_0
      13: anewarray     #105                // class java/lang/String
      16: invokestatic  #106                // Method org/h2/message/DbException.get:(ILjava/lang/Throwable;[Ljava/lang/String;)Lorg/h2/message/DbException;
      19: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/IllegalStateException

  public long getDiskSpaceUsed();
    Code:
       0: lconst_0
       1: lreturn

  public void checkRename();
    Code:
       0: return

  org.h2.mvstore.db.TransactionStore$TransactionMap<org.h2.mvstore.rtree.SpatialKey, org.h2.value.Value> getMap(org.h2.engine.Session);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: getfield      #39                 // Field dataMap:Lorg/h2/mvstore/db/TransactionStore$TransactionMap;
       8: areturn
       9: aload_1
      10: invokevirtual #98                 // Method org/h2/engine/Session.getTransaction:()Lorg/h2/mvstore/db/TransactionStore$Transaction;
      13: astore_2
      14: aload_0
      15: getfield      #39                 // Field dataMap:Lorg/h2/mvstore/db/TransactionStore$TransactionMap;
      18: aload_2
      19: ldc2_w        #108                // long 9223372036854775807l
      22: invokevirtual #110                // Method org/h2/mvstore/db/TransactionStore$TransactionMap.getInstance:(Lorg/h2/mvstore/db/TransactionStore$Transaction;J)Lorg/h2/mvstore/db/TransactionStore$TransactionMap;
      25: areturn

  public org.h2.table.Table getTable();
    Code:
       0: aload_0
       1: invokevirtual #111                // Method getTable:()Lorg/h2/mvstore/db/MVTable;
       4: areturn
}
