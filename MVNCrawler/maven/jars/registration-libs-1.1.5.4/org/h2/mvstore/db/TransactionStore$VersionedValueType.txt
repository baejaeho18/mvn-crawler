Compiled from "TransactionStore.java"
public class org.h2.mvstore.db.TransactionStore$VersionedValueType implements org.h2.mvstore.type.DataType {
  private final org.h2.mvstore.type.DataType valueType;

  org.h2.mvstore.db.TransactionStore$VersionedValueType(org.h2.mvstore.type.DataType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field valueType:Lorg/h2/mvstore/type/DataType;
       9: return

  public int getMemory(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #3                  // class org/h2/mvstore/db/TransactionStore$VersionedValue
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field valueType:Lorg/h2/mvstore/type/DataType;
       9: aload_2
      10: getfield      #4                  // Field org/h2/mvstore/db/TransactionStore$VersionedValue.value:Ljava/lang/Object;
      13: invokeinterface #5,  2            // InterfaceMethod org/h2/mvstore/type/DataType.getMemory:(Ljava/lang/Object;)I
      18: bipush        8
      20: iadd
      21: ireturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_1
       8: checkcast     #3                  // class org/h2/mvstore/db/TransactionStore$VersionedValue
      11: astore_3
      12: aload_2
      13: checkcast     #3                  // class org/h2/mvstore/db/TransactionStore$VersionedValue
      16: astore        4
      18: aload_3
      19: getfield      #6                  // Field org/h2/mvstore/db/TransactionStore$VersionedValue.operationId:J
      22: aload         4
      24: getfield      #6                  // Field org/h2/mvstore/db/TransactionStore$VersionedValue.operationId:J
      27: lsub
      28: lstore        5
      30: lload         5
      32: lconst_0
      33: lcmp
      34: ifne          56
      37: aload_0
      38: getfield      #2                  // Field valueType:Lorg/h2/mvstore/type/DataType;
      41: aload_3
      42: getfield      #4                  // Field org/h2/mvstore/db/TransactionStore$VersionedValue.value:Ljava/lang/Object;
      45: aload         4
      47: getfield      #4                  // Field org/h2/mvstore/db/TransactionStore$VersionedValue.value:Ljava/lang/Object;
      50: invokeinterface #7,  3            // InterfaceMethod org/h2/mvstore/type/DataType.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      55: ireturn
      56: lload         5
      58: invokestatic  #8                  // Method java/lang/Long.signum:(J)I
      61: ireturn

  public void read(java.nio.ByteBuffer, java.lang.Object[], int, boolean);
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method java/nio/ByteBuffer.get:()B
       4: ifne          47
       7: iconst_0
       8: istore        5
      10: iload         5
      12: iload_3
      13: if_icmpge     44
      16: aload_2
      17: iload         5
      19: new           #3                  // class org/h2/mvstore/db/TransactionStore$VersionedValue
      22: dup
      23: lconst_0
      24: aload_0
      25: getfield      #2                  // Field valueType:Lorg/h2/mvstore/type/DataType;
      28: aload_1
      29: invokeinterface #10,  2           // InterfaceMethod org/h2/mvstore/type/DataType.read:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
      34: invokespecial #11                 // Method org/h2/mvstore/db/TransactionStore$VersionedValue."<init>":(JLjava/lang/Object;)V
      37: aastore
      38: iinc          5, 1
      41: goto          10
      44: goto          71
      47: iconst_0
      48: istore        5
      50: iload         5
      52: iload_3
      53: if_icmpge     71
      56: aload_2
      57: iload         5
      59: aload_0
      60: aload_1
      61: invokevirtual #12                 // Method read:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
      64: aastore
      65: iinc          5, 1
      68: goto          50
      71: return

  public java.lang.Object read(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method org/h2/mvstore/DataUtils.readVarLong:(Ljava/nio/ByteBuffer;)J
       4: lstore_2
       5: aload_1
       6: invokevirtual #9                  // Method java/nio/ByteBuffer.get:()B
       9: iconst_1
      10: if_icmpne     28
      13: aload_0
      14: getfield      #2                  // Field valueType:Lorg/h2/mvstore/type/DataType;
      17: aload_1
      18: invokeinterface #10,  2           // InterfaceMethod org/h2/mvstore/type/DataType.read:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
      23: astore        4
      25: goto          31
      28: aconst_null
      29: astore        4
      31: new           #3                  // class org/h2/mvstore/db/TransactionStore$VersionedValue
      34: dup
      35: lload_2
      36: aload         4
      38: invokespecial #11                 // Method org/h2/mvstore/db/TransactionStore$VersionedValue."<init>":(JLjava/lang/Object;)V
      41: areturn

  public void write(org.h2.mvstore.WriteBuffer, java.lang.Object[], int, boolean);
    Code:
       0: iconst_1
       1: istore        5
       3: iconst_0
       4: istore        6
       6: iload         6
       8: iload_3
       9: if_icmpge     48
      12: aload_2
      13: iload         6
      15: aaload
      16: checkcast     #3                  // class org/h2/mvstore/db/TransactionStore$VersionedValue
      19: astore        7
      21: aload         7
      23: getfield      #6                  // Field org/h2/mvstore/db/TransactionStore$VersionedValue.operationId:J
      26: lconst_0
      27: lcmp
      28: ifne          39
      31: aload         7
      33: getfield      #4                  // Field org/h2/mvstore/db/TransactionStore$VersionedValue.value:Ljava/lang/Object;
      36: ifnonnull     42
      39: iconst_0
      40: istore        5
      42: iinc          6, 1
      45: goto          6
      48: iload         5
      50: ifeq          101
      53: aload_1
      54: iconst_0
      55: invokevirtual #14                 // Method org/h2/mvstore/WriteBuffer.put:(B)Lorg/h2/mvstore/WriteBuffer;
      58: pop
      59: iconst_0
      60: istore        6
      62: iload         6
      64: iload_3
      65: if_icmpge     98
      68: aload_2
      69: iload         6
      71: aaload
      72: checkcast     #3                  // class org/h2/mvstore/db/TransactionStore$VersionedValue
      75: astore        7
      77: aload_0
      78: getfield      #2                  // Field valueType:Lorg/h2/mvstore/type/DataType;
      81: aload_1
      82: aload         7
      84: getfield      #4                  // Field org/h2/mvstore/db/TransactionStore$VersionedValue.value:Ljava/lang/Object;
      87: invokeinterface #15,  3           // InterfaceMethod org/h2/mvstore/type/DataType.write:(Lorg/h2/mvstore/WriteBuffer;Ljava/lang/Object;)V
      92: iinc          6, 1
      95: goto          62
      98: goto          131
     101: aload_1
     102: iconst_1
     103: invokevirtual #14                 // Method org/h2/mvstore/WriteBuffer.put:(B)Lorg/h2/mvstore/WriteBuffer;
     106: pop
     107: iconst_0
     108: istore        6
     110: iload         6
     112: iload_3
     113: if_icmpge     131
     116: aload_0
     117: aload_1
     118: aload_2
     119: iload         6
     121: aaload
     122: invokevirtual #16                 // Method write:(Lorg/h2/mvstore/WriteBuffer;Ljava/lang/Object;)V
     125: iinc          6, 1
     128: goto          110
     131: return

  public void write(org.h2.mvstore.WriteBuffer, java.lang.Object);
    Code:
       0: aload_2
       1: checkcast     #3                  // class org/h2/mvstore/db/TransactionStore$VersionedValue
       4: astore_3
       5: aload_1
       6: aload_3
       7: getfield      #6                  // Field org/h2/mvstore/db/TransactionStore$VersionedValue.operationId:J
      10: invokevirtual #17                 // Method org/h2/mvstore/WriteBuffer.putVarLong:(J)Lorg/h2/mvstore/WriteBuffer;
      13: pop
      14: aload_3
      15: getfield      #4                  // Field org/h2/mvstore/db/TransactionStore$VersionedValue.value:Ljava/lang/Object;
      18: ifnonnull     30
      21: aload_1
      22: iconst_0
      23: invokevirtual #14                 // Method org/h2/mvstore/WriteBuffer.put:(B)Lorg/h2/mvstore/WriteBuffer;
      26: pop
      27: goto          50
      30: aload_1
      31: iconst_1
      32: invokevirtual #14                 // Method org/h2/mvstore/WriteBuffer.put:(B)Lorg/h2/mvstore/WriteBuffer;
      35: pop
      36: aload_0
      37: getfield      #2                  // Field valueType:Lorg/h2/mvstore/type/DataType;
      40: aload_1
      41: aload_3
      42: getfield      #4                  // Field org/h2/mvstore/db/TransactionStore$VersionedValue.value:Ljava/lang/Object;
      45: invokeinterface #15,  3           // InterfaceMethod org/h2/mvstore/type/DataType.write:(Lorg/h2/mvstore/WriteBuffer;Ljava/lang/Object;)V
      50: return
}
