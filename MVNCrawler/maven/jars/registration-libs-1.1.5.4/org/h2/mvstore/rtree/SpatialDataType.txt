Compiled from "SpatialDataType.java"
public class org.h2.mvstore.rtree.SpatialDataType implements org.h2.mvstore.type.DataType {
  private final int dimensions;

  public org.h2.mvstore.rtree.SpatialDataType(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: iconst_1
       6: if_icmplt     19
       9: iload_1
      10: bipush        32
      12: if_icmpge     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ldc           #2                  // String Dimensions must be between 1 and 31, is {0}
      22: iconst_1
      23: anewarray     #3                  // class java/lang/Object
      26: dup
      27: iconst_0
      28: iload_1
      29: invokestatic  #4                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: aastore
      33: invokestatic  #5                  // Method org/h2/mvstore/DataUtils.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      36: aload_0
      37: iload_1
      38: putfield      #6                  // Field dimensions:I
      41: return

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_m1
      12: ireturn
      13: aload_2
      14: ifnonnull     19
      17: iconst_1
      18: ireturn
      19: aload_1
      20: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
      23: invokevirtual #8                  // Method org/h2/mvstore/rtree/SpatialKey.getId:()J
      26: lstore_3
      27: aload_2
      28: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
      31: invokevirtual #8                  // Method org/h2/mvstore/rtree/SpatialKey.getId:()J
      34: lstore        5
      36: lload_3
      37: lload         5
      39: invokestatic  #9                  // Method java/lang/Long.compare:(JJ)I
      42: ireturn

  public boolean equals(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        15
      11: aload_2
      12: ifnonnull     17
      15: iconst_0
      16: ireturn
      17: aload_1
      18: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
      21: invokevirtual #8                  // Method org/h2/mvstore/rtree/SpatialKey.getId:()J
      24: lstore_3
      25: aload_2
      26: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
      29: invokevirtual #8                  // Method org/h2/mvstore/rtree/SpatialKey.getId:()J
      32: lstore        5
      34: lload_3
      35: lload         5
      37: lcmp
      38: ifne          45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: ireturn

  public int getMemory(java.lang.Object);
    Code:
       0: bipush        40
       2: aload_0
       3: getfield      #6                  // Field dimensions:I
       6: iconst_4
       7: imul
       8: iadd
       9: ireturn

  public void read(java.nio.ByteBuffer, java.lang.Object[], int, boolean);
    Code:
       0: iconst_0
       1: istore        5
       3: iload         5
       5: iload_3
       6: if_icmpge     24
       9: aload_2
      10: iload         5
      12: aload_0
      13: aload_1
      14: invokevirtual #10                 // Method read:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
      17: aastore
      18: iinc          5, 1
      21: goto          3
      24: return

  public void write(org.h2.mvstore.WriteBuffer, java.lang.Object[], int, boolean);
    Code:
       0: iconst_0
       1: istore        5
       3: iload         5
       5: iload_3
       6: if_icmpge     24
       9: aload_0
      10: aload_1
      11: aload_2
      12: iload         5
      14: aaload
      15: invokevirtual #11                 // Method write:(Lorg/h2/mvstore/WriteBuffer;Ljava/lang/Object;)V
      18: iinc          5, 1
      21: goto          3
      24: return

  public void write(org.h2.mvstore.WriteBuffer, java.lang.Object);
    Code:
       0: aload_2
       1: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
       4: astore_3
       5: aload_3
       6: invokevirtual #12                 // Method org/h2/mvstore/rtree/SpatialKey.isNull:()Z
       9: ifeq          28
      12: aload_1
      13: iconst_m1
      14: invokevirtual #13                 // Method org/h2/mvstore/WriteBuffer.putVarInt:(I)Lorg/h2/mvstore/WriteBuffer;
      17: pop
      18: aload_1
      19: aload_3
      20: invokevirtual #8                  // Method org/h2/mvstore/rtree/SpatialKey.getId:()J
      23: invokevirtual #14                 // Method org/h2/mvstore/WriteBuffer.putVarLong:(J)Lorg/h2/mvstore/WriteBuffer;
      26: pop
      27: return
      28: iconst_0
      29: istore        4
      31: iconst_0
      32: istore        5
      34: iload         5
      36: aload_0
      37: getfield      #6                  // Field dimensions:I
      40: if_icmpge     74
      43: aload_3
      44: iload         5
      46: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
      49: aload_3
      50: iload         5
      52: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
      55: fcmpl
      56: ifne          68
      59: iload         4
      61: iconst_1
      62: iload         5
      64: ishl
      65: ior
      66: istore        4
      68: iinc          5, 1
      71: goto          34
      74: aload_1
      75: iload         4
      77: invokevirtual #13                 // Method org/h2/mvstore/WriteBuffer.putVarInt:(I)Lorg/h2/mvstore/WriteBuffer;
      80: pop
      81: iconst_0
      82: istore        5
      84: iload         5
      86: aload_0
      87: getfield      #6                  // Field dimensions:I
      90: if_icmpge     131
      93: aload_1
      94: aload_3
      95: iload         5
      97: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
     100: invokevirtual #17                 // Method org/h2/mvstore/WriteBuffer.putFloat:(F)Lorg/h2/mvstore/WriteBuffer;
     103: pop
     104: iload         4
     106: iconst_1
     107: iload         5
     109: ishl
     110: iand
     111: ifne          125
     114: aload_1
     115: aload_3
     116: iload         5
     118: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
     121: invokevirtual #17                 // Method org/h2/mvstore/WriteBuffer.putFloat:(F)Lorg/h2/mvstore/WriteBuffer;
     124: pop
     125: iinc          5, 1
     128: goto          84
     131: aload_1
     132: aload_3
     133: invokevirtual #8                  // Method org/h2/mvstore/rtree/SpatialKey.getId:()J
     136: invokevirtual #14                 // Method org/h2/mvstore/WriteBuffer.putVarLong:(J)Lorg/h2/mvstore/WriteBuffer;
     139: pop
     140: return

  public java.lang.Object read(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method org/h2/mvstore/DataUtils.readVarInt:(Ljava/nio/ByteBuffer;)I
       4: istore_2
       5: iload_2
       6: iconst_m1
       7: if_icmpne     27
      10: aload_1
      11: invokestatic  #19                 // Method org/h2/mvstore/DataUtils.readVarLong:(Ljava/nio/ByteBuffer;)J
      14: lstore_3
      15: new           #7                  // class org/h2/mvstore/rtree/SpatialKey
      18: dup
      19: lload_3
      20: iconst_0
      21: newarray       float
      23: invokespecial #20                 // Method org/h2/mvstore/rtree/SpatialKey."<init>":(J[F)V
      26: areturn
      27: aload_0
      28: getfield      #6                  // Field dimensions:I
      31: iconst_2
      32: imul
      33: newarray       float
      35: astore_3
      36: iconst_0
      37: istore        4
      39: iload         4
      41: aload_0
      42: getfield      #6                  // Field dimensions:I
      45: if_icmpge     102
      48: aload_1
      49: invokevirtual #21                 // Method java/nio/ByteBuffer.getFloat:()F
      52: fstore        5
      54: iload_2
      55: iconst_1
      56: iload         4
      58: ishl
      59: iand
      60: ifeq          70
      63: fload         5
      65: fstore        6
      67: goto          76
      70: aload_1
      71: invokevirtual #21                 // Method java/nio/ByteBuffer.getFloat:()F
      74: fstore        6
      76: aload_3
      77: iload         4
      79: iload         4
      81: iadd
      82: fload         5
      84: fastore
      85: aload_3
      86: iload         4
      88: iload         4
      90: iadd
      91: iconst_1
      92: iadd
      93: fload         6
      95: fastore
      96: iinc          4, 1
      99: goto          39
     102: aload_1
     103: invokestatic  #19                 // Method org/h2/mvstore/DataUtils.readVarLong:(Ljava/nio/ByteBuffer;)J
     106: lstore        4
     108: new           #7                  // class org/h2/mvstore/rtree/SpatialKey
     111: dup
     112: lload         4
     114: aload_3
     115: invokespecial #20                 // Method org/h2/mvstore/rtree/SpatialKey."<init>":(J[F)V
     118: areturn

  public boolean isOverlap(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
       4: astore_3
       5: aload_2
       6: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
       9: astore        4
      11: aload_3
      12: invokevirtual #12                 // Method org/h2/mvstore/rtree/SpatialKey.isNull:()Z
      15: ifne          26
      18: aload         4
      20: invokevirtual #12                 // Method org/h2/mvstore/rtree/SpatialKey.isNull:()Z
      23: ifeq          28
      26: iconst_0
      27: ireturn
      28: iconst_0
      29: istore        5
      31: iload         5
      33: aload_0
      34: getfield      #6                  // Field dimensions:I
      37: if_icmpge     82
      40: aload_3
      41: iload         5
      43: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
      46: aload         4
      48: iload         5
      50: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
      53: fcmpg
      54: iflt          74
      57: aload_3
      58: iload         5
      60: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
      63: aload         4
      65: iload         5
      67: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
      70: fcmpl
      71: ifle          76
      74: iconst_0
      75: ireturn
      76: iinc          5, 1
      79: goto          31
      82: iconst_1
      83: ireturn

  public void increaseBounds(java.lang.Object, java.lang.Object);
    Code:
       0: aload_2
       1: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
       4: astore_3
       5: aload_1
       6: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
       9: astore        4
      11: aload_3
      12: invokevirtual #12                 // Method org/h2/mvstore/rtree/SpatialKey.isNull:()Z
      15: ifne          26
      18: aload         4
      20: invokevirtual #12                 // Method org/h2/mvstore/rtree/SpatialKey.isNull:()Z
      23: ifeq          27
      26: return
      27: iconst_0
      28: istore        5
      30: iload         5
      32: aload_0
      33: getfield      #6                  // Field dimensions:I
      36: if_icmpge     91
      39: aload         4
      41: iload         5
      43: aload         4
      45: iload         5
      47: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
      50: aload_3
      51: iload         5
      53: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
      56: invokestatic  #22                 // Method java/lang/Math.min:(FF)F
      59: invokevirtual #23                 // Method org/h2/mvstore/rtree/SpatialKey.setMin:(IF)V
      62: aload         4
      64: iload         5
      66: aload         4
      68: iload         5
      70: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
      73: aload_3
      74: iload         5
      76: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
      79: invokestatic  #24                 // Method java/lang/Math.max:(FF)F
      82: invokevirtual #25                 // Method org/h2/mvstore/rtree/SpatialKey.setMax:(IF)V
      85: iinc          5, 1
      88: goto          30
      91: return

  public float getAreaIncrease(java.lang.Object, java.lang.Object);
    Code:
       0: aload_2
       1: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
       4: astore_3
       5: aload_1
       6: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
       9: astore        4
      11: aload         4
      13: invokevirtual #12                 // Method org/h2/mvstore/rtree/SpatialKey.isNull:()Z
      16: ifne          26
      19: aload_3
      20: invokevirtual #12                 // Method org/h2/mvstore/rtree/SpatialKey.isNull:()Z
      23: ifeq          28
      26: fconst_0
      27: freturn
      28: aload         4
      30: iconst_0
      31: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
      34: fstore        5
      36: aload         4
      38: iconst_0
      39: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
      42: fstore        6
      44: fload         6
      46: fload         5
      48: fsub
      49: fstore        7
      51: fload         5
      53: aload_3
      54: iconst_0
      55: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
      58: invokestatic  #22                 // Method java/lang/Math.min:(FF)F
      61: fstore        5
      63: fload         6
      65: aload_3
      66: iconst_0
      67: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
      70: invokestatic  #24                 // Method java/lang/Math.max:(FF)F
      73: fstore        6
      75: fload         6
      77: fload         5
      79: fsub
      80: fstore        8
      82: iconst_1
      83: istore        9
      85: iload         9
      87: aload_0
      88: getfield      #6                  // Field dimensions:I
      91: if_icmpge     164
      94: aload         4
      96: iload         9
      98: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
     101: fstore        5
     103: aload         4
     105: iload         9
     107: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
     110: fstore        6
     112: fload         7
     114: fload         6
     116: fload         5
     118: fsub
     119: fmul
     120: fstore        7
     122: fload         5
     124: aload_3
     125: iload         9
     127: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
     130: invokestatic  #22                 // Method java/lang/Math.min:(FF)F
     133: fstore        5
     135: fload         6
     137: aload_3
     138: iload         9
     140: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
     143: invokestatic  #24                 // Method java/lang/Math.max:(FF)F
     146: fstore        6
     148: fload         8
     150: fload         6
     152: fload         5
     154: fsub
     155: fmul
     156: fstore        8
     158: iinc          9, 1
     161: goto          85
     164: fload         8
     166: fload         7
     168: fsub
     169: freturn

  float getCombinedArea(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
       4: astore_3
       5: aload_2
       6: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
       9: astore        4
      11: aload_3
      12: invokevirtual #12                 // Method org/h2/mvstore/rtree/SpatialKey.isNull:()Z
      15: ifeq          25
      18: aload_0
      19: aload         4
      21: invokespecial #26                 // Method getArea:(Lorg/h2/mvstore/rtree/SpatialKey;)F
      24: freturn
      25: aload         4
      27: invokevirtual #12                 // Method org/h2/mvstore/rtree/SpatialKey.isNull:()Z
      30: ifeq          39
      33: aload_0
      34: aload_3
      35: invokespecial #26                 // Method getArea:(Lorg/h2/mvstore/rtree/SpatialKey;)F
      38: freturn
      39: fconst_1
      40: fstore        5
      42: iconst_0
      43: istore        6
      45: iload         6
      47: aload_0
      48: getfield      #6                  // Field dimensions:I
      51: if_icmpge     106
      54: aload_3
      55: iload         6
      57: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
      60: aload         4
      62: iload         6
      64: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
      67: invokestatic  #22                 // Method java/lang/Math.min:(FF)F
      70: fstore        7
      72: aload_3
      73: iload         6
      75: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
      78: aload         4
      80: iload         6
      82: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
      85: invokestatic  #24                 // Method java/lang/Math.max:(FF)F
      88: fstore        8
      90: fload         5
      92: fload         8
      94: fload         7
      96: fsub
      97: fmul
      98: fstore        5
     100: iinc          6, 1
     103: goto          45
     106: fload         5
     108: freturn

  private float getArea(org.h2.mvstore.rtree.SpatialKey);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method org/h2/mvstore/rtree/SpatialKey.isNull:()Z
       4: ifeq          9
       7: fconst_0
       8: freturn
       9: fconst_1
      10: fstore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_0
      15: getfield      #6                  // Field dimensions:I
      18: if_icmpge     41
      21: fload_2
      22: aload_1
      23: iload_3
      24: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
      27: aload_1
      28: iload_3
      29: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
      32: fsub
      33: fmul
      34: fstore_2
      35: iinc          3, 1
      38: goto          13
      41: fload_2
      42: freturn

  public boolean contains(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
       4: astore_3
       5: aload_2
       6: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
       9: astore        4
      11: aload_3
      12: invokevirtual #12                 // Method org/h2/mvstore/rtree/SpatialKey.isNull:()Z
      15: ifne          26
      18: aload         4
      20: invokevirtual #12                 // Method org/h2/mvstore/rtree/SpatialKey.isNull:()Z
      23: ifeq          28
      26: iconst_0
      27: ireturn
      28: iconst_0
      29: istore        5
      31: iload         5
      33: aload_0
      34: getfield      #6                  // Field dimensions:I
      37: if_icmpge     82
      40: aload_3
      41: iload         5
      43: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
      46: aload         4
      48: iload         5
      50: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
      53: fcmpl
      54: ifgt          74
      57: aload_3
      58: iload         5
      60: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
      63: aload         4
      65: iload         5
      67: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
      70: fcmpg
      71: ifge          76
      74: iconst_0
      75: ireturn
      76: iinc          5, 1
      79: goto          31
      82: iconst_1
      83: ireturn

  public boolean isInside(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
       4: astore_3
       5: aload_2
       6: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
       9: astore        4
      11: aload_3
      12: invokevirtual #12                 // Method org/h2/mvstore/rtree/SpatialKey.isNull:()Z
      15: ifne          26
      18: aload         4
      20: invokevirtual #12                 // Method org/h2/mvstore/rtree/SpatialKey.isNull:()Z
      23: ifeq          28
      26: iconst_0
      27: ireturn
      28: iconst_0
      29: istore        5
      31: iload         5
      33: aload_0
      34: getfield      #6                  // Field dimensions:I
      37: if_icmpge     82
      40: aload_3
      41: iload         5
      43: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
      46: aload         4
      48: iload         5
      50: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
      53: fcmpg
      54: ifle          74
      57: aload_3
      58: iload         5
      60: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
      63: aload         4
      65: iload         5
      67: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
      70: fcmpl
      71: iflt          76
      74: iconst_0
      75: ireturn
      76: iinc          5, 1
      79: goto          31
      82: iconst_1
      83: ireturn

  java.lang.Object createBoundingBox(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
       4: astore_2
       5: aload_2
       6: invokevirtual #12                 // Method org/h2/mvstore/rtree/SpatialKey.isNull:()Z
       9: ifeq          14
      12: aload_2
      13: areturn
      14: aload_0
      15: getfield      #6                  // Field dimensions:I
      18: iconst_2
      19: imul
      20: newarray       float
      22: astore_3
      23: iconst_0
      24: istore        4
      26: iload         4
      28: aload_0
      29: getfield      #6                  // Field dimensions:I
      32: if_icmpge     69
      35: aload_3
      36: iload         4
      38: iload         4
      40: iadd
      41: aload_2
      42: iload         4
      44: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
      47: fastore
      48: aload_3
      49: iload         4
      51: iload         4
      53: iadd
      54: iconst_1
      55: iadd
      56: aload_2
      57: iload         4
      59: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
      62: fastore
      63: iinc          4, 1
      66: goto          26
      69: new           #7                  // class org/h2/mvstore/rtree/SpatialKey
      72: dup
      73: lconst_0
      74: aload_3
      75: invokespecial #20                 // Method org/h2/mvstore/rtree/SpatialKey."<init>":(J[F)V
      78: areturn

  public int[] getExtremes(java.util.ArrayList<java.lang.Object>);
    Code:
       0: aload_1
       1: invokestatic  #27                 // Method getNotNull:(Ljava/util/ArrayList;)Ljava/util/ArrayList;
       4: astore_1
       5: aload_1
       6: invokevirtual #28                 // Method java/util/ArrayList.isEmpty:()Z
       9: ifeq          14
      12: aconst_null
      13: areturn
      14: aload_0
      15: aload_1
      16: iconst_0
      17: invokevirtual #29                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      20: invokevirtual #30                 // Method createBoundingBox:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
      26: astore_2
      27: aload_0
      28: aload_2
      29: invokevirtual #30                 // Method createBoundingBox:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
      35: astore_3
      36: iconst_0
      37: istore        4
      39: iload         4
      41: aload_0
      42: getfield      #6                  // Field dimensions:I
      45: if_icmpge     82
      48: aload_3
      49: iload         4
      51: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
      54: fstore        5
      56: aload_3
      57: iload         4
      59: aload_3
      60: iload         4
      62: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
      65: invokevirtual #23                 // Method org/h2/mvstore/rtree/SpatialKey.setMin:(IF)V
      68: aload_3
      69: iload         4
      71: fload         5
      73: invokevirtual #25                 // Method org/h2/mvstore/rtree/SpatialKey.setMax:(IF)V
      76: iinc          4, 1
      79: goto          39
      82: aload_1
      83: invokevirtual #31                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      86: astore        4
      88: aload         4
      90: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      95: ifeq          124
      98: aload         4
     100: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     105: astore        5
     107: aload_0
     108: aload_2
     109: aload         5
     111: invokevirtual #34                 // Method increaseBounds:(Ljava/lang/Object;Ljava/lang/Object;)V
     114: aload_0
     115: aload_3
     116: aload         5
     118: invokespecial #35                 // Method increaseMaxInnerBounds:(Ljava/lang/Object;Ljava/lang/Object;)V
     121: goto          88
     124: dconst_0
     125: dstore        4
     127: iconst_0
     128: istore        6
     130: iconst_0
     131: istore        7
     133: iload         7
     135: aload_0
     136: getfield      #6                  // Field dimensions:I
     139: if_icmpge     213
     142: aload_3
     143: iload         7
     145: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
     148: aload_3
     149: iload         7
     151: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
     154: fsub
     155: fstore        8
     157: fload         8
     159: fconst_0
     160: fcmpg
     161: ifge          167
     164: goto          207
     167: aload_2
     168: iload         7
     170: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
     173: aload_2
     174: iload         7
     176: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
     179: fsub
     180: fstore        9
     182: fload         8
     184: fload         9
     186: fdiv
     187: fstore        10
     189: fload         10
     191: f2d
     192: dload         4
     194: dcmpl
     195: ifle          207
     198: fload         10
     200: f2d
     201: dstore        4
     203: iload         7
     205: istore        6
     207: iinc          7, 1
     210: goto          133
     213: dload         4
     215: dconst_0
     216: dcmpg
     217: ifgt          222
     220: aconst_null
     221: areturn
     222: aload_3
     223: iload         6
     225: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
     228: fstore        7
     230: aload_3
     231: iload         6
     233: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
     236: fstore        8
     238: iconst_m1
     239: istore        9
     241: iconst_m1
     242: istore        10
     244: iconst_0
     245: istore        11
     247: iload         11
     249: aload_1
     250: invokevirtual #36                 // Method java/util/ArrayList.size:()I
     253: if_icmpge     330
     256: iload         9
     258: iflt          266
     261: iload         10
     263: ifge          330
     266: aload_1
     267: iload         11
     269: invokevirtual #29                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
     272: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
     275: astore        12
     277: iload         9
     279: ifge          302
     282: aload         12
     284: iload         6
     286: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
     289: fload         7
     291: fcmpl
     292: ifne          302
     295: iload         11
     297: istore        9
     299: goto          324
     302: iload         10
     304: ifge          324
     307: aload         12
     309: iload         6
     311: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
     314: fload         8
     316: fcmpl
     317: ifne          324
     320: iload         11
     322: istore        10
     324: iinc          11, 1
     327: goto          247
     330: iconst_2
     331: newarray       int
     333: dup
     334: iconst_0
     335: iload         9
     337: iastore
     338: dup
     339: iconst_1
     340: iload         10
     342: iastore
     343: areturn

  private static java.util.ArrayList<java.lang.Object> getNotNull(java.util.ArrayList<java.lang.Object>);
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokevirtual #31                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          47
      16: aload_2
      17: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: astore_3
      23: aload_3
      24: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
      27: astore        4
      29: aload         4
      31: invokevirtual #12                 // Method org/h2/mvstore/rtree/SpatialKey.isNull:()Z
      34: ifeq          44
      37: invokestatic  #37                 // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
      40: astore_1
      41: goto          47
      44: goto          7
      47: aload_1
      48: ifnonnull     53
      51: aload_0
      52: areturn
      53: aload_0
      54: invokevirtual #31                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      57: astore_2
      58: aload_2
      59: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          98
      67: aload_2
      68: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: astore_3
      74: aload_3
      75: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
      78: astore        4
      80: aload         4
      82: invokevirtual #12                 // Method org/h2/mvstore/rtree/SpatialKey.isNull:()Z
      85: ifne          95
      88: aload_1
      89: aload         4
      91: invokevirtual #38                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      94: pop
      95: goto          58
      98: aload_1
      99: areturn

  private void increaseMaxInnerBounds(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
       4: astore_3
       5: aload_2
       6: checkcast     #7                  // class org/h2/mvstore/rtree/SpatialKey
       9: astore        4
      11: iconst_0
      12: istore        5
      14: iload         5
      16: aload_0
      17: getfield      #6                  // Field dimensions:I
      20: if_icmpge     73
      23: aload_3
      24: iload         5
      26: aload_3
      27: iload         5
      29: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
      32: aload         4
      34: iload         5
      36: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
      39: invokestatic  #22                 // Method java/lang/Math.min:(FF)F
      42: invokevirtual #23                 // Method org/h2/mvstore/rtree/SpatialKey.setMin:(IF)V
      45: aload_3
      46: iload         5
      48: aload_3
      49: iload         5
      51: invokevirtual #16                 // Method org/h2/mvstore/rtree/SpatialKey.max:(I)F
      54: aload         4
      56: iload         5
      58: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialKey.min:(I)F
      61: invokestatic  #24                 // Method java/lang/Math.max:(FF)F
      64: invokevirtual #25                 // Method org/h2/mvstore/rtree/SpatialKey.setMax:(IF)V
      67: iinc          5, 1
      70: goto          14
      73: return
}
