Compiled from "MVRTreeMap.java"
public class org.h2.mvstore.rtree.MVRTreeMap$RTreeCursor implements java.util.Iterator<org.h2.mvstore.rtree.SpatialKey> {
  private final org.h2.mvstore.rtree.SpatialKey filter;

  private org.h2.mvstore.CursorPos pos;

  private org.h2.mvstore.rtree.SpatialKey current;

  private final org.h2.mvstore.Page root;

  private boolean initialized;

  protected org.h2.mvstore.rtree.MVRTreeMap$RTreeCursor(org.h2.mvstore.Page, org.h2.mvstore.rtree.SpatialKey);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field root:Lorg/h2/mvstore/Page;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field filter:Lorg/h2/mvstore/rtree/SpatialKey;
      14: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field initialized:Z
       4: ifne          33
       7: aload_0
       8: new           #5                  // class org/h2/mvstore/CursorPos
      11: dup
      12: aload_0
      13: getfield      #2                  // Field root:Lorg/h2/mvstore/Page;
      16: iconst_0
      17: aconst_null
      18: invokespecial #6                  // Method org/h2/mvstore/CursorPos."<init>":(Lorg/h2/mvstore/Page;ILorg/h2/mvstore/CursorPos;)V
      21: putfield      #7                  // Field pos:Lorg/h2/mvstore/CursorPos;
      24: aload_0
      25: invokevirtual #8                  // Method fetchNext:()V
      28: aload_0
      29: iconst_1
      30: putfield      #4                  // Field initialized:Z
      33: aload_0
      34: getfield      #9                  // Field current:Lorg/h2/mvstore/rtree/SpatialKey;
      37: ifnull        44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  public void skip(long);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method hasNext:()Z
       4: ifeq          24
       7: lload_1
       8: dup2
       9: lconst_1
      10: lsub
      11: lstore_1
      12: lconst_0
      13: lcmp
      14: ifle          24
      17: aload_0
      18: invokevirtual #8                  // Method fetchNext:()V
      21: goto          0
      24: return

  public org.h2.mvstore.rtree.SpatialKey next();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method hasNext:()Z
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #9                  // Field current:Lorg/h2/mvstore/rtree/SpatialKey;
      13: astore_1
      14: aload_0
      15: invokevirtual #8                  // Method fetchNext:()V
      18: aload_1
      19: areturn

  public void remove();
    Code:
       0: ldc           #11                 // String Removing is not supported
       2: invokestatic  #12                 // Method org/h2/mvstore/DataUtils.newUnsupportedOperationException:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       5: athrow

  protected void fetchNext();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pos:Lorg/h2/mvstore/CursorPos;
       4: ifnull        209
       7: aload_0
       8: getfield      #7                  // Field pos:Lorg/h2/mvstore/CursorPos;
      11: getfield      #13                 // Field org/h2/mvstore/CursorPos.page:Lorg/h2/mvstore/Page;
      14: astore_1
      15: aload_1
      16: invokevirtual #14                 // Method org/h2/mvstore/Page.isLeaf:()Z
      19: ifeq          87
      22: aload_0
      23: getfield      #7                  // Field pos:Lorg/h2/mvstore/CursorPos;
      26: getfield      #15                 // Field org/h2/mvstore/CursorPos.index:I
      29: aload_1
      30: invokevirtual #16                 // Method org/h2/mvstore/Page.getKeyCount:()I
      33: if_icmpge     195
      36: aload_1
      37: aload_0
      38: getfield      #7                  // Field pos:Lorg/h2/mvstore/CursorPos;
      41: dup
      42: getfield      #15                 // Field org/h2/mvstore/CursorPos.index:I
      45: dup_x1
      46: iconst_1
      47: iadd
      48: putfield      #15                 // Field org/h2/mvstore/CursorPos.index:I
      51: invokevirtual #17                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
      54: checkcast     #18                 // class org/h2/mvstore/rtree/SpatialKey
      57: astore_2
      58: aload_0
      59: getfield      #3                  // Field filter:Lorg/h2/mvstore/rtree/SpatialKey;
      62: ifnull        78
      65: aload_0
      66: iconst_1
      67: aload_2
      68: aload_0
      69: getfield      #3                  // Field filter:Lorg/h2/mvstore/rtree/SpatialKey;
      72: invokevirtual #19                 // Method check:(ZLorg/h2/mvstore/rtree/SpatialKey;Lorg/h2/mvstore/rtree/SpatialKey;)Z
      75: ifeq          84
      78: aload_0
      79: aload_2
      80: putfield      #9                  // Field current:Lorg/h2/mvstore/rtree/SpatialKey;
      83: return
      84: goto          22
      87: iconst_0
      88: istore_2
      89: aload_0
      90: getfield      #7                  // Field pos:Lorg/h2/mvstore/CursorPos;
      93: getfield      #15                 // Field org/h2/mvstore/CursorPos.index:I
      96: aload_1
      97: invokevirtual #16                 // Method org/h2/mvstore/Page.getKeyCount:()I
     100: if_icmpge     188
     103: aload_0
     104: getfield      #7                  // Field pos:Lorg/h2/mvstore/CursorPos;
     107: dup
     108: getfield      #15                 // Field org/h2/mvstore/CursorPos.index:I
     111: dup_x1
     112: iconst_1
     113: iadd
     114: putfield      #15                 // Field org/h2/mvstore/CursorPos.index:I
     117: istore_3
     118: aload_1
     119: iload_3
     120: invokevirtual #17                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
     123: checkcast     #18                 // class org/h2/mvstore/rtree/SpatialKey
     126: astore        4
     128: aload_0
     129: getfield      #3                  // Field filter:Lorg/h2/mvstore/rtree/SpatialKey;
     132: ifnull        149
     135: aload_0
     136: iconst_0
     137: aload         4
     139: aload_0
     140: getfield      #3                  // Field filter:Lorg/h2/mvstore/rtree/SpatialKey;
     143: invokevirtual #19                 // Method check:(ZLorg/h2/mvstore/rtree/SpatialKey;Lorg/h2/mvstore/rtree/SpatialKey;)Z
     146: ifeq          185
     149: aload_0
     150: getfield      #7                  // Field pos:Lorg/h2/mvstore/CursorPos;
     153: getfield      #13                 // Field org/h2/mvstore/CursorPos.page:Lorg/h2/mvstore/Page;
     156: iload_3
     157: invokevirtual #20                 // Method org/h2/mvstore/Page.getChildPage:(I)Lorg/h2/mvstore/Page;
     160: astore        5
     162: aload_0
     163: new           #5                  // class org/h2/mvstore/CursorPos
     166: dup
     167: aload         5
     169: iconst_0
     170: aload_0
     171: getfield      #7                  // Field pos:Lorg/h2/mvstore/CursorPos;
     174: invokespecial #6                  // Method org/h2/mvstore/CursorPos."<init>":(Lorg/h2/mvstore/Page;ILorg/h2/mvstore/CursorPos;)V
     177: putfield      #7                  // Field pos:Lorg/h2/mvstore/CursorPos;
     180: iconst_1
     181: istore_2
     182: goto          188
     185: goto          89
     188: iload_2
     189: ifeq          195
     192: goto          0
     195: aload_0
     196: aload_0
     197: getfield      #7                  // Field pos:Lorg/h2/mvstore/CursorPos;
     200: getfield      #21                 // Field org/h2/mvstore/CursorPos.parent:Lorg/h2/mvstore/CursorPos;
     203: putfield      #7                  // Field pos:Lorg/h2/mvstore/CursorPos;
     206: goto          0
     209: aload_0
     210: aconst_null
     211: putfield      #9                  // Field current:Lorg/h2/mvstore/rtree/SpatialKey;
     214: return

  protected boolean check(boolean, org.h2.mvstore.rtree.SpatialKey, org.h2.mvstore.rtree.SpatialKey);
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method next:()Lorg/h2/mvstore/rtree/SpatialKey;
       4: areturn
}
