Compiled from "MVRTreeMap.java"
public class org.h2.mvstore.rtree.MVRTreeMap<V> extends org.h2.mvstore.MVMap<org.h2.mvstore.rtree.SpatialKey, V> {
  final org.h2.mvstore.rtree.SpatialDataType keyType;

  private boolean quadraticSplit;

  public org.h2.mvstore.rtree.MVRTreeMap(int, org.h2.mvstore.type.DataType);
    Code:
       0: aload_0
       1: new           #1                  // class org/h2/mvstore/rtree/SpatialDataType
       4: dup
       5: iload_1
       6: invokespecial #2                  // Method org/h2/mvstore/rtree/SpatialDataType."<init>":(I)V
       9: aload_2
      10: invokespecial #3                  // Method org/h2/mvstore/MVMap."<init>":(Lorg/h2/mvstore/type/DataType;Lorg/h2/mvstore/type/DataType;)V
      13: aload_0
      14: aload_0
      15: invokevirtual #4                  // Method getKeyType:()Lorg/h2/mvstore/type/DataType;
      18: checkcast     #1                  // class org/h2/mvstore/rtree/SpatialDataType
      21: putfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
      24: return

  public static <V> org.h2.mvstore.rtree.MVRTreeMap<V> create(int, org.h2.mvstore.type.DataType);
    Code:
       0: new           #6                  // class org/h2/mvstore/rtree/MVRTreeMap
       3: dup
       4: iload_0
       5: aload_1
       6: invokespecial #7                  // Method "<init>":(ILorg/h2/mvstore/type/DataType;)V
       9: areturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field root:Lorg/h2/mvstore/Page;
       5: aload_1
       6: invokevirtual #9                  // Method get:(Lorg/h2/mvstore/Page;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public org.h2.mvstore.rtree.MVRTreeMap$RTreeCursor findIntersectingKeys(org.h2.mvstore.rtree.SpatialKey);
    Code:
       0: new           #10                 // class org/h2/mvstore/rtree/MVRTreeMap$1
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #8                  // Field root:Lorg/h2/mvstore/Page;
       9: aload_1
      10: invokespecial #11                 // Method org/h2/mvstore/rtree/MVRTreeMap$1."<init>":(Lorg/h2/mvstore/rtree/MVRTreeMap;Lorg/h2/mvstore/Page;Lorg/h2/mvstore/rtree/SpatialKey;)V
      13: areturn

  public org.h2.mvstore.rtree.MVRTreeMap$RTreeCursor findContainedKeys(org.h2.mvstore.rtree.SpatialKey);
    Code:
       0: new           #12                 // class org/h2/mvstore/rtree/MVRTreeMap$2
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #8                  // Field root:Lorg/h2/mvstore/Page;
       9: aload_1
      10: invokespecial #13                 // Method org/h2/mvstore/rtree/MVRTreeMap$2."<init>":(Lorg/h2/mvstore/rtree/MVRTreeMap;Lorg/h2/mvstore/Page;Lorg/h2/mvstore/rtree/SpatialKey;)V
      13: areturn

  private boolean contains(org.h2.mvstore.Page, int, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
       4: aload_1
       5: iload_2
       6: invokevirtual #14                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
       9: aload_3
      10: invokevirtual #15                 // Method org/h2/mvstore/rtree/SpatialDataType.contains:(Ljava/lang/Object;Ljava/lang/Object;)Z
      13: ireturn

  protected java.lang.Object get(org.h2.mvstore.Page, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #16                 // Method org/h2/mvstore/Page.isLeaf:()Z
       4: ifne          56
       7: iconst_0
       8: istore_3
       9: iload_3
      10: aload_1
      11: invokevirtual #17                 // Method org/h2/mvstore/Page.getKeyCount:()I
      14: if_icmpge     53
      17: aload_0
      18: aload_1
      19: iload_3
      20: aload_2
      21: invokespecial #18                 // Method contains:(Lorg/h2/mvstore/Page;ILjava/lang/Object;)Z
      24: ifeq          47
      27: aload_0
      28: aload_1
      29: iload_3
      30: invokevirtual #19                 // Method org/h2/mvstore/Page.getChildPage:(I)Lorg/h2/mvstore/Page;
      33: aload_2
      34: invokevirtual #9                  // Method get:(Lorg/h2/mvstore/Page;Ljava/lang/Object;)Ljava/lang/Object;
      37: astore        4
      39: aload         4
      41: ifnull        47
      44: aload         4
      46: areturn
      47: iinc          3, 1
      50: goto          9
      53: goto          94
      56: iconst_0
      57: istore_3
      58: iload_3
      59: aload_1
      60: invokevirtual #17                 // Method org/h2/mvstore/Page.getKeyCount:()I
      63: if_icmpge     94
      66: aload_0
      67: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
      70: aload_1
      71: iload_3
      72: invokevirtual #14                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
      75: aload_2
      76: invokevirtual #20                 // Method org/h2/mvstore/rtree/SpatialDataType.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      79: ifeq          88
      82: aload_1
      83: iload_3
      84: invokevirtual #21                 // Method org/h2/mvstore/Page.getValue:(I)Ljava/lang/Object;
      87: areturn
      88: iinc          3, 1
      91: goto          58
      94: aconst_null
      95: areturn

  protected synchronized java.lang.Object remove(org.h2.mvstore.Page, long, java.lang.Object);
    Code:
       0: aconst_null
       1: astore        5
       3: aload_1
       4: invokevirtual #16                 // Method org/h2/mvstore/Page.isLeaf:()Z
       7: ifeq          66
      10: iconst_0
      11: istore        6
      13: iload         6
      15: aload_1
      16: invokevirtual #17                 // Method org/h2/mvstore/Page.getKeyCount:()I
      19: if_icmpge     63
      22: aload_0
      23: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
      26: aload_1
      27: iload         6
      29: invokevirtual #14                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
      32: aload         4
      34: invokevirtual #20                 // Method org/h2/mvstore/rtree/SpatialDataType.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      37: ifeq          57
      40: aload_1
      41: iload         6
      43: invokevirtual #21                 // Method org/h2/mvstore/Page.getValue:(I)Ljava/lang/Object;
      46: astore        5
      48: aload_1
      49: iload         6
      51: invokevirtual #22                 // Method org/h2/mvstore/Page.remove:(I)V
      54: goto          63
      57: iinc          6, 1
      60: goto          13
      63: aload         5
      65: areturn
      66: iconst_0
      67: istore        6
      69: iload         6
      71: aload_1
      72: invokevirtual #17                 // Method org/h2/mvstore/Page.getKeyCount:()I
      75: if_icmpge     220
      78: aload_0
      79: aload_1
      80: iload         6
      82: aload         4
      84: invokespecial #18                 // Method contains:(Lorg/h2/mvstore/Page;ILjava/lang/Object;)Z
      87: ifeq          214
      90: aload_1
      91: iload         6
      93: invokevirtual #19                 // Method org/h2/mvstore/Page.getChildPage:(I)Lorg/h2/mvstore/Page;
      96: astore        7
      98: aload         7
     100: lload_2
     101: invokevirtual #23                 // Method org/h2/mvstore/Page.copy:(J)Lorg/h2/mvstore/Page;
     104: astore        8
     106: aload         8
     108: invokevirtual #24                 // Method org/h2/mvstore/Page.getTotalCount:()J
     111: lstore        9
     113: aload_0
     114: aload         8
     116: lload_2
     117: aload         4
     119: invokevirtual #25                 // Method remove:(Lorg/h2/mvstore/Page;JLjava/lang/Object;)Ljava/lang/Object;
     122: astore        5
     124: aload_1
     125: iload         6
     127: aload         8
     129: invokevirtual #26                 // Method org/h2/mvstore/Page.setChild:(ILorg/h2/mvstore/Page;)V
     132: lload         9
     134: aload         8
     136: invokevirtual #24                 // Method org/h2/mvstore/Page.getTotalCount:()J
     139: lcmp
     140: ifne          146
     143: goto          214
     146: aload         8
     148: invokevirtual #24                 // Method org/h2/mvstore/Page.getTotalCount:()J
     151: lconst_0
     152: lcmp
     153: ifne          177
     156: aload_1
     157: iload         6
     159: invokevirtual #22                 // Method org/h2/mvstore/Page.remove:(I)V
     162: aload_1
     163: invokevirtual #17                 // Method org/h2/mvstore/Page.getKeyCount:()I
     166: ifne          220
     169: aload         8
     171: invokevirtual #27                 // Method org/h2/mvstore/Page.removePage:()V
     174: goto          220
     177: aload_1
     178: iload         6
     180: invokevirtual #14                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
     183: astore        11
     185: aload_0
     186: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
     189: aload         4
     191: aload         11
     193: invokevirtual #28                 // Method org/h2/mvstore/rtree/SpatialDataType.isInside:(Ljava/lang/Object;Ljava/lang/Object;)Z
     196: ifne          220
     199: aload_1
     200: iload         6
     202: aload_0
     203: aload         8
     205: invokespecial #29                 // Method getBounds:(Lorg/h2/mvstore/Page;)Ljava/lang/Object;
     208: invokevirtual #30                 // Method org/h2/mvstore/Page.setKey:(ILjava/lang/Object;)V
     211: goto          220
     214: iinc          6, 1
     217: goto          69
     220: aload         5
     222: areturn

  private java.lang.Object getBounds(org.h2.mvstore.Page);
    Code:
       0: aload_0
       1: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
       4: aload_1
       5: iconst_0
       6: invokevirtual #14                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
       9: invokevirtual #31                 // Method org/h2/mvstore/rtree/SpatialDataType.createBoundingBox:(Ljava/lang/Object;)Ljava/lang/Object;
      12: astore_2
      13: iconst_1
      14: istore_3
      15: iload_3
      16: aload_1
      17: invokevirtual #17                 // Method org/h2/mvstore/Page.getKeyCount:()I
      20: if_icmpge     42
      23: aload_0
      24: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
      27: aload_2
      28: aload_1
      29: iload_3
      30: invokevirtual #14                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
      33: invokevirtual #32                 // Method org/h2/mvstore/rtree/SpatialDataType.increaseBounds:(Ljava/lang/Object;Ljava/lang/Object;)V
      36: iinc          3, 1
      39: goto          15
      42: aload_2
      43: areturn

  public V put(org.h2.mvstore.rtree.SpatialKey, V);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokespecial #33                 // Method putOrAdd:(Lorg/h2/mvstore/rtree/SpatialKey;Ljava/lang/Object;Z)Ljava/lang/Object;
       7: areturn

  public void add(org.h2.mvstore.rtree.SpatialKey, V);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #33                 // Method putOrAdd:(Lorg/h2/mvstore/rtree/SpatialKey;Ljava/lang/Object;Z)Ljava/lang/Object;
       7: pop
       8: return

  private synchronized java.lang.Object putOrAdd(org.h2.mvstore.rtree.SpatialKey, V, boolean);
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method beforeWrite:()V
       4: aload_0
       5: getfield      #35                 // Field writeVersion:J
       8: lstore        4
      10: aload_0
      11: getfield      #8                  // Field root:Lorg/h2/mvstore/Page;
      14: lload         4
      16: invokevirtual #23                 // Method org/h2/mvstore/Page.copy:(J)Lorg/h2/mvstore/Page;
      19: astore        6
      21: iload_3
      22: ifne          33
      25: aload_0
      26: aload_1
      27: invokevirtual #36                 // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
      30: ifnonnull     201
      33: aload         6
      35: invokevirtual #37                 // Method org/h2/mvstore/Page.getMemory:()I
      38: aload_0
      39: getfield      #38                 // Field store:Lorg/h2/mvstore/MVStore;
      42: invokevirtual #39                 // Method org/h2/mvstore/MVStore.getPageSplitSize:()I
      45: if_icmple     185
      48: aload         6
      50: invokevirtual #17                 // Method org/h2/mvstore/Page.getKeyCount:()I
      53: iconst_3
      54: if_icmple     185
      57: aload         6
      59: invokevirtual #24                 // Method org/h2/mvstore/Page.getTotalCount:()J
      62: lstore        8
      64: aload_0
      65: aload         6
      67: lload         4
      69: invokespecial #40                 // Method split:(Lorg/h2/mvstore/Page;J)Lorg/h2/mvstore/Page;
      72: astore        10
      74: aload_0
      75: aload         6
      77: invokespecial #29                 // Method getBounds:(Lorg/h2/mvstore/Page;)Ljava/lang/Object;
      80: astore        11
      82: aload_0
      83: aload         10
      85: invokespecial #29                 // Method getBounds:(Lorg/h2/mvstore/Page;)Ljava/lang/Object;
      88: astore        12
      90: iconst_2
      91: anewarray     #41                 // class java/lang/Object
      94: dup
      95: iconst_0
      96: aload         11
      98: aastore
      99: dup
     100: iconst_1
     101: aload         12
     103: aastore
     104: astore        13
     106: iconst_3
     107: anewarray     #42                 // class org/h2/mvstore/Page$PageReference
     110: dup
     111: iconst_0
     112: new           #42                 // class org/h2/mvstore/Page$PageReference
     115: dup
     116: aload         6
     118: aload         6
     120: invokevirtual #43                 // Method org/h2/mvstore/Page.getPos:()J
     123: aload         6
     125: invokevirtual #24                 // Method org/h2/mvstore/Page.getTotalCount:()J
     128: invokespecial #44                 // Method org/h2/mvstore/Page$PageReference."<init>":(Lorg/h2/mvstore/Page;JJ)V
     131: aastore
     132: dup
     133: iconst_1
     134: new           #42                 // class org/h2/mvstore/Page$PageReference
     137: dup
     138: aload         10
     140: aload         10
     142: invokevirtual #43                 // Method org/h2/mvstore/Page.getPos:()J
     145: aload         10
     147: invokevirtual #24                 // Method org/h2/mvstore/Page.getTotalCount:()J
     150: invokespecial #44                 // Method org/h2/mvstore/Page$PageReference."<init>":(Lorg/h2/mvstore/Page;JJ)V
     153: aastore
     154: dup
     155: iconst_2
     156: new           #42                 // class org/h2/mvstore/Page$PageReference
     159: dup
     160: aconst_null
     161: lconst_0
     162: lconst_0
     163: invokespecial #44                 // Method org/h2/mvstore/Page$PageReference."<init>":(Lorg/h2/mvstore/Page;JJ)V
     166: aastore
     167: astore        14
     169: aload_0
     170: lload         4
     172: aload         13
     174: aconst_null
     175: aload         14
     177: lload         8
     179: iconst_0
     180: invokestatic  #45                 // Method org/h2/mvstore/Page.create:(Lorg/h2/mvstore/MVMap;J[Ljava/lang/Object;[Ljava/lang/Object;[Lorg/h2/mvstore/Page$PageReference;JI)Lorg/h2/mvstore/Page;
     183: astore        6
     185: aload_0
     186: aload         6
     188: lload         4
     190: aload_1
     191: aload_2
     192: invokespecial #46                 // Method add:(Lorg/h2/mvstore/Page;JLjava/lang/Object;Ljava/lang/Object;)V
     195: aconst_null
     196: astore        7
     198: goto          213
     201: aload_0
     202: aload         6
     204: lload         4
     206: aload_1
     207: aload_2
     208: invokespecial #47                 // Method set:(Lorg/h2/mvstore/Page;JLjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     211: astore        7
     213: aload_0
     214: aload         6
     216: invokevirtual #48                 // Method newRoot:(Lorg/h2/mvstore/Page;)V
     219: aload         7
     221: areturn

  private java.lang.Object set(org.h2.mvstore.Page, long, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #16                 // Method org/h2/mvstore/Page.isLeaf:()Z
       4: ifeq          63
       7: iconst_0
       8: istore        6
      10: iload         6
      12: aload_1
      13: invokevirtual #17                 // Method org/h2/mvstore/Page.getKeyCount:()I
      16: if_icmpge     60
      19: aload_0
      20: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
      23: aload_1
      24: iload         6
      26: invokevirtual #14                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
      29: aload         4
      31: invokevirtual #20                 // Method org/h2/mvstore/rtree/SpatialDataType.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      34: ifeq          54
      37: aload_1
      38: iload         6
      40: aload         4
      42: invokevirtual #30                 // Method org/h2/mvstore/Page.setKey:(ILjava/lang/Object;)V
      45: aload_1
      46: iload         6
      48: aload         5
      50: invokevirtual #49                 // Method org/h2/mvstore/Page.setValue:(ILjava/lang/Object;)Ljava/lang/Object;
      53: areturn
      54: iinc          6, 1
      57: goto          10
      60: goto          144
      63: iconst_0
      64: istore        6
      66: iload         6
      68: aload_1
      69: invokevirtual #17                 // Method org/h2/mvstore/Page.getKeyCount:()I
      72: if_icmpge     144
      75: aload_0
      76: aload_1
      77: iload         6
      79: aload         4
      81: invokespecial #18                 // Method contains:(Lorg/h2/mvstore/Page;ILjava/lang/Object;)Z
      84: ifeq          138
      87: aload_1
      88: iload         6
      90: invokevirtual #19                 // Method org/h2/mvstore/Page.getChildPage:(I)Lorg/h2/mvstore/Page;
      93: astore        7
      95: aload_0
      96: aload         7
      98: aload         4
     100: invokevirtual #9                  // Method get:(Lorg/h2/mvstore/Page;Ljava/lang/Object;)Ljava/lang/Object;
     103: ifnull        138
     106: aload         7
     108: lload_2
     109: invokevirtual #23                 // Method org/h2/mvstore/Page.copy:(J)Lorg/h2/mvstore/Page;
     112: astore        7
     114: aload_0
     115: aload         7
     117: lload_2
     118: aload         4
     120: aload         5
     122: invokespecial #47                 // Method set:(Lorg/h2/mvstore/Page;JLjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     125: astore        8
     127: aload_1
     128: iload         6
     130: aload         7
     132: invokevirtual #26                 // Method org/h2/mvstore/Page.setChild:(ILorg/h2/mvstore/Page;)V
     135: aload         8
     137: areturn
     138: iinc          6, 1
     141: goto          66
     144: iconst_3
     145: ldc           #50                 // String Not found: {0}
     147: iconst_1
     148: anewarray     #41                 // class java/lang/Object
     151: dup
     152: iconst_0
     153: aload         4
     155: aastore
     156: invokestatic  #51                 // Method org/h2/mvstore/DataUtils.newIllegalStateException:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;
     159: athrow

  private void add(org.h2.mvstore.Page, long, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #16                 // Method org/h2/mvstore/Page.isLeaf:()Z
       4: ifeq          20
       7: aload_1
       8: aload_1
       9: invokevirtual #17                 // Method org/h2/mvstore/Page.getKeyCount:()I
      12: aload         4
      14: aload         5
      16: invokevirtual #52                 // Method org/h2/mvstore/Page.insertLeaf:(ILjava/lang/Object;Ljava/lang/Object;)V
      19: return
      20: iconst_m1
      21: istore        6
      23: iconst_0
      24: istore        7
      26: iload         7
      28: aload_1
      29: invokevirtual #17                 // Method org/h2/mvstore/Page.getKeyCount:()I
      32: if_icmpge     60
      35: aload_0
      36: aload_1
      37: iload         7
      39: aload         4
      41: invokespecial #18                 // Method contains:(Lorg/h2/mvstore/Page;ILjava/lang/Object;)Z
      44: ifeq          54
      47: iload         7
      49: istore        6
      51: goto          60
      54: iinc          7, 1
      57: goto          26
      60: iload         6
      62: ifge          124
      65: ldc           #53                 // float 3.4028235E38f
      67: fstore        7
      69: iconst_0
      70: istore        8
      72: iload         8
      74: aload_1
      75: invokevirtual #17                 // Method org/h2/mvstore/Page.getKeyCount:()I
      78: if_icmpge     124
      81: aload_1
      82: iload         8
      84: invokevirtual #14                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
      87: astore        9
      89: aload_0
      90: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
      93: aload         9
      95: aload         4
      97: invokevirtual #54                 // Method org/h2/mvstore/rtree/SpatialDataType.getAreaIncrease:(Ljava/lang/Object;Ljava/lang/Object;)F
     100: fstore        10
     102: fload         10
     104: fload         7
     106: fcmpg
     107: ifge          118
     110: iload         8
     112: istore        6
     114: fload         10
     116: fstore        7
     118: iinc          8, 1
     121: goto          72
     124: aload_1
     125: iload         6
     127: invokevirtual #19                 // Method org/h2/mvstore/Page.getChildPage:(I)Lorg/h2/mvstore/Page;
     130: lload_2
     131: invokevirtual #23                 // Method org/h2/mvstore/Page.copy:(J)Lorg/h2/mvstore/Page;
     134: astore        7
     136: aload         7
     138: invokevirtual #37                 // Method org/h2/mvstore/Page.getMemory:()I
     141: aload_0
     142: getfield      #38                 // Field store:Lorg/h2/mvstore/MVStore;
     145: invokevirtual #39                 // Method org/h2/mvstore/MVStore.getPageSplitSize:()I
     148: if_icmple     214
     151: aload         7
     153: invokevirtual #17                 // Method org/h2/mvstore/Page.getKeyCount:()I
     156: iconst_4
     157: if_icmple     214
     160: aload_0
     161: aload         7
     163: lload_2
     164: invokespecial #40                 // Method split:(Lorg/h2/mvstore/Page;J)Lorg/h2/mvstore/Page;
     167: astore        8
     169: aload_1
     170: iload         6
     172: aload_0
     173: aload         7
     175: invokespecial #29                 // Method getBounds:(Lorg/h2/mvstore/Page;)Ljava/lang/Object;
     178: invokevirtual #30                 // Method org/h2/mvstore/Page.setKey:(ILjava/lang/Object;)V
     181: aload_1
     182: iload         6
     184: aload         7
     186: invokevirtual #26                 // Method org/h2/mvstore/Page.setChild:(ILorg/h2/mvstore/Page;)V
     189: aload_1
     190: iload         6
     192: aload_0
     193: aload         8
     195: invokespecial #29                 // Method getBounds:(Lorg/h2/mvstore/Page;)Ljava/lang/Object;
     198: aload         8
     200: invokevirtual #55                 // Method org/h2/mvstore/Page.insertNode:(ILjava/lang/Object;Lorg/h2/mvstore/Page;)V
     203: aload_0
     204: aload_1
     205: lload_2
     206: aload         4
     208: aload         5
     210: invokespecial #46                 // Method add:(Lorg/h2/mvstore/Page;JLjava/lang/Object;Ljava/lang/Object;)V
     213: return
     214: aload_0
     215: aload         7
     217: lload_2
     218: aload         4
     220: aload         5
     222: invokespecial #46                 // Method add:(Lorg/h2/mvstore/Page;JLjava/lang/Object;Ljava/lang/Object;)V
     225: aload_1
     226: iload         6
     228: invokevirtual #14                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
     231: astore        8
     233: aload_0
     234: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
     237: aload         8
     239: aload         4
     241: invokevirtual #32                 // Method org/h2/mvstore/rtree/SpatialDataType.increaseBounds:(Ljava/lang/Object;Ljava/lang/Object;)V
     244: aload_1
     245: iload         6
     247: aload         8
     249: invokevirtual #30                 // Method org/h2/mvstore/Page.setKey:(ILjava/lang/Object;)V
     252: aload_1
     253: iload         6
     255: aload         7
     257: invokevirtual #26                 // Method org/h2/mvstore/Page.setChild:(ILorg/h2/mvstore/Page;)V
     260: return

  private org.h2.mvstore.Page split(org.h2.mvstore.Page, long);
    Code:
       0: aload_0
       1: getfield      #56                 // Field quadraticSplit:Z
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: lload_2
      10: invokespecial #57                 // Method splitQuadratic:(Lorg/h2/mvstore/Page;J)Lorg/h2/mvstore/Page;
      13: goto          22
      16: aload_0
      17: aload_1
      18: lload_2
      19: invokespecial #58                 // Method splitLinear:(Lorg/h2/mvstore/Page;J)Lorg/h2/mvstore/Page;
      22: areturn

  private org.h2.mvstore.Page splitLinear(org.h2.mvstore.Page, long);
    Code:
       0: invokestatic  #59                 // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
       3: astore        4
       5: iconst_0
       6: istore        5
       8: iload         5
      10: aload_1
      11: invokevirtual #17                 // Method org/h2/mvstore/Page.getKeyCount:()I
      14: if_icmpge     35
      17: aload         4
      19: aload_1
      20: iload         5
      22: invokevirtual #14                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
      25: invokevirtual #60                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      28: pop
      29: iinc          5, 1
      32: goto          8
      35: aload_0
      36: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
      39: aload         4
      41: invokevirtual #61                 // Method org/h2/mvstore/rtree/SpatialDataType.getExtremes:(Ljava/util/ArrayList;)[I
      44: astore        5
      46: aload         5
      48: ifnonnull     58
      51: aload_0
      52: aload_1
      53: lload_2
      54: invokespecial #57                 // Method splitQuadratic:(Lorg/h2/mvstore/Page;J)Lorg/h2/mvstore/Page;
      57: areturn
      58: aload_0
      59: aload_1
      60: invokevirtual #16                 // Method org/h2/mvstore/Page.isLeaf:()Z
      63: lload_2
      64: invokespecial #62                 // Method newPage:(ZJ)Lorg/h2/mvstore/Page;
      67: astore        6
      69: aload_0
      70: aload_1
      71: invokevirtual #16                 // Method org/h2/mvstore/Page.isLeaf:()Z
      74: lload_2
      75: invokespecial #62                 // Method newPage:(ZJ)Lorg/h2/mvstore/Page;
      78: astore        7
      80: aload_1
      81: aload         6
      83: aload         5
      85: iconst_0
      86: iaload
      87: invokestatic  #63                 // Method move:(Lorg/h2/mvstore/Page;Lorg/h2/mvstore/Page;I)V
      90: aload         5
      92: iconst_1
      93: iaload
      94: aload         5
      96: iconst_0
      97: iaload
      98: if_icmple     109
     101: aload         5
     103: iconst_1
     104: dup2
     105: iaload
     106: iconst_1
     107: isub
     108: iastore
     109: aload_1
     110: aload         7
     112: aload         5
     114: iconst_1
     115: iaload
     116: invokestatic  #63                 // Method move:(Lorg/h2/mvstore/Page;Lorg/h2/mvstore/Page;I)V
     119: aload_0
     120: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
     123: aload         6
     125: iconst_0
     126: invokevirtual #14                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
     129: invokevirtual #31                 // Method org/h2/mvstore/rtree/SpatialDataType.createBoundingBox:(Ljava/lang/Object;)Ljava/lang/Object;
     132: astore        8
     134: aload_0
     135: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
     138: aload         7
     140: iconst_0
     141: invokevirtual #14                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
     144: invokevirtual #31                 // Method org/h2/mvstore/rtree/SpatialDataType.createBoundingBox:(Ljava/lang/Object;)Ljava/lang/Object;
     147: astore        9
     149: aload_1
     150: invokevirtual #17                 // Method org/h2/mvstore/Page.getKeyCount:()I
     153: ifle          239
     156: aload_1
     157: iconst_0
     158: invokevirtual #14                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
     161: astore        10
     163: aload_0
     164: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
     167: aload         8
     169: aload         10
     171: invokevirtual #54                 // Method org/h2/mvstore/rtree/SpatialDataType.getAreaIncrease:(Ljava/lang/Object;Ljava/lang/Object;)F
     174: fstore        11
     176: aload_0
     177: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
     180: aload         9
     182: aload         10
     184: invokevirtual #54                 // Method org/h2/mvstore/rtree/SpatialDataType.getAreaIncrease:(Ljava/lang/Object;Ljava/lang/Object;)F
     187: fstore        12
     189: fload         11
     191: fload         12
     193: fcmpg
     194: ifge          218
     197: aload_0
     198: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
     201: aload         8
     203: aload         10
     205: invokevirtual #32                 // Method org/h2/mvstore/rtree/SpatialDataType.increaseBounds:(Ljava/lang/Object;Ljava/lang/Object;)V
     208: aload_1
     209: aload         6
     211: iconst_0
     212: invokestatic  #63                 // Method move:(Lorg/h2/mvstore/Page;Lorg/h2/mvstore/Page;I)V
     215: goto          236
     218: aload_0
     219: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
     222: aload         9
     224: aload         10
     226: invokevirtual #32                 // Method org/h2/mvstore/rtree/SpatialDataType.increaseBounds:(Ljava/lang/Object;Ljava/lang/Object;)V
     229: aload_1
     230: aload         7
     232: iconst_0
     233: invokestatic  #63                 // Method move:(Lorg/h2/mvstore/Page;Lorg/h2/mvstore/Page;I)V
     236: goto          149
     239: aload         7
     241: invokevirtual #17                 // Method org/h2/mvstore/Page.getKeyCount:()I
     244: ifle          257
     247: aload         7
     249: aload_1
     250: iconst_0
     251: invokestatic  #63                 // Method move:(Lorg/h2/mvstore/Page;Lorg/h2/mvstore/Page;I)V
     254: goto          239
     257: aload         6
     259: areturn

  private org.h2.mvstore.Page splitQuadratic(org.h2.mvstore.Page, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method org/h2/mvstore/Page.isLeaf:()Z
       5: lload_2
       6: invokespecial #62                 // Method newPage:(ZJ)Lorg/h2/mvstore/Page;
       9: astore        4
      11: aload_0
      12: aload_1
      13: invokevirtual #16                 // Method org/h2/mvstore/Page.isLeaf:()Z
      16: lload_2
      17: invokespecial #62                 // Method newPage:(ZJ)Lorg/h2/mvstore/Page;
      20: astore        5
      22: ldc           #64                 // float 1.4E-45f
      24: fstore        6
      26: iconst_0
      27: istore        7
      29: iconst_0
      30: istore        8
      32: iconst_0
      33: istore        9
      35: iload         9
      37: aload_1
      38: invokevirtual #17                 // Method org/h2/mvstore/Page.getKeyCount:()I
      41: if_icmpge     127
      44: aload_1
      45: iload         9
      47: invokevirtual #14                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
      50: astore        10
      52: iconst_0
      53: istore        11
      55: iload         11
      57: aload_1
      58: invokevirtual #17                 // Method org/h2/mvstore/Page.getKeyCount:()I
      61: if_icmpge     121
      64: iload         9
      66: iload         11
      68: if_icmpne     74
      71: goto          115
      74: aload_1
      75: iload         11
      77: invokevirtual #14                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
      80: astore        12
      82: aload_0
      83: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
      86: aload         10
      88: aload         12
      90: invokevirtual #65                 // Method org/h2/mvstore/rtree/SpatialDataType.getCombinedArea:(Ljava/lang/Object;Ljava/lang/Object;)F
      93: fstore        13
      95: fload         13
      97: fload         6
      99: fcmpl
     100: ifle          115
     103: fload         13
     105: fstore        6
     107: iload         9
     109: istore        7
     111: iload         11
     113: istore        8
     115: iinc          11, 1
     118: goto          55
     121: iinc          9, 1
     124: goto          35
     127: aload_1
     128: aload         4
     130: iload         7
     132: invokestatic  #63                 // Method move:(Lorg/h2/mvstore/Page;Lorg/h2/mvstore/Page;I)V
     135: iload         7
     137: iload         8
     139: if_icmpge     145
     142: iinc          8, -1
     145: aload_1
     146: aload         5
     148: iload         8
     150: invokestatic  #63                 // Method move:(Lorg/h2/mvstore/Page;Lorg/h2/mvstore/Page;I)V
     153: aload_0
     154: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
     157: aload         4
     159: iconst_0
     160: invokevirtual #14                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
     163: invokevirtual #31                 // Method org/h2/mvstore/rtree/SpatialDataType.createBoundingBox:(Ljava/lang/Object;)Ljava/lang/Object;
     166: astore        9
     168: aload_0
     169: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
     172: aload         5
     174: iconst_0
     175: invokevirtual #14                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
     178: invokevirtual #31                 // Method org/h2/mvstore/rtree/SpatialDataType.createBoundingBox:(Ljava/lang/Object;)Ljava/lang/Object;
     181: astore        10
     183: aload_1
     184: invokevirtual #17                 // Method org/h2/mvstore/Page.getKeyCount:()I
     187: ifle          348
     190: fconst_0
     191: fstore        11
     193: fconst_0
     194: fstore        12
     196: fconst_0
     197: fstore        13
     199: iconst_0
     200: istore        14
     202: iconst_0
     203: istore        15
     205: iload         15
     207: aload_1
     208: invokevirtual #17                 // Method org/h2/mvstore/Page.getKeyCount:()I
     211: if_icmpge     288
     214: aload_1
     215: iload         15
     217: invokevirtual #14                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
     220: astore        16
     222: aload_0
     223: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
     226: aload         9
     228: aload         16
     230: invokevirtual #54                 // Method org/h2/mvstore/rtree/SpatialDataType.getAreaIncrease:(Ljava/lang/Object;Ljava/lang/Object;)F
     233: fstore        17
     235: aload_0
     236: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
     239: aload         10
     241: aload         16
     243: invokevirtual #54                 // Method org/h2/mvstore/rtree/SpatialDataType.getAreaIncrease:(Ljava/lang/Object;Ljava/lang/Object;)F
     246: fstore        18
     248: fload         17
     250: fload         18
     252: fsub
     253: invokestatic  #66                 // Method java/lang/Math.abs:(F)F
     256: fstore        19
     258: fload         19
     260: fload         11
     262: fcmpl
     263: ifle          282
     266: fload         19
     268: fstore        11
     270: fload         17
     272: fstore        12
     274: fload         18
     276: fstore        13
     278: iload         15
     280: istore        14
     282: iinc          15, 1
     285: goto          205
     288: fload         12
     290: fload         13
     292: fcmpg
     293: ifge          322
     296: aload_0
     297: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
     300: aload         9
     302: aload_1
     303: iload         14
     305: invokevirtual #14                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
     308: invokevirtual #32                 // Method org/h2/mvstore/rtree/SpatialDataType.increaseBounds:(Ljava/lang/Object;Ljava/lang/Object;)V
     311: aload_1
     312: aload         4
     314: iload         14
     316: invokestatic  #63                 // Method move:(Lorg/h2/mvstore/Page;Lorg/h2/mvstore/Page;I)V
     319: goto          345
     322: aload_0
     323: getfield      #5                  // Field keyType:Lorg/h2/mvstore/rtree/SpatialDataType;
     326: aload         10
     328: aload_1
     329: iload         14
     331: invokevirtual #14                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
     334: invokevirtual #32                 // Method org/h2/mvstore/rtree/SpatialDataType.increaseBounds:(Ljava/lang/Object;Ljava/lang/Object;)V
     337: aload_1
     338: aload         5
     340: iload         14
     342: invokestatic  #63                 // Method move:(Lorg/h2/mvstore/Page;Lorg/h2/mvstore/Page;I)V
     345: goto          183
     348: aload         5
     350: invokevirtual #17                 // Method org/h2/mvstore/Page.getKeyCount:()I
     353: ifle          366
     356: aload         5
     358: aload_1
     359: iconst_0
     360: invokestatic  #63                 // Method move:(Lorg/h2/mvstore/Page;Lorg/h2/mvstore/Page;I)V
     363: goto          348
     366: aload         4
     368: areturn

  private org.h2.mvstore.Page newPage(boolean, long);
    Code:
       0: iload_1
       1: ifeq          15
       4: getstatic     #67                 // Field org/h2/mvstore/Page.EMPTY_OBJECT_ARRAY:[Ljava/lang/Object;
       7: astore        4
       9: aconst_null
      10: astore        5
      12: goto          37
      15: aconst_null
      16: astore        4
      18: iconst_1
      19: anewarray     #42                 // class org/h2/mvstore/Page$PageReference
      22: dup
      23: iconst_0
      24: new           #42                 // class org/h2/mvstore/Page$PageReference
      27: dup
      28: aconst_null
      29: lconst_0
      30: lconst_0
      31: invokespecial #44                 // Method org/h2/mvstore/Page$PageReference."<init>":(Lorg/h2/mvstore/Page;JJ)V
      34: aastore
      35: astore        5
      37: aload_0
      38: lload_2
      39: getstatic     #67                 // Field org/h2/mvstore/Page.EMPTY_OBJECT_ARRAY:[Ljava/lang/Object;
      42: aload         4
      44: aload         5
      46: lconst_0
      47: iconst_0
      48: invokestatic  #45                 // Method org/h2/mvstore/Page.create:(Lorg/h2/mvstore/MVMap;J[Ljava/lang/Object;[Ljava/lang/Object;[Lorg/h2/mvstore/Page$PageReference;JI)Lorg/h2/mvstore/Page;
      51: areturn

  private static void move(org.h2.mvstore.Page, org.h2.mvstore.Page, int);
    Code:
       0: aload_0
       1: iload_2
       2: invokevirtual #14                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
       5: astore_3
       6: aload_0
       7: invokevirtual #16                 // Method org/h2/mvstore/Page.isLeaf:()Z
      10: ifeq          31
      13: aload_0
      14: iload_2
      15: invokevirtual #21                 // Method org/h2/mvstore/Page.getValue:(I)Ljava/lang/Object;
      18: astore        4
      20: aload_1
      21: iconst_0
      22: aload_3
      23: aload         4
      25: invokevirtual #52                 // Method org/h2/mvstore/Page.insertLeaf:(ILjava/lang/Object;Ljava/lang/Object;)V
      28: goto          46
      31: aload_0
      32: iload_2
      33: invokevirtual #19                 // Method org/h2/mvstore/Page.getChildPage:(I)Lorg/h2/mvstore/Page;
      36: astore        4
      38: aload_1
      39: iconst_0
      40: aload_3
      41: aload         4
      43: invokevirtual #55                 // Method org/h2/mvstore/Page.insertNode:(ILjava/lang/Object;Lorg/h2/mvstore/Page;)V
      46: aload_0
      47: iload_2
      48: invokevirtual #22                 // Method org/h2/mvstore/Page.remove:(I)V
      51: return

  public void addNodeKeys(java.util.ArrayList<org.h2.mvstore.rtree.SpatialKey>, org.h2.mvstore.Page);
    Code:
       0: aload_2
       1: ifnull        50
       4: aload_2
       5: invokevirtual #16                 // Method org/h2/mvstore/Page.isLeaf:()Z
       8: ifne          50
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_2
      15: invokevirtual #17                 // Method org/h2/mvstore/Page.getKeyCount:()I
      18: if_icmpge     50
      21: aload_1
      22: aload_2
      23: iload_3
      24: invokevirtual #14                 // Method org/h2/mvstore/Page.getKey:(I)Ljava/lang/Object;
      27: checkcast     #68                 // class org/h2/mvstore/rtree/SpatialKey
      30: invokevirtual #60                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      33: pop
      34: aload_0
      35: aload_1
      36: aload_2
      37: iload_3
      38: invokevirtual #19                 // Method org/h2/mvstore/Page.getChildPage:(I)Lorg/h2/mvstore/Page;
      41: invokevirtual #69                 // Method addNodeKeys:(Ljava/util/ArrayList;Lorg/h2/mvstore/Page;)V
      44: iinc          3, 1
      47: goto          13
      50: return

  public boolean isQuadraticSplit();
    Code:
       0: aload_0
       1: getfield      #56                 // Field quadraticSplit:Z
       4: ireturn

  public void setQuadraticSplit(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #56                 // Field quadraticSplit:Z
       5: return

  protected int getChildPageCount(org.h2.mvstore.Page);
    Code:
       0: aload_1
       1: invokevirtual #70                 // Method org/h2/mvstore/Page.getRawChildPageCount:()I
       4: iconst_1
       5: isub
       6: ireturn

  public java.lang.String getType();
    Code:
       0: ldc           #71                 // String rtree
       2: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #68                 // class org/h2/mvstore/rtree/SpatialKey
       5: aload_2
       6: invokevirtual #72                 // Method put:(Lorg/h2/mvstore/rtree/SpatialKey;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn
}
