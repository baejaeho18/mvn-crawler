Compiled from "CacheLongKeyLIRS.java"
public class org.h2.mvstore.cache.CacheLongKeyLIRS<V> {
  private long maxMemory;

  private final org.h2.mvstore.cache.CacheLongKeyLIRS$Segment<V>[] segments;

  private final int segmentCount;

  private final int segmentShift;

  private final int segmentMask;

  private final int stackMoveDistance;

  private final int nonResidentQueueSize;

  public org.h2.mvstore.cache.CacheLongKeyLIRS(org.h2.mvstore.cache.CacheLongKeyLIRS$Config);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #2                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Config.maxMemory:J
       9: invokevirtual #3                  // Method setMaxMemory:(J)V
      12: aload_0
      13: aload_1
      14: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: pop
      18: iconst_3
      19: putfield      #5                  // Field nonResidentQueueSize:I
      22: aload_1
      23: getfield      #6                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Config.segmentCount:I
      26: invokestatic  #7                  // Method java/lang/Integer.bitCount:(I)I
      29: iconst_1
      30: if_icmpne     37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ldc           #8                  // String The segment count must be a power of 2, is {0}
      40: iconst_1
      41: anewarray     #9                  // class java/lang/Object
      44: dup
      45: iconst_0
      46: aload_1
      47: getfield      #6                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Config.segmentCount:I
      50: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      53: aastore
      54: invokestatic  #11                 // Method org/h2/mvstore/DataUtils.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      57: aload_0
      58: aload_1
      59: getfield      #6                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Config.segmentCount:I
      62: putfield      #12                 // Field segmentCount:I
      65: aload_0
      66: aload_0
      67: getfield      #12                 // Field segmentCount:I
      70: iconst_1
      71: isub
      72: putfield      #13                 // Field segmentMask:I
      75: aload_0
      76: aload_1
      77: getfield      #14                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Config.stackMoveDistance:I
      80: putfield      #15                 // Field stackMoveDistance:I
      83: aload_0
      84: aload_0
      85: getfield      #12                 // Field segmentCount:I
      88: anewarray     #16                 // class org/h2/mvstore/cache/CacheLongKeyLIRS$Segment
      91: putfield      #17                 // Field segments:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
      94: aload_0
      95: invokevirtual #18                 // Method clear:()V
      98: aload_0
      99: bipush        32
     101: aload_0
     102: getfield      #13                 // Field segmentMask:I
     105: invokestatic  #7                  // Method java/lang/Integer.bitCount:(I)I
     108: isub
     109: putfield      #19                 // Field segmentShift:I
     112: return

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getMaxItemSize:()J
       4: lstore_1
       5: iconst_0
       6: istore_3
       7: iload_3
       8: aload_0
       9: getfield      #12                 // Field segmentCount:I
      12: if_icmpge     45
      15: aload_0
      16: getfield      #17                 // Field segments:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
      19: iload_3
      20: new           #16                 // class org/h2/mvstore/cache/CacheLongKeyLIRS$Segment
      23: dup
      24: lload_1
      25: aload_0
      26: getfield      #15                 // Field stackMoveDistance:I
      29: bipush        8
      31: aload_0
      32: getfield      #5                  // Field nonResidentQueueSize:I
      35: invokespecial #21                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS$Segment."<init>":(JIII)V
      38: aastore
      39: iinc          3, 1
      42: goto          7
      45: return

  public long getMaxItemSize();
    Code:
       0: lconst_1
       1: aload_0
       2: getfield      #22                 // Field maxMemory:J
       5: aload_0
       6: getfield      #12                 // Field segmentCount:I
       9: i2l
      10: ldiv
      11: invokestatic  #23                 // Method java/lang/Math.max:(JJ)J
      14: lreturn

  private org.h2.mvstore.cache.CacheLongKeyLIRS$Entry<V> find(long);
    Code:
       0: lload_1
       1: invokestatic  #24                 // Method getHash:(J)I
       4: istore_3
       5: aload_0
       6: iload_3
       7: invokespecial #25                 // Method getSegment:(I)Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
      10: lload_1
      11: iload_3
      12: invokevirtual #26                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS$Segment.find:(JI)Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      15: areturn

  public boolean containsKey(long);
    Code:
       0: lload_1
       1: invokestatic  #24                 // Method getHash:(J)I
       4: istore_3
       5: aload_0
       6: iload_3
       7: invokespecial #25                 // Method getSegment:(I)Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
      10: lload_1
      11: iload_3
      12: invokevirtual #27                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS$Segment.containsKey:(JI)Z
      15: ireturn

  public V peek(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #28                 // Method find:(J)Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
       5: astore_3
       6: aload_3
       7: ifnonnull     14
      10: aconst_null
      11: goto          18
      14: aload_3
      15: getfield      #29                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.value:Ljava/lang/Object;
      18: areturn

  public V put(long, V);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: aload_0
       4: aload_3
       5: invokevirtual #30                 // Method sizeOf:(Ljava/lang/Object;)I
       8: invokevirtual #31                 // Method put:(JLjava/lang/Object;I)Ljava/lang/Object;
      11: areturn

  public V put(long, V, int);
    Code:
       0: lload_1
       1: invokestatic  #24                 // Method getHash:(J)I
       4: istore        5
       6: aload_0
       7: iload         5
       9: invokespecial #32                 // Method getSegmentIndex:(I)I
      12: istore        6
      14: aload_0
      15: getfield      #17                 // Field segments:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
      18: iload         6
      20: aaload
      21: astore        7
      23: aload         7
      25: dup
      26: astore        8
      28: monitorenter
      29: aload_0
      30: aload         7
      32: iload         6
      34: invokespecial #33                 // Method resizeIfNeeded:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;I)Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
      37: astore        7
      39: aload         7
      41: lload_1
      42: iload         5
      44: aload_3
      45: iload         4
      47: invokevirtual #34                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS$Segment.put:(JILjava/lang/Object;I)Ljava/lang/Object;
      50: aload         8
      52: monitorexit
      53: areturn
      54: astore        9
      56: aload         8
      58: monitorexit
      59: aload         9
      61: athrow
    Exception table:
       from    to  target type
          29    53    54   any
          54    59    54   any

  private org.h2.mvstore.cache.CacheLongKeyLIRS$Segment<V> resizeIfNeeded(org.h2.mvstore.cache.CacheLongKeyLIRS$Segment<V>, int);
    Code:
       0: aload_1
       1: invokevirtual #35                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS$Segment.getNewMapLen:()I
       4: istore_3
       5: iload_3
       6: ifne          11
       9: aload_1
      10: areturn
      11: aload_0
      12: getfield      #17                 // Field segments:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
      15: iload_2
      16: aaload
      17: astore        4
      19: aload_1
      20: aload         4
      22: if_acmpne     42
      25: new           #16                 // class org/h2/mvstore/cache/CacheLongKeyLIRS$Segment
      28: dup
      29: aload_1
      30: iload_3
      31: invokespecial #36                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS$Segment."<init>":(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;I)V
      34: astore_1
      35: aload_0
      36: getfield      #17                 // Field segments:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
      39: iload_2
      40: aload_1
      41: aastore
      42: aload_1
      43: areturn

  protected int sizeOf(V);
    Code:
       0: iconst_1
       1: ireturn

  public V remove(long);
    Code:
       0: lload_1
       1: invokestatic  #24                 // Method getHash:(J)I
       4: istore_3
       5: aload_0
       6: iload_3
       7: invokespecial #32                 // Method getSegmentIndex:(I)I
      10: istore        4
      12: aload_0
      13: getfield      #17                 // Field segments:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
      16: iload         4
      18: aaload
      19: astore        5
      21: aload         5
      23: dup
      24: astore        6
      26: monitorenter
      27: aload_0
      28: aload         5
      30: iload         4
      32: invokespecial #33                 // Method resizeIfNeeded:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;I)Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
      35: astore        5
      37: aload         5
      39: lload_1
      40: iload_3
      41: invokevirtual #37                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS$Segment.remove:(JI)Ljava/lang/Object;
      44: aload         6
      46: monitorexit
      47: areturn
      48: astore        7
      50: aload         6
      52: monitorexit
      53: aload         7
      55: athrow
    Exception table:
       from    to  target type
          27    47    48   any
          48    53    48   any

  public int getMemory(long);
    Code:
       0: lload_1
       1: invokestatic  #24                 // Method getHash:(J)I
       4: istore_3
       5: aload_0
       6: iload_3
       7: invokespecial #25                 // Method getSegment:(I)Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
      10: lload_1
      11: iload_3
      12: invokevirtual #38                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS$Segment.getMemory:(JI)I
      15: ireturn

  public V get(long);
    Code:
       0: lload_1
       1: invokestatic  #24                 // Method getHash:(J)I
       4: istore_3
       5: aload_0
       6: iload_3
       7: invokespecial #25                 // Method getSegment:(I)Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
      10: lload_1
      11: iload_3
      12: invokevirtual #39                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS$Segment.get:(JI)Ljava/lang/Object;
      15: areturn

  private org.h2.mvstore.cache.CacheLongKeyLIRS$Segment<V> getSegment(int);
    Code:
       0: aload_0
       1: getfield      #17                 // Field segments:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
       4: aload_0
       5: iload_1
       6: invokespecial #32                 // Method getSegmentIndex:(I)I
       9: aaload
      10: areturn

  private int getSegmentIndex(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #19                 // Field segmentShift:I
       5: iushr
       6: aload_0
       7: getfield      #13                 // Field segmentMask:I
      10: iand
      11: ireturn

  static int getHash(long);
    Code:
       0: lload_0
       1: bipush        32
       3: lushr
       4: lload_0
       5: lxor
       6: l2i
       7: istore_2
       8: iload_2
       9: bipush        16
      11: iushr
      12: iload_2
      13: ixor
      14: ldc           #40                 // int 73244475
      16: imul
      17: istore_2
      18: iload_2
      19: bipush        16
      21: iushr
      22: iload_2
      23: ixor
      24: ldc           #40                 // int 73244475
      26: imul
      27: istore_2
      28: iload_2
      29: bipush        16
      31: iushr
      32: iload_2
      33: ixor
      34: istore_2
      35: iload_2
      36: ireturn

  public long getUsedMemory();
    Code:
       0: lconst_0
       1: lstore_1
       2: aload_0
       3: getfield      #17                 // Field segments:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
       6: astore_3
       7: aload_3
       8: arraylength
       9: istore        4
      11: iconst_0
      12: istore        5
      14: iload         5
      16: iload         4
      18: if_icmpge     41
      21: aload_3
      22: iload         5
      24: aaload
      25: astore        6
      27: lload_1
      28: aload         6
      30: getfield      #41                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Segment.usedMemory:J
      33: ladd
      34: lstore_1
      35: iinc          5, 1
      38: goto          14
      41: lload_1
      42: lreturn

  public void setMaxMemory(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ldc           #42                 // String Max memory must be larger than 0, is {0}
      13: iconst_1
      14: anewarray     #9                  // class java/lang/Object
      17: dup
      18: iconst_0
      19: lload_1
      20: invokestatic  #43                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      23: aastore
      24: invokestatic  #11                 // Method org/h2/mvstore/DataUtils.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      27: aload_0
      28: lload_1
      29: putfield      #22                 // Field maxMemory:J
      32: aload_0
      33: getfield      #17                 // Field segments:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
      36: ifnull        90
      39: lconst_1
      40: lload_1
      41: aload_0
      42: getfield      #17                 // Field segments:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
      45: arraylength
      46: i2l
      47: ldiv
      48: ladd
      49: lstore_3
      50: aload_0
      51: getfield      #17                 // Field segments:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
      54: astore        5
      56: aload         5
      58: arraylength
      59: istore        6
      61: iconst_0
      62: istore        7
      64: iload         7
      66: iload         6
      68: if_icmpge     90
      71: aload         5
      73: iload         7
      75: aaload
      76: astore        8
      78: aload         8
      80: lload_3
      81: invokevirtual #44                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS$Segment.setMaxMemory:(J)V
      84: iinc          7, 1
      87: goto          64
      90: return

  public long getMaxMemory();
    Code:
       0: aload_0
       1: getfield      #22                 // Field maxMemory:J
       4: lreturn

  public synchronized java.util.Set<java.util.Map$Entry<java.lang.Long, V>> entrySet();
    Code:
       0: new           #45                 // class java/util/HashMap
       3: dup
       4: invokespecial #46                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #47                 // Method keySet:()Ljava/util/Set;
      12: invokeinterface #48,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          60
      27: aload_2
      28: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #51                 // class java/lang/Long
      36: invokevirtual #52                 // Method java/lang/Long.longValue:()J
      39: lstore_3
      40: aload_1
      41: lload_3
      42: invokestatic  #43                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      45: aload_0
      46: lload_3
      47: invokespecial #28                 // Method find:(J)Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      50: getfield      #29                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.value:Ljava/lang/Object;
      53: invokevirtual #53                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: goto          18
      60: aload_1
      61: invokevirtual #54                 // Method java/util/HashMap.entrySet:()Ljava/util/Set;
      64: areturn

  public java.util.Set<java.lang.Long> keySet();
    Code:
       0: new           #55                 // class java/util/HashSet
       3: dup
       4: invokespecial #56                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #17                 // Field segments:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
      12: astore_2
      13: aload_2
      14: arraylength
      15: istore_3
      16: iconst_0
      17: istore        4
      19: iload         4
      21: iload_3
      22: if_icmpge     47
      25: aload_2
      26: iload         4
      28: aaload
      29: astore        5
      31: aload_1
      32: aload         5
      34: invokevirtual #57                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS$Segment.keySet:()Ljava/util/Set;
      37: invokevirtual #58                 // Method java/util/HashSet.addAll:(Ljava/util/Collection;)Z
      40: pop
      41: iinc          4, 1
      44: goto          19
      47: aload_1
      48: areturn

  public int sizeNonResident();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #17                 // Field segments:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
       6: astore_2
       7: aload_2
       8: arraylength
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_3
      16: if_icmpge     39
      19: aload_2
      20: iload         4
      22: aaload
      23: astore        5
      25: iload_1
      26: aload         5
      28: getfield      #59                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Segment.queue2Size:I
      31: iadd
      32: istore_1
      33: iinc          4, 1
      36: goto          13
      39: iload_1
      40: ireturn

  public int sizeMapArray();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #17                 // Field segments:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
       6: astore_2
       7: aload_2
       8: arraylength
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_3
      16: if_icmpge     40
      19: aload_2
      20: iload         4
      22: aaload
      23: astore        5
      25: iload_1
      26: aload         5
      28: getfield      #60                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Segment.entries:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      31: arraylength
      32: iadd
      33: istore_1
      34: iinc          4, 1
      37: goto          13
      40: iload_1
      41: ireturn

  public int sizeHot();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #17                 // Field segments:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
       6: astore_2
       7: aload_2
       8: arraylength
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_3
      16: if_icmpge     51
      19: aload_2
      20: iload         4
      22: aaload
      23: astore        5
      25: iload_1
      26: aload         5
      28: getfield      #61                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Segment.mapSize:I
      31: aload         5
      33: getfield      #62                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Segment.queueSize:I
      36: isub
      37: aload         5
      39: getfield      #59                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Segment.queue2Size:I
      42: isub
      43: iadd
      44: istore_1
      45: iinc          4, 1
      48: goto          13
      51: iload_1
      52: ireturn

  public long getHits();
    Code:
       0: lconst_0
       1: lstore_1
       2: aload_0
       3: getfield      #17                 // Field segments:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
       6: astore_3
       7: aload_3
       8: arraylength
       9: istore        4
      11: iconst_0
      12: istore        5
      14: iload         5
      16: iload         4
      18: if_icmpge     41
      21: aload_3
      22: iload         5
      24: aaload
      25: astore        6
      27: lload_1
      28: aload         6
      30: getfield      #63                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Segment.hits:J
      33: ladd
      34: lstore_1
      35: iinc          5, 1
      38: goto          14
      41: lload_1
      42: lreturn

  public long getMisses();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #17                 // Field segments:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
       6: astore_2
       7: aload_2
       8: arraylength
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_3
      16: if_icmpge     41
      19: aload_2
      20: iload         4
      22: aaload
      23: astore        5
      25: iload_1
      26: i2l
      27: aload         5
      29: getfield      #64                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Segment.misses:J
      32: ladd
      33: l2i
      34: istore_1
      35: iinc          4, 1
      38: goto          13
      41: iload_1
      42: i2l
      43: lreturn

  public int size();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #17                 // Field segments:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
       6: astore_2
       7: aload_2
       8: arraylength
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_3
      16: if_icmpge     45
      19: aload_2
      20: iload         4
      22: aaload
      23: astore        5
      25: iload_1
      26: aload         5
      28: getfield      #61                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Segment.mapSize:I
      31: aload         5
      33: getfield      #59                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Segment.queue2Size:I
      36: isub
      37: iadd
      38: istore_1
      39: iinc          4, 1
      42: goto          13
      45: iload_1
      46: ireturn

  public java.util.List<java.lang.Long> keys(boolean, boolean);
    Code:
       0: new           #65                 // class java/util/ArrayList
       3: dup
       4: invokespecial #66                 // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aload_0
       9: getfield      #17                 // Field segments:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Segment;
      12: astore        4
      14: aload         4
      16: arraylength
      17: istore        5
      19: iconst_0
      20: istore        6
      22: iload         6
      24: iload         5
      26: if_icmpge     54
      29: aload         4
      31: iload         6
      33: aaload
      34: astore        7
      36: aload_3
      37: aload         7
      39: iload_1
      40: iload_2
      41: invokevirtual #67                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS$Segment.keys:(ZZ)Ljava/util/List;
      44: invokevirtual #68                 // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      47: pop
      48: iinc          6, 1
      51: goto          22
      54: aload_3
      55: areturn

  public java.util.List<V> values();
    Code:
       0: new           #65                 // class java/util/ArrayList
       3: dup
       4: invokespecial #66                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #47                 // Method keySet:()Ljava/util/Set;
      12: invokeinterface #48,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          65
      27: aload_2
      28: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #51                 // class java/lang/Long
      36: invokevirtual #52                 // Method java/lang/Long.longValue:()J
      39: lstore_3
      40: aload_0
      41: lload_3
      42: invokespecial #28                 // Method find:(J)Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      45: getfield      #29                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.value:Ljava/lang/Object;
      48: astore        5
      50: aload         5
      52: ifnull        62
      55: aload_1
      56: aload         5
      58: invokevirtual #69                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      61: pop
      62: goto          18
      65: aload_1
      66: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method size:()I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method getMap:()Ljava/util/Map;
       4: aload_1
       5: invokeinterface #72,  2           // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.Map<java.lang.Long, V> getMap();
    Code:
       0: new           #45                 // class java/util/HashMap
       3: dup
       4: invokespecial #46                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #47                 // Method keySet:()Ljava/util/Set;
      12: invokeinterface #48,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          69
      27: aload_2
      28: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #51                 // class java/lang/Long
      36: invokevirtual #52                 // Method java/lang/Long.longValue:()J
      39: lstore_3
      40: aload_0
      41: lload_3
      42: invokespecial #28                 // Method find:(J)Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      45: getfield      #29                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.value:Ljava/lang/Object;
      48: astore        5
      50: aload         5
      52: ifnull        66
      55: aload_1
      56: lload_3
      57: invokestatic  #43                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      60: aload         5
      62: invokevirtual #53                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: goto          18
      69: aload_1
      70: areturn

  public void putAll(java.util.Map<java.lang.Long, ? extends V>);
    Code:
       0: aload_1
       1: invokeinterface #73,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #48,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          57
      21: aload_2
      22: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #74                 // class java/util/Map$Entry
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      38: checkcast     #51                 // class java/lang/Long
      41: invokevirtual #52                 // Method java/lang/Long.longValue:()J
      44: aload_3
      45: invokeinterface #76,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      50: invokevirtual #77                 // Method put:(JLjava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: goto          12
      57: return
}
