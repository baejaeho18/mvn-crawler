Compiled from "CacheLongKeyLIRS.java"
class org.h2.mvstore.cache.CacheLongKeyLIRS$Segment<V> {
  int mapSize;

  int queueSize;

  int queue2Size;

  long hits;

  long misses;

  final org.h2.mvstore.cache.CacheLongKeyLIRS$Entry<V>[] entries;

  long usedMemory;

  private final int stackMoveDistance;

  private long maxMemory;

  private final int mask;

  private final int nonResidentQueueSize;

  private final org.h2.mvstore.cache.CacheLongKeyLIRS$Entry<V> stack;

  private int stackSize;

  private final org.h2.mvstore.cache.CacheLongKeyLIRS$Entry<V> queue;

  private final org.h2.mvstore.cache.CacheLongKeyLIRS$Entry<V> queue2;

  private int stackMoveCounter;

  org.h2.mvstore.cache.CacheLongKeyLIRS$Segment(long, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: invokevirtual #2                  // Method setMaxMemory:(J)V
       9: aload_0
      10: iload_3
      11: putfield      #3                  // Field stackMoveDistance:I
      14: aload_0
      15: iload         5
      17: putfield      #4                  // Field nonResidentQueueSize:I
      20: aload_0
      21: iload         4
      23: iconst_1
      24: isub
      25: putfield      #5                  // Field mask:I
      28: aload_0
      29: new           #6                  // class org/h2/mvstore/cache/CacheLongKeyLIRS$Entry
      32: dup
      33: invokespecial #7                  // Method org/h2/mvstore/cache/CacheLongKeyLIRS$Entry."<init>":()V
      36: putfield      #8                  // Field stack:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      39: aload_0
      40: getfield      #8                  // Field stack:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      43: aload_0
      44: getfield      #8                  // Field stack:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      47: aload_0
      48: getfield      #8                  // Field stack:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      51: dup_x1
      52: putfield      #9                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      55: putfield      #10                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackPrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      58: aload_0
      59: new           #6                  // class org/h2/mvstore/cache/CacheLongKeyLIRS$Entry
      62: dup
      63: invokespecial #7                  // Method org/h2/mvstore/cache/CacheLongKeyLIRS$Entry."<init>":()V
      66: putfield      #11                 // Field queue:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      69: aload_0
      70: getfield      #11                 // Field queue:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      73: aload_0
      74: getfield      #11                 // Field queue:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      77: aload_0
      78: getfield      #11                 // Field queue:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      81: dup_x1
      82: putfield      #12                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queueNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      85: putfield      #13                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queuePrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      88: aload_0
      89: new           #6                  // class org/h2/mvstore/cache/CacheLongKeyLIRS$Entry
      92: dup
      93: invokespecial #7                  // Method org/h2/mvstore/cache/CacheLongKeyLIRS$Entry."<init>":()V
      96: putfield      #14                 // Field queue2:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      99: aload_0
     100: getfield      #14                 // Field queue2:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     103: aload_0
     104: getfield      #14                 // Field queue2:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     107: aload_0
     108: getfield      #14                 // Field queue2:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     111: dup_x1
     112: putfield      #12                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queueNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     115: putfield      #13                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queuePrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     118: iload         4
     120: anewarray     #6                  // class org/h2/mvstore/cache/CacheLongKeyLIRS$Entry
     123: astore        6
     125: aload_0
     126: aload         6
     128: putfield      #15                 // Field entries:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     131: return

  org.h2.mvstore.cache.CacheLongKeyLIRS$Segment(org.h2.mvstore.cache.CacheLongKeyLIRS$Segment<V>, int);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #16                 // Field maxMemory:J
       5: aload_1
       6: getfield      #3                  // Field stackMoveDistance:I
       9: iload_2
      10: aload_1
      11: getfield      #4                  // Field nonResidentQueueSize:I
      14: invokespecial #17                 // Method "<init>":(JIII)V
      17: aload_0
      18: aload_1
      19: getfield      #18                 // Field hits:J
      22: putfield      #18                 // Field hits:J
      25: aload_0
      26: aload_1
      27: getfield      #19                 // Field misses:J
      30: putfield      #19                 // Field misses:J
      33: aload_1
      34: getfield      #8                  // Field stack:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      37: getfield      #10                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackPrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      40: astore_3
      41: aload_3
      42: aload_1
      43: getfield      #8                  // Field stack:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      46: if_acmpeq     75
      49: aload_3
      50: invokestatic  #20                 // Method copy:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      53: astore        4
      55: aload_0
      56: aload         4
      58: invokespecial #21                 // Method addToMap:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
      61: aload_0
      62: aload         4
      64: invokespecial #22                 // Method addToStack:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
      67: aload_3
      68: getfield      #10                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackPrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      71: astore_3
      72: goto          41
      75: aload_1
      76: getfield      #11                 // Field queue:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      79: getfield      #13                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queuePrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      82: astore_3
      83: aload_3
      84: aload_1
      85: getfield      #11                 // Field queue:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      88: if_acmpeq     143
      91: aload_0
      92: aload_3
      93: getfield      #23                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.key:J
      96: aload_3
      97: getfield      #23                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.key:J
     100: invokestatic  #24                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS.getHash:(J)I
     103: invokevirtual #25                 // Method find:(JI)Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     106: astore        4
     108: aload         4
     110: ifnonnull     125
     113: aload_3
     114: invokestatic  #20                 // Method copy:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     117: astore        4
     119: aload_0
     120: aload         4
     122: invokespecial #21                 // Method addToMap:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
     125: aload_0
     126: aload_0
     127: getfield      #11                 // Field queue:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     130: aload         4
     132: invokespecial #26                 // Method addToQueue:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
     135: aload_3
     136: getfield      #13                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queuePrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     139: astore_3
     140: goto          83
     143: aload_1
     144: getfield      #14                 // Field queue2:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     147: getfield      #13                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queuePrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     150: astore_3
     151: aload_3
     152: aload_1
     153: getfield      #14                 // Field queue2:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     156: if_acmpeq     211
     159: aload_0
     160: aload_3
     161: getfield      #23                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.key:J
     164: aload_3
     165: getfield      #23                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.key:J
     168: invokestatic  #24                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS.getHash:(J)I
     171: invokevirtual #25                 // Method find:(JI)Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     174: astore        4
     176: aload         4
     178: ifnonnull     193
     181: aload_3
     182: invokestatic  #20                 // Method copy:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     185: astore        4
     187: aload_0
     188: aload         4
     190: invokespecial #21                 // Method addToMap:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
     193: aload_0
     194: aload_0
     195: getfield      #14                 // Field queue2:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     198: aload         4
     200: invokespecial #26                 // Method addToQueue:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
     203: aload_3
     204: getfield      #13                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queuePrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     207: astore_3
     208: goto          151
     211: return

  int getNewMapLen();
    Code:
       0: aload_0
       1: getfield      #5                  // Field mask:I
       4: iconst_1
       5: iadd
       6: istore_1
       7: iload_1
       8: iconst_3
       9: imul
      10: aload_0
      11: getfield      #27                 // Field mapSize:I
      14: iconst_4
      15: imul
      16: if_icmpge     29
      19: iload_1
      20: ldc           #28                 // int 268435456
      22: if_icmpge     29
      25: iload_1
      26: iconst_2
      27: imul
      28: ireturn
      29: iload_1
      30: bipush        32
      32: if_icmple     50
      35: iload_1
      36: bipush        8
      38: idiv
      39: aload_0
      40: getfield      #27                 // Field mapSize:I
      43: if_icmple     50
      46: iload_1
      47: iconst_2
      48: idiv
      49: ireturn
      50: iconst_0
      51: ireturn

  private void addToMap(org.h2.mvstore.cache.CacheLongKeyLIRS$Entry<V>);
    Code:
       0: aload_1
       1: getfield      #23                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.key:J
       4: invokestatic  #24                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS.getHash:(J)I
       7: aload_0
       8: getfield      #5                  // Field mask:I
      11: iand
      12: istore_2
      13: aload_1
      14: aload_0
      15: getfield      #15                 // Field entries:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      18: iload_2
      19: aaload
      20: putfield      #29                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.mapNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      23: aload_0
      24: getfield      #15                 // Field entries:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      27: iload_2
      28: aload_1
      29: aastore
      30: aload_0
      31: dup
      32: getfield      #30                 // Field usedMemory:J
      35: aload_1
      36: getfield      #31                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.memory:I
      39: i2l
      40: ladd
      41: putfield      #30                 // Field usedMemory:J
      44: aload_0
      45: dup
      46: getfield      #27                 // Field mapSize:I
      49: iconst_1
      50: iadd
      51: putfield      #27                 // Field mapSize:I
      54: return

  private static <V> org.h2.mvstore.cache.CacheLongKeyLIRS$Entry<V> copy(org.h2.mvstore.cache.CacheLongKeyLIRS$Entry<V>);
    Code:
       0: new           #6                  // class org/h2/mvstore/cache/CacheLongKeyLIRS$Entry
       3: dup
       4: invokespecial #7                  // Method org/h2/mvstore/cache/CacheLongKeyLIRS$Entry."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #23                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.key:J
      13: putfield      #23                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.key:J
      16: aload_1
      17: aload_0
      18: getfield      #32                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.value:Ljava/lang/Object;
      21: putfield      #32                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.value:Ljava/lang/Object;
      24: aload_1
      25: aload_0
      26: getfield      #31                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.memory:I
      29: putfield      #31                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.memory:I
      32: aload_1
      33: aload_0
      34: getfield      #33                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.topMove:I
      37: putfield      #33                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.topMove:I
      40: aload_1
      41: areturn

  int getMemory(long, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #25                 // Method find:(JI)Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
       6: astore        4
       8: aload         4
      10: ifnonnull     17
      13: iconst_0
      14: goto          22
      17: aload         4
      19: getfield      #31                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.memory:I
      22: ireturn

  V get(long, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #25                 // Method find:(JI)Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
       6: astore        4
       8: aload         4
      10: ifnonnull     25
      13: aload_0
      14: dup
      15: getfield      #19                 // Field misses:J
      18: lconst_1
      19: ladd
      20: putfield      #19                 // Field misses:J
      23: aconst_null
      24: areturn
      25: aload         4
      27: getfield      #32                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.value:Ljava/lang/Object;
      30: astore        5
      32: aload         5
      34: ifnonnull     49
      37: aload_0
      38: dup
      39: getfield      #19                 // Field misses:J
      42: lconst_1
      43: ladd
      44: putfield      #19                 // Field misses:J
      47: aconst_null
      48: areturn
      49: aload         4
      51: invokevirtual #34                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.isHot:()Z
      54: ifeq          102
      57: aload         4
      59: aload_0
      60: getfield      #8                  // Field stack:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      63: getfield      #9                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      66: if_acmpeq     108
      69: aload_0
      70: getfield      #3                  // Field stackMoveDistance:I
      73: ifeq          93
      76: aload_0
      77: getfield      #35                 // Field stackMoveCounter:I
      80: aload         4
      82: getfield      #33                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.topMove:I
      85: isub
      86: aload_0
      87: getfield      #3                  // Field stackMoveDistance:I
      90: if_icmple     108
      93: aload_0
      94: lload_1
      95: iload_3
      96: invokespecial #36                 // Method access:(JI)V
      99: goto          108
     102: aload_0
     103: lload_1
     104: iload_3
     105: invokespecial #36                 // Method access:(JI)V
     108: aload_0
     109: dup
     110: getfield      #18                 // Field hits:J
     113: lconst_1
     114: ladd
     115: putfield      #18                 // Field hits:J
     118: aload         5
     120: areturn

  private synchronized void access(long, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #25                 // Method find:(JI)Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
       6: astore        4
       8: aload         4
      10: ifnull        21
      13: aload         4
      15: getfield      #32                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.value:Ljava/lang/Object;
      18: ifnonnull     22
      21: return
      22: aload         4
      24: invokevirtual #34                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.isHot:()Z
      27: ifeq          109
      30: aload         4
      32: aload_0
      33: getfield      #8                  // Field stack:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      36: getfield      #9                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      39: if_acmpeq     152
      42: aload_0
      43: getfield      #3                  // Field stackMoveDistance:I
      46: ifeq          66
      49: aload_0
      50: getfield      #35                 // Field stackMoveCounter:I
      53: aload         4
      55: getfield      #33                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.topMove:I
      58: isub
      59: aload_0
      60: getfield      #3                  // Field stackMoveDistance:I
      63: if_icmple     152
      66: aload         4
      68: aload_0
      69: getfield      #8                  // Field stack:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      72: getfield      #10                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackPrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      75: if_acmpne     82
      78: iconst_1
      79: goto          83
      82: iconst_0
      83: istore        5
      85: aload_0
      86: aload         4
      88: invokespecial #37                 // Method removeFromStack:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
      91: iload         5
      93: ifeq          100
      96: aload_0
      97: invokespecial #38                 // Method pruneStack:()V
     100: aload_0
     101: aload         4
     103: invokespecial #22                 // Method addToStack:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
     106: goto          152
     109: aload_0
     110: aload         4
     112: invokespecial #39                 // Method removeFromQueue:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
     115: aload         4
     117: getfield      #9                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     120: ifnull        136
     123: aload_0
     124: aload         4
     126: invokespecial #37                 // Method removeFromStack:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
     129: aload_0
     130: invokespecial #40                 // Method convertOldestHotToCold:()V
     133: goto          146
     136: aload_0
     137: aload_0
     138: getfield      #11                 // Field queue:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     141: aload         4
     143: invokespecial #26                 // Method addToQueue:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
     146: aload_0
     147: aload         4
     149: invokespecial #22                 // Method addToStack:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
     152: return

  synchronized V put(long, int, V, int);
    Code:
       0: aload         4
       2: ifnonnull     15
       5: ldc           #41                 // String The value may not be null
       7: iconst_0
       8: anewarray     #42                 // class java/lang/Object
      11: invokestatic  #43                 // Method org/h2/mvstore/DataUtils.newIllegalArgumentException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_0
      16: lload_1
      17: iload_3
      18: invokevirtual #25                 // Method find:(JI)Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      21: astore        7
      23: aload         7
      25: ifnonnull     37
      28: iconst_0
      29: istore        8
      31: aconst_null
      32: astore        6
      34: goto          54
      37: iconst_1
      38: istore        8
      40: aload         7
      42: getfield      #32                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.value:Ljava/lang/Object;
      45: astore        6
      47: aload_0
      48: lload_1
      49: iload_3
      50: invokevirtual #44                 // Method remove:(JI)Ljava/lang/Object;
      53: pop
      54: iload         5
      56: i2l
      57: aload_0
      58: getfield      #16                 // Field maxMemory:J
      61: lcmp
      62: ifle          68
      65: aload         6
      67: areturn
      68: new           #6                  // class org/h2/mvstore/cache/CacheLongKeyLIRS$Entry
      71: dup
      72: invokespecial #7                  // Method org/h2/mvstore/cache/CacheLongKeyLIRS$Entry."<init>":()V
      75: astore        7
      77: aload         7
      79: lload_1
      80: putfield      #23                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.key:J
      83: aload         7
      85: aload         4
      87: putfield      #32                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.value:Ljava/lang/Object;
      90: aload         7
      92: iload         5
      94: putfield      #31                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.memory:I
      97: iload_3
      98: aload_0
      99: getfield      #5                  // Field mask:I
     102: iand
     103: istore        9
     105: aload         7
     107: aload_0
     108: getfield      #15                 // Field entries:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     111: iload         9
     113: aaload
     114: putfield      #29                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.mapNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     117: aload_0
     118: getfield      #15                 // Field entries:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     121: iload         9
     123: aload         7
     125: aastore
     126: aload_0
     127: dup
     128: getfield      #30                 // Field usedMemory:J
     131: iload         5
     133: i2l
     134: ladd
     135: putfield      #30                 // Field usedMemory:J
     138: aload_0
     139: getfield      #30                 // Field usedMemory:J
     142: aload_0
     143: getfield      #16                 // Field maxMemory:J
     146: lcmp
     147: ifle          171
     150: aload_0
     151: invokespecial #45                 // Method evict:()V
     154: aload_0
     155: getfield      #46                 // Field stackSize:I
     158: ifle          171
     161: aload_0
     162: aload_0
     163: getfield      #11                 // Field queue:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     166: aload         7
     168: invokespecial #26                 // Method addToQueue:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
     171: aload_0
     172: dup
     173: getfield      #27                 // Field mapSize:I
     176: iconst_1
     177: iadd
     178: putfield      #27                 // Field mapSize:I
     181: aload_0
     182: aload         7
     184: invokespecial #22                 // Method addToStack:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
     187: iload         8
     189: ifeq          198
     192: aload_0
     193: lload_1
     194: iload_3
     195: invokespecial #36                 // Method access:(JI)V
     198: aload         6
     200: areturn

  synchronized V remove(long, int);
    Code:
       0: iload_3
       1: aload_0
       2: getfield      #5                  // Field mask:I
       5: iand
       6: istore        4
       8: aload_0
       9: getfield      #15                 // Field entries:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      12: iload         4
      14: aaload
      15: astore        5
      17: aload         5
      19: ifnonnull     24
      22: aconst_null
      23: areturn
      24: aload         5
      26: getfield      #23                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.key:J
      29: lload_1
      30: lcmp
      31: ifne          56
      34: aload         5
      36: getfield      #32                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.value:Ljava/lang/Object;
      39: astore        6
      41: aload_0
      42: getfield      #15                 // Field entries:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      45: iload         4
      47: aload         5
      49: getfield      #29                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.mapNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      52: aastore
      53: goto          101
      56: aload         5
      58: astore        7
      60: aload         5
      62: getfield      #29                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.mapNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      65: astore        5
      67: aload         5
      69: ifnonnull     74
      72: aconst_null
      73: areturn
      74: aload         5
      76: getfield      #23                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.key:J
      79: lload_1
      80: lcmp
      81: ifne          56
      84: aload         5
      86: getfield      #32                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.value:Ljava/lang/Object;
      89: astore        6
      91: aload         7
      93: aload         5
      95: getfield      #29                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.mapNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      98: putfield      #29                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.mapNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     101: aload_0
     102: dup
     103: getfield      #27                 // Field mapSize:I
     106: iconst_1
     107: isub
     108: putfield      #27                 // Field mapSize:I
     111: aload_0
     112: dup
     113: getfield      #30                 // Field usedMemory:J
     116: aload         5
     118: getfield      #31                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.memory:I
     121: i2l
     122: lsub
     123: putfield      #30                 // Field usedMemory:J
     126: aload         5
     128: getfield      #9                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     131: ifnull        140
     134: aload_0
     135: aload         5
     137: invokespecial #37                 // Method removeFromStack:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
     140: aload         5
     142: invokevirtual #34                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.isHot:()Z
     145: ifeq          189
     148: aload_0
     149: getfield      #11                 // Field queue:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     152: getfield      #12                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queueNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     155: astore        5
     157: aload         5
     159: aload_0
     160: getfield      #11                 // Field queue:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     163: if_acmpeq     195
     166: aload_0
     167: aload         5
     169: invokespecial #39                 // Method removeFromQueue:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
     172: aload         5
     174: getfield      #9                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     177: ifnonnull     195
     180: aload_0
     181: aload         5
     183: invokespecial #47                 // Method addToStackBottom:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
     186: goto          195
     189: aload_0
     190: aload         5
     192: invokespecial #39                 // Method removeFromQueue:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
     195: aload_0
     196: invokespecial #38                 // Method pruneStack:()V
     199: aload         6
     201: areturn

  private void evict();
    Code:
       0: aload_0
       1: invokespecial #48                 // Method evictBlock:()V
       4: aload_0
       5: getfield      #30                 // Field usedMemory:J
       8: aload_0
       9: getfield      #16                 // Field maxMemory:J
      12: lcmp
      13: ifgt          0
      16: return

  private void evictBlock();
    Code:
       0: aload_0
       1: getfield      #49                 // Field queueSize:I
       4: aload_0
       5: getfield      #27                 // Field mapSize:I
       8: iconst_5
       9: iushr
      10: if_icmpgt     27
      13: aload_0
      14: getfield      #46                 // Field stackSize:I
      17: ifle          27
      20: aload_0
      21: invokespecial #40                 // Method convertOldestHotToCold:()V
      24: goto          0
      27: aload_0
      28: getfield      #30                 // Field usedMemory:J
      31: aload_0
      32: getfield      #16                 // Field maxMemory:J
      35: lcmp
      36: ifle          151
      39: aload_0
      40: getfield      #49                 // Field queueSize:I
      43: ifle          151
      46: aload_0
      47: getfield      #11                 // Field queue:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      50: getfield      #13                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queuePrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      53: astore_1
      54: aload_0
      55: dup
      56: getfield      #30                 // Field usedMemory:J
      59: aload_1
      60: getfield      #31                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.memory:I
      63: i2l
      64: lsub
      65: putfield      #30                 // Field usedMemory:J
      68: aload_0
      69: aload_1
      70: invokespecial #39                 // Method removeFromQueue:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
      73: aload_1
      74: aconst_null
      75: putfield      #32                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.value:Ljava/lang/Object;
      78: aload_1
      79: iconst_0
      80: putfield      #31                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.memory:I
      83: aload_0
      84: aload_0
      85: getfield      #14                 // Field queue2:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      88: aload_1
      89: invokespecial #26                 // Method addToQueue:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
      92: aload_0
      93: getfield      #4                  // Field nonResidentQueueSize:I
      96: aload_0
      97: getfield      #27                 // Field mapSize:I
     100: aload_0
     101: getfield      #50                 // Field queue2Size:I
     104: isub
     105: imul
     106: istore_2
     107: iload_2
     108: iflt          148
     111: aload_0
     112: getfield      #50                 // Field queue2Size:I
     115: iload_2
     116: if_icmple     148
     119: aload_0
     120: getfield      #14                 // Field queue2:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     123: getfield      #13                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queuePrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     126: astore_1
     127: aload_1
     128: getfield      #23                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.key:J
     131: invokestatic  #24                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS.getHash:(J)I
     134: istore_3
     135: aload_0
     136: aload_1
     137: getfield      #23                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.key:J
     140: iload_3
     141: invokevirtual #44                 // Method remove:(JI)Ljava/lang/Object;
     144: pop
     145: goto          111
     148: goto          27
     151: return

  private void convertOldestHotToCold();
    Code:
       0: aload_0
       1: getfield      #8                  // Field stack:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
       4: getfield      #10                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackPrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field stack:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      13: if_acmpne     24
      16: new           #51                 // class java/lang/IllegalStateException
      19: dup
      20: invokespecial #52                 // Method java/lang/IllegalStateException."<init>":()V
      23: athrow
      24: aload_0
      25: aload_1
      26: invokespecial #37                 // Method removeFromStack:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
      29: aload_0
      30: aload_0
      31: getfield      #11                 // Field queue:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      34: aload_1
      35: invokespecial #26                 // Method addToQueue:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
      38: aload_0
      39: invokespecial #38                 // Method pruneStack:()V
      42: return

  private void pruneStack();
    Code:
       0: aload_0
       1: getfield      #8                  // Field stack:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
       4: getfield      #10                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackPrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
       7: astore_1
       8: aload_1
       9: invokevirtual #34                 // Method org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.isHot:()Z
      12: ifeq          18
      15: goto          26
      18: aload_0
      19: aload_1
      20: invokespecial #37                 // Method removeFromStack:(Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;)V
      23: goto          0
      26: return

  org.h2.mvstore.cache.CacheLongKeyLIRS$Entry<V> find(long, int);
    Code:
       0: iload_3
       1: aload_0
       2: getfield      #5                  // Field mask:I
       5: iand
       6: istore        4
       8: aload_0
       9: getfield      #15                 // Field entries:[Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      12: iload         4
      14: aaload
      15: astore        5
      17: aload         5
      19: ifnull        42
      22: aload         5
      24: getfield      #23                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.key:J
      27: lload_1
      28: lcmp
      29: ifeq          42
      32: aload         5
      34: getfield      #29                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.mapNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      37: astore        5
      39: goto          17
      42: aload         5
      44: areturn

  private void addToStack(org.h2.mvstore.cache.CacheLongKeyLIRS$Entry<V>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field stack:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
       5: putfield      #10                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackPrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field stack:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      13: getfield      #9                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      16: putfield      #9                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      19: aload_1
      20: getfield      #9                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      23: aload_1
      24: putfield      #10                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackPrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      27: aload_0
      28: getfield      #8                  // Field stack:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      31: aload_1
      32: putfield      #9                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      35: aload_0
      36: dup
      37: getfield      #46                 // Field stackSize:I
      40: iconst_1
      41: iadd
      42: putfield      #46                 // Field stackSize:I
      45: aload_1
      46: aload_0
      47: dup
      48: getfield      #35                 // Field stackMoveCounter:I
      51: dup_x1
      52: iconst_1
      53: iadd
      54: putfield      #35                 // Field stackMoveCounter:I
      57: putfield      #33                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.topMove:I
      60: return

  private void addToStackBottom(org.h2.mvstore.cache.CacheLongKeyLIRS$Entry<V>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field stack:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
       5: putfield      #9                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field stack:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      13: getfield      #10                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackPrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      16: putfield      #10                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackPrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      19: aload_1
      20: getfield      #10                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackPrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      23: aload_1
      24: putfield      #9                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      27: aload_0
      28: getfield      #8                  // Field stack:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      31: aload_1
      32: putfield      #10                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackPrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      35: aload_0
      36: dup
      37: getfield      #46                 // Field stackSize:I
      40: iconst_1
      41: iadd
      42: putfield      #46                 // Field stackSize:I
      45: return

  private void removeFromStack(org.h2.mvstore.cache.CacheLongKeyLIRS$Entry<V>);
    Code:
       0: aload_1
       1: getfield      #10                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackPrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
       4: aload_1
       5: getfield      #9                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
       8: putfield      #9                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      11: aload_1
      12: getfield      #9                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      15: aload_1
      16: getfield      #10                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackPrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      19: putfield      #10                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackPrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      22: aload_1
      23: aload_1
      24: aconst_null
      25: dup_x1
      26: putfield      #9                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      29: putfield      #10                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackPrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      32: aload_0
      33: dup
      34: getfield      #46                 // Field stackSize:I
      37: iconst_1
      38: isub
      39: putfield      #46                 // Field stackSize:I
      42: return

  private void addToQueue(org.h2.mvstore.cache.CacheLongKeyLIRS$Entry<V>, org.h2.mvstore.cache.CacheLongKeyLIRS$Entry<V>);
    Code:
       0: aload_2
       1: aload_1
       2: putfield      #13                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queuePrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
       5: aload_2
       6: aload_1
       7: getfield      #12                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queueNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      10: putfield      #12                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queueNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      13: aload_2
      14: getfield      #12                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queueNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      17: aload_2
      18: putfield      #13                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queuePrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      21: aload_1
      22: aload_2
      23: putfield      #12                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queueNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      26: aload_2
      27: getfield      #32                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.value:Ljava/lang/Object;
      30: ifnull        46
      33: aload_0
      34: dup
      35: getfield      #49                 // Field queueSize:I
      38: iconst_1
      39: iadd
      40: putfield      #49                 // Field queueSize:I
      43: goto          56
      46: aload_0
      47: dup
      48: getfield      #50                 // Field queue2Size:I
      51: iconst_1
      52: iadd
      53: putfield      #50                 // Field queue2Size:I
      56: return

  private void removeFromQueue(org.h2.mvstore.cache.CacheLongKeyLIRS$Entry<V>);
    Code:
       0: aload_1
       1: getfield      #13                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queuePrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
       4: aload_1
       5: getfield      #12                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queueNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
       8: putfield      #12                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queueNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      11: aload_1
      12: getfield      #12                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queueNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      15: aload_1
      16: getfield      #13                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queuePrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      19: putfield      #13                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queuePrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      22: aload_1
      23: aload_1
      24: aconst_null
      25: dup_x1
      26: putfield      #12                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queueNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      29: putfield      #13                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queuePrev:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      32: aload_1
      33: getfield      #32                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.value:Ljava/lang/Object;
      36: ifnull        52
      39: aload_0
      40: dup
      41: getfield      #49                 // Field queueSize:I
      44: iconst_1
      45: isub
      46: putfield      #49                 // Field queueSize:I
      49: goto          62
      52: aload_0
      53: dup
      54: getfield      #50                 // Field queue2Size:I
      57: iconst_1
      58: isub
      59: putfield      #50                 // Field queue2Size:I
      62: return

  synchronized java.util.List<java.lang.Long> keys(boolean, boolean);
    Code:
       0: new           #53                 // class java/util/ArrayList
       3: dup
       4: invokespecial #54                 // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: iload_1
       9: ifeq          69
      12: iload_2
      13: ifeq          23
      16: aload_0
      17: getfield      #14                 // Field queue2:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      20: goto          27
      23: aload_0
      24: getfield      #11                 // Field queue:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      27: astore        4
      29: aload         4
      31: getfield      #12                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queueNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      34: astore        5
      36: aload         5
      38: aload         4
      40: if_acmpeq     66
      43: aload_3
      44: aload         5
      46: getfield      #23                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.key:J
      49: invokestatic  #55                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      52: invokevirtual #56                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      55: pop
      56: aload         5
      58: getfield      #12                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queueNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      61: astore        5
      63: goto          36
      66: goto          110
      69: aload_0
      70: getfield      #8                  // Field stack:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      73: getfield      #9                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      76: astore        4
      78: aload         4
      80: aload_0
      81: getfield      #8                  // Field stack:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      84: if_acmpeq     110
      87: aload_3
      88: aload         4
      90: getfield      #23                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.key:J
      93: invokestatic  #55                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      96: invokevirtual #56                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      99: pop
     100: aload         4
     102: getfield      #9                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
     105: astore        4
     107: goto          78
     110: aload_3
     111: areturn

  boolean containsKey(long, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #25                 // Method find:(JI)Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
       6: astore        4
       8: aload         4
      10: ifnull        25
      13: aload         4
      15: getfield      #32                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.value:Ljava/lang/Object;
      18: ifnull        25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  synchronized java.util.Set<java.lang.Long> keySet();
    Code:
       0: new           #57                 // class java/util/HashSet
       3: dup
       4: invokespecial #58                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #8                  // Field stack:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      12: getfield      #9                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      15: astore_2
      16: aload_2
      17: aload_0
      18: getfield      #8                  // Field stack:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      21: if_acmpeq     44
      24: aload_1
      25: aload_2
      26: getfield      #23                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.key:J
      29: invokestatic  #55                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      32: invokevirtual #59                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      35: pop
      36: aload_2
      37: getfield      #9                  // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.stackNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      40: astore_2
      41: goto          16
      44: aload_0
      45: getfield      #11                 // Field queue:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      48: getfield      #12                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queueNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      51: astore_2
      52: aload_2
      53: aload_0
      54: getfield      #11                 // Field queue:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      57: if_acmpeq     80
      60: aload_1
      61: aload_2
      62: getfield      #23                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.key:J
      65: invokestatic  #55                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      68: invokevirtual #59                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      71: pop
      72: aload_2
      73: getfield      #12                 // Field org/h2/mvstore/cache/CacheLongKeyLIRS$Entry.queueNext:Lorg/h2/mvstore/cache/CacheLongKeyLIRS$Entry;
      76: astore_2
      77: goto          52
      80: aload_1
      81: areturn

  void setMaxMemory(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #16                 // Field maxMemory:J
       5: return
}
