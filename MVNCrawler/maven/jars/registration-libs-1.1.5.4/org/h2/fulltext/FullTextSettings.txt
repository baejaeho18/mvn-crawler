Compiled from "FullTextSettings.java"
final class org.h2.fulltext.FullTextSettings {
  private static final java.util.Map<java.lang.String, org.h2.fulltext.FullTextSettings> SETTINGS;

  private boolean initialized;

  private final java.util.Set<java.lang.String> ignoreList;

  private final java.util.Map<java.lang.String, java.lang.Integer> words;

  private final java.util.Map<java.lang.Integer, org.h2.fulltext.IndexInfo> indexes;

  private final org.h2.util.SoftHashMap<java.sql.Connection, org.h2.util.SoftHashMap<java.lang.String, java.sql.PreparedStatement>> cache;

  private java.lang.String whitespaceChars;

  private org.h2.fulltext.FullTextSettings();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashSet
       8: dup
       9: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      12: putfield      #4                  // Field ignoreList:Ljava/util/Set;
      15: aload_0
      16: new           #5                  // class java/util/HashMap
      19: dup
      20: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      23: putfield      #7                  // Field words:Ljava/util/Map;
      26: aload_0
      27: new           #5                  // class java/util/HashMap
      30: dup
      31: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      34: invokestatic  #8                  // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      37: putfield      #9                  // Field indexes:Ljava/util/Map;
      40: aload_0
      41: new           #10                 // class org/h2/util/SoftHashMap
      44: dup
      45: invokespecial #11                 // Method org/h2/util/SoftHashMap."<init>":()V
      48: putfield      #12                 // Field cache:Lorg/h2/util/SoftHashMap;
      51: aload_0
      52: ldc           #13                 // String  \t\n\r\f+\"*%&/()=?\'!,.;:-_#@|^~`{}[]<>\\
      54: putfield      #14                 // Field whitespaceChars:Ljava/lang/String;
      57: return

  public void clearIgnored();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ignoreList:Ljava/util/Set;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field ignoreList:Ljava/util/Set;
      11: invokeinterface #15,  1           // InterfaceMethod java/util/Set.clear:()V
      16: aload_1
      17: monitorexit
      18: goto          26
      21: astore_2
      22: aload_1
      23: monitorexit
      24: aload_2
      25: athrow
      26: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    24    21   any

  public void addIgnored(java.lang.Iterable<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ignoreList:Ljava/util/Set;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_1
       8: invokeinterface #16,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      13: astore_3
      14: aload_3
      15: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          56
      23: aload_3
      24: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #19                 // class java/lang/String
      32: astore        4
      34: aload         4
      36: invokestatic  #20                 // Method normalizeWord:(Ljava/lang/String;)Ljava/lang/String;
      39: astore        4
      41: aload_0
      42: getfield      #4                  // Field ignoreList:Ljava/util/Set;
      45: aload         4
      47: invokeinterface #21,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      52: pop
      53: goto          14
      56: aload_2
      57: monitorexit
      58: goto          68
      61: astore        5
      63: aload_2
      64: monitorexit
      65: aload         5
      67: athrow
      68: return
    Exception table:
       from    to  target type
           7    58    61   any
          61    65    61   any

  public void clearWordList();
    Code:
       0: aload_0
       1: getfield      #7                  // Field words:Ljava/util/Map;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #7                  // Field words:Ljava/util/Map;
      11: invokeinterface #22,  1           // InterfaceMethod java/util/Map.clear:()V
      16: aload_1
      17: monitorexit
      18: goto          26
      21: astore_2
      22: aload_1
      23: monitorexit
      24: aload_2
      25: athrow
      26: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    24    21   any

  public java.lang.Integer getWordId(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field words:Ljava/util/Map;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #7                  // Field words:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #23,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #24                 // class java/lang/Integer
      20: aload_2
      21: monitorexit
      22: areturn
      23: astore_3
      24: aload_2
      25: monitorexit
      26: aload_3
      27: athrow
    Exception table:
       from    to  target type
           7    22    23   any
          23    26    23   any

  public void addWord(java.lang.String, java.lang.Integer);
    Code:
       0: aload_0
       1: getfield      #7                  // Field words:Ljava/util/Map;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #7                  // Field words:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #25,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      17: ifne          32
      20: aload_0
      21: getfield      #7                  // Field words:Ljava/util/Map;
      24: aload_1
      25: aload_2
      26: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      31: pop
      32: aload_3
      33: monitorexit
      34: goto          44
      37: astore        4
      39: aload_3
      40: monitorexit
      41: aload         4
      43: athrow
      44: return
    Exception table:
       from    to  target type
           7    34    37   any
          37    41    37   any

  protected org.h2.fulltext.IndexInfo getIndexInfo(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field indexes:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #23,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #28                 // class org/h2/fulltext/IndexInfo
      16: areturn

  protected void addIndexInfo(org.h2.fulltext.IndexInfo);
    Code:
       0: aload_0
       1: getfield      #9                  // Field indexes:Ljava/util/Map;
       4: aload_1
       5: getfield      #29                 // Field org/h2/fulltext/IndexInfo.id:I
       8: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: aload_1
      12: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: return

  protected java.lang.String convertWord(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #20                 // Method normalizeWord:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_1
       5: aload_0
       6: getfield      #4                  // Field ignoreList:Ljava/util/Set;
       9: dup
      10: astore_2
      11: monitorenter
      12: aload_0
      13: getfield      #4                  // Field ignoreList:Ljava/util/Set;
      16: aload_1
      17: invokeinterface #30,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      22: ifeq          29
      25: aconst_null
      26: aload_2
      27: monitorexit
      28: areturn
      29: aload_2
      30: monitorexit
      31: goto          39
      34: astore_3
      35: aload_2
      36: monitorexit
      37: aload_3
      38: athrow
      39: aload_1
      40: areturn
    Exception table:
       from    to  target type
          12    28    34   any
          29    31    34   any
          34    37    34   any

  protected static org.h2.fulltext.FullTextSettings getInstance(java.sql.Connection) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokestatic  #31                 // Method getIndexPath:(Ljava/sql/Connection;)Ljava/lang/String;
       4: astore_1
       5: getstatic     #32                 // Field SETTINGS:Ljava/util/Map;
       8: dup
       9: astore_3
      10: monitorenter
      11: getstatic     #32                 // Field SETTINGS:Ljava/util/Map;
      14: aload_1
      15: invokeinterface #23,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #33                 // class org/h2/fulltext/FullTextSettings
      23: astore_2
      24: aload_2
      25: ifnonnull     47
      28: new           #33                 // class org/h2/fulltext/FullTextSettings
      31: dup
      32: invokespecial #34                 // Method "<init>":()V
      35: astore_2
      36: getstatic     #32                 // Field SETTINGS:Ljava/util/Map;
      39: aload_1
      40: aload_2
      41: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: aload_3
      48: monitorexit
      49: goto          59
      52: astore        4
      54: aload_3
      55: monitorexit
      56: aload         4
      58: athrow
      59: aload_2
      60: areturn
    Exception table:
       from    to  target type
          11    49    52   any
          52    56    52   any

  private static java.lang.String getIndexPath(java.sql.Connection) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod java/sql/Connection.createStatement:()Ljava/sql/Statement;
       6: astore_1
       7: aload_1
       8: ldc           #36                 // String CALL IFNULL(DATABASE_PATH(), \'MEM:\' || DATABASE())
      10: invokeinterface #37,  2           // InterfaceMethod java/sql/Statement.executeQuery:(Ljava/lang/String;)Ljava/sql/ResultSet;
      15: astore_2
      16: aload_2
      17: invokeinterface #38,  1           // InterfaceMethod java/sql/ResultSet.next:()Z
      22: pop
      23: aload_2
      24: iconst_1
      25: invokeinterface #39,  2           // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
      30: astore_3
      31: ldc           #40                 // String MEM:UNNAMED
      33: aload_3
      34: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ifeq          46
      40: ldc           #42                 // String Fulltext search for private (unnamed) in-memory databases is not supported.
      42: invokestatic  #43                 // Method org/h2/fulltext/FullText.throwException:(Ljava/lang/String;)Ljava/sql/SQLException;
      45: athrow
      46: aload_2
      47: invokeinterface #44,  1           // InterfaceMethod java/sql/ResultSet.close:()V
      52: aload_3
      53: areturn

  protected synchronized java.sql.PreparedStatement prepare(java.sql.Connection, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field cache:Lorg/h2/util/SoftHashMap;
       4: aload_1
       5: invokevirtual #45                 // Method org/h2/util/SoftHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #10                 // class org/h2/util/SoftHashMap
      11: astore_3
      12: aload_3
      13: ifnonnull     34
      16: new           #10                 // class org/h2/util/SoftHashMap
      19: dup
      20: invokespecial #11                 // Method org/h2/util/SoftHashMap."<init>":()V
      23: astore_3
      24: aload_0
      25: getfield      #12                 // Field cache:Lorg/h2/util/SoftHashMap;
      28: aload_1
      29: aload_3
      30: invokevirtual #46                 // Method org/h2/util/SoftHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: aload_3
      35: aload_2
      36: invokevirtual #45                 // Method org/h2/util/SoftHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #47                 // class java/sql/PreparedStatement
      42: astore        4
      44: aload         4
      46: ifnull        67
      49: aload         4
      51: invokeinterface #48,  1           // InterfaceMethod java/sql/PreparedStatement.getConnection:()Ljava/sql/Connection;
      56: invokeinterface #49,  1           // InterfaceMethod java/sql/Connection.isClosed:()Z
      61: ifeq          67
      64: aconst_null
      65: astore        4
      67: aload         4
      69: ifnonnull     89
      72: aload_1
      73: aload_2
      74: invokeinterface #50,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      79: astore        4
      81: aload_3
      82: aload_2
      83: aload         4
      85: invokevirtual #46                 // Method org/h2/util/SoftHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      88: pop
      89: aload         4
      91: areturn

  protected void removeAllIndexes();
    Code:
       0: aload_0
       1: getfield      #9                  // Field indexes:Ljava/util/Map;
       4: invokeinterface #22,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  protected void removeIndexInfo(org.h2.fulltext.IndexInfo);
    Code:
       0: aload_0
       1: getfield      #9                  // Field indexes:Ljava/util/Map;
       4: aload_1
       5: getfield      #29                 // Field org/h2/fulltext/IndexInfo.id:I
       8: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: invokeinterface #51,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  protected void setInitialized(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #52                 // Field initialized:Z
       5: return

  protected boolean isInitialized();
    Code:
       0: aload_0
       1: getfield      #52                 // Field initialized:Z
       4: ireturn

  protected static void closeAll();
    Code:
       0: getstatic     #32                 // Field SETTINGS:Ljava/util/Map;
       3: dup
       4: astore_0
       5: monitorenter
       6: getstatic     #32                 // Field SETTINGS:Ljava/util/Map;
       9: invokeinterface #22,  1           // InterfaceMethod java/util/Map.clear:()V
      14: aload_0
      15: monitorexit
      16: goto          24
      19: astore_1
      20: aload_0
      21: monitorexit
      22: aload_1
      23: athrow
      24: return
    Exception table:
       from    to  target type
           6    16    19   any
          19    22    19   any

  protected void setWhitespaceChars(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field whitespaceChars:Ljava/lang/String;
       5: return

  protected java.lang.String getWhitespaceChars();
    Code:
       0: aload_0
       1: getfield      #14                 // Field whitespaceChars:Ljava/lang/String;
       4: areturn

  private static java.lang.String normalizeWord(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: new           #5                  // class java/util/HashMap
       3: dup
       4: invokespecial #6                  // Method java/util/HashMap."<init>":()V
       7: putstatic     #32                 // Field SETTINGS:Ljava/util/Map;
      10: return
}
