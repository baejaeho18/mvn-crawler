Compiled from "CountingReaderInputStream.java"
public class org.h2.store.CountingReaderInputStream extends java.io.InputStream {
  private final java.io.Reader reader;

  private final java.nio.CharBuffer charBuffer;

  private final java.nio.charset.CharsetEncoder encoder;

  private java.nio.ByteBuffer byteBuffer;

  private long length;

  private long remaining;

  org.h2.store.CountingReaderInputStream(java.io.Reader, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: sipush        4096
       8: invokestatic  #2                  // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
      11: putfield      #3                  // Field charBuffer:Ljava/nio/CharBuffer;
      14: aload_0
      15: getstatic     #4                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      18: invokevirtual #5                  // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
      21: getstatic     #6                  // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
      24: invokevirtual #7                  // Method java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
      27: getstatic     #6                  // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
      30: invokevirtual #8                  // Method java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
      33: putfield      #9                  // Field encoder:Ljava/nio/charset/CharsetEncoder;
      36: aload_0
      37: iconst_0
      38: invokestatic  #10                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      41: putfield      #11                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      44: aload_0
      45: aload_1
      46: putfield      #12                 // Field reader:Ljava/io/Reader;
      49: aload_0
      50: lload_2
      51: putfield      #13                 // Field remaining:J
      54: return

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #14                 // Method fetch:()Z
       4: ifne          9
       7: iconst_m1
       8: ireturn
       9: iload_3
      10: aload_0
      11: getfield      #11                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      14: invokevirtual #15                 // Method java/nio/ByteBuffer.remaining:()I
      17: invokestatic  #16                 // Method java/lang/Math.min:(II)I
      20: istore_3
      21: aload_0
      22: getfield      #11                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      25: aload_1
      26: iload_2
      27: iload_3
      28: invokevirtual #17                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      31: pop
      32: iload_3
      33: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #14                 // Method fetch:()Z
       4: ifne          9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #11                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      13: invokevirtual #18                 // Method java/nio/ByteBuffer.get:()B
      16: sipush        255
      19: iand
      20: ireturn

  private boolean fetch() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field byteBuffer:Ljava/nio/ByteBuffer;
       4: ifnull        21
       7: aload_0
       8: getfield      #11                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      11: invokevirtual #15                 // Method java/nio/ByteBuffer.remaining:()I
      14: ifne          21
      17: aload_0
      18: invokespecial #19                 // Method fillBuffer:()V
      21: aload_0
      22: getfield      #11                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      25: ifnull        32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  private void fillBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field charBuffer:Ljava/nio/CharBuffer;
       4: invokevirtual #20                 // Method java/nio/CharBuffer.capacity:()I
       7: aload_0
       8: getfield      #3                  // Field charBuffer:Ljava/nio/CharBuffer;
      11: invokevirtual #21                 // Method java/nio/CharBuffer.position:()I
      14: isub
      15: i2l
      16: aload_0
      17: getfield      #13                 // Field remaining:J
      20: invokestatic  #22                 // Method java/lang/Math.min:(JJ)J
      23: l2i
      24: istore_1
      25: iload_1
      26: ifle          52
      29: aload_0
      30: getfield      #12                 // Field reader:Ljava/io/Reader;
      33: aload_0
      34: getfield      #3                  // Field charBuffer:Ljava/nio/CharBuffer;
      37: invokevirtual #23                 // Method java/nio/CharBuffer.array:()[C
      40: aload_0
      41: getfield      #3                  // Field charBuffer:Ljava/nio/CharBuffer;
      44: invokevirtual #21                 // Method java/nio/CharBuffer.position:()I
      47: iload_1
      48: invokevirtual #24                 // Method java/io/Reader.read:([CII)I
      51: istore_1
      52: iload_1
      53: ifle          70
      56: aload_0
      57: dup
      58: getfield      #13                 // Field remaining:J
      61: iload_1
      62: i2l
      63: lsub
      64: putfield      #13                 // Field remaining:J
      67: goto          77
      70: iconst_0
      71: istore_1
      72: aload_0
      73: lconst_0
      74: putfield      #13                 // Field remaining:J
      77: aload_0
      78: dup
      79: getfield      #25                 // Field length:J
      82: iload_1
      83: i2l
      84: ladd
      85: putfield      #25                 // Field length:J
      88: aload_0
      89: getfield      #3                  // Field charBuffer:Ljava/nio/CharBuffer;
      92: aload_0
      93: getfield      #3                  // Field charBuffer:Ljava/nio/CharBuffer;
      96: invokevirtual #21                 // Method java/nio/CharBuffer.position:()I
      99: iload_1
     100: iadd
     101: invokevirtual #26                 // Method java/nio/CharBuffer.limit:(I)Ljava/nio/Buffer;
     104: pop
     105: aload_0
     106: getfield      #3                  // Field charBuffer:Ljava/nio/CharBuffer;
     109: invokevirtual #27                 // Method java/nio/CharBuffer.rewind:()Ljava/nio/Buffer;
     112: pop
     113: aload_0
     114: sipush        4096
     117: invokestatic  #10                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     120: putfield      #11                 // Field byteBuffer:Ljava/nio/ByteBuffer;
     123: aload_0
     124: getfield      #13                 // Field remaining:J
     127: lconst_0
     128: lcmp
     129: ifne          136
     132: iconst_1
     133: goto          137
     136: iconst_0
     137: istore_2
     138: aload_0
     139: getfield      #9                  // Field encoder:Ljava/nio/charset/CharsetEncoder;
     142: aload_0
     143: getfield      #3                  // Field charBuffer:Ljava/nio/CharBuffer;
     146: aload_0
     147: getfield      #11                 // Field byteBuffer:Ljava/nio/ByteBuffer;
     150: iload_2
     151: invokevirtual #28                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
     154: pop
     155: iload_2
     156: ifeq          175
     159: aload_0
     160: getfield      #11                 // Field byteBuffer:Ljava/nio/ByteBuffer;
     163: invokevirtual #29                 // Method java/nio/ByteBuffer.position:()I
     166: ifne          175
     169: aload_0
     170: aconst_null
     171: putfield      #11                 // Field byteBuffer:Ljava/nio/ByteBuffer;
     174: return
     175: aload_0
     176: getfield      #11                 // Field byteBuffer:Ljava/nio/ByteBuffer;
     179: invokevirtual #30                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     182: pop
     183: aload_0
     184: getfield      #3                  // Field charBuffer:Ljava/nio/CharBuffer;
     187: invokevirtual #31                 // Method java/nio/CharBuffer.compact:()Ljava/nio/CharBuffer;
     190: pop
     191: aload_0
     192: getfield      #3                  // Field charBuffer:Ljava/nio/CharBuffer;
     195: invokevirtual #32                 // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
     198: pop
     199: aload_0
     200: getfield      #3                  // Field charBuffer:Ljava/nio/CharBuffer;
     203: aload_0
     204: getfield      #3                  // Field charBuffer:Ljava/nio/CharBuffer;
     207: invokevirtual #33                 // Method java/nio/CharBuffer.limit:()I
     210: invokevirtual #34                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;
     213: pop
     214: return

  public long getLength();
    Code:
       0: aload_0
       1: getfield      #25                 // Field length:J
       4: lreturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field reader:Ljava/io/Reader;
       4: invokevirtual #35                 // Method java/io/Reader.close:()V
       7: return
}
