Compiled from "PageStoreInDoubtTransaction.java"
public class org.h2.store.PageStoreInDoubtTransaction implements org.h2.store.InDoubtTransaction {
  private final org.h2.store.PageStore store;

  private final int sessionId;

  private final int pos;

  private final java.lang.String transactionName;

  private int state;

  public org.h2.store.PageStoreInDoubtTransaction(org.h2.store.PageStore, int, int, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field store:Lorg/h2/store/PageStore;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field sessionId:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field pos:I
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field transactionName:Ljava/lang/String;
      25: aload_0
      26: iconst_0
      27: putfield      #6                  // Field state:I
      30: return

  public void setState(int);
    Code:
       0: iload_1
       1: lookupswitch  { // 2
                     1: 28
                     2: 47
               default: 66
          }
      28: aload_0
      29: getfield      #2                  // Field store:Lorg/h2/store/PageStore;
      32: aload_0
      33: getfield      #3                  // Field sessionId:I
      36: aload_0
      37: getfield      #4                  // Field pos:I
      40: iconst_1
      41: invokevirtual #7                  // Method org/h2/store/PageStore.setInDoubtTransactionState:(IIZ)V
      44: goto          89
      47: aload_0
      48: getfield      #2                  // Field store:Lorg/h2/store/PageStore;
      51: aload_0
      52: getfield      #3                  // Field sessionId:I
      55: aload_0
      56: getfield      #4                  // Field pos:I
      59: iconst_0
      60: invokevirtual #7                  // Method org/h2/store/PageStore.setInDoubtTransactionState:(IIZ)V
      63: goto          89
      66: new           #8                  // class java/lang/StringBuilder
      69: dup
      70: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #10                 // String state=
      75: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: iload_1
      79: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      82: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokestatic  #14                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      88: pop
      89: aload_0
      90: iload_1
      91: putfield      #6                  // Field state:I
      94: return

  public java.lang.String getState();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: tableswitch   { // 0 to 2
                     0: 32
                     1: 35
                     2: 38
               default: 41
          }
      32: ldc           #15                 // String IN_DOUBT
      34: areturn
      35: ldc           #16                 // String COMMIT
      37: areturn
      38: ldc           #17                 // String ROLLBACK
      40: areturn
      41: new           #8                  // class java/lang/StringBuilder
      44: dup
      45: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #10                 // String state=
      50: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: getfield      #6                  // Field state:I
      57: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      60: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokestatic  #14                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      66: athrow

  public java.lang.String getTransactionName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field transactionName:Ljava/lang/String;
       4: areturn
}
