Compiled from "FilePathEncrypt.java"
public class org.h2.store.fs.FilePathEncrypt extends org.h2.store.fs.FilePathWrapper {
  private static final java.lang.String SCHEME;

  public org.h2.store.fs.FilePathEncrypt();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/store/fs/FilePathWrapper."<init>":()V
       4: return

  public static void register();
    Code:
       0: new           #2                  // class org/h2/store/fs/FilePathEncrypt
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: invokestatic  #4                  // Method org/h2/store/fs/FilePath.register:(Lorg/h2/store/fs/FilePath;)V
      10: return

  public java.nio.channels.FileChannel open(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field name:Ljava/lang/String;
       5: invokespecial #6                  // Method parse:(Ljava/lang/String;)[Ljava/lang/String;
       8: astore_2
       9: aload_2
      10: iconst_1
      11: aaload
      12: aload_1
      13: invokestatic  #7                  // Method org/h2/store/fs/FileUtils.open:(Ljava/lang/String;Ljava/lang/String;)Ljava/nio/channels/FileChannel;
      16: astore_3
      17: aload_2
      18: iconst_0
      19: aaload
      20: getstatic     #8                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      23: invokevirtual #9                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      26: astore        4
      28: new           #10                 // class org/h2/store/fs/FilePathEncrypt$FileEncrypt
      31: dup
      32: aload_0
      33: getfield      #5                  // Field name:Ljava/lang/String;
      36: aload         4
      38: aload_3
      39: invokespecial #11                 // Method org/h2/store/fs/FilePathEncrypt$FileEncrypt."<init>":(Ljava/lang/String;[BLjava/nio/channels/FileChannel;)V
      42: areturn

  public java.lang.String getScheme();
    Code:
       0: ldc           #12                 // String encrypt
       2: areturn

  protected java.lang.String getPrefix();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field name:Ljava/lang/String;
       5: invokespecial #6                  // Method parse:(Ljava/lang/String;)[Ljava/lang/String;
       8: astore_1
       9: new           #13                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      16: aload_0
      17: invokevirtual #15                 // Method getScheme:()Ljava/lang/String;
      20: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #17                 // String :
      25: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: iconst_0
      30: aaload
      31: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #17                 // String :
      36: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: areturn

  public org.h2.store.fs.FilePath unwrap(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method parse:(Ljava/lang/String;)[Ljava/lang/String;
       5: iconst_1
       6: aaload
       7: invokestatic  #19                 // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
      10: areturn

  public long size();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getBase:()Lorg/h2/store/fs/FilePath;
       4: invokevirtual #21                 // Method org/h2/store/fs/FilePath.size:()J
       7: ldc2_w        #22                 // long 4096l
      10: lsub
      11: lstore_1
      12: lconst_0
      13: lload_1
      14: invokestatic  #24                 // Method java/lang/Math.max:(JJ)J
      17: lstore_1
      18: lload_1
      19: ldc2_w        #25                 // long 4095l
      22: land
      23: lconst_0
      24: lcmp
      25: ifeq          34
      28: lload_1
      29: ldc2_w        #22                 // long 4096l
      32: lsub
      33: lstore_1
      34: lload_1
      35: lreturn

  public java.io.OutputStream newOutputStream(boolean) throws java.io.IOException;
    Code:
       0: new           #27                 // class org/h2/store/fs/FileChannelOutputStream
       3: dup
       4: aload_0
       5: ldc           #28                 // String rw
       7: invokevirtual #29                 // Method open:(Ljava/lang/String;)Ljava/nio/channels/FileChannel;
      10: iload_1
      11: invokespecial #30                 // Method org/h2/store/fs/FileChannelOutputStream."<init>":(Ljava/nio/channels/FileChannel;Z)V
      14: areturn

  public java.io.InputStream newInputStream() throws java.io.IOException;
    Code:
       0: new           #31                 // class org/h2/store/fs/FileChannelInputStream
       3: dup
       4: aload_0
       5: ldc           #32                 // String r
       7: invokevirtual #29                 // Method open:(Ljava/lang/String;)Ljava/nio/channels/FileChannel;
      10: iconst_1
      11: invokespecial #33                 // Method org/h2/store/fs/FileChannelInputStream."<init>":(Ljava/nio/channels/FileChannel;Z)V
      14: areturn

  private java.lang.String[] parse(java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #15                 // Method getScheme:()Ljava/lang/String;
       5: invokevirtual #34                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       8: ifne          45
      11: new           #35                 // class java/lang/IllegalArgumentException
      14: dup
      15: new           #13                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      22: aload_1
      23: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #36                 // String  doesn\'t start with
      28: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: invokevirtual #15                 // Method getScheme:()Ljava/lang/String;
      35: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #37                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_1
      46: aload_0
      47: invokevirtual #15                 // Method getScheme:()Ljava/lang/String;
      50: invokevirtual #38                 // Method java/lang/String.length:()I
      53: iconst_1
      54: iadd
      55: invokevirtual #39                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      58: astore_1
      59: aload_1
      60: bipush        58
      62: invokevirtual #40                 // Method java/lang/String.indexOf:(I)I
      65: istore_2
      66: iload_2
      67: ifge          97
      70: new           #35                 // class java/lang/IllegalArgumentException
      73: dup
      74: new           #13                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      81: aload_1
      82: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: ldc           #41                 // String  doesn\'t contain encryption algorithm and password
      87: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokespecial #37                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      96: athrow
      97: aload_1
      98: iconst_0
      99: iload_2
     100: invokevirtual #42                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     103: astore_3
     104: aload_1
     105: iload_2
     106: iconst_1
     107: iadd
     108: invokevirtual #39                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     111: astore_1
     112: iconst_2
     113: anewarray     #43                 // class java/lang/String
     116: dup
     117: iconst_0
     118: aload_3
     119: aastore
     120: dup
     121: iconst_1
     122: aload_1
     123: aastore
     124: areturn

  public static byte[] getPasswordBytes(char[]);
    Code:
       0: aload_0
       1: arraylength
       2: istore_1
       3: iload_1
       4: iconst_2
       5: imul
       6: newarray       byte
       8: astore_2
       9: iconst_0
      10: istore_3
      11: iload_3
      12: iload_1
      13: if_icmpge     48
      16: aload_0
      17: iload_3
      18: caload
      19: istore        4
      21: aload_2
      22: iload_3
      23: iload_3
      24: iadd
      25: iload         4
      27: bipush        8
      29: iushr
      30: i2b
      31: bastore
      32: aload_2
      33: iload_3
      34: iload_3
      35: iadd
      36: iconst_1
      37: iadd
      38: iload         4
      40: i2b
      41: bastore
      42: iinc          3, 1
      45: goto          11
      48: aload_2
      49: areturn
}
