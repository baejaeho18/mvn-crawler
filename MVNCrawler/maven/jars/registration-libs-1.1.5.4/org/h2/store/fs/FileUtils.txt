Compiled from "FileUtils.java"
public class org.h2.store.fs.FileUtils {
  public org.h2.store.fs.FileUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean exists(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       4: invokevirtual #3                  // Method org/h2/store/fs/FilePath.exists:()Z
       7: ireturn

  public static void createDirectory(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       4: invokevirtual #4                  // Method org/h2/store/fs/FilePath.createDirectory:()V
       7: return

  public static boolean createFile(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       4: invokevirtual #5                  // Method org/h2/store/fs/FilePath.createFile:()Z
       7: ireturn

  public static void delete(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       4: invokevirtual #6                  // Method org/h2/store/fs/FilePath.delete:()V
       7: return

  public static java.lang.String toRealPath(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       4: invokevirtual #7                  // Method org/h2/store/fs/FilePath.toRealPath:()Lorg/h2/store/fs/FilePath;
       7: invokevirtual #8                  // Method org/h2/store/fs/FilePath.toString:()Ljava/lang/String;
      10: areturn

  public static java.lang.String getParent(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       4: invokevirtual #9                  // Method org/h2/store/fs/FilePath.getParent:()Lorg/h2/store/fs/FilePath;
       7: astore_1
       8: aload_1
       9: ifnonnull     16
      12: aconst_null
      13: goto          20
      16: aload_1
      17: invokevirtual #8                  // Method org/h2/store/fs/FilePath.toString:()Ljava/lang/String;
      20: areturn

  public static boolean isAbsolute(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       4: invokevirtual #10                 // Method org/h2/store/fs/FilePath.isAbsolute:()Z
       7: ifne          19
      10: aload_0
      11: ldc           #11                 // String /
      13: invokevirtual #12                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public static void move(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       4: aload_1
       5: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       8: iconst_0
       9: invokevirtual #13                 // Method org/h2/store/fs/FilePath.moveTo:(Lorg/h2/store/fs/FilePath;Z)V
      12: return

  public static void moveAtomicReplace(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       4: aload_1
       5: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       8: iconst_1
       9: invokevirtual #13                 // Method org/h2/store/fs/FilePath.moveTo:(Lorg/h2/store/fs/FilePath;Z)V
      12: return

  public static java.lang.String getName(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       4: invokevirtual #14                 // Method org/h2/store/fs/FilePath.getName:()Ljava/lang/String;
       7: areturn

  public static java.util.List<java.lang.String> newDirectoryStream(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       4: invokevirtual #15                 // Method org/h2/store/fs/FilePath.newDirectoryStream:()Ljava/util/List;
       7: astore_1
       8: aload_1
       9: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      14: istore_2
      15: new           #17                 // class java/util/ArrayList
      18: dup
      19: iload_2
      20: invokespecial #18                 // Method java/util/ArrayList."<init>":(I)V
      23: astore_3
      24: aload_1
      25: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      30: astore        4
      32: aload         4
      34: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          69
      42: aload         4
      44: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #22                 // class org/h2/store/fs/FilePath
      52: astore        5
      54: aload_3
      55: aload         5
      57: invokevirtual #8                  // Method org/h2/store/fs/FilePath.toString:()Ljava/lang/String;
      60: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      65: pop
      66: goto          32
      69: aload_3
      70: areturn

  public static long lastModified(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       4: invokevirtual #24                 // Method org/h2/store/fs/FilePath.lastModified:()J
       7: lreturn

  public static long size(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       4: invokevirtual #25                 // Method org/h2/store/fs/FilePath.size:()J
       7: lreturn

  public static boolean isDirectory(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       4: invokevirtual #26                 // Method org/h2/store/fs/FilePath.isDirectory:()Z
       7: ireturn

  public static java.nio.channels.FileChannel open(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       4: aload_1
       5: invokevirtual #27                 // Method org/h2/store/fs/FilePath.open:(Ljava/lang/String;)Ljava/nio/channels/FileChannel;
       8: areturn

  public static java.io.InputStream newInputStream(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       4: invokevirtual #28                 // Method org/h2/store/fs/FilePath.newInputStream:()Ljava/io/InputStream;
       7: areturn

  public static java.io.OutputStream newOutputStream(java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       4: iload_1
       5: invokevirtual #29                 // Method org/h2/store/fs/FilePath.newOutputStream:(Z)Ljava/io/OutputStream;
       8: areturn

  public static boolean canWrite(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       4: invokevirtual #30                 // Method org/h2/store/fs/FilePath.canWrite:()Z
       7: ireturn

  public static boolean setReadOnly(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       4: invokevirtual #31                 // Method org/h2/store/fs/FilePath.setReadOnly:()Z
       7: ireturn

  public static java.lang.String unwrap(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       4: invokevirtual #32                 // Method org/h2/store/fs/FilePath.unwrap:()Lorg/h2/store/fs/FilePath;
       7: invokevirtual #8                  // Method org/h2/store/fs/FilePath.toString:()Ljava/lang/String;
      10: areturn

  public static void deleteRecursive(java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokestatic  #33                 // Method exists:(Ljava/lang/String;)Z
       4: ifeq          67
       7: aload_0
       8: invokestatic  #34                 // Method isDirectory:(Ljava/lang/String;)Z
      11: ifeq          51
      14: aload_0
      15: invokestatic  #35                 // Method newDirectoryStream:(Ljava/lang/String;)Ljava/util/List;
      18: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore_2
      24: aload_2
      25: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          51
      33: aload_2
      34: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #36                 // class java/lang/String
      42: astore_3
      43: aload_3
      44: iload_1
      45: invokestatic  #37                 // Method deleteRecursive:(Ljava/lang/String;Z)V
      48: goto          24
      51: iload_1
      52: ifeq          63
      55: aload_0
      56: invokestatic  #38                 // Method tryDelete:(Ljava/lang/String;)Z
      59: pop
      60: goto          67
      63: aload_0
      64: invokestatic  #39                 // Method delete:(Ljava/lang/String;)V
      67: return

  public static void createDirectories(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        38
       4: aload_0
       5: invokestatic  #33                 // Method exists:(Ljava/lang/String;)Z
       8: ifeq          25
      11: aload_0
      12: invokestatic  #34                 // Method isDirectory:(Ljava/lang/String;)Z
      15: ifne          38
      18: aload_0
      19: invokestatic  #40                 // Method createDirectory:(Ljava/lang/String;)V
      22: goto          38
      25: aload_0
      26: invokestatic  #41                 // Method getParent:(Ljava/lang/String;)Ljava/lang/String;
      29: astore_1
      30: aload_1
      31: invokestatic  #42                 // Method createDirectories:(Ljava/lang/String;)V
      34: aload_0
      35: invokestatic  #40                 // Method createDirectory:(Ljava/lang/String;)V
      38: return

  public static boolean tryDelete(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       4: invokevirtual #6                  // Method org/h2/store/fs/FilePath.delete:()V
       7: iconst_1
       8: ireturn
       9: astore_1
      10: iconst_0
      11: ireturn
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/Exception

  public static java.lang.String createTempFile(java.lang.String, java.lang.String, boolean, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #44                 // Method org/h2/store/fs/FilePath.createTempFile:(Ljava/lang/String;ZZ)Lorg/h2/store/fs/FilePath;
      10: invokevirtual #8                  // Method org/h2/store/fs/FilePath.toString:()Ljava/lang/String;
      13: areturn

  public static void readFully(java.nio.channels.FileChannel, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;)I
       5: istore_2
       6: iload_2
       7: ifge          18
      10: new           #46                 // class java/io/EOFException
      13: dup
      14: invokespecial #47                 // Method java/io/EOFException."<init>":()V
      17: athrow
      18: aload_1
      19: invokevirtual #48                 // Method java/nio/ByteBuffer.remaining:()I
      22: ifgt          0
      25: return

  public static void writeFully(java.nio.channels.FileChannel, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;)I
       5: pop
       6: aload_1
       7: invokevirtual #48                 // Method java/nio/ByteBuffer.remaining:()I
      10: ifgt          0
      13: return
}
