Compiled from "FilePathDisk.java"
class org.h2.store.fs.FileDisk extends org.h2.store.fs.FileBase {
  private final java.io.RandomAccessFile file;

  private final java.lang.String name;

  private final boolean readOnly;

  org.h2.store.fs.FileDisk(java.lang.String, java.lang.String) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/store/fs/FileBase."<init>":()V
       4: aload_0
       5: new           #2                  // class java/io/RandomAccessFile
       8: dup
       9: aload_1
      10: aload_2
      11: invokespecial #3                  // Method java/io/RandomAccessFile."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      14: putfield      #4                  // Field file:Ljava/io/RandomAccessFile;
      17: aload_0
      18: aload_1
      19: putfield      #5                  // Field name:Ljava/lang/String;
      22: aload_0
      23: aload_2
      24: ldc           #6                  // String r
      26: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      29: putfield      #8                  // Field readOnly:Z
      32: return

  public void force(boolean) throws java.io.IOException;
    Code:
       0: getstatic     #9                  // Field org/h2/engine/SysProperties.SYNC_METHOD:Ljava/lang/String;
       3: astore_2
       4: ldc           #10                 // String
       6: aload_2
       7: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ifeq          16
      13: goto          94
      16: ldc           #11                 // String sync
      18: aload_2
      19: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      22: ifeq          38
      25: aload_0
      26: getfield      #4                  // Field file:Ljava/io/RandomAccessFile;
      29: invokevirtual #12                 // Method java/io/RandomAccessFile.getFD:()Ljava/io/FileDescriptor;
      32: invokevirtual #13                 // Method java/io/FileDescriptor.sync:()V
      35: goto          94
      38: ldc           #14                 // String force
      40: aload_2
      41: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      44: ifeq          61
      47: aload_0
      48: getfield      #4                  // Field file:Ljava/io/RandomAccessFile;
      51: invokevirtual #15                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
      54: iconst_1
      55: invokevirtual #16                 // Method java/nio/channels/FileChannel.force:(Z)V
      58: goto          94
      61: ldc           #17                 // String forceFalse
      63: aload_2
      64: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      67: ifeq          84
      70: aload_0
      71: getfield      #4                  // Field file:Ljava/io/RandomAccessFile;
      74: invokevirtual #15                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
      77: iconst_0
      78: invokevirtual #16                 // Method java/nio/channels/FileChannel.force:(Z)V
      81: goto          94
      84: aload_0
      85: getfield      #4                  // Field file:Ljava/io/RandomAccessFile;
      88: invokevirtual #12                 // Method java/io/RandomAccessFile.getFD:()Ljava/io/FileDescriptor;
      91: invokevirtual #13                 // Method java/io/FileDescriptor.sync:()V
      94: return

  public java.nio.channels.FileChannel truncate(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field readOnly:Z
       4: ifeq          15
       7: new           #18                 // class java/nio/channels/NonWritableChannelException
      10: dup
      11: invokespecial #19                 // Method java/nio/channels/NonWritableChannelException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #4                  // Field file:Ljava/io/RandomAccessFile;
      19: invokevirtual #15                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
      22: lload_1
      23: invokevirtual #20                 // Method java/nio/channels/FileChannel.truncate:(J)Ljava/nio/channels/FileChannel;
      26: pop
      27: aload_0
      28: areturn

  public synchronized java.nio.channels.FileLock tryLock(long, long, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/RandomAccessFile;
       4: invokevirtual #15                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
       7: lload_1
       8: lload_3
       9: iload         5
      11: invokevirtual #21                 // Method java/nio/channels/FileChannel.tryLock:(JJZ)Ljava/nio/channels/FileLock;
      14: areturn

  public void implCloseChannel() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/RandomAccessFile;
       4: invokevirtual #22                 // Method java/io/RandomAccessFile.close:()V
       7: return

  public long position() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/RandomAccessFile;
       4: invokevirtual #23                 // Method java/io/RandomAccessFile.getFilePointer:()J
       7: lreturn

  public long size() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/RandomAccessFile;
       4: invokevirtual #24                 // Method java/io/RandomAccessFile.length:()J
       7: lreturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/RandomAccessFile;
       4: aload_1
       5: invokevirtual #25                 // Method java/nio/ByteBuffer.array:()[B
       8: aload_1
       9: invokevirtual #26                 // Method java/nio/ByteBuffer.arrayOffset:()I
      12: aload_1
      13: invokevirtual #27                 // Method java/nio/ByteBuffer.position:()I
      16: iadd
      17: aload_1
      18: invokevirtual #28                 // Method java/nio/ByteBuffer.remaining:()I
      21: invokevirtual #29                 // Method java/io/RandomAccessFile.read:([BII)I
      24: istore_2
      25: iload_2
      26: ifle          40
      29: aload_1
      30: aload_1
      31: invokevirtual #27                 // Method java/nio/ByteBuffer.position:()I
      34: iload_2
      35: iadd
      36: invokevirtual #30                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      39: pop
      40: iload_2
      41: ireturn

  public java.nio.channels.FileChannel position(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/RandomAccessFile;
       4: lload_1
       5: invokevirtual #31                 // Method java/io/RandomAccessFile.seek:(J)V
       8: aload_0
       9: areturn

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #28                 // Method java/nio/ByteBuffer.remaining:()I
       4: istore_2
       5: aload_0
       6: getfield      #4                  // Field file:Ljava/io/RandomAccessFile;
       9: aload_1
      10: invokevirtual #25                 // Method java/nio/ByteBuffer.array:()[B
      13: aload_1
      14: invokevirtual #26                 // Method java/nio/ByteBuffer.arrayOffset:()I
      17: aload_1
      18: invokevirtual #27                 // Method java/nio/ByteBuffer.position:()I
      21: iadd
      22: iload_2
      23: invokevirtual #32                 // Method java/io/RandomAccessFile.write:([BII)V
      26: aload_1
      27: aload_1
      28: invokevirtual #27                 // Method java/nio/ByteBuffer.position:()I
      31: iload_2
      32: iadd
      33: invokevirtual #30                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      36: pop
      37: iload_2
      38: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field name:Ljava/lang/String;
       4: areturn

  public java.nio.channels.SeekableByteChannel truncate(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #33                 // Method truncate:(J)Ljava/nio/channels/FileChannel;
       5: areturn

  public java.nio.channels.SeekableByteChannel position(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #34                 // Method position:(J)Ljava/nio/channels/FileChannel;
       5: areturn
}
