Compiled from "FilePathMem.java"
class org.h2.store.fs.FileMemData {
  private static final int CACHE_SIZE;

  private static final int BLOCK_SIZE_SHIFT;

  private static final int BLOCK_SIZE;

  private static final int BLOCK_SIZE_MASK;

  private static final org.h2.compress.CompressLZF LZF;

  private static final byte[] BUFFER;

  private static final byte[] COMPRESSED_EMPTY_BLOCK;

  private static final org.h2.store.fs.FileMemData$Cache<org.h2.store.fs.FileMemData$CompressItem, org.h2.store.fs.FileMemData$CompressItem> COMPRESS_LATER;

  private java.lang.String name;

  private final int id;

  private final boolean compress;

  private long length;

  private java.util.concurrent.atomic.AtomicReference<byte[]>[] data;

  private long lastModified;

  private boolean isReadOnly;

  private boolean isLockedExclusive;

  private int sharedLockCount;

  org.h2.store.fs.FileMemData(java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: aload_0
      10: aload_1
      11: invokevirtual #3                  // Method java/lang/String.hashCode:()I
      14: putfield      #4                  // Field id:I
      17: aload_0
      18: iload_2
      19: putfield      #5                  // Field compress:Z
      22: aload_0
      23: iconst_0
      24: anewarray     #6                  // class java/util/concurrent/atomic/AtomicReference
      27: putfield      #7                  // Field data:[Ljava/util/concurrent/atomic/AtomicReference;
      30: aload_0
      31: invokestatic  #8                  // Method java/lang/System.currentTimeMillis:()J
      34: putfield      #9                  // Field lastModified:J
      37: return

  byte[] getPage(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field data:[Ljava/util/concurrent/atomic/AtomicReference;
       4: astore_2
       5: iload_1
       6: aload_2
       7: arraylength
       8: if_icmplt     13
      11: aconst_null
      12: areturn
      13: aload_2
      14: iload_1
      15: aaload
      16: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      19: checkcast     #11                 // class "[B"
      22: areturn

  void setPage(int, byte[], byte[], boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field data:[Ljava/util/concurrent/atomic/AtomicReference;
       4: astore        5
       6: iload_1
       7: aload         5
       9: arraylength
      10: if_icmplt     14
      13: return
      14: iload         4
      16: ifeq          30
      19: aload         5
      21: iload_1
      22: aaload
      23: aload_3
      24: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      27: goto          40
      30: aload         5
      32: iload_1
      33: aaload
      34: aload_2
      35: aload_3
      36: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      39: pop
      40: return

  int getId();
    Code:
       0: aload_0
       1: getfield      #4                  // Field id:I
       4: ireturn

  synchronized boolean lockExclusive();
    Code:
       0: aload_0
       1: getfield      #14                 // Field sharedLockCount:I
       4: ifgt          14
       7: aload_0
       8: getfield      #15                 // Field isLockedExclusive:Z
      11: ifeq          16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: iconst_1
      18: putfield      #15                 // Field isLockedExclusive:Z
      21: iconst_1
      22: ireturn

  synchronized boolean lockShared();
    Code:
       0: aload_0
       1: getfield      #15                 // Field isLockedExclusive:Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: dup
      11: getfield      #14                 // Field sharedLockCount:I
      14: iconst_1
      15: iadd
      16: putfield      #14                 // Field sharedLockCount:I
      19: iconst_1
      20: ireturn

  synchronized void unlock();
    Code:
       0: aload_0
       1: getfield      #15                 // Field isLockedExclusive:Z
       4: ifeq          15
       7: aload_0
       8: iconst_0
       9: putfield      #15                 // Field isLockedExclusive:Z
      12: goto          29
      15: aload_0
      16: iconst_0
      17: aload_0
      18: getfield      #14                 // Field sharedLockCount:I
      21: iconst_1
      22: isub
      23: invokestatic  #16                 // Method java/lang/Math.max:(II)I
      26: putfield      #14                 // Field sharedLockCount:I
      29: return

  private void compressLater(int);
    Code:
       0: new           #17                 // class org/h2/store/fs/FileMemData$CompressItem
       3: dup
       4: invokespecial #18                 // Method org/h2/store/fs/FileMemData$CompressItem."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: putfield      #19                 // Field org/h2/store/fs/FileMemData$CompressItem.file:Lorg/h2/store/fs/FileMemData;
      13: aload_2
      14: iload_1
      15: putfield      #20                 // Field org/h2/store/fs/FileMemData$CompressItem.page:I
      18: getstatic     #21                 // Field LZF:Lorg/h2/compress/CompressLZF;
      21: dup
      22: astore_3
      23: monitorenter
      24: getstatic     #22                 // Field COMPRESS_LATER:Lorg/h2/store/fs/FileMemData$Cache;
      27: aload_2
      28: aload_2
      29: invokevirtual #23                 // Method org/h2/store/fs/FileMemData$Cache.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: aload_3
      34: monitorexit
      35: goto          45
      38: astore        4
      40: aload_3
      41: monitorexit
      42: aload         4
      44: athrow
      45: return
    Exception table:
       from    to  target type
          24    35    38   any
          38    42    38   any

  private byte[] expand(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #24                 // Method getPage:(I)[B
       5: astore_2
       6: aload_2
       7: arraylength
       8: sipush        1024
      11: if_icmpne     16
      14: aload_2
      15: areturn
      16: sipush        1024
      19: newarray       byte
      21: astore_3
      22: aload_2
      23: getstatic     #25                 // Field COMPRESSED_EMPTY_BLOCK:[B
      26: if_acmpeq     65
      29: getstatic     #21                 // Field LZF:Lorg/h2/compress/CompressLZF;
      32: dup
      33: astore        4
      35: monitorenter
      36: getstatic     #21                 // Field LZF:Lorg/h2/compress/CompressLZF;
      39: aload_2
      40: iconst_0
      41: aload_2
      42: arraylength
      43: aload_3
      44: iconst_0
      45: sipush        1024
      48: invokevirtual #26                 // Method org/h2/compress/CompressLZF.expand:([BII[BII)V
      51: aload         4
      53: monitorexit
      54: goto          65
      57: astore        5
      59: aload         4
      61: monitorexit
      62: aload         5
      64: athrow
      65: aload_0
      66: iload_1
      67: aload_2
      68: aload_3
      69: iconst_0
      70: invokevirtual #27                 // Method setPage:(I[B[BZ)V
      73: aload_3
      74: areturn
    Exception table:
       from    to  target type
          36    54    57   any
          57    62    57   any

  void compress(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #24                 // Method getPage:(I)[B
       5: astore_2
       6: aload_2
       7: ifnull        18
      10: aload_2
      11: arraylength
      12: sipush        1024
      15: if_icmpeq     19
      18: return
      19: getstatic     #21                 // Field LZF:Lorg/h2/compress/CompressLZF;
      22: dup
      23: astore_3
      24: monitorenter
      25: getstatic     #21                 // Field LZF:Lorg/h2/compress/CompressLZF;
      28: aload_2
      29: sipush        1024
      32: getstatic     #28                 // Field BUFFER:[B
      35: iconst_0
      36: invokevirtual #29                 // Method org/h2/compress/CompressLZF.compress:([BI[BI)I
      39: istore        4
      41: iload         4
      43: sipush        1024
      46: if_icmpgt     68
      49: getstatic     #28                 // Field BUFFER:[B
      52: iload         4
      54: invokestatic  #30                 // Method java/util/Arrays.copyOf:([BI)[B
      57: astore        5
      59: aload_0
      60: iload_1
      61: aload_2
      62: aload         5
      64: iconst_0
      65: invokevirtual #27                 // Method setPage:(I[B[BZ)V
      68: aload_3
      69: monitorexit
      70: goto          80
      73: astore        6
      75: aload_3
      76: monitorexit
      77: aload         6
      79: athrow
      80: return
    Exception table:
       from    to  target type
          25    70    73   any
          73    77    73   any

  void touch(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #31                 // Field isReadOnly:Z
       4: ifne          11
       7: iload_1
       8: ifeq          21
      11: new           #32                 // class java/io/IOException
      14: dup
      15: ldc           #33                 // String Read only
      17: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: invokestatic  #8                  // Method java/lang/System.currentTimeMillis:()J
      25: putfield      #9                  // Field lastModified:J
      28: return

  long length();
    Code:
       0: aload_0
       1: getfield      #35                 // Field length:J
       4: lreturn

  void truncate(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #36                 // Method changeLength:(J)V
       5: lload_1
       6: ldc2_w        #37                 // long 1024l
       9: invokestatic  #39                 // Method org/h2/util/MathUtils.roundUpLong:(JJ)J
      12: lstore_3
      13: lload_3
      14: lload_1
      15: lcmp
      16: ifeq          96
      19: lload_1
      20: bipush        10
      22: lushr
      23: l2i
      24: istore        5
      26: aload_0
      27: iload         5
      29: invokespecial #40                 // Method expand:(I)[B
      32: astore        6
      34: aload         6
      36: aload         6
      38: arraylength
      39: invokestatic  #30                 // Method java/util/Arrays.copyOf:([BI)[B
      42: astore        7
      44: lload_1
      45: ldc2_w        #41                 // long 1023l
      48: land
      49: l2i
      50: istore        8
      52: iload         8
      54: sipush        1024
      57: if_icmpge     72
      60: aload         7
      62: iload         8
      64: iconst_0
      65: bastore
      66: iinc          8, 1
      69: goto          52
      72: aload_0
      73: iload         5
      75: aload         6
      77: aload         7
      79: iconst_1
      80: invokevirtual #27                 // Method setPage:(I[B[BZ)V
      83: aload_0
      84: getfield      #5                  // Field compress:Z
      87: ifeq          96
      90: aload_0
      91: iload         5
      93: invokespecial #43                 // Method compressLater:(I)V
      96: return

  private void changeLength(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #35                 // Field length:J
       5: lload_1
       6: ldc2_w        #37                 // long 1024l
       9: invokestatic  #39                 // Method org/h2/util/MathUtils.roundUpLong:(JJ)J
      12: lstore_1
      13: lload_1
      14: bipush        10
      16: lushr
      17: l2i
      18: istore_3
      19: iload_3
      20: aload_0
      21: getfield      #7                  // Field data:[Ljava/util/concurrent/atomic/AtomicReference;
      24: arraylength
      25: if_icmpeq     81
      28: aload_0
      29: getfield      #7                  // Field data:[Ljava/util/concurrent/atomic/AtomicReference;
      32: iload_3
      33: invokestatic  #44                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      36: checkcast     #45                 // class "[Ljava/util/concurrent/atomic/AtomicReference;"
      39: astore        4
      41: aload_0
      42: getfield      #7                  // Field data:[Ljava/util/concurrent/atomic/AtomicReference;
      45: arraylength
      46: istore        5
      48: iload         5
      50: iload_3
      51: if_icmpge     75
      54: aload         4
      56: iload         5
      58: new           #6                  // class java/util/concurrent/atomic/AtomicReference
      61: dup
      62: getstatic     #25                 // Field COMPRESSED_EMPTY_BLOCK:[B
      65: invokespecial #46                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      68: aastore
      69: iinc          5, 1
      72: goto          48
      75: aload_0
      76: aload         4
      78: putfield      #7                  // Field data:[Ljava/util/concurrent/atomic/AtomicReference;
      81: return

  long readWrite(long, byte[], int, int, boolean);
    Code:
       0: lload_1
       1: iload         5
       3: i2l
       4: ladd
       5: lstore        7
       7: lload         7
       9: aload_0
      10: getfield      #35                 // Field length:J
      13: lcmp
      14: ifle          40
      17: iload         6
      19: ifeq          31
      22: aload_0
      23: lload         7
      25: invokespecial #36                 // Method changeLength:(J)V
      28: goto          40
      31: aload_0
      32: getfield      #35                 // Field length:J
      35: lload_1
      36: lsub
      37: l2i
      38: istore        5
      40: iload         5
      42: ifle          175
      45: iload         5
      47: i2l
      48: ldc2_w        #37                 // long 1024l
      51: lload_1
      52: ldc2_w        #41                 // long 1023l
      55: land
      56: lsub
      57: invokestatic  #47                 // Method java/lang/Math.min:(JJ)J
      60: l2i
      61: istore        9
      63: lload_1
      64: bipush        10
      66: lushr
      67: l2i
      68: istore        10
      70: aload_0
      71: iload         10
      73: invokespecial #40                 // Method expand:(I)[B
      76: astore        11
      78: lload_1
      79: ldc2_w        #41                 // long 1023l
      82: land
      83: l2i
      84: istore        12
      86: iload         6
      88: ifeq          127
      91: aload         11
      93: aload         11
      95: arraylength
      96: invokestatic  #30                 // Method java/util/Arrays.copyOf:([BI)[B
      99: astore        13
     101: aload_3
     102: iload         4
     104: aload         13
     106: iload         12
     108: iload         9
     110: invokestatic  #48                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     113: aload_0
     114: iload         10
     116: aload         11
     118: aload         13
     120: iconst_1
     121: invokevirtual #27                 // Method setPage:(I[B[BZ)V
     124: goto          139
     127: aload         11
     129: iload         12
     131: aload_3
     132: iload         4
     134: iload         9
     136: invokestatic  #48                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     139: aload_0
     140: getfield      #5                  // Field compress:Z
     143: ifeq          152
     146: aload_0
     147: iload         10
     149: invokespecial #43                 // Method compressLater:(I)V
     152: iload         4
     154: iload         9
     156: iadd
     157: istore        4
     159: lload_1
     160: iload         9
     162: i2l
     163: ladd
     164: lstore_1
     165: iload         5
     167: iload         9
     169: isub
     170: istore        5
     172: goto          40
     175: lload_1
     176: lreturn

  void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field name:Ljava/lang/String;
       5: return

  java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  long getLastModified();
    Code:
       0: aload_0
       1: getfield      #9                  // Field lastModified:J
       4: lreturn

  boolean canWrite();
    Code:
       0: aload_0
       1: getfield      #31                 // Field isReadOnly:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  boolean setReadOnly();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #31                 // Field isReadOnly:Z
       5: iconst_1
       6: ireturn

  static {};
    Code:
       0: new           #49                 // class org/h2/compress/CompressLZF
       3: dup
       4: invokespecial #50                 // Method org/h2/compress/CompressLZF."<init>":()V
       7: putstatic     #21                 // Field LZF:Lorg/h2/compress/CompressLZF;
      10: sipush        2048
      13: newarray       byte
      15: putstatic     #28                 // Field BUFFER:[B
      18: new           #51                 // class org/h2/store/fs/FileMemData$Cache
      21: dup
      22: bipush        8
      24: invokespecial #52                 // Method org/h2/store/fs/FileMemData$Cache."<init>":(I)V
      27: putstatic     #22                 // Field COMPRESS_LATER:Lorg/h2/store/fs/FileMemData$Cache;
      30: sipush        1024
      33: newarray       byte
      35: astore_0
      36: getstatic     #21                 // Field LZF:Lorg/h2/compress/CompressLZF;
      39: aload_0
      40: sipush        1024
      43: getstatic     #28                 // Field BUFFER:[B
      46: iconst_0
      47: invokevirtual #29                 // Method org/h2/compress/CompressLZF.compress:([BI[BI)I
      50: istore_1
      51: getstatic     #28                 // Field BUFFER:[B
      54: iload_1
      55: invokestatic  #30                 // Method java/util/Arrays.copyOf:([BI)[B
      58: putstatic     #25                 // Field COMPRESSED_EMPTY_BLOCK:[B
      61: return
}
