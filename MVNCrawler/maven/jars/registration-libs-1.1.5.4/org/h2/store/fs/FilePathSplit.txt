Compiled from "FilePathSplit.java"
public class org.h2.store.fs.FilePathSplit extends org.h2.store.fs.FilePathWrapper {
  private static final java.lang.String PART_SUFFIX;

  public org.h2.store.fs.FilePathSplit();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/store/fs/FilePathWrapper."<init>":()V
       4: return

  protected java.lang.String getPrefix();
    Code:
       0: new           #2                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #4                  // Method getScheme:()Ljava/lang/String;
      11: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #6                  // String :
      16: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: aload_0
      21: getfield      #7                  // Field name:Ljava/lang/String;
      24: invokespecial #8                  // Method parse:(Ljava/lang/String;)[Ljava/lang/String;
      27: iconst_0
      28: aaload
      29: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #6                  // String :
      34: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: areturn

  public org.h2.store.fs.FilePath unwrap(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method parse:(Ljava/lang/String;)[Ljava/lang/String;
       5: iconst_1
       6: aaload
       7: invokestatic  #10                 // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
      10: areturn

  public boolean setReadOnly();
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: aload_0
       5: iload_2
       6: invokevirtual #11                 // Method getBase:(I)Lorg/h2/store/fs/FilePath;
       9: astore_3
      10: aload_3
      11: invokevirtual #12                 // Method org/h2/store/fs/FilePath.exists:()Z
      14: ifeq          28
      17: aload_3
      18: invokevirtual #13                 // Method org/h2/store/fs/FilePath.setReadOnly:()Z
      21: istore_1
      22: iinc          2, 1
      25: goto          4
      28: iload_1
      29: ireturn

  public void delete();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: iload_1
       4: invokevirtual #11                 // Method getBase:(I)Lorg/h2/store/fs/FilePath;
       7: astore_2
       8: aload_2
       9: invokevirtual #12                 // Method org/h2/store/fs/FilePath.exists:()Z
      12: ifeq          25
      15: aload_2
      16: invokevirtual #14                 // Method org/h2/store/fs/FilePath.delete:()V
      19: iinc          1, 1
      22: goto          2
      25: return

  public long lastModified();
    Code:
       0: lconst_0
       1: lstore_1
       2: iconst_0
       3: istore_3
       4: aload_0
       5: iload_3
       6: invokevirtual #11                 // Method getBase:(I)Lorg/h2/store/fs/FilePath;
       9: astore        4
      11: aload         4
      13: invokevirtual #12                 // Method org/h2/store/fs/FilePath.exists:()Z
      16: ifeq          39
      19: aload         4
      21: invokevirtual #15                 // Method org/h2/store/fs/FilePath.lastModified:()J
      24: lstore        5
      26: lload_1
      27: lload         5
      29: invokestatic  #16                 // Method java/lang/Math.max:(JJ)J
      32: lstore_1
      33: iinc          3, 1
      36: goto          4
      39: lload_1
      40: lreturn

  public long size();
    Code:
       0: lconst_0
       1: lstore_1
       2: iconst_0
       3: istore_3
       4: aload_0
       5: iload_3
       6: invokevirtual #11                 // Method getBase:(I)Lorg/h2/store/fs/FilePath;
       9: astore        4
      11: aload         4
      13: invokevirtual #12                 // Method org/h2/store/fs/FilePath.exists:()Z
      16: ifeq          33
      19: lload_1
      20: aload         4
      22: invokevirtual #17                 // Method org/h2/store/fs/FilePath.size:()J
      25: ladd
      26: lstore_1
      27: iinc          3, 1
      30: goto          4
      33: lload_1
      34: lreturn

  public java.util.ArrayList<org.h2.store.fs.FilePath> newDirectoryStream();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getBase:()Lorg/h2/store/fs/FilePath;
       4: invokevirtual #19                 // Method org/h2/store/fs/FilePath.newDirectoryStream:()Ljava/util/List;
       7: astore_1
       8: invokestatic  #20                 // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
      11: astore_2
      12: aload_1
      13: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore_3
      19: aload_3
      20: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          66
      28: aload_3
      29: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #24                 // class org/h2/store/fs/FilePath
      37: astore        4
      39: aload         4
      41: invokevirtual #25                 // Method org/h2/store/fs/FilePath.getName:()Ljava/lang/String;
      44: ldc           #26                 // String .part
      46: invokevirtual #27                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      49: ifne          63
      52: aload_2
      53: aload_0
      54: aload         4
      56: invokevirtual #28                 // Method wrap:(Lorg/h2/store/fs/FilePath;)Lorg/h2/store/fs/FilePathWrapper;
      59: invokevirtual #29                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      62: pop
      63: goto          19
      66: aload_2
      67: areturn

  public java.io.InputStream newInputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getBase:()Lorg/h2/store/fs/FilePath;
       4: invokevirtual #30                 // Method org/h2/store/fs/FilePath.newInputStream:()Ljava/io/InputStream;
       7: astore_1
       8: iconst_1
       9: istore_2
      10: aload_0
      11: iload_2
      12: invokevirtual #11                 // Method getBase:(I)Lorg/h2/store/fs/FilePath;
      15: astore_3
      16: aload_3
      17: invokevirtual #12                 // Method org/h2/store/fs/FilePath.exists:()Z
      20: ifeq          46
      23: aload_3
      24: invokevirtual #30                 // Method org/h2/store/fs/FilePath.newInputStream:()Ljava/io/InputStream;
      27: astore        4
      29: new           #31                 // class java/io/SequenceInputStream
      32: dup
      33: aload_1
      34: aload         4
      36: invokespecial #32                 // Method java/io/SequenceInputStream."<init>":(Ljava/io/InputStream;Ljava/io/InputStream;)V
      39: astore_1
      40: iinc          2, 1
      43: goto          10
      46: aload_1
      47: areturn

  public java.nio.channels.FileChannel open(java.lang.String) throws java.io.IOException;
    Code:
       0: invokestatic  #20                 // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
       3: astore_2
       4: aload_2
       5: aload_0
       6: invokevirtual #18                 // Method getBase:()Lorg/h2/store/fs/FilePath;
       9: aload_1
      10: invokevirtual #33                 // Method org/h2/store/fs/FilePath.open:(Ljava/lang/String;)Ljava/nio/channels/FileChannel;
      13: invokevirtual #29                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      16: pop
      17: iconst_1
      18: istore_3
      19: aload_0
      20: iload_3
      21: invokevirtual #11                 // Method getBase:(I)Lorg/h2/store/fs/FilePath;
      24: astore        4
      26: aload         4
      28: invokevirtual #12                 // Method org/h2/store/fs/FilePath.exists:()Z
      31: ifeq          51
      34: aload_2
      35: aload         4
      37: aload_1
      38: invokevirtual #33                 // Method org/h2/store/fs/FilePath.open:(Ljava/lang/String;)Ljava/nio/channels/FileChannel;
      41: invokevirtual #29                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      44: pop
      45: iinc          3, 1
      48: goto          19
      51: aload_2
      52: iconst_0
      53: anewarray     #34                 // class java/nio/channels/FileChannel
      56: invokevirtual #35                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      59: checkcast     #36                 // class "[Ljava/nio/channels/FileChannel;"
      62: astore_3
      63: aload_3
      64: iconst_0
      65: aaload
      66: invokevirtual #37                 // Method java/nio/channels/FileChannel.size:()J
      69: lstore        4
      71: lload         4
      73: lstore        6
      75: aload_3
      76: arraylength
      77: iconst_1
      78: if_icmpne     102
      81: aload_0
      82: invokespecial #38                 // Method getDefaultMaxLength:()J
      85: lstore        8
      87: lload         4
      89: lload         8
      91: lcmp
      92: ifge          99
      95: lload         8
      97: lstore        4
      99: goto          220
     102: lload         4
     104: lconst_0
     105: lcmp
     106: ifne          120
     109: aload_0
     110: iconst_0
     111: aload_3
     112: aload_3
     113: iconst_0
     114: aaload
     115: lload         4
     117: invokespecial #39                 // Method closeAndThrow:(I[Ljava/nio/channels/FileChannel;Ljava/nio/channels/FileChannel;J)V
     120: iconst_1
     121: istore        8
     123: iload         8
     125: aload_3
     126: arraylength
     127: iconst_1
     128: isub
     129: if_icmpge     177
     132: aload_3
     133: iload         8
     135: aaload
     136: astore        9
     138: aload         9
     140: invokevirtual #37                 // Method java/nio/channels/FileChannel.size:()J
     143: lstore        10
     145: lload         6
     147: lload         10
     149: ladd
     150: lstore        6
     152: lload         10
     154: lload         4
     156: lcmp
     157: ifeq          171
     160: aload_0
     161: iload         8
     163: aload_3
     164: aload         9
     166: lload         4
     168: invokespecial #39                 // Method closeAndThrow:(I[Ljava/nio/channels/FileChannel;Ljava/nio/channels/FileChannel;J)V
     171: iinc          8, 1
     174: goto          123
     177: aload_3
     178: aload_3
     179: arraylength
     180: iconst_1
     181: isub
     182: aaload
     183: astore        8
     185: aload         8
     187: invokevirtual #37                 // Method java/nio/channels/FileChannel.size:()J
     190: lstore        9
     192: lload         6
     194: lload         9
     196: ladd
     197: lstore        6
     199: lload         9
     201: lload         4
     203: lcmp
     204: ifle          220
     207: aload_0
     208: aload_3
     209: arraylength
     210: iconst_1
     211: isub
     212: aload_3
     213: aload         8
     215: lload         4
     217: invokespecial #39                 // Method closeAndThrow:(I[Ljava/nio/channels/FileChannel;Ljava/nio/channels/FileChannel;J)V
     220: new           #40                 // class org/h2/store/fs/FileSplit
     223: dup
     224: aload_0
     225: aload_1
     226: aload_3
     227: lload         6
     229: lload         4
     231: invokespecial #41                 // Method org/h2/store/fs/FileSplit."<init>":(Lorg/h2/store/fs/FilePathSplit;Ljava/lang/String;[Ljava/nio/channels/FileChannel;JJ)V
     234: areturn

  private long getDefaultMaxLength();
    Code:
       0: lconst_1
       1: aload_0
       2: aload_0
       3: getfield      #7                  // Field name:Ljava/lang/String;
       6: invokespecial #8                  // Method parse:(Ljava/lang/String;)[Ljava/lang/String;
       9: iconst_0
      10: aaload
      11: invokestatic  #42                 // Method java/lang/Integer.decode:(Ljava/lang/String;)Ljava/lang/Integer;
      14: invokevirtual #43                 // Method java/lang/Integer.intValue:()I
      17: lshl
      18: lreturn

  private void closeAndThrow(int, java.nio.channels.FileChannel[], java.nio.channels.FileChannel, long) throws java.io.IOException;
    Code:
       0: new           #2                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #44                 // String Expected file length:
       9: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: lload         4
      14: invokevirtual #45                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      17: ldc           #46                 // String  got:
      19: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_3
      23: invokevirtual #37                 // Method java/nio/channels/FileChannel.size:()J
      26: invokevirtual #45                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      29: ldc           #47                 // String  for
      31: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: iload_1
      36: invokespecial #48                 // Method getName:(I)Ljava/lang/String;
      39: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: astore        6
      47: aload_2
      48: astore        7
      50: aload         7
      52: arraylength
      53: istore        8
      55: iconst_0
      56: istore        9
      58: iload         9
      60: iload         8
      62: if_icmpge     83
      65: aload         7
      67: iload         9
      69: aaload
      70: astore        10
      72: aload         10
      74: invokevirtual #49                 // Method java/nio/channels/FileChannel.close:()V
      77: iinc          9, 1
      80: goto          58
      83: new           #50                 // class java/io/IOException
      86: dup
      87: aload         6
      89: invokespecial #51                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      92: athrow

  public java.io.OutputStream newOutputStream(boolean) throws java.io.IOException;
    Code:
       0: new           #52                 // class org/h2/store/fs/FileChannelOutputStream
       3: dup
       4: aload_0
       5: ldc           #53                 // String rw
       7: invokevirtual #54                 // Method open:(Ljava/lang/String;)Ljava/nio/channels/FileChannel;
      10: iload_1
      11: invokespecial #55                 // Method org/h2/store/fs/FileChannelOutputStream."<init>":(Ljava/nio/channels/FileChannel;Z)V
      14: areturn

  public void moveTo(org.h2.store.fs.FilePath, boolean);
    Code:
       0: aload_1
       1: checkcast     #56                 // class org/h2/store/fs/FilePathSplit
       4: astore_3
       5: iconst_0
       6: istore        4
       8: aload_0
       9: iload         4
      11: invokevirtual #11                 // Method getBase:(I)Lorg/h2/store/fs/FilePath;
      14: astore        5
      16: aload         5
      18: invokevirtual #12                 // Method org/h2/store/fs/FilePath.exists:()Z
      21: ifeq          42
      24: aload         5
      26: aload_3
      27: iload         4
      29: invokevirtual #11                 // Method getBase:(I)Lorg/h2/store/fs/FilePath;
      32: iload_2
      33: invokevirtual #57                 // Method org/h2/store/fs/FilePath.moveTo:(Lorg/h2/store/fs/FilePath;Z)V
      36: iinc          4, 1
      39: goto          8
      42: return

  private java.lang.String[] parse(java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #4                  // Method getScheme:()Ljava/lang/String;
       5: invokevirtual #58                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       8: ifne          41
      11: new           #2                  // class java/lang/StringBuilder
      14: dup
      15: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      18: aload_1
      19: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #59                 // String  doesn\'t start with
      24: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #4                  // Method getScheme:()Ljava/lang/String;
      31: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokestatic  #60                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      40: pop
      41: aload_1
      42: aload_0
      43: invokevirtual #4                  // Method getScheme:()Ljava/lang/String;
      46: invokevirtual #61                 // Method java/lang/String.length:()I
      49: iconst_1
      50: iadd
      51: invokevirtual #62                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      54: astore_1
      55: aload_1
      56: invokevirtual #61                 // Method java/lang/String.length:()I
      59: ifle          103
      62: aload_1
      63: iconst_0
      64: invokevirtual #63                 // Method java/lang/String.charAt:(I)C
      67: invokestatic  #64                 // Method java/lang/Character.isDigit:(C)Z
      70: ifeq          103
      73: aload_1
      74: bipush        58
      76: invokevirtual #65                 // Method java/lang/String.indexOf:(I)I
      79: istore_3
      80: aload_1
      81: iconst_0
      82: iload_3
      83: invokevirtual #66                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      86: astore_2
      87: aload_1
      88: iload_3
      89: iconst_1
      90: iadd
      91: invokevirtual #62                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      94: astore_1
      95: goto          100
      98: astore        4
     100: goto          110
     103: getstatic     #68                 // Field org/h2/engine/SysProperties.SPLIT_FILE_SIZE_SHIFT:J
     106: invokestatic  #69                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
     109: astore_2
     110: iconst_2
     111: anewarray     #70                 // class java/lang/String
     114: dup
     115: iconst_0
     116: aload_2
     117: aastore
     118: dup
     119: iconst_1
     120: aload_1
     121: aastore
     122: areturn
    Exception table:
       from    to  target type
          87    95    98   Class java/lang/NumberFormatException

  org.h2.store.fs.FilePath getBase(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #48                 // Method getName:(I)Ljava/lang/String;
       5: invokestatic  #10                 // Method org/h2/store/fs/FilePath.get:(Ljava/lang/String;)Lorg/h2/store/fs/FilePath;
       8: areturn

  private java.lang.String getName(int);
    Code:
       0: iload_1
       1: ifle          41
       4: new           #2                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #18                 // Method getBase:()Lorg/h2/store/fs/FilePath;
      15: getfield      #71                 // Field org/h2/store/fs/FilePath.name:Ljava/lang/String;
      18: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #72                 // String .
      23: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_1
      27: invokevirtual #73                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc           #26                 // String .part
      32: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: goto          48
      41: aload_0
      42: invokevirtual #18                 // Method getBase:()Lorg/h2/store/fs/FilePath;
      45: getfield      #71                 // Field org/h2/store/fs/FilePath.name:Ljava/lang/String;
      48: areturn

  public java.lang.String getScheme();
    Code:
       0: ldc           #74                 // String split
       2: areturn

  public java.util.List newDirectoryStream();
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method newDirectoryStream:()Ljava/util/ArrayList;
       4: areturn
}
