Compiled from "FilePathSplit.java"
class org.h2.store.fs.FileSplit extends org.h2.store.fs.FileBase {
  private final org.h2.store.fs.FilePathSplit file;

  private final java.lang.String mode;

  private final long maxLength;

  private java.nio.channels.FileChannel[] list;

  private long filePointer;

  private long length;

  org.h2.store.fs.FileSplit(org.h2.store.fs.FilePathSplit, java.lang.String, java.nio.channels.FileChannel[], long, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/store/fs/FileBase."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field file:Lorg/h2/store/fs/FilePathSplit;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mode:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field list:[Ljava/nio/channels/FileChannel;
      19: aload_0
      20: lload         4
      22: putfield      #5                  // Field length:J
      25: aload_0
      26: lload         6
      28: putfield      #6                  // Field maxLength:J
      31: return

  public void implCloseChannel() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field list:[Ljava/nio/channels/FileChannel;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     31
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: aload         4
      22: invokevirtual #7                  // Method java/nio/channels/FileChannel.close:()V
      25: iinc          3, 1
      28: goto          10
      31: return

  public long position();
    Code:
       0: aload_0
       1: getfield      #8                  // Field filePointer:J
       4: lreturn

  public long size();
    Code:
       0: aload_0
       1: getfield      #5                  // Field length:J
       4: lreturn

  public synchronized int read(java.nio.ByteBuffer, long) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method java/nio/ByteBuffer.remaining:()I
       4: istore        4
       6: iload         4
       8: ifne          13
      11: iconst_0
      12: ireturn
      13: iload         4
      15: i2l
      16: aload_0
      17: getfield      #5                  // Field length:J
      20: lload_2
      21: lsub
      22: invokestatic  #10                 // Method java/lang/Math.min:(JJ)J
      25: l2i
      26: istore        4
      28: iload         4
      30: ifgt          35
      33: iconst_m1
      34: ireturn
      35: lload_2
      36: aload_0
      37: getfield      #6                  // Field maxLength:J
      40: lrem
      41: lstore        5
      43: iload         4
      45: i2l
      46: aload_0
      47: getfield      #6                  // Field maxLength:J
      50: lload         5
      52: lsub
      53: invokestatic  #10                 // Method java/lang/Math.min:(JJ)J
      56: l2i
      57: istore        4
      59: aload_0
      60: lload_2
      61: invokespecial #11                 // Method getFileChannel:(J)Ljava/nio/channels/FileChannel;
      64: astore        7
      66: aload         7
      68: aload_1
      69: lload         5
      71: invokevirtual #12                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;J)I
      74: ireturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method java/nio/ByteBuffer.remaining:()I
       4: istore_2
       5: iload_2
       6: ifne          11
       9: iconst_0
      10: ireturn
      11: iload_2
      12: i2l
      13: aload_0
      14: getfield      #5                  // Field length:J
      17: aload_0
      18: getfield      #8                  // Field filePointer:J
      21: lsub
      22: invokestatic  #10                 // Method java/lang/Math.min:(JJ)J
      25: l2i
      26: istore_2
      27: iload_2
      28: ifgt          33
      31: iconst_m1
      32: ireturn
      33: aload_0
      34: getfield      #8                  // Field filePointer:J
      37: aload_0
      38: getfield      #6                  // Field maxLength:J
      41: lrem
      42: lstore_3
      43: iload_2
      44: i2l
      45: aload_0
      46: getfield      #6                  // Field maxLength:J
      49: lload_3
      50: lsub
      51: invokestatic  #10                 // Method java/lang/Math.min:(JJ)J
      54: l2i
      55: istore_2
      56: aload_0
      57: aload_0
      58: getfield      #8                  // Field filePointer:J
      61: invokespecial #11                 // Method getFileChannel:(J)Ljava/nio/channels/FileChannel;
      64: astore        5
      66: aload         5
      68: lload_3
      69: invokevirtual #13                 // Method java/nio/channels/FileChannel.position:(J)Ljava/nio/channels/FileChannel;
      72: pop
      73: aload         5
      75: aload_1
      76: invokevirtual #14                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;)I
      79: istore_2
      80: aload_0
      81: dup
      82: getfield      #8                  // Field filePointer:J
      85: iload_2
      86: i2l
      87: ladd
      88: putfield      #8                  // Field filePointer:J
      91: iload_2
      92: ireturn

  public java.nio.channels.FileChannel position(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #8                  // Field filePointer:J
       5: aload_0
       6: areturn

  private java.nio.channels.FileChannel getFileChannel(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #6                  // Field maxLength:J
       5: ldiv
       6: l2i
       7: istore_3
       8: iload_3
       9: aload_0
      10: getfield      #4                  // Field list:[Ljava/nio/channels/FileChannel;
      13: arraylength
      14: if_icmplt     80
      17: aload_0
      18: getfield      #4                  // Field list:[Ljava/nio/channels/FileChannel;
      21: arraylength
      22: istore        4
      24: iload         4
      26: iconst_1
      27: iadd
      28: anewarray     #15                 // class java/nio/channels/FileChannel
      31: astore        5
      33: aload_0
      34: getfield      #4                  // Field list:[Ljava/nio/channels/FileChannel;
      37: iconst_0
      38: aload         5
      40: iconst_0
      41: iload         4
      43: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      46: aload_0
      47: getfield      #2                  // Field file:Lorg/h2/store/fs/FilePathSplit;
      50: iload         4
      52: invokevirtual #17                 // Method org/h2/store/fs/FilePathSplit.getBase:(I)Lorg/h2/store/fs/FilePath;
      55: astore        6
      57: aload         5
      59: iload         4
      61: aload         6
      63: aload_0
      64: getfield      #3                  // Field mode:Ljava/lang/String;
      67: invokevirtual #18                 // Method org/h2/store/fs/FilePath.open:(Ljava/lang/String;)Ljava/nio/channels/FileChannel;
      70: aastore
      71: aload_0
      72: aload         5
      74: putfield      #4                  // Field list:[Ljava/nio/channels/FileChannel;
      77: goto          8
      80: aload_0
      81: getfield      #4                  // Field list:[Ljava/nio/channels/FileChannel;
      84: iload_3
      85: aaload
      86: areturn

  public java.nio.channels.FileChannel truncate(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #5                  // Field length:J
       5: lcmp
       6: iflt          11
       9: aload_0
      10: areturn
      11: aload_0
      12: aload_0
      13: getfield      #8                  // Field filePointer:J
      16: lload_1
      17: invokestatic  #10                 // Method java/lang/Math.min:(JJ)J
      20: putfield      #8                  // Field filePointer:J
      23: iconst_1
      24: lload_1
      25: aload_0
      26: getfield      #6                  // Field maxLength:J
      29: ldiv
      30: l2i
      31: iadd
      32: istore_3
      33: iload_3
      34: aload_0
      35: getfield      #4                  // Field list:[Ljava/nio/channels/FileChannel;
      38: arraylength
      39: if_icmpge     134
      42: iload_3
      43: anewarray     #15                 // class java/nio/channels/FileChannel
      46: astore        4
      48: aload_0
      49: getfield      #4                  // Field list:[Ljava/nio/channels/FileChannel;
      52: arraylength
      53: iconst_1
      54: isub
      55: istore        5
      57: iload         5
      59: iload_3
      60: if_icmplt     114
      63: aload_0
      64: getfield      #4                  // Field list:[Ljava/nio/channels/FileChannel;
      67: iload         5
      69: aaload
      70: lconst_0
      71: invokevirtual #19                 // Method java/nio/channels/FileChannel.truncate:(J)Ljava/nio/channels/FileChannel;
      74: pop
      75: aload_0
      76: getfield      #4                  // Field list:[Ljava/nio/channels/FileChannel;
      79: iload         5
      81: aaload
      82: invokevirtual #7                  // Method java/nio/channels/FileChannel.close:()V
      85: aload_0
      86: getfield      #2                  // Field file:Lorg/h2/store/fs/FilePathSplit;
      89: iload         5
      91: invokevirtual #17                 // Method org/h2/store/fs/FilePathSplit.getBase:(I)Lorg/h2/store/fs/FilePath;
      94: invokevirtual #20                 // Method org/h2/store/fs/FilePath.delete:()V
      97: goto          108
     100: astore        6
     102: aload         6
     104: invokestatic  #22                 // Method org/h2/message/DbException.convertToIOException:(Ljava/lang/Throwable;)Ljava/io/IOException;
     107: athrow
     108: iinc          5, -1
     111: goto          57
     114: aload_0
     115: getfield      #4                  // Field list:[Ljava/nio/channels/FileChannel;
     118: iconst_0
     119: aload         4
     121: iconst_0
     122: aload         4
     124: arraylength
     125: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     128: aload_0
     129: aload         4
     131: putfield      #4                  // Field list:[Ljava/nio/channels/FileChannel;
     134: lload_1
     135: aload_0
     136: getfield      #6                  // Field maxLength:J
     139: iload_3
     140: iconst_1
     141: isub
     142: i2l
     143: lmul
     144: lsub
     145: lstore        4
     147: aload_0
     148: getfield      #4                  // Field list:[Ljava/nio/channels/FileChannel;
     151: aload_0
     152: getfield      #4                  // Field list:[Ljava/nio/channels/FileChannel;
     155: arraylength
     156: iconst_1
     157: isub
     158: aaload
     159: lload         4
     161: invokevirtual #19                 // Method java/nio/channels/FileChannel.truncate:(J)Ljava/nio/channels/FileChannel;
     164: pop
     165: aload_0
     166: lload_1
     167: putfield      #5                  // Field length:J
     170: aload_0
     171: areturn
    Exception table:
       from    to  target type
          85    97   100   Class org/h2/message/DbException

  public void force(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field list:[Ljava/nio/channels/FileChannel;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     35
      17: aload_2
      18: iload         4
      20: aaload
      21: astore        5
      23: aload         5
      25: iload_1
      26: invokevirtual #23                 // Method java/nio/channels/FileChannel.force:(Z)V
      29: iinc          4, 1
      32: goto          11
      35: return

  public int write(java.nio.ByteBuffer, long) throws java.io.IOException;
    Code:
       0: lload_2
       1: aload_0
       2: getfield      #5                  // Field length:J
       5: lcmp
       6: iflt          94
       9: lload_2
      10: aload_0
      11: getfield      #6                  // Field maxLength:J
      14: lcmp
      15: ifle          94
      18: lload_2
      19: lstore        4
      21: aload_0
      22: getfield      #5                  // Field length:J
      25: aload_0
      26: getfield      #5                  // Field length:J
      29: aload_0
      30: getfield      #6                  // Field maxLength:J
      33: lrem
      34: lsub
      35: aload_0
      36: getfield      #6                  // Field maxLength:J
      39: ladd
      40: lstore        6
      42: lload         6
      44: lload_2
      45: lcmp
      46: ifge          94
      49: lload         6
      51: aload_0
      52: getfield      #5                  // Field length:J
      55: lcmp
      56: ifle          79
      59: aload_0
      60: lload         6
      62: lconst_1
      63: lsub
      64: invokevirtual #24                 // Method position:(J)Ljava/nio/channels/FileChannel;
      67: pop
      68: aload_0
      69: iconst_1
      70: newarray       byte
      72: invokestatic  #25                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      75: invokevirtual #26                 // Method write:(Ljava/nio/ByteBuffer;)I
      78: pop
      79: lload         4
      81: lstore_2
      82: lload         6
      84: aload_0
      85: getfield      #6                  // Field maxLength:J
      88: ladd
      89: lstore        6
      91: goto          42
      94: lload_2
      95: aload_0
      96: getfield      #6                  // Field maxLength:J
      99: lrem
     100: lstore        4
     102: aload_1
     103: invokevirtual #9                  // Method java/nio/ByteBuffer.remaining:()I
     106: istore        6
     108: aload_0
     109: lload_2
     110: invokespecial #11                 // Method getFileChannel:(J)Ljava/nio/channels/FileChannel;
     113: astore        7
     115: iload         6
     117: i2l
     118: aload_0
     119: getfield      #6                  // Field maxLength:J
     122: lload         4
     124: lsub
     125: invokestatic  #10                 // Method java/lang/Math.min:(JJ)J
     128: l2i
     129: istore        8
     131: iload         8
     133: iload         6
     135: if_icmpne     151
     138: aload         7
     140: aload_1
     141: lload         4
     143: invokevirtual #27                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;J)I
     146: istore        8
     148: goto          186
     151: aload_1
     152: invokevirtual #28                 // Method java/nio/ByteBuffer.limit:()I
     155: istore        9
     157: aload_1
     158: aload_1
     159: invokevirtual #29                 // Method java/nio/ByteBuffer.position:()I
     162: iload         8
     164: iadd
     165: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     168: pop
     169: aload         7
     171: aload_1
     172: lload         4
     174: invokevirtual #27                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;J)I
     177: istore        8
     179: aload_1
     180: iload         9
     182: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     185: pop
     186: aload_0
     187: aload_0
     188: getfield      #5                  // Field length:J
     191: lload_2
     192: iload         8
     194: i2l
     195: ladd
     196: invokestatic  #31                 // Method java/lang/Math.max:(JJ)J
     199: putfield      #5                  // Field length:J
     202: iload         8
     204: ireturn

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field filePointer:J
       4: aload_0
       5: getfield      #5                  // Field length:J
       8: lcmp
       9: iflt          107
      12: aload_0
      13: getfield      #8                  // Field filePointer:J
      16: aload_0
      17: getfield      #6                  // Field maxLength:J
      20: lcmp
      21: ifle          107
      24: aload_0
      25: getfield      #8                  // Field filePointer:J
      28: lstore_2
      29: aload_0
      30: getfield      #5                  // Field length:J
      33: aload_0
      34: getfield      #5                  // Field length:J
      37: aload_0
      38: getfield      #6                  // Field maxLength:J
      41: lrem
      42: lsub
      43: aload_0
      44: getfield      #6                  // Field maxLength:J
      47: ladd
      48: lstore        4
      50: lload         4
      52: aload_0
      53: getfield      #8                  // Field filePointer:J
      56: lcmp
      57: ifge          107
      60: lload         4
      62: aload_0
      63: getfield      #5                  // Field length:J
      66: lcmp
      67: ifle          90
      70: aload_0
      71: lload         4
      73: lconst_1
      74: lsub
      75: invokevirtual #24                 // Method position:(J)Ljava/nio/channels/FileChannel;
      78: pop
      79: aload_0
      80: iconst_1
      81: newarray       byte
      83: invokestatic  #25                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      86: invokevirtual #26                 // Method write:(Ljava/nio/ByteBuffer;)I
      89: pop
      90: aload_0
      91: lload_2
      92: putfield      #8                  // Field filePointer:J
      95: lload         4
      97: aload_0
      98: getfield      #6                  // Field maxLength:J
     101: ladd
     102: lstore        4
     104: goto          50
     107: aload_0
     108: getfield      #8                  // Field filePointer:J
     111: aload_0
     112: getfield      #6                  // Field maxLength:J
     115: lrem
     116: lstore_2
     117: aload_1
     118: invokevirtual #9                  // Method java/nio/ByteBuffer.remaining:()I
     121: istore        4
     123: aload_0
     124: aload_0
     125: getfield      #8                  // Field filePointer:J
     128: invokespecial #11                 // Method getFileChannel:(J)Ljava/nio/channels/FileChannel;
     131: astore        5
     133: aload         5
     135: lload_2
     136: invokevirtual #13                 // Method java/nio/channels/FileChannel.position:(J)Ljava/nio/channels/FileChannel;
     139: pop
     140: iload         4
     142: i2l
     143: aload_0
     144: getfield      #6                  // Field maxLength:J
     147: lload_2
     148: lsub
     149: invokestatic  #10                 // Method java/lang/Math.min:(JJ)J
     152: l2i
     153: istore        6
     155: iload         6
     157: iload         4
     159: if_icmpne     173
     162: aload         5
     164: aload_1
     165: invokevirtual #32                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;)I
     168: istore        6
     170: goto          206
     173: aload_1
     174: invokevirtual #28                 // Method java/nio/ByteBuffer.limit:()I
     177: istore        7
     179: aload_1
     180: aload_1
     181: invokevirtual #29                 // Method java/nio/ByteBuffer.position:()I
     184: iload         6
     186: iadd
     187: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     190: pop
     191: aload         5
     193: aload_1
     194: invokevirtual #32                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;)I
     197: istore        6
     199: aload_1
     200: iload         7
     202: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     205: pop
     206: aload_0
     207: dup
     208: getfield      #8                  // Field filePointer:J
     211: iload         6
     213: i2l
     214: ladd
     215: putfield      #8                  // Field filePointer:J
     218: aload_0
     219: aload_0
     220: getfield      #5                  // Field length:J
     223: aload_0
     224: getfield      #8                  // Field filePointer:J
     227: invokestatic  #31                 // Method java/lang/Math.max:(JJ)J
     230: putfield      #5                  // Field length:J
     233: iload         6
     235: ireturn

  public synchronized java.nio.channels.FileLock tryLock(long, long, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field list:[Ljava/nio/channels/FileChannel;
       4: iconst_0
       5: aaload
       6: lload_1
       7: lload_3
       8: iload         5
      10: invokevirtual #33                 // Method java/nio/channels/FileChannel.tryLock:(JJZ)Ljava/nio/channels/FileLock;
      13: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field file:Lorg/h2/store/fs/FilePathSplit;
       4: invokevirtual #34                 // Method org/h2/store/fs/FilePathSplit.toString:()Ljava/lang/String;
       7: areturn

  public java.nio.channels.SeekableByteChannel truncate(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #35                 // Method truncate:(J)Ljava/nio/channels/FileChannel;
       5: areturn

  public java.nio.channels.SeekableByteChannel position(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #24                 // Method position:(J)Ljava/nio/channels/FileChannel;
       5: areturn
}
