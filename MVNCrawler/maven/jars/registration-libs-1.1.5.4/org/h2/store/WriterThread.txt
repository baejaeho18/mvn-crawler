Compiled from "WriterThread.java"
public class org.h2.store.WriterThread implements java.lang.Runnable {
  private volatile java.lang.ref.WeakReference<org.h2.engine.Database> databaseRef;

  private int writeDelay;

  private java.lang.Thread thread;

  private volatile boolean stop;

  private org.h2.store.WriterThread(org.h2.engine.Database, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/ref/WeakReference
       8: dup
       9: aload_1
      10: invokespecial #3                  // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      13: putfield      #4                  // Field databaseRef:Ljava/lang/ref/WeakReference;
      16: aload_0
      17: iload_2
      18: putfield      #5                  // Field writeDelay:I
      21: return

  public void setWriteDelay(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field writeDelay:I
       5: return

  public static org.h2.store.WriterThread create(org.h2.engine.Database, int);
    Code:
       0: new           #6                  // class org/h2/store/WriterThread
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #7                  // Method "<init>":(Lorg/h2/engine/Database;I)V
       9: astore_2
      10: aload_2
      11: new           #8                  // class java/lang/Thread
      14: dup
      15: aload_2
      16: new           #9                  // class java/lang/StringBuilder
      19: dup
      20: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #11                 // String H2 Log Writer
      25: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: invokevirtual #13                 // Method org/h2/engine/Database.getShortName:()Ljava/lang/String;
      32: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #15                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
      41: putfield      #16                 // Field thread:Ljava/lang/Thread;
      44: aload_2
      45: getfield      #16                 // Field thread:Ljava/lang/Thread;
      48: invokestatic  #17                 // Method org/h2/Driver.setThreadContextClassLoader:(Ljava/lang/Thread;)V
      51: aload_2
      52: getfield      #16                 // Field thread:Ljava/lang/Thread;
      55: iconst_1
      56: invokevirtual #18                 // Method java/lang/Thread.setDaemon:(Z)V
      59: aload_2
      60: areturn
      61: astore_2
      62: aconst_null
      63: areturn
    Exception table:
       from    to  target type
           0    60    61   Class java/security/AccessControlException

  public void run();
    Code:
       0: aload_0
       1: getfield      #20                 // Field stop:Z
       4: ifne          141
       7: aload_0
       8: getfield      #4                  // Field databaseRef:Ljava/lang/ref/WeakReference;
      11: invokevirtual #21                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      14: checkcast     #22                 // class org/h2/engine/Database
      17: astore_1
      18: aload_1
      19: ifnonnull     25
      22: goto          141
      25: aload_0
      26: getfield      #5                  // Field writeDelay:I
      29: istore_2
      30: aload_1
      31: invokevirtual #23                 // Method org/h2/engine/Database.isFileLockSerialized:()Z
      34: ifeq          46
      37: iconst_5
      38: istore_2
      39: aload_1
      40: invokevirtual #24                 // Method org/h2/engine/Database.checkpointIfRequired:()V
      43: goto          50
      46: aload_1
      47: invokevirtual #25                 // Method org/h2/engine/Database.flush:()V
      50: goto          77
      53: astore_3
      54: aload_1
      55: invokevirtual #27                 // Method org/h2/engine/Database.getTraceSystem:()Lorg/h2/message/TraceSystem;
      58: astore        4
      60: aload         4
      62: ifnull        77
      65: aload         4
      67: iconst_2
      68: invokevirtual #28                 // Method org/h2/message/TraceSystem.getTrace:(I)Lorg/h2/message/Trace;
      71: aload_3
      72: ldc           #29                 // String flush
      74: invokevirtual #30                 // Method org/h2/message/Trace.error:(Ljava/lang/Throwable;Ljava/lang/String;)V
      77: iload_2
      78: iconst_5
      79: invokestatic  #31                 // Method java/lang/Math.max:(II)I
      82: istore_2
      83: aload_0
      84: dup
      85: astore_3
      86: monitorenter
      87: aload_0
      88: getfield      #20                 // Field stop:Z
      91: ifne          126
      94: iload_2
      95: ifle          126
      98: iload_2
      99: bipush        100
     101: invokestatic  #32                 // Method java/lang/Math.min:(II)I
     104: istore        4
     106: aload_0
     107: iload         4
     109: i2l
     110: invokevirtual #33                 // Method java/lang/Object.wait:(J)V
     113: goto          118
     116: astore        5
     118: iload_2
     119: iload         4
     121: isub
     122: istore_2
     123: goto          87
     126: aload_3
     127: monitorexit
     128: goto          138
     131: astore        6
     133: aload_3
     134: monitorexit
     135: aload         6
     137: athrow
     138: goto          0
     141: aload_0
     142: aconst_null
     143: putfield      #4                  // Field databaseRef:Ljava/lang/ref/WeakReference;
     146: return
    Exception table:
       from    to  target type
          30    50    53   Class java/lang/Exception
         106   113   116   Class java/lang/InterruptedException
          87   128   131   any
         131   135   131   any

  public void stopThread();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #20                 // Field stop:Z
       5: aload_0
       6: dup
       7: astore_1
       8: monitorenter
       9: aload_0
      10: invokevirtual #35                 // Method java/lang/Object.notify:()V
      13: aload_1
      14: monitorexit
      15: goto          23
      18: astore_2
      19: aload_1
      20: monitorexit
      21: aload_2
      22: athrow
      23: return
    Exception table:
       from    to  target type
           9    15    18   any
          18    21    18   any

  public void startThread();
    Code:
       0: aload_0
       1: getfield      #16                 // Field thread:Ljava/lang/Thread;
       4: invokevirtual #36                 // Method java/lang/Thread.start:()V
       7: aload_0
       8: aconst_null
       9: putfield      #16                 // Field thread:Ljava/lang/Thread;
      12: return
}
