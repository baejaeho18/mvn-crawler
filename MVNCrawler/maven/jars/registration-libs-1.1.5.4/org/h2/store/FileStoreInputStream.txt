Compiled from "FileStoreInputStream.java"
public class org.h2.store.FileStoreInputStream extends java.io.InputStream {
  private org.h2.store.FileStore store;

  private final org.h2.store.Data page;

  private int remainingInBuffer;

  private final org.h2.tools.CompressTool compress;

  private boolean endOfFile;

  private final boolean alwaysClose;

  public org.h2.store.FileStoreInputStream(org.h2.store.FileStore, org.h2.store.DataHandler, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field store:Lorg/h2/store/FileStore;
       9: aload_0
      10: iload         4
      12: putfield      #3                  // Field alwaysClose:Z
      15: iload_3
      16: ifeq          29
      19: aload_0
      20: invokestatic  #4                  // Method org/h2/tools/CompressTool.getInstance:()Lorg/h2/tools/CompressTool;
      23: putfield      #5                  // Field compress:Lorg/h2/tools/CompressTool;
      26: goto          34
      29: aload_0
      30: aconst_null
      31: putfield      #5                  // Field compress:Lorg/h2/tools/CompressTool;
      34: aload_0
      35: aload_2
      36: bipush        16
      38: invokestatic  #6                  // Method org/h2/store/Data.create:(Lorg/h2/store/DataHandler;I)Lorg/h2/store/Data;
      41: putfield      #7                  // Field page:Lorg/h2/store/Data;
      44: aload_1
      45: invokevirtual #8                  // Method org/h2/store/FileStore.length:()J
      48: ldc2_w        #9                  // long 48l
      51: lcmp
      52: ifgt          62
      55: aload_0
      56: invokevirtual #11                 // Method close:()V
      59: goto          66
      62: aload_0
      63: invokespecial #12                 // Method fillBuffer:()V
      66: goto          81
      69: astore        5
      71: aload         5
      73: aload_1
      74: getfield      #14                 // Field org/h2/store/FileStore.name:Ljava/lang/String;
      77: invokestatic  #15                 // Method org/h2/message/DbException.convertIOException:(Ljava/io/IOException;Ljava/lang/String;)Lorg/h2/message/DbException;
      80: athrow
      81: return
    Exception table:
       from    to  target type
          44    66    69   Class java/io/IOException

  public int available();
    Code:
       0: aload_0
       1: getfield      #16                 // Field remainingInBuffer:I
       4: ifgt          11
       7: iconst_0
       8: goto          15
      11: aload_0
      12: getfield      #16                 // Field remainingInBuffer:I
      15: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #17                 // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: iconst_0
       7: istore        4
       9: iload_3
      10: ifle          50
      13: aload_0
      14: aload_1
      15: iload_2
      16: iload_3
      17: invokespecial #18                 // Method readBlock:([BII)I
      20: istore        5
      22: iload         5
      24: ifge          30
      27: goto          50
      30: iload         4
      32: iload         5
      34: iadd
      35: istore        4
      37: iload_2
      38: iload         5
      40: iadd
      41: istore_2
      42: iload_3
      43: iload         5
      45: isub
      46: istore_3
      47: goto          9
      50: iload         4
      52: ifne          59
      55: iconst_m1
      56: goto          61
      59: iload         4
      61: ireturn

  private int readBlock(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #12                 // Method fillBuffer:()V
       4: aload_0
       5: getfield      #19                 // Field endOfFile:Z
       8: ifeq          13
      11: iconst_m1
      12: ireturn
      13: aload_0
      14: getfield      #16                 // Field remainingInBuffer:I
      17: iload_3
      18: invokestatic  #20                 // Method java/lang/Math.min:(II)I
      21: istore        4
      23: aload_0
      24: getfield      #7                  // Field page:Lorg/h2/store/Data;
      27: aload_1
      28: iload_2
      29: iload         4
      31: invokevirtual #21                 // Method org/h2/store/Data.read:([BII)V
      34: aload_0
      35: dup
      36: getfield      #16                 // Field remainingInBuffer:I
      39: iload         4
      41: isub
      42: putfield      #16                 // Field remainingInBuffer:I
      45: iload         4
      47: ireturn

  private void fillBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field remainingInBuffer:I
       4: ifgt          14
       7: aload_0
       8: getfield      #19                 // Field endOfFile:Z
      11: ifeq          15
      14: return
      15: aload_0
      16: getfield      #7                  // Field page:Lorg/h2/store/Data;
      19: invokevirtual #22                 // Method org/h2/store/Data.reset:()V
      22: aload_0
      23: getfield      #2                  // Field store:Lorg/h2/store/FileStore;
      26: invokevirtual #23                 // Method org/h2/store/FileStore.openFile:()V
      29: aload_0
      30: getfield      #2                  // Field store:Lorg/h2/store/FileStore;
      33: invokevirtual #8                  // Method org/h2/store/FileStore.length:()J
      36: aload_0
      37: getfield      #2                  // Field store:Lorg/h2/store/FileStore;
      40: invokevirtual #24                 // Method org/h2/store/FileStore.getFilePointer:()J
      43: lcmp
      44: ifne          52
      47: aload_0
      48: invokevirtual #11                 // Method close:()V
      51: return
      52: aload_0
      53: getfield      #2                  // Field store:Lorg/h2/store/FileStore;
      56: aload_0
      57: getfield      #7                  // Field page:Lorg/h2/store/Data;
      60: invokevirtual #25                 // Method org/h2/store/Data.getBytes:()[B
      63: iconst_0
      64: bipush        16
      66: invokevirtual #26                 // Method org/h2/store/FileStore.readFully:([BII)V
      69: aload_0
      70: getfield      #7                  // Field page:Lorg/h2/store/Data;
      73: invokevirtual #22                 // Method org/h2/store/Data.reset:()V
      76: aload_0
      77: aload_0
      78: getfield      #7                  // Field page:Lorg/h2/store/Data;
      81: invokevirtual #27                 // Method org/h2/store/Data.readInt:()I
      84: putfield      #16                 // Field remainingInBuffer:I
      87: aload_0
      88: getfield      #16                 // Field remainingInBuffer:I
      91: ifge          99
      94: aload_0
      95: invokevirtual #11                 // Method close:()V
      98: return
      99: aload_0
     100: getfield      #7                  // Field page:Lorg/h2/store/Data;
     103: aload_0
     104: getfield      #16                 // Field remainingInBuffer:I
     107: invokevirtual #28                 // Method org/h2/store/Data.checkCapacity:(I)V
     110: aload_0
     111: getfield      #5                  // Field compress:Lorg/h2/tools/CompressTool;
     114: ifnull        133
     117: aload_0
     118: getfield      #7                  // Field page:Lorg/h2/store/Data;
     121: iconst_4
     122: invokevirtual #28                 // Method org/h2/store/Data.checkCapacity:(I)V
     125: aload_0
     126: getfield      #7                  // Field page:Lorg/h2/store/Data;
     129: invokevirtual #27                 // Method org/h2/store/Data.readInt:()I
     132: pop
     133: aload_0
     134: getfield      #7                  // Field page:Lorg/h2/store/Data;
     137: aload_0
     138: getfield      #7                  // Field page:Lorg/h2/store/Data;
     141: invokevirtual #29                 // Method org/h2/store/Data.length:()I
     144: aload_0
     145: getfield      #16                 // Field remainingInBuffer:I
     148: iadd
     149: invokevirtual #30                 // Method org/h2/store/Data.setPos:(I)V
     152: aload_0
     153: getfield      #7                  // Field page:Lorg/h2/store/Data;
     156: invokevirtual #31                 // Method org/h2/store/Data.fillAligned:()V
     159: aload_0
     160: getfield      #7                  // Field page:Lorg/h2/store/Data;
     163: invokevirtual #29                 // Method org/h2/store/Data.length:()I
     166: bipush        16
     168: isub
     169: istore_1
     170: aload_0
     171: getfield      #7                  // Field page:Lorg/h2/store/Data;
     174: invokevirtual #22                 // Method org/h2/store/Data.reset:()V
     177: aload_0
     178: getfield      #7                  // Field page:Lorg/h2/store/Data;
     181: invokevirtual #27                 // Method org/h2/store/Data.readInt:()I
     184: pop
     185: aload_0
     186: getfield      #2                  // Field store:Lorg/h2/store/FileStore;
     189: aload_0
     190: getfield      #7                  // Field page:Lorg/h2/store/Data;
     193: invokevirtual #25                 // Method org/h2/store/Data.getBytes:()[B
     196: bipush        16
     198: iload_1
     199: invokevirtual #26                 // Method org/h2/store/FileStore.readFully:([BII)V
     202: aload_0
     203: getfield      #7                  // Field page:Lorg/h2/store/Data;
     206: invokevirtual #22                 // Method org/h2/store/Data.reset:()V
     209: aload_0
     210: getfield      #7                  // Field page:Lorg/h2/store/Data;
     213: invokevirtual #27                 // Method org/h2/store/Data.readInt:()I
     216: pop
     217: aload_0
     218: getfield      #5                  // Field compress:Lorg/h2/tools/CompressTool;
     221: ifnull        285
     224: aload_0
     225: getfield      #7                  // Field page:Lorg/h2/store/Data;
     228: invokevirtual #27                 // Method org/h2/store/Data.readInt:()I
     231: istore_2
     232: aload_0
     233: getfield      #16                 // Field remainingInBuffer:I
     236: invokestatic  #32                 // Method org/h2/util/Utils.newBytes:(I)[B
     239: astore_3
     240: aload_0
     241: getfield      #7                  // Field page:Lorg/h2/store/Data;
     244: aload_3
     245: iconst_0
     246: aload_0
     247: getfield      #16                 // Field remainingInBuffer:I
     250: invokevirtual #21                 // Method org/h2/store/Data.read:([BII)V
     253: aload_0
     254: getfield      #7                  // Field page:Lorg/h2/store/Data;
     257: invokevirtual #22                 // Method org/h2/store/Data.reset:()V
     260: aload_0
     261: getfield      #7                  // Field page:Lorg/h2/store/Data;
     264: iload_2
     265: invokevirtual #28                 // Method org/h2/store/Data.checkCapacity:(I)V
     268: aload_3
     269: aload_0
     270: getfield      #7                  // Field page:Lorg/h2/store/Data;
     273: invokevirtual #25                 // Method org/h2/store/Data.getBytes:()[B
     276: iconst_0
     277: invokestatic  #33                 // Method org/h2/tools/CompressTool.expand:([B[BI)V
     280: aload_0
     281: iload_2
     282: putfield      #16                 // Field remainingInBuffer:I
     285: aload_0
     286: getfield      #3                  // Field alwaysClose:Z
     289: ifeq          299
     292: aload_0
     293: getfield      #2                  // Field store:Lorg/h2/store/FileStore;
     296: invokevirtual #34                 // Method org/h2/store/FileStore.closeFile:()V
     299: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field store:Lorg/h2/store/FileStore;
       4: ifnull        35
       7: aload_0
       8: getfield      #2                  // Field store:Lorg/h2/store/FileStore;
      11: invokevirtual #35                 // Method org/h2/store/FileStore.close:()V
      14: aload_0
      15: iconst_1
      16: putfield      #19                 // Field endOfFile:Z
      19: aload_0
      20: aconst_null
      21: putfield      #2                  // Field store:Lorg/h2/store/FileStore;
      24: goto          35
      27: astore_1
      28: aload_0
      29: aconst_null
      30: putfield      #2                  // Field store:Lorg/h2/store/FileStore;
      33: aload_1
      34: athrow
      35: return
    Exception table:
       from    to  target type
           7    19    27   any
          27    28    27   any

  protected void finalize();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method close:()V
       4: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #12                 // Method fillBuffer:()V
       4: aload_0
       5: getfield      #19                 // Field endOfFile:Z
       8: ifeq          13
      11: iconst_m1
      12: ireturn
      13: aload_0
      14: getfield      #7                  // Field page:Lorg/h2/store/Data;
      17: invokevirtual #36                 // Method org/h2/store/Data.readByte:()B
      20: sipush        255
      23: iand
      24: istore_1
      25: aload_0
      26: dup
      27: getfield      #16                 // Field remainingInBuffer:I
      30: iconst_1
      31: isub
      32: putfield      #16                 // Field remainingInBuffer:I
      35: iload_1
      36: ireturn
}
