Compiled from "PageInputStream.java"
public class org.h2.store.PageInputStream extends java.io.InputStream {
  private final org.h2.store.PageStore store;

  private final org.h2.message.Trace trace;

  private final int firstTrunkPage;

  private final org.h2.store.PageStreamTrunk$Iterator trunkIterator;

  private int dataPage;

  private org.h2.store.PageStreamTrunk trunk;

  private int trunkIndex;

  private org.h2.store.PageStreamData data;

  private int dataPos;

  private boolean endOfFile;

  private int remaining;

  private final byte[] buffer;

  private int logKey;

  org.h2.store.PageInputStream(org.h2.store.PageStore, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: iconst_1
       6: newarray       byte
       8: dup
       9: iconst_0
      10: iconst_0
      11: bastore
      12: putfield      #2                  // Field buffer:[B
      15: aload_0
      16: aload_1
      17: putfield      #3                  // Field store:Lorg/h2/store/PageStore;
      20: aload_0
      21: aload_1
      22: invokevirtual #4                  // Method org/h2/store/PageStore.getTrace:()Lorg/h2/message/Trace;
      25: putfield      #5                  // Field trace:Lorg/h2/message/Trace;
      28: aload_0
      29: iload_2
      30: iconst_1
      31: isub
      32: putfield      #6                  // Field logKey:I
      35: aload_0
      36: iload_3
      37: putfield      #7                  // Field firstTrunkPage:I
      40: aload_0
      41: new           #8                  // class org/h2/store/PageStreamTrunk$Iterator
      44: dup
      45: aload_1
      46: iload_3
      47: invokespecial #9                  // Method org/h2/store/PageStreamTrunk$Iterator."<init>":(Lorg/h2/store/PageStore;I)V
      50: putfield      #10                 // Field trunkIterator:Lorg/h2/store/PageStreamTrunk$Iterator;
      53: aload_0
      54: iload         4
      56: putfield      #11                 // Field dataPage:I
      59: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field buffer:[B
       5: invokevirtual #12                 // Method read:([B)I
       8: istore_1
       9: iload_1
      10: ifge          17
      13: iconst_m1
      14: goto          27
      17: aload_0
      18: getfield      #2                  // Field buffer:[B
      21: iconst_0
      22: baload
      23: sipush        255
      26: iand
      27: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #13                 // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: iconst_0
       7: istore        4
       9: iload_3
      10: ifle          50
      13: aload_0
      14: aload_1
      15: iload_2
      16: iload_3
      17: invokespecial #14                 // Method readBlock:([BII)I
      20: istore        5
      22: iload         5
      24: ifge          30
      27: goto          50
      30: iload         4
      32: iload         5
      34: iadd
      35: istore        4
      37: iload_2
      38: iload         5
      40: iadd
      41: istore_2
      42: iload_3
      43: iload         5
      45: isub
      46: istore_3
      47: goto          9
      50: iload         4
      52: ifne          59
      55: iconst_m1
      56: goto          61
      59: iload         4
      61: ireturn

  private int readBlock(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method fillBuffer:()V
       4: aload_0
       5: getfield      #16                 // Field endOfFile:Z
       8: ifeq          13
      11: iconst_m1
      12: ireturn
      13: aload_0
      14: getfield      #17                 // Field remaining:I
      17: iload_3
      18: invokestatic  #18                 // Method java/lang/Math.min:(II)I
      21: istore        4
      23: aload_0
      24: getfield      #19                 // Field data:Lorg/h2/store/PageStreamData;
      27: aload_0
      28: getfield      #20                 // Field dataPos:I
      31: aload_1
      32: iload_2
      33: iload         4
      35: invokevirtual #21                 // Method org/h2/store/PageStreamData.read:(I[BII)V
      38: aload_0
      39: dup
      40: getfield      #17                 // Field remaining:I
      43: iload         4
      45: isub
      46: putfield      #17                 // Field remaining:I
      49: aload_0
      50: dup
      51: getfield      #20                 // Field dataPos:I
      54: iload         4
      56: iadd
      57: putfield      #20                 // Field dataPos:I
      60: iload         4
      62: ireturn
      63: astore        4
      65: new           #23                 // class java/io/EOFException
      68: dup
      69: invokespecial #24                 // Method java/io/EOFException."<init>":()V
      72: athrow
    Exception table:
       from    to  target type
           0    12    63   Class org/h2/message/DbException
          13    62    63   Class org/h2/message/DbException

  private void fillBuffer();
    Code:
       0: aload_0
       1: getfield      #17                 // Field remaining:I
       4: ifgt          14
       7: aload_0
       8: getfield      #16                 // Field endOfFile:Z
      11: ifeq          15
      14: return
      15: aload_0
      16: getfield      #25                 // Field trunk:Lorg/h2/store/PageStreamTrunk;
      19: ifnonnull     75
      22: aload_0
      23: aload_0
      24: getfield      #10                 // Field trunkIterator:Lorg/h2/store/PageStreamTrunk$Iterator;
      27: invokevirtual #26                 // Method org/h2/store/PageStreamTrunk$Iterator.next:()Lorg/h2/store/PageStreamTrunk;
      30: putfield      #25                 // Field trunk:Lorg/h2/store/PageStreamTrunk;
      33: aload_0
      34: iconst_0
      35: putfield      #27                 // Field trunkIndex:I
      38: aload_0
      39: dup
      40: getfield      #6                  // Field logKey:I
      43: iconst_1
      44: iadd
      45: putfield      #6                  // Field logKey:I
      48: aload_0
      49: getfield      #25                 // Field trunk:Lorg/h2/store/PageStreamTrunk;
      52: ifnull        69
      55: aload_0
      56: getfield      #25                 // Field trunk:Lorg/h2/store/PageStreamTrunk;
      59: invokevirtual #28                 // Method org/h2/store/PageStreamTrunk.getLogKey:()I
      62: aload_0
      63: getfield      #6                  // Field logKey:I
      66: if_icmpeq     75
      69: aload_0
      70: iconst_1
      71: putfield      #16                 // Field endOfFile:Z
      74: return
      75: aload_0
      76: getfield      #25                 // Field trunk:Lorg/h2/store/PageStreamTrunk;
      79: ifnull        15
      82: aload_0
      83: getfield      #25                 // Field trunk:Lorg/h2/store/PageStreamTrunk;
      86: aload_0
      87: dup
      88: getfield      #27                 // Field trunkIndex:I
      91: dup_x1
      92: iconst_1
      93: iadd
      94: putfield      #27                 // Field trunkIndex:I
      97: invokevirtual #29                 // Method org/h2/store/PageStreamTrunk.getPageData:(I)I
     100: istore_1
     101: iload_1
     102: iconst_m1
     103: if_icmpne     114
     106: aload_0
     107: aconst_null
     108: putfield      #25                 // Field trunk:Lorg/h2/store/PageStreamTrunk;
     111: goto          15
     114: aload_0
     115: getfield      #11                 // Field dataPage:I
     118: iconst_m1
     119: if_icmpeq     133
     122: aload_0
     123: getfield      #11                 // Field dataPage:I
     126: iload_1
     127: if_icmpne     15
     130: goto          133
     133: aload_0
     134: getfield      #5                  // Field trace:Lorg/h2/message/Trace;
     137: invokevirtual #30                 // Method org/h2/message/Trace.isDebugEnabled:()Z
     140: ifeq          169
     143: aload_0
     144: getfield      #5                  // Field trace:Lorg/h2/message/Trace;
     147: new           #31                 // class java/lang/StringBuilder
     150: dup
     151: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     154: ldc           #33                 // String pageIn.readPage
     156: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: iload_1
     160: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     163: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     166: invokevirtual #37                 // Method org/h2/message/Trace.debug:(Ljava/lang/String;)V
     169: aload_0
     170: iconst_m1
     171: putfield      #11                 // Field dataPage:I
     174: aload_0
     175: aconst_null
     176: putfield      #19                 // Field data:Lorg/h2/store/PageStreamData;
     179: aload_0
     180: getfield      #3                  // Field store:Lorg/h2/store/PageStore;
     183: iload_1
     184: invokevirtual #38                 // Method org/h2/store/PageStore.getPage:(I)Lorg/h2/store/Page;
     187: astore_2
     188: aload_2
     189: instanceof    #39                 // class org/h2/store/PageStreamData
     192: ifeq          203
     195: aload_0
     196: aload_2
     197: checkcast     #39                 // class org/h2/store/PageStreamData
     200: putfield      #19                 // Field data:Lorg/h2/store/PageStreamData;
     203: aload_0
     204: getfield      #19                 // Field data:Lorg/h2/store/PageStreamData;
     207: ifnull        224
     210: aload_0
     211: getfield      #19                 // Field data:Lorg/h2/store/PageStreamData;
     214: invokevirtual #40                 // Method org/h2/store/PageStreamData.getLogKey:()I
     217: aload_0
     218: getfield      #6                  // Field logKey:I
     221: if_icmpeq     230
     224: aload_0
     225: iconst_1
     226: putfield      #16                 // Field endOfFile:Z
     229: return
     230: aload_0
     231: invokestatic  #41                 // Method org/h2/store/PageStreamData.getReadStart:()I
     234: putfield      #20                 // Field dataPos:I
     237: aload_0
     238: aload_0
     239: getfield      #3                  // Field store:Lorg/h2/store/PageStore;
     242: invokevirtual #42                 // Method org/h2/store/PageStore.getPageSize:()I
     245: aload_0
     246: getfield      #20                 // Field dataPos:I
     249: isub
     250: putfield      #17                 // Field remaining:I
     253: return

  org.h2.util.BitField allocateAllPages();
    Code:
       0: new           #43                 // class org/h2/util/BitField
       3: dup
       4: invokespecial #44                 // Method org/h2/util/BitField."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #6                  // Field logKey:I
      12: istore_2
      13: new           #8                  // class org/h2/store/PageStreamTrunk$Iterator
      16: dup
      17: aload_0
      18: getfield      #3                  // Field store:Lorg/h2/store/PageStore;
      21: aload_0
      22: getfield      #7                  // Field firstTrunkPage:I
      25: invokespecial #9                  // Method org/h2/store/PageStreamTrunk$Iterator."<init>":(Lorg/h2/store/PageStore;I)V
      28: astore_3
      29: aload_3
      30: invokevirtual #26                 // Method org/h2/store/PageStreamTrunk$Iterator.next:()Lorg/h2/store/PageStreamTrunk;
      33: astore        4
      35: iinc          2, 1
      38: aload_3
      39: invokevirtual #45                 // Method org/h2/store/PageStreamTrunk$Iterator.canDelete:()Z
      42: ifeq          56
      45: aload_0
      46: getfield      #3                  // Field store:Lorg/h2/store/PageStore;
      49: aload_3
      50: invokevirtual #46                 // Method org/h2/store/PageStreamTrunk$Iterator.getCurrentPageId:()I
      53: invokevirtual #47                 // Method org/h2/store/PageStore.allocatePage:(I)V
      56: aload         4
      58: ifnull        127
      61: aload         4
      63: invokevirtual #28                 // Method org/h2/store/PageStreamTrunk.getLogKey:()I
      66: iload_2
      67: if_icmpeq     73
      70: goto          127
      73: aload_1
      74: aload         4
      76: invokevirtual #48                 // Method org/h2/store/PageStreamTrunk.getPos:()I
      79: invokevirtual #49                 // Method org/h2/util/BitField.set:(I)V
      82: iconst_0
      83: istore        5
      85: aload         4
      87: iload         5
      89: invokevirtual #29                 // Method org/h2/store/PageStreamTrunk.getPageData:(I)I
      92: istore        6
      94: iload         6
      96: iconst_m1
      97: if_icmpne     103
     100: goto          124
     103: aload_1
     104: iload         6
     106: invokevirtual #49                 // Method org/h2/util/BitField.set:(I)V
     109: aload_0
     110: getfield      #3                  // Field store:Lorg/h2/store/PageStore;
     113: iload         6
     115: invokevirtual #47                 // Method org/h2/store/PageStore.allocatePage:(I)V
     118: iinc          5, 1
     121: goto          85
     124: goto          29
     127: aload_1
     128: areturn

  int getDataPage();
    Code:
       0: aload_0
       1: getfield      #19                 // Field data:Lorg/h2/store/PageStreamData;
       4: invokevirtual #50                 // Method org/h2/store/PageStreamData.getPos:()I
       7: ireturn

  public void close();
    Code:
       0: return
}
