Compiled from "FileStoreOutputStream.java"
public class org.h2.store.FileStoreOutputStream extends java.io.OutputStream {
  private org.h2.store.FileStore store;

  private final org.h2.store.Data page;

  private final java.lang.String compressionAlgorithm;

  private final org.h2.tools.CompressTool compress;

  private final byte[] buffer;

  public org.h2.store.FileStoreOutputStream(org.h2.store.FileStore, org.h2.store.DataHandler, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: iconst_1
       6: newarray       byte
       8: dup
       9: iconst_0
      10: iconst_0
      11: bastore
      12: putfield      #2                  // Field buffer:[B
      15: aload_0
      16: aload_1
      17: putfield      #3                  // Field store:Lorg/h2/store/FileStore;
      20: aload_3
      21: ifnull        39
      24: aload_0
      25: invokestatic  #4                  // Method org/h2/tools/CompressTool.getInstance:()Lorg/h2/tools/CompressTool;
      28: putfield      #5                  // Field compress:Lorg/h2/tools/CompressTool;
      31: aload_0
      32: aload_3
      33: putfield      #6                  // Field compressionAlgorithm:Ljava/lang/String;
      36: goto          49
      39: aload_0
      40: aconst_null
      41: putfield      #5                  // Field compress:Lorg/h2/tools/CompressTool;
      44: aload_0
      45: aconst_null
      46: putfield      #6                  // Field compressionAlgorithm:Ljava/lang/String;
      49: aload_0
      50: aload_2
      51: bipush        16
      53: invokestatic  #7                  // Method org/h2/store/Data.create:(Lorg/h2/store/DataHandler;I)Lorg/h2/store/Data;
      56: putfield      #8                  // Field page:Lorg/h2/store/Data;
      59: return

  public void write(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field buffer:[B
       4: iconst_0
       5: iload_1
       6: i2b
       7: bastore
       8: aload_0
       9: aload_0
      10: getfield      #2                  // Field buffer:[B
      13: invokevirtual #9                  // Method write:([B)V
      16: return

  public void write(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #10                 // Method write:([BII)V
       8: return

  public void write(byte[], int, int);
    Code:
       0: iload_3
       1: ifle          156
       4: aload_0
       5: getfield      #8                  // Field page:Lorg/h2/store/Data;
       8: invokevirtual #11                 // Method org/h2/store/Data.reset:()V
      11: aload_0
      12: getfield      #5                  // Field compress:Lorg/h2/tools/CompressTool;
      15: ifnull        99
      18: iload_2
      19: ifne          28
      22: iload_3
      23: aload_1
      24: arraylength
      25: if_icmpeq     39
      28: aload_1
      29: iload_2
      30: iload_2
      31: iload_3
      32: iadd
      33: invokestatic  #12                 // Method java/util/Arrays.copyOfRange:([BII)[B
      36: astore_1
      37: iconst_0
      38: istore_2
      39: iload_3
      40: istore        4
      42: aload_0
      43: getfield      #5                  // Field compress:Lorg/h2/tools/CompressTool;
      46: aload_1
      47: aload_0
      48: getfield      #6                  // Field compressionAlgorithm:Ljava/lang/String;
      51: invokevirtual #13                 // Method org/h2/tools/CompressTool.compress:([BLjava/lang/String;)[B
      54: astore_1
      55: aload_1
      56: arraylength
      57: istore_3
      58: aload_0
      59: getfield      #8                  // Field page:Lorg/h2/store/Data;
      62: bipush        8
      64: iload_3
      65: iadd
      66: invokevirtual #14                 // Method org/h2/store/Data.checkCapacity:(I)V
      69: aload_0
      70: getfield      #8                  // Field page:Lorg/h2/store/Data;
      73: iload_3
      74: invokevirtual #15                 // Method org/h2/store/Data.writeInt:(I)V
      77: aload_0
      78: getfield      #8                  // Field page:Lorg/h2/store/Data;
      81: iload         4
      83: invokevirtual #15                 // Method org/h2/store/Data.writeInt:(I)V
      86: aload_0
      87: getfield      #8                  // Field page:Lorg/h2/store/Data;
      90: aload_1
      91: iload_2
      92: iload_3
      93: invokevirtual #16                 // Method org/h2/store/Data.write:([BII)V
      96: goto          127
      99: aload_0
     100: getfield      #8                  // Field page:Lorg/h2/store/Data;
     103: iconst_4
     104: iload_3
     105: iadd
     106: invokevirtual #14                 // Method org/h2/store/Data.checkCapacity:(I)V
     109: aload_0
     110: getfield      #8                  // Field page:Lorg/h2/store/Data;
     113: iload_3
     114: invokevirtual #15                 // Method org/h2/store/Data.writeInt:(I)V
     117: aload_0
     118: getfield      #8                  // Field page:Lorg/h2/store/Data;
     121: aload_1
     122: iload_2
     123: iload_3
     124: invokevirtual #16                 // Method org/h2/store/Data.write:([BII)V
     127: aload_0
     128: getfield      #8                  // Field page:Lorg/h2/store/Data;
     131: invokevirtual #17                 // Method org/h2/store/Data.fillAligned:()V
     134: aload_0
     135: getfield      #3                  // Field store:Lorg/h2/store/FileStore;
     138: aload_0
     139: getfield      #8                  // Field page:Lorg/h2/store/Data;
     142: invokevirtual #18                 // Method org/h2/store/Data.getBytes:()[B
     145: iconst_0
     146: aload_0
     147: getfield      #8                  // Field page:Lorg/h2/store/Data;
     150: invokevirtual #19                 // Method org/h2/store/Data.length:()I
     153: invokevirtual #20                 // Method org/h2/store/FileStore.write:([BII)V
     156: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #3                  // Field store:Lorg/h2/store/FileStore;
       4: ifnull        30
       7: aload_0
       8: getfield      #3                  // Field store:Lorg/h2/store/FileStore;
      11: invokevirtual #21                 // Method org/h2/store/FileStore.close:()V
      14: aload_0
      15: aconst_null
      16: putfield      #3                  // Field store:Lorg/h2/store/FileStore;
      19: goto          30
      22: astore_1
      23: aload_0
      24: aconst_null
      25: putfield      #3                  // Field store:Lorg/h2/store/FileStore;
      28: aload_1
      29: athrow
      30: return
    Exception table:
       from    to  target type
           7    14    22   any
          22    23    22   any
}
