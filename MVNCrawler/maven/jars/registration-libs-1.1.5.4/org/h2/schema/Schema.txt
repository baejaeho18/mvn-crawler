Compiled from "Schema.java"
public class org.h2.schema.Schema extends org.h2.engine.DbObjectBase {
  private org.h2.engine.User owner;

  private final boolean system;

  private java.util.ArrayList<java.lang.String> tableEngineParams;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, org.h2.table.Table> tablesAndViews;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, org.h2.table.TableSynonym> synonyms;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, org.h2.index.Index> indexes;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, org.h2.schema.Sequence> sequences;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, org.h2.schema.TriggerObject> triggers;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, org.h2.constraint.Constraint> constraints;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, org.h2.schema.Constant> constants;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, org.h2.engine.FunctionAlias> functions;

  private final java.util.HashSet<java.lang.String> temporaryUniqueNames;

  public org.h2.schema.Schema(org.h2.engine.Database, int, java.lang.String, org.h2.engine.User, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/engine/DbObjectBase."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashSet
       8: dup
       9: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      12: putfield      #4                  // Field temporaryUniqueNames:Ljava/util/HashSet;
      15: aload_0
      16: aload_1
      17: invokevirtual #5                  // Method org/h2/engine/Database.newConcurrentStringMap:()Ljava/util/concurrent/ConcurrentHashMap;
      20: putfield      #6                  // Field tablesAndViews:Ljava/util/concurrent/ConcurrentHashMap;
      23: aload_0
      24: aload_1
      25: invokevirtual #5                  // Method org/h2/engine/Database.newConcurrentStringMap:()Ljava/util/concurrent/ConcurrentHashMap;
      28: putfield      #7                  // Field synonyms:Ljava/util/concurrent/ConcurrentHashMap;
      31: aload_0
      32: aload_1
      33: invokevirtual #5                  // Method org/h2/engine/Database.newConcurrentStringMap:()Ljava/util/concurrent/ConcurrentHashMap;
      36: putfield      #8                  // Field indexes:Ljava/util/concurrent/ConcurrentHashMap;
      39: aload_0
      40: aload_1
      41: invokevirtual #5                  // Method org/h2/engine/Database.newConcurrentStringMap:()Ljava/util/concurrent/ConcurrentHashMap;
      44: putfield      #9                  // Field sequences:Ljava/util/concurrent/ConcurrentHashMap;
      47: aload_0
      48: aload_1
      49: invokevirtual #5                  // Method org/h2/engine/Database.newConcurrentStringMap:()Ljava/util/concurrent/ConcurrentHashMap;
      52: putfield      #10                 // Field triggers:Ljava/util/concurrent/ConcurrentHashMap;
      55: aload_0
      56: aload_1
      57: invokevirtual #5                  // Method org/h2/engine/Database.newConcurrentStringMap:()Ljava/util/concurrent/ConcurrentHashMap;
      60: putfield      #11                 // Field constraints:Ljava/util/concurrent/ConcurrentHashMap;
      63: aload_0
      64: aload_1
      65: invokevirtual #5                  // Method org/h2/engine/Database.newConcurrentStringMap:()Ljava/util/concurrent/ConcurrentHashMap;
      68: putfield      #12                 // Field constants:Ljava/util/concurrent/ConcurrentHashMap;
      71: aload_0
      72: aload_1
      73: invokevirtual #5                  // Method org/h2/engine/Database.newConcurrentStringMap:()Ljava/util/concurrent/ConcurrentHashMap;
      76: putfield      #13                 // Field functions:Ljava/util/concurrent/ConcurrentHashMap;
      79: aload_0
      80: aload_1
      81: iload_2
      82: aload_3
      83: bipush        8
      85: invokevirtual #14                 // Method initDbObjectBase:(Lorg/h2/engine/Database;ILjava/lang/String;I)V
      88: aload_0
      89: aload         4
      91: putfield      #15                 // Field owner:Lorg/h2/engine/User;
      94: aload_0
      95: iload         5
      97: putfield      #16                 // Field system:Z
     100: return

  public boolean canDrop();
    Code:
       0: aload_0
       1: getfield      #16                 // Field system:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.String getCreateSQLForCopy(org.h2.table.Table, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method toString:()Ljava/lang/String;
       4: invokestatic  #18                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
       7: athrow

  public java.lang.String getDropSQL();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getCreateSQL();
    Code:
       0: aload_0
       1: getfield      #16                 // Field system:Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: new           #19                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #21                 // String CREATE SCHEMA IF NOT EXISTS
      18: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: invokevirtual #23                 // Method getSQL:()Ljava/lang/String;
      25: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #24                 // String  AUTHORIZATION
      30: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: getfield      #15                 // Field owner:Lorg/h2/engine/User;
      37: invokevirtual #25                 // Method org/h2/engine/User.getSQL:()Ljava/lang/String;
      40: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: areturn

  public int getType();
    Code:
       0: bipush        10
       2: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #6                  // Field tablesAndViews:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #27                 // Method java/util/concurrent/ConcurrentHashMap.isEmpty:()Z
       7: ifeq          84
      10: aload_0
      11: getfield      #7                  // Field synonyms:Ljava/util/concurrent/ConcurrentHashMap;
      14: invokevirtual #27                 // Method java/util/concurrent/ConcurrentHashMap.isEmpty:()Z
      17: ifeq          84
      20: aload_0
      21: getfield      #8                  // Field indexes:Ljava/util/concurrent/ConcurrentHashMap;
      24: invokevirtual #27                 // Method java/util/concurrent/ConcurrentHashMap.isEmpty:()Z
      27: ifeq          84
      30: aload_0
      31: getfield      #9                  // Field sequences:Ljava/util/concurrent/ConcurrentHashMap;
      34: invokevirtual #27                 // Method java/util/concurrent/ConcurrentHashMap.isEmpty:()Z
      37: ifeq          84
      40: aload_0
      41: getfield      #10                 // Field triggers:Ljava/util/concurrent/ConcurrentHashMap;
      44: invokevirtual #27                 // Method java/util/concurrent/ConcurrentHashMap.isEmpty:()Z
      47: ifeq          84
      50: aload_0
      51: getfield      #11                 // Field constraints:Ljava/util/concurrent/ConcurrentHashMap;
      54: invokevirtual #27                 // Method java/util/concurrent/ConcurrentHashMap.isEmpty:()Z
      57: ifeq          84
      60: aload_0
      61: getfield      #12                 // Field constants:Ljava/util/concurrent/ConcurrentHashMap;
      64: invokevirtual #27                 // Method java/util/concurrent/ConcurrentHashMap.isEmpty:()Z
      67: ifeq          84
      70: aload_0
      71: getfield      #13                 // Field functions:Ljava/util/concurrent/ConcurrentHashMap;
      74: invokevirtual #27                 // Method java/util/concurrent/ConcurrentHashMap.isEmpty:()Z
      77: ifeq          84
      80: iconst_1
      81: goto          85
      84: iconst_0
      85: ireturn

  public void removeChildrenAndResources(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #10                 // Field triggers:Ljava/util/concurrent/ConcurrentHashMap;
       4: ifnull        47
       7: aload_0
       8: getfield      #10                 // Field triggers:Ljava/util/concurrent/ConcurrentHashMap;
      11: invokevirtual #28                 // Method java/util/concurrent/ConcurrentHashMap.size:()I
      14: ifle          47
      17: aload_0
      18: getfield      #10                 // Field triggers:Ljava/util/concurrent/ConcurrentHashMap;
      21: invokevirtual #29                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      24: invokeinterface #30,  1           // InterfaceMethod java/util/Collection.toArray:()[Ljava/lang/Object;
      29: iconst_0
      30: aaload
      31: checkcast     #31                 // class org/h2/schema/TriggerObject
      34: astore_2
      35: aload_0
      36: getfield      #32                 // Field database:Lorg/h2/engine/Database;
      39: aload_1
      40: aload_2
      41: invokevirtual #33                 // Method org/h2/engine/Database.removeSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
      44: goto          0
      47: aload_0
      48: getfield      #11                 // Field constraints:Ljava/util/concurrent/ConcurrentHashMap;
      51: ifnull        94
      54: aload_0
      55: getfield      #11                 // Field constraints:Ljava/util/concurrent/ConcurrentHashMap;
      58: invokevirtual #28                 // Method java/util/concurrent/ConcurrentHashMap.size:()I
      61: ifle          94
      64: aload_0
      65: getfield      #11                 // Field constraints:Ljava/util/concurrent/ConcurrentHashMap;
      68: invokevirtual #29                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      71: invokeinterface #30,  1           // InterfaceMethod java/util/Collection.toArray:()[Ljava/lang/Object;
      76: iconst_0
      77: aaload
      78: checkcast     #34                 // class org/h2/constraint/Constraint
      81: astore_2
      82: aload_0
      83: getfield      #32                 // Field database:Lorg/h2/engine/Database;
      86: aload_1
      87: aload_2
      88: invokevirtual #33                 // Method org/h2/engine/Database.removeSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
      91: goto          47
      94: iconst_0
      95: istore_2
      96: iconst_0
      97: istore_2
      98: aload_0
      99: getfield      #6                  // Field tablesAndViews:Ljava/util/concurrent/ConcurrentHashMap;
     102: ifnull        183
     105: new           #35                 // class java/util/ArrayList
     108: dup
     109: aload_0
     110: getfield      #6                  // Field tablesAndViews:Ljava/util/concurrent/ConcurrentHashMap;
     113: invokevirtual #29                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
     116: invokespecial #36                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     119: invokevirtual #37                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     122: astore_3
     123: aload_3
     124: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     129: ifeq          183
     132: aload_3
     133: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     138: checkcast     #40                 // class org/h2/table/Table
     141: astore        4
     143: aload         4
     145: invokevirtual #41                 // Method org/h2/table/Table.getName:()Ljava/lang/String;
     148: ifnull        180
     151: aload_0
     152: getfield      #32                 // Field database:Lorg/h2/engine/Database;
     155: aload         4
     157: aload         4
     159: invokevirtual #42                 // Method org/h2/engine/Database.getDependentTable:(Lorg/h2/schema/SchemaObject;Lorg/h2/table/Table;)Lorg/h2/table/Table;
     162: ifnonnull     178
     165: aload_0
     166: getfield      #32                 // Field database:Lorg/h2/engine/Database;
     169: aload_1
     170: aload         4
     172: invokevirtual #33                 // Method org/h2/engine/Database.removeSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
     175: goto          180
     178: iconst_1
     179: istore_2
     180: goto          123
     183: iload_2
     184: ifne          96
     187: aload_0
     188: getfield      #8                  // Field indexes:Ljava/util/concurrent/ConcurrentHashMap;
     191: ifnull        234
     194: aload_0
     195: getfield      #8                  // Field indexes:Ljava/util/concurrent/ConcurrentHashMap;
     198: invokevirtual #28                 // Method java/util/concurrent/ConcurrentHashMap.size:()I
     201: ifle          234
     204: aload_0
     205: getfield      #8                  // Field indexes:Ljava/util/concurrent/ConcurrentHashMap;
     208: invokevirtual #29                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
     211: invokeinterface #30,  1           // InterfaceMethod java/util/Collection.toArray:()[Ljava/lang/Object;
     216: iconst_0
     217: aaload
     218: checkcast     #43                 // class org/h2/index/Index
     221: astore_3
     222: aload_0
     223: getfield      #32                 // Field database:Lorg/h2/engine/Database;
     226: aload_1
     227: aload_3
     228: invokevirtual #33                 // Method org/h2/engine/Database.removeSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
     231: goto          187
     234: aload_0
     235: getfield      #9                  // Field sequences:Ljava/util/concurrent/ConcurrentHashMap;
     238: ifnull        281
     241: aload_0
     242: getfield      #9                  // Field sequences:Ljava/util/concurrent/ConcurrentHashMap;
     245: invokevirtual #28                 // Method java/util/concurrent/ConcurrentHashMap.size:()I
     248: ifle          281
     251: aload_0
     252: getfield      #9                  // Field sequences:Ljava/util/concurrent/ConcurrentHashMap;
     255: invokevirtual #29                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
     258: invokeinterface #30,  1           // InterfaceMethod java/util/Collection.toArray:()[Ljava/lang/Object;
     263: iconst_0
     264: aaload
     265: checkcast     #44                 // class org/h2/schema/Sequence
     268: astore_3
     269: aload_0
     270: getfield      #32                 // Field database:Lorg/h2/engine/Database;
     273: aload_1
     274: aload_3
     275: invokevirtual #33                 // Method org/h2/engine/Database.removeSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
     278: goto          234
     281: aload_0
     282: getfield      #12                 // Field constants:Ljava/util/concurrent/ConcurrentHashMap;
     285: ifnull        328
     288: aload_0
     289: getfield      #12                 // Field constants:Ljava/util/concurrent/ConcurrentHashMap;
     292: invokevirtual #28                 // Method java/util/concurrent/ConcurrentHashMap.size:()I
     295: ifle          328
     298: aload_0
     299: getfield      #12                 // Field constants:Ljava/util/concurrent/ConcurrentHashMap;
     302: invokevirtual #29                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
     305: invokeinterface #30,  1           // InterfaceMethod java/util/Collection.toArray:()[Ljava/lang/Object;
     310: iconst_0
     311: aaload
     312: checkcast     #45                 // class org/h2/schema/Constant
     315: astore_3
     316: aload_0
     317: getfield      #32                 // Field database:Lorg/h2/engine/Database;
     320: aload_1
     321: aload_3
     322: invokevirtual #33                 // Method org/h2/engine/Database.removeSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
     325: goto          281
     328: aload_0
     329: getfield      #13                 // Field functions:Ljava/util/concurrent/ConcurrentHashMap;
     332: ifnull        375
     335: aload_0
     336: getfield      #13                 // Field functions:Ljava/util/concurrent/ConcurrentHashMap;
     339: invokevirtual #28                 // Method java/util/concurrent/ConcurrentHashMap.size:()I
     342: ifle          375
     345: aload_0
     346: getfield      #13                 // Field functions:Ljava/util/concurrent/ConcurrentHashMap;
     349: invokevirtual #29                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
     352: invokeinterface #30,  1           // InterfaceMethod java/util/Collection.toArray:()[Ljava/lang/Object;
     357: iconst_0
     358: aaload
     359: checkcast     #46                 // class org/h2/engine/FunctionAlias
     362: astore_3
     363: aload_0
     364: getfield      #32                 // Field database:Lorg/h2/engine/Database;
     367: aload_1
     368: aload_3
     369: invokevirtual #33                 // Method org/h2/engine/Database.removeSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
     372: goto          328
     375: aload_0
     376: getfield      #32                 // Field database:Lorg/h2/engine/Database;
     379: aload_1
     380: aload_0
     381: invokevirtual #47                 // Method getId:()I
     384: invokevirtual #48                 // Method org/h2/engine/Database.removeMeta:(Lorg/h2/engine/Session;I)V
     387: aload_0
     388: aconst_null
     389: putfield      #15                 // Field owner:Lorg/h2/engine/User;
     392: aload_0
     393: invokevirtual #49                 // Method invalidate:()V
     396: return

  public void checkRename();
    Code:
       0: return

  public org.h2.engine.User getOwner();
    Code:
       0: aload_0
       1: getfield      #15                 // Field owner:Lorg/h2/engine/User;
       4: areturn

  public java.util.ArrayList<java.lang.String> getTableEngineParams();
    Code:
       0: aload_0
       1: getfield      #50                 // Field tableEngineParams:Ljava/util/ArrayList;
       4: areturn

  public void setTableEngineParams(java.util.ArrayList<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #50                 // Field tableEngineParams:Ljava/util/ArrayList;
       5: return

  private java.util.Map<java.lang.String, org.h2.schema.SchemaObject> getMap(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 15
                     0: 80
                     1: 104
                     2: 144
                     3: 96
                     4: 112
                     5: 120
                     6: 144
                     7: 144
                     8: 144
                     9: 136
                    10: 144
                    11: 128
                    12: 144
                    13: 144
                    14: 144
                    15: 88
               default: 144
          }
      80: aload_0
      81: getfield      #6                  // Field tablesAndViews:Ljava/util/concurrent/ConcurrentHashMap;
      84: astore_2
      85: goto          167
      88: aload_0
      89: getfield      #7                  // Field synonyms:Ljava/util/concurrent/ConcurrentHashMap;
      92: astore_2
      93: goto          167
      96: aload_0
      97: getfield      #9                  // Field sequences:Ljava/util/concurrent/ConcurrentHashMap;
     100: astore_2
     101: goto          167
     104: aload_0
     105: getfield      #8                  // Field indexes:Ljava/util/concurrent/ConcurrentHashMap;
     108: astore_2
     109: goto          167
     112: aload_0
     113: getfield      #10                 // Field triggers:Ljava/util/concurrent/ConcurrentHashMap;
     116: astore_2
     117: goto          167
     120: aload_0
     121: getfield      #11                 // Field constraints:Ljava/util/concurrent/ConcurrentHashMap;
     124: astore_2
     125: goto          167
     128: aload_0
     129: getfield      #12                 // Field constants:Ljava/util/concurrent/ConcurrentHashMap;
     132: astore_2
     133: goto          167
     136: aload_0
     137: getfield      #13                 // Field functions:Ljava/util/concurrent/ConcurrentHashMap;
     140: astore_2
     141: goto          167
     144: new           #19                 // class java/lang/StringBuilder
     147: dup
     148: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     151: ldc           #51                 // String type=
     153: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: iload_1
     157: invokevirtual #52                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     160: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     163: invokestatic  #18                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
     166: athrow
     167: aload_2
     168: areturn

  public void add(org.h2.schema.SchemaObject);
    Code:
       0: getstatic     #53                 // Field org/h2/engine/SysProperties.CHECK:Z
       3: ifeq          22
       6: aload_1
       7: invokeinterface #54,  1           // InterfaceMethod org/h2/schema/SchemaObject.getSchema:()Lorg/h2/schema/Schema;
      12: aload_0
      13: if_acmpeq     22
      16: ldc           #55                 // String wrong schema
      18: invokestatic  #18                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      21: pop
      22: aload_1
      23: invokeinterface #56,  1           // InterfaceMethod org/h2/schema/SchemaObject.getName:()Ljava/lang/String;
      28: astore_2
      29: aload_0
      30: aload_1
      31: invokeinterface #57,  1           // InterfaceMethod org/h2/schema/SchemaObject.getType:()I
      36: invokespecial #58                 // Method getMap:(I)Ljava/util/Map;
      39: astore_3
      40: getstatic     #53                 // Field org/h2/engine/SysProperties.CHECK:Z
      43: ifeq          79
      46: aload_3
      47: aload_2
      48: invokeinterface #59,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      53: ifnull        79
      56: new           #19                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #60                 // String object already exists:
      65: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_2
      69: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokestatic  #18                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      78: pop
      79: aload_3
      80: aload_2
      81: aload_1
      82: invokeinterface #61,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: aload_0
      89: aload_2
      90: invokevirtual #62                 // Method freeUniqueName:(Ljava/lang/String;)V
      93: return

  public void rename(org.h2.schema.SchemaObject, java.lang.String);
    Code:
       0: aload_1
       1: invokeinterface #57,  1           // InterfaceMethod org/h2/schema/SchemaObject.getType:()I
       6: istore_3
       7: aload_0
       8: iload_3
       9: invokespecial #58                 // Method getMap:(I)Ljava/util/Map;
      12: astore        4
      14: getstatic     #53                 // Field org/h2/engine/SysProperties.CHECK:Z
      17: ifeq          111
      20: aload         4
      22: aload_1
      23: invokeinterface #56,  1           // InterfaceMethod org/h2/schema/SchemaObject.getName:()Ljava/lang/String;
      28: invokeinterface #63,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      33: ifne          64
      36: new           #19                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #64                 // String not found:
      45: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokeinterface #56,  1           // InterfaceMethod org/h2/schema/SchemaObject.getName:()Ljava/lang/String;
      54: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokestatic  #18                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      63: pop
      64: aload_1
      65: invokeinterface #56,  1           // InterfaceMethod org/h2/schema/SchemaObject.getName:()Ljava/lang/String;
      70: aload_2
      71: invokevirtual #65                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      74: ifne          88
      77: aload         4
      79: aload_2
      80: invokeinterface #63,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      85: ifeq          111
      88: new           #19                 // class java/lang/StringBuilder
      91: dup
      92: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      95: ldc           #60                 // String object already exists:
      97: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: aload_2
     101: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: invokestatic  #18                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
     110: pop
     111: aload_1
     112: invokeinterface #66,  1           // InterfaceMethod org/h2/schema/SchemaObject.checkRename:()V
     117: aload         4
     119: aload_1
     120: invokeinterface #56,  1           // InterfaceMethod org/h2/schema/SchemaObject.getName:()Ljava/lang/String;
     125: invokeinterface #67,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     130: pop
     131: aload_0
     132: aload_1
     133: invokeinterface #56,  1           // InterfaceMethod org/h2/schema/SchemaObject.getName:()Ljava/lang/String;
     138: invokevirtual #62                 // Method freeUniqueName:(Ljava/lang/String;)V
     141: aload_1
     142: aload_2
     143: invokeinterface #68,  2           // InterfaceMethod org/h2/schema/SchemaObject.rename:(Ljava/lang/String;)V
     148: aload         4
     150: aload_2
     151: aload_1
     152: invokeinterface #61,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     157: pop
     158: aload_0
     159: aload_2
     160: invokevirtual #62                 // Method freeUniqueName:(Ljava/lang/String;)V
     163: return

  public org.h2.table.Table findTableOrView(org.h2.engine.Session, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field tablesAndViews:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_2
       5: invokevirtual #69                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #40                 // class org/h2/table/Table
      11: astore_3
      12: aload_3
      13: ifnonnull     26
      16: aload_1
      17: ifnull        26
      20: aload_1
      21: aload_2
      22: invokevirtual #70                 // Method org/h2/engine/Session.findLocalTempTable:(Ljava/lang/String;)Lorg/h2/table/Table;
      25: astore_3
      26: aload_3
      27: areturn

  public org.h2.table.Table resolveTableOrView(org.h2.engine.Session, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #71                 // Method findTableOrView:(Lorg/h2/engine/Session;Ljava/lang/String;)Lorg/h2/table/Table;
       6: astore_3
       7: aload_3
       8: ifnonnull     37
      11: aload_0
      12: getfield      #7                  // Field synonyms:Ljava/util/concurrent/ConcurrentHashMap;
      15: aload_2
      16: invokevirtual #69                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #72                 // class org/h2/table/TableSynonym
      22: astore        4
      24: aload         4
      26: ifnull        35
      29: aload         4
      31: invokevirtual #73                 // Method org/h2/table/TableSynonym.getSynonymFor:()Lorg/h2/table/Table;
      34: areturn
      35: aconst_null
      36: areturn
      37: aload_3
      38: areturn

  public org.h2.table.TableSynonym getSynonym(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field synonyms:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #69                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #72                 // class org/h2/table/TableSynonym
      11: areturn

  public org.h2.index.Index findIndex(org.h2.engine.Session, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field indexes:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_2
       5: invokevirtual #69                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #43                 // class org/h2/index/Index
      11: astore_3
      12: aload_3
      13: ifnonnull     22
      16: aload_1
      17: aload_2
      18: invokevirtual #74                 // Method org/h2/engine/Session.findLocalTempTableIndex:(Ljava/lang/String;)Lorg/h2/index/Index;
      21: astore_3
      22: aload_3
      23: areturn

  public org.h2.schema.TriggerObject findTrigger(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field triggers:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #69                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #31                 // class org/h2/schema/TriggerObject
      11: areturn

  public org.h2.schema.Sequence findSequence(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field sequences:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #69                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #44                 // class org/h2/schema/Sequence
      11: areturn

  public org.h2.constraint.Constraint findConstraint(org.h2.engine.Session, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field constraints:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_2
       5: invokevirtual #69                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #34                 // class org/h2/constraint/Constraint
      11: astore_3
      12: aload_3
      13: ifnonnull     22
      16: aload_1
      17: aload_2
      18: invokevirtual #75                 // Method org/h2/engine/Session.findLocalTempTableConstraint:(Ljava/lang/String;)Lorg/h2/constraint/Constraint;
      21: astore_3
      22: aload_3
      23: areturn

  public org.h2.schema.Constant findConstant(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #12                 // Field constants:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #69                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #45                 // class org/h2/schema/Constant
      11: areturn

  public org.h2.engine.FunctionAlias findFunction(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #13                 // Field functions:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #69                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #46                 // class org/h2/engine/FunctionAlias
      11: areturn

  public void freeUniqueName(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        30
       4: aload_0
       5: getfield      #4                  // Field temporaryUniqueNames:Ljava/util/HashSet;
       8: dup
       9: astore_2
      10: monitorenter
      11: aload_0
      12: getfield      #4                  // Field temporaryUniqueNames:Ljava/util/HashSet;
      15: aload_1
      16: invokevirtual #76                 // Method java/util/HashSet.remove:(Ljava/lang/Object;)Z
      19: pop
      20: aload_2
      21: monitorexit
      22: goto          30
      25: astore_3
      26: aload_2
      27: monitorexit
      28: aload_3
      29: athrow
      30: return
    Exception table:
       from    to  target type
          11    22    25   any
          25    28    25   any

  private java.lang.String getUniqueName(org.h2.engine.DbObject, java.util.Map<java.lang.String, ? extends org.h2.schema.SchemaObject>, java.lang.String);
    Code:
       0: aload_1
       1: invokeinterface #77,  1           // InterfaceMethod org/h2/engine/DbObject.getName:()Ljava/lang/String;
       6: invokevirtual #78                 // Method java/lang/String.hashCode:()I
       9: invokestatic  #79                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      12: invokestatic  #80                 // Method org/h2/util/StringUtils.toUpperEnglish:(Ljava/lang/String;)Ljava/lang/String;
      15: astore        4
      17: aconst_null
      18: astore        5
      20: aload_0
      21: getfield      #4                  // Field temporaryUniqueNames:Ljava/util/HashSet;
      24: dup
      25: astore        6
      27: monitorenter
      28: iconst_1
      29: istore        7
      31: aload         4
      33: invokevirtual #81                 // Method java/lang/String.length:()I
      36: istore        8
      38: iload         7
      40: iload         8
      42: if_icmpge     107
      45: new           #19                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      52: aload_3
      53: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload         4
      58: iconst_0
      59: iload         7
      61: invokevirtual #82                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      64: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: astore        5
      72: aload_2
      73: aload         5
      75: invokeinterface #63,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      80: ifne          98
      83: aload_0
      84: getfield      #4                  // Field temporaryUniqueNames:Ljava/util/HashSet;
      87: aload         5
      89: invokevirtual #83                 // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
      92: ifne          98
      95: goto          107
      98: aconst_null
      99: astore        5
     101: iinc          7, 1
     104: goto          38
     107: aload         5
     109: ifnonnull     193
     112: new           #19                 // class java/lang/StringBuilder
     115: dup
     116: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     119: aload_3
     120: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload         4
     125: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: ldc           #84                 // String _
     130: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     136: astore_3
     137: iconst_0
     138: istore        7
     140: new           #19                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     147: aload_3
     148: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: iload         7
     153: invokevirtual #52                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     156: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     159: astore        5
     161: aload_2
     162: aload         5
     164: invokeinterface #63,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     169: ifne          187
     172: aload_0
     173: getfield      #4                  // Field temporaryUniqueNames:Ljava/util/HashSet;
     176: aload         5
     178: invokevirtual #83                 // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
     181: ifne          187
     184: goto          193
     187: iinc          7, 1
     190: goto          140
     193: aload_0
     194: getfield      #4                  // Field temporaryUniqueNames:Ljava/util/HashSet;
     197: aload         5
     199: invokevirtual #85                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
     202: pop
     203: aload         6
     205: monitorexit
     206: goto          217
     209: astore        9
     211: aload         6
     213: monitorexit
     214: aload         9
     216: athrow
     217: aload         5
     219: areturn
    Exception table:
       from    to  target type
          28   206   209   any
         209   214   209   any

  public java.lang.String getUniqueConstraintName(org.h2.engine.Session, org.h2.table.Table);
    Code:
       0: aload_2
       1: invokevirtual #86                 // Method org/h2/table/Table.isTemporary:()Z
       4: ifeq          22
       7: aload_2
       8: invokevirtual #87                 // Method org/h2/table/Table.isGlobalTemporary:()Z
      11: ifne          22
      14: aload_1
      15: invokevirtual #88                 // Method org/h2/engine/Session.getLocalTempTableConstraints:()Ljava/util/HashMap;
      18: astore_3
      19: goto          27
      22: aload_0
      23: getfield      #11                 // Field constraints:Ljava/util/concurrent/ConcurrentHashMap;
      26: astore_3
      27: aload_0
      28: aload_2
      29: aload_3
      30: ldc           #89                 // String CONSTRAINT_
      32: invokespecial #90                 // Method getUniqueName:(Lorg/h2/engine/DbObject;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;
      35: areturn

  public java.lang.String getUniqueIndexName(org.h2.engine.Session, org.h2.table.Table, java.lang.String);
    Code:
       0: aload_2
       1: invokevirtual #86                 // Method org/h2/table/Table.isTemporary:()Z
       4: ifeq          23
       7: aload_2
       8: invokevirtual #87                 // Method org/h2/table/Table.isGlobalTemporary:()Z
      11: ifne          23
      14: aload_1
      15: invokevirtual #91                 // Method org/h2/engine/Session.getLocalTempTableIndexes:()Ljava/util/HashMap;
      18: astore        4
      20: goto          29
      23: aload_0
      24: getfield      #8                  // Field indexes:Ljava/util/concurrent/ConcurrentHashMap;
      27: astore        4
      29: aload_0
      30: aload_2
      31: aload         4
      33: aload_3
      34: invokespecial #90                 // Method getUniqueName:(Lorg/h2/engine/DbObject;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;
      37: areturn

  public org.h2.table.Table getTableOrView(org.h2.engine.Session, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field tablesAndViews:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_2
       5: invokevirtual #69                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #40                 // class org/h2/table/Table
      11: astore_3
      12: aload_3
      13: ifnonnull     37
      16: aload_1
      17: ifnull        26
      20: aload_1
      21: aload_2
      22: invokevirtual #70                 // Method org/h2/engine/Session.findLocalTempTable:(Ljava/lang/String;)Lorg/h2/table/Table;
      25: astore_3
      26: aload_3
      27: ifnonnull     37
      30: ldc           #92                 // int 42102
      32: aload_2
      33: invokestatic  #93                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      36: athrow
      37: aload_3
      38: areturn

  public org.h2.index.Index getIndex(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field indexes:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #69                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #43                 // class org/h2/index/Index
      11: astore_2
      12: aload_2
      13: ifnonnull     23
      16: ldc           #94                 // int 42112
      18: aload_1
      19: invokestatic  #93                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      22: athrow
      23: aload_2
      24: areturn

  public org.h2.constraint.Constraint getConstraint(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field constraints:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #69                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #34                 // class org/h2/constraint/Constraint
      11: astore_2
      12: aload_2
      13: ifnonnull     23
      16: ldc           #95                 // int 90057
      18: aload_1
      19: invokestatic  #93                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      22: athrow
      23: aload_2
      24: areturn

  public org.h2.schema.Constant getConstant(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #12                 // Field constants:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #69                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #45                 // class org/h2/schema/Constant
      11: astore_2
      12: aload_2
      13: ifnonnull     23
      16: ldc           #96                 // int 90115
      18: aload_1
      19: invokestatic  #93                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      22: athrow
      23: aload_2
      24: areturn

  public org.h2.schema.Sequence getSequence(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field sequences:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #69                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #44                 // class org/h2/schema/Sequence
      11: astore_2
      12: aload_2
      13: ifnonnull     23
      16: ldc           #97                 // int 90036
      18: aload_1
      19: invokestatic  #93                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      22: athrow
      23: aload_2
      24: areturn

  public java.util.ArrayList<org.h2.schema.SchemaObject> getAll();
    Code:
       0: invokestatic  #98                 // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
       3: astore_1
       4: aload_1
       5: aload_0
       6: iconst_0
       7: invokespecial #58                 // Method getMap:(I)Ljava/util/Map;
      10: invokeinterface #99,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      15: invokevirtual #100                // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      18: pop
      19: aload_1
      20: aload_0
      21: bipush        15
      23: invokespecial #58                 // Method getMap:(I)Ljava/util/Map;
      26: invokeinterface #99,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      31: invokevirtual #100                // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      34: pop
      35: aload_1
      36: aload_0
      37: iconst_3
      38: invokespecial #58                 // Method getMap:(I)Ljava/util/Map;
      41: invokeinterface #99,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      46: invokevirtual #100                // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      49: pop
      50: aload_1
      51: aload_0
      52: iconst_1
      53: invokespecial #58                 // Method getMap:(I)Ljava/util/Map;
      56: invokeinterface #99,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      61: invokevirtual #100                // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      64: pop
      65: aload_1
      66: aload_0
      67: iconst_4
      68: invokespecial #58                 // Method getMap:(I)Ljava/util/Map;
      71: invokeinterface #99,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      76: invokevirtual #100                // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      79: pop
      80: aload_1
      81: aload_0
      82: iconst_5
      83: invokespecial #58                 // Method getMap:(I)Ljava/util/Map;
      86: invokeinterface #99,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      91: invokevirtual #100                // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      94: pop
      95: aload_1
      96: aload_0
      97: bipush        11
      99: invokespecial #58                 // Method getMap:(I)Ljava/util/Map;
     102: invokeinterface #99,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     107: invokevirtual #100                // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
     110: pop
     111: aload_1
     112: aload_0
     113: bipush        9
     115: invokespecial #58                 // Method getMap:(I)Ljava/util/Map;
     118: invokeinterface #99,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     123: invokevirtual #100                // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
     126: pop
     127: aload_1
     128: areturn

  public java.util.ArrayList<org.h2.schema.SchemaObject> getAll(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #58                 // Method getMap:(I)Ljava/util/Map;
       5: astore_2
       6: new           #35                 // class java/util/ArrayList
       9: dup
      10: aload_2
      11: invokeinterface #99,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      16: invokespecial #36                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      19: areturn

  public java.util.ArrayList<org.h2.table.Table> getAllTablesAndViews();
    Code:
       0: aload_0
       1: getfield      #32                 // Field database:Lorg/h2/engine/Database;
       4: dup
       5: astore_1
       6: monitorenter
       7: new           #35                 // class java/util/ArrayList
      10: dup
      11: aload_0
      12: getfield      #6                  // Field tablesAndViews:Ljava/util/concurrent/ConcurrentHashMap;
      15: invokevirtual #29                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      18: invokespecial #36                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      21: aload_1
      22: monitorexit
      23: areturn
      24: astore_2
      25: aload_1
      26: monitorexit
      27: aload_2
      28: athrow
    Exception table:
       from    to  target type
           7    23    24   any
          24    27    24   any

  public java.util.ArrayList<org.h2.table.TableSynonym> getAllSynonyms();
    Code:
       0: aload_0
       1: getfield      #32                 // Field database:Lorg/h2/engine/Database;
       4: dup
       5: astore_1
       6: monitorenter
       7: new           #35                 // class java/util/ArrayList
      10: dup
      11: aload_0
      12: getfield      #7                  // Field synonyms:Ljava/util/concurrent/ConcurrentHashMap;
      15: invokevirtual #29                 // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
      18: invokespecial #36                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      21: aload_1
      22: monitorexit
      23: areturn
      24: astore_2
      25: aload_1
      26: monitorexit
      27: aload_2
      28: athrow
    Exception table:
       from    to  target type
           7    23    24   any
          24    27    24   any

  public org.h2.table.Table getTableOrViewByName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #32                 // Field database:Lorg/h2/engine/Database;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #6                  // Field tablesAndViews:Ljava/util/concurrent/ConcurrentHashMap;
      11: aload_1
      12: invokevirtual #69                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #40                 // class org/h2/table/Table
      18: aload_2
      19: monitorexit
      20: areturn
      21: astore_3
      22: aload_2
      23: monitorexit
      24: aload_3
      25: athrow
    Exception table:
       from    to  target type
           7    20    21   any
          21    24    21   any

  public void remove(org.h2.schema.SchemaObject);
    Code:
       0: aload_1
       1: invokeinterface #56,  1           // InterfaceMethod org/h2/schema/SchemaObject.getName:()Ljava/lang/String;
       6: astore_2
       7: aload_0
       8: aload_1
       9: invokeinterface #57,  1           // InterfaceMethod org/h2/schema/SchemaObject.getType:()I
      14: invokespecial #58                 // Method getMap:(I)Ljava/util/Map;
      17: astore_3
      18: getstatic     #53                 // Field org/h2/engine/SysProperties.CHECK:Z
      21: ifeq          57
      24: aload_3
      25: aload_2
      26: invokeinterface #63,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      31: ifne          57
      34: new           #19                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #64                 // String not found:
      43: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_2
      47: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokestatic  #18                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      56: pop
      57: aload_3
      58: aload_2
      59: invokeinterface #67,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: aload_0
      66: aload_2
      67: invokevirtual #62                 // Method freeUniqueName:(Ljava/lang/String;)V
      70: return

  public org.h2.table.Table createTable(org.h2.command.ddl.CreateTableData);
    Code:
       0: aload_0
       1: getfield      #32                 // Field database:Lorg/h2/engine/Database;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_1
       8: getfield      #101                // Field org/h2/command/ddl/CreateTableData.temporary:Z
      11: ifeq          21
      14: aload_1
      15: getfield      #102                // Field org/h2/command/ddl/CreateTableData.globalTemporary:Z
      18: ifeq          33
      21: aload_0
      22: getfield      #32                 // Field database:Lorg/h2/engine/Database;
      25: aload_1
      26: getfield      #103                // Field org/h2/command/ddl/CreateTableData.session:Lorg/h2/engine/Session;
      29: invokevirtual #104                // Method org/h2/engine/Database.lockMeta:(Lorg/h2/engine/Session;)Z
      32: pop
      33: aload_1
      34: aload_0
      35: putfield      #105                // Field org/h2/command/ddl/CreateTableData.schema:Lorg/h2/schema/Schema;
      38: aload_1
      39: getfield      #106                // Field org/h2/command/ddl/CreateTableData.tableEngine:Ljava/lang/String;
      42: ifnonnull     88
      45: aload_0
      46: getfield      #32                 // Field database:Lorg/h2/engine/Database;
      49: invokevirtual #107                // Method org/h2/engine/Database.getSettings:()Lorg/h2/engine/DbSettings;
      52: astore_3
      53: aload_3
      54: getfield      #108                // Field org/h2/engine/DbSettings.defaultTableEngine:Ljava/lang/String;
      57: ifnull        71
      60: aload_1
      61: aload_3
      62: getfield      #108                // Field org/h2/engine/DbSettings.defaultTableEngine:Ljava/lang/String;
      65: putfield      #106                // Field org/h2/command/ddl/CreateTableData.tableEngine:Ljava/lang/String;
      68: goto          88
      71: aload_3
      72: getfield      #109                // Field org/h2/engine/DbSettings.mvStore:Z
      75: ifeq          88
      78: aload_1
      79: ldc_w         #110                // class org/h2/mvstore/db/MVTableEngine
      82: invokevirtual #111                // Method java/lang/Class.getName:()Ljava/lang/String;
      85: putfield      #106                // Field org/h2/command/ddl/CreateTableData.tableEngine:Ljava/lang/String;
      88: aload_1
      89: getfield      #106                // Field org/h2/command/ddl/CreateTableData.tableEngine:Ljava/lang/String;
      92: ifnull        130
      95: aload_1
      96: getfield      #112                // Field org/h2/command/ddl/CreateTableData.tableEngineParams:Ljava/util/ArrayList;
      99: ifnonnull     110
     102: aload_1
     103: aload_0
     104: getfield      #50                 // Field tableEngineParams:Ljava/util/ArrayList;
     107: putfield      #112                // Field org/h2/command/ddl/CreateTableData.tableEngineParams:Ljava/util/ArrayList;
     110: aload_0
     111: getfield      #32                 // Field database:Lorg/h2/engine/Database;
     114: aload_1
     115: getfield      #106                // Field org/h2/command/ddl/CreateTableData.tableEngine:Ljava/lang/String;
     118: invokevirtual #113                // Method org/h2/engine/Database.getTableEngine:(Ljava/lang/String;)Lorg/h2/api/TableEngine;
     121: aload_1
     122: invokeinterface #114,  2          // InterfaceMethod org/h2/api/TableEngine.createTable:(Lorg/h2/command/ddl/CreateTableData;)Lorg/h2/table/Table;
     127: aload_2
     128: monitorexit
     129: areturn
     130: new           #115                // class org/h2/table/RegularTable
     133: dup
     134: aload_1
     135: invokespecial #116                // Method org/h2/table/RegularTable."<init>":(Lorg/h2/command/ddl/CreateTableData;)V
     138: aload_2
     139: monitorexit
     140: areturn
     141: astore        4
     143: aload_2
     144: monitorexit
     145: aload         4
     147: athrow
    Exception table:
       from    to  target type
           7   129   141   any
         130   140   141   any
         141   145   141   any

  public org.h2.table.TableSynonym createSynonym(org.h2.command.ddl.CreateSynonymData);
    Code:
       0: aload_0
       1: getfield      #32                 // Field database:Lorg/h2/engine/Database;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #32                 // Field database:Lorg/h2/engine/Database;
      11: aload_1
      12: getfield      #117                // Field org/h2/command/ddl/CreateSynonymData.session:Lorg/h2/engine/Session;
      15: invokevirtual #104                // Method org/h2/engine/Database.lockMeta:(Lorg/h2/engine/Session;)Z
      18: pop
      19: aload_1
      20: aload_0
      21: putfield      #118                // Field org/h2/command/ddl/CreateSynonymData.schema:Lorg/h2/schema/Schema;
      24: new           #72                 // class org/h2/table/TableSynonym
      27: dup
      28: aload_1
      29: invokespecial #119                // Method org/h2/table/TableSynonym."<init>":(Lorg/h2/command/ddl/CreateSynonymData;)V
      32: aload_2
      33: monitorexit
      34: areturn
      35: astore_3
      36: aload_2
      37: monitorexit
      38: aload_3
      39: athrow
    Exception table:
       from    to  target type
           7    34    35   any
          35    38    35   any

  public org.h2.table.TableLink createTableLink(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, boolean);
    Code:
       0: aload_0
       1: getfield      #32                 // Field database:Lorg/h2/engine/Database;
       4: dup
       5: astore        11
       7: monitorenter
       8: new           #120                // class org/h2/table/TableLink
      11: dup
      12: aload_0
      13: iload_1
      14: aload_2
      15: aload_3
      16: aload         4
      18: aload         5
      20: aload         6
      22: aload         7
      24: aload         8
      26: iload         9
      28: iload         10
      30: invokespecial #121                // Method org/h2/table/TableLink."<init>":(Lorg/h2/schema/Schema;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
      33: aload         11
      35: monitorexit
      36: areturn
      37: astore        12
      39: aload         11
      41: monitorexit
      42: aload         12
      44: athrow
    Exception table:
       from    to  target type
           8    36    37   any
          37    42    37   any
}
