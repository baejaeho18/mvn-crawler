Compiled from "TriggerObject.java"
public class org.h2.schema.TriggerObject extends org.h2.schema.SchemaObjectBase {
  public static final int DEFAULT_QUEUE_SIZE;

  private boolean insteadOf;

  private boolean before;

  private int typeMask;

  private boolean rowBased;

  private boolean onRollback;

  private int queueSize;

  private boolean noWait;

  private org.h2.table.Table table;

  private java.lang.String triggerClassName;

  private java.lang.String triggerSource;

  private org.h2.api.Trigger triggerCallback;

  public org.h2.schema.TriggerObject(org.h2.schema.Schema, int, java.lang.String, org.h2.table.Table);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/schema/SchemaObjectBase."<init>":()V
       4: aload_0
       5: sipush        1024
       8: putfield      #2                  // Field queueSize:I
      11: aload_0
      12: aload_1
      13: iload_2
      14: aload_3
      15: bipush        12
      17: invokevirtual #3                  // Method initSchemaObjectBase:(Lorg/h2/schema/Schema;ILjava/lang/String;I)V
      20: aload_0
      21: aload         4
      23: putfield      #4                  // Field table:Lorg/h2/table/Table;
      26: aload_0
      27: aload         4
      29: invokevirtual #5                  // Method org/h2/table/Table.isTemporary:()Z
      32: invokevirtual #6                  // Method setTemporary:(Z)V
      35: return

  public void setBefore(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field before:Z
       5: return

  public void setInsteadOf(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field insteadOf:Z
       5: return

  private synchronized void load();
    Code:
       0: aload_0
       1: getfield      #9                  // Field triggerCallback:Lorg/h2/api/Trigger;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #10                 // Field database:Lorg/h2/engine/Database;
      12: invokevirtual #11                 // Method org/h2/engine/Database.getSystemSession:()Lorg/h2/engine/Session;
      15: astore_1
      16: aload_1
      17: iconst_0
      18: invokevirtual #12                 // Method org/h2/engine/Session.createConnection:(Z)Lorg/h2/jdbc/JdbcConnection;
      21: astore_2
      22: aload_0
      23: getfield      #13                 // Field triggerClassName:Ljava/lang/String;
      26: ifnull        43
      29: aload_0
      30: getfield      #13                 // Field triggerClassName:Ljava/lang/String;
      33: invokestatic  #14                 // Method org/h2/util/JdbcUtils.loadUserClass:(Ljava/lang/String;)Ljava/lang/Class;
      36: invokevirtual #15                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      39: astore_3
      40: goto          48
      43: aload_0
      44: invokespecial #16                 // Method loadFromSource:()Lorg/h2/api/Trigger;
      47: astore_3
      48: aload_0
      49: aload_3
      50: checkcast     #17                 // class org/h2/api/Trigger
      53: putfield      #9                  // Field triggerCallback:Lorg/h2/api/Trigger;
      56: aload_0
      57: getfield      #9                  // Field triggerCallback:Lorg/h2/api/Trigger;
      60: aload_2
      61: aload_0
      62: invokevirtual #18                 // Method getSchema:()Lorg/h2/schema/Schema;
      65: invokevirtual #19                 // Method org/h2/schema/Schema.getName:()Ljava/lang/String;
      68: aload_0
      69: invokevirtual #20                 // Method getName:()Ljava/lang/String;
      72: aload_0
      73: getfield      #4                  // Field table:Lorg/h2/table/Table;
      76: invokevirtual #21                 // Method org/h2/table/Table.getName:()Ljava/lang/String;
      79: aload_0
      80: getfield      #7                  // Field before:Z
      83: aload_0
      84: getfield      #22                 // Field typeMask:I
      87: invokeinterface #23,  7           // InterfaceMethod org/h2/api/Trigger.init:(Ljava/sql/Connection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZI)V
      92: goto          145
      95: astore_1
      96: aload_0
      97: aconst_null
      98: putfield      #9                  // Field triggerCallback:Lorg/h2/api/Trigger;
     101: ldc           #25                 // int 90043
     103: aload_1
     104: iconst_3
     105: anewarray     #26                 // class java/lang/String
     108: dup
     109: iconst_0
     110: aload_0
     111: invokevirtual #20                 // Method getName:()Ljava/lang/String;
     114: aastore
     115: dup
     116: iconst_1
     117: aload_0
     118: getfield      #13                 // Field triggerClassName:Ljava/lang/String;
     121: ifnull        131
     124: aload_0
     125: getfield      #13                 // Field triggerClassName:Ljava/lang/String;
     128: goto          133
     131: ldc           #27                 // String ..source..
     133: aastore
     134: dup
     135: iconst_2
     136: aload_1
     137: invokevirtual #28                 // Method java/lang/Throwable.toString:()Ljava/lang/String;
     140: aastore
     141: invokestatic  #29                 // Method org/h2/message/DbException.get:(ILjava/lang/Throwable;[Ljava/lang/String;)Lorg/h2/message/DbException;
     144: athrow
     145: return
    Exception table:
       from    to  target type
           8    92    95   Class java/lang/Throwable

  private org.h2.api.Trigger loadFromSource();
    Code:
       0: aload_0
       1: getfield      #10                 // Field database:Lorg/h2/engine/Database;
       4: invokevirtual #30                 // Method org/h2/engine/Database.getCompiler:()Lorg/h2/util/SourceCompiler;
       7: astore_1
       8: aload_1
       9: dup
      10: astore_2
      11: monitorenter
      12: new           #31                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #33                 // String org.h2.dynamic.trigger.
      21: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #20                 // Method getName:()Ljava/lang/String;
      28: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: astore_3
      35: aload_1
      36: aload_3
      37: aload_0
      38: getfield      #36                 // Field triggerSource:Ljava/lang/String;
      41: invokevirtual #37                 // Method org/h2/util/SourceCompiler.setSource:(Ljava/lang/String;Ljava/lang/String;)V
      44: aload_0
      45: getfield      #36                 // Field triggerSource:Ljava/lang/String;
      48: invokestatic  #38                 // Method org/h2/util/SourceCompiler.isJavaxScriptSource:(Ljava/lang/String;)Z
      51: ifeq          68
      54: aload_1
      55: aload_3
      56: invokevirtual #39                 // Method org/h2/util/SourceCompiler.getCompiledScript:(Ljava/lang/String;)Ljavax/script/CompiledScript;
      59: invokevirtual #40                 // Method javax/script/CompiledScript.eval:()Ljava/lang/Object;
      62: checkcast     #17                 // class org/h2/api/Trigger
      65: aload_2
      66: monitorexit
      67: areturn
      68: aload_1
      69: aload_3
      70: invokevirtual #41                 // Method org/h2/util/SourceCompiler.getMethod:(Ljava/lang/String;)Ljava/lang/reflect/Method;
      73: astore        4
      75: aload         4
      77: invokevirtual #42                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      80: arraylength
      81: ifle          94
      84: new           #43                 // class java/lang/IllegalStateException
      87: dup
      88: ldc           #44                 // String No parameters are allowed for a trigger
      90: invokespecial #45                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: aload         4
      96: aconst_null
      97: iconst_0
      98: anewarray     #46                 // class java/lang/Object
     101: invokevirtual #47                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
     104: checkcast     #17                 // class org/h2/api/Trigger
     107: aload_2
     108: monitorexit
     109: areturn
     110: astore        4
     112: aload         4
     114: athrow
     115: astore        4
     117: ldc           #50                 // int 42000
     119: aload         4
     121: iconst_1
     122: anewarray     #26                 // class java/lang/String
     125: dup
     126: iconst_0
     127: aload_0
     128: getfield      #36                 // Field triggerSource:Ljava/lang/String;
     131: aastore
     132: invokestatic  #29                 // Method org/h2/message/DbException.get:(ILjava/lang/Throwable;[Ljava/lang/String;)Lorg/h2/message/DbException;
     135: athrow
     136: astore        5
     138: aload_2
     139: monitorexit
     140: aload         5
     142: athrow
    Exception table:
       from    to  target type
          44    65   110   Class org/h2/message/DbException
          68   107   110   Class org/h2/message/DbException
          44    65   115   Class java/lang/Exception
          68   107   115   Class java/lang/Exception
          12    67   136   any
          68   109   136   any
         110   140   136   any

  public void setTriggerClassName(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: iload_2
       4: invokespecial #51                 // Method setTriggerAction:(Ljava/lang/String;Ljava/lang/String;Z)V
       7: return

  public void setTriggerSource(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: iload_2
       4: invokespecial #51                 // Method setTriggerAction:(Ljava/lang/String;Ljava/lang/String;Z)V
       7: return

  private void setTriggerAction(java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field triggerClassName:Ljava/lang/String;
       5: aload_0
       6: aload_2
       7: putfield      #36                 // Field triggerSource:Ljava/lang/String;
      10: aload_0
      11: invokespecial #52                 // Method load:()V
      14: goto          26
      17: astore        4
      19: iload_3
      20: ifne          26
      23: aload         4
      25: athrow
      26: return
    Exception table:
       from    to  target type
          10    14    17   Class org/h2/message/DbException

  public void fire(org.h2.engine.Session, int, boolean);
    Code:
       0: aload_0
       1: getfield      #53                 // Field rowBased:Z
       4: ifne          24
       7: aload_0
       8: getfield      #7                  // Field before:Z
      11: iload_3
      12: if_icmpne     24
      15: aload_0
      16: getfield      #22                 // Field typeMask:I
      19: iload_2
      20: iand
      21: ifne          25
      24: return
      25: aload_0
      26: invokespecial #52                 // Method load:()V
      29: aload_1
      30: iconst_0
      31: invokevirtual #12                 // Method org/h2/engine/Session.createConnection:(Z)Lorg/h2/jdbc/JdbcConnection;
      34: astore        4
      36: iconst_0
      37: istore        5
      39: iload_2
      40: bipush        8
      42: if_icmpeq     52
      45: aload_1
      46: iconst_1
      47: invokevirtual #54                 // Method org/h2/engine/Session.setCommitOrRollbackDisabled:(Z)Z
      50: istore        5
      52: aload_1
      53: invokevirtual #55                 // Method org/h2/engine/Session.getLastScopeIdentity:()Lorg/h2/value/Value;
      56: astore        6
      58: aload_0
      59: getfield      #9                  // Field triggerCallback:Lorg/h2/api/Trigger;
      62: aload         4
      64: aconst_null
      65: aconst_null
      66: invokeinterface #56,  4           // InterfaceMethod org/h2/api/Trigger.fire:(Ljava/sql/Connection;[Ljava/lang/Object;[Ljava/lang/Object;)V
      71: aload_1
      72: invokevirtual #57                 // Method org/h2/engine/Session.getLastTriggerIdentity:()Lorg/h2/value/Value;
      75: ifnull        94
      78: aload_1
      79: aload_1
      80: invokevirtual #57                 // Method org/h2/engine/Session.getLastTriggerIdentity:()Lorg/h2/value/Value;
      83: invokevirtual #58                 // Method org/h2/engine/Session.setLastScopeIdentity:(Lorg/h2/value/Value;)V
      86: aload_1
      87: aconst_null
      88: invokevirtual #59                 // Method org/h2/engine/Session.setLastTriggerIdentity:(Lorg/h2/value/Value;)V
      91: goto          100
      94: aload_1
      95: aload         6
      97: invokevirtual #58                 // Method org/h2/engine/Session.setLastScopeIdentity:(Lorg/h2/value/Value;)V
     100: iload_2
     101: bipush        8
     103: if_icmpeq     211
     106: aload_1
     107: iload         5
     109: invokevirtual #54                 // Method org/h2/engine/Session.setCommitOrRollbackDisabled:(Z)Z
     112: pop
     113: goto          211
     116: astore        7
     118: ldc           #60                 // int 90044
     120: aload         7
     122: iconst_3
     123: anewarray     #26                 // class java/lang/String
     126: dup
     127: iconst_0
     128: aload_0
     129: invokevirtual #20                 // Method getName:()Ljava/lang/String;
     132: aastore
     133: dup
     134: iconst_1
     135: aload_0
     136: getfield      #13                 // Field triggerClassName:Ljava/lang/String;
     139: ifnull        149
     142: aload_0
     143: getfield      #13                 // Field triggerClassName:Ljava/lang/String;
     146: goto          151
     149: ldc           #27                 // String ..source..
     151: aastore
     152: dup
     153: iconst_2
     154: aload         7
     156: invokevirtual #28                 // Method java/lang/Throwable.toString:()Ljava/lang/String;
     159: aastore
     160: invokestatic  #29                 // Method org/h2/message/DbException.get:(ILjava/lang/Throwable;[Ljava/lang/String;)Lorg/h2/message/DbException;
     163: athrow
     164: astore        8
     166: aload_1
     167: invokevirtual #57                 // Method org/h2/engine/Session.getLastTriggerIdentity:()Lorg/h2/value/Value;
     170: ifnull        189
     173: aload_1
     174: aload_1
     175: invokevirtual #57                 // Method org/h2/engine/Session.getLastTriggerIdentity:()Lorg/h2/value/Value;
     178: invokevirtual #58                 // Method org/h2/engine/Session.setLastScopeIdentity:(Lorg/h2/value/Value;)V
     181: aload_1
     182: aconst_null
     183: invokevirtual #59                 // Method org/h2/engine/Session.setLastTriggerIdentity:(Lorg/h2/value/Value;)V
     186: goto          195
     189: aload_1
     190: aload         6
     192: invokevirtual #58                 // Method org/h2/engine/Session.setLastScopeIdentity:(Lorg/h2/value/Value;)V
     195: iload_2
     196: bipush        8
     198: if_icmpeq     208
     201: aload_1
     202: iload         5
     204: invokevirtual #54                 // Method org/h2/engine/Session.setCommitOrRollbackDisabled:(Z)Z
     207: pop
     208: aload         8
     210: athrow
     211: return
    Exception table:
       from    to  target type
          58    71   116   Class java/lang/Throwable
          58    71   164   any
         116   166   164   any

  private static java.lang.Object[] convertToObjectList(org.h2.result.Row);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: invokeinterface #61,  1           // InterfaceMethod org/h2/result/Row.getColumnCount:()I
      12: istore_1
      13: iload_1
      14: anewarray     #46                 // class java/lang/Object
      17: astore_2
      18: iconst_0
      19: istore_3
      20: iload_3
      21: iload_1
      22: if_icmpge     44
      25: aload_2
      26: iload_3
      27: aload_0
      28: iload_3
      29: invokeinterface #62,  2           // InterfaceMethod org/h2/result/Row.getValue:(I)Lorg/h2/value/Value;
      34: invokevirtual #63                 // Method org/h2/value/Value.getObject:()Ljava/lang/Object;
      37: aastore
      38: iinc          3, 1
      41: goto          20
      44: aload_2
      45: areturn

  public boolean fireRow(org.h2.engine.Session, org.h2.table.Table, org.h2.result.Row, org.h2.result.Row, boolean, boolean);
    Code:
       0: aload_0
       1: getfield      #53                 // Field rowBased:Z
       4: ifeq          16
       7: aload_0
       8: getfield      #7                  // Field before:Z
      11: iload         5
      13: if_icmpeq     18
      16: iconst_0
      17: ireturn
      18: iload         6
      20: ifeq          32
      23: aload_0
      24: getfield      #64                 // Field onRollback:Z
      27: ifne          32
      30: iconst_0
      31: ireturn
      32: aload_0
      33: invokespecial #52                 // Method load:()V
      36: iconst_0
      37: istore        9
      39: aload_0
      40: getfield      #22                 // Field typeMask:I
      43: iconst_1
      44: iand
      45: ifeq          60
      48: aload_3
      49: ifnonnull     60
      52: aload         4
      54: ifnull        60
      57: iconst_1
      58: istore        9
      60: aload_0
      61: getfield      #22                 // Field typeMask:I
      64: iconst_2
      65: iand
      66: ifeq          81
      69: aload_3
      70: ifnull        81
      73: aload         4
      75: ifnull        81
      78: iconst_1
      79: istore        9
      81: aload_0
      82: getfield      #22                 // Field typeMask:I
      85: iconst_4
      86: iand
      87: ifeq          102
      90: aload_3
      91: ifnull        102
      94: aload         4
      96: ifnonnull     102
      99: iconst_1
     100: istore        9
     102: iload         9
     104: ifne          109
     107: iconst_0
     108: ireturn
     109: aload_3
     110: invokestatic  #65                 // Method convertToObjectList:(Lorg/h2/result/Row;)[Ljava/lang/Object;
     113: astore        7
     115: aload         4
     117: invokestatic  #65                 // Method convertToObjectList:(Lorg/h2/result/Row;)[Ljava/lang/Object;
     120: astore        8
     122: aload_0
     123: getfield      #7                  // Field before:Z
     126: ifeq          147
     129: aload         8
     131: ifnull        147
     134: aload         8
     136: aload         8
     138: arraylength
     139: invokestatic  #66                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
     142: astore        10
     144: goto          150
     147: aconst_null
     148: astore        10
     150: aload_1
     151: iconst_0
     152: invokevirtual #12                 // Method org/h2/engine/Session.createConnection:(Z)Lorg/h2/jdbc/JdbcConnection;
     155: astore        11
     157: aload_1
     158: invokevirtual #67                 // Method org/h2/engine/Session.getAutoCommit:()Z
     161: istore        12
     163: aload_1
     164: iconst_1
     165: invokevirtual #54                 // Method org/h2/engine/Session.setCommitOrRollbackDisabled:(Z)Z
     168: istore        13
     170: aload_1
     171: invokevirtual #55                 // Method org/h2/engine/Session.getLastScopeIdentity:()Lorg/h2/value/Value;
     174: astore        14
     176: aload_1
     177: iconst_0
     178: invokevirtual #68                 // Method org/h2/engine/Session.setAutoCommit:(Z)V
     181: aload_0
     182: getfield      #9                  // Field triggerCallback:Lorg/h2/api/Trigger;
     185: aload         11
     187: aload         7
     189: aload         8
     191: invokeinterface #56,  4           // InterfaceMethod org/h2/api/Trigger.fire:(Ljava/sql/Connection;[Ljava/lang/Object;[Ljava/lang/Object;)V
     196: aload         10
     198: ifnull        268
     201: iconst_0
     202: istore        15
     204: iload         15
     206: aload         8
     208: arraylength
     209: if_icmpge     268
     212: aload         8
     214: iload         15
     216: aaload
     217: astore        16
     219: aload         16
     221: aload         10
     223: iload         15
     225: aaload
     226: if_acmpeq     262
     229: aload_1
     230: aload         16
     232: iconst_m1
     233: invokestatic  #69                 // Method org/h2/value/DataType.convertToValue:(Lorg/h2/engine/SessionInterface;Ljava/lang/Object;I)Lorg/h2/value/Value;
     236: astore        17
     238: aload_1
     239: invokevirtual #70                 // Method org/h2/engine/Session.getGeneratedKeys:()Lorg/h2/engine/GeneratedKeys;
     242: aload_2
     243: iload         15
     245: invokevirtual #71                 // Method org/h2/table/Table.getColumn:(I)Lorg/h2/table/Column;
     248: invokevirtual #72                 // Method org/h2/engine/GeneratedKeys.add:(Lorg/h2/table/Column;)V
     251: aload         4
     253: iload         15
     255: aload         17
     257: invokeinterface #73,  3           // InterfaceMethod org/h2/result/Row.setValue:(ILorg/h2/value/Value;)V
     262: iinc          15, 1
     265: goto          204
     268: aload_1
     269: invokevirtual #57                 // Method org/h2/engine/Session.getLastTriggerIdentity:()Lorg/h2/value/Value;
     272: ifnull        291
     275: aload_1
     276: aload_1
     277: invokevirtual #57                 // Method org/h2/engine/Session.getLastTriggerIdentity:()Lorg/h2/value/Value;
     280: invokevirtual #58                 // Method org/h2/engine/Session.setLastScopeIdentity:(Lorg/h2/value/Value;)V
     283: aload_1
     284: aconst_null
     285: invokevirtual #59                 // Method org/h2/engine/Session.setLastTriggerIdentity:(Lorg/h2/value/Value;)V
     288: goto          297
     291: aload_1
     292: aload         14
     294: invokevirtual #58                 // Method org/h2/engine/Session.setLastScopeIdentity:(Lorg/h2/value/Value;)V
     297: aload_1
     298: iload         13
     300: invokevirtual #54                 // Method org/h2/engine/Session.setCommitOrRollbackDisabled:(Z)Z
     303: pop
     304: aload_1
     305: iload         12
     307: invokevirtual #68                 // Method org/h2/engine/Session.setAutoCommit:(Z)V
     310: goto          423
     313: astore        15
     315: aload_0
     316: getfield      #64                 // Field onRollback:Z
     319: ifeq          325
     322: goto          331
     325: aload         15
     327: invokestatic  #74                 // Method org/h2/message/DbException.convert:(Ljava/lang/Throwable;)Lorg/h2/message/DbException;
     330: athrow
     331: aload_1
     332: invokevirtual #57                 // Method org/h2/engine/Session.getLastTriggerIdentity:()Lorg/h2/value/Value;
     335: ifnull        354
     338: aload_1
     339: aload_1
     340: invokevirtual #57                 // Method org/h2/engine/Session.getLastTriggerIdentity:()Lorg/h2/value/Value;
     343: invokevirtual #58                 // Method org/h2/engine/Session.setLastScopeIdentity:(Lorg/h2/value/Value;)V
     346: aload_1
     347: aconst_null
     348: invokevirtual #59                 // Method org/h2/engine/Session.setLastTriggerIdentity:(Lorg/h2/value/Value;)V
     351: goto          360
     354: aload_1
     355: aload         14
     357: invokevirtual #58                 // Method org/h2/engine/Session.setLastScopeIdentity:(Lorg/h2/value/Value;)V
     360: aload_1
     361: iload         13
     363: invokevirtual #54                 // Method org/h2/engine/Session.setCommitOrRollbackDisabled:(Z)Z
     366: pop
     367: aload_1
     368: iload         12
     370: invokevirtual #68                 // Method org/h2/engine/Session.setAutoCommit:(Z)V
     373: goto          423
     376: astore        18
     378: aload_1
     379: invokevirtual #57                 // Method org/h2/engine/Session.getLastTriggerIdentity:()Lorg/h2/value/Value;
     382: ifnull        401
     385: aload_1
     386: aload_1
     387: invokevirtual #57                 // Method org/h2/engine/Session.getLastTriggerIdentity:()Lorg/h2/value/Value;
     390: invokevirtual #58                 // Method org/h2/engine/Session.setLastScopeIdentity:(Lorg/h2/value/Value;)V
     393: aload_1
     394: aconst_null
     395: invokevirtual #59                 // Method org/h2/engine/Session.setLastTriggerIdentity:(Lorg/h2/value/Value;)V
     398: goto          407
     401: aload_1
     402: aload         14
     404: invokevirtual #58                 // Method org/h2/engine/Session.setLastScopeIdentity:(Lorg/h2/value/Value;)V
     407: aload_1
     408: iload         13
     410: invokevirtual #54                 // Method org/h2/engine/Session.setCommitOrRollbackDisabled:(Z)Z
     413: pop
     414: aload_1
     415: iload         12
     417: invokevirtual #68                 // Method org/h2/engine/Session.setAutoCommit:(Z)V
     420: aload         18
     422: athrow
     423: aload_0
     424: getfield      #8                  // Field insteadOf:Z
     427: ireturn
    Exception table:
       from    to  target type
         176   268   313   Class java/lang/Exception
         176   268   376   any
         313   331   376   any
         376   378   376   any

  public void setTypeMask(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field typeMask:I
       5: return

  public void setRowBased(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #53                 // Field rowBased:Z
       5: return

  public void setQueueSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field queueSize:I
       5: return

  public int getQueueSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field queueSize:I
       4: ireturn

  public void setNoWait(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #75                 // Field noWait:Z
       5: return

  public boolean isNoWait();
    Code:
       0: aload_0
       1: getfield      #75                 // Field noWait:Z
       4: ireturn

  public void setOnRollback(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #64                 // Field onRollback:Z
       5: return

  public java.lang.String getDropSQL();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getCreateSQLForCopy(org.h2.table.Table, java.lang.String);
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #76                 // String CREATE FORCE TRIGGER
       6: invokespecial #77                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: astore_3
      10: aload_3
      11: aload_2
      12: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: pop
      16: aload_0
      17: getfield      #8                  // Field insteadOf:Z
      20: ifeq          33
      23: aload_3
      24: ldc           #78                 // String  INSTEAD OF
      26: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: pop
      30: goto          57
      33: aload_0
      34: getfield      #7                  // Field before:Z
      37: ifeq          50
      40: aload_3
      41: ldc           #79                 // String  BEFORE
      43: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: pop
      47: goto          57
      50: aload_3
      51: ldc           #80                 // String  AFTER
      53: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: pop
      57: aload_3
      58: aload_0
      59: invokevirtual #81                 // Method getTypeNameList:()Ljava/lang/String;
      62: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: pop
      66: aload_3
      67: ldc           #82                 // String  ON
      69: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_1
      73: invokevirtual #83                 // Method org/h2/table/Table.getSQL:()Ljava/lang/String;
      76: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: pop
      80: aload_0
      81: getfield      #53                 // Field rowBased:Z
      84: ifeq          94
      87: aload_3
      88: ldc           #84                 // String  FOR EACH ROW
      90: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: pop
      94: aload_0
      95: getfield      #75                 // Field noWait:Z
      98: ifeq          111
     101: aload_3
     102: ldc           #85                 // String  NOWAIT
     104: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: pop
     108: goto          125
     111: aload_3
     112: ldc           #86                 // String  QUEUE
     114: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: aload_0
     118: getfield      #2                  // Field queueSize:I
     121: invokevirtual #87                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     124: pop
     125: aload_0
     126: getfield      #13                 // Field triggerClassName:Ljava/lang/String;
     129: ifnull        152
     132: aload_3
     133: ldc           #88                 // String  CALL
     135: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload_0
     139: getfield      #13                 // Field triggerClassName:Ljava/lang/String;
     142: invokestatic  #89                 // Method org/h2/command/Parser.quoteIdentifier:(Ljava/lang/String;)Ljava/lang/String;
     145: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: pop
     149: goto          169
     152: aload_3
     153: ldc           #90                 // String  AS
     155: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: aload_0
     159: getfield      #36                 // Field triggerSource:Ljava/lang/String;
     162: invokestatic  #91                 // Method org/h2/util/StringUtils.quoteStringSQL:(Ljava/lang/String;)Ljava/lang/String;
     165: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: pop
     169: aload_3
     170: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     173: areturn

  public java.lang.String getTypeNameList();
    Code:
       0: new           #92                 // class org/h2/util/StatementBuilder
       3: dup
       4: invokespecial #93                 // Method org/h2/util/StatementBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #22                 // Field typeMask:I
      12: iconst_1
      13: iand
      14: ifeq          30
      17: aload_1
      18: ldc           #94                 // String ,
      20: invokevirtual #95                 // Method org/h2/util/StatementBuilder.appendExceptFirst:(Ljava/lang/String;)V
      23: aload_1
      24: ldc           #96                 // String INSERT
      26: invokevirtual #97                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      29: pop
      30: aload_0
      31: getfield      #22                 // Field typeMask:I
      34: iconst_2
      35: iand
      36: ifeq          52
      39: aload_1
      40: ldc           #94                 // String ,
      42: invokevirtual #95                 // Method org/h2/util/StatementBuilder.appendExceptFirst:(Ljava/lang/String;)V
      45: aload_1
      46: ldc           #98                 // String UPDATE
      48: invokevirtual #97                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      51: pop
      52: aload_0
      53: getfield      #22                 // Field typeMask:I
      56: iconst_4
      57: iand
      58: ifeq          74
      61: aload_1
      62: ldc           #94                 // String ,
      64: invokevirtual #95                 // Method org/h2/util/StatementBuilder.appendExceptFirst:(Ljava/lang/String;)V
      67: aload_1
      68: ldc           #99                 // String DELETE
      70: invokevirtual #97                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      73: pop
      74: aload_0
      75: getfield      #22                 // Field typeMask:I
      78: bipush        8
      80: iand
      81: ifeq          97
      84: aload_1
      85: ldc           #94                 // String ,
      87: invokevirtual #95                 // Method org/h2/util/StatementBuilder.appendExceptFirst:(Ljava/lang/String;)V
      90: aload_1
      91: ldc           #100                // String SELECT
      93: invokevirtual #97                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      96: pop
      97: aload_0
      98: getfield      #64                 // Field onRollback:Z
     101: ifeq          117
     104: aload_1
     105: ldc           #94                 // String ,
     107: invokevirtual #95                 // Method org/h2/util/StatementBuilder.appendExceptFirst:(Ljava/lang/String;)V
     110: aload_1
     111: ldc           #101                // String ROLLBACK
     113: invokevirtual #97                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
     116: pop
     117: aload_1
     118: invokevirtual #102                // Method org/h2/util/StatementBuilder.toString:()Ljava/lang/String;
     121: areturn

  public java.lang.String getCreateSQL();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field table:Lorg/h2/table/Table;
       5: aload_0
       6: invokevirtual #103                // Method getSQL:()Ljava/lang/String;
       9: invokevirtual #104                // Method getCreateSQLForCopy:(Lorg/h2/table/Table;Ljava/lang/String;)Ljava/lang/String;
      12: areturn

  public int getType();
    Code:
       0: iconst_4
       1: ireturn

  public void removeChildrenAndResources(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #4                  // Field table:Lorg/h2/table/Table;
       4: aload_0
       5: invokevirtual #105                // Method org/h2/table/Table.removeTrigger:(Lorg/h2/schema/TriggerObject;)V
       8: aload_0
       9: getfield      #10                 // Field database:Lorg/h2/engine/Database;
      12: aload_1
      13: aload_0
      14: invokevirtual #106                // Method getId:()I
      17: invokevirtual #107                // Method org/h2/engine/Database.removeMeta:(Lorg/h2/engine/Session;I)V
      20: aload_0
      21: getfield      #9                  // Field triggerCallback:Lorg/h2/api/Trigger;
      24: ifnull        45
      27: aload_0
      28: getfield      #9                  // Field triggerCallback:Lorg/h2/api/Trigger;
      31: invokeinterface #108,  1          // InterfaceMethod org/h2/api/Trigger.remove:()V
      36: goto          45
      39: astore_2
      40: aload_2
      41: invokestatic  #74                 // Method org/h2/message/DbException.convert:(Ljava/lang/Throwable;)Lorg/h2/message/DbException;
      44: athrow
      45: aload_0
      46: aconst_null
      47: putfield      #4                  // Field table:Lorg/h2/table/Table;
      50: aload_0
      51: aconst_null
      52: putfield      #13                 // Field triggerClassName:Ljava/lang/String;
      55: aload_0
      56: aconst_null
      57: putfield      #36                 // Field triggerSource:Ljava/lang/String;
      60: aload_0
      61: aconst_null
      62: putfield      #9                  // Field triggerCallback:Lorg/h2/api/Trigger;
      65: aload_0
      66: invokevirtual #110                // Method invalidate:()V
      69: return
    Exception table:
       from    to  target type
          27    36    39   Class java/sql/SQLException

  public void checkRename();
    Code:
       0: return

  public org.h2.table.Table getTable();
    Code:
       0: aload_0
       1: getfield      #4                  // Field table:Lorg/h2/table/Table;
       4: areturn

  public boolean isBefore();
    Code:
       0: aload_0
       1: getfield      #7                  // Field before:Z
       4: ireturn

  public java.lang.String getTriggerClassName();
    Code:
       0: aload_0
       1: getfield      #13                 // Field triggerClassName:Ljava/lang/String;
       4: areturn

  public java.lang.String getTriggerSource();
    Code:
       0: aload_0
       1: getfield      #36                 // Field triggerSource:Ljava/lang/String;
       4: areturn

  public void close() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field triggerCallback:Lorg/h2/api/Trigger;
       4: ifnull        16
       7: aload_0
       8: getfield      #9                  // Field triggerCallback:Lorg/h2/api/Trigger;
      11: invokeinterface #111,  1          // InterfaceMethod org/h2/api/Trigger.close:()V
      16: return

  public boolean isSelectTrigger();
    Code:
       0: aload_0
       1: getfield      #22                 // Field typeMask:I
       4: bipush        8
       6: iand
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn
}
