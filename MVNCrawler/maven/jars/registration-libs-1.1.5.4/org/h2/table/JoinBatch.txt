Compiled from "JoinBatch.java"
public final class org.h2.table.JoinBatch {
  static final org.h2.index.Cursor EMPTY_CURSOR;

  static final java.util.concurrent.Future<org.h2.index.Cursor> EMPTY_FUTURE_CURSOR;

  java.util.concurrent.Future<org.h2.index.Cursor> viewTopFutureCursor;

  org.h2.table.JoinBatch$JoinFilter top;

  final org.h2.table.JoinBatch$JoinFilter[] filters;

  boolean batchedSubQuery;

  private boolean started;

  private org.h2.table.JoinBatch$JoinRow current;

  private boolean found;

  private final org.h2.table.TableFilter additionalFilter;

  static final boolean $assertionsDisabled;

  public org.h2.table.JoinBatch(int, org.h2.table.TableFilter);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: bipush        32
       7: if_icmple     16
      10: ldc           #2                  // String Too many tables in join (at most 32 supported).
      12: invokestatic  #3                  // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
      15: athrow
      16: aload_0
      17: iload_1
      18: anewarray     #4                  // class org/h2/table/JoinBatch$JoinFilter
      21: putfield      #5                  // Field filters:[Lorg/h2/table/JoinBatch$JoinFilter;
      24: aload_0
      25: aload_2
      26: putfield      #6                  // Field additionalFilter:Lorg/h2/table/TableFilter;
      29: return

  public org.h2.index.IndexLookupBatch getLookupBatch(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field filters:[Lorg/h2/table/JoinBatch$JoinFilter;
       4: iload_1
       5: aaload
       6: getfield      #7                  // Field org/h2/table/JoinBatch$JoinFilter.lookupBatch:Lorg/h2/index/IndexLookupBatch;
       9: areturn

  public void reset(boolean);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
       5: aload_0
       6: iconst_0
       7: putfield      #9                  // Field started:Z
      10: aload_0
      11: iconst_0
      12: putfield      #10                 // Field found:Z
      15: aload_0
      16: getfield      #5                  // Field filters:[Lorg/h2/table/JoinBatch$JoinFilter;
      19: astore_2
      20: aload_2
      21: arraylength
      22: istore_3
      23: iconst_0
      24: istore        4
      26: iload         4
      28: iload_3
      29: if_icmpge     50
      32: aload_2
      33: iload         4
      35: aaload
      36: astore        5
      38: aload         5
      40: iload_1
      41: invokevirtual #11                 // Method org/h2/table/JoinBatch$JoinFilter.reset:(Z)V
      44: iinc          4, 1
      47: goto          26
      50: iload_1
      51: ifeq          68
      54: aload_0
      55: getfield      #6                  // Field additionalFilter:Lorg/h2/table/TableFilter;
      58: ifnull        68
      61: aload_0
      62: getfield      #6                  // Field additionalFilter:Lorg/h2/table/TableFilter;
      65: invokevirtual #12                 // Method org/h2/table/TableFilter.reset:()V
      68: return

  public void register(org.h2.table.TableFilter, org.h2.index.IndexLookupBatch);
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          18
       6: aload_1
       7: ifnonnull     18
      10: new           #14                 // class java/lang/AssertionError
      13: dup
      14: invokespecial #15                 // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: aload_0
      19: new           #4                  // class org/h2/table/JoinBatch$JoinFilter
      22: dup
      23: aload_2
      24: aload_1
      25: aload_0
      26: getfield      #16                 // Field top:Lorg/h2/table/JoinBatch$JoinFilter;
      29: invokespecial #17                 // Method org/h2/table/JoinBatch$JoinFilter."<init>":(Lorg/h2/index/IndexLookupBatch;Lorg/h2/table/TableFilter;Lorg/h2/table/JoinBatch$JoinFilter;)V
      32: putfield      #16                 // Field top:Lorg/h2/table/JoinBatch$JoinFilter;
      35: aload_0
      36: getfield      #5                  // Field filters:[Lorg/h2/table/JoinBatch$JoinFilter;
      39: aload_0
      40: getfield      #16                 // Field top:Lorg/h2/table/JoinBatch$JoinFilter;
      43: getfield      #18                 // Field org/h2/table/JoinBatch$JoinFilter.id:I
      46: aload_0
      47: getfield      #16                 // Field top:Lorg/h2/table/JoinBatch$JoinFilter;
      50: aastore
      51: return

  public org.h2.value.Value getValue(int, org.h2.table.Column);
    Code:
       0: aload_0
       1: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
      13: iload_1
      14: invokevirtual #19                 // Method org/h2/table/JoinBatch$JoinRow.row:(I)Ljava/lang/Object;
      17: astore_3
      18: getstatic     #13                 // Field $assertionsDisabled:Z
      21: ifne          36
      24: aload_3
      25: ifnonnull     36
      28: new           #14                 // class java/lang/AssertionError
      31: dup
      32: invokespecial #15                 // Method java/lang/AssertionError."<init>":()V
      35: athrow
      36: aload_0
      37: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
      40: iload_1
      41: invokevirtual #20                 // Method org/h2/table/JoinBatch$JoinRow.isRow:(I)Z
      44: ifeq          54
      47: aload_3
      48: checkcast     #21                 // class org/h2/result/Row
      51: goto          63
      54: aload_3
      55: checkcast     #22                 // class org/h2/index/Cursor
      58: invokeinterface #23,  1           // InterfaceMethod org/h2/index/Cursor.get:()Lorg/h2/result/Row;
      63: astore        4
      65: aload_2
      66: invokevirtual #24                 // Method org/h2/table/Column.getColumnId:()I
      69: istore        5
      71: iload         5
      73: iconst_m1
      74: if_icmpne     88
      77: aload         4
      79: invokeinterface #25,  1           // InterfaceMethod org/h2/result/Row.getKey:()J
      84: invokestatic  #26                 // Method org/h2/value/ValueLong.get:(J)Lorg/h2/value/ValueLong;
      87: areturn
      88: aload         4
      90: aload_2
      91: invokevirtual #24                 // Method org/h2/table/Column.getColumnId:()I
      94: invokeinterface #27,  2           // InterfaceMethod org/h2/result/Row.getValue:(I)Lorg/h2/value/Value;
      99: astore        6
     101: aload         6
     103: ifnonnull     139
     106: new           #28                 // class java/lang/StringBuilder
     109: dup
     110: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     113: ldc           #30                 // String value is null:
     115: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: aload_2
     119: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     122: ldc           #33                 // String
     124: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload         4
     129: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     132: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: invokestatic  #35                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
     138: athrow
     139: aload         6
     141: areturn

  private void start();
    Code:
       0: aload_0
       1: new           #36                 // class org/h2/table/JoinBatch$JoinRow
       4: dup
       5: aload_0
       6: getfield      #5                  // Field filters:[Lorg/h2/table/JoinBatch$JoinFilter;
       9: arraylength
      10: anewarray     #37                 // class java/lang/Object
      13: invokespecial #38                 // Method org/h2/table/JoinBatch$JoinRow."<init>":([Ljava/lang/Object;)V
      16: putfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
      19: aload_0
      20: getfield      #39                 // Field batchedSubQuery:Z
      23: ifeq          58
      26: getstatic     #13                 // Field $assertionsDisabled:Z
      29: ifne          47
      32: aload_0
      33: getfield      #40                 // Field viewTopFutureCursor:Ljava/util/concurrent/Future;
      36: ifnonnull     47
      39: new           #14                 // class java/lang/AssertionError
      42: dup
      43: invokespecial #15                 // Method java/lang/AssertionError."<init>":()V
      46: athrow
      47: aload_0
      48: getfield      #40                 // Field viewTopFutureCursor:Ljava/util/concurrent/Future;
      51: invokestatic  #41                 // Method get:(Ljava/util/concurrent/Future;)Lorg/h2/index/Cursor;
      54: astore_1
      55: goto          85
      58: aload_0
      59: getfield      #16                 // Field top:Lorg/h2/table/JoinBatch$JoinFilter;
      62: getfield      #42                 // Field org/h2/table/JoinBatch$JoinFilter.filter:Lorg/h2/table/TableFilter;
      65: astore_2
      66: aload_2
      67: invokevirtual #43                 // Method org/h2/table/TableFilter.getIndexCursor:()Lorg/h2/index/IndexCursor;
      70: astore_3
      71: aload_3
      72: aload_2
      73: invokevirtual #44                 // Method org/h2/table/TableFilter.getSession:()Lorg/h2/engine/Session;
      76: aload_2
      77: invokevirtual #45                 // Method org/h2/table/TableFilter.getIndexConditions:()Ljava/util/ArrayList;
      80: invokevirtual #46                 // Method org/h2/index/IndexCursor.find:(Lorg/h2/engine/Session;Ljava/util/ArrayList;)V
      83: aload_3
      84: astore_1
      85: aload_0
      86: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
      89: aload_0
      90: getfield      #16                 // Field top:Lorg/h2/table/JoinBatch$JoinFilter;
      93: getfield      #18                 // Field org/h2/table/JoinBatch$JoinFilter.id:I
      96: aload_1
      97: lconst_0
      98: ldc2_w        #47                 // long 2l
     101: invokevirtual #49                 // Method org/h2/table/JoinBatch$JoinRow.updateRow:(ILjava/lang/Object;JJ)V
     104: new           #36                 // class org/h2/table/JoinBatch$JoinRow
     107: dup
     108: aconst_null
     109: invokespecial #38                 // Method org/h2/table/JoinBatch$JoinRow."<init>":([Ljava/lang/Object;)V
     112: astore_2
     113: aload_2
     114: aload_0
     115: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     118: putfield      #50                 // Field org/h2/table/JoinBatch$JoinRow.next:Lorg/h2/table/JoinBatch$JoinRow;
     121: aload_0
     122: aload_2
     123: putfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     126: return

  public boolean next();
    Code:
       0: aload_0
       1: getfield      #9                  // Field started:Z
       4: ifne          16
       7: aload_0
       8: invokespecial #51                 // Method start:()V
      11: aload_0
      12: iconst_1
      13: putfield      #9                  // Field started:Z
      16: aload_0
      17: getfield      #6                  // Field additionalFilter:Lorg/h2/table/TableFilter;
      20: ifnonnull     58
      23: aload_0
      24: invokespecial #52                 // Method batchedNext:()Z
      27: ifeq          56
      30: getstatic     #13                 // Field $assertionsDisabled:Z
      33: ifne          54
      36: aload_0
      37: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
      40: invokevirtual #53                 // Method org/h2/table/JoinBatch$JoinRow.isComplete:()Z
      43: ifne          54
      46: new           #14                 // class java/lang/AssertionError
      49: dup
      50: invokespecial #15                 // Method java/lang/AssertionError."<init>":()V
      53: athrow
      54: iconst_1
      55: ireturn
      56: iconst_0
      57: ireturn
      58: aload_0
      59: getfield      #10                 // Field found:Z
      62: ifne          110
      65: aload_0
      66: invokespecial #52                 // Method batchedNext:()Z
      69: ifne          74
      72: iconst_0
      73: ireturn
      74: getstatic     #13                 // Field $assertionsDisabled:Z
      77: ifne          98
      80: aload_0
      81: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
      84: invokevirtual #53                 // Method org/h2/table/JoinBatch$JoinRow.isComplete:()Z
      87: ifne          98
      90: new           #14                 // class java/lang/AssertionError
      93: dup
      94: invokespecial #15                 // Method java/lang/AssertionError."<init>":()V
      97: athrow
      98: aload_0
      99: iconst_1
     100: putfield      #10                 // Field found:Z
     103: aload_0
     104: getfield      #6                  // Field additionalFilter:Lorg/h2/table/TableFilter;
     107: invokevirtual #12                 // Method org/h2/table/TableFilter.reset:()V
     110: aload_0
     111: getfield      #6                  // Field additionalFilter:Lorg/h2/table/TableFilter;
     114: invokevirtual #54                 // Method org/h2/table/TableFilter.next:()Z
     117: ifeq          122
     120: iconst_1
     121: ireturn
     122: aload_0
     123: iconst_0
     124: putfield      #10                 // Field found:Z
     127: goto          58

  private static org.h2.index.Cursor get(java.util.concurrent.Future<org.h2.index.Cursor>);
    Code:
       0: aload_0
       1: invokeinterface #55,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
       6: checkcast     #22                 // class org/h2/index/Cursor
       9: astore_1
      10: goto          19
      13: astore_2
      14: aload_2
      15: invokestatic  #57                 // Method org/h2/message/DbException.convert:(Ljava/lang/Throwable;)Lorg/h2/message/DbException;
      18: athrow
      19: aload_1
      20: ifnonnull     29
      23: getstatic     #58                 // Field EMPTY_CURSOR:Lorg/h2/index/Cursor;
      26: goto          30
      29: aload_1
      30: areturn
    Exception table:
       from    to  target type
           0    10    13   Class java/lang/Exception

  private boolean batchedNext();
    Code:
       0: aload_0
       1: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_0
      11: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
      14: getfield      #50                 // Field org/h2/table/JoinBatch$JoinRow.next:Lorg/h2/table/JoinBatch$JoinRow;
      17: putfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
      20: aload_0
      21: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
      24: ifnonnull     29
      27: iconst_0
      28: ireturn
      29: aload_0
      30: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
      33: aconst_null
      34: putfield      #59                 // Field org/h2/table/JoinBatch$JoinRow.prev:Lorg/h2/table/JoinBatch$JoinRow;
      37: aload_0
      38: getfield      #5                  // Field filters:[Lorg/h2/table/JoinBatch$JoinFilter;
      41: arraylength
      42: iconst_1
      43: isub
      44: istore_1
      45: iload_1
      46: istore_2
      47: aload_0
      48: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
      51: iload_2
      52: invokevirtual #19                 // Method org/h2/table/JoinBatch$JoinRow.row:(I)Ljava/lang/Object;
      55: ifnonnull     64
      58: iinc          2, -1
      61: goto          47
      64: aload_0
      65: iload_2
      66: invokespecial #60                 // Method fetchCurrent:(I)V
      69: aload_0
      70: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
      73: invokevirtual #61                 // Method org/h2/table/JoinBatch$JoinRow.isDropped:()Z
      76: ifne          136
      79: iload_2
      80: iload_1
      81: if_icmpne     86
      84: iconst_1
      85: ireturn
      86: aload_0
      87: getfield      #5                  // Field filters:[Lorg/h2/table/JoinBatch$JoinFilter;
      90: iload_2
      91: iconst_1
      92: iadd
      93: aaload
      94: astore_3
      95: aload_3
      96: invokevirtual #62                 // Method org/h2/table/JoinBatch$JoinFilter.isBatchFull:()Z
      99: ifeq          114
     102: aload_0
     103: aload_3
     104: aload_0
     105: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     108: invokevirtual #63                 // Method org/h2/table/JoinBatch$JoinFilter.find:(Lorg/h2/table/JoinBatch$JoinRow;)Lorg/h2/table/JoinBatch$JoinRow;
     111: putfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     114: aload_0
     115: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     118: aload_3
     119: getfield      #18                 // Field org/h2/table/JoinBatch$JoinFilter.id:I
     122: invokevirtual #19                 // Method org/h2/table/JoinBatch$JoinRow.row:(I)Ljava/lang/Object;
     125: ifnull        136
     128: aload_3
     129: getfield      #18                 // Field org/h2/table/JoinBatch$JoinFilter.id:I
     132: istore_2
     133: goto          64
     136: aload_0
     137: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     140: getfield      #50                 // Field org/h2/table/JoinBatch$JoinRow.next:Lorg/h2/table/JoinBatch$JoinRow;
     143: ifnonnull     258
     146: aload_0
     147: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     150: invokevirtual #61                 // Method org/h2/table/JoinBatch$JoinRow.isDropped:()Z
     153: ifeq          176
     156: aload_0
     157: aload_0
     158: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     161: getfield      #59                 // Field org/h2/table/JoinBatch$JoinRow.prev:Lorg/h2/table/JoinBatch$JoinRow;
     164: putfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     167: aload_0
     168: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     171: ifnonnull     176
     174: iconst_0
     175: ireturn
     176: getstatic     #13                 // Field $assertionsDisabled:Z
     179: ifne          200
     182: aload_0
     183: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     186: invokevirtual #61                 // Method org/h2/table/JoinBatch$JoinRow.isDropped:()Z
     189: ifeq          200
     192: new           #14                 // class java/lang/AssertionError
     195: dup
     196: invokespecial #15                 // Method java/lang/AssertionError."<init>":()V
     199: athrow
     200: getstatic     #13                 // Field $assertionsDisabled:Z
     203: ifne          219
     206: iload_2
     207: iload_1
     208: if_icmpne     219
     211: new           #14                 // class java/lang/AssertionError
     214: dup
     215: invokespecial #15                 // Method java/lang/AssertionError."<init>":()V
     218: athrow
     219: iconst_0
     220: istore_2
     221: aload_0
     222: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     225: iload_2
     226: invokevirtual #19                 // Method org/h2/table/JoinBatch$JoinRow.row:(I)Ljava/lang/Object;
     229: ifnull        238
     232: iinc          2, 1
     235: goto          221
     238: aload_0
     239: aload_0
     240: getfield      #5                  // Field filters:[Lorg/h2/table/JoinBatch$JoinFilter;
     243: iload_2
     244: aaload
     245: aload_0
     246: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     249: invokevirtual #63                 // Method org/h2/table/JoinBatch$JoinFilter.find:(Lorg/h2/table/JoinBatch$JoinRow;)Lorg/h2/table/JoinBatch$JoinRow;
     252: putfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     255: goto          64
     258: aload_0
     259: aload_0
     260: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     263: getfield      #50                 // Field org/h2/table/JoinBatch$JoinRow.next:Lorg/h2/table/JoinBatch$JoinRow;
     266: putfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     269: getstatic     #13                 // Field $assertionsDisabled:Z
     272: ifne          294
     275: aload_0
     276: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     279: iload_2
     280: invokevirtual #20                 // Method org/h2/table/JoinBatch$JoinRow.isRow:(I)Z
     283: ifeq          294
     286: new           #14                 // class java/lang/AssertionError
     289: dup
     290: invokespecial #15                 // Method java/lang/AssertionError."<init>":()V
     293: athrow
     294: aload_0
     295: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     298: iload_2
     299: invokevirtual #19                 // Method org/h2/table/JoinBatch$JoinRow.row:(I)Ljava/lang/Object;
     302: ifnonnull     64
     305: getstatic     #13                 // Field $assertionsDisabled:Z
     308: ifne          330
     311: iload_2
     312: aload_0
     313: getfield      #16                 // Field top:Lorg/h2/table/JoinBatch$JoinFilter;
     316: getfield      #18                 // Field org/h2/table/JoinBatch$JoinFilter.id:I
     319: if_icmpne     330
     322: new           #14                 // class java/lang/AssertionError
     325: dup
     326: invokespecial #15                 // Method java/lang/AssertionError."<init>":()V
     329: athrow
     330: iinc          2, -1
     333: getstatic     #13                 // Field $assertionsDisabled:Z
     336: ifne          294
     339: aload_0
     340: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     343: iload_2
     344: invokevirtual #20                 // Method org/h2/table/JoinBatch$JoinRow.isRow:(I)Z
     347: ifeq          294
     350: new           #14                 // class java/lang/AssertionError
     353: dup
     354: invokespecial #15                 // Method java/lang/AssertionError."<init>":()V
     357: athrow

  private void fetchCurrent(int);
    Code:
       0: getstatic     #13                 // Field $assertionsDisabled:Z
       3: ifne          40
       6: aload_0
       7: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
      10: getfield      #59                 // Field org/h2/table/JoinBatch$JoinRow.prev:Lorg/h2/table/JoinBatch$JoinRow;
      13: ifnull        40
      16: aload_0
      17: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
      20: getfield      #59                 // Field org/h2/table/JoinBatch$JoinRow.prev:Lorg/h2/table/JoinBatch$JoinRow;
      23: iload_1
      24: invokevirtual #20                 // Method org/h2/table/JoinBatch$JoinRow.isRow:(I)Z
      27: ifne          40
      30: new           #14                 // class java/lang/AssertionError
      33: dup
      34: ldc           #64                 // String prev must be already fetched
      36: invokespecial #65                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      39: athrow
      40: getstatic     #13                 // Field $assertionsDisabled:Z
      43: ifne          73
      46: iload_1
      47: ifeq          73
      50: aload_0
      51: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
      54: iload_1
      55: iconst_1
      56: isub
      57: invokevirtual #20                 // Method org/h2/table/JoinBatch$JoinRow.isRow:(I)Z
      60: ifne          73
      63: new           #14                 // class java/lang/AssertionError
      66: dup
      67: ldc           #66                 // String left must be already fetched
      69: invokespecial #65                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      72: athrow
      73: getstatic     #13                 // Field $assertionsDisabled:Z
      76: ifne          100
      79: aload_0
      80: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
      83: iload_1
      84: invokevirtual #20                 // Method org/h2/table/JoinBatch$JoinRow.isRow:(I)Z
      87: ifeq          100
      90: new           #14                 // class java/lang/AssertionError
      93: dup
      94: ldc           #67                 // String double fetching
      96: invokespecial #65                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      99: athrow
     100: aload_0
     101: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     104: iload_1
     105: invokevirtual #19                 // Method org/h2/table/JoinBatch$JoinRow.row:(I)Ljava/lang/Object;
     108: astore_2
     109: getstatic     #13                 // Field $assertionsDisabled:Z
     112: ifne          129
     115: aload_2
     116: ifnonnull     129
     119: new           #14                 // class java/lang/AssertionError
     122: dup
     123: ldc           #68                 // String x null
     125: invokespecial #65                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     128: athrow
     129: aload_2
     130: getstatic     #58                 // Field EMPTY_CURSOR:Lorg/h2/index/Cursor;
     133: if_acmpne     140
     136: iconst_1
     137: goto          141
     140: iconst_0
     141: istore_3
     142: iload_3
     143: ifeq          158
     146: iload_1
     147: ifne          192
     150: aload_0
     151: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     154: invokevirtual #69                 // Method org/h2/table/JoinBatch$JoinRow.drop:()V
     157: return
     158: aload_0
     159: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     162: iload_1
     163: invokevirtual #70                 // Method org/h2/table/JoinBatch$JoinRow.isFuture:(I)Z
     166: ifeq          192
     169: aload_2
     170: checkcast     #71                 // class java/util/concurrent/Future
     173: invokestatic  #41                 // Method get:(Ljava/util/concurrent/Future;)Lorg/h2/index/Cursor;
     176: astore_2
     177: aload_0
     178: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     181: iload_1
     182: aload_2
     183: lconst_1
     184: ldc2_w        #47                 // long 2l
     187: invokevirtual #49                 // Method org/h2/table/JoinBatch$JoinRow.updateRow:(ILjava/lang/Object;JJ)V
     190: iconst_1
     191: istore_3
     192: aload_0
     193: getfield      #5                  // Field filters:[Lorg/h2/table/JoinBatch$JoinFilter;
     196: iload_1
     197: aaload
     198: astore        4
     200: aload_2
     201: checkcast     #22                 // class org/h2/index/Cursor
     204: astore        5
     206: getstatic     #13                 // Field $assertionsDisabled:Z
     209: ifne          225
     212: aload         5
     214: ifnonnull     225
     217: new           #14                 // class java/lang/AssertionError
     220: dup
     221: invokespecial #15                 // Method java/lang/AssertionError."<init>":()V
     224: athrow
     225: aload         4
     227: getfield      #72                 // Field org/h2/table/JoinBatch$JoinFilter.join:Lorg/h2/table/JoinBatch$JoinFilter;
     230: astore        6
     232: aload         5
     234: ifnull        247
     237: aload         5
     239: invokeinterface #73,  1           // InterfaceMethod org/h2/index/Cursor.next:()Z
     244: ifne          294
     247: iload_3
     248: ifeq          286
     251: aload         4
     253: invokevirtual #74                 // Method org/h2/table/JoinBatch$JoinFilter.isOuterJoin:()Z
     256: ifeq          286
     259: aload_0
     260: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     263: iload_1
     264: aload         4
     266: invokevirtual #75                 // Method org/h2/table/JoinBatch$JoinFilter.getNullRow:()Lorg/h2/result/Row;
     269: ldc2_w        #47                 // long 2l
     272: ldc2_w        #76                 // long 3l
     275: invokevirtual #49                 // Method org/h2/table/JoinBatch$JoinRow.updateRow:(ILjava/lang/Object;JJ)V
     278: aconst_null
     279: astore        5
     281: iconst_0
     282: istore_3
     283: goto          294
     286: aload_0
     287: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     290: invokevirtual #69                 // Method org/h2/table/JoinBatch$JoinRow.drop:()V
     293: return
     294: aload         4
     296: aload         5
     298: ifnonnull     305
     301: iconst_1
     302: goto          306
     305: iconst_0
     306: invokevirtual #78                 // Method org/h2/table/JoinBatch$JoinFilter.isOk:(Z)Z
     309: ifne          315
     312: goto          232
     315: iconst_0
     316: istore        7
     318: aload         6
     320: ifnull        342
     323: aload         6
     325: invokevirtual #79                 // Method org/h2/table/JoinBatch$JoinFilter.collectSearchRows:()Z
     328: ifne          342
     331: aload         6
     333: invokevirtual #74                 // Method org/h2/table/JoinBatch$JoinFilter.isOuterJoin:()Z
     336: ifeq          232
     339: iconst_1
     340: istore        7
     342: aload         5
     344: ifnull        380
     347: aload_0
     348: aload_0
     349: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     352: iload_1
     353: invokevirtual #80                 // Method org/h2/table/JoinBatch$JoinRow.copyBehind:(I)Lorg/h2/table/JoinBatch$JoinRow;
     356: putfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     359: aload_0
     360: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     363: iload_1
     364: aload         5
     366: invokeinterface #23,  1           // InterfaceMethod org/h2/index/Cursor.get:()Lorg/h2/result/Row;
     371: ldc2_w        #47                 // long 2l
     374: ldc2_w        #76                 // long 3l
     377: invokevirtual #49                 // Method org/h2/table/JoinBatch$JoinRow.updateRow:(ILjava/lang/Object;JJ)V
     380: iload         7
     382: ifeq          404
     385: aload_0
     386: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
     389: aload         6
     391: getfield      #18                 // Field org/h2/table/JoinBatch$JoinFilter.id:I
     394: getstatic     #58                 // Field EMPTY_CURSOR:Lorg/h2/index/Cursor;
     397: lconst_0
     398: ldc2_w        #47                 // long 2l
     401: invokevirtual #49                 // Method org/h2/table/JoinBatch$JoinRow.updateRow:(ILjava/lang/Object;JJ)V
     404: return

  private org.h2.index.IndexLookupBatch viewIndexLookupBatch(org.h2.index.ViewIndex);
    Code:
       0: new           #81                 // class org/h2/table/JoinBatch$ViewIndexLookupBatch
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #82                 // Method org/h2/table/JoinBatch$ViewIndexLookupBatch."<init>":(Lorg/h2/table/JoinBatch;Lorg/h2/index/ViewIndex;)V
       9: areturn

  public static org.h2.index.IndexLookupBatch createViewIndexLookupBatch(org.h2.index.ViewIndex);
    Code:
       0: aload_0
       1: invokevirtual #83                 // Method org/h2/index/ViewIndex.getQuery:()Lorg/h2/command/dml/Query;
       4: astore_1
       5: aload_1
       6: invokevirtual #84                 // Method org/h2/command/dml/Query.isUnion:()Z
       9: ifeq          34
      12: new           #85                 // class org/h2/table/JoinBatch$ViewIndexLookupBatchUnion
      15: dup
      16: aload_0
      17: invokespecial #86                 // Method org/h2/table/JoinBatch$ViewIndexLookupBatchUnion."<init>":(Lorg/h2/index/ViewIndex;)V
      20: astore_2
      21: aload_2
      22: invokevirtual #87                 // Method org/h2/table/JoinBatch$ViewIndexLookupBatchUnion.initialize:()Z
      25: ifeq          32
      28: aload_2
      29: goto          33
      32: aconst_null
      33: areturn
      34: aload_1
      35: checkcast     #88                 // class org/h2/command/dml/Select
      38: invokevirtual #89                 // Method org/h2/command/dml/Select.getJoinBatch:()Lorg/h2/table/JoinBatch;
      41: astore_2
      42: aload_2
      43: ifnull        54
      46: aload_2
      47: iconst_0
      48: invokevirtual #90                 // Method getLookupBatch:(I)Lorg/h2/index/IndexLookupBatch;
      51: ifnonnull     56
      54: aconst_null
      55: areturn
      56: getstatic     #13                 // Field $assertionsDisabled:Z
      59: ifne          77
      62: aload_2
      63: getfield      #39                 // Field batchedSubQuery:Z
      66: ifeq          77
      69: new           #14                 // class java/lang/AssertionError
      72: dup
      73: invokespecial #15                 // Method java/lang/AssertionError."<init>":()V
      76: athrow
      77: aload_2
      78: iconst_1
      79: putfield      #39                 // Field batchedSubQuery:Z
      82: aload_2
      83: aload_0
      84: invokespecial #91                 // Method viewIndexLookupBatch:(Lorg/h2/index/ViewIndex;)Lorg/h2/index/IndexLookupBatch;
      87: areturn

  public static org.h2.index.IndexLookupBatch createFakeIndexLookupBatch(org.h2.table.TableFilter);
    Code:
       0: new           #92                 // class org/h2/table/JoinBatch$FakeLookupBatch
       3: dup
       4: aload_0
       5: invokespecial #93                 // Method org/h2/table/JoinBatch$FakeLookupBatch."<init>":(Lorg/h2/table/TableFilter;)V
       8: areturn

  public java.lang.String toString();
    Code:
       0: new           #28                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #94                 // String JoinBatch->\nprev->
       9: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
      16: ifnonnull     23
      19: aconst_null
      20: goto          30
      23: aload_0
      24: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
      27: getfield      #59                 // Field org/h2/table/JoinBatch$JoinRow.prev:Lorg/h2/table/JoinBatch$JoinRow;
      30: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: ldc           #95                 // String \n
      35: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #96                 // String curr->
      40: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
      47: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: ldc           #95                 // String \n
      52: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #97                 // String next->
      57: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
      64: ifnonnull     71
      67: aconst_null
      68: goto          78
      71: aload_0
      72: getfield      #8                  // Field current:Lorg/h2/table/JoinBatch$JoinRow;
      75: getfield      #50                 // Field org/h2/table/JoinBatch$JoinRow.next:Lorg/h2/table/JoinBatch$JoinRow;
      78: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: areturn

  static {};
    Code:
       0: ldc_w         #98                 // class org/h2/table/JoinBatch
       3: invokevirtual #99                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #13                 // Field $assertionsDisabled:Z
      17: new           #100                // class org/h2/table/JoinBatch$1
      20: dup
      21: invokespecial #101                // Method org/h2/table/JoinBatch$1."<init>":()V
      24: putstatic     #58                 // Field EMPTY_CURSOR:Lorg/h2/index/Cursor;
      27: new           #102                // class org/h2/util/DoneFuture
      30: dup
      31: getstatic     #58                 // Field EMPTY_CURSOR:Lorg/h2/index/Cursor;
      34: invokespecial #103                // Method org/h2/util/DoneFuture."<init>":(Ljava/lang/Object;)V
      37: putstatic     #104                // Field EMPTY_FUTURE_CURSOR:Ljava/util/concurrent/Future;
      40: return
}
