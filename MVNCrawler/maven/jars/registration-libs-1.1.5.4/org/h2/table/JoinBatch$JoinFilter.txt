Compiled from "JoinBatch.java"
final class org.h2.table.JoinBatch$JoinFilter {
  final org.h2.index.IndexLookupBatch lookupBatch;

  final int id;

  final org.h2.table.JoinBatch$JoinFilter join;

  final org.h2.table.TableFilter filter;

  static final boolean $assertionsDisabled;

  org.h2.table.JoinBatch$JoinFilter(org.h2.index.IndexLookupBatch, org.h2.table.TableFilter, org.h2.table.JoinBatch$JoinFilter);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field filter:Lorg/h2/table/TableFilter;
       9: aload_0
      10: aload_2
      11: invokevirtual #3                  // Method org/h2/table/TableFilter.getJoinFilterId:()I
      14: putfield      #4                  // Field id:I
      17: aload_0
      18: aload_3
      19: putfield      #5                  // Field join:Lorg/h2/table/JoinBatch$JoinFilter;
      22: aload_0
      23: aload_1
      24: putfield      #6                  // Field lookupBatch:Lorg/h2/index/IndexLookupBatch;
      27: getstatic     #7                  // Field $assertionsDisabled:Z
      30: ifne          52
      33: aload_1
      34: ifnonnull     52
      37: aload_0
      38: getfield      #4                  // Field id:I
      41: ifeq          52
      44: new           #8                  // class java/lang/AssertionError
      47: dup
      48: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      51: athrow
      52: return

  void reset(boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field lookupBatch:Lorg/h2/index/IndexLookupBatch;
       4: ifnull        17
       7: aload_0
       8: getfield      #6                  // Field lookupBatch:Lorg/h2/index/IndexLookupBatch;
      11: iload_1
      12: invokeinterface #10,  2           // InterfaceMethod org/h2/index/IndexLookupBatch.reset:(Z)V
      17: return

  org.h2.result.Row getNullRow();
    Code:
       0: aload_0
       1: getfield      #2                  // Field filter:Lorg/h2/table/TableFilter;
       4: invokevirtual #11                 // Method org/h2/table/TableFilter.getTable:()Lorg/h2/table/Table;
       7: invokevirtual #12                 // Method org/h2/table/Table.getNullRow:()Lorg/h2/result/Row;
      10: areturn

  boolean isOuterJoin();
    Code:
       0: aload_0
       1: getfield      #2                  // Field filter:Lorg/h2/table/TableFilter;
       4: invokevirtual #13                 // Method org/h2/table/TableFilter.isJoinOuter:()Z
       7: ireturn

  boolean isBatchFull();
    Code:
       0: aload_0
       1: getfield      #6                  // Field lookupBatch:Lorg/h2/index/IndexLookupBatch;
       4: invokeinterface #14,  1           // InterfaceMethod org/h2/index/IndexLookupBatch.isBatchFull:()Z
       9: ireturn

  boolean isOk(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field filter:Lorg/h2/table/TableFilter;
       4: aload_0
       5: getfield      #2                  // Field filter:Lorg/h2/table/TableFilter;
       8: invokevirtual #15                 // Method org/h2/table/TableFilter.getFilterCondition:()Lorg/h2/expression/Expression;
      11: invokevirtual #16                 // Method org/h2/table/TableFilter.isOk:(Lorg/h2/expression/Expression;)Z
      14: istore_2
      15: aload_0
      16: getfield      #2                  // Field filter:Lorg/h2/table/TableFilter;
      19: aload_0
      20: getfield      #2                  // Field filter:Lorg/h2/table/TableFilter;
      23: invokevirtual #17                 // Method org/h2/table/TableFilter.getJoinCondition:()Lorg/h2/expression/Expression;
      26: invokevirtual #16                 // Method org/h2/table/TableFilter.isOk:(Lorg/h2/expression/Expression;)Z
      29: istore_3
      30: iload_2
      31: ifeq          46
      34: iload_1
      35: ifne          42
      38: iload_3
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  boolean collectSearchRows();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #18                 // Method isBatchFull:()Z
      10: ifeq          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #2                  // Field filter:Lorg/h2/table/TableFilter;
      25: invokevirtual #19                 // Method org/h2/table/TableFilter.getIndexCursor:()Lorg/h2/index/IndexCursor;
      28: astore_1
      29: aload_1
      30: aload_0
      31: getfield      #2                  // Field filter:Lorg/h2/table/TableFilter;
      34: invokevirtual #20                 // Method org/h2/table/TableFilter.getSession:()Lorg/h2/engine/Session;
      37: aload_0
      38: getfield      #2                  // Field filter:Lorg/h2/table/TableFilter;
      41: invokevirtual #21                 // Method org/h2/table/TableFilter.getIndexConditions:()Ljava/util/ArrayList;
      44: invokevirtual #22                 // Method org/h2/index/IndexCursor.prepare:(Lorg/h2/engine/Session;Ljava/util/ArrayList;)V
      47: aload_1
      48: invokevirtual #23                 // Method org/h2/index/IndexCursor.isAlwaysFalse:()Z
      51: ifeq          56
      54: iconst_0
      55: ireturn
      56: aload_0
      57: getfield      #6                  // Field lookupBatch:Lorg/h2/index/IndexLookupBatch;
      60: aload_1
      61: invokevirtual #24                 // Method org/h2/index/IndexCursor.getStart:()Lorg/h2/result/SearchRow;
      64: aload_1
      65: invokevirtual #25                 // Method org/h2/index/IndexCursor.getEnd:()Lorg/h2/result/SearchRow;
      68: invokeinterface #26,  3           // InterfaceMethod org/h2/index/IndexLookupBatch.addSearchRows:(Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)Z
      73: ireturn

  java.util.List<java.util.concurrent.Future<org.h2.index.Cursor>> find();
    Code:
       0: aload_0
       1: getfield      #6                  // Field lookupBatch:Lorg/h2/index/IndexLookupBatch;
       4: invokeinterface #27,  1           // InterfaceMethod org/h2/index/IndexLookupBatch.find:()Ljava/util/List;
       9: areturn

  org.h2.table.JoinBatch$JoinRow find(org.h2.table.JoinBatch$JoinRow);
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          18
       6: aload_1
       7: ifnonnull     18
      10: new           #8                  // class java/lang/AssertionError
      13: dup
      14: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: aload_0
      19: getfield      #6                  // Field lookupBatch:Lorg/h2/index/IndexLookupBatch;
      22: invokeinterface #27,  1           // InterfaceMethod org/h2/index/IndexLookupBatch.find:()Ljava/util/List;
      27: astore_2
      28: aload_2
      29: invokeinterface #28,  1           // InterfaceMethod java/util/List.size:()I
      34: istore_3
      35: iload_3
      36: ifle          185
      39: getstatic     #7                  // Field $assertionsDisabled:Z
      42: ifne          66
      45: aload_1
      46: aload_0
      47: getfield      #4                  // Field id:I
      50: iconst_1
      51: isub
      52: invokevirtual #29                 // Method org/h2/table/JoinBatch$JoinRow.isRow:(I)Z
      55: ifne          66
      58: new           #8                  // class java/lang/AssertionError
      61: dup
      62: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      65: athrow
      66: aload_1
      67: aload_0
      68: getfield      #4                  // Field id:I
      71: invokevirtual #30                 // Method org/h2/table/JoinBatch$JoinRow.row:(I)Ljava/lang/Object;
      74: getstatic     #31                 // Field org/h2/table/JoinBatch.EMPTY_CURSOR:Lorg/h2/index/Cursor;
      77: if_acmpne     88
      80: aload_1
      81: getfield      #32                 // Field org/h2/table/JoinBatch$JoinRow.prev:Lorg/h2/table/JoinBatch$JoinRow;
      84: astore_1
      85: goto          35
      88: getstatic     #7                  // Field $assertionsDisabled:Z
      91: ifne          113
      94: aload_1
      95: aload_0
      96: getfield      #4                  // Field id:I
      99: invokevirtual #30                 // Method org/h2/table/JoinBatch$JoinRow.row:(I)Ljava/lang/Object;
     102: ifnull        113
     105: new           #8                  // class java/lang/AssertionError
     108: dup
     109: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
     112: athrow
     113: aload_2
     114: iinc          3, -1
     117: iload_3
     118: invokeinterface #33,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     123: checkcast     #34                 // class java/util/concurrent/Future
     126: astore        4
     128: aload         4
     130: ifnonnull     151
     133: aload_1
     134: aload_0
     135: getfield      #4                  // Field id:I
     138: getstatic     #31                 // Field org/h2/table/JoinBatch.EMPTY_CURSOR:Lorg/h2/index/Cursor;
     141: lconst_0
     142: ldc2_w        #35                 // long 2l
     145: invokevirtual #37                 // Method org/h2/table/JoinBatch$JoinRow.updateRow:(ILjava/lang/Object;JJ)V
     148: goto          163
     151: aload_1
     152: aload_0
     153: getfield      #4                  // Field id:I
     156: aload         4
     158: lconst_0
     159: lconst_1
     160: invokevirtual #37                 // Method org/h2/table/JoinBatch$JoinRow.updateRow:(ILjava/lang/Object;JJ)V
     163: aload_1
     164: getfield      #32                 // Field org/h2/table/JoinBatch$JoinRow.prev:Lorg/h2/table/JoinBatch$JoinRow;
     167: ifnull        185
     170: iload_3
     171: ifne          177
     174: goto          185
     177: aload_1
     178: getfield      #32                 // Field org/h2/table/JoinBatch$JoinRow.prev:Lorg/h2/table/JoinBatch$JoinRow;
     181: astore_1
     182: goto          35
     185: aload_1
     186: getfield      #32                 // Field org/h2/table/JoinBatch$JoinRow.prev:Lorg/h2/table/JoinBatch$JoinRow;
     189: ifnull        217
     192: aload_1
     193: getfield      #32                 // Field org/h2/table/JoinBatch$JoinRow.prev:Lorg/h2/table/JoinBatch$JoinRow;
     196: aload_0
     197: getfield      #4                  // Field id:I
     200: invokevirtual #30                 // Method org/h2/table/JoinBatch$JoinRow.row:(I)Ljava/lang/Object;
     203: getstatic     #31                 // Field org/h2/table/JoinBatch.EMPTY_CURSOR:Lorg/h2/index/Cursor;
     206: if_acmpne     217
     209: aload_1
     210: getfield      #32                 // Field org/h2/table/JoinBatch$JoinRow.prev:Lorg/h2/table/JoinBatch$JoinRow;
     213: astore_1
     214: goto          185
     217: getstatic     #7                  // Field $assertionsDisabled:Z
     220: ifne          252
     223: aload_1
     224: getfield      #32                 // Field org/h2/table/JoinBatch$JoinRow.prev:Lorg/h2/table/JoinBatch$JoinRow;
     227: ifnull        252
     230: aload_1
     231: getfield      #32                 // Field org/h2/table/JoinBatch$JoinRow.prev:Lorg/h2/table/JoinBatch$JoinRow;
     234: aload_0
     235: getfield      #4                  // Field id:I
     238: invokevirtual #29                 // Method org/h2/table/JoinBatch$JoinRow.isRow:(I)Z
     241: ifne          252
     244: new           #8                  // class java/lang/AssertionError
     247: dup
     248: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
     251: athrow
     252: getstatic     #7                  // Field $assertionsDisabled:Z
     255: ifne          277
     258: aload_1
     259: aload_0
     260: getfield      #4                  // Field id:I
     263: invokevirtual #30                 // Method org/h2/table/JoinBatch$JoinRow.row:(I)Ljava/lang/Object;
     266: ifnonnull     277
     269: new           #8                  // class java/lang/AssertionError
     272: dup
     273: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
     276: athrow
     277: getstatic     #7                  // Field $assertionsDisabled:Z
     280: ifne          302
     283: aload_1
     284: aload_0
     285: getfield      #4                  // Field id:I
     288: invokevirtual #29                 // Method org/h2/table/JoinBatch$JoinRow.isRow:(I)Z
     291: ifeq          302
     294: new           #8                  // class java/lang/AssertionError
     297: dup
     298: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
     301: athrow
     302: aload_1
     303: areturn

  public java.lang.String toString();
    Code:
       0: new           #38                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #40                 // String JoinFilter->
       9: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field filter:Lorg/h2/table/TableFilter;
      16: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  static {};
    Code:
       0: ldc_w         #44                 // class org/h2/table/JoinBatch
       3: invokevirtual #45                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #7                  // Field $assertionsDisabled:Z
      17: return
}
