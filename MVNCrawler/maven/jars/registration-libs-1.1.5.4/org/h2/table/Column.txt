Compiled from "Column.java"
public class org.h2.table.Column {
  public static final java.lang.String ROWID;

  public static final int NOT_NULLABLE;

  public static final int NULLABLE;

  public static final int NULLABLE_UNKNOWN;

  private final int type;

  private long precision;

  private int scale;

  private java.lang.String[] enumerators;

  private int displaySize;

  private org.h2.table.Table table;

  private java.lang.String name;

  private int columnId;

  private boolean nullable;

  private org.h2.expression.Expression defaultExpression;

  private org.h2.expression.Expression onUpdateExpression;

  private org.h2.expression.Expression checkConstraint;

  private java.lang.String checkConstraintSQL;

  private java.lang.String originalSQL;

  private boolean autoIncrement;

  private long start;

  private long increment;

  private boolean convertNullToDefault;

  private org.h2.schema.Sequence sequence;

  private boolean isComputed;

  private org.h2.table.TableFilter computeTableFilter;

  private int selectivity;

  private org.h2.table.SingleColumnResolver resolver;

  private java.lang.String comment;

  private boolean primaryKey;

  private boolean visible;

  public org.h2.table.Column(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: ldc2_w        #1                  // long -1l
       6: iconst_m1
       7: iconst_m1
       8: aconst_null
       9: invokespecial #3                  // Method "<init>":(Ljava/lang/String;IJII[Ljava/lang/String;)V
      12: return

  public org.h2.table.Column(java.lang.String, int, long, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: lload_3
       4: iload         5
       6: iload         6
       8: aconst_null
       9: invokespecial #3                  // Method "<init>":(Ljava/lang/String;IJII[Ljava/lang/String;)V
      12: return

  public org.h2.table.Column(java.lang.String, int, long, int, int, java.lang.String[]);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #5                  // Field nullable:Z
       9: aload_0
      10: iconst_1
      11: putfield      #6                  // Field visible:Z
      14: aload_0
      15: aload_1
      16: putfield      #7                  // Field name:Ljava/lang/String;
      19: aload_0
      20: iload_2
      21: putfield      #8                  // Field type:I
      24: lload_3
      25: ldc2_w        #1                  // long -1l
      28: lcmp
      29: ifne          75
      32: iload         5
      34: iconst_m1
      35: if_icmpne     75
      38: iload         6
      40: iconst_m1
      41: if_icmpne     75
      44: iload_2
      45: iconst_m1
      46: if_icmpeq     75
      49: iload_2
      50: invokestatic  #9                  // Method org/h2/value/DataType.getDataType:(I)Lorg/h2/value/DataType;
      53: astore        8
      55: aload         8
      57: getfield      #10                 // Field org/h2/value/DataType.defaultPrecision:J
      60: lstore_3
      61: aload         8
      63: getfield      #11                 // Field org/h2/value/DataType.defaultScale:I
      66: istore        5
      68: aload         8
      70: getfield      #12                 // Field org/h2/value/DataType.defaultDisplaySize:I
      73: istore        6
      75: aload_0
      76: lload_3
      77: putfield      #13                 // Field precision:J
      80: aload_0
      81: iload         5
      83: putfield      #14                 // Field scale:I
      86: aload_0
      87: iload         6
      89: putfield      #15                 // Field displaySize:I
      92: aload_0
      93: aload         7
      95: putfield      #16                 // Field enumerators:[Ljava/lang/String;
      98: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #17                 // class org/h2/table/Column
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #17                 // class org/h2/table/Column
      20: astore_2
      21: aload_0
      22: getfield      #18                 // Field table:Lorg/h2/table/Table;
      25: ifnull        49
      28: aload_2
      29: getfield      #18                 // Field table:Lorg/h2/table/Table;
      32: ifnull        49
      35: aload_0
      36: getfield      #7                  // Field name:Ljava/lang/String;
      39: ifnull        49
      42: aload_2
      43: getfield      #7                  // Field name:Ljava/lang/String;
      46: ifnonnull     51
      49: iconst_0
      50: ireturn
      51: aload_0
      52: getfield      #18                 // Field table:Lorg/h2/table/Table;
      55: aload_2
      56: getfield      #18                 // Field table:Lorg/h2/table/Table;
      59: if_acmpeq     64
      62: iconst_0
      63: ireturn
      64: aload_0
      65: getfield      #7                  // Field name:Ljava/lang/String;
      68: aload_2
      69: getfield      #7                  // Field name:Ljava/lang/String;
      72: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #18                 // Field table:Lorg/h2/table/Table;
       4: ifnull        14
       7: aload_0
       8: getfield      #7                  // Field name:Ljava/lang/String;
      11: ifnonnull     16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: getfield      #18                 // Field table:Lorg/h2/table/Table;
      20: invokevirtual #20                 // Method org/h2/table/Table.getId:()I
      23: aload_0
      24: getfield      #7                  // Field name:Ljava/lang/String;
      27: invokevirtual #21                 // Method java/lang/String.hashCode:()I
      30: ixor
      31: ireturn

  public boolean isEnumerated();
    Code:
       0: aload_0
       1: getfield      #8                  // Field type:I
       4: bipush        25
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public org.h2.table.Column getClone();
    Code:
       0: new           #17                 // class org/h2/table/Column
       3: dup
       4: aload_0
       5: getfield      #7                  // Field name:Ljava/lang/String;
       8: aload_0
       9: getfield      #8                  // Field type:I
      12: aload_0
      13: getfield      #13                 // Field precision:J
      16: aload_0
      17: getfield      #14                 // Field scale:I
      20: aload_0
      21: getfield      #15                 // Field displaySize:I
      24: aload_0
      25: getfield      #16                 // Field enumerators:[Ljava/lang/String;
      28: invokespecial #3                  // Method "<init>":(Ljava/lang/String;IJII[Ljava/lang/String;)V
      31: astore_1
      32: aload_1
      33: aload_0
      34: invokevirtual #22                 // Method copy:(Lorg/h2/table/Column;)V
      37: aload_1
      38: areturn

  public org.h2.value.Value convert(org.h2.value.Value);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #23                 // Method convert:(Lorg/h2/value/Value;Lorg/h2/engine/Mode;)Lorg/h2/value/Value;
       6: areturn

  public org.h2.value.Value convert(org.h2.value.Value, org.h2.engine.Mode);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field type:I
       5: aload_0
       6: getfield      #13                 // Field precision:J
       9: invokestatic  #24                 // Method org/h2/util/MathUtils.convertLongToInt:(J)I
      12: aload_2
      13: aload_0
      14: aload_0
      15: invokevirtual #25                 // Method getEnumerators:()[Ljava/lang/String;
      18: invokevirtual #26                 // Method org/h2/value/Value.convertTo:(IILorg/h2/engine/Mode;Ljava/lang/Object;[Ljava/lang/String;)Lorg/h2/value/Value;
      21: areturn
      22: astore_3
      23: aload_3
      24: invokevirtual #28                 // Method org/h2/message/DbException.getErrorCode:()I
      27: sipush        22018
      30: if_icmpne     139
      33: new           #29                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      40: aload_0
      41: getfield      #18                 // Field table:Lorg/h2/table/Table;
      44: ifnonnull     52
      47: ldc           #31                 // String
      49: goto          77
      52: new           #29                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      59: aload_0
      60: getfield      #18                 // Field table:Lorg/h2/table/Table;
      63: invokevirtual #32                 // Method org/h2/table/Table.getName:()Ljava/lang/String;
      66: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: ldc           #34                 // String :
      71: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_0
      81: invokevirtual #36                 // Method getCreateSQL:()Ljava/lang/String;
      84: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: astore        4
      92: sipush        22018
      95: aload_3
      96: iconst_1
      97: anewarray     #37                 // class java/lang/String
     100: dup
     101: iconst_0
     102: new           #29                 // class java/lang/StringBuilder
     105: dup
     106: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     109: aload_1
     110: invokevirtual #38                 // Method org/h2/value/Value.getSQL:()Ljava/lang/String;
     113: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: ldc           #39                 // String  (
     118: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: aload         4
     123: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: ldc           #40                 // String )
     128: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     134: aastore
     135: invokestatic  #41                 // Method org/h2/message/DbException.get:(ILjava/lang/Throwable;[Ljava/lang/String;)Lorg/h2/message/DbException;
     138: athrow
     139: aload_3
     140: athrow
    Exception table:
       from    to  target type
           0    21    22   Class org/h2/message/DbException

  boolean getComputed();
    Code:
       0: aload_0
       1: getfield      #42                 // Field isComputed:Z
       4: ireturn

  synchronized org.h2.value.Value computeValue(org.h2.engine.Session, org.h2.result.Row);
    Code:
       0: aload_0
       1: getfield      #43                 // Field computeTableFilter:Lorg/h2/table/TableFilter;
       4: aload_1
       5: invokevirtual #44                 // Method org/h2/table/TableFilter.setSession:(Lorg/h2/engine/Session;)V
       8: aload_0
       9: getfield      #43                 // Field computeTableFilter:Lorg/h2/table/TableFilter;
      12: aload_2
      13: invokevirtual #45                 // Method org/h2/table/TableFilter.set:(Lorg/h2/result/Row;)V
      16: aload_0
      17: getfield      #46                 // Field defaultExpression:Lorg/h2/expression/Expression;
      20: aload_1
      21: invokevirtual #47                 // Method org/h2/expression/Expression.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
      24: areturn

  public void setComputedExpression(org.h2.expression.Expression);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #42                 // Field isComputed:Z
       5: aload_0
       6: aload_1
       7: putfield      #46                 // Field defaultExpression:Lorg/h2/expression/Expression;
      10: return

  public void setTable(org.h2.table.Table, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field table:Lorg/h2/table/Table;
       5: aload_0
       6: iload_2
       7: putfield      #48                 // Field columnId:I
      10: return

  public org.h2.table.Table getTable();
    Code:
       0: aload_0
       1: getfield      #18                 // Field table:Lorg/h2/table/Table;
       4: areturn

  public void setDefaultExpression(org.h2.engine.Session, org.h2.expression.Expression);
    Code:
       0: aload_2
       1: ifnull        26
       4: aload_2
       5: aload_1
       6: invokevirtual #49                 // Method org/h2/expression/Expression.optimize:(Lorg/h2/engine/Session;)Lorg/h2/expression/Expression;
       9: astore_2
      10: aload_2
      11: invokevirtual #50                 // Method org/h2/expression/Expression.isConstant:()Z
      14: ifeq          26
      17: aload_2
      18: aload_1
      19: invokevirtual #47                 // Method org/h2/expression/Expression.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
      22: invokestatic  #51                 // Method org/h2/expression/ValueExpression.get:(Lorg/h2/value/Value;)Lorg/h2/expression/ValueExpression;
      25: astore_2
      26: aload_0
      27: aload_2
      28: putfield      #46                 // Field defaultExpression:Lorg/h2/expression/Expression;
      31: return

  public void setOnUpdateExpression(org.h2.engine.Session, org.h2.expression.Expression);
    Code:
       0: aload_2
       1: ifnull        26
       4: aload_2
       5: aload_1
       6: invokevirtual #49                 // Method org/h2/expression/Expression.optimize:(Lorg/h2/engine/Session;)Lorg/h2/expression/Expression;
       9: astore_2
      10: aload_2
      11: invokevirtual #50                 // Method org/h2/expression/Expression.isConstant:()Z
      14: ifeq          26
      17: aload_2
      18: aload_1
      19: invokevirtual #47                 // Method org/h2/expression/Expression.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
      22: invokestatic  #51                 // Method org/h2/expression/ValueExpression.get:(Lorg/h2/value/Value;)Lorg/h2/expression/ValueExpression;
      25: astore_2
      26: aload_0
      27: aload_2
      28: putfield      #52                 // Field onUpdateExpression:Lorg/h2/expression/Expression;
      31: return

  public int getColumnId();
    Code:
       0: aload_0
       1: getfield      #48                 // Field columnId:I
       4: ireturn

  public java.lang.String getSQL();
    Code:
       0: aload_0
       1: getfield      #7                  // Field name:Ljava/lang/String;
       4: invokestatic  #53                 // Method org/h2/command/Parser.quoteIdentifier:(Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field name:Ljava/lang/String;
       4: areturn

  public int getType();
    Code:
       0: aload_0
       1: getfield      #8                  // Field type:I
       4: ireturn

  public long getPrecision();
    Code:
       0: aload_0
       1: getfield      #13                 // Field precision:J
       4: lreturn

  public void setPrecision(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #13                 // Field precision:J
       5: return

  public int getDisplaySize();
    Code:
       0: aload_0
       1: getfield      #15                 // Field displaySize:I
       4: ireturn

  public int getScale();
    Code:
       0: aload_0
       1: getfield      #14                 // Field scale:I
       4: ireturn

  public void setNullable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field nullable:Z
       5: return

  public java.lang.String[] getEnumerators();
    Code:
       0: aload_0
       1: getfield      #16                 // Field enumerators:[Ljava/lang/String;
       4: areturn

  public void setEnumerators(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field enumerators:[Ljava/lang/String;
       5: return

  public boolean getVisible();
    Code:
       0: aload_0
       1: getfield      #6                  // Field visible:Z
       4: ireturn

  public void setVisible(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field visible:Z
       5: return

  public org.h2.value.Value validateConvertUpdateSequence(org.h2.engine.Session, org.h2.value.Value);
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: monitorenter
       5: aload_0
       6: getfield      #46                 // Field defaultExpression:Lorg/h2/expression/Expression;
       9: astore_3
      10: aload         4
      12: monitorexit
      13: goto          24
      16: astore        5
      18: aload         4
      20: monitorexit
      21: aload         5
      23: athrow
      24: aload_2
      25: ifnonnull     72
      28: aload_3
      29: ifnonnull     39
      32: getstatic     #54                 // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
      35: astore_2
      36: goto          72
      39: aload_3
      40: aload_1
      41: invokevirtual #47                 // Method org/h2/expression/Expression.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
      44: aload_0
      45: getfield      #8                  // Field type:I
      48: invokevirtual #55                 // Method org/h2/value/Value.convertTo:(I)Lorg/h2/value/Value;
      51: astore_2
      52: aload_1
      53: invokevirtual #56                 // Method org/h2/engine/Session.getGeneratedKeys:()Lorg/h2/engine/GeneratedKeys;
      56: aload_0
      57: invokevirtual #57                 // Method org/h2/engine/GeneratedKeys.add:(Lorg/h2/table/Column;)V
      60: aload_0
      61: getfield      #58                 // Field primaryKey:Z
      64: ifeq          72
      67: aload_1
      68: aload_2
      69: invokevirtual #59                 // Method org/h2/engine/Session.setLastIdentity:(Lorg/h2/value/Value;)V
      72: aload_1
      73: invokevirtual #60                 // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      76: invokevirtual #61                 // Method org/h2/engine/Database.getMode:()Lorg/h2/engine/Mode;
      79: astore        4
      81: aload_2
      82: getstatic     #54                 // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
      85: if_acmpne     291
      88: aload_0
      89: getfield      #62                 // Field convertNullToDefault:Z
      92: ifeq          116
      95: aload_3
      96: aload_1
      97: invokevirtual #47                 // Method org/h2/expression/Expression.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
     100: aload_0
     101: getfield      #8                  // Field type:I
     104: invokevirtual #55                 // Method org/h2/value/Value.convertTo:(I)Lorg/h2/value/Value;
     107: astore_2
     108: aload_1
     109: invokevirtual #56                 // Method org/h2/engine/Session.getGeneratedKeys:()Lorg/h2/engine/GeneratedKeys;
     112: aload_0
     113: invokevirtual #57                 // Method org/h2/engine/GeneratedKeys.add:(Lorg/h2/table/Column;)V
     116: aload_2
     117: getstatic     #54                 // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
     120: if_acmpne     291
     123: aload_0
     124: getfield      #5                  // Field nullable:Z
     127: ifne          291
     130: aload         4
     132: getfield      #63                 // Field org/h2/engine/Mode.convertInsertNullToZero:Z
     135: ifeq          280
     138: aload_0
     139: getfield      #8                  // Field type:I
     142: invokestatic  #9                  // Method org/h2/value/DataType.getDataType:(I)Lorg/h2/value/DataType;
     145: astore        5
     147: aload         5
     149: getfield      #64                 // Field org/h2/value/DataType.decimal:Z
     152: ifeq          170
     155: iconst_0
     156: invokestatic  #65                 // Method org/h2/value/ValueInt.get:(I)Lorg/h2/value/ValueInt;
     159: aload_0
     160: getfield      #8                  // Field type:I
     163: invokevirtual #66                 // Method org/h2/value/ValueInt.convertTo:(I)Lorg/h2/value/Value;
     166: astore_2
     167: goto          277
     170: aload         5
     172: getfield      #67                 // Field org/h2/value/DataType.type:I
     175: bipush        11
     177: if_icmpne     191
     180: aload_1
     181: invokevirtual #68                 // Method org/h2/engine/Session.getTransactionStart:()J
     184: invokestatic  #69                 // Method org/h2/value/ValueTimestamp.fromMillis:(J)Lorg/h2/value/ValueTimestamp;
     187: astore_2
     188: goto          277
     191: aload         5
     193: getfield      #67                 // Field org/h2/value/DataType.type:I
     196: bipush        24
     198: if_icmpne     225
     201: aload_1
     202: invokevirtual #68                 // Method org/h2/engine/Session.getTransactionStart:()J
     205: lstore        6
     207: lload         6
     209: invokestatic  #70                 // Method org/h2/util/DateTimeUtils.dateValueFromDate:(J)J
     212: lload         6
     214: invokestatic  #71                 // Method org/h2/util/DateTimeUtils.nanosFromDate:(J)J
     217: iconst_0
     218: invokestatic  #72                 // Method org/h2/value/ValueTimestampTimeZone.fromDateValueAndNanos:(JJS)Lorg/h2/value/ValueTimestampTimeZone;
     221: astore_2
     222: goto          277
     225: aload         5
     227: getfield      #67                 // Field org/h2/value/DataType.type:I
     230: bipush        9
     232: if_icmpne     243
     235: lconst_0
     236: invokestatic  #73                 // Method org/h2/value/ValueTime.fromNanos:(J)Lorg/h2/value/ValueTime;
     239: astore_2
     240: goto          277
     243: aload         5
     245: getfield      #67                 // Field org/h2/value/DataType.type:I
     248: bipush        10
     250: if_icmpne     264
     253: aload_1
     254: invokevirtual #68                 // Method org/h2/engine/Session.getTransactionStart:()J
     257: invokestatic  #74                 // Method org/h2/value/ValueDate.fromMillis:(J)Lorg/h2/value/ValueDate;
     260: astore_2
     261: goto          277
     264: ldc           #31                 // String
     266: invokestatic  #75                 // Method org/h2/value/ValueString.get:(Ljava/lang/String;)Lorg/h2/value/Value;
     269: aload_0
     270: getfield      #8                  // Field type:I
     273: invokevirtual #55                 // Method org/h2/value/Value.convertTo:(I)Lorg/h2/value/Value;
     276: astore_2
     277: goto          291
     280: sipush        23502
     283: aload_0
     284: getfield      #7                  // Field name:Ljava/lang/String;
     287: invokestatic  #76                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
     290: athrow
     291: aload_0
     292: getfield      #77                 // Field checkConstraint:Lorg/h2/expression/Expression;
     295: ifnull        365
     298: aload_0
     299: getfield      #78                 // Field resolver:Lorg/h2/table/SingleColumnResolver;
     302: aload_2
     303: invokevirtual #79                 // Method org/h2/table/SingleColumnResolver.setValue:(Lorg/h2/value/Value;)V
     306: aload_0
     307: dup
     308: astore        6
     310: monitorenter
     311: aload_0
     312: getfield      #77                 // Field checkConstraint:Lorg/h2/expression/Expression;
     315: aload_1
     316: invokevirtual #47                 // Method org/h2/expression/Expression.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
     319: astore        5
     321: aload         6
     323: monitorexit
     324: goto          335
     327: astore        8
     329: aload         6
     331: monitorexit
     332: aload         8
     334: athrow
     335: aload         5
     337: getstatic     #54                 // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
     340: if_acmpeq     365
     343: aload         5
     345: invokevirtual #80                 // Method org/h2/value/Value.getBoolean:()Z
     348: ifne          365
     351: sipush        23513
     354: aload_0
     355: getfield      #77                 // Field checkConstraint:Lorg/h2/expression/Expression;
     358: invokevirtual #81                 // Method org/h2/expression/Expression.getSQL:()Ljava/lang/String;
     361: invokestatic  #76                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
     364: athrow
     365: aload_2
     366: aload         4
     368: getfield      #82                 // Field org/h2/engine/Mode.convertOnlyToSmallerScale:Z
     371: aload_0
     372: getfield      #14                 // Field scale:I
     375: invokevirtual #83                 // Method org/h2/value/Value.convertScale:(ZI)Lorg/h2/value/Value;
     378: astore_2
     379: aload_0
     380: getfield      #13                 // Field precision:J
     383: lconst_0
     384: lcmp
     385: ifle          497
     388: aload_2
     389: aload_0
     390: getfield      #13                 // Field precision:J
     393: invokevirtual #84                 // Method org/h2/value/Value.checkPrecision:(J)Z
     396: ifne          497
     399: aload_2
     400: invokevirtual #85                 // Method org/h2/value/Value.getTraceSQL:()Ljava/lang/String;
     403: astore        5
     405: aload         5
     407: invokevirtual #86                 // Method java/lang/String.length:()I
     410: bipush        127
     412: if_icmple     444
     415: new           #29                 // class java/lang/StringBuilder
     418: dup
     419: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     422: aload         5
     424: iconst_0
     425: sipush        128
     428: invokevirtual #87                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     431: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     434: ldc           #88                 // String ...
     436: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     439: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     442: astore        5
     444: sipush        22001
     447: iconst_2
     448: anewarray     #37                 // class java/lang/String
     451: dup
     452: iconst_0
     453: aload_0
     454: invokevirtual #36                 // Method getCreateSQL:()Ljava/lang/String;
     457: aastore
     458: dup
     459: iconst_1
     460: new           #29                 // class java/lang/StringBuilder
     463: dup
     464: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     467: aload         5
     469: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     472: ldc           #39                 // String  (
     474: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     477: aload_2
     478: invokevirtual #89                 // Method org/h2/value/Value.getPrecision:()J
     481: invokevirtual #90                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     484: ldc           #40                 // String )
     486: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     489: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     492: aastore
     493: invokestatic  #91                 // Method org/h2/message/DbException.get:(I[Ljava/lang/String;)Lorg/h2/message/DbException;
     496: athrow
     497: aload_0
     498: invokevirtual #92                 // Method isEnumerated:()Z
     501: ifeq          602
     504: aload_2
     505: getstatic     #54                 // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
     508: if_acmpeq     602
     511: aload_0
     512: getfield      #16                 // Field enumerators:[Ljava/lang/String;
     515: aload_2
     516: invokestatic  #93                 // Method org/h2/value/ValueEnum.isValid:([Ljava/lang/String;Lorg/h2/value/Value;)Z
     519: ifne          590
     522: aload_2
     523: invokevirtual #85                 // Method org/h2/value/Value.getTraceSQL:()Ljava/lang/String;
     526: astore        5
     528: aload         5
     530: invokevirtual #86                 // Method java/lang/String.length:()I
     533: bipush        127
     535: if_icmple     567
     538: new           #29                 // class java/lang/StringBuilder
     541: dup
     542: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     545: aload         5
     547: iconst_0
     548: sipush        128
     551: invokevirtual #87                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     554: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     557: ldc           #88                 // String ...
     559: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     562: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     565: astore        5
     567: sipush        22030
     570: iconst_2
     571: anewarray     #37                 // class java/lang/String
     574: dup
     575: iconst_0
     576: aload_0
     577: invokevirtual #36                 // Method getCreateSQL:()Ljava/lang/String;
     580: aastore
     581: dup
     582: iconst_1
     583: aload         5
     585: aastore
     586: invokestatic  #91                 // Method org/h2/message/DbException.get:(I[Ljava/lang/String;)Lorg/h2/message/DbException;
     589: athrow
     590: aload_0
     591: getfield      #16                 // Field enumerators:[Ljava/lang/String;
     594: aload_2
     595: invokevirtual #94                 // Method org/h2/value/Value.getInt:()I
     598: invokestatic  #95                 // Method org/h2/value/ValueEnum.get:([Ljava/lang/String;I)Lorg/h2/value/ValueEnum;
     601: astore_2
     602: aload_0
     603: aload_1
     604: aload_2
     605: invokespecial #96                 // Method updateSequenceIfRequired:(Lorg/h2/engine/Session;Lorg/h2/value/Value;)V
     608: aload_2
     609: areturn
    Exception table:
       from    to  target type
           5    13    16   any
          16    21    16   any
         311   324   327   any
         327   332   327   any

  private void updateSequenceIfRequired(org.h2.engine.Session, org.h2.value.Value);
    Code:
       0: aload_0
       1: getfield      #97                 // Field sequence:Lorg/h2/schema/Sequence;
       4: ifnull        110
       7: aload_0
       8: getfield      #97                 // Field sequence:Lorg/h2/schema/Sequence;
      11: invokevirtual #98                 // Method org/h2/schema/Sequence.getCurrentValue:()J
      14: lstore_3
      15: aload_0
      16: getfield      #97                 // Field sequence:Lorg/h2/schema/Sequence;
      19: invokevirtual #99                 // Method org/h2/schema/Sequence.getIncrement:()J
      22: lstore        5
      24: aload_2
      25: invokevirtual #100                // Method org/h2/value/Value.getLong:()J
      28: lstore        7
      30: iconst_0
      31: istore        9
      33: lload         5
      35: lconst_0
      36: lcmp
      37: ifle          53
      40: lload         7
      42: lload_3
      43: lcmp
      44: ifle          53
      47: iconst_1
      48: istore        9
      50: goto          70
      53: lload         5
      55: lconst_0
      56: lcmp
      57: ifge          70
      60: lload         7
      62: lload_3
      63: lcmp
      64: ifge          70
      67: iconst_1
      68: istore        9
      70: iload         9
      72: ifeq          110
      75: aload_0
      76: getfield      #97                 // Field sequence:Lorg/h2/schema/Sequence;
      79: lload         7
      81: lload         5
      83: ladd
      84: invokestatic  #101                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      87: aconst_null
      88: aconst_null
      89: aconst_null
      90: invokevirtual #102                // Method org/h2/schema/Sequence.modify:(Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;)V
      93: aload_1
      94: lload         7
      96: invokestatic  #103                // Method org/h2/value/ValueLong.get:(J)Lorg/h2/value/ValueLong;
      99: invokevirtual #59                 // Method org/h2/engine/Session.setLastIdentity:(Lorg/h2/value/Value;)V
     102: aload_0
     103: getfield      #97                 // Field sequence:Lorg/h2/schema/Sequence;
     106: aload_1
     107: invokevirtual #104                // Method org/h2/schema/Sequence.flush:(Lorg/h2/engine/Session;)V
     110: return

  public void convertAutoIncrementToSequence(org.h2.engine.Session, org.h2.schema.Schema, int, boolean);
    Code:
       0: aload_0
       1: getfield      #105                // Field autoIncrement:Z
       4: ifne          11
       7: invokestatic  #106                // Method org/h2/message/DbException.throwInternalError:()Ljava/lang/RuntimeException;
      10: pop
      11: ldc           #107                // String IDENTITY
      13: aload_0
      14: getfield      #108                // Field originalSQL:Ljava/lang/String;
      17: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifeq          32
      23: aload_0
      24: ldc           #109                // String BIGINT
      26: putfield      #108                // Field originalSQL:Ljava/lang/String;
      29: goto          50
      32: ldc           #110                // String SERIAL
      34: aload_0
      35: getfield      #108                // Field originalSQL:Ljava/lang/String;
      38: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      41: ifeq          50
      44: aload_0
      45: ldc           #111                // String INT
      47: putfield      #108                // Field originalSQL:Ljava/lang/String;
      50: invokestatic  #112                // Method org/h2/value/ValueUuid.getNewRandom:()Lorg/h2/value/ValueUuid;
      53: astore        6
      55: aload         6
      57: invokevirtual #113                // Method org/h2/value/ValueUuid.getString:()Ljava/lang/String;
      60: astore        7
      62: aload         7
      64: bipush        45
      66: bipush        95
      68: invokevirtual #114                // Method java/lang/String.replace:(CC)Ljava/lang/String;
      71: invokestatic  #115                // Method org/h2/util/StringUtils.toUpperEnglish:(Ljava/lang/String;)Ljava/lang/String;
      74: astore        7
      76: new           #29                 // class java/lang/StringBuilder
      79: dup
      80: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      83: ldc           #116                // String SYSTEM_SEQUENCE_
      85: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload         7
      90: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: astore        5
      98: aload_2
      99: aload         5
     101: invokevirtual #117                // Method org/h2/schema/Schema.findSequence:(Ljava/lang/String;)Lorg/h2/schema/Sequence;
     104: ifnonnull     50
     107: new           #118                // class org/h2/schema/Sequence
     110: dup
     111: aload_2
     112: iload_3
     113: aload         5
     115: aload_0
     116: getfield      #119                // Field start:J
     119: aload_0
     120: getfield      #120                // Field increment:J
     123: invokespecial #121                // Method org/h2/schema/Sequence."<init>":(Lorg/h2/schema/Schema;ILjava/lang/String;JJ)V
     126: astore        6
     128: aload         6
     130: iload         4
     132: invokevirtual #122                // Method org/h2/schema/Sequence.setTemporary:(Z)V
     135: aload_1
     136: invokevirtual #60                 // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
     139: aload_1
     140: aload         6
     142: invokevirtual #123                // Method org/h2/engine/Database.addSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
     145: aload_0
     146: iconst_0
     147: lconst_0
     148: lconst_0
     149: invokevirtual #124                // Method setAutoIncrement:(ZJJ)V
     152: new           #125                // class org/h2/expression/SequenceValue
     155: dup
     156: aload         6
     158: invokespecial #126                // Method org/h2/expression/SequenceValue."<init>":(Lorg/h2/schema/Sequence;)V
     161: astore        7
     163: aload_0
     164: aload_1
     165: aload         7
     167: invokevirtual #127                // Method setDefaultExpression:(Lorg/h2/engine/Session;Lorg/h2/expression/Expression;)V
     170: aload_0
     171: aload         6
     173: invokevirtual #128                // Method setSequence:(Lorg/h2/schema/Sequence;)V
     176: return

  public void prepareExpression(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #46                 // Field defaultExpression:Lorg/h2/expression/Expression;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #52                 // Field onUpdateExpression:Lorg/h2/expression/Expression;
      11: ifnull        97
      14: aload_0
      15: new           #129                // class org/h2/table/TableFilter
      18: dup
      19: aload_1
      20: aload_0
      21: getfield      #18                 // Field table:Lorg/h2/table/Table;
      24: aconst_null
      25: iconst_0
      26: aconst_null
      27: iconst_0
      28: aconst_null
      29: invokespecial #130                // Method org/h2/table/TableFilter."<init>":(Lorg/h2/engine/Session;Lorg/h2/table/Table;Ljava/lang/String;ZLorg/h2/command/dml/Select;ILorg/h2/table/IndexHints;)V
      32: putfield      #43                 // Field computeTableFilter:Lorg/h2/table/TableFilter;
      35: aload_0
      36: getfield      #46                 // Field defaultExpression:Lorg/h2/expression/Expression;
      39: ifnull        66
      42: aload_0
      43: getfield      #46                 // Field defaultExpression:Lorg/h2/expression/Expression;
      46: aload_0
      47: getfield      #43                 // Field computeTableFilter:Lorg/h2/table/TableFilter;
      50: iconst_0
      51: invokevirtual #131                // Method org/h2/expression/Expression.mapColumns:(Lorg/h2/table/ColumnResolver;I)V
      54: aload_0
      55: aload_0
      56: getfield      #46                 // Field defaultExpression:Lorg/h2/expression/Expression;
      59: aload_1
      60: invokevirtual #49                 // Method org/h2/expression/Expression.optimize:(Lorg/h2/engine/Session;)Lorg/h2/expression/Expression;
      63: putfield      #46                 // Field defaultExpression:Lorg/h2/expression/Expression;
      66: aload_0
      67: getfield      #52                 // Field onUpdateExpression:Lorg/h2/expression/Expression;
      70: ifnull        97
      73: aload_0
      74: getfield      #52                 // Field onUpdateExpression:Lorg/h2/expression/Expression;
      77: aload_0
      78: getfield      #43                 // Field computeTableFilter:Lorg/h2/table/TableFilter;
      81: iconst_0
      82: invokevirtual #131                // Method org/h2/expression/Expression.mapColumns:(Lorg/h2/table/ColumnResolver;I)V
      85: aload_0
      86: aload_0
      87: getfield      #52                 // Field onUpdateExpression:Lorg/h2/expression/Expression;
      90: aload_1
      91: invokevirtual #49                 // Method org/h2/expression/Expression.optimize:(Lorg/h2/engine/Session;)Lorg/h2/expression/Expression;
      94: putfield      #52                 // Field onUpdateExpression:Lorg/h2/expression/Expression;
      97: return

  public java.lang.String getCreateSQLWithoutName();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #132                // Method getCreateSQL:(Z)Ljava/lang/String;
       5: areturn

  public java.lang.String getCreateSQL();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #132                // Method getCreateSQL:(Z)Ljava/lang/String;
       5: areturn

  private java.lang.String getCreateSQL(boolean);
    Code:
       0: new           #29                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: iload_1
       9: ifeq          36
      12: aload_0
      13: getfield      #7                  // Field name:Ljava/lang/String;
      16: ifnull        36
      19: aload_2
      20: aload_0
      21: getfield      #7                  // Field name:Ljava/lang/String;
      24: invokestatic  #53                 // Method org/h2/command/Parser.quoteIdentifier:(Ljava/lang/String;)Ljava/lang/String;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: bipush        32
      32: invokevirtual #133                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      35: pop
      36: aload_0
      37: getfield      #108                // Field originalSQL:Ljava/lang/String;
      40: ifnull        55
      43: aload_2
      44: aload_0
      45: getfield      #108                // Field originalSQL:Ljava/lang/String;
      48: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: pop
      52: goto          308
      55: aload_2
      56: aload_0
      57: getfield      #8                  // Field type:I
      60: invokestatic  #9                  // Method org/h2/value/DataType.getDataType:(I)Lorg/h2/value/DataType;
      63: getfield      #134                // Field org/h2/value/DataType.name:Ljava/lang/String;
      66: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: pop
      70: aload_0
      71: getfield      #8                  // Field type:I
      74: tableswitch   { // 6 to 25
                     6: 168
                     7: 308
                     8: 308
                     9: 308
                    10: 308
                    11: 308
                    12: 275
                    13: 275
                    14: 275
                    15: 308
                    16: 308
                    17: 308
                    18: 308
                    19: 308
                    20: 308
                    21: 275
                    22: 308
                    23: 308
                    24: 308
                    25: 202
               default: 308
          }
     168: aload_2
     169: bipush        40
     171: invokevirtual #133                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     174: aload_0
     175: getfield      #13                 // Field precision:J
     178: invokevirtual #90                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     181: ldc           #135                // String ,
     183: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     186: aload_0
     187: getfield      #14                 // Field scale:I
     190: invokevirtual #136                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     193: bipush        41
     195: invokevirtual #133                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     198: pop
     199: goto          308
     202: aload_2
     203: bipush        40
     205: invokevirtual #133                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     208: pop
     209: iconst_0
     210: istore_3
     211: iload_3
     212: aload_0
     213: getfield      #16                 // Field enumerators:[Ljava/lang/String;
     216: arraylength
     217: if_icmpge     265
     220: aload_2
     221: bipush        39
     223: invokevirtual #133                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     226: aload_0
     227: getfield      #16                 // Field enumerators:[Ljava/lang/String;
     230: iload_3
     231: aaload
     232: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     235: bipush        39
     237: invokevirtual #133                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     240: pop
     241: iload_3
     242: aload_0
     243: getfield      #16                 // Field enumerators:[Ljava/lang/String;
     246: arraylength
     247: iconst_1
     248: isub
     249: if_icmpge     259
     252: aload_2
     253: bipush        44
     255: invokevirtual #133                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     258: pop
     259: iinc          3, 1
     262: goto          211
     265: aload_2
     266: bipush        41
     268: invokevirtual #133                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     271: pop
     272: goto          308
     275: aload_0
     276: getfield      #13                 // Field precision:J
     279: ldc2_w        #137                // long 2147483647l
     282: lcmp
     283: ifge          308
     286: aload_2
     287: bipush        40
     289: invokevirtual #133                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     292: aload_0
     293: getfield      #13                 // Field precision:J
     296: invokevirtual #90                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     299: bipush        41
     301: invokevirtual #133                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     304: pop
     305: goto          308
     308: aload_0
     309: getfield      #6                  // Field visible:Z
     312: ifne          322
     315: aload_2
     316: ldc           #139                // String  INVISIBLE
     318: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     321: pop
     322: aload_0
     323: getfield      #46                 // Field defaultExpression:Lorg/h2/expression/Expression;
     326: ifnull        380
     329: aload_0
     330: getfield      #46                 // Field defaultExpression:Lorg/h2/expression/Expression;
     333: invokevirtual #81                 // Method org/h2/expression/Expression.getSQL:()Ljava/lang/String;
     336: astore_3
     337: aload_3
     338: ifnull        380
     341: aload_0
     342: getfield      #42                 // Field isComputed:Z
     345: ifeq          362
     348: aload_2
     349: ldc           #140                // String  AS
     351: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     354: aload_3
     355: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     358: pop
     359: goto          380
     362: aload_0
     363: getfield      #46                 // Field defaultExpression:Lorg/h2/expression/Expression;
     366: ifnull        380
     369: aload_2
     370: ldc           #141                // String  DEFAULT
     372: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     375: aload_3
     376: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     379: pop
     380: aload_0
     381: getfield      #52                 // Field onUpdateExpression:Lorg/h2/expression/Expression;
     384: ifnull        410
     387: aload_0
     388: getfield      #52                 // Field onUpdateExpression:Lorg/h2/expression/Expression;
     391: invokevirtual #81                 // Method org/h2/expression/Expression.getSQL:()Ljava/lang/String;
     394: astore_3
     395: aload_3
     396: ifnull        410
     399: aload_2
     400: ldc           #142                // String  ON UPDATE
     402: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     405: aload_3
     406: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     409: pop
     410: aload_0
     411: getfield      #5                  // Field nullable:Z
     414: ifne          424
     417: aload_2
     418: ldc           #143                // String  NOT NULL
     420: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     423: pop
     424: aload_0
     425: getfield      #62                 // Field convertNullToDefault:Z
     428: ifeq          438
     431: aload_2
     432: ldc           #144                // String  NULL_TO_DEFAULT
     434: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     437: pop
     438: aload_0
     439: getfield      #97                 // Field sequence:Lorg/h2/schema/Sequence;
     442: ifnull        462
     445: aload_2
     446: ldc           #145                // String  SEQUENCE
     448: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     451: aload_0
     452: getfield      #97                 // Field sequence:Lorg/h2/schema/Sequence;
     455: invokevirtual #146                // Method org/h2/schema/Sequence.getSQL:()Ljava/lang/String;
     458: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     461: pop
     462: aload_0
     463: getfield      #147                // Field selectivity:I
     466: ifeq          483
     469: aload_2
     470: ldc           #148                // String  SELECTIVITY
     472: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     475: aload_0
     476: getfield      #147                // Field selectivity:I
     479: invokevirtual #136                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     482: pop
     483: aload_0
     484: getfield      #149                // Field comment:Ljava/lang/String;
     487: ifnull        507
     490: aload_2
     491: ldc           #150                // String  COMMENT
     493: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     496: aload_0
     497: getfield      #149                // Field comment:Ljava/lang/String;
     500: invokestatic  #151                // Method org/h2/util/StringUtils.quoteStringSQL:(Ljava/lang/String;)Ljava/lang/String;
     503: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     506: pop
     507: aload_0
     508: getfield      #77                 // Field checkConstraint:Lorg/h2/expression/Expression;
     511: ifnull        528
     514: aload_2
     515: ldc           #152                // String  CHECK
     517: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     520: aload_0
     521: getfield      #153                // Field checkConstraintSQL:Ljava/lang/String;
     524: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     527: pop
     528: aload_2
     529: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     532: areturn

  public boolean isNullable();
    Code:
       0: aload_0
       1: getfield      #5                  // Field nullable:Z
       4: ireturn

  public void setOriginalSQL(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #108                // Field originalSQL:Ljava/lang/String;
       5: return

  public java.lang.String getOriginalSQL();
    Code:
       0: aload_0
       1: getfield      #108                // Field originalSQL:Ljava/lang/String;
       4: areturn

  public org.h2.expression.Expression getDefaultExpression();
    Code:
       0: aload_0
       1: getfield      #46                 // Field defaultExpression:Lorg/h2/expression/Expression;
       4: areturn

  public org.h2.expression.Expression getOnUpdateExpression();
    Code:
       0: aload_0
       1: getfield      #52                 // Field onUpdateExpression:Lorg/h2/expression/Expression;
       4: areturn

  public boolean isAutoIncrement();
    Code:
       0: aload_0
       1: getfield      #105                // Field autoIncrement:Z
       4: ireturn

  public void setAutoIncrement(boolean, long, long);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #105                // Field autoIncrement:Z
       5: aload_0
       6: lload_2
       7: putfield      #119                // Field start:J
      10: aload_0
      11: lload         4
      13: putfield      #120                // Field increment:J
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field nullable:Z
      21: iload_1
      22: ifeq          30
      25: aload_0
      26: iconst_1
      27: putfield      #62                 // Field convertNullToDefault:Z
      30: return

  public void setConvertNullToDefault(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #62                 // Field convertNullToDefault:Z
       5: return

  public void rename(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field name:Ljava/lang/String;
       5: return

  public void setSequence(org.h2.schema.Sequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #97                 // Field sequence:Lorg/h2/schema/Sequence;
       5: return

  public org.h2.schema.Sequence getSequence();
    Code:
       0: aload_0
       1: getfield      #97                 // Field sequence:Lorg/h2/schema/Sequence;
       4: areturn

  public int getSelectivity();
    Code:
       0: aload_0
       1: getfield      #147                // Field selectivity:I
       4: ifne          12
       7: bipush        50
       9: goto          16
      12: aload_0
      13: getfield      #147                // Field selectivity:I
      16: ireturn

  public void setSelectivity(int);
    Code:
       0: iload_1
       1: ifge          8
       4: iconst_0
       5: goto          20
       8: iload_1
       9: bipush        100
      11: if_icmple     19
      14: bipush        100
      16: goto          20
      19: iload_1
      20: istore_1
      21: aload_0
      22: iload_1
      23: putfield      #147                // Field selectivity:I
      26: return

  public void addCheckConstraint(org.h2.engine.Session, org.h2.expression.Expression);
    Code:
       0: aload_2
       1: ifnonnull     5
       4: return
       5: aload_0
       6: new           #154                // class org/h2/table/SingleColumnResolver
       9: dup
      10: aload_0
      11: invokespecial #155                // Method org/h2/table/SingleColumnResolver."<init>":(Lorg/h2/table/Column;)V
      14: putfield      #78                 // Field resolver:Lorg/h2/table/SingleColumnResolver;
      17: aload_0
      18: dup
      19: astore_3
      20: monitorenter
      21: aload_0
      22: getfield      #7                  // Field name:Ljava/lang/String;
      25: astore        4
      27: aload_0
      28: getfield      #7                  // Field name:Ljava/lang/String;
      31: ifnonnull     40
      34: aload_0
      35: ldc           #156                // String VALUE
      37: putfield      #7                  // Field name:Ljava/lang/String;
      40: aload_2
      41: aload_0
      42: getfield      #78                 // Field resolver:Lorg/h2/table/SingleColumnResolver;
      45: iconst_0
      46: invokevirtual #131                // Method org/h2/expression/Expression.mapColumns:(Lorg/h2/table/ColumnResolver;I)V
      49: aload_0
      50: aload         4
      52: putfield      #7                  // Field name:Ljava/lang/String;
      55: aload_3
      56: monitorexit
      57: goto          67
      60: astore        5
      62: aload_3
      63: monitorexit
      64: aload         5
      66: athrow
      67: aload_2
      68: aload_1
      69: invokevirtual #49                 // Method org/h2/expression/Expression.optimize:(Lorg/h2/engine/Session;)Lorg/h2/expression/Expression;
      72: astore_2
      73: aload_0
      74: getfield      #78                 // Field resolver:Lorg/h2/table/SingleColumnResolver;
      77: getstatic     #54                 // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
      80: invokevirtual #79                 // Method org/h2/table/SingleColumnResolver.setValue:(Lorg/h2/value/Value;)V
      83: aload_0
      84: dup
      85: astore_3
      86: monitorenter
      87: aload_2
      88: aload_1
      89: invokevirtual #47                 // Method org/h2/expression/Expression.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
      92: pop
      93: aload_3
      94: monitorexit
      95: goto          105
      98: astore        6
     100: aload_3
     101: monitorexit
     102: aload         6
     104: athrow
     105: aload_0
     106: getfield      #77                 // Field checkConstraint:Lorg/h2/expression/Expression;
     109: ifnonnull     120
     112: aload_0
     113: aload_2
     114: putfield      #77                 // Field checkConstraint:Lorg/h2/expression/Expression;
     117: goto          137
     120: aload_0
     121: new           #157                // class org/h2/expression/ConditionAndOr
     124: dup
     125: iconst_0
     126: aload_0
     127: getfield      #77                 // Field checkConstraint:Lorg/h2/expression/Expression;
     130: aload_2
     131: invokespecial #158                // Method org/h2/expression/ConditionAndOr."<init>":(ILorg/h2/expression/Expression;Lorg/h2/expression/Expression;)V
     134: putfield      #77                 // Field checkConstraint:Lorg/h2/expression/Expression;
     137: aload_0
     138: aload_0
     139: aload_1
     140: aload_0
     141: getfield      #7                  // Field name:Ljava/lang/String;
     144: invokevirtual #159                // Method getCheckConstraintSQL:(Lorg/h2/engine/Session;Ljava/lang/String;)Ljava/lang/String;
     147: putfield      #153                // Field checkConstraintSQL:Ljava/lang/String;
     150: return
    Exception table:
       from    to  target type
          21    57    60   any
          60    64    60   any
          87    95    98   any
          98   102    98   any

  public void removeCheckConstraint();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #77                 // Field checkConstraint:Lorg/h2/expression/Expression;
       5: aload_0
       6: aconst_null
       7: putfield      #153                // Field checkConstraintSQL:Ljava/lang/String;
      10: return

  public org.h2.expression.Expression getCheckConstraint(org.h2.engine.Session, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #77                 // Field checkConstraint:Lorg/h2/expression/Expression;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: new           #160                // class org/h2/command/Parser
      12: dup
      13: aload_1
      14: invokespecial #161                // Method org/h2/command/Parser."<init>":(Lorg/h2/engine/Session;)V
      17: astore_3
      18: aload_0
      19: dup
      20: astore        5
      22: monitorenter
      23: aload_0
      24: getfield      #7                  // Field name:Ljava/lang/String;
      27: astore        6
      29: aload_0
      30: aload_2
      31: putfield      #7                  // Field name:Ljava/lang/String;
      34: aload_0
      35: getfield      #77                 // Field checkConstraint:Lorg/h2/expression/Expression;
      38: invokevirtual #81                 // Method org/h2/expression/Expression.getSQL:()Ljava/lang/String;
      41: astore        4
      43: aload_0
      44: aload         6
      46: putfield      #7                  // Field name:Ljava/lang/String;
      49: aload         5
      51: monitorexit
      52: goto          63
      55: astore        7
      57: aload         5
      59: monitorexit
      60: aload         7
      62: athrow
      63: aload_3
      64: aload         4
      66: invokevirtual #162                // Method org/h2/command/Parser.parseExpression:(Ljava/lang/String;)Lorg/h2/expression/Expression;
      69: areturn
    Exception table:
       from    to  target type
          23    52    55   any
          55    60    55   any

  java.lang.String getDefaultSQL();
    Code:
       0: aload_0
       1: getfield      #46                 // Field defaultExpression:Lorg/h2/expression/Expression;
       4: ifnonnull     11
       7: aconst_null
       8: goto          18
      11: aload_0
      12: getfield      #46                 // Field defaultExpression:Lorg/h2/expression/Expression;
      15: invokevirtual #81                 // Method org/h2/expression/Expression.getSQL:()Ljava/lang/String;
      18: areturn

  java.lang.String getOnUpdateSQL();
    Code:
       0: aload_0
       1: getfield      #52                 // Field onUpdateExpression:Lorg/h2/expression/Expression;
       4: ifnonnull     11
       7: aconst_null
       8: goto          18
      11: aload_0
      12: getfield      #52                 // Field onUpdateExpression:Lorg/h2/expression/Expression;
      15: invokevirtual #81                 // Method org/h2/expression/Expression.getSQL:()Ljava/lang/String;
      18: areturn

  int getPrecisionAsInt();
    Code:
       0: aload_0
       1: getfield      #13                 // Field precision:J
       4: invokestatic  #24                 // Method org/h2/util/MathUtils.convertLongToInt:(J)I
       7: ireturn

  org.h2.value.DataType getDataType();
    Code:
       0: aload_0
       1: getfield      #8                  // Field type:I
       4: invokestatic  #9                  // Method org/h2/value/DataType.getDataType:(I)Lorg/h2/value/DataType;
       7: areturn

  java.lang.String getCheckConstraintSQL(org.h2.engine.Session, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #163                // Method getCheckConstraint:(Lorg/h2/engine/Session;Ljava/lang/String;)Lorg/h2/expression/Expression;
       6: astore_3
       7: aload_3
       8: ifnonnull     16
      11: ldc           #31                 // String
      13: goto          20
      16: aload_3
      17: invokevirtual #81                 // Method org/h2/expression/Expression.getSQL:()Ljava/lang/String;
      20: areturn

  public void setComment(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #149                // Field comment:Ljava/lang/String;
       5: return

  public java.lang.String getComment();
    Code:
       0: aload_0
       1: getfield      #149                // Field comment:Ljava/lang/String;
       4: areturn

  public void setPrimaryKey(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #58                 // Field primaryKey:Z
       5: return

  boolean isEverything(org.h2.expression.ExpressionVisitor);
    Code:
       0: aload_1
       1: invokevirtual #164                // Method org/h2/expression/ExpressionVisitor.getType:()I
       4: bipush        7
       6: if_icmpne     28
       9: aload_0
      10: getfield      #97                 // Field sequence:Lorg/h2/schema/Sequence;
      13: ifnull        28
      16: aload_1
      17: invokevirtual #165                // Method org/h2/expression/ExpressionVisitor.getDependencies:()Ljava/util/HashSet;
      20: aload_0
      21: getfield      #97                 // Field sequence:Lorg/h2/schema/Sequence;
      24: invokevirtual #166                // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      27: pop
      28: aload_0
      29: getfield      #46                 // Field defaultExpression:Lorg/h2/expression/Expression;
      32: ifnull        48
      35: aload_0
      36: getfield      #46                 // Field defaultExpression:Lorg/h2/expression/Expression;
      39: aload_1
      40: invokevirtual #167                // Method org/h2/expression/Expression.isEverything:(Lorg/h2/expression/ExpressionVisitor;)Z
      43: ifne          48
      46: iconst_0
      47: ireturn
      48: aload_0
      49: getfield      #77                 // Field checkConstraint:Lorg/h2/expression/Expression;
      52: ifnull        68
      55: aload_0
      56: getfield      #77                 // Field checkConstraint:Lorg/h2/expression/Expression;
      59: aload_1
      60: invokevirtual #167                // Method org/h2/expression/Expression.isEverything:(Lorg/h2/expression/ExpressionVisitor;)Z
      63: ifne          68
      66: iconst_0
      67: ireturn
      68: iconst_1
      69: ireturn

  public boolean isPrimaryKey();
    Code:
       0: aload_0
       1: getfield      #58                 // Field primaryKey:Z
       4: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #7                  // Field name:Ljava/lang/String;
       4: areturn

  public boolean isWideningConversion(org.h2.table.Column);
    Code:
       0: aload_0
       1: getfield      #8                  // Field type:I
       4: aload_1
       5: getfield      #8                  // Field type:I
       8: if_icmpeq     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: getfield      #13                 // Field precision:J
      17: aload_1
      18: getfield      #13                 // Field precision:J
      21: lcmp
      22: ifle          27
      25: iconst_0
      26: ireturn
      27: aload_0
      28: getfield      #14                 // Field scale:I
      31: aload_1
      32: getfield      #14                 // Field scale:I
      35: if_icmpeq     40
      38: iconst_0
      39: ireturn
      40: aload_0
      41: getfield      #5                  // Field nullable:Z
      44: ifeq          56
      47: aload_1
      48: getfield      #5                  // Field nullable:Z
      51: ifne          56
      54: iconst_0
      55: ireturn
      56: aload_0
      57: getfield      #62                 // Field convertNullToDefault:Z
      60: aload_1
      61: getfield      #62                 // Field convertNullToDefault:Z
      64: if_icmpeq     69
      67: iconst_0
      68: ireturn
      69: aload_0
      70: getfield      #58                 // Field primaryKey:Z
      73: aload_1
      74: getfield      #58                 // Field primaryKey:Z
      77: if_icmpeq     82
      80: iconst_0
      81: ireturn
      82: aload_0
      83: getfield      #105                // Field autoIncrement:Z
      86: ifne          96
      89: aload_1
      90: getfield      #105                // Field autoIncrement:Z
      93: ifeq          98
      96: iconst_0
      97: ireturn
      98: aload_0
      99: getfield      #77                 // Field checkConstraint:Lorg/h2/expression/Expression;
     102: ifnonnull     112
     105: aload_1
     106: getfield      #77                 // Field checkConstraint:Lorg/h2/expression/Expression;
     109: ifnull        114
     112: iconst_0
     113: ireturn
     114: aload_0
     115: getfield      #62                 // Field convertNullToDefault:Z
     118: ifne          128
     121: aload_1
     122: getfield      #62                 // Field convertNullToDefault:Z
     125: ifeq          130
     128: iconst_0
     129: ireturn
     130: aload_0
     131: getfield      #46                 // Field defaultExpression:Lorg/h2/expression/Expression;
     134: ifnonnull     144
     137: aload_1
     138: getfield      #46                 // Field defaultExpression:Lorg/h2/expression/Expression;
     141: ifnull        146
     144: iconst_0
     145: ireturn
     146: aload_0
     147: getfield      #42                 // Field isComputed:Z
     150: ifne          160
     153: aload_1
     154: getfield      #42                 // Field isComputed:Z
     157: ifeq          162
     160: iconst_0
     161: ireturn
     162: aload_0
     163: getfield      #52                 // Field onUpdateExpression:Lorg/h2/expression/Expression;
     166: ifnonnull     176
     169: aload_1
     170: getfield      #52                 // Field onUpdateExpression:Lorg/h2/expression/Expression;
     173: ifnull        178
     176: iconst_0
     177: ireturn
     178: iconst_1
     179: ireturn

  public void copy(org.h2.table.Column);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #77                 // Field checkConstraint:Lorg/h2/expression/Expression;
       5: putfield      #77                 // Field checkConstraint:Lorg/h2/expression/Expression;
       8: aload_0
       9: aload_1
      10: getfield      #153                // Field checkConstraintSQL:Ljava/lang/String;
      13: putfield      #153                // Field checkConstraintSQL:Ljava/lang/String;
      16: aload_0
      17: aload_1
      18: getfield      #15                 // Field displaySize:I
      21: putfield      #15                 // Field displaySize:I
      24: aload_0
      25: aload_1
      26: getfield      #7                  // Field name:Ljava/lang/String;
      29: putfield      #7                  // Field name:Ljava/lang/String;
      32: aload_0
      33: aload_1
      34: getfield      #13                 // Field precision:J
      37: putfield      #13                 // Field precision:J
      40: aload_0
      41: aload_1
      42: getfield      #16                 // Field enumerators:[Ljava/lang/String;
      45: ifnonnull     52
      48: aconst_null
      49: goto          67
      52: aload_1
      53: getfield      #16                 // Field enumerators:[Ljava/lang/String;
      56: aload_1
      57: getfield      #16                 // Field enumerators:[Ljava/lang/String;
      60: arraylength
      61: invokestatic  #168                // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      64: checkcast     #169                // class "[Ljava/lang/String;"
      67: putfield      #16                 // Field enumerators:[Ljava/lang/String;
      70: aload_0
      71: aload_1
      72: getfield      #14                 // Field scale:I
      75: putfield      #14                 // Field scale:I
      78: aload_0
      79: aload_1
      80: getfield      #5                  // Field nullable:Z
      83: putfield      #5                  // Field nullable:Z
      86: aload_0
      87: aload_1
      88: getfield      #46                 // Field defaultExpression:Lorg/h2/expression/Expression;
      91: putfield      #46                 // Field defaultExpression:Lorg/h2/expression/Expression;
      94: aload_0
      95: aload_1
      96: getfield      #52                 // Field onUpdateExpression:Lorg/h2/expression/Expression;
      99: putfield      #52                 // Field onUpdateExpression:Lorg/h2/expression/Expression;
     102: aload_0
     103: aload_1
     104: getfield      #108                // Field originalSQL:Ljava/lang/String;
     107: putfield      #108                // Field originalSQL:Ljava/lang/String;
     110: aload_0
     111: aload_1
     112: getfield      #62                 // Field convertNullToDefault:Z
     115: putfield      #62                 // Field convertNullToDefault:Z
     118: aload_0
     119: aload_1
     120: getfield      #97                 // Field sequence:Lorg/h2/schema/Sequence;
     123: putfield      #97                 // Field sequence:Lorg/h2/schema/Sequence;
     126: aload_0
     127: aload_1
     128: getfield      #149                // Field comment:Ljava/lang/String;
     131: putfield      #149                // Field comment:Ljava/lang/String;
     134: aload_0
     135: aload_1
     136: getfield      #43                 // Field computeTableFilter:Lorg/h2/table/TableFilter;
     139: putfield      #43                 // Field computeTableFilter:Lorg/h2/table/TableFilter;
     142: aload_0
     143: aload_1
     144: getfield      #42                 // Field isComputed:Z
     147: putfield      #42                 // Field isComputed:Z
     150: aload_0
     151: aload_1
     152: getfield      #147                // Field selectivity:I
     155: putfield      #147                // Field selectivity:I
     158: aload_0
     159: aload_1
     160: getfield      #58                 // Field primaryKey:Z
     163: putfield      #58                 // Field primaryKey:Z
     166: aload_0
     167: aload_1
     168: getfield      #6                  // Field visible:Z
     171: putfield      #6                  // Field visible:Z
     174: return
}
