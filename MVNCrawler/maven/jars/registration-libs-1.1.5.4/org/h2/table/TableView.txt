Compiled from "TableView.java"
public class org.h2.table.TableView extends org.h2.table.Table {
  private static final long ROW_COUNT_APPROXIMATION;

  private java.lang.String querySQL;

  private java.util.ArrayList<org.h2.table.Table> tables;

  private org.h2.table.Column[] columnTemplates;

  private org.h2.command.dml.Query viewQuery;

  private org.h2.index.ViewIndex index;

  private boolean allowRecursive;

  private org.h2.message.DbException createException;

  private long lastModificationCheck;

  private long maxDataModificationId;

  private org.h2.engine.User owner;

  private org.h2.command.dml.Query topQuery;

  private org.h2.result.ResultInterface recursiveResult;

  private boolean isRecursiveQueryDetected;

  private boolean isTableExpression;

  private boolean isPersistent;

  public org.h2.table.TableView(org.h2.schema.Schema, int, java.lang.String, java.lang.String, java.util.ArrayList<org.h2.expression.Parameter>, org.h2.table.Column[], org.h2.engine.Session, boolean, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: iconst_0
       5: iconst_1
       6: invokespecial #1                  // Method org/h2/table/Table."<init>":(Lorg/h2/schema/Schema;ILjava/lang/String;ZZ)V
       9: aload_0
      10: aload         4
      12: aload         5
      14: aload         6
      16: aload         7
      18: iload         8
      20: iload         9
      22: iload         10
      24: iload         11
      26: invokespecial #2                  // Method init:(Ljava/lang/String;Ljava/util/ArrayList;[Lorg/h2/table/Column;Lorg/h2/engine/Session;ZZZZ)V
      29: return

  public void replace(java.lang.String, org.h2.table.Column[], org.h2.engine.Session, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field querySQL:Ljava/lang/String;
       4: astore        7
       6: aload_0
       7: getfield      #4                  // Field columnTemplates:[Lorg/h2/table/Column;
      10: astore        8
      12: aload_0
      13: getfield      #5                  // Field allowRecursive:Z
      16: istore        9
      18: aload_0
      19: aload_1
      20: aconst_null
      21: aload_2
      22: ifnonnull     32
      25: aload_0
      26: getfield      #4                  // Field columnTemplates:[Lorg/h2/table/Column;
      29: goto          33
      32: aload_2
      33: aload_3
      34: iload         4
      36: iload         6
      38: aload_0
      39: getfield      #6                  // Field isTableExpression:Z
      42: aload_0
      43: getfield      #7                  // Field isPersistent:Z
      46: invokespecial #2                  // Method init:(Ljava/lang/String;Ljava/util/ArrayList;[Lorg/h2/table/Column;Lorg/h2/engine/Session;ZZZZ)V
      49: aload_0
      50: aload_3
      51: iload         5
      53: iconst_1
      54: invokevirtual #8                  // Method recompile:(Lorg/h2/engine/Session;ZZ)Lorg/h2/message/DbException;
      57: astore        10
      59: aload         10
      61: ifnull        97
      64: aload_0
      65: aload         7
      67: aconst_null
      68: aload         8
      70: aload_3
      71: iload         9
      73: iload         6
      75: aload_0
      76: getfield      #6                  // Field isTableExpression:Z
      79: aload_0
      80: getfield      #7                  // Field isPersistent:Z
      83: invokespecial #2                  // Method init:(Ljava/lang/String;Ljava/util/ArrayList;[Lorg/h2/table/Column;Lorg/h2/engine/Session;ZZZZ)V
      86: aload_0
      87: aload_3
      88: iconst_1
      89: iconst_0
      90: invokevirtual #8                  // Method recompile:(Lorg/h2/engine/Session;ZZ)Lorg/h2/message/DbException;
      93: pop
      94: aload         10
      96: athrow
      97: return

  private synchronized void init(java.lang.String, java.util.ArrayList<org.h2.expression.Parameter>, org.h2.table.Column[], org.h2.engine.Session, boolean, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field querySQL:Ljava/lang/String;
       5: aload_0
       6: aload_3
       7: putfield      #4                  // Field columnTemplates:[Lorg/h2/table/Column;
      10: aload_0
      11: iload         5
      13: putfield      #5                  // Field allowRecursive:Z
      16: aload_0
      17: iconst_0
      18: putfield      #9                  // Field isRecursiveQueryDetected:Z
      21: aload_0
      22: iload         7
      24: putfield      #6                  // Field isTableExpression:Z
      27: aload_0
      28: iload         8
      30: putfield      #7                  // Field isPersistent:Z
      33: aload_0
      34: new           #10                 // class org/h2/index/ViewIndex
      37: dup
      38: aload_0
      39: aload_1
      40: aload_2
      41: iload         5
      43: invokespecial #11                 // Method org/h2/index/ViewIndex."<init>":(Lorg/h2/table/TableView;Ljava/lang/String;Ljava/util/ArrayList;Z)V
      46: putfield      #12                 // Field index:Lorg/h2/index/ViewIndex;
      49: aload_0
      50: aload         4
      52: iload         6
      54: invokespecial #13                 // Method initColumnsAndTables:(Lorg/h2/engine/Session;Z)V
      57: return

  private org.h2.command.dml.Query compileViewQuery(org.h2.engine.Session, java.lang.String, boolean, java.lang.String);
    Code:
       0: aload_1
       1: iconst_1
       2: aload         4
       4: invokevirtual #14                 // Method org/h2/engine/Session.setParsingCreateView:(ZLjava/lang/String;)V
       7: aload_1
       8: aload_2
       9: iconst_0
      10: iload_3
      11: invokevirtual #15                 // Method org/h2/engine/Session.prepare:(Ljava/lang/String;ZZ)Lorg/h2/command/Prepared;
      14: astore        5
      16: aload_1
      17: iconst_0
      18: aload         4
      20: invokevirtual #14                 // Method org/h2/engine/Session.setParsingCreateView:(ZLjava/lang/String;)V
      23: goto          38
      26: astore        6
      28: aload_1
      29: iconst_0
      30: aload         4
      32: invokevirtual #14                 // Method org/h2/engine/Session.setParsingCreateView:(ZLjava/lang/String;)V
      35: aload         6
      37: athrow
      38: aload         5
      40: instanceof    #16                 // class org/h2/command/dml/Query
      43: ifne          52
      46: aload_2
      47: iconst_0
      48: invokestatic  #17                 // Method org/h2/message/DbException.getSyntaxError:(Ljava/lang/String;I)Lorg/h2/message/DbException;
      51: athrow
      52: aload         5
      54: checkcast     #16                 // class org/h2/command/dml/Query
      57: astore        6
      59: aload_0
      60: getfield      #6                  // Field isTableExpression:Z
      63: ifeq          79
      66: aload_0
      67: getfield      #5                  // Field allowRecursive:Z
      70: ifeq          79
      73: aload         6
      75: iconst_1
      76: invokevirtual #18                 // Method org/h2/command/dml/Query.setNeverLazy:(Z)V
      79: aload         6
      81: areturn
    Exception table:
       from    to  target type
           7    16    26   any
          26    28    26   any

  public synchronized org.h2.message.DbException recompile(org.h2.engine.Session, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #3                  // Field querySQL:Ljava/lang/String;
       6: iconst_0
       7: aload_0
       8: invokevirtual #19                 // Method getName:()Ljava/lang/String;
      11: invokespecial #20                 // Method compileViewQuery:(Lorg/h2/engine/Session;Ljava/lang/String;ZLjava/lang/String;)Lorg/h2/command/dml/Query;
      14: pop
      15: goto          27
      18: astore        4
      20: iload_2
      21: ifne          27
      24: aload         4
      26: areturn
      27: new           #22                 // class java/util/ArrayList
      30: dup
      31: aload_0
      32: invokevirtual #23                 // Method getDependentViews:()Ljava/util/concurrent/CopyOnWriteArrayList;
      35: invokespecial #24                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      38: astore        4
      40: aload_0
      41: aload_1
      42: iconst_0
      43: invokespecial #13                 // Method initColumnsAndTables:(Lorg/h2/engine/Session;Z)V
      46: aload         4
      48: invokevirtual #25                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      51: astore        5
      53: aload         5
      55: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      60: ifeq          100
      63: aload         5
      65: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      70: checkcast     #28                 // class org/h2/table/TableView
      73: astore        6
      75: aload         6
      77: aload_1
      78: iload_2
      79: iconst_0
      80: invokevirtual #8                  // Method recompile:(Lorg/h2/engine/Session;ZZ)Lorg/h2/message/DbException;
      83: astore        7
      85: aload         7
      87: ifnull        97
      90: iload_2
      91: ifne          97
      94: aload         7
      96: areturn
      97: goto          53
     100: iload_3
     101: ifeq          111
     104: aload_0
     105: getfield      #29                 // Field database:Lorg/h2/engine/Database;
     108: invokestatic  #30                 // Method clearIndexCaches:(Lorg/h2/engine/Database;)V
     111: iload_2
     112: ifeq          119
     115: aconst_null
     116: goto          123
     119: aload_0
     120: getfield      #31                 // Field createException:Lorg/h2/message/DbException;
     123: areturn
    Exception table:
       from    to  target type
           0    15    18   Class org/h2/message/DbException

  private void initColumnsAndTables(org.h2.engine.Session, boolean);
    Code:
       0: aload_0
       1: invokespecial #32                 // Method removeCurrentViewFromOtherTables:()V
       4: aload_0
       5: aload_0
       6: getfield      #6                  // Field isTableExpression:Z
       9: invokevirtual #33                 // Method setTableExpression:(Z)V
      12: aload_0
      13: aload_1
      14: aload_0
      15: getfield      #3                  // Field querySQL:Ljava/lang/String;
      18: iload_2
      19: aload_0
      20: invokevirtual #19                 // Method getName:()Ljava/lang/String;
      23: invokespecial #20                 // Method compileViewQuery:(Lorg/h2/engine/Session;Ljava/lang/String;ZLjava/lang/String;)Lorg/h2/command/dml/Query;
      26: astore        4
      28: aload_0
      29: aload         4
      31: invokevirtual #34                 // Method org/h2/command/dml/Query.getPlanSQL:()Ljava/lang/String;
      34: putfield      #3                  // Field querySQL:Ljava/lang/String;
      37: aload_0
      38: new           #22                 // class java/util/ArrayList
      41: dup
      42: aload         4
      44: invokevirtual #35                 // Method org/h2/command/dml/Query.getTables:()Ljava/util/HashSet;
      47: invokespecial #24                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      50: putfield      #36                 // Field tables:Ljava/util/ArrayList;
      53: aload         4
      55: invokevirtual #37                 // Method org/h2/command/dml/Query.getExpressions:()Ljava/util/ArrayList;
      58: astore        5
      60: invokestatic  #38                 // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
      63: astore        6
      65: new           #39                 // class org/h2/util/ColumnNamer
      68: dup
      69: aload_1
      70: invokespecial #40                 // Method org/h2/util/ColumnNamer."<init>":(Lorg/h2/engine/Session;)V
      73: astore        7
      75: iconst_0
      76: istore        8
      78: aload         4
      80: invokevirtual #41                 // Method org/h2/command/dml/Query.getColumnCount:()I
      83: istore        9
      85: iload         8
      87: iload         9
      89: if_icmpge     333
      92: aload         5
      94: iload         8
      96: invokevirtual #42                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      99: checkcast     #43                 // class org/h2/expression/Expression
     102: astore        10
     104: aconst_null
     105: astore        11
     107: iconst_m1
     108: istore        12
     110: aload_0
     111: getfield      #4                  // Field columnTemplates:[Lorg/h2/table/Column;
     114: ifnull        151
     117: aload_0
     118: getfield      #4                  // Field columnTemplates:[Lorg/h2/table/Column;
     121: arraylength
     122: iload         8
     124: if_icmple     151
     127: aload_0
     128: getfield      #4                  // Field columnTemplates:[Lorg/h2/table/Column;
     131: iload         8
     133: aaload
     134: invokevirtual #44                 // Method org/h2/table/Column.getName:()Ljava/lang/String;
     137: astore        11
     139: aload_0
     140: getfield      #4                  // Field columnTemplates:[Lorg/h2/table/Column;
     143: iload         8
     145: aaload
     146: invokevirtual #45                 // Method org/h2/table/Column.getType:()I
     149: istore        12
     151: aload         11
     153: ifnonnull     163
     156: aload         10
     158: invokevirtual #46                 // Method org/h2/expression/Expression.getAlias:()Ljava/lang/String;
     161: astore        11
     163: aload         7
     165: aload         10
     167: iload         8
     169: aload         11
     171: invokevirtual #47                 // Method org/h2/util/ColumnNamer.getColumnName:(Lorg/h2/expression/Expression;ILjava/lang/String;)Ljava/lang/String;
     174: astore        11
     176: iload         12
     178: iconst_m1
     179: if_icmpne     189
     182: aload         10
     184: invokevirtual #48                 // Method org/h2/expression/Expression.getType:()I
     187: istore        12
     189: aload         10
     191: invokevirtual #49                 // Method org/h2/expression/Expression.getPrecision:()J
     194: lstore        13
     196: aload         10
     198: invokevirtual #50                 // Method org/h2/expression/Expression.getScale:()I
     201: istore        15
     203: aload         10
     205: invokevirtual #51                 // Method org/h2/expression/Expression.getDisplaySize:()I
     208: istore        16
     210: new           #52                 // class org/h2/table/Column
     213: dup
     214: aload         11
     216: iload         12
     218: lload         13
     220: iload         15
     222: iload         16
     224: invokespecial #53                 // Method org/h2/table/Column."<init>":(Ljava/lang/String;IJII)V
     227: astore        17
     229: aload         17
     231: aload_0
     232: iload         8
     234: invokevirtual #54                 // Method org/h2/table/Column.setTable:(Lorg/h2/table/Table;I)V
     237: aconst_null
     238: astore        18
     240: aload         10
     242: instanceof    #55                 // class org/h2/expression/ExpressionColumn
     245: ifeq          258
     248: aload         10
     250: checkcast     #55                 // class org/h2/expression/ExpressionColumn
     253: astore        18
     255: goto          288
     258: aload         10
     260: instanceof    #56                 // class org/h2/expression/Alias
     263: ifeq          288
     266: aload         10
     268: invokevirtual #57                 // Method org/h2/expression/Expression.getNonAliasExpression:()Lorg/h2/expression/Expression;
     271: astore        19
     273: aload         19
     275: instanceof    #55                 // class org/h2/expression/ExpressionColumn
     278: ifeq          288
     281: aload         19
     283: checkcast     #55                 // class org/h2/expression/ExpressionColumn
     286: astore        18
     288: aload         18
     290: ifnull        319
     293: aload         18
     295: invokevirtual #58                 // Method org/h2/expression/ExpressionColumn.getColumn:()Lorg/h2/table/Column;
     298: aload_1
     299: aload         11
     301: invokevirtual #59                 // Method org/h2/table/Column.getCheckConstraint:(Lorg/h2/engine/Session;Ljava/lang/String;)Lorg/h2/expression/Expression;
     304: astore        19
     306: aload         19
     308: ifnull        319
     311: aload         17
     313: aload_1
     314: aload         19
     316: invokevirtual #60                 // Method org/h2/table/Column.addCheckConstraint:(Lorg/h2/engine/Session;Lorg/h2/expression/Expression;)V
     319: aload         6
     321: aload         17
     323: invokevirtual #61                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     326: pop
     327: iinc          8, 1
     330: goto          85
     333: aload         6
     335: iconst_0
     336: anewarray     #52                 // class org/h2/table/Column
     339: invokevirtual #62                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     342: checkcast     #63                 // class "[Lorg/h2/table/Column;"
     345: astore_3
     346: aload_0
     347: aconst_null
     348: putfield      #31                 // Field createException:Lorg/h2/message/DbException;
     351: aload_0
     352: aload         4
     354: putfield      #64                 // Field viewQuery:Lorg/h2/command/dml/Query;
     357: goto          475
     360: astore        4
     362: aload         4
     364: aload_0
     365: invokevirtual #65                 // Method getCreateSQL:()Ljava/lang/String;
     368: invokevirtual #66                 // Method org/h2/message/DbException.addSQL:(Ljava/lang/String;)Lorg/h2/message/DbException;
     371: pop
     372: aload_0
     373: aload         4
     375: putfield      #31                 // Field createException:Lorg/h2/message/DbException;
     378: aload_0
     379: aload_0
     380: getfield      #31                 // Field createException:Lorg/h2/message/DbException;
     383: invokespecial #67                 // Method isRecursiveQueryExceptionDetected:(Lorg/h2/message/DbException;)Z
     386: ifeq          394
     389: aload_0
     390: iconst_1
     391: putfield      #9                  // Field isRecursiveQueryDetected:Z
     394: aload_0
     395: invokestatic  #38                 // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
     398: putfield      #36                 // Field tables:Ljava/util/ArrayList;
     401: iconst_0
     402: anewarray     #52                 // class org/h2/table/Column
     405: astore_3
     406: aload_0
     407: getfield      #5                  // Field allowRecursive:Z
     410: ifeq          475
     413: aload_0
     414: getfield      #4                  // Field columnTemplates:[Lorg/h2/table/Column;
     417: ifnull        475
     420: aload_0
     421: getfield      #4                  // Field columnTemplates:[Lorg/h2/table/Column;
     424: arraylength
     425: anewarray     #52                 // class org/h2/table/Column
     428: astore_3
     429: iconst_0
     430: istore        5
     432: iload         5
     434: aload_0
     435: getfield      #4                  // Field columnTemplates:[Lorg/h2/table/Column;
     438: arraylength
     439: if_icmpge     462
     442: aload_3
     443: iload         5
     445: aload_0
     446: getfield      #4                  // Field columnTemplates:[Lorg/h2/table/Column;
     449: iload         5
     451: aaload
     452: invokevirtual #68                 // Method org/h2/table/Column.getClone:()Lorg/h2/table/Column;
     455: aastore
     456: iinc          5, 1
     459: goto          432
     462: aload_0
     463: getfield      #12                 // Field index:Lorg/h2/index/ViewIndex;
     466: iconst_1
     467: invokevirtual #69                 // Method org/h2/index/ViewIndex.setRecursive:(Z)V
     470: aload_0
     471: aconst_null
     472: putfield      #31                 // Field createException:Lorg/h2/message/DbException;
     475: aload_0
     476: aload_3
     477: invokevirtual #70                 // Method setColumns:([Lorg/h2/table/Column;)V
     480: aload_0
     481: invokevirtual #71                 // Method getId:()I
     484: ifeq          491
     487: aload_0
     488: invokespecial #72                 // Method addDependentViewToTables:()V
     491: return
    Exception table:
       from    to  target type
          12   357   360   Class org/h2/message/DbException

  public boolean isView();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isInvalid();
    Code:
       0: aload_0
       1: getfield      #31                 // Field createException:Lorg/h2/message/DbException;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public org.h2.table.PlanItem getBestPlanItem(org.h2.engine.Session, int[], org.h2.table.TableFilter[], int, org.h2.result.SortOrder, java.util.HashSet<org.h2.table.Column>);
    Code:
       0: new           #73                 // class org/h2/table/TableView$CacheKey
       3: dup
       4: aload_2
       5: aload_0
       6: invokespecial #74                 // Method org/h2/table/TableView$CacheKey."<init>":([ILorg/h2/table/TableView;)V
       9: astore        7
      11: aload_1
      12: aload_0
      13: getfield      #75                 // Field topQuery:Lorg/h2/command/dml/Query;
      16: ifnull        23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: invokevirtual #76                 // Method org/h2/engine/Session.getViewIndexCache:(Z)Ljava/util/Map;
      27: astore        8
      29: aload         8
      31: aload         7
      33: invokeinterface #77,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #10                 // class org/h2/index/ViewIndex
      41: astore        9
      43: aload         9
      45: ifnull        56
      48: aload         9
      50: invokevirtual #78                 // Method org/h2/index/ViewIndex.isExpired:()Z
      53: ifeq          89
      56: new           #10                 // class org/h2/index/ViewIndex
      59: dup
      60: aload_0
      61: aload_0
      62: getfield      #12                 // Field index:Lorg/h2/index/ViewIndex;
      65: aload_1
      66: aload_2
      67: aload_3
      68: iload         4
      70: aload         5
      72: invokespecial #79                 // Method org/h2/index/ViewIndex."<init>":(Lorg/h2/table/TableView;Lorg/h2/index/ViewIndex;Lorg/h2/engine/Session;[I[Lorg/h2/table/TableFilter;ILorg/h2/result/SortOrder;)V
      75: astore        9
      77: aload         8
      79: aload         7
      81: aload         9
      83: invokeinterface #80,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      88: pop
      89: new           #81                 // class org/h2/table/PlanItem
      92: dup
      93: invokespecial #82                 // Method org/h2/table/PlanItem."<init>":()V
      96: astore        10
      98: aload         10
     100: aload         9
     102: aload_1
     103: aload_2
     104: aload_3
     105: iload         4
     107: aload         5
     109: aload         6
     111: invokevirtual #83                 // Method org/h2/index/ViewIndex.getCost:(Lorg/h2/engine/Session;[I[Lorg/h2/table/TableFilter;ILorg/h2/result/SortOrder;Ljava/util/HashSet;)D
     114: putfield      #84                 // Field org/h2/table/PlanItem.cost:D
     117: aload         10
     119: aload         9
     121: invokevirtual #85                 // Method org/h2/table/PlanItem.setIndex:(Lorg/h2/index/Index;)V
     124: aload         10
     126: areturn

  public boolean isQueryComparable();
    Code:
       0: aload_0
       1: invokespecial #86                 // Method org/h2/table/Table.isQueryComparable:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #36                 // Field tables:Ljava/util/ArrayList;
      13: invokevirtual #25                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      16: astore_1
      17: aload_1
      18: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          48
      26: aload_1
      27: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #87                 // class org/h2/table/Table
      35: astore_2
      36: aload_2
      37: invokevirtual #86                 // Method org/h2/table/Table.isQueryComparable:()Z
      40: ifne          45
      43: iconst_0
      44: ireturn
      45: goto          17
      48: aload_0
      49: getfield      #75                 // Field topQuery:Lorg/h2/command/dml/Query;
      52: ifnull        70
      55: aload_0
      56: getfield      #75                 // Field topQuery:Lorg/h2/command/dml/Query;
      59: getstatic     #88                 // Field org/h2/expression/ExpressionVisitor.QUERY_COMPARABLE_VISITOR:Lorg/h2/expression/ExpressionVisitor;
      62: invokevirtual #89                 // Method org/h2/command/dml/Query.isEverything:(Lorg/h2/expression/ExpressionVisitor;)Z
      65: ifne          70
      68: iconst_0
      69: ireturn
      70: iconst_1
      71: ireturn

  public org.h2.command.dml.Query getTopQuery();
    Code:
       0: aload_0
       1: getfield      #75                 // Field topQuery:Lorg/h2/command/dml/Query;
       4: areturn

  public java.lang.String getDropSQL();
    Code:
       0: new           #90                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #92                 // String DROP VIEW IF EXISTS
       9: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #94                 // Method getSQL:()Ljava/lang/String;
      16: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #95                 // String  CASCADE
      21: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public java.lang.String getCreateSQLForCopy(org.h2.table.Table, java.lang.String);
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_1
       3: aload_2
       4: invokespecial #97                 // Method getCreateSQL:(ZZLjava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String getCreateSQL();
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_1
       3: invokevirtual #98                 // Method getCreateSQL:(ZZ)Ljava/lang/String;
       6: areturn

  public java.lang.String getCreateSQL(boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_0
       4: invokevirtual #94                 // Method getSQL:()Ljava/lang/String;
       7: invokespecial #97                 // Method getCreateSQL:(ZZLjava/lang/String;)Ljava/lang/String;
      10: areturn

  private java.lang.String getCreateSQL(boolean, boolean, java.lang.String);
    Code:
       0: new           #99                 // class org/h2/util/StatementBuilder
       3: dup
       4: ldc           #100                // String CREATE
       6: invokespecial #101                // Method org/h2/util/StatementBuilder."<init>":(Ljava/lang/String;)V
       9: astore        4
      11: iload_1
      12: ifeq          23
      15: aload         4
      17: ldc           #102                // String OR REPLACE
      19: invokevirtual #103                // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      22: pop
      23: iload_2
      24: ifeq          35
      27: aload         4
      29: ldc           #104                // String FORCE
      31: invokevirtual #103                // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      34: pop
      35: aload         4
      37: ldc           #105                // String VIEW
      39: invokevirtual #103                // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      42: pop
      43: aload_0
      44: getfield      #6                  // Field isTableExpression:Z
      47: ifeq          58
      50: aload         4
      52: ldc           #106                // String TABLE_EXPRESSION
      54: invokevirtual #103                // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      57: pop
      58: aload         4
      60: aload_3
      61: invokevirtual #103                // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      64: pop
      65: aload_0
      66: getfield      #107                // Field comment:Ljava/lang/String;
      69: ifnull        90
      72: aload         4
      74: ldc           #108                // String  COMMENT
      76: invokevirtual #103                // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      79: aload_0
      80: getfield      #107                // Field comment:Ljava/lang/String;
      83: invokestatic  #109                // Method org/h2/util/StringUtils.quoteStringSQL:(Ljava/lang/String;)Ljava/lang/String;
      86: invokevirtual #103                // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      89: pop
      90: aload_0
      91: getfield      #110                // Field columns:[Lorg/h2/table/Column;
      94: ifnull        176
      97: aload_0
      98: getfield      #110                // Field columns:[Lorg/h2/table/Column;
     101: arraylength
     102: ifle          176
     105: aload         4
     107: bipush        40
     109: invokevirtual #111                // Method org/h2/util/StatementBuilder.append:(C)Lorg/h2/util/StatementBuilder;
     112: pop
     113: aload_0
     114: getfield      #110                // Field columns:[Lorg/h2/table/Column;
     117: astore        5
     119: aload         5
     121: arraylength
     122: istore        6
     124: iconst_0
     125: istore        7
     127: iload         7
     129: iload         6
     131: if_icmpge     165
     134: aload         5
     136: iload         7
     138: aaload
     139: astore        8
     141: aload         4
     143: ldc           #112                // String ,
     145: invokevirtual #113                // Method org/h2/util/StatementBuilder.appendExceptFirst:(Ljava/lang/String;)V
     148: aload         4
     150: aload         8
     152: invokevirtual #114                // Method org/h2/table/Column.getSQL:()Ljava/lang/String;
     155: invokevirtual #103                // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
     158: pop
     159: iinc          7, 1
     162: goto          127
     165: aload         4
     167: bipush        41
     169: invokevirtual #111                // Method org/h2/util/StatementBuilder.append:(C)Lorg/h2/util/StatementBuilder;
     172: pop
     173: goto          251
     176: aload_0
     177: getfield      #4                  // Field columnTemplates:[Lorg/h2/table/Column;
     180: ifnull        251
     183: aload         4
     185: bipush        40
     187: invokevirtual #111                // Method org/h2/util/StatementBuilder.append:(C)Lorg/h2/util/StatementBuilder;
     190: pop
     191: aload_0
     192: getfield      #4                  // Field columnTemplates:[Lorg/h2/table/Column;
     195: astore        5
     197: aload         5
     199: arraylength
     200: istore        6
     202: iconst_0
     203: istore        7
     205: iload         7
     207: iload         6
     209: if_icmpge     243
     212: aload         5
     214: iload         7
     216: aaload
     217: astore        8
     219: aload         4
     221: ldc           #112                // String ,
     223: invokevirtual #113                // Method org/h2/util/StatementBuilder.appendExceptFirst:(Ljava/lang/String;)V
     226: aload         4
     228: aload         8
     230: invokevirtual #44                 // Method org/h2/table/Column.getName:()Ljava/lang/String;
     233: invokevirtual #103                // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
     236: pop
     237: iinc          7, 1
     240: goto          205
     243: aload         4
     245: bipush        41
     247: invokevirtual #111                // Method org/h2/util/StatementBuilder.append:(C)Lorg/h2/util/StatementBuilder;
     250: pop
     251: aload         4
     253: ldc           #115                // String  AS\n
     255: invokevirtual #103                // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
     258: aload_0
     259: getfield      #3                  // Field querySQL:Ljava/lang/String;
     262: invokevirtual #103                // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
     265: invokevirtual #116                // Method org/h2/util/StatementBuilder.toString:()Ljava/lang/String;
     268: areturn

  public void checkRename();
    Code:
       0: return

  public boolean lock(org.h2.engine.Session, boolean, boolean);
    Code:
       0: iconst_0
       1: ireturn

  public void close(org.h2.engine.Session);
    Code:
       0: return

  public void unlock(org.h2.engine.Session);
    Code:
       0: return

  public boolean isLockedExclusively();
    Code:
       0: iconst_0
       1: ireturn

  public org.h2.index.Index addIndex(org.h2.engine.Session, java.lang.String, int, org.h2.table.IndexColumn[], org.h2.index.IndexType, boolean, java.lang.String);
    Code:
       0: ldc           #117                // String VIEW
       2: invokestatic  #118                // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
       5: athrow

  public void removeRow(org.h2.engine.Session, org.h2.result.Row);
    Code:
       0: ldc           #117                // String VIEW
       2: invokestatic  #118                // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
       5: athrow

  public void addRow(org.h2.engine.Session, org.h2.result.Row);
    Code:
       0: ldc           #117                // String VIEW
       2: invokestatic  #118                // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
       5: athrow

  public void checkSupportAlter();
    Code:
       0: ldc           #117                // String VIEW
       2: invokestatic  #118                // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
       5: athrow

  public void truncate(org.h2.engine.Session);
    Code:
       0: ldc           #117                // String VIEW
       2: invokestatic  #118                // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
       5: athrow

  public long getRowCount(org.h2.engine.Session);
    Code:
       0: aload_0
       1: invokevirtual #119                // Method toString:()Ljava/lang/String;
       4: invokestatic  #120                // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
       7: athrow

  public boolean canGetRowCount();
    Code:
       0: iconst_0
       1: ireturn

  public boolean canDrop();
    Code:
       0: iconst_1
       1: ireturn

  public org.h2.table.TableType getTableType();
    Code:
       0: getstatic     #121                // Field org/h2/table/TableType.VIEW:Lorg/h2/table/TableType;
       3: areturn

  public void removeChildrenAndResources(org.h2.engine.Session);
    Code:
       0: aload_0
       1: invokespecial #32                 // Method removeCurrentViewFromOtherTables:()V
       4: aload_0
       5: aload_1
       6: invokespecial #122                // Method org/h2/table/Table.removeChildrenAndResources:(Lorg/h2/engine/Session;)V
       9: aload_0
      10: getfield      #29                 // Field database:Lorg/h2/engine/Database;
      13: aload_1
      14: aload_0
      15: invokevirtual #71                 // Method getId:()I
      18: invokevirtual #123                // Method org/h2/engine/Database.removeMeta:(Lorg/h2/engine/Session;I)V
      21: aload_0
      22: aconst_null
      23: putfield      #3                  // Field querySQL:Ljava/lang/String;
      26: aload_0
      27: aconst_null
      28: putfield      #12                 // Field index:Lorg/h2/index/ViewIndex;
      31: aload_0
      32: getfield      #29                 // Field database:Lorg/h2/engine/Database;
      35: invokestatic  #30                 // Method clearIndexCaches:(Lorg/h2/engine/Database;)V
      38: aload_0
      39: invokevirtual #124                // Method invalidate:()V
      42: return

  public static void clearIndexCaches(org.h2.engine.Database);
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #125                // Method org/h2/engine/Database.getSessions:(Z)[Lorg/h2/engine/Session;
       5: astore_1
       6: aload_1
       7: arraylength
       8: istore_2
       9: iconst_0
      10: istore_3
      11: iload_3
      12: iload_2
      13: if_icmpge     32
      16: aload_1
      17: iload_3
      18: aaload
      19: astore        4
      21: aload         4
      23: invokevirtual #126                // Method org/h2/engine/Session.clearViewIndexCache:()V
      26: iinc          3, 1
      29: goto          11
      32: return

  public java.lang.String getSQL();
    Code:
       0: aload_0
       1: invokevirtual #127                // Method isTemporary:()Z
       4: ifeq          45
       7: aload_0
       8: getfield      #3                  // Field querySQL:Ljava/lang/String;
      11: ifnull        45
      14: new           #90                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #128                // String (\n
      23: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #3                  // Field querySQL:Ljava/lang/String;
      30: invokestatic  #129                // Method org/h2/util/StringUtils.indent:(Ljava/lang/String;)Ljava/lang/String;
      33: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #130                // String )
      38: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: areturn
      45: aload_0
      46: invokespecial #131                // Method org/h2/table/Table.getSQL:()Ljava/lang/String;
      49: areturn

  public java.lang.String getQuery();
    Code:
       0: aload_0
       1: getfield      #3                  // Field querySQL:Ljava/lang/String;
       4: areturn

  public org.h2.index.Index getScanIndex(org.h2.engine.Session);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: iconst_m1
       5: aconst_null
       6: aconst_null
       7: invokevirtual #132                // Method getBestPlanItem:(Lorg/h2/engine/Session;[I[Lorg/h2/table/TableFilter;ILorg/h2/result/SortOrder;Ljava/util/HashSet;)Lorg/h2/table/PlanItem;
      10: invokevirtual #133                // Method org/h2/table/PlanItem.getIndex:()Lorg/h2/index/Index;
      13: areturn

  public org.h2.index.Index getScanIndex(org.h2.engine.Session, int[], org.h2.table.TableFilter[], int, org.h2.result.SortOrder, java.util.HashSet<org.h2.table.Column>);
    Code:
       0: aload_0
       1: getfield      #31                 // Field createException:Lorg/h2/message/DbException;
       4: ifnull        42
       7: aload_0
       8: getfield      #31                 // Field createException:Lorg/h2/message/DbException;
      11: invokevirtual #134                // Method org/h2/message/DbException.getMessage:()Ljava/lang/String;
      14: astore        7
      16: ldc           #135                // int 90109
      18: aload_0
      19: getfield      #31                 // Field createException:Lorg/h2/message/DbException;
      22: iconst_2
      23: anewarray     #136                // class java/lang/String
      26: dup
      27: iconst_0
      28: aload_0
      29: invokevirtual #94                 // Method getSQL:()Ljava/lang/String;
      32: aastore
      33: dup
      34: iconst_1
      35: aload         7
      37: aastore
      38: invokestatic  #137                // Method org/h2/message/DbException.get:(ILjava/lang/Throwable;[Ljava/lang/String;)Lorg/h2/message/DbException;
      41: athrow
      42: aload_0
      43: aload_1
      44: aload_2
      45: aload_3
      46: iload         4
      48: aload         5
      50: aload         6
      52: invokevirtual #132                // Method getBestPlanItem:(Lorg/h2/engine/Session;[I[Lorg/h2/table/TableFilter;ILorg/h2/result/SortOrder;Ljava/util/HashSet;)Lorg/h2/table/PlanItem;
      55: astore        7
      57: aload         7
      59: invokevirtual #133                // Method org/h2/table/PlanItem.getIndex:()Lorg/h2/index/Index;
      62: areturn

  public boolean canReference();
    Code:
       0: iconst_0
       1: ireturn

  public java.util.ArrayList<org.h2.index.Index> getIndexes();
    Code:
       0: aconst_null
       1: areturn

  public long getMaxDataModificationId();
    Code:
       0: aload_0
       1: getfield      #31                 // Field createException:Lorg/h2/message/DbException;
       4: ifnull        11
       7: ldc2_w        #138                // long 9223372036854775807l
      10: lreturn
      11: aload_0
      12: getfield      #64                 // Field viewQuery:Lorg/h2/command/dml/Query;
      15: ifnonnull     22
      18: ldc2_w        #138                // long 9223372036854775807l
      21: lreturn
      22: aload_0
      23: getfield      #29                 // Field database:Lorg/h2/engine/Database;
      26: invokevirtual #140                // Method org/h2/engine/Database.getModificationDataId:()J
      29: lstore_1
      30: lload_1
      31: aload_0
      32: getfield      #141                // Field lastModificationCheck:J
      35: lcmp
      36: ifle          64
      39: aload_0
      40: getfield      #142                // Field maxDataModificationId:J
      43: lload_1
      44: lcmp
      45: ifgt          64
      48: aload_0
      49: aload_0
      50: getfield      #64                 // Field viewQuery:Lorg/h2/command/dml/Query;
      53: invokevirtual #143                // Method org/h2/command/dml/Query.getMaxDataModificationId:()J
      56: putfield      #142                // Field maxDataModificationId:J
      59: aload_0
      60: lload_1
      61: putfield      #141                // Field lastModificationCheck:J
      64: aload_0
      65: getfield      #142                // Field maxDataModificationId:J
      68: lreturn

  public org.h2.index.Index getUniqueIndex();
    Code:
       0: aconst_null
       1: areturn

  private void removeCurrentViewFromOtherTables();
    Code:
       0: aload_0
       1: getfield      #36                 // Field tables:Ljava/util/ArrayList;
       4: ifnull        49
       7: aload_0
       8: getfield      #36                 // Field tables:Ljava/util/ArrayList;
      11: invokevirtual #25                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          42
      24: aload_1
      25: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #87                 // class org/h2/table/Table
      33: astore_2
      34: aload_2
      35: aload_0
      36: invokevirtual #144                // Method org/h2/table/Table.removeDependentView:(Lorg/h2/table/TableView;)V
      39: goto          15
      42: aload_0
      43: getfield      #36                 // Field tables:Ljava/util/ArrayList;
      46: invokevirtual #145                // Method java/util/ArrayList.clear:()V
      49: return

  private void addDependentViewToTables();
    Code:
       0: aload_0
       1: getfield      #36                 // Field tables:Ljava/util/ArrayList;
       4: invokevirtual #25                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          35
      17: aload_1
      18: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #87                 // class org/h2/table/Table
      26: astore_2
      27: aload_2
      28: aload_0
      29: invokevirtual #146                // Method org/h2/table/Table.addDependentView:(Lorg/h2/table/TableView;)V
      32: goto          8
      35: return

  private void setOwner(org.h2.engine.User);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #147                // Field owner:Lorg/h2/engine/User;
       5: return

  public org.h2.engine.User getOwner();
    Code:
       0: aload_0
       1: getfield      #147                // Field owner:Lorg/h2/engine/User;
       4: areturn

  public static org.h2.table.TableView createTempView(org.h2.engine.Session, org.h2.engine.User, java.lang.String, org.h2.command.dml.Query, org.h2.command.dml.Query);
    Code:
       0: aload_0
       1: invokevirtual #148                // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
       4: ldc           #149                // String PUBLIC
       6: invokevirtual #150                // Method org/h2/engine/Database.getSchema:(Ljava/lang/String;)Lorg/h2/schema/Schema;
       9: astore        5
      11: aload_3
      12: invokevirtual #34                 // Method org/h2/command/dml/Query.getPlanSQL:()Ljava/lang/String;
      15: astore        6
      17: new           #28                 // class org/h2/table/TableView
      20: dup
      21: aload         5
      23: iconst_0
      24: aload_2
      25: aload         6
      27: aload_3
      28: invokevirtual #151                // Method org/h2/command/dml/Query.getParameters:()Ljava/util/ArrayList;
      31: aconst_null
      32: aload_0
      33: iconst_0
      34: iconst_1
      35: iconst_0
      36: iconst_0
      37: invokespecial #152                // Method "<init>":(Lorg/h2/schema/Schema;ILjava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;[Lorg/h2/table/Column;Lorg/h2/engine/Session;ZZZZ)V
      40: astore        7
      42: aload         7
      44: getfield      #31                 // Field createException:Lorg/h2/message/DbException;
      47: ifnull        56
      50: aload         7
      52: getfield      #31                 // Field createException:Lorg/h2/message/DbException;
      55: athrow
      56: aload         7
      58: aload         4
      60: invokespecial #153                // Method setTopQuery:(Lorg/h2/command/dml/Query;)V
      63: aload         7
      65: aload_1
      66: invokespecial #154                // Method setOwner:(Lorg/h2/engine/User;)V
      69: aload         7
      71: iconst_1
      72: invokevirtual #155                // Method setTemporary:(Z)V
      75: aload         7
      77: areturn

  private void setTopQuery(org.h2.command.dml.Query);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #75                 // Field topQuery:Lorg/h2/command/dml/Query;
       5: return

  public long getRowCountApproximation();
    Code:
       0: ldc2_w        #156                // long 100l
       3: lreturn

  public long getDiskSpaceUsed();
    Code:
       0: lconst_0
       1: lreturn

  public int getParameterOffset(java.util.ArrayList<org.h2.expression.Parameter>);
    Code:
       0: aload_0
       1: getfield      #75                 // Field topQuery:Lorg/h2/command/dml/Query;
       4: ifnonnull     11
       7: iconst_m1
       8: goto          21
      11: aload_0
      12: getfield      #75                 // Field topQuery:Lorg/h2/command/dml/Query;
      15: invokevirtual #151                // Method org/h2/command/dml/Query.getParameters:()Ljava/util/ArrayList;
      18: invokestatic  #158                // Method getMaxParameterIndex:(Ljava/util/ArrayList;)I
      21: istore_2
      22: aload_1
      23: ifnull        35
      26: iload_2
      27: aload_1
      28: invokestatic  #158                // Method getMaxParameterIndex:(Ljava/util/ArrayList;)I
      31: invokestatic  #159                // Method java/lang/Math.max:(II)I
      34: istore_2
      35: iload_2
      36: iconst_1
      37: iadd
      38: ireturn

  private static int getMaxParameterIndex(java.util.ArrayList<org.h2.expression.Parameter>);
    Code:
       0: iconst_m1
       1: istore_1
       2: aload_0
       3: invokevirtual #25                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          38
      16: aload_2
      17: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #160                // class org/h2/expression/Parameter
      25: astore_3
      26: iload_1
      27: aload_3
      28: invokevirtual #161                // Method org/h2/expression/Parameter.getIndex:()I
      31: invokestatic  #159                // Method java/lang/Math.max:(II)I
      34: istore_1
      35: goto          7
      38: iload_1
      39: ireturn

  public boolean isRecursive();
    Code:
       0: aload_0
       1: getfield      #5                  // Field allowRecursive:Z
       4: ireturn

  public boolean isDeterministic();
    Code:
       0: aload_0
       1: getfield      #5                  // Field allowRecursive:Z
       4: ifne          14
       7: aload_0
       8: getfield      #64                 // Field viewQuery:Lorg/h2/command/dml/Query;
      11: ifnonnull     16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: getfield      #64                 // Field viewQuery:Lorg/h2/command/dml/Query;
      20: getstatic     #162                // Field org/h2/expression/ExpressionVisitor.DETERMINISTIC_VISITOR:Lorg/h2/expression/ExpressionVisitor;
      23: invokevirtual #89                 // Method org/h2/command/dml/Query.isEverything:(Lorg/h2/expression/ExpressionVisitor;)Z
      26: ireturn

  public void setRecursiveResult(org.h2.result.ResultInterface);
    Code:
       0: aload_0
       1: getfield      #163                // Field recursiveResult:Lorg/h2/result/ResultInterface;
       4: ifnull        16
       7: aload_0
       8: getfield      #163                // Field recursiveResult:Lorg/h2/result/ResultInterface;
      11: invokeinterface #164,  1          // InterfaceMethod org/h2/result/ResultInterface.close:()V
      16: aload_0
      17: aload_1
      18: putfield      #163                // Field recursiveResult:Lorg/h2/result/ResultInterface;
      21: return

  public org.h2.result.ResultInterface getRecursiveResult();
    Code:
       0: aload_0
       1: getfield      #163                // Field recursiveResult:Lorg/h2/result/ResultInterface;
       4: areturn

  public void addDependencies(java.util.HashSet<org.h2.engine.DbObject>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #165                // Method org/h2/table/Table.addDependencies:(Ljava/util/HashSet;)V
       5: aload_0
       6: getfield      #36                 // Field tables:Ljava/util/ArrayList;
       9: ifnull        57
      12: aload_0
      13: getfield      #36                 // Field tables:Ljava/util/ArrayList;
      16: invokevirtual #25                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          57
      29: aload_2
      30: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #87                 // class org/h2/table/Table
      38: astore_3
      39: getstatic     #121                // Field org/h2/table/TableType.VIEW:Lorg/h2/table/TableType;
      42: aload_3
      43: invokevirtual #166                // Method org/h2/table/Table.getTableType:()Lorg/h2/table/TableType;
      46: if_acmpeq     54
      49: aload_3
      50: aload_1
      51: invokevirtual #165                // Method org/h2/table/Table.addDependencies:(Ljava/util/HashSet;)V
      54: goto          20
      57: return

  public boolean isRecursiveQueryDetected();
    Code:
       0: aload_0
       1: getfield      #9                  // Field isRecursiveQueryDetected:Z
       4: ireturn

  private boolean isRecursiveQueryExceptionDetected(org.h2.message.DbException);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokevirtual #167                // Method org/h2/message/DbException.getErrorCode:()I
      10: ldc           #168                // int 42102
      12: if_icmpeq     17
      15: iconst_0
      16: ireturn
      17: aload_1
      18: invokevirtual #134                // Method org/h2/message/DbException.getMessage:()Ljava/lang/String;
      21: new           #90                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #169                // String \"
      30: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: invokevirtual #19                 // Method getName:()Ljava/lang/String;
      37: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: ldc           #169                // String \"
      42: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokevirtual #170                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      51: ireturn

  public java.util.List<org.h2.table.Table> getTables();
    Code:
       0: aload_0
       1: getfield      #36                 // Field tables:Ljava/util/ArrayList;
       4: areturn

  public boolean isPersistent();
    Code:
       0: aload_0
       1: getfield      #7                  // Field isPersistent:Z
       4: ireturn

  public static org.h2.table.TableView createTableViewMaybeRecursive(org.h2.schema.Schema, int, java.lang.String, java.lang.String, java.util.ArrayList<org.h2.expression.Parameter>, org.h2.table.Column[], org.h2.engine.Session, boolean, boolean, boolean, org.h2.engine.Database);
    Code:
       0: iload         9
       2: aload         6
       4: aload_2
       5: aload_0
       6: aload         5
       8: invokestatic  #171                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      11: aload         10
      13: invokestatic  #172                // Method createShadowTableForRecursiveTableExpression:(ZLorg/h2/engine/Session;Ljava/lang/String;Lorg/h2/schema/Schema;Ljava/util/List;Lorg/h2/engine/Database;)Lorg/h2/table/Table;
      16: astore        11
      18: iconst_1
      19: anewarray     #136                // class java/lang/String
      22: dup
      23: iconst_0
      24: aconst_null
      25: aastore
      26: astore        13
      28: new           #22                 // class java/util/ArrayList
      31: dup
      32: invokespecial #173                // Method java/util/ArrayList."<init>":()V
      35: astore        14
      37: aload         5
      39: astore        15
      41: aload         15
      43: arraylength
      44: istore        16
      46: iconst_0
      47: istore        17
      49: iload         17
      51: iload         16
      53: if_icmpge     80
      56: aload         15
      58: iload         17
      60: aaload
      61: astore        18
      63: aload         14
      65: aload         18
      67: invokevirtual #44                 // Method org/h2/table/Column.getName:()Ljava/lang/String;
      70: invokevirtual #61                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      73: pop
      74: iinc          17, 1
      77: goto          49
      80: aload         6
      82: aload_3
      83: iconst_0
      84: iconst_0
      85: invokevirtual #15                 // Method org/h2/engine/Session.prepare:(Ljava/lang/String;ZZ)Lorg/h2/command/Prepared;
      88: astore        15
      90: iload         9
      92: ifeq          102
      95: aload         15
      97: aload         6
      99: invokevirtual #174                // Method org/h2/command/Prepared.setSession:(Lorg/h2/engine/Session;)V
     102: aload         14
     104: iconst_1
     105: anewarray     #136                // class java/lang/String
     108: invokevirtual #62                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     111: checkcast     #175                // class "[Ljava/lang/String;"
     114: aload         15
     116: checkcast     #16                 // class org/h2/command/dml/Query
     119: aload         13
     121: invokestatic  #176                // Method createQueryColumnTemplateList:([Ljava/lang/String;Lorg/h2/command/dml/Query;[Ljava/lang/String;)Ljava/util/List;
     124: astore        12
     126: iload         9
     128: aload         6
     130: aload         11
     132: invokestatic  #177                // Method destroyShadowTableForRecursiveExpression:(ZLorg/h2/engine/Session;Lorg/h2/table/Table;)V
     135: goto          152
     138: astore        19
     140: iload         9
     142: aload         6
     144: aload         11
     146: invokestatic  #177                // Method destroyShadowTableForRecursiveExpression:(ZLorg/h2/engine/Session;Lorg/h2/table/Table;)V
     149: aload         19
     151: athrow
     152: new           #28                 // class org/h2/table/TableView
     155: dup
     156: aload_0
     157: iload_1
     158: aload_2
     159: aload_3
     160: aload         4
     162: aload         12
     164: aload         5
     166: invokeinterface #178,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     171: checkcast     #63                 // class "[Lorg/h2/table/Column;"
     174: aload         6
     176: iconst_1
     177: iload         7
     179: iload         8
     181: iload         9
     183: invokespecial #152                // Method "<init>":(Lorg/h2/schema/Schema;ILjava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;[Lorg/h2/table/Column;Lorg/h2/engine/Session;ZZZZ)V
     186: astore        15
     188: aload         15
     190: invokevirtual #179                // Method isRecursiveQueryDetected:()Z
     193: ifne          275
     196: iload         9
     198: ifeq          242
     201: aload         10
     203: aload         6
     205: aload         15
     207: invokevirtual #180                // Method org/h2/engine/Database.addSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
     210: aload         15
     212: aload         6
     214: iconst_1
     215: iconst_1
     216: invokevirtual #181                // Method lock:(Lorg/h2/engine/Session;ZZ)Z
     219: pop
     220: aload         6
     222: invokevirtual #148                // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
     225: aload         6
     227: aload         15
     229: invokevirtual #182                // Method org/h2/engine/Database.removeSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
     232: aload         15
     234: aload         6
     236: invokevirtual #183                // Method removeChildrenAndResources:(Lorg/h2/engine/Session;)V
     239: goto          249
     242: aload         6
     244: aload         15
     246: invokevirtual #184                // Method org/h2/engine/Session.removeLocalTempTable:(Lorg/h2/table/Table;)V
     249: new           #28                 // class org/h2/table/TableView
     252: dup
     253: aload_0
     254: iload_1
     255: aload_2
     256: aload_3
     257: aload         4
     259: aload         5
     261: aload         6
     263: iconst_0
     264: iload         7
     266: iload         8
     268: iload         9
     270: invokespecial #152                // Method "<init>":(Lorg/h2/schema/Schema;ILjava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;[Lorg/h2/table/Column;Lorg/h2/engine/Session;ZZZZ)V
     273: astore        15
     275: aload         15
     277: areturn
    Exception table:
       from    to  target type
          80   126   138   any
         138   140   138   any

  public static java.util.List<org.h2.table.Column> createQueryColumnTemplateList(java.lang.String[], org.h2.command.dml.Query, java.lang.String[]);
    Code:
       0: new           #22                 // class java/util/ArrayList
       3: dup
       4: invokespecial #173                // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aload_1
       9: invokevirtual #185                // Method org/h2/command/dml/Query.prepare:()V
      12: aload_2
      13: iconst_0
      14: aload_1
      15: invokevirtual #34                 // Method org/h2/command/dml/Query.getPlanSQL:()Ljava/lang/String;
      18: invokestatic  #186                // Method org/h2/util/StringUtils.cache:(Ljava/lang/String;)Ljava/lang/String;
      21: aastore
      22: new           #39                 // class org/h2/util/ColumnNamer
      25: dup
      26: aload_1
      27: invokevirtual #187                // Method org/h2/command/dml/Query.getSession:()Lorg/h2/engine/Session;
      30: invokespecial #40                 // Method org/h2/util/ColumnNamer."<init>":(Lorg/h2/engine/Session;)V
      33: astore        4
      35: aload_1
      36: invokevirtual #37                 // Method org/h2/command/dml/Query.getExpressions:()Ljava/util/ArrayList;
      39: astore        5
      41: iconst_0
      42: istore        6
      44: iload         6
      46: aload         5
      48: invokevirtual #188                // Method java/util/ArrayList.size:()I
      51: if_icmpge     105
      54: aload         5
      56: iload         6
      58: invokevirtual #42                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      61: checkcast     #43                 // class org/h2/expression/Expression
      64: astore        7
      66: aload         4
      68: aload         7
      70: iload         6
      72: aload_0
      73: invokevirtual #189                // Method org/h2/util/ColumnNamer.getColumnName:(Lorg/h2/expression/Expression;I[Ljava/lang/String;)Ljava/lang/String;
      76: astore        8
      78: aload_3
      79: new           #52                 // class org/h2/table/Column
      82: dup
      83: aload         8
      85: aload         7
      87: invokevirtual #48                 // Method org/h2/expression/Expression.getType:()I
      90: invokespecial #190                // Method org/h2/table/Column."<init>":(Ljava/lang/String;I)V
      93: invokeinterface #191,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      98: pop
      99: iinc          6, 1
     102: goto          44
     105: aload_3
     106: areturn

  public static org.h2.table.Table createShadowTableForRecursiveTableExpression(boolean, org.h2.engine.Session, java.lang.String, org.h2.schema.Schema, java.util.List<org.h2.table.Column>, org.h2.engine.Database);
    Code:
       0: new           #192                // class org/h2/command/ddl/CreateTableData
       3: dup
       4: invokespecial #193                // Method org/h2/command/ddl/CreateTableData."<init>":()V
       7: astore        6
       9: aload         6
      11: aload         5
      13: invokevirtual #194                // Method org/h2/engine/Database.allocateObjectId:()I
      16: putfield      #195                // Field org/h2/command/ddl/CreateTableData.id:I
      19: aload         6
      21: new           #22                 // class java/util/ArrayList
      24: dup
      25: aload         4
      27: invokespecial #24                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      30: putfield      #196                // Field org/h2/command/ddl/CreateTableData.columns:Ljava/util/ArrayList;
      33: aload         6
      35: aload_2
      36: putfield      #197                // Field org/h2/command/ddl/CreateTableData.tableName:Ljava/lang/String;
      39: aload         6
      41: iload_0
      42: ifne          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: putfield      #198                // Field org/h2/command/ddl/CreateTableData.temporary:Z
      53: aload         6
      55: iconst_1
      56: putfield      #199                // Field org/h2/command/ddl/CreateTableData.persistData:Z
      59: aload         6
      61: iload_0
      62: putfield      #200                // Field org/h2/command/ddl/CreateTableData.persistIndexes:Z
      65: aload         6
      67: iconst_1
      68: putfield      #201                // Field org/h2/command/ddl/CreateTableData.create:Z
      71: aload         6
      73: aload_1
      74: putfield      #202                // Field org/h2/command/ddl/CreateTableData.session:Lorg/h2/engine/Session;
      77: aload_3
      78: aload         6
      80: invokevirtual #203                // Method org/h2/schema/Schema.createTable:(Lorg/h2/command/ddl/CreateTableData;)Lorg/h2/table/Table;
      83: astore        7
      85: iload_0
      86: ifeq          125
      89: aload         5
      91: aload_1
      92: invokevirtual #204                // Method org/h2/engine/Database.unlockMeta:(Lorg/h2/engine/Session;)V
      95: aload_1
      96: dup
      97: astore        8
      99: monitorenter
     100: aload         5
     102: aload_1
     103: aload         7
     105: invokevirtual #180                // Method org/h2/engine/Database.addSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
     108: aload         8
     110: monitorexit
     111: goto          122
     114: astore        9
     116: aload         8
     118: monitorexit
     119: aload         9
     121: athrow
     122: goto          131
     125: aload_1
     126: aload         7
     128: invokevirtual #205                // Method org/h2/engine/Session.addLocalTempTable:(Lorg/h2/table/Table;)V
     131: aload         7
     133: areturn
    Exception table:
       from    to  target type
         100   111   114   any
         114   119   114   any

  public static void destroyShadowTableForRecursiveExpression(boolean, org.h2.engine.Session, org.h2.table.Table);
    Code:
       0: aload_2
       1: ifnull        41
       4: iload_0
       5: ifeq          28
       8: aload_2
       9: aload_1
      10: iconst_1
      11: iconst_1
      12: invokevirtual #206                // Method org/h2/table/Table.lock:(Lorg/h2/engine/Session;ZZ)Z
      15: pop
      16: aload_1
      17: invokevirtual #148                // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      20: aload_1
      21: aload_2
      22: invokevirtual #182                // Method org/h2/engine/Database.removeSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
      25: goto          33
      28: aload_1
      29: aload_2
      30: invokevirtual #184                // Method org/h2/engine/Session.removeLocalTempTable:(Lorg/h2/table/Table;)V
      33: aload_1
      34: invokevirtual #148                // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      37: aload_1
      38: invokevirtual #204                // Method org/h2/engine/Database.unlockMeta:(Lorg/h2/engine/Session;)V
      41: return
}
