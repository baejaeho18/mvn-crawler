Compiled from "Table.java"
public abstract class org.h2.table.Table extends org.h2.schema.SchemaObjectBase {
  public static final int TYPE_CACHED;

  public static final int TYPE_MEMORY;

  protected org.h2.table.Column[] columns;

  protected org.h2.value.CompareMode compareMode;

  protected boolean isHidden;

  private final java.util.HashMap<java.lang.String, org.h2.table.Column> columnMap;

  private final boolean persistIndexes;

  private final boolean persistData;

  private java.util.ArrayList<org.h2.schema.TriggerObject> triggers;

  private java.util.ArrayList<org.h2.constraint.Constraint> constraints;

  private java.util.ArrayList<org.h2.schema.Sequence> sequences;

  private final java.util.concurrent.CopyOnWriteArrayList<org.h2.table.TableView> dependentViews;

  private java.util.ArrayList<org.h2.table.TableSynonym> synonyms;

  private boolean checkForeignKeyConstraints;

  private boolean onCommitDrop;

  private boolean onCommitTruncate;

  private volatile org.h2.result.Row nullRow;

  private boolean tableExpression;

  public org.h2.table.Table(org.h2.schema.Schema, int, java.lang.String, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/schema/SchemaObjectBase."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/CopyOnWriteArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      12: putfield      #4                  // Field dependentViews:Ljava/util/concurrent/CopyOnWriteArrayList;
      15: aload_0
      16: iconst_1
      17: putfield      #5                  // Field checkForeignKeyConstraints:Z
      20: aload_0
      21: aload_1
      22: invokevirtual #6                  // Method org/h2/schema/Schema.getDatabase:()Lorg/h2/engine/Database;
      25: invokevirtual #7                  // Method org/h2/engine/Database.newStringMap:()Ljava/util/HashMap;
      28: putfield      #8                  // Field columnMap:Ljava/util/HashMap;
      31: aload_0
      32: aload_1
      33: iload_2
      34: aload_3
      35: bipush        11
      37: invokevirtual #9                  // Method initSchemaObjectBase:(Lorg/h2/schema/Schema;ILjava/lang/String;I)V
      40: aload_0
      41: iload         4
      43: putfield      #10                 // Field persistIndexes:Z
      46: aload_0
      47: iload         5
      49: putfield      #11                 // Field persistData:Z
      52: aload_0
      53: aload_1
      54: invokevirtual #6                  // Method org/h2/schema/Schema.getDatabase:()Lorg/h2/engine/Database;
      57: invokevirtual #12                 // Method org/h2/engine/Database.getCompareMode:()Lorg/h2/value/CompareMode;
      60: putfield      #13                 // Field compareMode:Lorg/h2/value/CompareMode;
      63: return

  public void rename(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method org/h2/schema/SchemaObjectBase.rename:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
       9: ifnull        46
      12: aload_0
      13: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
      16: invokevirtual #16                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          46
      29: aload_2
      30: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #19                 // class org/h2/constraint/Constraint
      38: astore_3
      39: aload_3
      40: invokevirtual #20                 // Method org/h2/constraint/Constraint.rebuild:()V
      43: goto          20
      46: return

  public boolean isView();
    Code:
       0: iconst_0
       1: ireturn

  public abstract boolean lock(org.h2.engine.Session, boolean, boolean);

  public abstract void close(org.h2.engine.Session);

  public abstract void unlock(org.h2.engine.Session);

  public abstract org.h2.index.Index addIndex(org.h2.engine.Session, java.lang.String, int, org.h2.table.IndexColumn[], org.h2.index.IndexType, boolean, java.lang.String);

  public org.h2.result.Row getRow(org.h2.engine.Session, long);
    Code:
       0: aconst_null
       1: areturn

  public abstract void removeRow(org.h2.engine.Session, org.h2.result.Row);

  public abstract void truncate(org.h2.engine.Session);

  public abstract void addRow(org.h2.engine.Session, org.h2.result.Row);

  public void commit(short, org.h2.result.Row);
    Code:
       0: return

  public abstract void checkSupportAlter();

  public abstract org.h2.table.TableType getTableType();

  public abstract org.h2.index.Index getScanIndex(org.h2.engine.Session);

  public org.h2.index.Index getScanIndex(org.h2.engine.Session, int[], org.h2.table.TableFilter[], int, org.h2.result.SortOrder, java.util.HashSet<org.h2.table.Column>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method getScanIndex:(Lorg/h2/engine/Session;)Lorg/h2/index/Index;
       5: areturn

  public abstract org.h2.index.Index getUniqueIndex();

  public abstract java.util.ArrayList<org.h2.index.Index> getIndexes();

  public org.h2.index.Index getIndex(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method getIndexes:()Ljava/util/ArrayList;
       4: astore_2
       5: aload_2
       6: ifnull        54
       9: aload_2
      10: invokevirtual #16                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      13: astore_3
      14: aload_3
      15: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          54
      23: aload_3
      24: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #23                 // class org/h2/index/Index
      32: astore        4
      34: aload         4
      36: invokeinterface #24,  1           // InterfaceMethod org/h2/index/Index.getName:()Ljava/lang/String;
      41: aload_1
      42: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      45: ifeq          51
      48: aload         4
      50: areturn
      51: goto          14
      54: ldc           #26                 // int 42112
      56: aload_1
      57: invokestatic  #27                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      60: athrow

  public abstract boolean isLockedExclusively();

  public abstract long getMaxDataModificationId();

  public abstract boolean isDeterministic();

  public abstract boolean canGetRowCount();

  public boolean canReference();
    Code:
       0: iconst_1
       1: ireturn

  public abstract boolean canDrop();

  public abstract long getRowCount(org.h2.engine.Session);

  public abstract long getRowCountApproximation();

  public abstract long getDiskSpaceUsed();

  public org.h2.table.Column getRowIdColumn();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getCreateSQLForCopy(org.h2.table.Table, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method toString:()Ljava/lang/String;
       4: invokestatic  #29                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
       7: athrow

  public boolean isQueryComparable();
    Code:
       0: iconst_1
       1: ireturn

  public void addDependencies(java.util.HashSet<org.h2.engine.DbObject>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #30                 // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
       5: ifeq          9
       8: return
       9: aload_0
      10: getfield      #31                 // Field sequences:Ljava/util/ArrayList;
      13: ifnull        25
      16: aload_1
      17: aload_0
      18: getfield      #31                 // Field sequences:Ljava/util/ArrayList;
      21: invokevirtual #32                 // Method java/util/HashSet.addAll:(Ljava/util/Collection;)Z
      24: pop
      25: aload_1
      26: invokestatic  #33                 // Method org/h2/expression/ExpressionVisitor.getDependenciesVisitor:(Ljava/util/HashSet;)Lorg/h2/expression/ExpressionVisitor;
      29: astore_2
      30: aload_0
      31: getfield      #34                 // Field columns:[Lorg/h2/table/Column;
      34: astore_3
      35: aload_3
      36: arraylength
      37: istore        4
      39: iconst_0
      40: istore        5
      42: iload         5
      44: iload         4
      46: if_icmpge     68
      49: aload_3
      50: iload         5
      52: aaload
      53: astore        6
      55: aload         6
      57: aload_2
      58: invokevirtual #35                 // Method org/h2/table/Column.isEverything:(Lorg/h2/expression/ExpressionVisitor;)Z
      61: pop
      62: iinc          5, 1
      65: goto          42
      68: aload_0
      69: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
      72: ifnull        113
      75: aload_0
      76: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
      79: invokevirtual #16                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      82: astore_3
      83: aload_3
      84: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      89: ifeq          113
      92: aload_3
      93: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      98: checkcast     #19                 // class org/h2/constraint/Constraint
     101: astore        4
     103: aload         4
     105: aload_2
     106: invokevirtual #36                 // Method org/h2/constraint/Constraint.isEverything:(Lorg/h2/expression/ExpressionVisitor;)Z
     109: pop
     110: goto          83
     113: aload_1
     114: aload_0
     115: invokevirtual #37                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
     118: pop
     119: return

  public java.util.ArrayList<org.h2.engine.DbObject> getChildren();
    Code:
       0: invokestatic  #38                 // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
       3: astore_1
       4: aload_0
       5: invokevirtual #22                 // Method getIndexes:()Ljava/util/ArrayList;
       8: astore_2
       9: aload_2
      10: ifnull        19
      13: aload_1
      14: aload_2
      15: invokevirtual #39                 // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      18: pop
      19: aload_0
      20: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
      23: ifnull        35
      26: aload_1
      27: aload_0
      28: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
      31: invokevirtual #39                 // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      34: pop
      35: aload_0
      36: getfield      #40                 // Field triggers:Ljava/util/ArrayList;
      39: ifnull        51
      42: aload_1
      43: aload_0
      44: getfield      #40                 // Field triggers:Ljava/util/ArrayList;
      47: invokevirtual #39                 // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      50: pop
      51: aload_0
      52: getfield      #31                 // Field sequences:Ljava/util/ArrayList;
      55: ifnull        67
      58: aload_1
      59: aload_0
      60: getfield      #31                 // Field sequences:Ljava/util/ArrayList;
      63: invokevirtual #39                 // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      66: pop
      67: aload_1
      68: aload_0
      69: getfield      #4                  // Field dependentViews:Ljava/util/concurrent/CopyOnWriteArrayList;
      72: invokevirtual #39                 // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      75: pop
      76: aload_0
      77: getfield      #41                 // Field synonyms:Ljava/util/ArrayList;
      80: ifnull        92
      83: aload_1
      84: aload_0
      85: getfield      #41                 // Field synonyms:Ljava/util/ArrayList;
      88: invokevirtual #39                 // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      91: pop
      92: aload_0
      93: getfield      #42                 // Field database:Lorg/h2/engine/Database;
      96: invokevirtual #43                 // Method org/h2/engine/Database.getAllRights:()Ljava/util/ArrayList;
      99: astore_3
     100: aload_3
     101: invokevirtual #16                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     104: astore        4
     106: aload         4
     108: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     113: ifeq          147
     116: aload         4
     118: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     123: checkcast     #44                 // class org/h2/engine/Right
     126: astore        5
     128: aload         5
     130: invokevirtual #45                 // Method org/h2/engine/Right.getGrantedObject:()Lorg/h2/engine/DbObject;
     133: aload_0
     134: if_acmpne     144
     137: aload_1
     138: aload         5
     140: invokevirtual #46                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     143: pop
     144: goto          106
     147: aload_1
     148: areturn

  protected void setColumns(org.h2.table.Column[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field columns:[Lorg/h2/table/Column;
       5: aload_0
       6: getfield      #8                  // Field columnMap:Ljava/util/HashMap;
       9: invokevirtual #47                 // Method java/util/HashMap.size:()I
      12: ifle          22
      15: aload_0
      16: getfield      #8                  // Field columnMap:Ljava/util/HashMap;
      19: invokevirtual #48                 // Method java/util/HashMap.clear:()V
      22: iconst_0
      23: istore_2
      24: iload_2
      25: aload_1
      26: arraylength
      27: if_icmpge     105
      30: aload_1
      31: iload_2
      32: aaload
      33: astore_3
      34: aload_3
      35: invokevirtual #49                 // Method org/h2/table/Column.getType:()I
      38: istore        4
      40: iload         4
      42: iconst_m1
      43: if_icmpne     56
      46: ldc           #50                 // int 50004
      48: aload_3
      49: invokevirtual #51                 // Method org/h2/table/Column.getSQL:()Ljava/lang/String;
      52: invokestatic  #27                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      55: athrow
      56: aload_3
      57: aload_0
      58: iload_2
      59: invokevirtual #52                 // Method org/h2/table/Column.setTable:(Lorg/h2/table/Table;I)V
      62: aload_3
      63: invokevirtual #53                 // Method org/h2/table/Column.getName:()Ljava/lang/String;
      66: astore        5
      68: aload_0
      69: getfield      #8                  // Field columnMap:Ljava/util/HashMap;
      72: aload         5
      74: invokevirtual #54                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      77: ifnull        88
      80: ldc           #55                 // int 42121
      82: aload         5
      84: invokestatic  #27                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      87: athrow
      88: aload_0
      89: getfield      #8                  // Field columnMap:Ljava/util/HashMap;
      92: aload         5
      94: aload_3
      95: invokevirtual #56                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      98: pop
      99: iinc          2, 1
     102: goto          24
     105: return

  public void renameColumn(org.h2.table.Column, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #34                 // Field columns:[Lorg/h2/table/Column;
       4: astore_3
       5: aload_3
       6: arraylength
       7: istore        4
       9: iconst_0
      10: istore        5
      12: iload         5
      14: iload         4
      16: if_icmpge     59
      19: aload_3
      20: iload         5
      22: aaload
      23: astore        6
      25: aload         6
      27: aload_1
      28: if_acmpne     34
      31: goto          53
      34: aload         6
      36: invokevirtual #53                 // Method org/h2/table/Column.getName:()Ljava/lang/String;
      39: aload_2
      40: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      43: ifeq          53
      46: ldc           #55                 // int 42121
      48: aload_2
      49: invokestatic  #27                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      52: athrow
      53: iinc          5, 1
      56: goto          12
      59: aload_0
      60: getfield      #8                  // Field columnMap:Ljava/util/HashMap;
      63: aload_1
      64: invokevirtual #53                 // Method org/h2/table/Column.getName:()Ljava/lang/String;
      67: invokevirtual #57                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      70: pop
      71: aload_1
      72: aload_2
      73: invokevirtual #58                 // Method org/h2/table/Column.rename:(Ljava/lang/String;)V
      76: aload_0
      77: getfield      #8                  // Field columnMap:Ljava/util/HashMap;
      80: aload_2
      81: aload_1
      82: invokevirtual #56                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      85: pop
      86: return

  public boolean isLockedExclusivelyBy(org.h2.engine.Session);
    Code:
       0: iconst_0
       1: ireturn

  public void updateRows(org.h2.command.Prepared, org.h2.engine.Session, org.h2.result.RowList);
    Code:
       0: aload_2
       1: invokevirtual #59                 // Method org/h2/engine/Session.setSavepoint:()Lorg/h2/engine/Session$Savepoint;
       4: astore        4
       6: iconst_0
       7: istore        5
       9: aload_3
      10: invokevirtual #60                 // Method org/h2/result/RowList.reset:()V
      13: aload_3
      14: invokevirtual #61                 // Method org/h2/result/RowList.hasNext:()Z
      17: ifeq          99
      20: iinc          5, 1
      23: iload         5
      25: bipush        127
      27: iand
      28: ifne          35
      31: aload_1
      32: invokevirtual #62                 // Method org/h2/command/Prepared.checkCanceled:()V
      35: aload_3
      36: invokevirtual #63                 // Method org/h2/result/RowList.next:()Lorg/h2/result/Row;
      39: astore        6
      41: aload_3
      42: invokevirtual #63                 // Method org/h2/result/RowList.next:()Lorg/h2/result/Row;
      45: pop
      46: aload_0
      47: aload_2
      48: aload         6
      50: invokevirtual #64                 // Method removeRow:(Lorg/h2/engine/Session;Lorg/h2/result/Row;)V
      53: goto          88
      56: astore        7
      58: aload         7
      60: invokevirtual #66                 // Method org/h2/message/DbException.getErrorCode:()I
      63: ldc           #67                 // int 90131
      65: if_icmpne     85
      68: aload_2
      69: aload         4
      71: iconst_0
      72: invokevirtual #68                 // Method org/h2/engine/Session.rollbackTo:(Lorg/h2/engine/Session$Savepoint;Z)V
      75: aload_2
      76: invokevirtual #69                 // Method org/h2/engine/Session.startStatementWithinTransaction:()V
      79: aload_2
      80: invokevirtual #59                 // Method org/h2/engine/Session.setSavepoint:()Lorg/h2/engine/Session$Savepoint;
      83: astore        4
      85: aload         7
      87: athrow
      88: aload_2
      89: aload_0
      90: iconst_1
      91: aload         6
      93: invokevirtual #70                 // Method org/h2/engine/Session.log:(Lorg/h2/table/Table;SLorg/h2/result/Row;)V
      96: goto          13
      99: aload_3
     100: invokevirtual #60                 // Method org/h2/result/RowList.reset:()V
     103: aload_3
     104: invokevirtual #61                 // Method org/h2/result/RowList.hasNext:()Z
     107: ifeq          189
     110: iinc          5, 1
     113: iload         5
     115: bipush        127
     117: iand
     118: ifne          125
     121: aload_1
     122: invokevirtual #62                 // Method org/h2/command/Prepared.checkCanceled:()V
     125: aload_3
     126: invokevirtual #63                 // Method org/h2/result/RowList.next:()Lorg/h2/result/Row;
     129: pop
     130: aload_3
     131: invokevirtual #63                 // Method org/h2/result/RowList.next:()Lorg/h2/result/Row;
     134: astore        6
     136: aload_0
     137: aload_2
     138: aload         6
     140: invokevirtual #71                 // Method addRow:(Lorg/h2/engine/Session;Lorg/h2/result/Row;)V
     143: goto          178
     146: astore        7
     148: aload         7
     150: invokevirtual #66                 // Method org/h2/message/DbException.getErrorCode:()I
     153: ldc           #67                 // int 90131
     155: if_icmpne     175
     158: aload_2
     159: aload         4
     161: iconst_0
     162: invokevirtual #68                 // Method org/h2/engine/Session.rollbackTo:(Lorg/h2/engine/Session$Savepoint;Z)V
     165: aload_2
     166: invokevirtual #69                 // Method org/h2/engine/Session.startStatementWithinTransaction:()V
     169: aload_2
     170: invokevirtual #59                 // Method org/h2/engine/Session.setSavepoint:()Lorg/h2/engine/Session$Savepoint;
     173: astore        4
     175: aload         7
     177: athrow
     178: aload_2
     179: aload_0
     180: iconst_0
     181: aload         6
     183: invokevirtual #70                 // Method org/h2/engine/Session.log:(Lorg/h2/table/Table;SLorg/h2/result/Row;)V
     186: goto          103
     189: return
    Exception table:
       from    to  target type
          46    53    56   Class org/h2/message/DbException
         136   143   146   Class org/h2/message/DbException

  public java.util.concurrent.CopyOnWriteArrayList<org.h2.table.TableView> getDependentViews();
    Code:
       0: aload_0
       1: getfield      #4                  // Field dependentViews:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: areturn

  public void removeChildrenAndResources(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #4                  // Field dependentViews:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #72                 // Method java/util/concurrent/CopyOnWriteArrayList.isEmpty:()Z
       7: ifne          43
      10: aload_0
      11: getfield      #4                  // Field dependentViews:Ljava/util/concurrent/CopyOnWriteArrayList;
      14: iconst_0
      15: invokevirtual #73                 // Method java/util/concurrent/CopyOnWriteArrayList.get:(I)Ljava/lang/Object;
      18: checkcast     #74                 // class org/h2/table/TableView
      21: astore_2
      22: aload_0
      23: getfield      #4                  // Field dependentViews:Ljava/util/concurrent/CopyOnWriteArrayList;
      26: iconst_0
      27: invokevirtual #75                 // Method java/util/concurrent/CopyOnWriteArrayList.remove:(I)Ljava/lang/Object;
      30: pop
      31: aload_0
      32: getfield      #42                 // Field database:Lorg/h2/engine/Database;
      35: aload_1
      36: aload_2
      37: invokevirtual #76                 // Method org/h2/engine/Database.removeSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
      40: goto          0
      43: aload_0
      44: getfield      #41                 // Field synonyms:Ljava/util/ArrayList;
      47: ifnull        84
      50: aload_0
      51: getfield      #41                 // Field synonyms:Ljava/util/ArrayList;
      54: invokevirtual #77                 // Method java/util/ArrayList.isEmpty:()Z
      57: ifne          84
      60: aload_0
      61: getfield      #41                 // Field synonyms:Ljava/util/ArrayList;
      64: iconst_0
      65: invokevirtual #78                 // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;
      68: checkcast     #79                 // class org/h2/table/TableSynonym
      71: astore_2
      72: aload_0
      73: getfield      #42                 // Field database:Lorg/h2/engine/Database;
      76: aload_1
      77: aload_2
      78: invokevirtual #76                 // Method org/h2/engine/Database.removeSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
      81: goto          43
      84: aload_0
      85: getfield      #40                 // Field triggers:Ljava/util/ArrayList;
      88: ifnull        125
      91: aload_0
      92: getfield      #40                 // Field triggers:Ljava/util/ArrayList;
      95: invokevirtual #77                 // Method java/util/ArrayList.isEmpty:()Z
      98: ifne          125
     101: aload_0
     102: getfield      #40                 // Field triggers:Ljava/util/ArrayList;
     105: iconst_0
     106: invokevirtual #78                 // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;
     109: checkcast     #80                 // class org/h2/schema/TriggerObject
     112: astore_2
     113: aload_0
     114: getfield      #42                 // Field database:Lorg/h2/engine/Database;
     117: aload_1
     118: aload_2
     119: invokevirtual #76                 // Method org/h2/engine/Database.removeSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
     122: goto          84
     125: aload_0
     126: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
     129: ifnull        166
     132: aload_0
     133: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
     136: invokevirtual #77                 // Method java/util/ArrayList.isEmpty:()Z
     139: ifne          166
     142: aload_0
     143: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
     146: iconst_0
     147: invokevirtual #78                 // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;
     150: checkcast     #19                 // class org/h2/constraint/Constraint
     153: astore_2
     154: aload_0
     155: getfield      #42                 // Field database:Lorg/h2/engine/Database;
     158: aload_1
     159: aload_2
     160: invokevirtual #76                 // Method org/h2/engine/Database.removeSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
     163: goto          125
     166: aload_0
     167: getfield      #42                 // Field database:Lorg/h2/engine/Database;
     170: invokevirtual #43                 // Method org/h2/engine/Database.getAllRights:()Ljava/util/ArrayList;
     173: invokevirtual #16                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     176: astore_2
     177: aload_2
     178: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     183: ifeq          216
     186: aload_2
     187: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     192: checkcast     #44                 // class org/h2/engine/Right
     195: astore_3
     196: aload_3
     197: invokevirtual #45                 // Method org/h2/engine/Right.getGrantedObject:()Lorg/h2/engine/DbObject;
     200: aload_0
     201: if_acmpne     213
     204: aload_0
     205: getfield      #42                 // Field database:Lorg/h2/engine/Database;
     208: aload_1
     209: aload_3
     210: invokevirtual #81                 // Method org/h2/engine/Database.removeDatabaseObject:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
     213: goto          177
     216: aload_0
     217: getfield      #42                 // Field database:Lorg/h2/engine/Database;
     220: aload_1
     221: aload_0
     222: invokevirtual #82                 // Method getId:()I
     225: invokevirtual #83                 // Method org/h2/engine/Database.removeMeta:(Lorg/h2/engine/Session;I)V
     228: aload_0
     229: getfield      #31                 // Field sequences:Ljava/util/ArrayList;
     232: ifnull        281
     235: aload_0
     236: getfield      #31                 // Field sequences:Ljava/util/ArrayList;
     239: invokevirtual #77                 // Method java/util/ArrayList.isEmpty:()Z
     242: ifne          281
     245: aload_0
     246: getfield      #31                 // Field sequences:Ljava/util/ArrayList;
     249: iconst_0
     250: invokevirtual #78                 // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;
     253: checkcast     #84                 // class org/h2/schema/Sequence
     256: astore_2
     257: aload_0
     258: getfield      #42                 // Field database:Lorg/h2/engine/Database;
     261: aload_2
     262: aload_0
     263: invokevirtual #85                 // Method org/h2/engine/Database.getDependentTable:(Lorg/h2/schema/SchemaObject;Lorg/h2/table/Table;)Lorg/h2/table/Table;
     266: ifnonnull     278
     269: aload_0
     270: getfield      #42                 // Field database:Lorg/h2/engine/Database;
     273: aload_1
     274: aload_2
     275: invokevirtual #76                 // Method org/h2/engine/Database.removeSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
     278: goto          228
     281: return

  public void dropMultipleColumnsConstraintsAndIndexes(org.h2.engine.Session, java.util.ArrayList<org.h2.table.Column>);
    Code:
       0: new           #86                 // class java/util/HashSet
       3: dup
       4: invokespecial #87                 // Method java/util/HashSet."<init>":()V
       7: astore_3
       8: aload_0
       9: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
      12: ifnull        131
      15: aload_2
      16: invokevirtual #16                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      19: astore        4
      21: aload         4
      23: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          131
      31: aload         4
      33: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #88                 // class org/h2/table/Column
      41: astore        5
      43: aload_0
      44: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
      47: invokevirtual #16                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      50: astore        6
      52: aload         6
      54: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          128
      62: aload         6
      64: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      69: checkcast     #19                 // class org/h2/constraint/Constraint
      72: astore        7
      74: aload         7
      76: aload_0
      77: invokevirtual #89                 // Method org/h2/constraint/Constraint.getReferencedColumns:(Lorg/h2/table/Table;)Ljava/util/HashSet;
      80: astore        8
      82: aload         8
      84: aload         5
      86: invokevirtual #30                 // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
      89: ifne          95
      92: goto          52
      95: aload         8
      97: invokevirtual #90                 // Method java/util/HashSet.size:()I
     100: iconst_1
     101: if_icmpne     114
     104: aload_3
     105: aload         7
     107: invokevirtual #37                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
     110: pop
     111: goto          125
     114: ldc           #91                 // int 90083
     116: aload         7
     118: invokevirtual #92                 // Method org/h2/constraint/Constraint.getSQL:()Ljava/lang/String;
     121: invokestatic  #27                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
     124: athrow
     125: goto          52
     128: goto          21
     131: new           #86                 // class java/util/HashSet
     134: dup
     135: invokespecial #87                 // Method java/util/HashSet."<init>":()V
     138: astore        4
     140: aload_0
     141: invokevirtual #22                 // Method getIndexes:()Ljava/util/ArrayList;
     144: astore        5
     146: aload         5
     148: ifnull        278
     151: aload_2
     152: invokevirtual #16                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     155: astore        6
     157: aload         6
     159: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     164: ifeq          278
     167: aload         6
     169: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     174: checkcast     #88                 // class org/h2/table/Column
     177: astore        7
     179: aload         5
     181: invokevirtual #16                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     184: astore        8
     186: aload         8
     188: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     193: ifeq          275
     196: aload         8
     198: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     203: checkcast     #23                 // class org/h2/index/Index
     206: astore        9
     208: aload         9
     210: invokeinterface #93,  1           // InterfaceMethod org/h2/index/Index.getCreateSQL:()Ljava/lang/String;
     215: ifnonnull     221
     218: goto          186
     221: aload         9
     223: aload         7
     225: invokeinterface #94,  2           // InterfaceMethod org/h2/index/Index.getColumnIndex:(Lorg/h2/table/Column;)I
     230: ifge          236
     233: goto          186
     236: aload         9
     238: invokeinterface #95,  1           // InterfaceMethod org/h2/index/Index.getColumns:()[Lorg/h2/table/Column;
     243: arraylength
     244: iconst_1
     245: if_icmpne     259
     248: aload         4
     250: aload         9
     252: invokevirtual #37                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
     255: pop
     256: goto          272
     259: ldc           #91                 // int 90083
     261: aload         9
     263: invokeinterface #96,  1           // InterfaceMethod org/h2/index/Index.getSQL:()Ljava/lang/String;
     268: invokestatic  #27                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
     271: athrow
     272: goto          186
     275: goto          157
     278: aload_3
     279: invokevirtual #97                 // Method java/util/HashSet.iterator:()Ljava/util/Iterator;
     282: astore        6
     284: aload         6
     286: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     291: ifeq          319
     294: aload         6
     296: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     301: checkcast     #19                 // class org/h2/constraint/Constraint
     304: astore        7
     306: aload_1
     307: invokevirtual #98                 // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
     310: aload_1
     311: aload         7
     313: invokevirtual #76                 // Method org/h2/engine/Database.removeSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
     316: goto          284
     319: aload         4
     321: invokevirtual #97                 // Method java/util/HashSet.iterator:()Ljava/util/Iterator;
     324: astore        6
     326: aload         6
     328: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     333: ifeq          373
     336: aload         6
     338: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     343: checkcast     #23                 // class org/h2/index/Index
     346: astore        7
     348: aload_0
     349: invokevirtual #22                 // Method getIndexes:()Ljava/util/ArrayList;
     352: aload         7
     354: invokevirtual #99                 // Method java/util/ArrayList.contains:(Ljava/lang/Object;)Z
     357: ifeq          370
     360: aload_1
     361: invokevirtual #98                 // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
     364: aload_1
     365: aload         7
     367: invokevirtual #76                 // Method org/h2/engine/Database.removeSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
     370: goto          326
     373: return

  public org.h2.result.Row getTemplateRow();
    Code:
       0: aload_0
       1: getfield      #42                 // Field database:Lorg/h2/engine/Database;
       4: aload_0
       5: getfield      #34                 // Field columns:[Lorg/h2/table/Column;
       8: arraylength
       9: anewarray     #100                // class org/h2/value/Value
      12: iconst_m1
      13: invokevirtual #101                // Method org/h2/engine/Database.createRow:([Lorg/h2/value/Value;I)Lorg/h2/result/Row;
      16: areturn

  public org.h2.result.SearchRow getTemplateSimpleRow(boolean);
    Code:
       0: iload_1
       1: ifeq          17
       4: new           #102                // class org/h2/result/SimpleRowValue
       7: dup
       8: aload_0
       9: getfield      #34                 // Field columns:[Lorg/h2/table/Column;
      12: arraylength
      13: invokespecial #103                // Method org/h2/result/SimpleRowValue."<init>":(I)V
      16: areturn
      17: new           #104                // class org/h2/result/SimpleRow
      20: dup
      21: aload_0
      22: getfield      #34                 // Field columns:[Lorg/h2/table/Column;
      25: arraylength
      26: anewarray     #100                // class org/h2/value/Value
      29: invokespecial #105                // Method org/h2/result/SimpleRow."<init>":([Lorg/h2/value/Value;)V
      32: areturn

  org.h2.result.Row getNullRow();
    Code:
       0: aload_0
       1: getfield      #106                // Field nullRow:Lorg/h2/result/Row;
       4: astore_1
       5: aload_1
       6: ifnonnull     40
       9: aload_0
      10: getfield      #34                 // Field columns:[Lorg/h2/table/Column;
      13: arraylength
      14: anewarray     #100                // class org/h2/value/Value
      17: astore_2
      18: aload_2
      19: getstatic     #107                // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
      22: invokestatic  #108                // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
      25: aload_0
      26: aload_0
      27: getfield      #42                 // Field database:Lorg/h2/engine/Database;
      30: aload_2
      31: iconst_1
      32: invokevirtual #101                // Method org/h2/engine/Database.createRow:([Lorg/h2/value/Value;I)Lorg/h2/result/Row;
      35: dup
      36: astore_1
      37: putfield      #106                // Field nullRow:Lorg/h2/result/Row;
      40: aload_1
      41: areturn

  public org.h2.table.Column[] getColumns();
    Code:
       0: aload_0
       1: getfield      #34                 // Field columns:[Lorg/h2/table/Column;
       4: areturn

  public int getType();
    Code:
       0: iconst_0
       1: ireturn

  public org.h2.table.Column getColumn(int);
    Code:
       0: aload_0
       1: getfield      #34                 // Field columns:[Lorg/h2/table/Column;
       4: iload_1
       5: aaload
       6: areturn

  public org.h2.table.Column getColumn(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field columnMap:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #54                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #88                 // class org/h2/table/Column
      11: astore_2
      12: aload_2
      13: ifnonnull     23
      16: ldc           #109                // int 42122
      18: aload_1
      19: invokestatic  #27                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      22: athrow
      23: aload_2
      24: areturn

  public boolean doesColumnExist(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field columnMap:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #110                // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
       8: ireturn

  public org.h2.table.PlanItem getBestPlanItem(org.h2.engine.Session, int[], org.h2.table.TableFilter[], int, org.h2.result.SortOrder, java.util.HashSet<org.h2.table.Column>);
    Code:
       0: new           #111                // class org/h2/table/PlanItem
       3: dup
       4: invokespecial #112                // Method org/h2/table/PlanItem."<init>":()V
       7: astore        7
       9: aload         7
      11: aload_0
      12: aload_1
      13: invokevirtual #21                 // Method getScanIndex:(Lorg/h2/engine/Session;)Lorg/h2/index/Index;
      16: invokevirtual #113                // Method org/h2/table/PlanItem.setIndex:(Lorg/h2/index/Index;)V
      19: aload         7
      21: aload         7
      23: invokevirtual #114                // Method org/h2/table/PlanItem.getIndex:()Lorg/h2/index/Index;
      26: aload_1
      27: aconst_null
      28: aload_3
      29: iload         4
      31: aconst_null
      32: aload         6
      34: invokeinterface #115,  7          // InterfaceMethod org/h2/index/Index.getCost:(Lorg/h2/engine/Session;[I[Lorg/h2/table/TableFilter;ILorg/h2/result/SortOrder;Ljava/util/HashSet;)D
      39: putfield      #116                // Field org/h2/table/PlanItem.cost:D
      42: aload_1
      43: invokevirtual #117                // Method org/h2/engine/Session.getTrace:()Lorg/h2/message/Trace;
      46: astore        8
      48: aload         8
      50: invokevirtual #118                // Method org/h2/message/Trace.isDebugEnabled:()Z
      53: ifeq          91
      56: aload         8
      58: ldc           #119                // String Table      :     potential plan item cost {0} index {1}
      60: iconst_2
      61: anewarray     #120                // class java/lang/Object
      64: dup
      65: iconst_0
      66: aload         7
      68: getfield      #116                // Field org/h2/table/PlanItem.cost:D
      71: invokestatic  #121                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      74: aastore
      75: dup
      76: iconst_1
      77: aload         7
      79: invokevirtual #114                // Method org/h2/table/PlanItem.getIndex:()Lorg/h2/index/Index;
      82: invokeinterface #122,  1          // InterfaceMethod org/h2/index/Index.getPlanSQL:()Ljava/lang/String;
      87: aastore
      88: invokevirtual #123                // Method org/h2/message/Trace.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      91: aload_0
      92: invokevirtual #22                 // Method getIndexes:()Ljava/util/ArrayList;
      95: astore        9
      97: aload_3
      98: iload         4
     100: invokestatic  #124                // Method getIndexHints:([Lorg/h2/table/TableFilter;I)Lorg/h2/table/IndexHints;
     103: astore        10
     105: aload         9
     107: ifnull        242
     110: aload_2
     111: ifnull        242
     114: iconst_1
     115: istore        11
     117: aload         9
     119: invokevirtual #125                // Method java/util/ArrayList.size:()I
     122: istore        12
     124: iload         11
     126: iload         12
     128: if_icmpge     242
     131: aload         9
     133: iload         11
     135: invokevirtual #126                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
     138: checkcast     #23                 // class org/h2/index/Index
     141: astore        13
     143: aload         10
     145: aload         13
     147: invokestatic  #127                // Method isIndexExcludedByHints:(Lorg/h2/table/IndexHints;Lorg/h2/index/Index;)Z
     150: ifeq          156
     153: goto          236
     156: aload         13
     158: aload_1
     159: aload_2
     160: aload_3
     161: iload         4
     163: aload         5
     165: aload         6
     167: invokeinterface #115,  7          // InterfaceMethod org/h2/index/Index.getCost:(Lorg/h2/engine/Session;[I[Lorg/h2/table/TableFilter;ILorg/h2/result/SortOrder;Ljava/util/HashSet;)D
     172: dstore        14
     174: aload         8
     176: invokevirtual #118                // Method org/h2/message/Trace.isDebugEnabled:()Z
     179: ifeq          211
     182: aload         8
     184: ldc           #119                // String Table      :     potential plan item cost {0} index {1}
     186: iconst_2
     187: anewarray     #120                // class java/lang/Object
     190: dup
     191: iconst_0
     192: dload         14
     194: invokestatic  #121                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     197: aastore
     198: dup
     199: iconst_1
     200: aload         13
     202: invokeinterface #122,  1          // InterfaceMethod org/h2/index/Index.getPlanSQL:()Ljava/lang/String;
     207: aastore
     208: invokevirtual #123                // Method org/h2/message/Trace.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     211: dload         14
     213: aload         7
     215: getfield      #116                // Field org/h2/table/PlanItem.cost:D
     218: dcmpg
     219: ifge          236
     222: aload         7
     224: dload         14
     226: putfield      #116                // Field org/h2/table/PlanItem.cost:D
     229: aload         7
     231: aload         13
     233: invokevirtual #113                // Method org/h2/table/PlanItem.setIndex:(Lorg/h2/index/Index;)V
     236: iinc          11, 1
     239: goto          124
     242: aload         7
     244: areturn

  private static boolean isIndexExcludedByHints(org.h2.table.IndexHints, org.h2.index.Index);
    Code:
       0: aload_0
       1: ifnull        16
       4: aload_0
       5: aload_1
       6: invokevirtual #128                // Method org/h2/table/IndexHints.allowIndex:(Lorg/h2/index/Index;)Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private static org.h2.table.IndexHints getIndexHints(org.h2.table.TableFilter[], int);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aconst_null
       5: goto          14
       8: aload_0
       9: iload_1
      10: aaload
      11: invokevirtual #129                // Method org/h2/table/TableFilter.getIndexHints:()Lorg/h2/table/IndexHints;
      14: areturn

  public org.h2.index.Index findPrimaryKey();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method getIndexes:()Ljava/util/ArrayList;
       4: astore_1
       5: aload_1
       6: ifnull        50
       9: aload_1
      10: invokevirtual #16                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      13: astore_2
      14: aload_2
      15: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          50
      23: aload_2
      24: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #23                 // class org/h2/index/Index
      32: astore_3
      33: aload_3
      34: invokeinterface #130,  1          // InterfaceMethod org/h2/index/Index.getIndexType:()Lorg/h2/index/IndexType;
      39: invokevirtual #131                // Method org/h2/index/IndexType.isPrimaryKey:()Z
      42: ifeq          47
      45: aload_3
      46: areturn
      47: goto          14
      50: aconst_null
      51: areturn

  public org.h2.index.Index getPrimaryKey();
    Code:
       0: aload_0
       1: invokevirtual #132                // Method findPrimaryKey:()Lorg/h2/index/Index;
       4: astore_1
       5: aload_1
       6: ifnull        11
       9: aload_1
      10: areturn
      11: ldc           #26                 // int 42112
      13: ldc           #133                // String PRIMARY_KEY_
      15: invokestatic  #27                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      18: athrow

  public void validateConvertUpdateSequence(org.h2.engine.Session, org.h2.result.Row);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: aload_0
       4: getfield      #34                 // Field columns:[Lorg/h2/table/Column;
       7: arraylength
       8: if_icmpge     80
      11: aload_2
      12: iload_3
      13: invokeinterface #134,  2          // InterfaceMethod org/h2/result/Row.getValue:(I)Lorg/h2/value/Value;
      18: astore        4
      20: aload_0
      21: getfield      #34                 // Field columns:[Lorg/h2/table/Column;
      24: iload_3
      25: aaload
      26: astore        5
      28: aload         5
      30: invokevirtual #135                // Method org/h2/table/Column.getComputed:()Z
      33: ifeq          48
      36: aconst_null
      37: astore        4
      39: aload         5
      41: aload_1
      42: aload_2
      43: invokevirtual #136                // Method org/h2/table/Column.computeValue:(Lorg/h2/engine/Session;Lorg/h2/result/Row;)Lorg/h2/value/Value;
      46: astore        6
      48: aload         5
      50: aload_1
      51: aload         4
      53: invokevirtual #137                // Method org/h2/table/Column.validateConvertUpdateSequence:(Lorg/h2/engine/Session;Lorg/h2/value/Value;)Lorg/h2/value/Value;
      56: astore        6
      58: aload         6
      60: aload         4
      62: if_acmpeq     74
      65: aload_2
      66: iload_3
      67: aload         6
      69: invokeinterface #138,  3          // InterfaceMethod org/h2/result/Row.setValue:(ILorg/h2/value/Value;)V
      74: iinc          3, 1
      77: goto          2
      80: return

  private static void remove(java.util.ArrayList<? extends org.h2.engine.DbObject>, org.h2.engine.DbObject);
    Code:
       0: aload_0
       1: ifnull        10
       4: aload_0
       5: aload_1
       6: invokevirtual #139                // Method java/util/ArrayList.remove:(Ljava/lang/Object;)Z
       9: pop
      10: return

  public void removeIndex(org.h2.index.Index);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method getIndexes:()Ljava/util/ArrayList;
       4: astore_2
       5: aload_2
       6: ifnull        65
       9: aload_2
      10: aload_1
      11: invokestatic  #140                // Method remove:(Ljava/util/ArrayList;Lorg/h2/engine/DbObject;)V
      14: aload_1
      15: invokeinterface #130,  1          // InterfaceMethod org/h2/index/Index.getIndexType:()Lorg/h2/index/IndexType;
      20: invokevirtual #131                // Method org/h2/index/IndexType.isPrimaryKey:()Z
      23: ifeq          65
      26: aload_1
      27: invokeinterface #95,  1           // InterfaceMethod org/h2/index/Index.getColumns:()[Lorg/h2/table/Column;
      32: astore_3
      33: aload_3
      34: arraylength
      35: istore        4
      37: iconst_0
      38: istore        5
      40: iload         5
      42: iload         4
      44: if_icmpge     65
      47: aload_3
      48: iload         5
      50: aaload
      51: astore        6
      53: aload         6
      55: iconst_0
      56: invokevirtual #141                // Method org/h2/table/Column.setPrimaryKey:(Z)V
      59: iinc          5, 1
      62: goto          40
      65: return

  public void removeDependentView(org.h2.table.TableView);
    Code:
       0: aload_0
       1: getfield      #4                  // Field dependentViews:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #142                // Method java/util/concurrent/CopyOnWriteArrayList.remove:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public void removeSynonym(org.h2.table.TableSynonym);
    Code:
       0: aload_0
       1: getfield      #41                 // Field synonyms:Ljava/util/ArrayList;
       4: aload_1
       5: invokestatic  #140                // Method remove:(Ljava/util/ArrayList;Lorg/h2/engine/DbObject;)V
       8: return

  public void removeConstraint(org.h2.constraint.Constraint);
    Code:
       0: aload_0
       1: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
       4: aload_1
       5: invokestatic  #140                // Method remove:(Ljava/util/ArrayList;Lorg/h2/engine/DbObject;)V
       8: return

  public final void removeSequence(org.h2.schema.Sequence);
    Code:
       0: aload_0
       1: getfield      #31                 // Field sequences:Ljava/util/ArrayList;
       4: aload_1
       5: invokestatic  #140                // Method remove:(Ljava/util/ArrayList;Lorg/h2/engine/DbObject;)V
       8: return

  public void removeTrigger(org.h2.schema.TriggerObject);
    Code:
       0: aload_0
       1: getfield      #40                 // Field triggers:Ljava/util/ArrayList;
       4: aload_1
       5: invokestatic  #140                // Method remove:(Ljava/util/ArrayList;Lorg/h2/engine/DbObject;)V
       8: return

  public void addDependentView(org.h2.table.TableView);
    Code:
       0: aload_0
       1: getfield      #4                  // Field dependentViews:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #143                // Method java/util/concurrent/CopyOnWriteArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public void addSynonym(org.h2.table.TableSynonym);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #41                 // Field synonyms:Ljava/util/ArrayList;
       5: aload_1
       6: invokestatic  #144                // Method add:(Ljava/util/ArrayList;Ljava/lang/Object;)Ljava/util/ArrayList;
       9: putfield      #41                 // Field synonyms:Ljava/util/ArrayList;
      12: return

  public void addConstraint(org.h2.constraint.Constraint);
    Code:
       0: aload_0
       1: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
       4: ifnull        18
       7: aload_0
       8: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
      11: aload_1
      12: invokevirtual #99                 // Method java/util/ArrayList.contains:(Ljava/lang/Object;)Z
      15: ifne          30
      18: aload_0
      19: aload_0
      20: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
      23: aload_1
      24: invokestatic  #144                // Method add:(Ljava/util/ArrayList;Ljava/lang/Object;)Ljava/util/ArrayList;
      27: putfield      #15                 // Field constraints:Ljava/util/ArrayList;
      30: return

  public java.util.ArrayList<org.h2.constraint.Constraint> getConstraints();
    Code:
       0: aload_0
       1: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
       4: areturn

  public void addSequence(org.h2.schema.Sequence);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #31                 // Field sequences:Ljava/util/ArrayList;
       5: aload_1
       6: invokestatic  #144                // Method add:(Ljava/util/ArrayList;Ljava/lang/Object;)Ljava/util/ArrayList;
       9: putfield      #31                 // Field sequences:Ljava/util/ArrayList;
      12: return

  public void addTrigger(org.h2.schema.TriggerObject);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #40                 // Field triggers:Ljava/util/ArrayList;
       5: aload_1
       6: invokestatic  #144                // Method add:(Ljava/util/ArrayList;Ljava/lang/Object;)Ljava/util/ArrayList;
       9: putfield      #40                 // Field triggers:Ljava/util/ArrayList;
      12: return

  private static <T> java.util.ArrayList<T> add(java.util.ArrayList<T>, T);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #38                 // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
       7: astore_0
       8: aload_0
       9: aload_1
      10: invokevirtual #46                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      13: pop
      14: aload_0
      15: areturn

  public void fire(org.h2.engine.Session, int, boolean);
    Code:
       0: aload_0
       1: getfield      #40                 // Field triggers:Ljava/util/ArrayList;
       4: ifnull        49
       7: aload_0
       8: getfield      #40                 // Field triggers:Ljava/util/ArrayList;
      11: invokevirtual #16                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      14: astore        4
      16: aload         4
      18: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          49
      26: aload         4
      28: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #80                 // class org/h2/schema/TriggerObject
      36: astore        5
      38: aload         5
      40: aload_1
      41: iload_2
      42: iload_3
      43: invokevirtual #145                // Method org/h2/schema/TriggerObject.fire:(Lorg/h2/engine/Session;IZ)V
      46: goto          16
      49: return

  public boolean hasSelectTrigger();
    Code:
       0: aload_0
       1: getfield      #40                 // Field triggers:Ljava/util/ArrayList;
       4: ifnull        46
       7: aload_0
       8: getfield      #40                 // Field triggers:Ljava/util/ArrayList;
      11: invokevirtual #16                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          46
      24: aload_1
      25: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #80                 // class org/h2/schema/TriggerObject
      33: astore_2
      34: aload_2
      35: invokevirtual #146                // Method org/h2/schema/TriggerObject.isSelectTrigger:()Z
      38: ifeq          43
      41: iconst_1
      42: ireturn
      43: goto          15
      46: iconst_0
      47: ireturn

  public boolean fireRow();
    Code:
       0: aload_0
       1: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
       4: ifnull        17
       7: aload_0
       8: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
      11: invokevirtual #77                 // Method java/util/ArrayList.isEmpty:()Z
      14: ifeq          34
      17: aload_0
      18: getfield      #40                 // Field triggers:Ljava/util/ArrayList;
      21: ifnull        38
      24: aload_0
      25: getfield      #40                 // Field triggers:Ljava/util/ArrayList;
      28: invokevirtual #77                 // Method java/util/ArrayList.isEmpty:()Z
      31: ifne          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn

  public boolean fireBeforeRow(org.h2.engine.Session, org.h2.result.Row, org.h2.result.Row);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_1
       5: iconst_0
       6: invokespecial #147                // Method fireRow:(Lorg/h2/engine/Session;Lorg/h2/result/Row;Lorg/h2/result/Row;ZZ)Z
       9: istore        4
      11: aload_0
      12: aload_1
      13: aload_2
      14: aload_3
      15: iconst_1
      16: invokespecial #148                // Method fireConstraints:(Lorg/h2/engine/Session;Lorg/h2/result/Row;Lorg/h2/result/Row;Z)V
      19: iload         4
      21: ireturn

  private void fireConstraints(org.h2.engine.Session, org.h2.result.Row, org.h2.result.Row, boolean);
    Code:
       0: aload_0
       1: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
       4: ifnull        60
       7: aload_0
       8: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
      11: invokevirtual #16                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      14: astore        5
      16: aload         5
      18: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          60
      26: aload         5
      28: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #19                 // class org/h2/constraint/Constraint
      36: astore        6
      38: aload         6
      40: invokevirtual #149                // Method org/h2/constraint/Constraint.isBefore:()Z
      43: iload         4
      45: if_icmpne     57
      48: aload         6
      50: aload_1
      51: aload_0
      52: aload_2
      53: aload_3
      54: invokevirtual #150                // Method org/h2/constraint/Constraint.checkRow:(Lorg/h2/engine/Session;Lorg/h2/table/Table;Lorg/h2/result/Row;Lorg/h2/result/Row;)V
      57: goto          16
      60: return

  public void fireAfterRow(org.h2.engine.Session, org.h2.result.Row, org.h2.result.Row, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_0
       5: iload         4
       7: invokespecial #147                // Method fireRow:(Lorg/h2/engine/Session;Lorg/h2/result/Row;Lorg/h2/result/Row;ZZ)Z
      10: pop
      11: iload         4
      13: ifne          24
      16: aload_0
      17: aload_1
      18: aload_2
      19: aload_3
      20: iconst_0
      21: invokespecial #148                // Method fireConstraints:(Lorg/h2/engine/Session;Lorg/h2/result/Row;Lorg/h2/result/Row;Z)V
      24: return

  private boolean fireRow(org.h2.engine.Session, org.h2.result.Row, org.h2.result.Row, boolean, boolean);
    Code:
       0: aload_0
       1: getfield      #40                 // Field triggers:Ljava/util/ArrayList;
       4: ifnull        63
       7: aload_0
       8: getfield      #40                 // Field triggers:Ljava/util/ArrayList;
      11: invokevirtual #16                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      14: astore        6
      16: aload         6
      18: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          63
      26: aload         6
      28: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #80                 // class org/h2/schema/TriggerObject
      36: astore        7
      38: aload         7
      40: aload_1
      41: aload_0
      42: aload_2
      43: aload_3
      44: iload         4
      46: iload         5
      48: invokevirtual #151                // Method org/h2/schema/TriggerObject.fireRow:(Lorg/h2/engine/Session;Lorg/h2/table/Table;Lorg/h2/result/Row;Lorg/h2/result/Row;ZZ)Z
      51: istore        8
      53: iload         8
      55: ifeq          60
      58: iconst_1
      59: ireturn
      60: goto          16
      63: iconst_0
      64: ireturn

  public boolean isGlobalTemporary();
    Code:
       0: iconst_0
       1: ireturn

  public boolean canTruncate();
    Code:
       0: iconst_0
       1: ireturn

  public void setCheckForeignKeyConstraints(org.h2.engine.Session, boolean, boolean);
    Code:
       0: iload_2
       1: ifeq          55
       4: iload_3
       5: ifeq          55
       8: aload_0
       9: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
      12: ifnull        55
      15: aload_0
      16: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
      19: invokevirtual #16                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      22: astore        4
      24: aload         4
      26: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          55
      34: aload         4
      36: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #19                 // class org/h2/constraint/Constraint
      44: astore        5
      46: aload         5
      48: aload_1
      49: invokevirtual #152                // Method org/h2/constraint/Constraint.checkExistingData:(Lorg/h2/engine/Session;)V
      52: goto          24
      55: aload_0
      56: iload_2
      57: putfield      #5                  // Field checkForeignKeyConstraints:Z
      60: return

  public boolean getCheckForeignKeyConstraints();
    Code:
       0: aload_0
       1: getfield      #5                  // Field checkForeignKeyConstraints:Z
       4: ireturn

  public org.h2.index.Index getIndexForColumn(org.h2.table.Column, boolean, boolean);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method getIndexes:()Ljava/util/ArrayList;
       4: astore        4
       6: aconst_null
       7: astore        5
       9: aload         4
      11: ifnull        122
      14: iconst_1
      15: istore        6
      17: aload         4
      19: invokevirtual #125                // Method java/util/ArrayList.size:()I
      22: istore        7
      24: iload         6
      26: iload         7
      28: if_icmpge     122
      31: aload         4
      33: iload         6
      35: invokevirtual #126                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      38: checkcast     #23                 // class org/h2/index/Index
      41: astore        8
      43: iload_2
      44: ifeq          60
      47: aload         8
      49: invokeinterface #153,  1          // InterfaceMethod org/h2/index/Index.canGetFirstOrLast:()Z
      54: ifne          60
      57: goto          116
      60: iload_3
      61: ifeq          77
      64: aload         8
      66: invokeinterface #154,  1          // InterfaceMethod org/h2/index/Index.canFindNext:()Z
      71: ifne          77
      74: goto          116
      77: aload         8
      79: aload_1
      80: invokeinterface #155,  2          // InterfaceMethod org/h2/index/Index.isFirstColumn:(Lorg/h2/table/Column;)Z
      85: ifeq          116
      88: aload         5
      90: ifnull        112
      93: aload         5
      95: invokeinterface #95,  1           // InterfaceMethod org/h2/index/Index.getColumns:()[Lorg/h2/table/Column;
     100: arraylength
     101: aload         8
     103: invokeinterface #95,  1           // InterfaceMethod org/h2/index/Index.getColumns:()[Lorg/h2/table/Column;
     108: arraylength
     109: if_icmple     116
     112: aload         8
     114: astore        5
     116: iinc          6, 1
     119: goto          24
     122: aload         5
     124: areturn

  public boolean getOnCommitDrop();
    Code:
       0: aload_0
       1: getfield      #156                // Field onCommitDrop:Z
       4: ireturn

  public void setOnCommitDrop(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #156                // Field onCommitDrop:Z
       5: return

  public boolean getOnCommitTruncate();
    Code:
       0: aload_0
       1: getfield      #157                // Field onCommitTruncate:Z
       4: ireturn

  public void setOnCommitTruncate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #157                // Field onCommitTruncate:Z
       5: return

  public void removeIndexOrTransferOwnership(org.h2.engine.Session, org.h2.index.Index);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_0
       3: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
       6: ifnull        70
       9: aload_0
      10: getfield      #15                 // Field constraints:Ljava/util/ArrayList;
      13: invokevirtual #16                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      16: astore        4
      18: aload         4
      20: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          70
      28: aload         4
      30: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #19                 // class org/h2/constraint/Constraint
      38: astore        5
      40: aload         5
      42: aload_2
      43: invokevirtual #158                // Method org/h2/constraint/Constraint.usesIndex:(Lorg/h2/index/Index;)Z
      46: ifeq          67
      49: aload         5
      51: aload_2
      52: invokevirtual #159                // Method org/h2/constraint/Constraint.setIndexOwner:(Lorg/h2/index/Index;)V
      55: aload_0
      56: getfield      #42                 // Field database:Lorg/h2/engine/Database;
      59: aload_1
      60: aload         5
      62: invokevirtual #160                // Method org/h2/engine/Database.updateMeta:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
      65: iconst_1
      66: istore_3
      67: goto          18
      70: iload_3
      71: ifne          83
      74: aload_0
      75: getfield      #42                 // Field database:Lorg/h2/engine/Database;
      78: aload_1
      79: aload_2
      80: invokevirtual #76                 // Method org/h2/engine/Database.removeSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
      83: return

  public java.util.ArrayList<org.h2.engine.Session> checkDeadlock(org.h2.engine.Session, org.h2.engine.Session, java.util.Set<org.h2.engine.Session>);
    Code:
       0: aconst_null
       1: areturn

  public boolean isPersistIndexes();
    Code:
       0: aload_0
       1: getfield      #10                 // Field persistIndexes:Z
       4: ireturn

  public boolean isPersistData();
    Code:
       0: aload_0
       1: getfield      #11                 // Field persistData:Z
       4: ireturn

  public int compareTypeSafe(org.h2.value.Value, org.h2.value.Value);
    Code:
       0: aload_1
       1: aload_2
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_1
       8: invokevirtual #161                // Method org/h2/value/Value.getType:()I
      11: aload_2
      12: invokevirtual #161                // Method org/h2/value/Value.getType:()I
      15: invokestatic  #162                // Method org/h2/value/Value.getHigherOrder:(II)I
      18: istore_3
      19: aload_1
      20: iload_3
      21: invokevirtual #163                // Method org/h2/value/Value.convertTo:(I)Lorg/h2/value/Value;
      24: astore_1
      25: aload_2
      26: iload_3
      27: invokevirtual #163                // Method org/h2/value/Value.convertTo:(I)Lorg/h2/value/Value;
      30: astore_2
      31: aload_1
      32: aload_2
      33: aload_0
      34: getfield      #13                 // Field compareMode:Lorg/h2/value/CompareMode;
      37: invokevirtual #164                // Method org/h2/value/Value.compareTypeSafe:(Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I
      40: ireturn

  public org.h2.value.CompareMode getCompareMode();
    Code:
       0: aload_0
       1: getfield      #13                 // Field compareMode:Lorg/h2/value/CompareMode;
       4: areturn

  public void checkWritingAllowed();
    Code:
       0: aload_0
       1: getfield      #42                 // Field database:Lorg/h2/engine/Database;
       4: invokevirtual #165                // Method org/h2/engine/Database.checkWritingAllowed:()V
       7: return

  private static org.h2.value.Value getGeneratedValue(org.h2.engine.Session, org.h2.table.Column, org.h2.expression.Expression);
    Code:
       0: aload_2
       1: ifnonnull     14
       4: aload_1
       5: aload_0
       6: aconst_null
       7: invokevirtual #137                // Method org/h2/table/Column.validateConvertUpdateSequence:(Lorg/h2/engine/Session;Lorg/h2/value/Value;)Lorg/h2/value/Value;
      10: astore_3
      11: goto          20
      14: aload_2
      15: aload_0
      16: invokevirtual #166                // Method org/h2/expression/Expression.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
      19: astore_3
      20: aload_1
      21: aload_3
      22: invokevirtual #167                // Method org/h2/table/Column.convert:(Lorg/h2/value/Value;)Lorg/h2/value/Value;
      25: areturn

  public org.h2.value.Value getDefaultValue(org.h2.engine.Session, org.h2.table.Column);
    Code:
       0: aload_1
       1: aload_2
       2: aload_2
       3: invokevirtual #168                // Method org/h2/table/Column.getDefaultExpression:()Lorg/h2/expression/Expression;
       6: invokestatic  #169                // Method getGeneratedValue:(Lorg/h2/engine/Session;Lorg/h2/table/Column;Lorg/h2/expression/Expression;)Lorg/h2/value/Value;
       9: areturn

  public org.h2.value.Value getOnUpdateValue(org.h2.engine.Session, org.h2.table.Column);
    Code:
       0: aload_1
       1: aload_2
       2: aload_2
       3: invokevirtual #170                // Method org/h2/table/Column.getOnUpdateExpression:()Lorg/h2/expression/Expression;
       6: invokestatic  #169                // Method getGeneratedValue:(Lorg/h2/engine/Session;Lorg/h2/table/Column;Lorg/h2/expression/Expression;)Lorg/h2/value/Value;
       9: areturn

  public boolean isHidden();
    Code:
       0: aload_0
       1: getfield      #171                // Field isHidden:Z
       4: ireturn

  public void setHidden(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #171                // Field isHidden:Z
       5: return

  public boolean isMVStore();
    Code:
       0: iconst_0
       1: ireturn

  public void setTableExpression(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #172                // Field tableExpression:Z
       5: return

  public boolean isTableExpression();
    Code:
       0: aload_0
       1: getfield      #172                // Field tableExpression:Z
       4: ireturn
}
