Compiled from "JoinBatch.java"
final class org.h2.table.JoinBatch$ViewIndexLookupBatchUnion extends org.h2.table.JoinBatch$ViewIndexLookupBatchBase<org.h2.table.JoinBatch$QueryRunnerUnion> {
  java.util.ArrayList<org.h2.table.JoinBatch$JoinFilter> filters;

  java.util.ArrayList<org.h2.table.JoinBatch> joinBatches;

  private boolean onlyBatchedQueries;

  static final boolean $assertionsDisabled;

  protected org.h2.table.JoinBatch$ViewIndexLookupBatchUnion(org.h2.index.ViewIndex);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/h2/table/JoinBatch$ViewIndexLookupBatchBase."<init>":(Lorg/h2/index/ViewIndex;)V
       5: aload_0
       6: iconst_1
       7: putfield      #2                  // Field onlyBatchedQueries:Z
      10: return

  boolean initialize();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field viewIndex:Lorg/h2/index/ViewIndex;
       5: invokevirtual #4                  // Method org/h2/index/ViewIndex.getQuery:()Lorg/h2/command/dml/Query;
       8: invokespecial #5                  // Method collectJoinBatches:(Lorg/h2/command/dml/Query;)Z
      11: ifeq          25
      14: aload_0
      15: getfield      #6                  // Field joinBatches:Ljava/util/ArrayList;
      18: ifnull        25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  private boolean collectJoinBatches(org.h2.command.dml.Query);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method org/h2/command/dml/Query.isUnion:()Z
       4: ifeq          40
       7: aload_1
       8: checkcast     #8                  // class org/h2/command/dml/SelectUnion
      11: astore_2
      12: aload_0
      13: aload_2
      14: invokevirtual #9                  // Method org/h2/command/dml/SelectUnion.getLeft:()Lorg/h2/command/dml/Query;
      17: invokespecial #5                  // Method collectJoinBatches:(Lorg/h2/command/dml/Query;)Z
      20: ifeq          38
      23: aload_0
      24: aload_2
      25: invokevirtual #10                 // Method org/h2/command/dml/SelectUnion.getRight:()Lorg/h2/command/dml/Query;
      28: invokespecial #5                  // Method collectJoinBatches:(Lorg/h2/command/dml/Query;)Z
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn
      40: aload_1
      41: checkcast     #11                 // class org/h2/command/dml/Select
      44: astore_2
      45: aload_2
      46: invokevirtual #12                 // Method org/h2/command/dml/Select.getJoinBatch:()Lorg/h2/table/JoinBatch;
      49: astore_3
      50: aload_3
      51: ifnonnull     62
      54: aload_0
      55: iconst_0
      56: putfield      #2                  // Field onlyBatchedQueries:Z
      59: goto          142
      62: aload_3
      63: iconst_0
      64: invokevirtual #13                 // Method org/h2/table/JoinBatch.getLookupBatch:(I)Lorg/h2/index/IndexLookupBatch;
      67: ifnonnull     72
      70: iconst_0
      71: ireturn
      72: getstatic     #14                 // Field $assertionsDisabled:Z
      75: ifne          93
      78: aload_3
      79: getfield      #15                 // Field org/h2/table/JoinBatch.batchedSubQuery:Z
      82: ifeq          93
      85: new           #16                 // class java/lang/AssertionError
      88: dup
      89: invokespecial #17                 // Method java/lang/AssertionError."<init>":()V
      92: athrow
      93: aload_3
      94: iconst_1
      95: putfield      #15                 // Field org/h2/table/JoinBatch.batchedSubQuery:Z
      98: aload_0
      99: getfield      #6                  // Field joinBatches:Ljava/util/ArrayList;
     102: ifnonnull     119
     105: aload_0
     106: invokestatic  #18                 // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
     109: putfield      #6                  // Field joinBatches:Ljava/util/ArrayList;
     112: aload_0
     113: invokestatic  #18                 // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
     116: putfield      #19                 // Field filters:Ljava/util/ArrayList;
     119: aload_0
     120: getfield      #19                 // Field filters:Ljava/util/ArrayList;
     123: aload_3
     124: getfield      #20                 // Field org/h2/table/JoinBatch.filters:[Lorg/h2/table/JoinBatch$JoinFilter;
     127: iconst_0
     128: aaload
     129: invokevirtual #21                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     132: pop
     133: aload_0
     134: getfield      #6                  // Field joinBatches:Ljava/util/ArrayList;
     137: aload_3
     138: invokevirtual #21                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     141: pop
     142: iconst_1
     143: ireturn

  public boolean isBatchFull();
    Code:
       0: aload_0
       1: getfield      #19                 // Field filters:Ljava/util/ArrayList;
       4: invokevirtual #22                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          39
      17: aload_1
      18: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #25                 // class org/h2/table/JoinBatch$JoinFilter
      26: astore_2
      27: aload_2
      28: invokevirtual #26                 // Method org/h2/table/JoinBatch$JoinFilter.isBatchFull:()Z
      31: ifeq          36
      34: iconst_1
      35: ireturn
      36: goto          8
      39: iconst_0
      40: ireturn

  protected boolean collectSearchRows(org.h2.table.JoinBatch$QueryRunnerUnion);
    Code:
       0: iconst_0
       1: istore_2
       2: iconst_0
       3: istore_3
       4: iload_3
       5: aload_0
       6: getfield      #19                 // Field filters:Ljava/util/ArrayList;
       9: invokevirtual #27                 // Method java/util/ArrayList.size:()I
      12: if_icmpge     52
      15: aload_0
      16: getfield      #19                 // Field filters:Ljava/util/ArrayList;
      19: iload_3
      20: invokevirtual #28                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      23: checkcast     #25                 // class org/h2/table/JoinBatch$JoinFilter
      26: invokevirtual #29                 // Method org/h2/table/JoinBatch$JoinFilter.collectSearchRows:()Z
      29: ifeq          37
      32: iconst_1
      33: istore_2
      34: goto          46
      37: aload_1
      38: getfield      #30                 // Field org/h2/table/JoinBatch$QueryRunnerUnion.topFutureCursors:[Ljava/util/concurrent/Future;
      41: iload_3
      42: getstatic     #31                 // Field org/h2/table/JoinBatch.EMPTY_FUTURE_CURSOR:Ljava/util/concurrent/Future;
      45: aastore
      46: iinc          3, 1
      49: goto          4
      52: iload_2
      53: ifne          63
      56: aload_0
      57: getfield      #2                  // Field onlyBatchedQueries:Z
      60: ifne          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ireturn

  protected org.h2.table.JoinBatch$QueryRunnerUnion newQueryRunner();
    Code:
       0: new           #32                 // class org/h2/table/JoinBatch$QueryRunnerUnion
       3: dup
       4: aload_0
       5: invokespecial #33                 // Method org/h2/table/JoinBatch$QueryRunnerUnion."<init>":(Lorg/h2/table/JoinBatch$ViewIndexLookupBatchUnion;)V
       8: areturn

  protected void startQueryRunners(int);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #19                 // Field filters:Ljava/util/ArrayList;
       7: invokevirtual #27                 // Method java/util/ArrayList.size:()I
      10: if_icmpge     136
      13: aload_0
      14: getfield      #19                 // Field filters:Ljava/util/ArrayList;
      17: iload_2
      18: invokevirtual #28                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      21: checkcast     #25                 // class org/h2/table/JoinBatch$JoinFilter
      24: invokevirtual #34                 // Method org/h2/table/JoinBatch$JoinFilter.find:()Ljava/util/List;
      27: astore_3
      28: iconst_0
      29: istore        4
      31: iconst_0
      32: istore        5
      34: iload         4
      36: iload_1
      37: if_icmpge     85
      40: aload_0
      41: iload         4
      43: invokevirtual #35                 // Method queryRunner:(I)Lorg/h2/table/JoinBatch$QueryRunnerBase;
      46: checkcast     #32                 // class org/h2/table/JoinBatch$QueryRunnerUnion
      49: getfield      #30                 // Field org/h2/table/JoinBatch$QueryRunnerUnion.topFutureCursors:[Ljava/util/concurrent/Future;
      52: astore        6
      54: aload         6
      56: iload_2
      57: aaload
      58: ifnonnull     79
      61: aload         6
      63: iload_2
      64: aload_3
      65: iload         5
      67: iinc          5, 1
      70: invokeinterface #36,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      75: checkcast     #37                 // class java/util/concurrent/Future
      78: aastore
      79: iinc          4, 1
      82: goto          34
      85: getstatic     #14                 // Field $assertionsDisabled:Z
      88: ifne          105
      91: iload         4
      93: iload_1
      94: if_icmpeq     105
      97: new           #16                 // class java/lang/AssertionError
     100: dup
     101: invokespecial #17                 // Method java/lang/AssertionError."<init>":()V
     104: athrow
     105: getstatic     #14                 // Field $assertionsDisabled:Z
     108: ifne          130
     111: iload         5
     113: aload_3
     114: invokeinterface #38,  1           // InterfaceMethod java/util/List.size:()I
     119: if_icmpeq     130
     122: new           #16                 // class java/lang/AssertionError
     125: dup
     126: invokespecial #17                 // Method java/lang/AssertionError."<init>":()V
     129: athrow
     130: iinc          2, 1
     133: goto          2
     136: return

  protected org.h2.table.JoinBatch$QueryRunnerBase newQueryRunner();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method newQueryRunner:()Lorg/h2/table/JoinBatch$QueryRunnerUnion;
       4: areturn

  protected boolean collectSearchRows(org.h2.table.JoinBatch$QueryRunnerBase);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #32                 // class org/h2/table/JoinBatch$QueryRunnerUnion
       5: invokevirtual #40                 // Method collectSearchRows:(Lorg/h2/table/JoinBatch$QueryRunnerUnion;)Z
       8: ireturn

  static {};
    Code:
       0: ldc_w         #41                 // class org/h2/table/JoinBatch
       3: invokevirtual #42                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #14                 // Field $assertionsDisabled:Z
      17: return
}
