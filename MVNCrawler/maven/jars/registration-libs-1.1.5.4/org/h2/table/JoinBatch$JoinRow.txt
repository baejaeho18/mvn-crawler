Compiled from "JoinBatch.java"
final class org.h2.table.JoinBatch$JoinRow {
  private static final long S_NULL;

  private static final long S_FUTURE;

  private static final long S_CURSOR;

  private static final long S_ROW;

  private static final long S_MASK;

  org.h2.table.JoinBatch$JoinRow prev;

  org.h2.table.JoinBatch$JoinRow next;

  private java.lang.Object[] row;

  private long state;

  static final boolean $assertionsDisabled;

  org.h2.table.JoinBatch$JoinRow(java.lang.Object[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field row:[Ljava/lang/Object;
       9: return

  private long getState(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:J
       4: iload_1
       5: iconst_1
       6: ishl
       7: lushr
       8: ldc2_w        #4                  // long 3l
      11: land
      12: lreturn

  private void incrementState(int, long);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: lload_2
       7: lconst_0
       8: lcmp
       9: ifgt          21
      12: new           #7                  // class java/lang/AssertionError
      15: dup
      16: lload_2
      17: invokespecial #8                  // Method java/lang/AssertionError."<init>":(J)V
      20: athrow
      21: aload_0
      22: dup
      23: getfield      #3                  // Field state:J
      26: lload_2
      27: iload_1
      28: iconst_1
      29: ishl
      30: lshl
      31: ladd
      32: putfield      #3                  // Field state:J
      35: return

  void updateRow(int, java.lang.Object, long, long);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          47
       6: aload_0
       7: iload_1
       8: invokespecial #9                  // Method getState:(I)J
      11: lload_3
      12: lcmp
      13: ifeq          47
      16: new           #7                  // class java/lang/AssertionError
      19: dup
      20: new           #10                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #12                 // String old state:
      29: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: iload_1
      34: invokespecial #9                  // Method getState:(I)J
      37: invokevirtual #14                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      40: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #16                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      46: athrow
      47: aload_0
      48: getfield      #2                  // Field row:[Ljava/lang/Object;
      51: iload_1
      52: aload_2
      53: aastore
      54: aload_0
      55: iload_1
      56: lload         5
      58: lload_3
      59: lsub
      60: invokespecial #17                 // Method incrementState:(IJ)V
      63: getstatic     #6                  // Field $assertionsDisabled:Z
      66: ifne          111
      69: aload_0
      70: iload_1
      71: invokespecial #9                  // Method getState:(I)J
      74: lload         5
      76: lcmp
      77: ifeq          111
      80: new           #7                  // class java/lang/AssertionError
      83: dup
      84: new           #10                 // class java/lang/StringBuilder
      87: dup
      88: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      91: ldc           #18                 // String new state:
      93: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: iload_1
      98: invokespecial #9                  // Method getState:(I)J
     101: invokevirtual #14                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     104: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: invokespecial #16                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     110: athrow
     111: return

  java.lang.Object row(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field row:[Ljava/lang/Object;
       4: iload_1
       5: aaload
       6: areturn

  boolean isRow(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #9                  // Method getState:(I)J
       5: ldc2_w        #4                  // long 3l
       8: lcmp
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  boolean isFuture(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #9                  // Method getState:(I)J
       5: lconst_1
       6: lcmp
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private boolean isCursor(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #9                  // Method getState:(I)J
       5: ldc2_w        #19                 // long 2l
       8: lcmp
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  boolean isComplete();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field row:[Ljava/lang/Object;
       5: arraylength
       6: iconst_1
       7: isub
       8: invokevirtual #21                 // Method isRow:(I)Z
      11: ireturn

  boolean isDropped();
    Code:
       0: aload_0
       1: getfield      #2                  // Field row:[Ljava/lang/Object;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  void drop();
    Code:
       0: aload_0
       1: getfield      #22                 // Field prev:Lorg/h2/table/JoinBatch$JoinRow;
       4: ifnull        18
       7: aload_0
       8: getfield      #22                 // Field prev:Lorg/h2/table/JoinBatch$JoinRow;
      11: aload_0
      12: getfield      #23                 // Field next:Lorg/h2/table/JoinBatch$JoinRow;
      15: putfield      #23                 // Field next:Lorg/h2/table/JoinBatch$JoinRow;
      18: aload_0
      19: getfield      #23                 // Field next:Lorg/h2/table/JoinBatch$JoinRow;
      22: ifnull        36
      25: aload_0
      26: getfield      #23                 // Field next:Lorg/h2/table/JoinBatch$JoinRow;
      29: aload_0
      30: getfield      #22                 // Field prev:Lorg/h2/table/JoinBatch$JoinRow;
      33: putfield      #22                 // Field prev:Lorg/h2/table/JoinBatch$JoinRow;
      36: aload_0
      37: aconst_null
      38: putfield      #2                  // Field row:[Ljava/lang/Object;
      41: return

  org.h2.table.JoinBatch$JoinRow copyBehind(int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          22
       6: aload_0
       7: iload_1
       8: invokespecial #24                 // Method isCursor:(I)Z
      11: ifne          22
      14: new           #7                  // class java/lang/AssertionError
      17: dup
      18: invokespecial #25                 // Method java/lang/AssertionError."<init>":()V
      21: athrow
      22: getstatic     #6                  // Field $assertionsDisabled:Z
      25: ifne          58
      28: iload_1
      29: iconst_1
      30: iadd
      31: aload_0
      32: getfield      #2                  // Field row:[Ljava/lang/Object;
      35: arraylength
      36: if_icmpeq     58
      39: aload_0
      40: getfield      #2                  // Field row:[Ljava/lang/Object;
      43: iload_1
      44: iconst_1
      45: iadd
      46: aaload
      47: ifnull        58
      50: new           #7                  // class java/lang/AssertionError
      53: dup
      54: invokespecial #25                 // Method java/lang/AssertionError."<init>":()V
      57: athrow
      58: aload_0
      59: getfield      #2                  // Field row:[Ljava/lang/Object;
      62: arraylength
      63: anewarray     #26                 // class java/lang/Object
      66: astore_2
      67: iload_1
      68: ifeq          82
      71: aload_0
      72: getfield      #2                  // Field row:[Ljava/lang/Object;
      75: iconst_0
      76: aload_2
      77: iconst_0
      78: iload_1
      79: invokestatic  #27                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      82: new           #28                 // class org/h2/table/JoinBatch$JoinRow
      85: dup
      86: aload_2
      87: invokespecial #29                 // Method "<init>":([Ljava/lang/Object;)V
      90: astore_3
      91: aload_3
      92: aload_0
      93: getfield      #3                  // Field state:J
      96: putfield      #3                  // Field state:J
      99: aload_0
     100: getfield      #22                 // Field prev:Lorg/h2/table/JoinBatch$JoinRow;
     103: ifnull        122
     106: aload_3
     107: aload_0
     108: getfield      #22                 // Field prev:Lorg/h2/table/JoinBatch$JoinRow;
     111: putfield      #22                 // Field prev:Lorg/h2/table/JoinBatch$JoinRow;
     114: aload_0
     115: getfield      #22                 // Field prev:Lorg/h2/table/JoinBatch$JoinRow;
     118: aload_3
     119: putfield      #23                 // Field next:Lorg/h2/table/JoinBatch$JoinRow;
     122: aload_0
     123: aload_3
     124: putfield      #22                 // Field prev:Lorg/h2/table/JoinBatch$JoinRow;
     127: aload_3
     128: aload_0
     129: putfield      #23                 // Field next:Lorg/h2/table/JoinBatch$JoinRow;
     132: aload_3
     133: areturn

  public java.lang.String toString();
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #30                 // String JoinRow->
       9: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field row:[Ljava/lang/Object;
      16: invokestatic  #31                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      19: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: areturn

  static {};
    Code:
       0: ldc_w         #32                 // class org/h2/table/JoinBatch
       3: invokevirtual #33                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #6                  // Field $assertionsDisabled:Z
      17: return
}
