Compiled from "Command.java"
public abstract class org.h2.command.Command implements org.h2.command.CommandInterface {
  protected final org.h2.engine.Session session;

  protected long startTimeNanos;

  private final org.h2.message.Trace trace;

  private volatile boolean cancel;

  private final java.lang.String sql;

  private boolean canReuse;

  org.h2.command.Command(org.h2.command.Parser, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method org/h2/command/Parser.getSession:()Lorg/h2/engine/Session;
       9: putfield      #3                  // Field session:Lorg/h2/engine/Session;
      12: aload_0
      13: aload_2
      14: putfield      #4                  // Field sql:Ljava/lang/String;
      17: aload_0
      18: aload_0
      19: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      22: invokevirtual #5                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      25: iconst_0
      26: invokevirtual #6                  // Method org/h2/engine/Database.getTrace:(I)Lorg/h2/message/Trace;
      29: putfield      #7                  // Field trace:Lorg/h2/message/Trace;
      32: return

  public abstract boolean isTransactional();

  public abstract boolean isQuery();

  public abstract void prepareJoinBatch();

  public abstract java.util.ArrayList<? extends org.h2.expression.ParameterInterface> getParameters();

  public abstract boolean isReadOnly();

  public abstract org.h2.result.ResultInterface queryMeta();

  public int update();
    Code:
       0: ldc           #8                  // int 90001
       2: invokestatic  #9                  // Method org/h2/message/DbException.get:(I)Lorg/h2/message/DbException;
       5: athrow

  public org.h2.result.ResultInterface query(int);
    Code:
       0: ldc           #10                 // int 90002
       2: invokestatic  #9                  // Method org/h2/message/DbException.get:(I)Lorg/h2/message/DbException;
       5: athrow

  public final org.h2.result.ResultInterface getMetaData();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method queryMeta:()Lorg/h2/result/ResultInterface;
       4: areturn

  void start();
    Code:
       0: aload_0
       1: getfield      #7                  // Field trace:Lorg/h2/message/Trace;
       4: invokevirtual #12                 // Method org/h2/message/Trace.isInfoEnabled:()Z
       7: ifne          23
      10: aload_0
      11: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      14: invokevirtual #5                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      17: invokevirtual #13                 // Method org/h2/engine/Database.getQueryStatistics:()Z
      20: ifeq          30
      23: aload_0
      24: invokestatic  #14                 // Method java/lang/System.nanoTime:()J
      27: putfield      #15                 // Field startTimeNanos:J
      30: return

  void setProgress(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field session:Lorg/h2/engine/Session;
       4: invokevirtual #5                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
       7: iload_1
       8: aload_0
       9: getfield      #4                  // Field sql:Ljava/lang/String;
      12: iconst_0
      13: iconst_0
      14: invokevirtual #16                 // Method org/h2/engine/Database.setProgress:(ILjava/lang/String;II)V
      17: return

  protected void checkCanceled();
    Code:
       0: aload_0
       1: getfield      #17                 // Field cancel:Z
       4: ifeq          18
       7: aload_0
       8: iconst_0
       9: putfield      #17                 // Field cancel:Z
      12: ldc           #18                 // int 57014
      14: invokestatic  #9                  // Method org/h2/message/DbException.get:(I)Lorg/h2/message/DbException;
      17: athrow
      18: return

  public void stop();
    Code:
       0: aload_0
       1: getfield      #3                  // Field session:Lorg/h2/engine/Session;
       4: invokevirtual #19                 // Method org/h2/engine/Session.endStatement:()V
       7: aload_0
       8: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      11: aconst_null
      12: iconst_0
      13: invokestatic  #20                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      16: invokevirtual #21                 // Method org/h2/engine/Session.setCurrentCommand:(Lorg/h2/command/Command;Ljava/lang/Object;)V
      19: aload_0
      20: invokevirtual #22                 // Method isTransactional:()Z
      23: ifne          37
      26: aload_0
      27: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      30: iconst_1
      31: invokevirtual #23                 // Method org/h2/engine/Session.commit:(Z)V
      34: goto          98
      37: aload_0
      38: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      41: invokevirtual #24                 // Method org/h2/engine/Session.getAutoCommit:()Z
      44: ifeq          58
      47: aload_0
      48: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      51: iconst_0
      52: invokevirtual #23                 // Method org/h2/engine/Session.commit:(Z)V
      55: goto          98
      58: aload_0
      59: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      62: invokevirtual #5                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      65: invokevirtual #25                 // Method org/h2/engine/Database.isMultiThreaded:()Z
      68: ifeq          98
      71: aload_0
      72: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      75: invokevirtual #5                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      78: astore_1
      79: aload_1
      80: ifnull        98
      83: aload_1
      84: invokevirtual #26                 // Method org/h2/engine/Database.getLockMode:()I
      87: iconst_3
      88: if_icmpne     98
      91: aload_0
      92: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      95: invokevirtual #27                 // Method org/h2/engine/Session.unlockReadLocks:()V
      98: aload_0
      99: getfield      #7                  // Field trace:Lorg/h2/message/Trace;
     102: invokevirtual #12                 // Method org/h2/message/Trace.isInfoEnabled:()Z
     105: ifeq          162
     108: aload_0
     109: getfield      #15                 // Field startTimeNanos:J
     112: lconst_0
     113: lcmp
     114: ifle          162
     117: invokestatic  #14                 // Method java/lang/System.nanoTime:()J
     120: aload_0
     121: getfield      #15                 // Field startTimeNanos:J
     124: lsub
     125: ldc2_w        #28                 // long 1000l
     128: ldiv
     129: ldc2_w        #28                 // long 1000l
     132: ldiv
     133: lstore_1
     134: lload_1
     135: ldc2_w        #30                 // long 100l
     138: lcmp
     139: ifle          162
     142: aload_0
     143: getfield      #7                  // Field trace:Lorg/h2/message/Trace;
     146: ldc           #32                 // String slow query: {0} ms
     148: iconst_1
     149: anewarray     #33                 // class java/lang/Object
     152: dup
     153: iconst_0
     154: lload_1
     155: invokestatic  #34                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     158: aastore
     159: invokevirtual #35                 // Method org/h2/message/Trace.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     162: return

  public org.h2.result.ResultInterface executeQuery(int, boolean);
    Code:
       0: aload_0
       1: lconst_0
       2: putfield      #15                 // Field startTimeNanos:J
       5: lconst_0
       6: lstore_3
       7: aload_0
       8: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      11: invokevirtual #5                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      14: astore        5
      16: aload         5
      18: invokevirtual #25                 // Method org/h2/engine/Database.isMultiThreaded:()Z
      21: ifeq          31
      24: aload_0
      25: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      28: goto          33
      31: aload         5
      33: astore        6
      35: aload_0
      36: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      39: invokevirtual #36                 // Method org/h2/engine/Session.waitIfExclusiveModeEnabled:()V
      42: iconst_1
      43: istore        7
      45: aload_0
      46: invokevirtual #37                 // Method isReadOnly:()Z
      49: ifne          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: istore        8
      59: iload         8
      61: ifeq          75
      64: aload         5
      66: invokevirtual #38                 // Method org/h2/engine/Database.beforeWriting:()Z
      69: ifne          75
      72: goto          64
      75: aload         6
      77: dup
      78: astore        9
      80: monitorenter
      81: aload_0
      82: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      85: aload_0
      86: iconst_0
      87: invokestatic  #20                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      90: invokevirtual #21                 // Method org/h2/engine/Session.setCurrentCommand:(Lorg/h2/command/Command;Ljava/lang/Object;)V
      93: aload         5
      95: invokevirtual #39                 // Method org/h2/engine/Database.checkPowerOff:()V
      98: aload_0
      99: iload_1
     100: invokevirtual #40                 // Method query:(I)Lorg/h2/result/ResultInterface;
     103: astore        10
     105: aload         10
     107: invokeinterface #41,  1           // InterfaceMethod org/h2/result/ResultInterface.isLazy:()Z
     112: ifne          119
     115: iconst_1
     116: goto          120
     119: iconst_0
     120: istore        7
     122: aload         10
     124: astore        11
     126: iload         7
     128: ifeq          135
     131: aload_0
     132: invokevirtual #42                 // Method stop:()V
     135: iload         8
     137: ifeq          145
     140: aload         5
     142: invokevirtual #43                 // Method org/h2/engine/Database.afterWriting:()V
     145: aload         9
     147: monitorexit
     148: aload         11
     150: areturn
     151: astore        10
     153: aload_0
     154: aload         10
     156: lload_3
     157: invokespecial #45                 // Method filterConcurrentUpdate:(Lorg/h2/message/DbException;J)J
     160: lstore_3
     161: goto          93
     164: astore        10
     166: iconst_0
     167: istore        7
     169: aload         5
     171: invokevirtual #47                 // Method org/h2/engine/Database.shutdownImmediately:()V
     174: aload         10
     176: invokestatic  #48                 // Method org/h2/message/DbException.convert:(Ljava/lang/Throwable;)Lorg/h2/message/DbException;
     179: athrow
     180: astore        10
     182: aload         10
     184: invokestatic  #48                 // Method org/h2/message/DbException.convert:(Ljava/lang/Throwable;)Lorg/h2/message/DbException;
     187: athrow
     188: astore        10
     190: aload         10
     192: aload_0
     193: getfield      #4                  // Field sql:Ljava/lang/String;
     196: invokevirtual #50                 // Method org/h2/message/DbException.addSQL:(Ljava/lang/String;)Lorg/h2/message/DbException;
     199: astore        10
     201: aload         10
     203: invokevirtual #51                 // Method org/h2/message/DbException.getSQLException:()Ljava/sql/SQLException;
     206: astore        11
     208: aload         5
     210: aload         11
     212: aload_0
     213: getfield      #4                  // Field sql:Ljava/lang/String;
     216: invokevirtual #52                 // Method org/h2/engine/Database.exceptionThrown:(Ljava/sql/SQLException;Ljava/lang/String;)V
     219: aload         11
     221: invokevirtual #53                 // Method java/sql/SQLException.getErrorCode:()I
     224: ldc           #54                 // int 90108
     226: if_icmpne     240
     229: iconst_0
     230: istore        7
     232: aload         5
     234: invokevirtual #47                 // Method org/h2/engine/Database.shutdownImmediately:()V
     237: aload         10
     239: athrow
     240: aload         5
     242: invokevirtual #39                 // Method org/h2/engine/Database.checkPowerOff:()V
     245: aload         10
     247: athrow
     248: astore        12
     250: iload         7
     252: ifeq          259
     255: aload_0
     256: invokevirtual #42                 // Method stop:()V
     259: iload         8
     261: ifeq          269
     264: aload         5
     266: invokevirtual #43                 // Method org/h2/engine/Database.afterWriting:()V
     269: aload         12
     271: athrow
     272: astore        13
     274: aload         9
     276: monitorexit
     277: aload         13
     279: athrow
    Exception table:
       from    to  target type
          98   126   151   Class org/h2/message/DbException
          98   126   164   Class java/lang/OutOfMemoryError
          98   126   180   Class java/lang/Throwable
          93   126   188   Class org/h2/message/DbException
         151   188   188   Class org/h2/message/DbException
          93   126   248   any
         151   250   248   any
          81   148   272   any
         151   277   272   any

  public org.h2.result.ResultWithGeneratedKeys executeUpdate(java.lang.Object);
    Code:
       0: lconst_0
       1: lstore_2
       2: aload_0
       3: getfield      #3                  // Field session:Lorg/h2/engine/Session;
       6: invokevirtual #5                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
       9: astore        4
      11: aload         4
      13: invokevirtual #25                 // Method org/h2/engine/Database.isMultiThreaded:()Z
      16: ifeq          26
      19: aload_0
      20: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      23: goto          28
      26: aload         4
      28: astore        5
      30: aload_0
      31: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      34: invokevirtual #36                 // Method org/h2/engine/Session.waitIfExclusiveModeEnabled:()V
      37: iconst_1
      38: istore        6
      40: aload_0
      41: invokevirtual #37                 // Method isReadOnly:()Z
      44: ifne          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: istore        7
      54: iload         7
      56: ifeq          70
      59: aload         4
      61: invokevirtual #38                 // Method org/h2/engine/Database.beforeWriting:()Z
      64: ifne          70
      67: goto          59
      70: aload         5
      72: dup
      73: astore        8
      75: monitorenter
      76: aload_0
      77: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      80: invokevirtual #55                 // Method org/h2/engine/Session.setSavepoint:()Lorg/h2/engine/Session$Savepoint;
      83: astore        9
      85: aload_0
      86: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      89: aload_0
      90: aload_1
      91: invokevirtual #21                 // Method org/h2/engine/Session.setCurrentCommand:(Lorg/h2/command/Command;Ljava/lang/Object;)V
      94: aload         4
      96: invokevirtual #39                 // Method org/h2/engine/Database.checkPowerOff:()V
      99: aload_0
     100: invokevirtual #56                 // Method update:()I
     103: istore        10
     105: getstatic     #57                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     108: aload_1
     109: invokevirtual #58                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     112: ifne          183
     115: new           #59                 // class org/h2/result/ResultWithGeneratedKeys$WithKeys
     118: dup
     119: iload         10
     121: aload_0
     122: getfield      #3                  // Field session:Lorg/h2/engine/Session;
     125: invokevirtual #60                 // Method org/h2/engine/Session.getGeneratedKeys:()Lorg/h2/engine/GeneratedKeys;
     128: aload_0
     129: getfield      #3                  // Field session:Lorg/h2/engine/Session;
     132: invokevirtual #61                 // Method org/h2/engine/GeneratedKeys.getKeys:(Lorg/h2/engine/Session;)Lorg/h2/result/LocalResult;
     135: invokespecial #62                 // Method org/h2/result/ResultWithGeneratedKeys$WithKeys."<init>":(ILorg/h2/result/ResultInterface;)V
     138: astore        11
     140: iload         6
     142: ifeq          149
     145: aload_0
     146: invokevirtual #42                 // Method stop:()V
     149: iload         7
     151: ifeq          177
     154: aload         4
     156: invokevirtual #43                 // Method org/h2/engine/Database.afterWriting:()V
     159: goto          177
     162: astore        12
     164: iload         7
     166: ifeq          174
     169: aload         4
     171: invokevirtual #43                 // Method org/h2/engine/Database.afterWriting:()V
     174: aload         12
     176: athrow
     177: aload         8
     179: monitorexit
     180: aload         11
     182: areturn
     183: iload         10
     185: invokestatic  #63                 // Method org/h2/result/ResultWithGeneratedKeys.of:(I)Lorg/h2/result/ResultWithGeneratedKeys;
     188: astore        11
     190: iload         6
     192: ifeq          199
     195: aload_0
     196: invokevirtual #42                 // Method stop:()V
     199: iload         7
     201: ifeq          227
     204: aload         4
     206: invokevirtual #43                 // Method org/h2/engine/Database.afterWriting:()V
     209: goto          227
     212: astore        13
     214: iload         7
     216: ifeq          224
     219: aload         4
     221: invokevirtual #43                 // Method org/h2/engine/Database.afterWriting:()V
     224: aload         13
     226: athrow
     227: aload         8
     229: monitorexit
     230: aload         11
     232: areturn
     233: astore        10
     235: aload_0
     236: aload         10
     238: lload_2
     239: invokespecial #45                 // Method filterConcurrentUpdate:(Lorg/h2/message/DbException;J)J
     242: lstore_2
     243: goto          94
     246: astore        10
     248: iconst_0
     249: istore        6
     251: aload         4
     253: invokevirtual #47                 // Method org/h2/engine/Database.shutdownImmediately:()V
     256: aload         10
     258: invokestatic  #48                 // Method org/h2/message/DbException.convert:(Ljava/lang/Throwable;)Lorg/h2/message/DbException;
     261: athrow
     262: astore        10
     264: aload         10
     266: invokestatic  #48                 // Method org/h2/message/DbException.convert:(Ljava/lang/Throwable;)Lorg/h2/message/DbException;
     269: athrow
     270: astore        10
     272: aload         10
     274: aload_0
     275: getfield      #4                  // Field sql:Ljava/lang/String;
     278: invokevirtual #50                 // Method org/h2/message/DbException.addSQL:(Ljava/lang/String;)Lorg/h2/message/DbException;
     281: astore        10
     283: aload         10
     285: invokevirtual #51                 // Method org/h2/message/DbException.getSQLException:()Ljava/sql/SQLException;
     288: astore        11
     290: aload         4
     292: aload         11
     294: aload_0
     295: getfield      #4                  // Field sql:Ljava/lang/String;
     298: invokevirtual #52                 // Method org/h2/engine/Database.exceptionThrown:(Ljava/sql/SQLException;Ljava/lang/String;)V
     301: aload         11
     303: invokevirtual #53                 // Method java/sql/SQLException.getErrorCode:()I
     306: ldc           #54                 // int 90108
     308: if_icmpne     322
     311: iconst_0
     312: istore        6
     314: aload         4
     316: invokevirtual #47                 // Method org/h2/engine/Database.shutdownImmediately:()V
     319: aload         10
     321: athrow
     322: aload         4
     324: invokevirtual #39                 // Method org/h2/engine/Database.checkPowerOff:()V
     327: aload         11
     329: invokevirtual #53                 // Method java/sql/SQLException.getErrorCode:()I
     332: ldc           #64                 // int 40001
     334: if_icmpne     347
     337: aload_0
     338: getfield      #3                  // Field session:Lorg/h2/engine/Session;
     341: invokevirtual #65                 // Method org/h2/engine/Session.rollback:()V
     344: goto          357
     347: aload_0
     348: getfield      #3                  // Field session:Lorg/h2/engine/Session;
     351: aload         9
     353: iconst_0
     354: invokevirtual #66                 // Method org/h2/engine/Session.rollbackTo:(Lorg/h2/engine/Session$Savepoint;Z)V
     357: aload         10
     359: athrow
     360: astore        14
     362: iload         6
     364: ifeq          371
     367: aload_0
     368: invokevirtual #42                 // Method stop:()V
     371: iload         7
     373: ifeq          399
     376: aload         4
     378: invokevirtual #43                 // Method org/h2/engine/Database.afterWriting:()V
     381: goto          399
     384: astore        15
     386: iload         7
     388: ifeq          396
     391: aload         4
     393: invokevirtual #43                 // Method org/h2/engine/Database.afterWriting:()V
     396: aload         15
     398: athrow
     399: aload         14
     401: athrow
     402: astore        16
     404: aload         8
     406: monitorexit
     407: aload         16
     409: athrow
    Exception table:
       from    to  target type
         140   149   162   any
         162   164   162   any
         190   199   212   any
         212   214   212   any
          99   140   233   Class org/h2/message/DbException
         183   190   233   Class org/h2/message/DbException
          99   140   246   Class java/lang/OutOfMemoryError
         183   190   246   Class java/lang/OutOfMemoryError
          99   140   262   Class java/lang/Throwable
         183   190   262   Class java/lang/Throwable
          94   140   270   Class org/h2/message/DbException
         183   190   270   Class org/h2/message/DbException
         233   270   270   Class org/h2/message/DbException
          94   140   360   any
         183   190   360   any
         362   371   384   any
         384   386   384   any
         233   362   360   any
          76   180   402   any
         183   230   402   any
         233   407   402   any

  private long filterConcurrentUpdate(org.h2.message.DbException, long);
    Code:
       0: aload_1
       1: invokevirtual #67                 // Method org/h2/message/DbException.getErrorCode:()I
       4: istore        4
       6: iload         4
       8: ldc           #68                 // int 90131
      10: if_icmpeq     29
      13: iload         4
      15: ldc           #69                 // int 90143
      17: if_icmpeq     29
      20: iload         4
      22: ldc           #70                 // int 90112
      24: if_icmpeq     29
      27: aload_1
      28: athrow
      29: invokestatic  #14                 // Method java/lang/System.nanoTime:()J
      32: ldc2_w        #71                 // long 1000000l
      35: ldiv
      36: lstore        5
      38: lload_2
      39: lconst_0
      40: lcmp
      41: ifeq          79
      44: lload         5
      46: lload_2
      47: lsub
      48: aload_0
      49: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      52: invokevirtual #73                 // Method org/h2/engine/Session.getLockTimeout:()I
      55: i2l
      56: lcmp
      57: ifle          79
      60: ldc           #74                 // int 50200
      62: aload_1
      63: invokevirtual #75                 // Method org/h2/message/DbException.getCause:()Ljava/lang/Throwable;
      66: iconst_1
      67: anewarray     #76                 // class java/lang/String
      70: dup
      71: iconst_0
      72: ldc           #77                 // String
      74: aastore
      75: invokestatic  #78                 // Method org/h2/message/DbException.get:(ILjava/lang/Throwable;[Ljava/lang/String;)Lorg/h2/message/DbException;
      78: athrow
      79: aload_0
      80: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      83: invokevirtual #5                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      86: astore        7
      88: iconst_1
      89: bipush        10
      91: invokestatic  #79                 // Method org/h2/util/MathUtils.randomInt:(I)I
      94: iadd
      95: istore        8
      97: aload         7
      99: invokevirtual #25                 // Method org/h2/engine/Database.isMultiThreaded:()Z
     102: ifeq          114
     105: iload         8
     107: i2l
     108: invokestatic  #80                 // Method java/lang/Thread.sleep:(J)V
     111: goto          122
     114: aload         7
     116: iload         8
     118: i2l
     119: invokevirtual #81                 // Method java/lang/Object.wait:(J)V
     122: goto          127
     125: astore        9
     127: invokestatic  #14                 // Method java/lang/System.nanoTime:()J
     130: ldc2_w        #71                 // long 1000000l
     133: ldiv
     134: lload         5
     136: lsub
     137: lstore        9
     139: lload         9
     141: iload         8
     143: i2l
     144: lcmp
     145: iflt          151
     148: goto          154
     151: goto          97
     154: lload_2
     155: lconst_0
     156: lcmp
     157: ifne          165
     160: lload         5
     162: goto          166
     165: lload_2
     166: lreturn
    Exception table:
       from    to  target type
          97   122   125   Class java/lang/InterruptedException

  public void close();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #83                 // Field canReuse:Z
       5: return

  public void cancel();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #17                 // Field cancel:Z
       5: return

  public java.lang.String toString();
    Code:
       0: new           #84                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #85                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #4                  // Field sql:Ljava/lang/String;
      11: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: invokevirtual #87                 // Method getParameters:()Ljava/util/ArrayList;
      18: invokestatic  #88                 // Method org/h2/message/Trace.formatParams:(Ljava/util/ArrayList;)Ljava/lang/String;
      21: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public boolean isCacheable();
    Code:
       0: iconst_0
       1: ireturn

  public boolean canReuse();
    Code:
       0: aload_0
       1: getfield      #83                 // Field canReuse:Z
       4: ireturn

  public void reuse();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #83                 // Field canReuse:Z
       5: aload_0
       6: invokevirtual #87                 // Method getParameters:()Ljava/util/ArrayList;
       9: astore_1
      10: aload_1
      11: invokevirtual #90                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #91,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          45
      24: aload_2
      25: invokeinterface #92,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #93                 // class org/h2/expression/ParameterInterface
      33: astore_3
      34: aload_3
      35: aconst_null
      36: iconst_1
      37: invokeinterface #94,  3           // InterfaceMethod org/h2/expression/ParameterInterface.setValue:(Lorg/h2/value/Value;Z)V
      42: goto          15
      45: return

  public void setCanReuse(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #83                 // Field canReuse:Z
       5: return
}
