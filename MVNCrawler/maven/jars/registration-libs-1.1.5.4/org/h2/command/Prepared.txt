Compiled from "Prepared.java"
public abstract class org.h2.command.Prepared {
  protected org.h2.engine.Session session;

  protected java.lang.String sqlStatement;

  protected boolean create;

  protected java.util.ArrayList<org.h2.expression.Parameter> parameters;

  protected boolean prepareAlways;

  private long modificationMetaId;

  private org.h2.command.Command command;

  private int objectId;

  private int currentRowNumber;

  private int rowScanCount;

  private java.util.List<org.h2.table.TableView> cteCleanups;

  public org.h2.command.Prepared(org.h2.engine.Session);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field create:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field session:Lorg/h2/engine/Session;
      14: aload_0
      15: aload_1
      16: invokevirtual #4                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      19: invokevirtual #5                  // Method org/h2/engine/Database.getModificationMetaId:()J
      22: putfield      #6                  // Field modificationMetaId:J
      25: return

  public abstract boolean isTransactional();

  public abstract org.h2.result.ResultInterface queryMeta();

  public abstract int getType();

  public boolean isReadOnly();
    Code:
       0: iconst_0
       1: ireturn

  public boolean needRecompile();
    Code:
       0: aload_0
       1: getfield      #3                  // Field session:Lorg/h2/engine/Session;
       4: invokevirtual #4                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
       7: astore_1
       8: aload_1
       9: ifnonnull     20
      12: ldc           #7                  // int 90067
      14: ldc           #8                  // String database closed
      16: invokestatic  #9                  // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      19: athrow
      20: aload_0
      21: getfield      #10                 // Field prepareAlways:Z
      24: ifne          49
      27: aload_0
      28: getfield      #6                  // Field modificationMetaId:J
      31: aload_1
      32: invokevirtual #5                  // Method org/h2/engine/Database.getModificationMetaId:()J
      35: lcmp
      36: iflt          49
      39: aload_1
      40: invokevirtual #11                 // Method org/h2/engine/Database.getSettings:()Lorg/h2/engine/DbSettings;
      43: getfield      #12                 // Field org/h2/engine/DbSettings.recompileAlways:Z
      46: ifeq          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ireturn

  long getModificationMetaId();
    Code:
       0: aload_0
       1: getfield      #6                  // Field modificationMetaId:J
       4: lreturn

  void setModificationMetaId(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #6                  // Field modificationMetaId:J
       5: return

  public void setParameterList(java.util.ArrayList<org.h2.expression.Parameter>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field parameters:Ljava/util/ArrayList;
       5: return

  public java.util.ArrayList<org.h2.expression.Parameter> getParameters();
    Code:
       0: aload_0
       1: getfield      #13                 // Field parameters:Ljava/util/ArrayList;
       4: areturn

  protected void checkParameters();
    Code:
       0: aload_0
       1: getfield      #13                 // Field parameters:Ljava/util/ArrayList;
       4: ifnull        41
       7: aload_0
       8: getfield      #13                 // Field parameters:Ljava/util/ArrayList;
      11: invokevirtual #14                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          41
      24: aload_1
      25: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #17                 // class org/h2/expression/Parameter
      33: astore_2
      34: aload_2
      35: invokevirtual #18                 // Method org/h2/expression/Parameter.checkSet:()V
      38: goto          15
      41: return

  public void setCommand(org.h2.command.Command);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field command:Lorg/h2/command/Command;
       5: return

  public boolean isQuery();
    Code:
       0: iconst_0
       1: ireturn

  public void prepare();
    Code:
       0: return

  public int update();
    Code:
       0: ldc           #20                 // int 90001
       2: invokestatic  #21                 // Method org/h2/message/DbException.get:(I)Lorg/h2/message/DbException;
       5: athrow

  public org.h2.result.ResultInterface query(int);
    Code:
       0: ldc           #22                 // int 90002
       2: invokestatic  #21                 // Method org/h2/message/DbException.get:(I)Lorg/h2/message/DbException;
       5: athrow

  public void setSQL(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field sqlStatement:Ljava/lang/String;
       5: return

  public java.lang.String getSQL();
    Code:
       0: aload_0
       1: getfield      #23                 // Field sqlStatement:Ljava/lang/String;
       4: areturn

  protected int getCurrentObjectId();
    Code:
       0: aload_0
       1: getfield      #24                 // Field objectId:I
       4: ireturn

  protected int getObjectId();
    Code:
       0: aload_0
       1: getfield      #24                 // Field objectId:I
       4: istore_1
       5: iload_1
       6: ifne          23
       9: aload_0
      10: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      13: invokevirtual #4                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      16: invokevirtual #25                 // Method org/h2/engine/Database.allocateObjectId:()I
      19: istore_1
      20: goto          28
      23: aload_0
      24: iconst_0
      25: putfield      #24                 // Field objectId:I
      28: iload_1
      29: ireturn

  public java.lang.String getPlanSQL();
    Code:
       0: aconst_null
       1: areturn

  public void checkCanceled();
    Code:
       0: aload_0
       1: getfield      #3                  // Field session:Lorg/h2/engine/Session;
       4: invokevirtual #26                 // Method org/h2/engine/Session.checkCanceled:()V
       7: aload_0
       8: getfield      #19                 // Field command:Lorg/h2/command/Command;
      11: ifnull        21
      14: aload_0
      15: getfield      #19                 // Field command:Lorg/h2/command/Command;
      18: goto          28
      21: aload_0
      22: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      25: invokevirtual #27                 // Method org/h2/engine/Session.getCurrentCommand:()Lorg/h2/command/Command;
      28: astore_1
      29: aload_1
      30: ifnull        37
      33: aload_1
      34: invokevirtual #28                 // Method org/h2/command/Command.checkCanceled:()V
      37: return

  public void setObjectId(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #24                 // Field objectId:I
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field create:Z
      10: return

  public void setSession(org.h2.engine.Session);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field session:Lorg/h2/engine/Session;
       5: return

  void trace(long, int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field session:Lorg/h2/engine/Session;
       4: invokevirtual #29                 // Method org/h2/engine/Session.getTrace:()Lorg/h2/message/Trace;
       7: invokevirtual #30                 // Method org/h2/message/Trace.isInfoEnabled:()Z
      10: ifeq          62
      13: lload_1
      14: lconst_0
      15: lcmp
      16: ifle          62
      19: invokestatic  #31                 // Method java/lang/System.nanoTime:()J
      22: lload_1
      23: lsub
      24: lstore        4
      26: aload_0
      27: getfield      #13                 // Field parameters:Ljava/util/ArrayList;
      30: invokestatic  #32                 // Method org/h2/message/Trace.formatParams:(Ljava/util/ArrayList;)Ljava/lang/String;
      33: astore        6
      35: aload_0
      36: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      39: invokevirtual #29                 // Method org/h2/engine/Session.getTrace:()Lorg/h2/message/Trace;
      42: aload_0
      43: getfield      #23                 // Field sqlStatement:Ljava/lang/String;
      46: aload         6
      48: iload_3
      49: lload         4
      51: ldc2_w        #33                 // long 1000l
      54: ldiv
      55: ldc2_w        #33                 // long 1000l
      58: ldiv
      59: invokevirtual #35                 // Method org/h2/message/Trace.infoSQL:(Ljava/lang/String;Ljava/lang/String;IJ)V
      62: aload_0
      63: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      66: invokevirtual #4                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      69: invokevirtual #36                 // Method org/h2/engine/Database.getQueryStatistics:()Z
      72: ifeq          108
      75: lload_1
      76: lconst_0
      77: lcmp
      78: ifeq          108
      81: invokestatic  #31                 // Method java/lang/System.nanoTime:()J
      84: lload_1
      85: lsub
      86: lstore        4
      88: aload_0
      89: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      92: invokevirtual #4                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      95: invokevirtual #37                 // Method org/h2/engine/Database.getQueryStatisticsData:()Lorg/h2/engine/QueryStatisticsData;
      98: aload_0
      99: invokevirtual #38                 // Method toString:()Ljava/lang/String;
     102: lload         4
     104: iload_3
     105: invokevirtual #39                 // Method org/h2/engine/QueryStatisticsData.update:(Ljava/lang/String;JI)V
     108: return

  public void setPrepareAlways(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field prepareAlways:Z
       5: return

  protected void setCurrentRowNumber(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #40                 // Field rowScanCount:I
       5: iconst_1
       6: iadd
       7: dup_x1
       8: putfield      #40                 // Field rowScanCount:I
      11: bipush        127
      13: iand
      14: ifne          21
      17: aload_0
      18: invokevirtual #41                 // Method checkCanceled:()V
      21: aload_0
      22: iload_1
      23: putfield      #42                 // Field currentRowNumber:I
      26: aload_0
      27: invokespecial #43                 // Method setProgress:()V
      30: return

  public int getCurrentRowNumber();
    Code:
       0: aload_0
       1: getfield      #42                 // Field currentRowNumber:I
       4: ireturn

  private void setProgress();
    Code:
       0: aload_0
       1: getfield      #42                 // Field currentRowNumber:I
       4: bipush        127
       6: iand
       7: ifne          31
      10: aload_0
      11: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      14: invokevirtual #4                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      17: bipush        7
      19: aload_0
      20: getfield      #23                 // Field sqlStatement:Ljava/lang/String;
      23: aload_0
      24: getfield      #42                 // Field currentRowNumber:I
      27: iconst_0
      28: invokevirtual #44                 // Method org/h2/engine/Database.setProgress:(ILjava/lang/String;II)V
      31: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #23                 // Field sqlStatement:Ljava/lang/String;
       4: areturn

  protected static java.lang.String getSQL(org.h2.value.Value[]);
    Code:
       0: new           #45                 // class org/h2/util/StatementBuilder
       3: dup
       4: invokespecial #46                 // Method org/h2/util/StatementBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: astore_2
      10: aload_2
      11: arraylength
      12: istore_3
      13: iconst_0
      14: istore        4
      16: iload         4
      18: iload_3
      19: if_icmpge     55
      22: aload_2
      23: iload         4
      25: aaload
      26: astore        5
      28: aload_1
      29: ldc           #47                 // String ,
      31: invokevirtual #48                 // Method org/h2/util/StatementBuilder.appendExceptFirst:(Ljava/lang/String;)V
      34: aload         5
      36: ifnull        49
      39: aload_1
      40: aload         5
      42: invokevirtual #49                 // Method org/h2/value/Value.getSQL:()Ljava/lang/String;
      45: invokevirtual #50                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      48: pop
      49: iinc          4, 1
      52: goto          16
      55: aload_1
      56: invokevirtual #51                 // Method org/h2/util/StatementBuilder.toString:()Ljava/lang/String;
      59: areturn

  protected static java.lang.String getSQL(org.h2.expression.Expression[]);
    Code:
       0: new           #45                 // class org/h2/util/StatementBuilder
       3: dup
       4: invokespecial #46                 // Method org/h2/util/StatementBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: astore_2
      10: aload_2
      11: arraylength
      12: istore_3
      13: iconst_0
      14: istore        4
      16: iload         4
      18: iload_3
      19: if_icmpge     55
      22: aload_2
      23: iload         4
      25: aaload
      26: astore        5
      28: aload_1
      29: ldc           #47                 // String ,
      31: invokevirtual #48                 // Method org/h2/util/StatementBuilder.appendExceptFirst:(Ljava/lang/String;)V
      34: aload         5
      36: ifnull        49
      39: aload_1
      40: aload         5
      42: invokevirtual #52                 // Method org/h2/expression/Expression.getSQL:()Ljava/lang/String;
      45: invokevirtual #50                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      48: pop
      49: iinc          4, 1
      52: goto          16
      55: aload_1
      56: invokevirtual #51                 // Method org/h2/util/StatementBuilder.toString:()Ljava/lang/String;
      59: areturn

  protected org.h2.message.DbException setRow(org.h2.message.DbException, int, java.lang.String);
    Code:
       0: new           #53                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
       7: astore        4
       9: aload_0
      10: getfield      #23                 // Field sqlStatement:Ljava/lang/String;
      13: ifnull        26
      16: aload         4
      18: aload_0
      19: getfield      #23                 // Field sqlStatement:Ljava/lang/String;
      22: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: pop
      26: aload         4
      28: ldc           #56                 // String  --
      30: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: pop
      34: iload_2
      35: ifle          57
      38: aload         4
      40: ldc           #57                 // String row #
      42: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: iload_2
      46: iconst_1
      47: iadd
      48: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      51: bipush        32
      53: invokevirtual #59                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      56: pop
      57: aload         4
      59: bipush        40
      61: invokevirtual #59                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      64: aload_3
      65: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: bipush        41
      70: invokevirtual #59                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      73: pop
      74: aload_1
      75: aload         4
      77: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: invokevirtual #61                 // Method org/h2/message/DbException.addSQL:(Ljava/lang/String;)Lorg/h2/message/DbException;
      83: areturn

  public boolean isCacheable();
    Code:
       0: iconst_0
       1: ireturn

  public java.util.List<org.h2.table.TableView> getCteCleanups();
    Code:
       0: aload_0
       1: getfield      #62                 // Field cteCleanups:Ljava/util/List;
       4: areturn

  public void setCteCleanups(java.util.List<org.h2.table.TableView>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #62                 // Field cteCleanups:Ljava/util/List;
       5: return

  public org.h2.engine.Session getSession();
    Code:
       0: aload_0
       1: getfield      #3                  // Field session:Lorg/h2/engine/Session;
       4: areturn
}
