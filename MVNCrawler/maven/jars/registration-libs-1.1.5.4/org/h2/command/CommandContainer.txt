Compiled from "CommandContainer.java"
public class org.h2.command.CommandContainer extends org.h2.command.Command {
  private org.h2.command.Prepared prepared;

  private boolean readOnlyKnown;

  private boolean readOnly;

  org.h2.command.CommandContainer(org.h2.command.Parser, java.lang.String, org.h2.command.Prepared);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/h2/command/Command."<init>":(Lorg/h2/command/Parser;Ljava/lang/String;)V
       6: aload_3
       7: aload_0
       8: invokevirtual #2                  // Method org/h2/command/Prepared.setCommand:(Lorg/h2/command/Command;)V
      11: aload_0
      12: aload_3
      13: putfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
      16: return

  public java.util.ArrayList<? extends org.h2.expression.ParameterInterface> getParameters();
    Code:
       0: aload_0
       1: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
       4: invokevirtual #4                  // Method org/h2/command/Prepared.getParameters:()Ljava/util/ArrayList;
       7: areturn

  public boolean isTransactional();
    Code:
       0: aload_0
       1: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
       4: invokevirtual #5                  // Method org/h2/command/Prepared.isTransactional:()Z
       7: ireturn

  public boolean isQuery();
    Code:
       0: aload_0
       1: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
       4: invokevirtual #6                  // Method org/h2/command/Prepared.isQuery:()Z
       7: ireturn

  public void prepareJoinBatch();
    Code:
       0: aload_0
       1: getfield      #7                  // Field session:Lorg/h2/engine/Session;
       4: invokevirtual #8                  // Method org/h2/engine/Session.isJoinBatchEnabled:()Z
       7: ifeq          17
      10: aload_0
      11: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
      14: invokestatic  #9                  // Method prepareJoinBatch:(Lorg/h2/command/Prepared;)V
      17: return

  private static void prepareJoinBatch(org.h2.command.Prepared);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method org/h2/command/Prepared.isQuery:()Z
       4: ifeq          50
       7: aload_0
       8: invokevirtual #10                 // Method org/h2/command/Prepared.getType:()I
      11: istore_1
      12: iload_1
      13: bipush        66
      15: if_icmpne     28
      18: aload_0
      19: checkcast     #11                 // class org/h2/command/dml/Query
      22: invokevirtual #12                 // Method org/h2/command/dml/Query.prepareJoinBatch:()V
      25: goto          50
      28: iload_1
      29: bipush        60
      31: if_icmpeq     40
      34: iload_1
      35: bipush        86
      37: if_icmpne     50
      40: aload_0
      41: checkcast     #13                 // class org/h2/command/dml/Explain
      44: invokevirtual #14                 // Method org/h2/command/dml/Explain.getCommand:()Lorg/h2/command/Prepared;
      47: invokestatic  #9                  // Method prepareJoinBatch:(Lorg/h2/command/Prepared;)V
      50: return

  private void recompileIfRequired();
    Code:
       0: aload_0
       1: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
       4: invokevirtual #15                 // Method org/h2/command/Prepared.needRecompile:()Z
       7: ifeq          173
      10: aload_0
      11: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
      14: lconst_0
      15: invokevirtual #16                 // Method org/h2/command/Prepared.setModificationMetaId:(J)V
      18: aload_0
      19: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
      22: invokevirtual #17                 // Method org/h2/command/Prepared.getSQL:()Ljava/lang/String;
      25: astore_1
      26: aload_0
      27: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
      30: invokevirtual #4                  // Method org/h2/command/Prepared.getParameters:()Ljava/util/ArrayList;
      33: astore_2
      34: new           #18                 // class org/h2/command/Parser
      37: dup
      38: aload_0
      39: getfield      #7                  // Field session:Lorg/h2/engine/Session;
      42: invokespecial #19                 // Method org/h2/command/Parser."<init>":(Lorg/h2/engine/Session;)V
      45: astore_3
      46: aload_0
      47: aload_3
      48: aload_1
      49: invokevirtual #20                 // Method org/h2/command/Parser.parse:(Ljava/lang/String;)Lorg/h2/command/Prepared;
      52: putfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
      55: aload_0
      56: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
      59: invokevirtual #21                 // Method org/h2/command/Prepared.getModificationMetaId:()J
      62: lstore        4
      64: aload_0
      65: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
      68: lconst_0
      69: invokevirtual #16                 // Method org/h2/command/Prepared.setModificationMetaId:(J)V
      72: aload_0
      73: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
      76: invokevirtual #4                  // Method org/h2/command/Prepared.getParameters:()Ljava/util/ArrayList;
      79: astore        6
      81: iconst_0
      82: istore        7
      84: aload         6
      86: invokevirtual #22                 // Method java/util/ArrayList.size:()I
      89: istore        8
      91: iload         7
      93: iload         8
      95: if_icmpge     153
      98: aload_2
      99: iload         7
     101: invokevirtual #23                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
     104: checkcast     #24                 // class org/h2/expression/Parameter
     107: astore        9
     109: aload         9
     111: invokevirtual #25                 // Method org/h2/expression/Parameter.isValueSet:()Z
     114: ifeq          147
     117: aload         9
     119: aload_0
     120: getfield      #7                  // Field session:Lorg/h2/engine/Session;
     123: invokevirtual #26                 // Method org/h2/expression/Parameter.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
     126: astore        10
     128: aload         6
     130: iload         7
     132: invokevirtual #23                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
     135: checkcast     #24                 // class org/h2/expression/Parameter
     138: astore        11
     140: aload         11
     142: aload         10
     144: invokevirtual #27                 // Method org/h2/expression/Parameter.setValue:(Lorg/h2/value/Value;)V
     147: iinc          7, 1
     150: goto          91
     153: aload_0
     154: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
     157: invokevirtual #28                 // Method org/h2/command/Prepared.prepare:()V
     160: aload_0
     161: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
     164: lload         4
     166: invokevirtual #16                 // Method org/h2/command/Prepared.setModificationMetaId:(J)V
     169: aload_0
     170: invokevirtual #29                 // Method prepareJoinBatch:()V
     173: return

  public int update();
    Code:
       0: aload_0
       1: invokespecial #30                 // Method recompileIfRequired:()V
       4: aload_0
       5: iconst_5
       6: invokevirtual #31                 // Method setProgress:(I)V
       9: aload_0
      10: invokevirtual #32                 // Method start:()V
      13: aload_0
      14: getfield      #7                  // Field session:Lorg/h2/engine/Session;
      17: getstatic     #33                 // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
      20: invokevirtual #34                 // Method org/h2/engine/Session.setLastScopeIdentity:(Lorg/h2/value/Value;)V
      23: aload_0
      24: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
      27: invokevirtual #35                 // Method org/h2/command/Prepared.checkParameters:()V
      30: aload_0
      31: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
      34: invokevirtual #36                 // Method org/h2/command/Prepared.update:()I
      37: istore_1
      38: aload_0
      39: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
      42: aload_0
      43: getfield      #37                 // Field startTimeNanos:J
      46: iload_1
      47: invokevirtual #38                 // Method org/h2/command/Prepared.trace:(JI)V
      50: aload_0
      51: bipush        6
      53: invokevirtual #31                 // Method setProgress:(I)V
      56: iload_1
      57: ireturn

  public org.h2.result.ResultInterface query(int);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method recompileIfRequired:()V
       4: aload_0
       5: iconst_5
       6: invokevirtual #31                 // Method setProgress:(I)V
       9: aload_0
      10: invokevirtual #32                 // Method start:()V
      13: aload_0
      14: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
      17: invokevirtual #35                 // Method org/h2/command/Prepared.checkParameters:()V
      20: aload_0
      21: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
      24: iload_1
      25: invokevirtual #39                 // Method org/h2/command/Prepared.query:(I)Lorg/h2/result/ResultInterface;
      28: astore_2
      29: aload_0
      30: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
      33: aload_0
      34: getfield      #37                 // Field startTimeNanos:J
      37: aload_2
      38: invokeinterface #40,  1           // InterfaceMethod org/h2/result/ResultInterface.isLazy:()Z
      43: ifeq          50
      46: iconst_0
      47: goto          56
      50: aload_2
      51: invokeinterface #41,  1           // InterfaceMethod org/h2/result/ResultInterface.getRowCount:()I
      56: invokevirtual #38                 // Method org/h2/command/Prepared.trace:(JI)V
      59: aload_0
      60: bipush        6
      62: invokevirtual #31                 // Method setProgress:(I)V
      65: aload_2
      66: areturn

  public void stop();
    Code:
       0: aload_0
       1: invokespecial #42                 // Method org/h2/command/Command.stop:()V
       4: aload_0
       5: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
       8: invokevirtual #43                 // Method org/h2/command/Prepared.getCteCleanups:()Ljava/util/List;
      11: ifnull        64
      14: aload_0
      15: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
      18: invokevirtual #43                 // Method org/h2/command/Prepared.getCteCleanups:()Ljava/util/List;
      21: invokeinterface #44,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      26: astore_1
      27: aload_1
      28: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          64
      36: aload_1
      37: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #47                 // class org/h2/table/TableView
      45: astore_2
      46: aload_2
      47: invokevirtual #48                 // Method org/h2/table/TableView.getName:()Ljava/lang/String;
      50: ifnull        61
      53: aload_0
      54: getfield      #7                  // Field session:Lorg/h2/engine/Session;
      57: aload_2
      58: invokevirtual #49                 // Method org/h2/engine/Session.removeLocalTempTable:(Lorg/h2/table/Table;)V
      61: goto          27
      64: return

  public boolean canReuse();
    Code:
       0: aload_0
       1: invokespecial #50                 // Method org/h2/command/Command.canReuse:()Z
       4: ifeq          21
       7: aload_0
       8: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
      11: invokevirtual #43                 // Method org/h2/command/Prepared.getCteCleanups:()Ljava/util/List;
      14: ifnonnull     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean isReadOnly();
    Code:
       0: aload_0
       1: getfield      #51                 // Field readOnlyKnown:Z
       4: ifne          23
       7: aload_0
       8: aload_0
       9: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
      12: invokevirtual #52                 // Method org/h2/command/Prepared.isReadOnly:()Z
      15: putfield      #53                 // Field readOnly:Z
      18: aload_0
      19: iconst_1
      20: putfield      #51                 // Field readOnlyKnown:Z
      23: aload_0
      24: getfield      #53                 // Field readOnly:Z
      27: ireturn

  public org.h2.result.ResultInterface queryMeta();
    Code:
       0: aload_0
       1: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
       4: invokevirtual #54                 // Method org/h2/command/Prepared.queryMeta:()Lorg/h2/result/ResultInterface;
       7: areturn

  public boolean isCacheable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
       4: invokevirtual #55                 // Method org/h2/command/Prepared.isCacheable:()Z
       7: ireturn

  public int getCommandType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
       4: invokevirtual #10                 // Method org/h2/command/Prepared.getType:()I
       7: ireturn
}
