Compiled from "AlterSequence.java"
public class org.h2.command.dml.AlterSequence extends org.h2.command.ddl.SchemaCommand {
  private boolean ifExists;

  private org.h2.table.Table table;

  private java.lang.String sequenceName;

  private org.h2.schema.Sequence sequence;

  private org.h2.expression.Expression start;

  private org.h2.expression.Expression increment;

  private java.lang.Boolean cycle;

  private org.h2.expression.Expression minValue;

  private org.h2.expression.Expression maxValue;

  private org.h2.expression.Expression cacheSize;

  public org.h2.command.dml.AlterSequence(org.h2.engine.Session, org.h2.schema.Schema);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/h2/command/ddl/SchemaCommand."<init>":(Lorg/h2/engine/Session;Lorg/h2/schema/Schema;)V
       6: return

  public void setIfExists(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field ifExists:Z
       5: return

  public void setSequenceName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field sequenceName:Ljava/lang/String;
       5: return

  public boolean isTransactional();
    Code:
       0: iconst_1
       1: ireturn

  public void setColumn(org.h2.table.Column);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method org/h2/table/Column.getTable:()Lorg/h2/table/Table;
       5: putfield      #5                  // Field table:Lorg/h2/table/Table;
       8: aload_0
       9: aload_1
      10: invokevirtual #6                  // Method org/h2/table/Column.getSequence:()Lorg/h2/schema/Sequence;
      13: putfield      #7                  // Field sequence:Lorg/h2/schema/Sequence;
      16: aload_0
      17: getfield      #7                  // Field sequence:Lorg/h2/schema/Sequence;
      20: ifnonnull     40
      23: aload_0
      24: getfield      #2                  // Field ifExists:Z
      27: ifne          40
      30: ldc           #8                  // int 90036
      32: aload_1
      33: invokevirtual #9                  // Method org/h2/table/Column.getSQL:()Ljava/lang/String;
      36: invokestatic  #10                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      39: athrow
      40: return

  public void setStartWith(org.h2.expression.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field start:Lorg/h2/expression/Expression;
       5: return

  public void setIncrement(org.h2.expression.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field increment:Lorg/h2/expression/Expression;
       5: return

  public void setCycle(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field cycle:Ljava/lang/Boolean;
       5: return

  public void setMinValue(org.h2.expression.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field minValue:Lorg/h2/expression/Expression;
       5: return

  public void setMaxValue(org.h2.expression.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field maxValue:Lorg/h2/expression/Expression;
       5: return

  public void setCacheSize(org.h2.expression.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field cacheSize:Lorg/h2/expression/Expression;
       5: return

  public int update();
    Code:
       0: aload_0
       1: getfield      #17                 // Field session:Lorg/h2/engine/Session;
       4: invokevirtual #18                 // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
       7: astore_1
       8: aload_0
       9: getfield      #7                  // Field sequence:Lorg/h2/schema/Sequence;
      12: ifnonnull     56
      15: aload_0
      16: aload_0
      17: invokevirtual #19                 // Method getSchema:()Lorg/h2/schema/Schema;
      20: aload_0
      21: getfield      #3                  // Field sequenceName:Ljava/lang/String;
      24: invokevirtual #20                 // Method org/h2/schema/Schema.findSequence:(Ljava/lang/String;)Lorg/h2/schema/Sequence;
      27: putfield      #7                  // Field sequence:Lorg/h2/schema/Sequence;
      30: aload_0
      31: getfield      #7                  // Field sequence:Lorg/h2/schema/Sequence;
      34: ifnonnull     56
      37: aload_0
      38: getfield      #2                  // Field ifExists:Z
      41: ifne          54
      44: ldc           #8                  // int 90036
      46: aload_0
      47: getfield      #3                  // Field sequenceName:Ljava/lang/String;
      50: invokestatic  #10                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      53: athrow
      54: iconst_0
      55: ireturn
      56: aload_0
      57: getfield      #5                  // Field table:Lorg/h2/table/Table;
      60: ifnull        79
      63: aload_0
      64: getfield      #17                 // Field session:Lorg/h2/engine/Session;
      67: invokevirtual #21                 // Method org/h2/engine/Session.getUser:()Lorg/h2/engine/User;
      70: aload_0
      71: getfield      #5                  // Field table:Lorg/h2/table/Table;
      74: bipush        15
      76: invokevirtual #22                 // Method org/h2/engine/User.checkRight:(Lorg/h2/table/Table;I)V
      79: aload_0
      80: getfield      #13                 // Field cycle:Ljava/lang/Boolean;
      83: ifnull        100
      86: aload_0
      87: getfield      #7                  // Field sequence:Lorg/h2/schema/Sequence;
      90: aload_0
      91: getfield      #13                 // Field cycle:Ljava/lang/Boolean;
      94: invokevirtual #23                 // Method java/lang/Boolean.booleanValue:()Z
      97: invokevirtual #24                 // Method org/h2/schema/Sequence.setCycle:(Z)V
     100: aload_0
     101: getfield      #16                 // Field cacheSize:Lorg/h2/expression/Expression;
     104: ifnull        137
     107: aload_0
     108: getfield      #16                 // Field cacheSize:Lorg/h2/expression/Expression;
     111: aload_0
     112: getfield      #17                 // Field session:Lorg/h2/engine/Session;
     115: invokevirtual #25                 // Method org/h2/expression/Expression.optimize:(Lorg/h2/engine/Session;)Lorg/h2/expression/Expression;
     118: aload_0
     119: getfield      #17                 // Field session:Lorg/h2/engine/Session;
     122: invokevirtual #26                 // Method org/h2/expression/Expression.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
     125: invokevirtual #27                 // Method org/h2/value/Value.getLong:()J
     128: lstore_2
     129: aload_0
     130: getfield      #7                  // Field sequence:Lorg/h2/schema/Sequence;
     133: lload_2
     134: invokevirtual #28                 // Method org/h2/schema/Sequence.setCacheSize:(J)V
     137: aload_0
     138: getfield      #11                 // Field start:Lorg/h2/expression/Expression;
     141: ifnonnull     165
     144: aload_0
     145: getfield      #14                 // Field minValue:Lorg/h2/expression/Expression;
     148: ifnonnull     165
     151: aload_0
     152: getfield      #15                 // Field maxValue:Lorg/h2/expression/Expression;
     155: ifnonnull     165
     158: aload_0
     159: getfield      #12                 // Field increment:Lorg/h2/expression/Expression;
     162: ifnull        216
     165: aload_0
     166: aload_0
     167: getfield      #11                 // Field start:Lorg/h2/expression/Expression;
     170: invokespecial #29                 // Method getLong:(Lorg/h2/expression/Expression;)Ljava/lang/Long;
     173: astore_2
     174: aload_0
     175: aload_0
     176: getfield      #14                 // Field minValue:Lorg/h2/expression/Expression;
     179: invokespecial #29                 // Method getLong:(Lorg/h2/expression/Expression;)Ljava/lang/Long;
     182: astore_3
     183: aload_0
     184: aload_0
     185: getfield      #15                 // Field maxValue:Lorg/h2/expression/Expression;
     188: invokespecial #29                 // Method getLong:(Lorg/h2/expression/Expression;)Ljava/lang/Long;
     191: astore        4
     193: aload_0
     194: aload_0
     195: getfield      #12                 // Field increment:Lorg/h2/expression/Expression;
     198: invokespecial #29                 // Method getLong:(Lorg/h2/expression/Expression;)Ljava/lang/Long;
     201: astore        5
     203: aload_0
     204: getfield      #7                  // Field sequence:Lorg/h2/schema/Sequence;
     207: aload_2
     208: aload_3
     209: aload         4
     211: aload         5
     213: invokevirtual #30                 // Method org/h2/schema/Sequence.modify:(Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;)V
     216: aload_1
     217: aload_0
     218: getfield      #17                 // Field session:Lorg/h2/engine/Session;
     221: aload_0
     222: getfield      #7                  // Field sequence:Lorg/h2/schema/Sequence;
     225: invokevirtual #31                 // Method org/h2/engine/Database.updateMeta:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
     228: iconst_0
     229: ireturn

  private java.lang.Long getLong(org.h2.expression.Expression);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_1
       7: aload_0
       8: getfield      #17                 // Field session:Lorg/h2/engine/Session;
      11: invokevirtual #25                 // Method org/h2/expression/Expression.optimize:(Lorg/h2/engine/Session;)Lorg/h2/expression/Expression;
      14: aload_0
      15: getfield      #17                 // Field session:Lorg/h2/engine/Session;
      18: invokevirtual #26                 // Method org/h2/expression/Expression.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
      21: invokevirtual #27                 // Method org/h2/value/Value.getLong:()J
      24: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      27: areturn

  public int getType();
    Code:
       0: bipush        54
       2: ireturn
}
