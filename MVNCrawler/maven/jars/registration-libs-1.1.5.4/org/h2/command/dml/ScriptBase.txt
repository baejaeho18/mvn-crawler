Compiled from "ScriptBase.java"
abstract class org.h2.command.dml.ScriptBase extends org.h2.command.Prepared implements org.h2.store.DataHandler {
  private static final java.lang.String SCRIPT_SQL;

  protected java.io.OutputStream out;

  protected java.io.InputStream in;

  private org.h2.expression.Expression fileNameExpr;

  private org.h2.expression.Expression password;

  private java.lang.String fileName;

  private java.lang.String cipher;

  private org.h2.store.FileStore store;

  private java.lang.String compressionAlgorithm;

  org.h2.command.dml.ScriptBase(org.h2.engine.Session);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/h2/command/Prepared."<init>":(Lorg/h2/engine/Session;)V
       5: return

  public void setCipher(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field cipher:Ljava/lang/String;
       5: return

  private boolean isEncrypted();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cipher:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setPassword(org.h2.expression.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field password:Lorg/h2/expression/Expression;
       5: return

  public void setFileNameExpr(org.h2.expression.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field fileNameExpr:Lorg/h2/expression/Expression;
       5: return

  protected java.lang.String getFileName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileNameExpr:Lorg/h2/expression/Expression;
       4: ifnull        92
       7: aload_0
       8: getfield      #5                  // Field fileName:Ljava/lang/String;
      11: ifnonnull     92
      14: aload_0
      15: aload_0
      16: getfield      #4                  // Field fileNameExpr:Lorg/h2/expression/Expression;
      19: aload_0
      20: getfield      #6                  // Field session:Lorg/h2/engine/Session;
      23: invokevirtual #7                  // Method org/h2/expression/Expression.optimize:(Lorg/h2/engine/Session;)Lorg/h2/expression/Expression;
      26: aload_0
      27: getfield      #6                  // Field session:Lorg/h2/engine/Session;
      30: invokevirtual #8                  // Method org/h2/expression/Expression.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
      33: invokevirtual #9                  // Method org/h2/value/Value.getString:()Ljava/lang/String;
      36: putfield      #5                  // Field fileName:Ljava/lang/String;
      39: aload_0
      40: getfield      #5                  // Field fileName:Ljava/lang/String;
      43: ifnull        59
      46: aload_0
      47: getfield      #5                  // Field fileName:Ljava/lang/String;
      50: invokevirtual #10                 // Method java/lang/String.trim:()Ljava/lang/String;
      53: invokevirtual #11                 // Method java/lang/String.length:()I
      56: ifne          65
      59: aload_0
      60: ldc           #12                 // String script.sql
      62: putfield      #5                  // Field fileName:Ljava/lang/String;
      65: aload_0
      66: new           #13                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      73: invokestatic  #15                 // Method org/h2/engine/SysProperties.getScriptDirectory:()Ljava/lang/String;
      76: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: getfield      #5                  // Field fileName:Ljava/lang/String;
      83: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: putfield      #5                  // Field fileName:Ljava/lang/String;
      92: aload_0
      93: getfield      #5                  // Field fileName:Ljava/lang/String;
      96: areturn

  public boolean isTransactional();
    Code:
       0: iconst_0
       1: ireturn

  void deleteStore();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getFileName:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: aload_1
      10: invokestatic  #19                 // Method org/h2/store/fs/FileUtils.delete:(Ljava/lang/String;)V
      13: return

  private void initStore();
    Code:
       0: aload_0
       1: getfield      #6                  // Field session:Lorg/h2/engine/Session;
       4: invokevirtual #20                 // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
       7: astore_1
       8: aconst_null
       9: astore_2
      10: aload_0
      11: getfield      #2                  // Field cipher:Ljava/lang/String;
      14: ifnull        56
      17: aload_0
      18: getfield      #3                  // Field password:Lorg/h2/expression/Expression;
      21: ifnull        56
      24: aload_0
      25: getfield      #3                  // Field password:Lorg/h2/expression/Expression;
      28: aload_0
      29: getfield      #6                  // Field session:Lorg/h2/engine/Session;
      32: invokevirtual #7                  // Method org/h2/expression/Expression.optimize:(Lorg/h2/engine/Session;)Lorg/h2/expression/Expression;
      35: aload_0
      36: getfield      #6                  // Field session:Lorg/h2/engine/Session;
      39: invokevirtual #8                  // Method org/h2/expression/Expression.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
      42: invokevirtual #9                  // Method org/h2/value/Value.getString:()Ljava/lang/String;
      45: invokevirtual #21                 // Method java/lang/String.toCharArray:()[C
      48: astore_3
      49: ldc           #22                 // String script
      51: aload_3
      52: invokestatic  #23                 // Method org/h2/security/SHA256.getKeyPasswordHash:(Ljava/lang/String;[C)[B
      55: astore_2
      56: aload_0
      57: invokevirtual #18                 // Method getFileName:()Ljava/lang/String;
      60: astore_3
      61: aload_0
      62: aload_1
      63: aload_3
      64: ldc           #24                 // String rw
      66: aload_0
      67: getfield      #2                  // Field cipher:Ljava/lang/String;
      70: aload_2
      71: invokestatic  #25                 // Method org/h2/store/FileStore.open:(Lorg/h2/store/DataHandler;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[B)Lorg/h2/store/FileStore;
      74: putfield      #26                 // Field store:Lorg/h2/store/FileStore;
      77: aload_0
      78: getfield      #26                 // Field store:Lorg/h2/store/FileStore;
      81: iconst_0
      82: invokevirtual #27                 // Method org/h2/store/FileStore.setCheckedWriting:(Z)V
      85: aload_0
      86: getfield      #26                 // Field store:Lorg/h2/store/FileStore;
      89: invokevirtual #28                 // Method org/h2/store/FileStore.init:()V
      92: return

  void openOutput();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getFileName:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     10
       9: return
      10: aload_0
      11: invokespecial #29                 // Method isEncrypted:()Z
      14: ifeq          61
      17: aload_0
      18: invokespecial #30                 // Method initStore:()V
      21: aload_0
      22: new           #31                 // class org/h2/store/FileStoreOutputStream
      25: dup
      26: aload_0
      27: getfield      #26                 // Field store:Lorg/h2/store/FileStore;
      30: aload_0
      31: aload_0
      32: getfield      #32                 // Field compressionAlgorithm:Ljava/lang/String;
      35: invokespecial #33                 // Method org/h2/store/FileStoreOutputStream."<init>":(Lorg/h2/store/FileStore;Lorg/h2/store/DataHandler;Ljava/lang/String;)V
      38: putfield      #34                 // Field out:Ljava/io/OutputStream;
      41: aload_0
      42: new           #35                 // class java/io/BufferedOutputStream
      45: dup
      46: aload_0
      47: getfield      #34                 // Field out:Ljava/io/OutputStream;
      50: ldc           #36                 // int 131072
      52: invokespecial #37                 // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;I)V
      55: putfield      #34                 // Field out:Ljava/io/OutputStream;
      58: goto          109
      61: aload_1
      62: iconst_0
      63: invokestatic  #38                 // Method org/h2/store/fs/FileUtils.newOutputStream:(Ljava/lang/String;Z)Ljava/io/OutputStream;
      66: astore_2
      67: goto          77
      70: astore_3
      71: aload_3
      72: aconst_null
      73: invokestatic  #40                 // Method org/h2/message/DbException.convertIOException:(Ljava/io/IOException;Ljava/lang/String;)Lorg/h2/message/DbException;
      76: athrow
      77: aload_0
      78: new           #35                 // class java/io/BufferedOutputStream
      81: dup
      82: aload_2
      83: sipush        4096
      86: invokespecial #37                 // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;I)V
      89: putfield      #34                 // Field out:Ljava/io/OutputStream;
      92: aload_0
      93: aload_0
      94: getfield      #34                 // Field out:Ljava/io/OutputStream;
      97: aload_0
      98: getfield      #32                 // Field compressionAlgorithm:Ljava/lang/String;
     101: ldc           #12                 // String script.sql
     103: invokestatic  #41                 // Method org/h2/tools/CompressTool.wrapOutputStream:(Ljava/io/OutputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/io/OutputStream;
     106: putfield      #34                 // Field out:Ljava/io/OutputStream;
     109: return
    Exception table:
       from    to  target type
          61    67    70   Class java/io/IOException

  void openInput();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getFileName:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     10
       9: return
      10: aload_0
      11: invokespecial #29                 // Method isEncrypted:()Z
      14: ifeq          53
      17: aload_0
      18: invokespecial #30                 // Method initStore:()V
      21: aload_0
      22: new           #42                 // class org/h2/store/FileStoreInputStream
      25: dup
      26: aload_0
      27: getfield      #26                 // Field store:Lorg/h2/store/FileStore;
      30: aload_0
      31: aload_0
      32: getfield      #32                 // Field compressionAlgorithm:Ljava/lang/String;
      35: ifnull        42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: iconst_0
      44: invokespecial #43                 // Method org/h2/store/FileStoreInputStream."<init>":(Lorg/h2/store/FileStore;Lorg/h2/store/DataHandler;ZZ)V
      47: putfield      #44                 // Field in:Ljava/io/InputStream;
      50: goto          132
      53: aload_1
      54: invokestatic  #45                 // Method org/h2/store/fs/FileUtils.newInputStream:(Ljava/lang/String;)Ljava/io/InputStream;
      57: astore_2
      58: goto          68
      61: astore_3
      62: aload_3
      63: aload_1
      64: invokestatic  #40                 // Method org/h2/message/DbException.convertIOException:(Ljava/io/IOException;Ljava/lang/String;)Lorg/h2/message/DbException;
      67: athrow
      68: aload_0
      69: new           #46                 // class java/io/BufferedInputStream
      72: dup
      73: aload_2
      74: sipush        4096
      77: invokespecial #47                 // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;I)V
      80: putfield      #44                 // Field in:Ljava/io/InputStream;
      83: aload_0
      84: aload_0
      85: getfield      #44                 // Field in:Ljava/io/InputStream;
      88: aload_0
      89: getfield      #32                 // Field compressionAlgorithm:Ljava/lang/String;
      92: ldc           #12                 // String script.sql
      94: invokestatic  #48                 // Method org/h2/tools/CompressTool.wrapInputStream:(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;
      97: putfield      #44                 // Field in:Ljava/io/InputStream;
     100: aload_0
     101: getfield      #44                 // Field in:Ljava/io/InputStream;
     104: ifnonnull     132
     107: ldc           #49                 // int 90124
     109: new           #13                 // class java/lang/StringBuilder
     112: dup
     113: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     116: ldc           #50                 // String script.sql in
     118: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: aload_1
     122: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokestatic  #51                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
     131: athrow
     132: return
    Exception table:
       from    to  target type
          53    58    61   Class java/io/IOException

  void closeIO();
    Code:
       0: aload_0
       1: getfield      #34                 // Field out:Ljava/io/OutputStream;
       4: invokestatic  #52                 // Method org/h2/util/IOUtils.closeSilently:(Ljava/io/Closeable;)V
       7: aload_0
       8: aconst_null
       9: putfield      #34                 // Field out:Ljava/io/OutputStream;
      12: aload_0
      13: getfield      #44                 // Field in:Ljava/io/InputStream;
      16: invokestatic  #53                 // Method org/h2/util/IOUtils.closeSilently:(Ljava/io/InputStream;)V
      19: aload_0
      20: aconst_null
      21: putfield      #44                 // Field in:Ljava/io/InputStream;
      24: aload_0
      25: getfield      #26                 // Field store:Lorg/h2/store/FileStore;
      28: ifnull        43
      31: aload_0
      32: getfield      #26                 // Field store:Lorg/h2/store/FileStore;
      35: invokevirtual #54                 // Method org/h2/store/FileStore.closeSilently:()V
      38: aload_0
      39: aconst_null
      40: putfield      #26                 // Field store:Lorg/h2/store/FileStore;
      43: return

  public boolean needRecompile();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String getDatabasePath();
    Code:
       0: aconst_null
       1: areturn

  public org.h2.store.FileStore openFile(java.lang.String, java.lang.String, boolean);
    Code:
       0: aconst_null
       1: areturn

  public void checkPowerOff();
    Code:
       0: aload_0
       1: getfield      #6                  // Field session:Lorg/h2/engine/Session;
       4: invokevirtual #20                 // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
       7: invokevirtual #55                 // Method org/h2/engine/Database.checkPowerOff:()V
      10: return

  public void checkWritingAllowed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field session:Lorg/h2/engine/Session;
       4: invokevirtual #20                 // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
       7: invokevirtual #56                 // Method org/h2/engine/Database.checkWritingAllowed:()V
      10: return

  public int getMaxLengthInplaceLob();
    Code:
       0: aload_0
       1: getfield      #6                  // Field session:Lorg/h2/engine/Session;
       4: invokevirtual #20                 // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
       7: invokevirtual #57                 // Method org/h2/engine/Database.getMaxLengthInplaceLob:()I
      10: ireturn

  public org.h2.util.TempFileDeleter getTempFileDeleter();
    Code:
       0: aload_0
       1: getfield      #6                  // Field session:Lorg/h2/engine/Session;
       4: invokevirtual #20                 // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
       7: invokevirtual #58                 // Method org/h2/engine/Database.getTempFileDeleter:()Lorg/h2/util/TempFileDeleter;
      10: areturn

  public java.lang.String getLobCompressionAlgorithm(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field session:Lorg/h2/engine/Session;
       4: invokevirtual #20                 // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
       7: iload_1
       8: invokevirtual #59                 // Method org/h2/engine/Database.getLobCompressionAlgorithm:(I)Ljava/lang/String;
      11: areturn

  public void setCompressionAlgorithm(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field compressionAlgorithm:Ljava/lang/String;
       5: return

  public java.lang.Object getLobSyncObject();
    Code:
       0: aload_0
       1: areturn

  public org.h2.util.SmallLRUCache<java.lang.String, java.lang.String[]> getLobFileListCache();
    Code:
       0: aconst_null
       1: areturn

  public org.h2.store.LobStorageBackend getLobStorage();
    Code:
       0: aconst_null
       1: areturn

  public int readLob(long, byte[], long, byte[], int, int);
    Code:
       0: invokestatic  #60                 // Method org/h2/message/DbException.throwInternalError:()Ljava/lang/RuntimeException;
       3: athrow

  public org.h2.api.JavaObjectSerializer getJavaObjectSerializer();
    Code:
       0: aload_0
       1: getfield      #6                  // Field session:Lorg/h2/engine/Session;
       4: invokevirtual #61                 // Method org/h2/engine/Session.getDataHandler:()Lorg/h2/store/DataHandler;
       7: invokeinterface #62,  1           // InterfaceMethod org/h2/store/DataHandler.getJavaObjectSerializer:()Lorg/h2/api/JavaObjectSerializer;
      12: areturn

  public org.h2.value.CompareMode getCompareMode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field session:Lorg/h2/engine/Session;
       4: invokevirtual #61                 // Method org/h2/engine/Session.getDataHandler:()Lorg/h2/store/DataHandler;
       7: invokeinterface #63,  1           // InterfaceMethod org/h2/store/DataHandler.getCompareMode:()Lorg/h2/value/CompareMode;
      12: areturn

  public org.h2.store.LobStorageInterface getLobStorage();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method getLobStorage:()Lorg/h2/store/LobStorageBackend;
       4: areturn
}
