Compiled from "BackupCommand.java"
public class org.h2.command.dml.BackupCommand extends org.h2.command.Prepared {
  private org.h2.expression.Expression fileNameExpr;

  public org.h2.command.dml.BackupCommand(org.h2.engine.Session);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/h2/command/Prepared."<init>":(Lorg/h2/engine/Session;)V
       5: return

  public void setFileName(org.h2.expression.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field fileNameExpr:Lorg/h2/expression/Expression;
       5: return

  public int update();
    Code:
       0: aload_0
       1: getfield      #2                  // Field fileNameExpr:Lorg/h2/expression/Expression;
       4: aload_0
       5: getfield      #3                  // Field session:Lorg/h2/engine/Session;
       8: invokevirtual #4                  // Method org/h2/expression/Expression.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
      11: invokevirtual #5                  // Method org/h2/value/Value.getString:()Ljava/lang/String;
      14: astore_1
      15: aload_0
      16: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      19: invokevirtual #6                  // Method org/h2/engine/Session.getUser:()Lorg/h2/engine/User;
      22: invokevirtual #7                  // Method org/h2/engine/User.checkAdmin:()V
      25: aload_0
      26: aload_1
      27: invokespecial #8                  // Method backupTo:(Ljava/lang/String;)V
      30: iconst_0
      31: ireturn

  private void backupTo(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field session:Lorg/h2/engine/Session;
       4: invokevirtual #9                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
       7: astore_2
       8: aload_2
       9: invokevirtual #10                 // Method org/h2/engine/Database.isPersistent:()Z
      12: ifne          21
      15: ldc           #11                 // int 90126
      17: invokestatic  #12                 // Method org/h2/message/DbException.get:(I)Lorg/h2/message/DbException;
      20: athrow
      21: aload_2
      22: invokevirtual #13                 // Method org/h2/engine/Database.getMvStore:()Lorg/h2/mvstore/db/MVTableEngine$Store;
      25: astore_3
      26: aload_3
      27: ifnull        34
      30: aload_3
      31: invokevirtual #14                 // Method org/h2/mvstore/db/MVTableEngine$Store.flush:()V
      34: aload_2
      35: invokevirtual #15                 // Method org/h2/engine/Database.getName:()Ljava/lang/String;
      38: astore        4
      40: aload         4
      42: invokestatic  #16                 // Method org/h2/store/fs/FileUtils.getName:(Ljava/lang/String;)Ljava/lang/String;
      45: astore        4
      47: aload_1
      48: iconst_0
      49: invokestatic  #17                 // Method org/h2/store/fs/FileUtils.newOutputStream:(Ljava/lang/String;Z)Ljava/io/OutputStream;
      52: astore        5
      54: aconst_null
      55: astore        6
      57: new           #18                 // class java/util/zip/ZipOutputStream
      60: dup
      61: aload         5
      63: invokespecial #19                 // Method java/util/zip/ZipOutputStream."<init>":(Ljava/io/OutputStream;)V
      66: astore        7
      68: aload_2
      69: invokevirtual #20                 // Method org/h2/engine/Database.flush:()V
      72: aload_2
      73: invokevirtual #21                 // Method org/h2/engine/Database.getPageStore:()Lorg/h2/store/PageStore;
      76: ifnull        115
      79: new           #22                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      86: aload_2
      87: invokevirtual #15                 // Method org/h2/engine/Database.getName:()Ljava/lang/String;
      90: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: ldc           #25                 // String .h2.db
      95: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: astore        8
     103: aload_0
     104: aload         7
     106: aload         8
     108: aload_2
     109: invokevirtual #21                 // Method org/h2/engine/Database.getPageStore:()Lorg/h2/store/PageStore;
     112: invokespecial #27                 // Method backupPageStore:(Ljava/util/zip/ZipOutputStream;Ljava/lang/String;Lorg/h2/store/PageStore;)V
     115: aload_2
     116: invokevirtual #15                 // Method org/h2/engine/Database.getName:()Ljava/lang/String;
     119: invokestatic  #28                 // Method org/h2/store/fs/FileUtils.getParent:(Ljava/lang/String;)Ljava/lang/String;
     122: astore        8
     124: aload_2
     125: invokevirtual #29                 // Method org/h2/engine/Database.getLobSyncObject:()Ljava/lang/Object;
     128: dup
     129: astore        9
     131: monitorenter
     132: aload_2
     133: invokevirtual #30                 // Method org/h2/engine/Database.getDatabasePath:()Ljava/lang/String;
     136: astore        10
     138: aload         10
     140: invokestatic  #28                 // Method org/h2/store/fs/FileUtils.getParent:(Ljava/lang/String;)Ljava/lang/String;
     143: astore        11
     145: aload         11
     147: invokestatic  #31                 // Method org/h2/store/FileLister.getDir:(Ljava/lang/String;)Ljava/lang/String;
     150: astore        11
     152: aload         11
     154: aload         4
     156: iconst_1
     157: invokestatic  #32                 // Method org/h2/store/FileLister.getDatabaseFiles:(Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/ArrayList;
     160: astore        12
     162: aload         12
     164: invokevirtual #33                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     167: astore        13
     169: aload         13
     171: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     176: ifeq          285
     179: aload         13
     181: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     186: checkcast     #36                 // class java/lang/String
     189: astore        14
     191: aload         14
     193: ldc           #37                 // String .lob.db
     195: invokevirtual #38                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     198: ifeq          210
     201: aload         7
     203: aload         8
     205: aload         14
     207: invokestatic  #39                 // Method backupFile:(Ljava/util/zip/ZipOutputStream;Ljava/lang/String;Ljava/lang/String;)V
     210: aload         14
     212: ldc           #40                 // String .mv.db
     214: invokevirtual #38                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     217: ifeq          282
     220: aload_3
     221: ifnull        282
     224: aload_3
     225: invokevirtual #41                 // Method org/h2/mvstore/db/MVTableEngine$Store.getStore:()Lorg/h2/mvstore/MVStore;
     228: astore        15
     230: aload         15
     232: invokevirtual #42                 // Method org/h2/mvstore/MVStore.getReuseSpace:()Z
     235: istore        16
     237: aload         15
     239: iconst_0
     240: invokevirtual #43                 // Method org/h2/mvstore/MVStore.setReuseSpace:(Z)V
     243: aload_3
     244: invokevirtual #44                 // Method org/h2/mvstore/db/MVTableEngine$Store.getInputStream:()Ljava/io/InputStream;
     247: astore        17
     249: aload         7
     251: aload         8
     253: aload         14
     255: aload         17
     257: invokestatic  #45                 // Method backupFile:(Ljava/util/zip/ZipOutputStream;Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;)V
     260: aload         15
     262: iload         16
     264: invokevirtual #43                 // Method org/h2/mvstore/MVStore.setReuseSpace:(Z)V
     267: goto          282
     270: astore        18
     272: aload         15
     274: iload         16
     276: invokevirtual #43                 // Method org/h2/mvstore/MVStore.setReuseSpace:(Z)V
     279: aload         18
     281: athrow
     282: goto          169
     285: aload         9
     287: monitorexit
     288: goto          299
     291: astore        19
     293: aload         9
     295: monitorexit
     296: aload         19
     298: athrow
     299: aload         7
     301: invokevirtual #46                 // Method java/util/zip/ZipOutputStream.close:()V
     304: aload         5
     306: ifnull        391
     309: aload         6
     311: ifnull        334
     314: aload         5
     316: invokevirtual #47                 // Method java/io/OutputStream.close:()V
     319: goto          391
     322: astore        7
     324: aload         6
     326: aload         7
     328: invokevirtual #49                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     331: goto          391
     334: aload         5
     336: invokevirtual #47                 // Method java/io/OutputStream.close:()V
     339: goto          391
     342: astore        7
     344: aload         7
     346: astore        6
     348: aload         7
     350: athrow
     351: astore        20
     353: aload         5
     355: ifnull        388
     358: aload         6
     360: ifnull        383
     363: aload         5
     365: invokevirtual #47                 // Method java/io/OutputStream.close:()V
     368: goto          388
     371: astore        21
     373: aload         6
     375: aload         21
     377: invokevirtual #49                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     380: goto          388
     383: aload         5
     385: invokevirtual #47                 // Method java/io/OutputStream.close:()V
     388: aload         20
     390: athrow
     391: goto          401
     394: astore_3
     395: aload_3
     396: aload_1
     397: invokestatic  #51                 // Method org/h2/message/DbException.convertIOException:(Ljava/io/IOException;Ljava/lang/String;)Lorg/h2/message/DbException;
     400: athrow
     401: return
    Exception table:
       from    to  target type
         243   260   270   any
         270   272   270   any
         132   288   291   any
         291   296   291   any
         314   319   322   Class java/lang/Throwable
          57   304   342   Class java/lang/Throwable
          57   304   351   any
         363   368   371   Class java/lang/Throwable
         342   353   351   any
          21   391   394   Class java/io/IOException

  private void backupPageStore(java.util.zip.ZipOutputStream, java.lang.String, org.h2.store.PageStore) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field session:Lorg/h2/engine/Session;
       4: invokevirtual #9                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
       7: astore        4
       9: aload_2
      10: invokestatic  #16                 // Method org/h2/store/fs/FileUtils.getName:(Ljava/lang/String;)Ljava/lang/String;
      13: astore_2
      14: aload_1
      15: new           #52                 // class java/util/zip/ZipEntry
      18: dup
      19: aload_2
      20: invokespecial #53                 // Method java/util/zip/ZipEntry."<init>":(Ljava/lang/String;)V
      23: invokevirtual #54                 // Method java/util/zip/ZipOutputStream.putNextEntry:(Ljava/util/zip/ZipEntry;)V
      26: iconst_0
      27: istore        5
      29: aload_3
      30: iconst_1
      31: invokevirtual #55                 // Method org/h2/store/PageStore.setBackup:(Z)V
      34: aload_3
      35: iload         5
      37: aload_1
      38: invokevirtual #56                 // Method org/h2/store/PageStore.copyDirect:(ILjava/io/OutputStream;)I
      41: istore        5
      43: iload         5
      45: ifge          51
      48: goto          71
      51: aload_3
      52: invokevirtual #57                 // Method org/h2/store/PageStore.getPageCount:()I
      55: istore        6
      57: aload         4
      59: iconst_3
      60: aload_2
      61: iload         5
      63: iload         6
      65: invokevirtual #58                 // Method org/h2/engine/Database.setProgress:(ILjava/lang/String;II)V
      68: goto          34
      71: aload_3
      72: iconst_0
      73: invokevirtual #55                 // Method org/h2/store/PageStore.setBackup:(Z)V
      76: goto          89
      79: astore        7
      81: aload_3
      82: iconst_0
      83: invokevirtual #55                 // Method org/h2/store/PageStore.setBackup:(Z)V
      86: aload         7
      88: athrow
      89: aload_1
      90: invokevirtual #59                 // Method java/util/zip/ZipOutputStream.closeEntry:()V
      93: return
    Exception table:
       from    to  target type
          29    71    79   any
          79    81    79   any

  private static void backupFile(java.util.zip.ZipOutputStream, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokestatic  #60                 // Method org/h2/store/fs/FileUtils.newInputStream:(Ljava/lang/String;)Ljava/io/InputStream;
       4: astore_3
       5: aload_0
       6: aload_1
       7: aload_2
       8: aload_3
       9: invokestatic  #45                 // Method backupFile:(Ljava/util/zip/ZipOutputStream;Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;)V
      12: return

  private static void backupFile(java.util.zip.ZipOutputStream, java.lang.String, java.lang.String, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokestatic  #61                 // Method org/h2/store/fs/FileUtils.toRealPath:(Ljava/lang/String;)Ljava/lang/String;
       4: astore        4
       6: aload_1
       7: invokestatic  #61                 // Method org/h2/store/fs/FileUtils.toRealPath:(Ljava/lang/String;)Ljava/lang/String;
      10: astore_1
      11: aload         4
      13: aload_1
      14: invokevirtual #62                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      17: ifne          48
      20: new           #22                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      27: aload         4
      29: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #63                 // String  does not start with
      34: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_1
      38: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokestatic  #64                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      47: pop
      48: aload         4
      50: aload_1
      51: invokevirtual #65                 // Method java/lang/String.length:()I
      54: invokevirtual #66                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      57: astore        4
      59: aload         4
      61: invokestatic  #67                 // Method correctFileName:(Ljava/lang/String;)Ljava/lang/String;
      64: astore        4
      66: aload_0
      67: new           #52                 // class java/util/zip/ZipEntry
      70: dup
      71: aload         4
      73: invokespecial #53                 // Method java/util/zip/ZipEntry."<init>":(Ljava/lang/String;)V
      76: invokevirtual #54                 // Method java/util/zip/ZipOutputStream.putNextEntry:(Ljava/util/zip/ZipEntry;)V
      79: aload_3
      80: aload_0
      81: invokestatic  #68                 // Method org/h2/util/IOUtils.copyAndCloseInput:(Ljava/io/InputStream;Ljava/io/OutputStream;)J
      84: pop2
      85: aload_0
      86: invokevirtual #59                 // Method java/util/zip/ZipOutputStream.closeEntry:()V
      89: return

  public boolean isTransactional();
    Code:
       0: iconst_1
       1: ireturn

  public static java.lang.String correctFileName(java.lang.String);
    Code:
       0: aload_0
       1: bipush        92
       3: bipush        47
       5: invokevirtual #69                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
       8: astore_0
       9: aload_0
      10: ldc           #70                 // String /
      12: invokevirtual #62                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      15: ifeq          24
      18: aload_0
      19: iconst_1
      20: invokevirtual #66                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      23: astore_0
      24: aload_0
      25: areturn

  public boolean needRecompile();
    Code:
       0: iconst_0
       1: ireturn

  public org.h2.result.ResultInterface queryMeta();
    Code:
       0: aconst_null
       1: areturn

  public int getType();
    Code:
       0: bipush        56
       2: ireturn
}
