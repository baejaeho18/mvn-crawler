Compiled from "Optimizer.java"
class org.h2.command.dml.Optimizer {
  private static final int MAX_BRUTE_FORCE_FILTERS;

  private static final int MAX_BRUTE_FORCE;

  private static final int MAX_GENETIC;

  private long startNs;

  private org.h2.util.BitField switched;

  private final org.h2.table.TableFilter[] filters;

  private final org.h2.expression.Expression condition;

  private final org.h2.engine.Session session;

  private org.h2.table.Plan bestPlan;

  private org.h2.table.TableFilter topFilter;

  private double cost;

  private java.util.Random random;

  org.h2.command.dml.Optimizer(org.h2.table.TableFilter[], org.h2.expression.Expression, org.h2.engine.Session);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field condition:Lorg/h2/expression/Expression;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field session:Lorg/h2/engine/Session;
      19: return

  private static int getMaxBruteForceFilters(int);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_0
       3: istore_2
       4: iload_0
       5: istore_3
       6: iload_2
       7: ifle          38
      10: iload_3
      11: iload_2
      12: iload_2
      13: iconst_1
      14: isub
      15: imul
      16: iconst_2
      17: idiv
      18: imul
      19: sipush        2000
      22: if_icmpge     38
      25: iinc          2, -1
      28: iload_3
      29: iload_2
      30: imul
      31: istore_3
      32: iinc          1, 1
      35: goto          6
      38: iload_1
      39: ireturn

  private void calculateBestPlan();
    Code:
       0: aload_0
       1: ldc2_w        #5                  // double -1.0d
       4: putfield      #7                  // Field cost:D
       7: aload_0
       8: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
      11: arraylength
      12: iconst_1
      13: if_icmpeq     26
      16: aload_0
      17: getfield      #4                  // Field session:Lorg/h2/engine/Session;
      20: invokevirtual #8                  // Method org/h2/engine/Session.isForceJoinOrder:()Z
      23: ifeq          38
      26: aload_0
      27: aload_0
      28: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
      31: invokespecial #9                  // Method testPlan:([Lorg/h2/table/TableFilter;)Z
      34: pop
      35: goto          82
      38: aload_0
      39: invokestatic  #10                 // Method java/lang/System.nanoTime:()J
      42: putfield      #11                 // Field startNs:J
      45: aload_0
      46: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
      49: arraylength
      50: bipush        7
      52: if_icmpgt     62
      55: aload_0
      56: invokespecial #12                 // Method calculateBruteForceAll:()V
      59: goto          82
      62: aload_0
      63: invokespecial #13                 // Method calculateBruteForceSome:()V
      66: aload_0
      67: new           #14                 // class java/util/Random
      70: dup
      71: lconst_0
      72: invokespecial #15                 // Method java/util/Random."<init>":(J)V
      75: putfield      #16                 // Field random:Ljava/util/Random;
      78: aload_0
      79: invokespecial #17                 // Method calculateGenetic:()V
      82: return

  private void calculateFakePlan();
    Code:
       0: aload_0
       1: ldc2_w        #5                  // double -1.0d
       4: putfield      #7                  // Field cost:D
       7: aload_0
       8: new           #18                 // class org/h2/table/Plan
      11: dup
      12: aload_0
      13: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
      16: aload_0
      17: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
      20: arraylength
      21: aload_0
      22: getfield      #3                  // Field condition:Lorg/h2/expression/Expression;
      25: invokespecial #19                 // Method org/h2/table/Plan."<init>":([Lorg/h2/table/TableFilter;ILorg/h2/expression/Expression;)V
      28: putfield      #20                 // Field bestPlan:Lorg/h2/table/Plan;
      31: return

  private boolean canStop(int);
    Code:
       0: iload_1
       1: bipush        127
       3: iand
       4: ifne          50
       7: aload_0
       8: getfield      #7                  // Field cost:D
      11: dconst_0
      12: dcmpl
      13: iflt          50
      16: ldc2_w        #21                 // long 10l
      19: invokestatic  #10                 // Method java/lang/System.nanoTime:()J
      22: aload_0
      23: getfield      #11                 // Field startNs:J
      26: lsub
      27: lmul
      28: l2d
      29: aload_0
      30: getfield      #7                  // Field cost:D
      33: getstatic     #23                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      36: lconst_1
      37: invokevirtual #24                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      40: l2d
      41: dmul
      42: dcmpl
      43: ifle          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ireturn

  private void calculateBruteForceAll();
    Code:
       0: aload_0
       1: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
       4: arraylength
       5: anewarray     #25                 // class org/h2/table/TableFilter
       8: astore_1
       9: aload_0
      10: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
      13: aload_1
      14: invokestatic  #26                 // Method org/h2/util/Permutations.create:([Ljava/lang/Object;[Ljava/lang/Object;)Lorg/h2/util/Permutations;
      17: astore_2
      18: iconst_0
      19: istore_3
      20: aload_0
      21: iload_3
      22: invokespecial #27                 // Method canStop:(I)Z
      25: ifne          47
      28: aload_2
      29: invokevirtual #28                 // Method org/h2/util/Permutations.next:()Z
      32: ifeq          47
      35: aload_0
      36: aload_1
      37: invokespecial #9                  // Method testPlan:([Lorg/h2/table/TableFilter;)Z
      40: pop
      41: iinc          3, 1
      44: goto          20
      47: return

  private void calculateBruteForceSome();
    Code:
       0: aload_0
       1: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
       4: arraylength
       5: invokestatic  #29                 // Method getMaxBruteForceFilters:(I)I
       8: istore_1
       9: aload_0
      10: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
      13: arraylength
      14: anewarray     #25                 // class org/h2/table/TableFilter
      17: astore_2
      18: aload_0
      19: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
      22: aload_2
      23: iload_1
      24: invokestatic  #30                 // Method org/h2/util/Permutations.create:([Ljava/lang/Object;[Ljava/lang/Object;I)Lorg/h2/util/Permutations;
      27: astore_3
      28: iconst_0
      29: istore        4
      31: aload_0
      32: iload         4
      34: invokespecial #27                 // Method canStop:(I)Z
      37: ifne          285
      40: aload_3
      41: invokevirtual #28                 // Method org/h2/util/Permutations.next:()Z
      44: ifeq          285
      47: aload_0
      48: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
      51: astore        5
      53: aload         5
      55: arraylength
      56: istore        6
      58: iconst_0
      59: istore        7
      61: iload         7
      63: iload         6
      65: if_icmpge     87
      68: aload         5
      70: iload         7
      72: aaload
      73: astore        8
      75: aload         8
      77: iconst_0
      78: invokevirtual #31                 // Method org/h2/table/TableFilter.setUsed:(Z)V
      81: iinc          7, 1
      84: goto          61
      87: iconst_0
      88: istore        5
      90: iload         5
      92: iload_1
      93: if_icmpge     110
      96: aload_2
      97: iload         5
      99: aaload
     100: iconst_1
     101: invokevirtual #31                 // Method org/h2/table/TableFilter.setUsed:(Z)V
     104: iinc          5, 1
     107: goto          90
     110: iload_1
     111: istore        5
     113: iload         5
     115: aload_0
     116: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
     119: arraylength
     120: if_icmpge     273
     123: ldc2_w        #5                  // double -1.0d
     126: dstore        6
     128: iconst_m1
     129: istore        8
     131: iconst_0
     132: istore        9
     134: iload         9
     136: aload_0
     137: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
     140: arraylength
     141: if_icmpge     245
     144: aload_0
     145: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
     148: iload         9
     150: aaload
     151: invokevirtual #32                 // Method org/h2/table/TableFilter.isUsed:()Z
     154: ifne          239
     157: iload         5
     159: aload_0
     160: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
     163: arraylength
     164: iconst_1
     165: isub
     166: if_icmpne     176
     169: iload         9
     171: istore        8
     173: goto          245
     176: aload_2
     177: iload         5
     179: aload_0
     180: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
     183: iload         9
     185: aaload
     186: aastore
     187: new           #18                 // class org/h2/table/Plan
     190: dup
     191: aload_2
     192: iload         5
     194: iconst_1
     195: iadd
     196: aload_0
     197: getfield      #3                  // Field condition:Lorg/h2/expression/Expression;
     200: invokespecial #19                 // Method org/h2/table/Plan."<init>":([Lorg/h2/table/TableFilter;ILorg/h2/expression/Expression;)V
     203: astore        10
     205: aload         10
     207: aload_0
     208: getfield      #4                  // Field session:Lorg/h2/engine/Session;
     211: invokevirtual #33                 // Method org/h2/table/Plan.calculateCost:(Lorg/h2/engine/Session;)D
     214: dstore        11
     216: dload         6
     218: dconst_0
     219: dcmpg
     220: iflt          231
     223: dload         11
     225: dload         6
     227: dcmpg
     228: ifge          239
     231: dload         11
     233: dstore        6
     235: iload         9
     237: istore        8
     239: iinc          9, 1
     242: goto          134
     245: aload_0
     246: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
     249: iload         8
     251: aaload
     252: iconst_1
     253: invokevirtual #31                 // Method org/h2/table/TableFilter.setUsed:(Z)V
     256: aload_2
     257: iload         5
     259: aload_0
     260: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
     263: iload         8
     265: aaload
     266: aastore
     267: iinc          5, 1
     270: goto          113
     273: aload_0
     274: aload_2
     275: invokespecial #9                  // Method testPlan:([Lorg/h2/table/TableFilter;)Z
     278: pop
     279: iinc          4, 1
     282: goto          31
     285: return

  private void calculateGenetic();
    Code:
       0: aload_0
       1: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
       4: arraylength
       5: anewarray     #25                 // class org/h2/table/TableFilter
       8: astore_1
       9: aload_0
      10: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
      13: arraylength
      14: anewarray     #25                 // class org/h2/table/TableFilter
      17: astore_2
      18: iconst_0
      19: istore_3
      20: iload_3
      21: sipush        500
      24: if_icmpge     165
      27: aload_0
      28: iload_3
      29: invokespecial #27                 // Method canStop:(I)Z
      32: ifeq          38
      35: goto          165
      38: iload_3
      39: bipush        127
      41: iand
      42: ifne          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: istore        4
      52: iload         4
      54: ifne          80
      57: aload_1
      58: iconst_0
      59: aload_2
      60: iconst_0
      61: aload_0
      62: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
      65: arraylength
      66: invokestatic  #34                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      69: aload_0
      70: aload_2
      71: invokespecial #35                 // Method shuffleTwo:([Lorg/h2/table/TableFilter;)Z
      74: ifne          80
      77: iconst_1
      78: istore        4
      80: iload         4
      82: ifeq          128
      85: aload_0
      86: new           #36                 // class org/h2/util/BitField
      89: dup
      90: invokespecial #37                 // Method org/h2/util/BitField."<init>":()V
      93: putfield      #38                 // Field switched:Lorg/h2/util/BitField;
      96: aload_0
      97: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
     100: iconst_0
     101: aload_1
     102: iconst_0
     103: aload_0
     104: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
     107: arraylength
     108: invokestatic  #34                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     111: aload_0
     112: aload_1
     113: invokespecial #39                 // Method shuffleAll:([Lorg/h2/table/TableFilter;)V
     116: aload_1
     117: iconst_0
     118: aload_2
     119: iconst_0
     120: aload_0
     121: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
     124: arraylength
     125: invokestatic  #34                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     128: aload_0
     129: aload_2
     130: invokespecial #9                  // Method testPlan:([Lorg/h2/table/TableFilter;)Z
     133: ifeq          159
     136: aload_0
     137: new           #36                 // class org/h2/util/BitField
     140: dup
     141: invokespecial #37                 // Method org/h2/util/BitField."<init>":()V
     144: putfield      #38                 // Field switched:Lorg/h2/util/BitField;
     147: aload_2
     148: iconst_0
     149: aload_1
     150: iconst_0
     151: aload_0
     152: getfield      #2                  // Field filters:[Lorg/h2/table/TableFilter;
     155: arraylength
     156: invokestatic  #34                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     159: iinc          3, 1
     162: goto          20
     165: return

  private boolean testPlan(org.h2.table.TableFilter[]);
    Code:
       0: new           #18                 // class org/h2/table/Plan
       3: dup
       4: aload_1
       5: aload_1
       6: arraylength
       7: aload_0
       8: getfield      #3                  // Field condition:Lorg/h2/expression/Expression;
      11: invokespecial #19                 // Method org/h2/table/Plan."<init>":([Lorg/h2/table/TableFilter;ILorg/h2/expression/Expression;)V
      14: astore_2
      15: aload_2
      16: aload_0
      17: getfield      #4                  // Field session:Lorg/h2/engine/Session;
      20: invokevirtual #33                 // Method org/h2/table/Plan.calculateCost:(Lorg/h2/engine/Session;)D
      23: dstore_3
      24: aload_0
      25: getfield      #7                  // Field cost:D
      28: dconst_0
      29: dcmpg
      30: iflt          42
      33: dload_3
      34: aload_0
      35: getfield      #7                  // Field cost:D
      38: dcmpg
      39: ifge          54
      42: aload_0
      43: dload_3
      44: putfield      #7                  // Field cost:D
      47: aload_0
      48: aload_2
      49: putfield      #20                 // Field bestPlan:Lorg/h2/table/Plan;
      52: iconst_1
      53: ireturn
      54: iconst_0
      55: ireturn

  private void shuffleAll(org.h2.table.TableFilter[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_1
       4: arraylength
       5: iconst_1
       6: isub
       7: if_icmpge     51
      10: iload_2
      11: aload_0
      12: getfield      #16                 // Field random:Ljava/util/Random;
      15: aload_1
      16: arraylength
      17: iload_2
      18: isub
      19: invokevirtual #40                 // Method java/util/Random.nextInt:(I)I
      22: iadd
      23: istore_3
      24: iload_3
      25: iload_2
      26: if_icmpeq     45
      29: aload_1
      30: iload_2
      31: aaload
      32: astore        4
      34: aload_1
      35: iload_2
      36: aload_1
      37: iload_3
      38: aaload
      39: aastore
      40: aload_1
      41: iload_3
      42: aload         4
      44: aastore
      45: iinc          2, 1
      48: goto          2
      51: return

  private boolean shuffleTwo(org.h2.table.TableFilter[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iconst_0
       3: istore_3
       4: iconst_0
       5: istore        4
       7: iload         4
       9: bipush        20
      11: if_icmpge     96
      14: aload_0
      15: getfield      #16                 // Field random:Ljava/util/Random;
      18: aload_1
      19: arraylength
      20: invokevirtual #40                 // Method java/util/Random.nextInt:(I)I
      23: istore_2
      24: aload_0
      25: getfield      #16                 // Field random:Ljava/util/Random;
      28: aload_1
      29: arraylength
      30: invokevirtual #40                 // Method java/util/Random.nextInt:(I)I
      33: istore_3
      34: iload_2
      35: iload_3
      36: if_icmpne     42
      39: goto          90
      42: iload_2
      43: iload_3
      44: if_icmpge     55
      47: iload_2
      48: istore        5
      50: iload_3
      51: istore_2
      52: iload         5
      54: istore_3
      55: iload_2
      56: aload_1
      57: arraylength
      58: imul
      59: iload_3
      60: iadd
      61: istore        5
      63: aload_0
      64: getfield      #38                 // Field switched:Lorg/h2/util/BitField;
      67: iload         5
      69: invokevirtual #41                 // Method org/h2/util/BitField.get:(I)Z
      72: ifeq          78
      75: goto          90
      78: aload_0
      79: getfield      #38                 // Field switched:Lorg/h2/util/BitField;
      82: iload         5
      84: invokevirtual #42                 // Method org/h2/util/BitField.set:(I)V
      87: goto          96
      90: iinc          4, 1
      93: goto          7
      96: iload         4
      98: bipush        20
     100: if_icmpne     105
     103: iconst_0
     104: ireturn
     105: aload_1
     106: iload_2
     107: aaload
     108: astore        5
     110: aload_1
     111: iload_2
     112: aload_1
     113: iload_3
     114: aaload
     115: aastore
     116: aload_1
     117: iload_3
     118: aload         5
     120: aastore
     121: iconst_1
     122: ireturn

  void optimize(boolean);
    Code:
       0: iload_1
       1: ifeq          11
       4: aload_0
       5: invokespecial #43                 // Method calculateFakePlan:()V
       8: goto          22
      11: aload_0
      12: invokespecial #44                 // Method calculateBestPlan:()V
      15: aload_0
      16: getfield      #20                 // Field bestPlan:Lorg/h2/table/Plan;
      19: invokevirtual #45                 // Method org/h2/table/Plan.removeUnusableIndexConditions:()V
      22: aload_0
      23: getfield      #20                 // Field bestPlan:Lorg/h2/table/Plan;
      26: invokevirtual #46                 // Method org/h2/table/Plan.getFilters:()[Lorg/h2/table/TableFilter;
      29: astore_2
      30: aload_0
      31: aload_2
      32: iconst_0
      33: aaload
      34: putfield      #47                 // Field topFilter:Lorg/h2/table/TableFilter;
      37: iconst_0
      38: istore_3
      39: iload_3
      40: aload_2
      41: arraylength
      42: iconst_1
      43: isub
      44: if_icmpge     66
      47: aload_2
      48: iload_3
      49: aaload
      50: aload_2
      51: iload_3
      52: iconst_1
      53: iadd
      54: aaload
      55: iconst_0
      56: aconst_null
      57: invokevirtual #48                 // Method org/h2/table/TableFilter.addJoin:(Lorg/h2/table/TableFilter;ZLorg/h2/expression/Expression;)V
      60: iinc          3, 1
      63: goto          39
      66: iload_1
      67: ifeq          71
      70: return
      71: aload_2
      72: astore_3
      73: aload_3
      74: arraylength
      75: istore        4
      77: iconst_0
      78: istore        5
      80: iload         5
      82: iload         4
      84: if_icmpge     117
      87: aload_3
      88: iload         5
      90: aaload
      91: astore        6
      93: aload_0
      94: getfield      #20                 // Field bestPlan:Lorg/h2/table/Plan;
      97: aload         6
      99: invokevirtual #49                 // Method org/h2/table/Plan.getItem:(Lorg/h2/table/TableFilter;)Lorg/h2/table/PlanItem;
     102: astore        7
     104: aload         6
     106: aload         7
     108: invokevirtual #50                 // Method org/h2/table/TableFilter.setPlanItem:(Lorg/h2/table/PlanItem;)V
     111: iinc          5, 1
     114: goto          80
     117: return

  public org.h2.table.TableFilter getTopFilter();
    Code:
       0: aload_0
       1: getfield      #47                 // Field topFilter:Lorg/h2/table/TableFilter;
       4: areturn

  double getCost();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cost:D
       4: dreturn
}
