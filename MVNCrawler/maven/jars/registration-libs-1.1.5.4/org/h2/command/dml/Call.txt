Compiled from "Call.java"
public class org.h2.command.dml.Call extends org.h2.command.Prepared {
  private boolean isResultSet;

  private org.h2.expression.Expression expression;

  private org.h2.expression.Expression[] expressions;

  public org.h2.command.dml.Call(org.h2.engine.Session);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/h2/command/Prepared."<init>":(Lorg/h2/engine/Session;)V
       5: return

  public org.h2.result.ResultInterface queryMeta();
    Code:
       0: aload_0
       1: getfield      #2                  // Field isResultSet:Z
       4: ifeq          37
       7: aload_0
       8: getfield      #3                  // Field expression:Lorg/h2/expression/Expression;
      11: aload_0
      12: getfield      #4                  // Field session:Lorg/h2/engine/Session;
      15: invokevirtual #5                  // Method org/h2/expression/Expression.getExpressionColumns:(Lorg/h2/engine/Session;)[Lorg/h2/expression/Expression;
      18: astore_2
      19: new           #6                  // class org/h2/result/LocalResult
      22: dup
      23: aload_0
      24: getfield      #4                  // Field session:Lorg/h2/engine/Session;
      27: aload_2
      28: aload_2
      29: arraylength
      30: invokespecial #7                  // Method org/h2/result/LocalResult."<init>":(Lorg/h2/engine/Session;[Lorg/h2/expression/Expression;I)V
      33: astore_1
      34: goto          54
      37: new           #6                  // class org/h2/result/LocalResult
      40: dup
      41: aload_0
      42: getfield      #4                  // Field session:Lorg/h2/engine/Session;
      45: aload_0
      46: getfield      #8                  // Field expressions:[Lorg/h2/expression/Expression;
      49: iconst_1
      50: invokespecial #7                  // Method org/h2/result/LocalResult."<init>":(Lorg/h2/engine/Session;[Lorg/h2/expression/Expression;I)V
      53: astore_1
      54: aload_1
      55: invokevirtual #9                  // Method org/h2/result/LocalResult.done:()V
      58: aload_1
      59: areturn

  public int update();
    Code:
       0: aload_0
       1: getfield      #3                  // Field expression:Lorg/h2/expression/Expression;
       4: aload_0
       5: getfield      #4                  // Field session:Lorg/h2/engine/Session;
       8: invokevirtual #10                 // Method org/h2/expression/Expression.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
      11: astore_1
      12: aload_1
      13: invokevirtual #11                 // Method org/h2/value/Value.getType:()I
      16: istore_2
      17: iload_2
      18: lookupswitch  { // 3
                    -1: 57
                     0: 57
                    18: 52
               default: 59
          }
      52: aload_0
      53: invokespecial #12                 // Method org/h2/command/Prepared.update:()I
      56: ireturn
      57: iconst_0
      58: ireturn
      59: aload_1
      60: invokevirtual #13                 // Method org/h2/value/Value.getInt:()I
      63: ireturn

  public org.h2.result.ResultInterface query(int);
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #14                 // Method setCurrentRowNumber:(I)V
       5: aload_0
       6: getfield      #3                  // Field expression:Lorg/h2/expression/Expression;
       9: aload_0
      10: getfield      #4                  // Field session:Lorg/h2/engine/Session;
      13: invokevirtual #10                 // Method org/h2/expression/Expression.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
      16: astore_2
      17: aload_0
      18: getfield      #2                  // Field isResultSet:Z
      21: ifeq          46
      24: aload_2
      25: bipush        18
      27: invokevirtual #15                 // Method org/h2/value/Value.convertTo:(I)Lorg/h2/value/Value;
      30: astore_2
      31: aload_2
      32: invokevirtual #16                 // Method org/h2/value/Value.getResultSet:()Ljava/sql/ResultSet;
      35: astore_3
      36: aload_0
      37: getfield      #4                  // Field session:Lorg/h2/engine/Session;
      40: aload_3
      41: iload_1
      42: invokestatic  #17                 // Method org/h2/result/LocalResult.read:(Lorg/h2/engine/Session;Ljava/sql/ResultSet;I)Lorg/h2/result/LocalResult;
      45: areturn
      46: new           #6                  // class org/h2/result/LocalResult
      49: dup
      50: aload_0
      51: getfield      #4                  // Field session:Lorg/h2/engine/Session;
      54: aload_0
      55: getfield      #8                  // Field expressions:[Lorg/h2/expression/Expression;
      58: iconst_1
      59: invokespecial #7                  // Method org/h2/result/LocalResult."<init>":(Lorg/h2/engine/Session;[Lorg/h2/expression/Expression;I)V
      62: astore_3
      63: iconst_1
      64: anewarray     #18                 // class org/h2/value/Value
      67: dup
      68: iconst_0
      69: aload_2
      70: aastore
      71: astore        4
      73: aload_3
      74: aload         4
      76: invokevirtual #19                 // Method org/h2/result/LocalResult.addRow:([Lorg/h2/value/Value;)V
      79: aload_3
      80: invokevirtual #9                  // Method org/h2/result/LocalResult.done:()V
      83: aload_3
      84: areturn

  public void prepare();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field expression:Lorg/h2/expression/Expression;
       5: aload_0
       6: getfield      #4                  // Field session:Lorg/h2/engine/Session;
       9: invokevirtual #20                 // Method org/h2/expression/Expression.optimize:(Lorg/h2/engine/Session;)Lorg/h2/expression/Expression;
      12: putfield      #3                  // Field expression:Lorg/h2/expression/Expression;
      15: aload_0
      16: iconst_1
      17: anewarray     #21                 // class org/h2/expression/Expression
      20: dup
      21: iconst_0
      22: aload_0
      23: getfield      #3                  // Field expression:Lorg/h2/expression/Expression;
      26: aastore
      27: putfield      #8                  // Field expressions:[Lorg/h2/expression/Expression;
      30: aload_0
      31: aload_0
      32: getfield      #3                  // Field expression:Lorg/h2/expression/Expression;
      35: invokevirtual #22                 // Method org/h2/expression/Expression.getType:()I
      38: bipush        18
      40: if_icmpne     47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: putfield      #2                  // Field isResultSet:Z
      51: aload_0
      52: getfield      #2                  // Field isResultSet:Z
      55: ifeq          63
      58: aload_0
      59: iconst_1
      60: putfield      #23                 // Field prepareAlways:Z
      63: return

  public void setExpression(org.h2.expression.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field expression:Lorg/h2/expression/Expression;
       5: return

  public boolean isQuery();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isTransactional();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isReadOnly();
    Code:
       0: aload_0
       1: getfield      #3                  // Field expression:Lorg/h2/expression/Expression;
       4: getstatic     #24                 // Field org/h2/expression/ExpressionVisitor.READONLY_VISITOR:Lorg/h2/expression/ExpressionVisitor;
       7: invokevirtual #25                 // Method org/h2/expression/Expression.isEverything:(Lorg/h2/expression/ExpressionVisitor;)Z
      10: ireturn

  public int getType();
    Code:
       0: bipush        57
       2: ireturn

  public boolean isCacheable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field isResultSet:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn
}
