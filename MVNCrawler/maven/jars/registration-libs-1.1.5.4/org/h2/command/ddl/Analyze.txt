Compiled from "Analyze.java"
public class org.h2.command.ddl.Analyze extends org.h2.command.ddl.DefineCommand {
  private int sampleRows;

  private org.h2.table.Table table;

  public org.h2.command.ddl.Analyze(org.h2.engine.Session);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/h2/command/ddl/DefineCommand."<init>":(Lorg/h2/engine/Session;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #2                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      10: invokevirtual #3                  // Method org/h2/engine/Database.getSettings:()Lorg/h2/engine/DbSettings;
      13: getfield      #4                  // Field org/h2/engine/DbSettings.analyzeSample:I
      16: putfield      #5                  // Field sampleRows:I
      19: return

  public void setTable(org.h2.table.Table);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field table:Lorg/h2/table/Table;
       5: return

  public int update();
    Code:
       0: aload_0
       1: getfield      #7                  // Field session:Lorg/h2/engine/Session;
       4: iconst_1
       5: invokevirtual #8                  // Method org/h2/engine/Session.commit:(Z)V
       8: aload_0
       9: getfield      #7                  // Field session:Lorg/h2/engine/Session;
      12: invokevirtual #9                  // Method org/h2/engine/Session.getUser:()Lorg/h2/engine/User;
      15: invokevirtual #10                 // Method org/h2/engine/User.checkAdmin:()V
      18: aload_0
      19: getfield      #7                  // Field session:Lorg/h2/engine/Session;
      22: invokevirtual #2                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      25: astore_1
      26: aload_0
      27: getfield      #6                  // Field table:Lorg/h2/table/Table;
      30: ifnull        52
      33: aload_0
      34: getfield      #7                  // Field session:Lorg/h2/engine/Session;
      37: aload_0
      38: getfield      #6                  // Field table:Lorg/h2/table/Table;
      41: aload_0
      42: getfield      #5                  // Field sampleRows:I
      45: iconst_1
      46: invokestatic  #11                 // Method analyzeTable:(Lorg/h2/engine/Session;Lorg/h2/table/Table;IZ)V
      49: goto          96
      52: aload_1
      53: iconst_0
      54: invokevirtual #12                 // Method org/h2/engine/Database.getAllTablesAndViews:(Z)Ljava/util/ArrayList;
      57: invokevirtual #13                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      60: astore_2
      61: aload_2
      62: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      67: ifeq          96
      70: aload_2
      71: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      76: checkcast     #16                 // class org/h2/table/Table
      79: astore_3
      80: aload_0
      81: getfield      #7                  // Field session:Lorg/h2/engine/Session;
      84: aload_3
      85: aload_0
      86: getfield      #5                  // Field sampleRows:I
      89: iconst_1
      90: invokestatic  #11                 // Method analyzeTable:(Lorg/h2/engine/Session;Lorg/h2/table/Table;IZ)V
      93: goto          61
      96: iconst_0
      97: ireturn

  public static void analyzeTable(org.h2.engine.Session, org.h2.table.Table, int, boolean);
    Code:
       0: aload_1
       1: invokevirtual #17                 // Method org/h2/table/Table.getTableType:()Lorg/h2/table/TableType;
       4: getstatic     #18                 // Field org/h2/table/TableType.TABLE:Lorg/h2/table/TableType;
       7: if_acmpne     21
      10: aload_1
      11: invokevirtual #19                 // Method org/h2/table/Table.isHidden:()Z
      14: ifne          21
      17: aload_0
      18: ifnonnull     22
      21: return
      22: iload_3
      23: ifne          45
      26: aload_0
      27: invokevirtual #2                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      30: invokevirtual #20                 // Method org/h2/engine/Database.isSysTableLocked:()Z
      33: ifeq          37
      36: return
      37: aload_1
      38: invokevirtual #21                 // Method org/h2/table/Table.hasSelectTrigger:()Z
      41: ifeq          45
      44: return
      45: aload_1
      46: invokevirtual #22                 // Method org/h2/table/Table.isTemporary:()Z
      49: ifeq          71
      52: aload_1
      53: invokevirtual #23                 // Method org/h2/table/Table.isGlobalTemporary:()Z
      56: ifne          71
      59: aload_0
      60: aload_1
      61: invokevirtual #24                 // Method org/h2/table/Table.getName:()Ljava/lang/String;
      64: invokevirtual #25                 // Method org/h2/engine/Session.findLocalTempTable:(Ljava/lang/String;)Lorg/h2/table/Table;
      67: ifnonnull     71
      70: return
      71: aload_1
      72: invokevirtual #26                 // Method org/h2/table/Table.isLockedExclusively:()Z
      75: ifeq          87
      78: aload_1
      79: aload_0
      80: invokevirtual #27                 // Method org/h2/table/Table.isLockedExclusivelyBy:(Lorg/h2/engine/Session;)Z
      83: ifne          87
      86: return
      87: aload_0
      88: invokevirtual #9                  // Method org/h2/engine/Session.getUser:()Lorg/h2/engine/User;
      91: aload_1
      92: iconst_1
      93: invokevirtual #28                 // Method org/h2/engine/User.hasRight:(Lorg/h2/table/Table;I)Z
      96: ifne          100
      99: return
     100: aload_0
     101: invokevirtual #29                 // Method org/h2/engine/Session.getCancel:()J
     104: lconst_0
     105: lcmp
     106: ifeq          110
     109: return
     110: aload_1
     111: invokevirtual #30                 // Method org/h2/table/Table.getColumns:()[Lorg/h2/table/Column;
     114: astore        4
     116: aload         4
     118: arraylength
     119: ifne          123
     122: return
     123: aload_0
     124: invokevirtual #2                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
     127: astore        5
     129: new           #31                 // class org/h2/util/StatementBuilder
     132: dup
     133: ldc           #32                 // String SELECT
     135: invokespecial #33                 // Method org/h2/util/StatementBuilder."<init>":(Ljava/lang/String;)V
     138: astore        6
     140: aload         4
     142: astore        7
     144: aload         7
     146: arraylength
     147: istore        8
     149: iconst_0
     150: istore        9
     152: iload         9
     154: iload         8
     156: if_icmpge     232
     159: aload         7
     161: iload         9
     163: aaload
     164: astore        10
     166: aload         6
     168: ldc           #34                 // String ,
     170: invokevirtual #35                 // Method org/h2/util/StatementBuilder.appendExceptFirst:(Ljava/lang/String;)V
     173: aload         10
     175: invokevirtual #36                 // Method org/h2/table/Column.getType:()I
     178: istore        11
     180: iload         11
     182: bipush        15
     184: if_icmpeq     194
     187: iload         11
     189: bipush        16
     191: if_icmpne     205
     194: aload         6
     196: ldc           #37                 // String MAX(NULL)
     198: invokevirtual #38                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
     201: pop
     202: goto          226
     205: aload         6
     207: ldc           #39                 // String SELECTIVITY(
     209: invokevirtual #38                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
     212: aload         10
     214: invokevirtual #40                 // Method org/h2/table/Column.getSQL:()Ljava/lang/String;
     217: invokevirtual #38                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
     220: bipush        41
     222: invokevirtual #41                 // Method org/h2/util/StatementBuilder.append:(C)Lorg/h2/util/StatementBuilder;
     225: pop
     226: iinc          9, 1
     229: goto          152
     232: aload         6
     234: ldc           #42                 // String  FROM
     236: invokevirtual #38                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
     239: aload_1
     240: invokevirtual #43                 // Method org/h2/table/Table.getSQL:()Ljava/lang/String;
     243: invokevirtual #38                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
     246: pop
     247: iload_2
     248: ifle          259
     251: aload         6
     253: ldc           #44                 // String  LIMIT ? SAMPLE_SIZE ?
     255: invokevirtual #38                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
     258: pop
     259: aload         6
     261: invokevirtual #45                 // Method org/h2/util/StatementBuilder.toString:()Ljava/lang/String;
     264: astore        7
     266: aload_0
     267: aload         7
     269: invokevirtual #46                 // Method org/h2/engine/Session.prepare:(Ljava/lang/String;)Lorg/h2/command/Prepared;
     272: astore        8
     274: iload_2
     275: ifle          317
     278: aload         8
     280: invokevirtual #47                 // Method org/h2/command/Prepared.getParameters:()Ljava/util/ArrayList;
     283: astore        9
     285: aload         9
     287: iconst_0
     288: invokevirtual #48                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
     291: checkcast     #49                 // class org/h2/expression/Parameter
     294: iconst_1
     295: invokestatic  #50                 // Method org/h2/value/ValueInt.get:(I)Lorg/h2/value/ValueInt;
     298: invokevirtual #51                 // Method org/h2/expression/Parameter.setValue:(Lorg/h2/value/Value;)V
     301: aload         9
     303: iconst_1
     304: invokevirtual #48                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
     307: checkcast     #49                 // class org/h2/expression/Parameter
     310: iload_2
     311: invokestatic  #50                 // Method org/h2/value/ValueInt.get:(I)Lorg/h2/value/ValueInt;
     314: invokevirtual #51                 // Method org/h2/expression/Parameter.setValue:(Lorg/h2/value/Value;)V
     317: aload         8
     319: iconst_0
     320: invokevirtual #52                 // Method org/h2/command/Prepared.query:(I)Lorg/h2/result/ResultInterface;
     323: astore        9
     325: aload         9
     327: invokeinterface #53,  1           // InterfaceMethod org/h2/result/ResultInterface.next:()Z
     332: pop
     333: iconst_0
     334: istore        10
     336: iload         10
     338: aload         4
     340: arraylength
     341: if_icmpge     387
     344: aload         9
     346: invokeinterface #54,  1           // InterfaceMethod org/h2/result/ResultInterface.currentRow:()[Lorg/h2/value/Value;
     351: iload         10
     353: aaload
     354: astore        11
     356: aload         11
     358: getstatic     #55                 // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
     361: if_acmpeq     381
     364: aload         11
     366: invokevirtual #56                 // Method org/h2/value/Value.getInt:()I
     369: istore        12
     371: aload         4
     373: iload         10
     375: aaload
     376: iload         12
     378: invokevirtual #57                 // Method org/h2/table/Column.setSelectivity:(I)V
     381: iinc          10, 1
     384: goto          336
     387: aload         5
     389: aload_0
     390: aload_1
     391: invokevirtual #58                 // Method org/h2/engine/Database.updateMeta:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
     394: return

  public void setTop(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field sampleRows:I
       5: return

  public int getType();
    Code:
       0: bipush        21
       2: ireturn
}
