Compiled from "AlterTableDropConstraint.java"
public class org.h2.command.ddl.AlterTableDropConstraint extends org.h2.command.ddl.SchemaCommand {
  private java.lang.String constraintName;

  private final boolean ifExists;

  public org.h2.command.ddl.AlterTableDropConstraint(org.h2.engine.Session, org.h2.schema.Schema, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/h2/command/ddl/SchemaCommand."<init>":(Lorg/h2/engine/Session;Lorg/h2/schema/Schema;)V
       6: aload_0
       7: iload_3
       8: putfield      #2                  // Field ifExists:Z
      11: return

  public void setConstraintName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field constraintName:Ljava/lang/String;
       5: return

  public int update();
    Code:
       0: aload_0
       1: getfield      #4                  // Field session:Lorg/h2/engine/Session;
       4: iconst_1
       5: invokevirtual #5                  // Method org/h2/engine/Session.commit:(Z)V
       8: aload_0
       9: invokevirtual #6                  // Method getSchema:()Lorg/h2/schema/Schema;
      12: aload_0
      13: getfield      #4                  // Field session:Lorg/h2/engine/Session;
      16: aload_0
      17: getfield      #3                  // Field constraintName:Ljava/lang/String;
      20: invokevirtual #7                  // Method org/h2/schema/Schema.findConstraint:(Lorg/h2/engine/Session;Ljava/lang/String;)Lorg/h2/constraint/Constraint;
      23: astore_1
      24: aload_1
      25: ifnonnull     45
      28: aload_0
      29: getfield      #2                  // Field ifExists:Z
      32: ifne          92
      35: ldc           #8                  // int 90057
      37: aload_0
      38: getfield      #3                  // Field constraintName:Ljava/lang/String;
      41: invokestatic  #9                  // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      44: athrow
      45: aload_0
      46: getfield      #4                  // Field session:Lorg/h2/engine/Session;
      49: invokevirtual #10                 // Method org/h2/engine/Session.getUser:()Lorg/h2/engine/User;
      52: aload_1
      53: invokevirtual #11                 // Method org/h2/constraint/Constraint.getTable:()Lorg/h2/table/Table;
      56: bipush        15
      58: invokevirtual #12                 // Method org/h2/engine/User.checkRight:(Lorg/h2/table/Table;I)V
      61: aload_0
      62: getfield      #4                  // Field session:Lorg/h2/engine/Session;
      65: invokevirtual #10                 // Method org/h2/engine/Session.getUser:()Lorg/h2/engine/User;
      68: aload_1
      69: invokevirtual #13                 // Method org/h2/constraint/Constraint.getRefTable:()Lorg/h2/table/Table;
      72: bipush        15
      74: invokevirtual #12                 // Method org/h2/engine/User.checkRight:(Lorg/h2/table/Table;I)V
      77: aload_0
      78: getfield      #4                  // Field session:Lorg/h2/engine/Session;
      81: invokevirtual #14                 // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      84: aload_0
      85: getfield      #4                  // Field session:Lorg/h2/engine/Session;
      88: aload_1
      89: invokevirtual #15                 // Method org/h2/engine/Database.removeSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
      92: iconst_0
      93: ireturn

  public int getType();
    Code:
       0: bipush        14
       2: ireturn
}
