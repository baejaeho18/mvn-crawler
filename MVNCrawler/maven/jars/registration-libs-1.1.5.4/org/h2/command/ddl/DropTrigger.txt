Compiled from "DropTrigger.java"
public class org.h2.command.ddl.DropTrigger extends org.h2.command.ddl.SchemaCommand {
  private java.lang.String triggerName;

  private boolean ifExists;

  public org.h2.command.ddl.DropTrigger(org.h2.engine.Session, org.h2.schema.Schema);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/h2/command/ddl/SchemaCommand."<init>":(Lorg/h2/engine/Session;Lorg/h2/schema/Schema;)V
       6: return

  public void setIfExists(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field ifExists:Z
       5: return

  public void setTriggerName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field triggerName:Ljava/lang/String;
       5: return

  public int update();
    Code:
       0: aload_0
       1: getfield      #4                  // Field session:Lorg/h2/engine/Session;
       4: iconst_1
       5: invokevirtual #5                  // Method org/h2/engine/Session.commit:(Z)V
       8: aload_0
       9: getfield      #4                  // Field session:Lorg/h2/engine/Session;
      12: invokevirtual #6                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      15: astore_1
      16: aload_0
      17: invokevirtual #7                  // Method getSchema:()Lorg/h2/schema/Schema;
      20: aload_0
      21: getfield      #3                  // Field triggerName:Ljava/lang/String;
      24: invokevirtual #8                  // Method org/h2/schema/Schema.findTrigger:(Ljava/lang/String;)Lorg/h2/schema/TriggerObject;
      27: astore_2
      28: aload_2
      29: ifnonnull     49
      32: aload_0
      33: getfield      #2                  // Field ifExists:Z
      36: ifne          76
      39: ldc           #9                  // int 90042
      41: aload_0
      42: getfield      #3                  // Field triggerName:Ljava/lang/String;
      45: invokestatic  #10                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      48: athrow
      49: aload_2
      50: invokevirtual #11                 // Method org/h2/schema/TriggerObject.getTable:()Lorg/h2/table/Table;
      53: astore_3
      54: aload_0
      55: getfield      #4                  // Field session:Lorg/h2/engine/Session;
      58: invokevirtual #12                 // Method org/h2/engine/Session.getUser:()Lorg/h2/engine/User;
      61: aload_3
      62: bipush        15
      64: invokevirtual #13                 // Method org/h2/engine/User.checkRight:(Lorg/h2/table/Table;I)V
      67: aload_1
      68: aload_0
      69: getfield      #4                  // Field session:Lorg/h2/engine/Session;
      72: aload_2
      73: invokevirtual #14                 // Method org/h2/engine/Database.removeSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
      76: iconst_0
      77: ireturn

  public int getType();
    Code:
       0: bipush        45
       2: ireturn
}
