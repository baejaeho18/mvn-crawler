Compiled from "CreateView.java"
public class org.h2.command.ddl.CreateView extends org.h2.command.ddl.SchemaCommand {
  private org.h2.command.dml.Query select;

  private java.lang.String viewName;

  private boolean ifNotExists;

  private java.lang.String selectSQL;

  private java.lang.String[] columnNames;

  private java.lang.String comment;

  private boolean orReplace;

  private boolean force;

  private boolean isTableExpression;

  public org.h2.command.ddl.CreateView(org.h2.engine.Session, org.h2.schema.Schema);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/h2/command/ddl/SchemaCommand."<init>":(Lorg/h2/engine/Session;Lorg/h2/schema/Schema;)V
       6: return

  public void setViewName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field viewName:Ljava/lang/String;
       5: return

  public void setSelect(org.h2.command.dml.Query);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field select:Lorg/h2/command/dml/Query;
       5: return

  public void setIfNotExists(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field ifNotExists:Z
       5: return

  public void setSelectSQL(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field selectSQL:Ljava/lang/String;
       5: return

  public void setColumnNames(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field columnNames:[Ljava/lang/String;
       5: return

  public void setComment(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field comment:Ljava/lang/String;
       5: return

  public void setOrReplace(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field orReplace:Z
       5: return

  public void setForce(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field force:Z
       5: return

  public void setTableExpression(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field isTableExpression:Z
       5: return

  public int update();
    Code:
       0: aload_0
       1: getfield      #11                 // Field session:Lorg/h2/engine/Session;
       4: iconst_1
       5: invokevirtual #12                 // Method org/h2/engine/Session.commit:(Z)V
       8: aload_0
       9: getfield      #11                 // Field session:Lorg/h2/engine/Session;
      12: invokevirtual #13                 // Method org/h2/engine/Session.getUser:()Lorg/h2/engine/User;
      15: invokevirtual #14                 // Method org/h2/engine/User.checkAdmin:()V
      18: aload_0
      19: getfield      #11                 // Field session:Lorg/h2/engine/Session;
      22: invokevirtual #15                 // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      25: astore_1
      26: aconst_null
      27: astore_2
      28: aload_0
      29: invokevirtual #16                 // Method getSchema:()Lorg/h2/schema/Schema;
      32: aload_0
      33: getfield      #11                 // Field session:Lorg/h2/engine/Session;
      36: aload_0
      37: getfield      #2                  // Field viewName:Ljava/lang/String;
      40: invokevirtual #17                 // Method org/h2/schema/Schema.findTableOrView:(Lorg/h2/engine/Session;Ljava/lang/String;)Lorg/h2/table/Table;
      43: astore_3
      44: aload_3
      45: ifnull        89
      48: aload_0
      49: getfield      #4                  // Field ifNotExists:Z
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_0
      58: getfield      #8                  // Field orReplace:Z
      61: ifeq          74
      64: getstatic     #18                 // Field org/h2/table/TableType.VIEW:Lorg/h2/table/TableType;
      67: aload_3
      68: invokevirtual #19                 // Method org/h2/table/Table.getTableType:()Lorg/h2/table/TableType;
      71: if_acmpeq     84
      74: ldc           #20                 // int 90038
      76: aload_0
      77: getfield      #2                  // Field viewName:Ljava/lang/String;
      80: invokestatic  #21                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      83: athrow
      84: aload_3
      85: checkcast     #22                 // class org/h2/table/TableView
      88: astore_2
      89: aload_0
      90: invokevirtual #23                 // Method getObjectId:()I
      93: istore        4
      95: aload_0
      96: getfield      #3                  // Field select:Lorg/h2/command/dml/Query;
      99: ifnonnull     111
     102: aload_0
     103: getfield      #5                  // Field selectSQL:Ljava/lang/String;
     106: astore        5
     108: goto          148
     111: aload_0
     112: getfield      #3                  // Field select:Lorg/h2/command/dml/Query;
     115: invokevirtual #24                 // Method org/h2/command/dml/Query.getParameters:()Ljava/util/ArrayList;
     118: astore        6
     120: aload         6
     122: ifnull        139
     125: aload         6
     127: invokevirtual #25                 // Method java/util/ArrayList.isEmpty:()Z
     130: ifne          139
     133: ldc           #26                 // String parameters in views
     135: invokestatic  #27                 // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
     138: athrow
     139: aload_0
     140: getfield      #3                  // Field select:Lorg/h2/command/dml/Query;
     143: invokevirtual #28                 // Method org/h2/command/dml/Query.getPlanSQL:()Ljava/lang/String;
     146: astore        5
     148: aconst_null
     149: astore        6
     151: aconst_null
     152: astore        7
     154: aload_0
     155: getfield      #6                  // Field columnNames:[Ljava/lang/String;
     158: ifnull        241
     161: aload_0
     162: getfield      #6                  // Field columnNames:[Ljava/lang/String;
     165: arraylength
     166: anewarray     #29                 // class org/h2/table/Column
     169: astore        6
     171: aload_0
     172: getfield      #6                  // Field columnNames:[Ljava/lang/String;
     175: arraylength
     176: anewarray     #29                 // class org/h2/table/Column
     179: astore        7
     181: iconst_0
     182: istore        8
     184: iload         8
     186: aload_0
     187: getfield      #6                  // Field columnNames:[Ljava/lang/String;
     190: arraylength
     191: if_icmpge     241
     194: aload         6
     196: iload         8
     198: new           #29                 // class org/h2/table/Column
     201: dup
     202: aload_0
     203: getfield      #6                  // Field columnNames:[Ljava/lang/String;
     206: iload         8
     208: aaload
     209: iconst_m1
     210: invokespecial #30                 // Method org/h2/table/Column."<init>":(Ljava/lang/String;I)V
     213: aastore
     214: aload         7
     216: iload         8
     218: new           #29                 // class org/h2/table/Column
     221: dup
     222: aload_0
     223: getfield      #6                  // Field columnNames:[Ljava/lang/String;
     226: iload         8
     228: aaload
     229: bipush        13
     231: invokespecial #30                 // Method org/h2/table/Column."<init>":(Ljava/lang/String;I)V
     234: aastore
     235: iinc          8, 1
     238: goto          184
     241: aload_2
     242: ifnonnull     322
     245: aload_0
     246: getfield      #10                 // Field isTableExpression:Z
     249: ifeq          285
     252: aload_0
     253: invokevirtual #16                 // Method getSchema:()Lorg/h2/schema/Schema;
     256: iload         4
     258: aload_0
     259: getfield      #2                  // Field viewName:Ljava/lang/String;
     262: aload         5
     264: aconst_null
     265: aload         7
     267: aload_0
     268: getfield      #11                 // Field session:Lorg/h2/engine/Session;
     271: iconst_0
     272: aload_0
     273: getfield      #10                 // Field isTableExpression:Z
     276: iconst_1
     277: aload_1
     278: invokestatic  #31                 // Method org/h2/table/TableView.createTableViewMaybeRecursive:(Lorg/h2/schema/Schema;ILjava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;[Lorg/h2/table/Column;Lorg/h2/engine/Session;ZZZLorg/h2/engine/Database;)Lorg/h2/table/TableView;
     281: astore_2
     282: goto          344
     285: new           #22                 // class org/h2/table/TableView
     288: dup
     289: aload_0
     290: invokevirtual #16                 // Method getSchema:()Lorg/h2/schema/Schema;
     293: iload         4
     295: aload_0
     296: getfield      #2                  // Field viewName:Ljava/lang/String;
     299: aload         5
     301: aconst_null
     302: aload         6
     304: aload_0
     305: getfield      #11                 // Field session:Lorg/h2/engine/Session;
     308: iconst_0
     309: iconst_0
     310: aload_0
     311: getfield      #10                 // Field isTableExpression:Z
     314: iconst_1
     315: invokespecial #32                 // Method org/h2/table/TableView."<init>":(Lorg/h2/schema/Schema;ILjava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;[Lorg/h2/table/Column;Lorg/h2/engine/Session;ZZZZ)V
     318: astore_2
     319: goto          344
     322: aload_2
     323: aload         5
     325: aload         6
     327: aload_0
     328: getfield      #11                 // Field session:Lorg/h2/engine/Session;
     331: iconst_0
     332: aload_0
     333: getfield      #9                  // Field force:Z
     336: iconst_0
     337: invokevirtual #33                 // Method org/h2/table/TableView.replace:(Ljava/lang/String;[Lorg/h2/table/Column;Lorg/h2/engine/Session;ZZZ)V
     340: aload_2
     341: invokevirtual #34                 // Method org/h2/table/TableView.setModified:()V
     344: aload_0
     345: getfield      #7                  // Field comment:Ljava/lang/String;
     348: ifnull        359
     351: aload_2
     352: aload_0
     353: getfield      #7                  // Field comment:Ljava/lang/String;
     356: invokevirtual #35                 // Method org/h2/table/TableView.setComment:(Ljava/lang/String;)V
     359: aload_3
     360: ifnonnull     383
     363: aload_1
     364: aload_0
     365: getfield      #11                 // Field session:Lorg/h2/engine/Session;
     368: aload_2
     369: invokevirtual #36                 // Method org/h2/engine/Database.addSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
     372: aload_1
     373: aload_0
     374: getfield      #11                 // Field session:Lorg/h2/engine/Session;
     377: invokevirtual #37                 // Method org/h2/engine/Database.unlockMeta:(Lorg/h2/engine/Session;)V
     380: goto          392
     383: aload_1
     384: aload_0
     385: getfield      #11                 // Field session:Lorg/h2/engine/Session;
     388: aload_2
     389: invokevirtual #38                 // Method org/h2/engine/Database.updateMeta:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
     392: iconst_0
     393: ireturn

  public int getType();
    Code:
       0: bipush        34
       2: ireturn
}
