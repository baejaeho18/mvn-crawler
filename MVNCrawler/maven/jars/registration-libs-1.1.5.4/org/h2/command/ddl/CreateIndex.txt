Compiled from "CreateIndex.java"
public class org.h2.command.ddl.CreateIndex extends org.h2.command.ddl.SchemaCommand {
  private java.lang.String tableName;

  private java.lang.String indexName;

  private org.h2.table.IndexColumn[] indexColumns;

  private boolean primaryKey;

  private boolean unique;

  private boolean hash;

  private boolean spatial;

  private boolean affinity;

  private boolean ifTableExists;

  private boolean ifNotExists;

  private java.lang.String comment;

  public org.h2.command.ddl.CreateIndex(org.h2.engine.Session, org.h2.schema.Schema);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/h2/command/ddl/SchemaCommand."<init>":(Lorg/h2/engine/Session;Lorg/h2/schema/Schema;)V
       6: return

  public void setIfTableExists(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field ifTableExists:Z
       5: return

  public void setIfNotExists(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field ifNotExists:Z
       5: return

  public void setTableName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field tableName:Ljava/lang/String;
       5: return

  public void setIndexName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field indexName:Ljava/lang/String;
       5: return

  public void setIndexColumns(org.h2.table.IndexColumn[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field indexColumns:[Lorg/h2/table/IndexColumn;
       5: return

  public int update();
    Code:
       0: aload_0
       1: getfield      #7                  // Field transactional:Z
       4: ifne          15
       7: aload_0
       8: getfield      #8                  // Field session:Lorg/h2/engine/Session;
      11: iconst_1
      12: invokevirtual #9                  // Method org/h2/engine/Session.commit:(Z)V
      15: aload_0
      16: getfield      #8                  // Field session:Lorg/h2/engine/Session;
      19: invokevirtual #10                 // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      22: astore_1
      23: aload_1
      24: invokevirtual #11                 // Method org/h2/engine/Database.isPersistent:()Z
      27: istore_2
      28: aload_0
      29: invokevirtual #12                 // Method getSchema:()Lorg/h2/schema/Schema;
      32: aload_0
      33: getfield      #8                  // Field session:Lorg/h2/engine/Session;
      36: aload_0
      37: getfield      #4                  // Field tableName:Ljava/lang/String;
      40: invokevirtual #13                 // Method org/h2/schema/Schema.findTableOrView:(Lorg/h2/engine/Session;Ljava/lang/String;)Lorg/h2/table/Table;
      43: astore_3
      44: aload_3
      45: ifnonnull     67
      48: aload_0
      49: getfield      #2                  // Field ifTableExists:Z
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: ldc           #14                 // int 42102
      59: aload_0
      60: getfield      #4                  // Field tableName:Ljava/lang/String;
      63: invokestatic  #15                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      66: athrow
      67: aload_0
      68: invokevirtual #12                 // Method getSchema:()Lorg/h2/schema/Schema;
      71: aload_0
      72: getfield      #8                  // Field session:Lorg/h2/engine/Session;
      75: aload_0
      76: getfield      #5                  // Field indexName:Ljava/lang/String;
      79: invokevirtual #16                 // Method org/h2/schema/Schema.findIndex:(Lorg/h2/engine/Session;Ljava/lang/String;)Lorg/h2/index/Index;
      82: ifnull        104
      85: aload_0
      86: getfield      #3                  // Field ifNotExists:Z
      89: ifeq          94
      92: iconst_0
      93: ireturn
      94: ldc           #17                 // int 42111
      96: aload_0
      97: getfield      #5                  // Field indexName:Ljava/lang/String;
     100: invokestatic  #15                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
     103: athrow
     104: aload_0
     105: getfield      #8                  // Field session:Lorg/h2/engine/Session;
     108: invokevirtual #18                 // Method org/h2/engine/Session.getUser:()Lorg/h2/engine/User;
     111: aload_3
     112: bipush        15
     114: invokevirtual #19                 // Method org/h2/engine/User.checkRight:(Lorg/h2/table/Table;I)V
     117: aload_3
     118: aload_0
     119: getfield      #8                  // Field session:Lorg/h2/engine/Session;
     122: iconst_1
     123: iconst_1
     124: invokevirtual #20                 // Method org/h2/table/Table.lock:(Lorg/h2/engine/Session;ZZ)Z
     127: pop
     128: aload_3
     129: invokevirtual #21                 // Method org/h2/table/Table.isPersistIndexes:()Z
     132: ifne          137
     135: iconst_0
     136: istore_2
     137: aload_0
     138: invokevirtual #22                 // Method getObjectId:()I
     141: istore        4
     143: aload_0
     144: getfield      #5                  // Field indexName:Ljava/lang/String;
     147: ifnonnull     196
     150: aload_0
     151: getfield      #23                 // Field primaryKey:Z
     154: ifeq          178
     157: aload_0
     158: aload_3
     159: invokevirtual #24                 // Method org/h2/table/Table.getSchema:()Lorg/h2/schema/Schema;
     162: aload_0
     163: getfield      #8                  // Field session:Lorg/h2/engine/Session;
     166: aload_3
     167: ldc           #25                 // String PRIMARY_KEY_
     169: invokevirtual #26                 // Method org/h2/schema/Schema.getUniqueIndexName:(Lorg/h2/engine/Session;Lorg/h2/table/Table;Ljava/lang/String;)Ljava/lang/String;
     172: putfield      #5                  // Field indexName:Ljava/lang/String;
     175: goto          196
     178: aload_0
     179: aload_3
     180: invokevirtual #24                 // Method org/h2/table/Table.getSchema:()Lorg/h2/schema/Schema;
     183: aload_0
     184: getfield      #8                  // Field session:Lorg/h2/engine/Session;
     187: aload_3
     188: ldc           #27                 // String INDEX_
     190: invokevirtual #26                 // Method org/h2/schema/Schema.getUniqueIndexName:(Lorg/h2/engine/Session;Lorg/h2/table/Table;Ljava/lang/String;)Ljava/lang/String;
     193: putfield      #5                  // Field indexName:Ljava/lang/String;
     196: aload_0
     197: getfield      #23                 // Field primaryKey:Z
     200: ifeq          229
     203: aload_3
     204: invokevirtual #28                 // Method org/h2/table/Table.findPrimaryKey:()Lorg/h2/index/Index;
     207: ifnull        216
     210: ldc           #29                 // int 90017
     212: invokestatic  #30                 // Method org/h2/message/DbException.get:(I)Lorg/h2/message/DbException;
     215: athrow
     216: iload_2
     217: aload_0
     218: getfield      #31                 // Field hash:Z
     221: invokestatic  #32                 // Method org/h2/index/IndexType.createPrimaryKey:(ZZ)Lorg/h2/index/IndexType;
     224: astore        5
     226: goto          278
     229: aload_0
     230: getfield      #33                 // Field unique:Z
     233: ifeq          249
     236: iload_2
     237: aload_0
     238: getfield      #31                 // Field hash:Z
     241: invokestatic  #34                 // Method org/h2/index/IndexType.createUnique:(ZZ)Lorg/h2/index/IndexType;
     244: astore        5
     246: goto          278
     249: aload_0
     250: getfield      #35                 // Field affinity:Z
     253: ifeq          264
     256: invokestatic  #36                 // Method org/h2/index/IndexType.createAffinity:()Lorg/h2/index/IndexType;
     259: astore        5
     261: goto          278
     264: iload_2
     265: aload_0
     266: getfield      #31                 // Field hash:Z
     269: aload_0
     270: getfield      #37                 // Field spatial:Z
     273: invokestatic  #38                 // Method org/h2/index/IndexType.createNonUnique:(ZZZ)Lorg/h2/index/IndexType;
     276: astore        5
     278: aload_0
     279: getfield      #6                  // Field indexColumns:[Lorg/h2/table/IndexColumn;
     282: aload_3
     283: invokestatic  #39                 // Method org/h2/table/IndexColumn.mapColumns:([Lorg/h2/table/IndexColumn;Lorg/h2/table/Table;)V
     286: aload_3
     287: aload_0
     288: getfield      #8                  // Field session:Lorg/h2/engine/Session;
     291: aload_0
     292: getfield      #5                  // Field indexName:Ljava/lang/String;
     295: iload         4
     297: aload_0
     298: getfield      #6                  // Field indexColumns:[Lorg/h2/table/IndexColumn;
     301: aload         5
     303: aload_0
     304: getfield      #40                 // Field create:Z
     307: aload_0
     308: getfield      #41                 // Field comment:Ljava/lang/String;
     311: invokevirtual #42                 // Method org/h2/table/Table.addIndex:(Lorg/h2/engine/Session;Ljava/lang/String;I[Lorg/h2/table/IndexColumn;Lorg/h2/index/IndexType;ZLjava/lang/String;)Lorg/h2/index/Index;
     314: pop
     315: iconst_0
     316: ireturn

  public void setPrimaryKey(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field primaryKey:Z
       5: return

  public void setUnique(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #33                 // Field unique:Z
       5: return

  public void setHash(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #31                 // Field hash:Z
       5: return

  public void setSpatial(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #37                 // Field spatial:Z
       5: return

  public void setAffinity(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #35                 // Field affinity:Z
       5: return

  public void setComment(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field comment:Ljava/lang/String;
       5: return

  public int getType();
    Code:
       0: bipush        25
       2: ireturn
}
