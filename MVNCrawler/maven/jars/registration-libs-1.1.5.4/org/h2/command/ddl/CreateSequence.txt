Compiled from "CreateSequence.java"
public class org.h2.command.ddl.CreateSequence extends org.h2.command.ddl.SchemaCommand {
  private java.lang.String sequenceName;

  private boolean ifNotExists;

  private boolean cycle;

  private org.h2.expression.Expression minValue;

  private org.h2.expression.Expression maxValue;

  private org.h2.expression.Expression start;

  private org.h2.expression.Expression increment;

  private org.h2.expression.Expression cacheSize;

  private boolean belongsToTable;

  public org.h2.command.ddl.CreateSequence(org.h2.engine.Session, org.h2.schema.Schema);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/h2/command/ddl/SchemaCommand."<init>":(Lorg/h2/engine/Session;Lorg/h2/schema/Schema;)V
       6: return

  public void setSequenceName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field sequenceName:Ljava/lang/String;
       5: return

  public void setIfNotExists(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field ifNotExists:Z
       5: return

  public void setCycle(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field cycle:Z
       5: return

  public int update();
    Code:
       0: aload_0
       1: getfield      #5                  // Field session:Lorg/h2/engine/Session;
       4: iconst_1
       5: invokevirtual #6                  // Method org/h2/engine/Session.commit:(Z)V
       8: aload_0
       9: getfield      #5                  // Field session:Lorg/h2/engine/Session;
      12: invokevirtual #7                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      15: astore_1
      16: aload_0
      17: invokevirtual #8                  // Method getSchema:()Lorg/h2/schema/Schema;
      20: aload_0
      21: getfield      #2                  // Field sequenceName:Ljava/lang/String;
      24: invokevirtual #9                  // Method org/h2/schema/Schema.findSequence:(Ljava/lang/String;)Lorg/h2/schema/Sequence;
      27: ifnull        49
      30: aload_0
      31: getfield      #3                  // Field ifNotExists:Z
      34: ifeq          39
      37: iconst_0
      38: ireturn
      39: ldc           #10                 // int 90035
      41: aload_0
      42: getfield      #2                  // Field sequenceName:Ljava/lang/String;
      45: invokestatic  #11                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      48: athrow
      49: aload_0
      50: invokevirtual #12                 // Method getObjectId:()I
      53: istore_2
      54: aload_0
      55: aload_0
      56: getfield      #13                 // Field start:Lorg/h2/expression/Expression;
      59: invokespecial #14                 // Method getLong:(Lorg/h2/expression/Expression;)Ljava/lang/Long;
      62: astore_3
      63: aload_0
      64: aload_0
      65: getfield      #15                 // Field increment:Lorg/h2/expression/Expression;
      68: invokespecial #14                 // Method getLong:(Lorg/h2/expression/Expression;)Ljava/lang/Long;
      71: astore        4
      73: aload_0
      74: aload_0
      75: getfield      #16                 // Field cacheSize:Lorg/h2/expression/Expression;
      78: invokespecial #14                 // Method getLong:(Lorg/h2/expression/Expression;)Ljava/lang/Long;
      81: astore        5
      83: aload_0
      84: aload_0
      85: getfield      #17                 // Field minValue:Lorg/h2/expression/Expression;
      88: invokespecial #14                 // Method getLong:(Lorg/h2/expression/Expression;)Ljava/lang/Long;
      91: astore        6
      93: aload_0
      94: aload_0
      95: getfield      #18                 // Field maxValue:Lorg/h2/expression/Expression;
      98: invokespecial #14                 // Method getLong:(Lorg/h2/expression/Expression;)Ljava/lang/Long;
     101: astore        7
     103: new           #19                 // class org/h2/schema/Sequence
     106: dup
     107: aload_0
     108: invokevirtual #8                  // Method getSchema:()Lorg/h2/schema/Schema;
     111: iload_2
     112: aload_0
     113: getfield      #2                  // Field sequenceName:Ljava/lang/String;
     116: aload_3
     117: aload         4
     119: aload         5
     121: aload         6
     123: aload         7
     125: aload_0
     126: getfield      #4                  // Field cycle:Z
     129: aload_0
     130: getfield      #20                 // Field belongsToTable:Z
     133: invokespecial #21                 // Method org/h2/schema/Sequence."<init>":(Lorg/h2/schema/Schema;ILjava/lang/String;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;ZZ)V
     136: astore        8
     138: aload_1
     139: aload_0
     140: getfield      #5                  // Field session:Lorg/h2/engine/Session;
     143: aload         8
     145: invokevirtual #22                 // Method org/h2/engine/Database.addSchemaObject:(Lorg/h2/engine/Session;Lorg/h2/schema/SchemaObject;)V
     148: iconst_0
     149: ireturn

  private java.lang.Long getLong(org.h2.expression.Expression);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_1
       7: aload_0
       8: getfield      #5                  // Field session:Lorg/h2/engine/Session;
      11: invokevirtual #23                 // Method org/h2/expression/Expression.optimize:(Lorg/h2/engine/Session;)Lorg/h2/expression/Expression;
      14: aload_0
      15: getfield      #5                  // Field session:Lorg/h2/engine/Session;
      18: invokevirtual #24                 // Method org/h2/expression/Expression.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
      21: invokevirtual #25                 // Method org/h2/value/Value.getLong:()J
      24: invokestatic  #26                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      27: areturn

  public void setStartWith(org.h2.expression.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field start:Lorg/h2/expression/Expression;
       5: return

  public void setIncrement(org.h2.expression.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field increment:Lorg/h2/expression/Expression;
       5: return

  public void setMinValue(org.h2.expression.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field minValue:Lorg/h2/expression/Expression;
       5: return

  public void setMaxValue(org.h2.expression.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field maxValue:Lorg/h2/expression/Expression;
       5: return

  public void setBelongsToTable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field belongsToTable:Z
       5: return

  public void setCacheSize(org.h2.expression.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field cacheSize:Lorg/h2/expression/Expression;
       5: return

  public int getType();
    Code:
       0: bipush        29
       2: ireturn
}
