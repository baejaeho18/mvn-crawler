Compiled from "CreateUser.java"
public class org.h2.command.ddl.CreateUser extends org.h2.command.ddl.DefineCommand {
  private java.lang.String userName;

  private boolean admin;

  private org.h2.expression.Expression password;

  private org.h2.expression.Expression salt;

  private org.h2.expression.Expression hash;

  private boolean ifNotExists;

  private java.lang.String comment;

  public org.h2.command.ddl.CreateUser(org.h2.engine.Session);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/h2/command/ddl/DefineCommand."<init>":(Lorg/h2/engine/Session;)V
       5: return

  public void setIfNotExists(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field ifNotExists:Z
       5: return

  public void setUserName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field userName:Ljava/lang/String;
       5: return

  public void setPassword(org.h2.expression.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field password:Lorg/h2/expression/Expression;
       5: return

  static void setSaltAndHash(org.h2.engine.User, org.h2.engine.Session, org.h2.expression.Expression, org.h2.expression.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #5                  // Method getByteArray:(Lorg/h2/engine/Session;Lorg/h2/expression/Expression;)[B
       6: aload_1
       7: aload_3
       8: invokestatic  #5                  // Method getByteArray:(Lorg/h2/engine/Session;Lorg/h2/expression/Expression;)[B
      11: invokevirtual #6                  // Method org/h2/engine/User.setSaltAndHash:([B[B)V
      14: return

  private static byte[] getByteArray(org.h2.engine.Session, org.h2.expression.Expression);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #7                  // Method org/h2/expression/Expression.optimize:(Lorg/h2/engine/Session;)Lorg/h2/expression/Expression;
       5: aload_0
       6: invokevirtual #8                  // Method org/h2/expression/Expression.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
       9: invokevirtual #9                  // Method org/h2/value/Value.getString:()Ljava/lang/String;
      12: astore_2
      13: aload_2
      14: ifnonnull     23
      17: iconst_0
      18: newarray       byte
      20: goto          27
      23: aload_2
      24: invokestatic  #10                 // Method org/h2/util/StringUtils.convertHexToBytes:(Ljava/lang/String;)[B
      27: areturn

  static void setPassword(org.h2.engine.User, org.h2.engine.Session, org.h2.expression.Expression);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #7                  // Method org/h2/expression/Expression.optimize:(Lorg/h2/engine/Session;)Lorg/h2/expression/Expression;
       5: aload_1
       6: invokevirtual #8                  // Method org/h2/expression/Expression.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
       9: invokevirtual #9                  // Method org/h2/value/Value.getString:()Ljava/lang/String;
      12: astore_3
      13: aload_3
      14: ifnonnull     23
      17: iconst_0
      18: newarray       char
      20: goto          27
      23: aload_3
      24: invokevirtual #11                 // Method java/lang/String.toCharArray:()[C
      27: astore        4
      29: aload_0
      30: invokevirtual #12                 // Method org/h2/engine/User.getName:()Ljava/lang/String;
      33: astore        6
      35: aload         6
      37: invokevirtual #13                 // Method java/lang/String.length:()I
      40: ifne          57
      43: aload         4
      45: arraylength
      46: ifne          57
      49: iconst_0
      50: newarray       byte
      52: astore        5
      54: goto          66
      57: aload         6
      59: aload         4
      61: invokestatic  #14                 // Method org/h2/security/SHA256.getKeyPasswordHash:(Ljava/lang/String;[C)[B
      64: astore        5
      66: aload_0
      67: aload         5
      69: invokevirtual #15                 // Method org/h2/engine/User.setUserPasswordHash:([B)V
      72: return

  public int update();
    Code:
       0: aload_0
       1: getfield      #16                 // Field session:Lorg/h2/engine/Session;
       4: invokevirtual #17                 // Method org/h2/engine/Session.getUser:()Lorg/h2/engine/User;
       7: invokevirtual #18                 // Method org/h2/engine/User.checkAdmin:()V
      10: aload_0
      11: getfield      #16                 // Field session:Lorg/h2/engine/Session;
      14: iconst_1
      15: invokevirtual #19                 // Method org/h2/engine/Session.commit:(Z)V
      18: aload_0
      19: getfield      #16                 // Field session:Lorg/h2/engine/Session;
      22: invokevirtual #20                 // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      25: astore_1
      26: aload_1
      27: aload_0
      28: getfield      #3                  // Field userName:Ljava/lang/String;
      31: invokevirtual #21                 // Method org/h2/engine/Database.findRole:(Ljava/lang/String;)Lorg/h2/engine/Role;
      34: ifnull        47
      37: ldc           #22                 // int 90069
      39: aload_0
      40: getfield      #3                  // Field userName:Ljava/lang/String;
      43: invokestatic  #23                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      46: athrow
      47: aload_1
      48: aload_0
      49: getfield      #3                  // Field userName:Ljava/lang/String;
      52: invokevirtual #24                 // Method org/h2/engine/Database.findUser:(Ljava/lang/String;)Lorg/h2/engine/User;
      55: ifnull        77
      58: aload_0
      59: getfield      #2                  // Field ifNotExists:Z
      62: ifeq          67
      65: iconst_0
      66: ireturn
      67: ldc           #25                 // int 90033
      69: aload_0
      70: getfield      #3                  // Field userName:Ljava/lang/String;
      73: invokestatic  #23                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      76: athrow
      77: aload_0
      78: invokevirtual #26                 // Method getObjectId:()I
      81: istore_2
      82: new           #27                 // class org/h2/engine/User
      85: dup
      86: aload_1
      87: iload_2
      88: aload_0
      89: getfield      #3                  // Field userName:Ljava/lang/String;
      92: iconst_0
      93: invokespecial #28                 // Method org/h2/engine/User."<init>":(Lorg/h2/engine/Database;ILjava/lang/String;Z)V
      96: astore_3
      97: aload_3
      98: aload_0
      99: getfield      #29                 // Field admin:Z
     102: invokevirtual #30                 // Method org/h2/engine/User.setAdmin:(Z)V
     105: aload_3
     106: aload_0
     107: getfield      #31                 // Field comment:Ljava/lang/String;
     110: invokevirtual #32                 // Method org/h2/engine/User.setComment:(Ljava/lang/String;)V
     113: aload_0
     114: getfield      #33                 // Field hash:Lorg/h2/expression/Expression;
     117: ifnull        146
     120: aload_0
     121: getfield      #34                 // Field salt:Lorg/h2/expression/Expression;
     124: ifnull        146
     127: aload_3
     128: aload_0
     129: getfield      #16                 // Field session:Lorg/h2/engine/Session;
     132: aload_0
     133: getfield      #34                 // Field salt:Lorg/h2/expression/Expression;
     136: aload_0
     137: getfield      #33                 // Field hash:Lorg/h2/expression/Expression;
     140: invokestatic  #35                 // Method setSaltAndHash:(Lorg/h2/engine/User;Lorg/h2/engine/Session;Lorg/h2/expression/Expression;Lorg/h2/expression/Expression;)V
     143: goto          172
     146: aload_0
     147: getfield      #4                  // Field password:Lorg/h2/expression/Expression;
     150: ifnull        168
     153: aload_3
     154: aload_0
     155: getfield      #16                 // Field session:Lorg/h2/engine/Session;
     158: aload_0
     159: getfield      #4                  // Field password:Lorg/h2/expression/Expression;
     162: invokestatic  #36                 // Method setPassword:(Lorg/h2/engine/User;Lorg/h2/engine/Session;Lorg/h2/expression/Expression;)V
     165: goto          172
     168: invokestatic  #37                 // Method org/h2/message/DbException.throwInternalError:()Ljava/lang/RuntimeException;
     171: athrow
     172: aload_1
     173: aload_0
     174: getfield      #16                 // Field session:Lorg/h2/engine/Session;
     177: aload_3
     178: invokevirtual #38                 // Method org/h2/engine/Database.addDatabaseObject:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
     181: iconst_0
     182: ireturn

  public void setSalt(org.h2.expression.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field salt:Lorg/h2/expression/Expression;
       5: return

  public void setHash(org.h2.expression.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field hash:Lorg/h2/expression/Expression;
       5: return

  public void setAdmin(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #29                 // Field admin:Z
       5: return

  public void setComment(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field comment:Ljava/lang/String;
       5: return

  public int getType();
    Code:
       0: bipush        32
       2: ireturn
}
