Compiled from "CreateSchema.java"
public class org.h2.command.ddl.CreateSchema extends org.h2.command.ddl.DefineCommand {
  private java.lang.String schemaName;

  private java.lang.String authorization;

  private boolean ifNotExists;

  private java.util.ArrayList<java.lang.String> tableEngineParams;

  public org.h2.command.ddl.CreateSchema(org.h2.engine.Session);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/h2/command/ddl/DefineCommand."<init>":(Lorg/h2/engine/Session;)V
       5: return

  public void setIfNotExists(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field ifNotExists:Z
       5: return

  public int update();
    Code:
       0: aload_0
       1: getfield      #3                  // Field session:Lorg/h2/engine/Session;
       4: invokevirtual #4                  // Method org/h2/engine/Session.getUser:()Lorg/h2/engine/User;
       7: invokevirtual #5                  // Method org/h2/engine/User.checkSchemaAdmin:()V
      10: aload_0
      11: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      14: iconst_1
      15: invokevirtual #6                  // Method org/h2/engine/Session.commit:(Z)V
      18: aload_0
      19: getfield      #3                  // Field session:Lorg/h2/engine/Session;
      22: invokevirtual #7                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      25: astore_1
      26: aload_1
      27: aload_0
      28: getfield      #8                  // Field authorization:Ljava/lang/String;
      31: invokevirtual #9                  // Method org/h2/engine/Database.getUser:(Ljava/lang/String;)Lorg/h2/engine/User;
      34: astore_2
      35: aload_1
      36: invokevirtual #10                 // Method org/h2/engine/Database.isStarting:()Z
      39: ifne          46
      42: aload_2
      43: invokevirtual #5                  // Method org/h2/engine/User.checkSchemaAdmin:()V
      46: aload_1
      47: aload_0
      48: getfield      #11                 // Field schemaName:Ljava/lang/String;
      51: invokevirtual #12                 // Method org/h2/engine/Database.findSchema:(Ljava/lang/String;)Lorg/h2/schema/Schema;
      54: ifnull        76
      57: aload_0
      58: getfield      #2                  // Field ifNotExists:Z
      61: ifeq          66
      64: iconst_0
      65: ireturn
      66: ldc           #13                 // int 90078
      68: aload_0
      69: getfield      #11                 // Field schemaName:Ljava/lang/String;
      72: invokestatic  #14                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      75: athrow
      76: aload_0
      77: invokevirtual #15                 // Method getObjectId:()I
      80: istore_3
      81: new           #16                 // class org/h2/schema/Schema
      84: dup
      85: aload_1
      86: iload_3
      87: aload_0
      88: getfield      #11                 // Field schemaName:Ljava/lang/String;
      91: aload_2
      92: iconst_0
      93: invokespecial #17                 // Method org/h2/schema/Schema."<init>":(Lorg/h2/engine/Database;ILjava/lang/String;Lorg/h2/engine/User;Z)V
      96: astore        4
      98: aload         4
     100: aload_0
     101: getfield      #18                 // Field tableEngineParams:Ljava/util/ArrayList;
     104: invokevirtual #19                 // Method org/h2/schema/Schema.setTableEngineParams:(Ljava/util/ArrayList;)V
     107: aload_1
     108: aload_0
     109: getfield      #3                  // Field session:Lorg/h2/engine/Session;
     112: aload         4
     114: invokevirtual #20                 // Method org/h2/engine/Database.addDatabaseObject:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
     117: iconst_0
     118: ireturn

  public void setSchemaName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field schemaName:Ljava/lang/String;
       5: return

  public void setAuthorization(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field authorization:Ljava/lang/String;
       5: return

  public void setTableEngineParams(java.util.ArrayList<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field tableEngineParams:Ljava/util/ArrayList;
       5: return

  public int getType();
    Code:
       0: bipush        28
       2: ireturn
}
