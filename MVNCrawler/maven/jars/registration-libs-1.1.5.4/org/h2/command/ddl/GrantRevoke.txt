Compiled from "GrantRevoke.java"
public class org.h2.command.ddl.GrantRevoke extends org.h2.command.ddl.DefineCommand {
  private java.util.ArrayList<java.lang.String> roleNames;

  private int operationType;

  private int rightMask;

  private final java.util.ArrayList<org.h2.table.Table> tables;

  private org.h2.schema.Schema schema;

  private org.h2.engine.RightOwner grantee;

  public org.h2.command.ddl.GrantRevoke(org.h2.engine.Session);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/h2/command/ddl/DefineCommand."<init>":(Lorg/h2/engine/Session;)V
       5: aload_0
       6: invokestatic  #2                  // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
       9: putfield      #3                  // Field tables:Ljava/util/ArrayList;
      12: return

  public void setOperationType(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field operationType:I
       5: return

  public void addRight(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #5                  // Field rightMask:I
       5: iload_1
       6: ior
       7: putfield      #5                  // Field rightMask:I
      10: return

  public void addRoleName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field roleNames:Ljava/util/ArrayList;
       4: ifnonnull     14
       7: aload_0
       8: invokestatic  #2                  // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
      11: putfield      #6                  // Field roleNames:Ljava/util/ArrayList;
      14: aload_0
      15: getfield      #6                  // Field roleNames:Ljava/util/ArrayList;
      18: aload_1
      19: invokevirtual #7                  // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      22: pop
      23: return

  public void setGranteeName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field session:Lorg/h2/engine/Session;
       4: invokevirtual #9                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
       7: astore_2
       8: aload_0
       9: aload_2
      10: aload_1
      11: invokevirtual #10                 // Method org/h2/engine/Database.findUser:(Ljava/lang/String;)Lorg/h2/engine/User;
      14: putfield      #11                 // Field grantee:Lorg/h2/engine/RightOwner;
      17: aload_0
      18: getfield      #11                 // Field grantee:Lorg/h2/engine/RightOwner;
      21: ifnonnull     47
      24: aload_0
      25: aload_2
      26: aload_1
      27: invokevirtual #12                 // Method org/h2/engine/Database.findRole:(Ljava/lang/String;)Lorg/h2/engine/Role;
      30: putfield      #11                 // Field grantee:Lorg/h2/engine/RightOwner;
      33: aload_0
      34: getfield      #11                 // Field grantee:Lorg/h2/engine/RightOwner;
      37: ifnonnull     47
      40: ldc           #13                 // int 90071
      42: aload_1
      43: invokestatic  #14                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      46: athrow
      47: return

  public int update();
    Code:
       0: aload_0
       1: getfield      #8                  // Field session:Lorg/h2/engine/Session;
       4: invokevirtual #15                 // Method org/h2/engine/Session.getUser:()Lorg/h2/engine/User;
       7: invokevirtual #16                 // Method org/h2/engine/User.checkAdmin:()V
      10: aload_0
      11: getfield      #8                  // Field session:Lorg/h2/engine/Session;
      14: iconst_1
      15: invokevirtual #17                 // Method org/h2/engine/Session.commit:(Z)V
      18: aload_0
      19: getfield      #8                  // Field session:Lorg/h2/engine/Session;
      22: invokevirtual #9                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      25: astore_1
      26: aload_0
      27: getfield      #6                  // Field roleNames:Ljava/util/ArrayList;
      30: ifnull        147
      33: aload_0
      34: getfield      #6                  // Field roleNames:Ljava/util/ArrayList;
      37: invokevirtual #18                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      40: astore_2
      41: aload_2
      42: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          144
      50: aload_2
      51: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #21                 // class java/lang/String
      59: astore_3
      60: aload_1
      61: aload_3
      62: invokevirtual #12                 // Method org/h2/engine/Database.findRole:(Ljava/lang/String;)Lorg/h2/engine/Role;
      65: astore        4
      67: aload         4
      69: ifnonnull     79
      72: ldc           #22                 // int 90070
      74: aload_3
      75: invokestatic  #14                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      78: athrow
      79: aload_0
      80: getfield      #4                  // Field operationType:I
      83: bipush        49
      85: if_icmpne     97
      88: aload_0
      89: aload         4
      91: invokespecial #23                 // Method grantRole:(Lorg/h2/engine/Role;)V
      94: goto          141
      97: aload_0
      98: getfield      #4                  // Field operationType:I
     101: bipush        50
     103: if_icmpne     115
     106: aload_0
     107: aload         4
     109: invokespecial #24                 // Method revokeRole:(Lorg/h2/engine/Role;)V
     112: goto          141
     115: new           #25                 // class java/lang/StringBuilder
     118: dup
     119: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     122: ldc           #27                 // String type=
     124: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload_0
     128: getfield      #4                  // Field operationType:I
     131: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     134: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     137: invokestatic  #31                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
     140: pop
     141: goto          41
     144: goto          205
     147: aload_0
     148: getfield      #4                  // Field operationType:I
     151: bipush        49
     153: if_icmpne     163
     156: aload_0
     157: invokespecial #32                 // Method grantRight:()V
     160: goto          205
     163: aload_0
     164: getfield      #4                  // Field operationType:I
     167: bipush        50
     169: if_icmpne     179
     172: aload_0
     173: invokespecial #33                 // Method revokeRight:()V
     176: goto          205
     179: new           #25                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #27                 // String type=
     188: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: getfield      #4                  // Field operationType:I
     195: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     198: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     201: invokestatic  #31                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
     204: pop
     205: iconst_0
     206: ireturn

  private void grantRight();
    Code:
       0: aload_0
       1: getfield      #34                 // Field schema:Lorg/h2/schema/Schema;
       4: ifnull        15
       7: aload_0
       8: aload_0
       9: getfield      #34                 // Field schema:Lorg/h2/schema/Schema;
      12: invokespecial #35                 // Method grantRight:(Lorg/h2/engine/DbObject;)V
      15: aload_0
      16: getfield      #3                  // Field tables:Ljava/util/ArrayList;
      19: invokevirtual #18                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      22: astore_1
      23: aload_1
      24: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          50
      32: aload_1
      33: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #36                 // class org/h2/table/Table
      41: astore_2
      42: aload_0
      43: aload_2
      44: invokespecial #35                 // Method grantRight:(Lorg/h2/engine/DbObject;)V
      47: goto          23
      50: return

  private void grantRight(org.h2.engine.DbObject);
    Code:
       0: aload_0
       1: getfield      #8                  // Field session:Lorg/h2/engine/Session;
       4: invokevirtual #9                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
       7: astore_2
       8: aload_0
       9: getfield      #11                 // Field grantee:Lorg/h2/engine/RightOwner;
      12: aload_1
      13: invokevirtual #37                 // Method org/h2/engine/RightOwner.getRightForObject:(Lorg/h2/engine/DbObject;)Lorg/h2/engine/Right;
      16: astore_3
      17: aload_3
      18: ifnonnull     68
      21: aload_0
      22: invokevirtual #38                 // Method getObjectId:()I
      25: istore        4
      27: new           #39                 // class org/h2/engine/Right
      30: dup
      31: aload_2
      32: iload         4
      34: aload_0
      35: getfield      #11                 // Field grantee:Lorg/h2/engine/RightOwner;
      38: aload_0
      39: getfield      #5                  // Field rightMask:I
      42: aload_1
      43: invokespecial #40                 // Method org/h2/engine/Right."<init>":(Lorg/h2/engine/Database;ILorg/h2/engine/RightOwner;ILorg/h2/engine/DbObject;)V
      46: astore_3
      47: aload_0
      48: getfield      #11                 // Field grantee:Lorg/h2/engine/RightOwner;
      51: aload_1
      52: aload_3
      53: invokevirtual #41                 // Method org/h2/engine/RightOwner.grantRight:(Lorg/h2/engine/DbObject;Lorg/h2/engine/Right;)V
      56: aload_2
      57: aload_0
      58: getfield      #8                  // Field session:Lorg/h2/engine/Session;
      61: aload_3
      62: invokevirtual #42                 // Method org/h2/engine/Database.addDatabaseObject:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
      65: goto          90
      68: aload_3
      69: aload_3
      70: invokevirtual #43                 // Method org/h2/engine/Right.getRightMask:()I
      73: aload_0
      74: getfield      #5                  // Field rightMask:I
      77: ior
      78: invokevirtual #44                 // Method org/h2/engine/Right.setRightMask:(I)V
      81: aload_2
      82: aload_0
      83: getfield      #8                  // Field session:Lorg/h2/engine/Session;
      86: aload_3
      87: invokevirtual #45                 // Method org/h2/engine/Database.updateMeta:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
      90: return

  private void grantRole(org.h2.engine.Role);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #11                 // Field grantee:Lorg/h2/engine/RightOwner;
       5: if_acmpeq     20
       8: aload_0
       9: getfield      #11                 // Field grantee:Lorg/h2/engine/RightOwner;
      12: aload_1
      13: invokevirtual #46                 // Method org/h2/engine/RightOwner.isRoleGranted:(Lorg/h2/engine/Role;)Z
      16: ifeq          20
      19: return
      20: aload_0
      21: getfield      #11                 // Field grantee:Lorg/h2/engine/RightOwner;
      24: instanceof    #47                 // class org/h2/engine/Role
      27: ifeq          56
      30: aload_0
      31: getfield      #11                 // Field grantee:Lorg/h2/engine/RightOwner;
      34: checkcast     #47                 // class org/h2/engine/Role
      37: astore_2
      38: aload_1
      39: aload_2
      40: invokevirtual #48                 // Method org/h2/engine/Role.isRoleGranted:(Lorg/h2/engine/Role;)Z
      43: ifeq          56
      46: ldc           #49                 // int 90074
      48: aload_1
      49: invokevirtual #50                 // Method org/h2/engine/Role.getSQL:()Ljava/lang/String;
      52: invokestatic  #14                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      55: athrow
      56: aload_0
      57: getfield      #8                  // Field session:Lorg/h2/engine/Session;
      60: invokevirtual #9                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      63: astore_2
      64: aload_0
      65: invokevirtual #38                 // Method getObjectId:()I
      68: istore_3
      69: new           #39                 // class org/h2/engine/Right
      72: dup
      73: aload_2
      74: iload_3
      75: aload_0
      76: getfield      #11                 // Field grantee:Lorg/h2/engine/RightOwner;
      79: aload_1
      80: invokespecial #51                 // Method org/h2/engine/Right."<init>":(Lorg/h2/engine/Database;ILorg/h2/engine/RightOwner;Lorg/h2/engine/Role;)V
      83: astore        4
      85: aload_2
      86: aload_0
      87: getfield      #8                  // Field session:Lorg/h2/engine/Session;
      90: aload         4
      92: invokevirtual #42                 // Method org/h2/engine/Database.addDatabaseObject:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
      95: aload_0
      96: getfield      #11                 // Field grantee:Lorg/h2/engine/RightOwner;
      99: aload_1
     100: aload         4
     102: invokevirtual #52                 // Method org/h2/engine/RightOwner.grantRole:(Lorg/h2/engine/Role;Lorg/h2/engine/Right;)V
     105: return

  private void revokeRight();
    Code:
       0: aload_0
       1: getfield      #34                 // Field schema:Lorg/h2/schema/Schema;
       4: ifnull        15
       7: aload_0
       8: aload_0
       9: getfield      #34                 // Field schema:Lorg/h2/schema/Schema;
      12: invokespecial #53                 // Method revokeRight:(Lorg/h2/engine/DbObject;)V
      15: aload_0
      16: getfield      #3                  // Field tables:Ljava/util/ArrayList;
      19: invokevirtual #18                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      22: astore_1
      23: aload_1
      24: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          50
      32: aload_1
      33: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #36                 // class org/h2/table/Table
      41: astore_2
      42: aload_0
      43: aload_2
      44: invokespecial #53                 // Method revokeRight:(Lorg/h2/engine/DbObject;)V
      47: goto          23
      50: return

  private void revokeRight(org.h2.engine.DbObject);
    Code:
       0: aload_0
       1: getfield      #11                 // Field grantee:Lorg/h2/engine/RightOwner;
       4: aload_1
       5: invokevirtual #37                 // Method org/h2/engine/RightOwner.getRightForObject:(Lorg/h2/engine/DbObject;)Lorg/h2/engine/Right;
       8: astore_2
       9: aload_2
      10: ifnonnull     14
      13: return
      14: aload_2
      15: invokevirtual #43                 // Method org/h2/engine/Right.getRightMask:()I
      18: istore_3
      19: iload_3
      20: aload_0
      21: getfield      #5                  // Field rightMask:I
      24: iconst_m1
      25: ixor
      26: iand
      27: istore        4
      29: aload_0
      30: getfield      #8                  // Field session:Lorg/h2/engine/Session;
      33: invokevirtual #9                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      36: astore        5
      38: iload         4
      40: ifne          56
      43: aload         5
      45: aload_0
      46: getfield      #8                  // Field session:Lorg/h2/engine/Session;
      49: aload_2
      50: invokevirtual #54                 // Method org/h2/engine/Database.removeDatabaseObject:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
      53: goto          72
      56: aload_2
      57: iload         4
      59: invokevirtual #44                 // Method org/h2/engine/Right.setRightMask:(I)V
      62: aload         5
      64: aload_0
      65: getfield      #8                  // Field session:Lorg/h2/engine/Session;
      68: aload_2
      69: invokevirtual #45                 // Method org/h2/engine/Database.updateMeta:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
      72: return

  private void revokeRole(org.h2.engine.Role);
    Code:
       0: aload_0
       1: getfield      #11                 // Field grantee:Lorg/h2/engine/RightOwner;
       4: aload_1
       5: invokevirtual #55                 // Method org/h2/engine/RightOwner.getRightForRole:(Lorg/h2/engine/Role;)Lorg/h2/engine/Right;
       8: astore_2
       9: aload_2
      10: ifnonnull     14
      13: return
      14: aload_0
      15: getfield      #8                  // Field session:Lorg/h2/engine/Session;
      18: invokevirtual #9                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      21: astore_3
      22: aload_3
      23: aload_0
      24: getfield      #8                  // Field session:Lorg/h2/engine/Session;
      27: aload_2
      28: invokevirtual #54                 // Method org/h2/engine/Database.removeDatabaseObject:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
      31: return

  public boolean isTransactional();
    Code:
       0: iconst_0
       1: ireturn

  public void addTable(org.h2.table.Table);
    Code:
       0: aload_0
       1: getfield      #3                  // Field tables:Ljava/util/ArrayList;
       4: aload_1
       5: invokevirtual #7                  // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public void setSchema(org.h2.schema.Schema);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field schema:Lorg/h2/schema/Schema;
       5: return

  public int getType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field operationType:I
       4: ireturn

  public boolean isRoleMode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field roleNames:Ljava/util/ArrayList;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isRightMode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field rightMask:I
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn
}
