Compiled from "PageBtreeIndex.java"
public class org.h2.index.PageBtreeIndex extends org.h2.index.PageIndex {
  private static int memoryChangeRequired;

  private final org.h2.store.PageStore store;

  private final org.h2.table.RegularTable tableData;

  private final boolean needRebuild;

  private long rowCount;

  private int memoryPerPage;

  private int memoryCount;

  public org.h2.index.PageBtreeIndex(org.h2.table.RegularTable, int, java.lang.String, org.h2.table.IndexColumn[], org.h2.index.IndexType, boolean, org.h2.engine.Session);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/index/PageIndex."<init>":()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: aload_3
       8: aload         4
      10: aload         5
      12: invokevirtual #2                  // Method initBaseIndex:(Lorg/h2/table/Table;ILjava/lang/String;[Lorg/h2/table/IndexColumn;Lorg/h2/index/IndexType;)V
      15: aload_0
      16: getfield      #3                  // Field database:Lorg/h2/engine/Database;
      19: invokevirtual #4                  // Method org/h2/engine/Database.isStarting:()Z
      22: ifne          35
      25: iload         6
      27: ifeq          35
      30: aload         4
      32: invokestatic  #5                  // Method checkIndexColumnTypes:([Lorg/h2/table/IndexColumn;)V
      35: aload_0
      36: aload_1
      37: putfield      #6                  // Field tableData:Lorg/h2/table/RegularTable;
      40: aload_0
      41: getfield      #3                  // Field database:Lorg/h2/engine/Database;
      44: invokevirtual #7                  // Method org/h2/engine/Database.isPersistent:()Z
      47: ifeq          54
      50: iload_2
      51: ifge          77
      54: new           #8                  // class java/lang/StringBuilder
      57: dup
      58: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      61: ldc           #10                 // String
      63: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_3
      67: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokestatic  #13                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      76: athrow
      77: aload_0
      78: aload_0
      79: getfield      #3                  // Field database:Lorg/h2/engine/Database;
      82: invokevirtual #14                 // Method org/h2/engine/Database.getPageStore:()Lorg/h2/store/PageStore;
      85: putfield      #15                 // Field store:Lorg/h2/store/PageStore;
      88: aload_0
      89: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
      92: aload_0
      93: invokevirtual #16                 // Method org/h2/store/PageStore.addIndex:(Lorg/h2/index/PageIndex;)V
      96: iload         6
      98: ifeq          155
     101: aload_0
     102: aload_0
     103: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
     106: invokevirtual #17                 // Method org/h2/store/PageStore.allocatePage:()I
     109: putfield      #18                 // Field rootPageId:I
     112: aload_0
     113: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
     116: aload_0
     117: aload         7
     119: invokevirtual #19                 // Method org/h2/store/PageStore.addMeta:(Lorg/h2/index/PageIndex;Lorg/h2/engine/Session;)V
     122: aload_0
     123: aload_0
     124: getfield      #18                 // Field rootPageId:I
     127: iconst_0
     128: invokestatic  #20                 // Method org/h2/index/PageBtreeLeaf.create:(Lorg/h2/index/PageBtreeIndex;II)Lorg/h2/index/PageBtreeLeaf;
     131: astore        8
     133: aload_0
     134: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
     137: aload         8
     139: aconst_null
     140: invokevirtual #21                 // Method org/h2/store/PageStore.logUndo:(Lorg/h2/store/Page;Lorg/h2/store/Data;)V
     143: aload_0
     144: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
     147: aload         8
     149: invokevirtual #22                 // Method org/h2/store/PageStore.update:(Lorg/h2/store/Page;)V
     152: goto          187
     155: aload_0
     156: aload_0
     157: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
     160: iload_2
     161: invokevirtual #23                 // Method org/h2/store/PageStore.getRootPageId:(I)I
     164: putfield      #18                 // Field rootPageId:I
     167: aload_0
     168: aload_0
     169: getfield      #18                 // Field rootPageId:I
     172: invokevirtual #24                 // Method getPage:(I)Lorg/h2/index/PageBtree;
     175: astore        8
     177: aload_0
     178: aload         8
     180: invokevirtual #25                 // Method org/h2/index/PageBtree.getRowCount:()I
     183: i2l
     184: putfield      #26                 // Field rowCount:J
     187: aload_0
     188: iload         6
     190: ifne          212
     193: aload_0
     194: getfield      #26                 // Field rowCount:J
     197: lconst_0
     198: lcmp
     199: ifne          216
     202: aload_0
     203: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
     206: invokevirtual #27                 // Method org/h2/store/PageStore.isRecoveryRunning:()Z
     209: ifeq          216
     212: iconst_1
     213: goto          217
     216: iconst_0
     217: putfield      #28                 // Field needRebuild:Z
     220: aload_0
     221: getfield      #29                 // Field trace:Lorg/h2/message/Trace;
     224: invokevirtual #30                 // Method org/h2/message/Trace.isDebugEnabled:()Z
     227: ifeq          260
     230: aload_0
     231: getfield      #29                 // Field trace:Lorg/h2/message/Trace;
     234: ldc           #31                 // String opened {0} rows: {1}
     236: iconst_2
     237: anewarray     #32                 // class java/lang/Object
     240: dup
     241: iconst_0
     242: aload_0
     243: invokevirtual #33                 // Method getName:()Ljava/lang/String;
     246: aastore
     247: dup
     248: iconst_1
     249: aload_0
     250: getfield      #26                 // Field rowCount:J
     253: invokestatic  #34                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     256: aastore
     257: invokevirtual #35                 // Method org/h2/message/Trace.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     260: aload_0
     261: sipush        184
     264: aload_0
     265: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
     268: invokevirtual #36                 // Method org/h2/store/PageStore.getPageSize:()I
     271: iadd
     272: iconst_2
     273: ishr
     274: putfield      #37                 // Field memoryPerPage:I
     277: return

  public void add(org.h2.engine.Session, org.h2.result.Row);
    Code:
       0: aload_0
       1: getfield      #29                 // Field trace:Lorg/h2/message/Trace;
       4: invokevirtual #30                 // Method org/h2/message/Trace.isDebugEnabled:()Z
       7: ifeq          34
      10: aload_0
      11: getfield      #29                 // Field trace:Lorg/h2/message/Trace;
      14: ldc           #38                 // String {0} add {1}
      16: iconst_2
      17: anewarray     #32                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: invokevirtual #33                 // Method getName:()Ljava/lang/String;
      26: aastore
      27: dup
      28: iconst_1
      29: aload_2
      30: aastore
      31: invokevirtual #35                 // Method org/h2/message/Trace.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      34: aload_0
      35: aload_2
      36: invokespecial #39                 // Method getSearchRow:(Lorg/h2/result/Row;)Lorg/h2/result/SearchRow;
      39: astore_3
      40: aload_0
      41: aload_3
      42: invokespecial #40                 // Method addRow:(Lorg/h2/result/SearchRow;)V
      45: aload_0
      46: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
      49: invokevirtual #41                 // Method org/h2/store/PageStore.incrementChangeCount:()V
      52: goto          67
      55: astore        4
      57: aload_0
      58: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
      61: invokevirtual #41                 // Method org/h2/store/PageStore.incrementChangeCount:()V
      64: aload         4
      66: athrow
      67: return
    Exception table:
       from    to  target type
          40    45    55   any
          55    57    55   any

  private void addRow(org.h2.result.SearchRow);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #18                 // Field rootPageId:I
       5: invokevirtual #24                 // Method getPage:(I)Lorg/h2/index/PageBtree;
       8: astore_2
       9: aload_2
      10: aload_1
      11: invokevirtual #42                 // Method org/h2/index/PageBtree.addRowTry:(Lorg/h2/result/SearchRow;)I
      14: istore_3
      15: iload_3
      16: iconst_m1
      17: if_icmpne     23
      20: goto          193
      23: aload_0
      24: getfield      #29                 // Field trace:Lorg/h2/message/Trace;
      27: invokevirtual #30                 // Method org/h2/message/Trace.isDebugEnabled:()Z
      30: ifeq          53
      33: aload_0
      34: getfield      #29                 // Field trace:Lorg/h2/message/Trace;
      37: ldc           #43                 // String split {0}
      39: iconst_1
      40: anewarray     #32                 // class java/lang/Object
      43: dup
      44: iconst_0
      45: iload_3
      46: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      49: aastore
      50: invokevirtual #35                 // Method org/h2/message/Trace.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      53: aload_2
      54: iload_3
      55: iconst_1
      56: isub
      57: invokevirtual #45                 // Method org/h2/index/PageBtree.getRow:(I)Lorg/h2/result/SearchRow;
      60: astore        4
      62: aload_0
      63: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
      66: aload_2
      67: aload_2
      68: getfield      #46                 // Field org/h2/index/PageBtree.data:Lorg/h2/store/Data;
      71: invokevirtual #21                 // Method org/h2/store/PageStore.logUndo:(Lorg/h2/store/Page;Lorg/h2/store/Data;)V
      74: aload_2
      75: astore        5
      77: aload_2
      78: iload_3
      79: invokevirtual #47                 // Method org/h2/index/PageBtree.split:(I)Lorg/h2/index/PageBtree;
      82: astore        6
      84: aload_0
      85: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
      88: aload         6
      90: aconst_null
      91: invokevirtual #21                 // Method org/h2/store/PageStore.logUndo:(Lorg/h2/store/Page;Lorg/h2/store/Data;)V
      94: aload_0
      95: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
      98: invokevirtual #17                 // Method org/h2/store/PageStore.allocatePage:()I
     101: istore        7
     103: aload         5
     105: iload         7
     107: invokevirtual #48                 // Method org/h2/index/PageBtree.setPageId:(I)V
     110: aload         5
     112: aload_0
     113: getfield      #18                 // Field rootPageId:I
     116: invokevirtual #49                 // Method org/h2/index/PageBtree.setParentPageId:(I)V
     119: aload         6
     121: aload_0
     122: getfield      #18                 // Field rootPageId:I
     125: invokevirtual #49                 // Method org/h2/index/PageBtree.setParentPageId:(I)V
     128: aload_0
     129: aload_0
     130: getfield      #18                 // Field rootPageId:I
     133: iconst_0
     134: invokestatic  #50                 // Method org/h2/index/PageBtreeNode.create:(Lorg/h2/index/PageBtreeIndex;II)Lorg/h2/index/PageBtreeNode;
     137: astore        8
     139: aload_0
     140: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
     143: aload         8
     145: aconst_null
     146: invokevirtual #21                 // Method org/h2/store/PageStore.logUndo:(Lorg/h2/store/Page;Lorg/h2/store/Data;)V
     149: aload         8
     151: aload         5
     153: aload         4
     155: aload         6
     157: invokevirtual #51                 // Method org/h2/index/PageBtreeNode.init:(Lorg/h2/index/PageBtree;Lorg/h2/result/SearchRow;Lorg/h2/index/PageBtree;)V
     160: aload_0
     161: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
     164: aload         5
     166: invokevirtual #22                 // Method org/h2/store/PageStore.update:(Lorg/h2/store/Page;)V
     169: aload_0
     170: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
     173: aload         6
     175: invokevirtual #22                 // Method org/h2/store/PageStore.update:(Lorg/h2/store/Page;)V
     178: aload_0
     179: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
     182: aload         8
     184: invokevirtual #22                 // Method org/h2/store/PageStore.update:(Lorg/h2/store/Page;)V
     187: aload         8
     189: astore_2
     190: goto          0
     193: aload_0
     194: invokespecial #52                 // Method invalidateRowCount:()V
     197: aload_0
     198: dup
     199: getfield      #26                 // Field rowCount:J
     202: lconst_1
     203: ladd
     204: putfield      #26                 // Field rowCount:J
     207: return

  private org.h2.result.SearchRow getSearchRow(org.h2.result.Row);
    Code:
       0: aload_0
       1: getfield      #53                 // Field table:Lorg/h2/table/Table;
       4: aload_0
       5: getfield      #54                 // Field columns:[Lorg/h2/table/Column;
       8: arraylength
       9: iconst_1
      10: if_icmpne     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: invokevirtual #55                 // Method org/h2/table/Table.getTemplateSimpleRow:(Z)Lorg/h2/result/SearchRow;
      21: astore_2
      22: aload_2
      23: aload_1
      24: invokeinterface #56,  2           // InterfaceMethod org/h2/result/SearchRow.setKeyAndVersion:(Lorg/h2/result/SearchRow;)V
      29: aload_0
      30: getfield      #54                 // Field columns:[Lorg/h2/table/Column;
      33: astore_3
      34: aload_3
      35: arraylength
      36: istore        4
      38: iconst_0
      39: istore        5
      41: iload         5
      43: iload         4
      45: if_icmpge     83
      48: aload_3
      49: iload         5
      51: aaload
      52: astore        6
      54: aload         6
      56: invokevirtual #57                 // Method org/h2/table/Column.getColumnId:()I
      59: istore        7
      61: aload_2
      62: iload         7
      64: aload_1
      65: iload         7
      67: invokeinterface #58,  2           // InterfaceMethod org/h2/result/Row.getValue:(I)Lorg/h2/value/Value;
      72: invokeinterface #59,  3           // InterfaceMethod org/h2/result/SearchRow.setValue:(ILorg/h2/value/Value;)V
      77: iinc          5, 1
      80: goto          41
      83: aload_2
      84: areturn

  org.h2.index.PageBtree getPage(int);
    Code:
       0: aload_0
       1: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
       4: iload_1
       5: invokevirtual #60                 // Method org/h2/store/PageStore.getPage:(I)Lorg/h2/store/Page;
       8: astore_2
       9: aload_2
      10: ifnonnull     39
      13: aload_0
      14: iload_1
      15: iconst_0
      16: invokestatic  #20                 // Method org/h2/index/PageBtreeLeaf.create:(Lorg/h2/index/PageBtreeIndex;II)Lorg/h2/index/PageBtreeLeaf;
      19: astore_3
      20: aload_0
      21: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
      24: aload_3
      25: aconst_null
      26: invokevirtual #21                 // Method org/h2/store/PageStore.logUndo:(Lorg/h2/store/Page;Lorg/h2/store/Data;)V
      29: aload_0
      30: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
      33: aload_3
      34: invokevirtual #22                 // Method org/h2/store/PageStore.update:(Lorg/h2/store/Page;)V
      37: aload_3
      38: areturn
      39: aload_2
      40: instanceof    #61                 // class org/h2/index/PageBtree
      43: ifne          71
      46: ldc           #62                 // int 90030
      48: new           #8                  // class java/lang/StringBuilder
      51: dup
      52: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #10                 // String
      57: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_2
      61: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      64: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokestatic  #64                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      70: athrow
      71: aload_2
      72: checkcast     #61                 // class org/h2/index/PageBtree
      75: areturn

  public boolean canGetFirstOrLast();
    Code:
       0: iconst_1
       1: ireturn

  public org.h2.index.Cursor findNext(org.h2.engine.Session, org.h2.result.SearchRow, org.h2.result.SearchRow);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: aload_3
       5: invokespecial #65                 // Method find:(Lorg/h2/engine/Session;Lorg/h2/result/SearchRow;ZLorg/h2/result/SearchRow;)Lorg/h2/index/Cursor;
       8: areturn

  public org.h2.index.Cursor find(org.h2.engine.Session, org.h2.result.SearchRow, org.h2.result.SearchRow);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: aload_3
       5: invokespecial #65                 // Method find:(Lorg/h2/engine/Session;Lorg/h2/result/SearchRow;ZLorg/h2/result/SearchRow;)Lorg/h2/index/Cursor;
       8: areturn

  private org.h2.index.Cursor find(org.h2.engine.Session, org.h2.result.SearchRow, boolean, org.h2.result.SearchRow);
    Code:
       0: getstatic     #66                 // Field org/h2/engine/SysProperties.CHECK:Z
       3: ifeq          19
       6: aload_0
       7: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
      10: ifnonnull     19
      13: ldc           #67                 // int 90007
      15: invokestatic  #68                 // Method org/h2/message/DbException.get:(I)Lorg/h2/message/DbException;
      18: athrow
      19: aload_0
      20: aload_0
      21: getfield      #18                 // Field rootPageId:I
      24: invokevirtual #24                 // Method getPage:(I)Lorg/h2/index/PageBtree;
      27: astore        5
      29: new           #69                 // class org/h2/index/PageBtreeCursor
      32: dup
      33: aload_1
      34: aload_0
      35: aload         4
      37: invokespecial #70                 // Method org/h2/index/PageBtreeCursor."<init>":(Lorg/h2/engine/Session;Lorg/h2/index/PageBtreeIndex;Lorg/h2/result/SearchRow;)V
      40: astore        6
      42: aload         5
      44: aload         6
      46: aload_2
      47: iload_3
      48: invokevirtual #71                 // Method org/h2/index/PageBtree.find:(Lorg/h2/index/PageBtreeCursor;Lorg/h2/result/SearchRow;Z)V
      51: aload         6
      53: areturn

  public org.h2.index.Cursor findFirstOrLast(org.h2.engine.Session, boolean);
    Code:
       0: iload_2
       1: ifeq          60
       4: aload_0
       5: aload_1
       6: aconst_null
       7: iconst_0
       8: aconst_null
       9: invokespecial #65                 // Method find:(Lorg/h2/engine/Session;Lorg/h2/result/SearchRow;ZLorg/h2/result/SearchRow;)Lorg/h2/index/Cursor;
      12: astore_3
      13: aload_3
      14: invokeinterface #72,  1           // InterfaceMethod org/h2/index/Cursor.next:()Z
      19: ifeq          58
      22: aload_3
      23: invokeinterface #73,  1           // InterfaceMethod org/h2/index/Cursor.getSearchRow:()Lorg/h2/result/SearchRow;
      28: astore        4
      30: aload         4
      32: aload_0
      33: getfield      #74                 // Field columnIds:[I
      36: iconst_0
      37: iaload
      38: invokeinterface #75,  2           // InterfaceMethod org/h2/result/SearchRow.getValue:(I)Lorg/h2/value/Value;
      43: astore        5
      45: aload         5
      47: getstatic     #76                 // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
      50: if_acmpeq     55
      53: aload_3
      54: areturn
      55: goto          13
      58: aload_3
      59: areturn
      60: aload_0
      61: aload_0
      62: getfield      #18                 // Field rootPageId:I
      65: invokevirtual #24                 // Method getPage:(I)Lorg/h2/index/PageBtree;
      68: astore_3
      69: new           #69                 // class org/h2/index/PageBtreeCursor
      72: dup
      73: aload_1
      74: aload_0
      75: aconst_null
      76: invokespecial #70                 // Method org/h2/index/PageBtreeCursor."<init>":(Lorg/h2/engine/Session;Lorg/h2/index/PageBtreeIndex;Lorg/h2/result/SearchRow;)V
      79: astore        4
      81: aload_3
      82: aload         4
      84: invokevirtual #77                 // Method org/h2/index/PageBtree.last:(Lorg/h2/index/PageBtreeCursor;)V
      87: aload         4
      89: invokevirtual #78                 // Method org/h2/index/PageBtreeCursor.previous:()Z
      92: pop
      93: aload         4
      95: invokevirtual #79                 // Method org/h2/index/PageBtreeCursor.getSearchRow:()Lorg/h2/result/SearchRow;
      98: astore        5
     100: aload         5
     102: ifnonnull     108
     105: goto          142
     108: aload         5
     110: aload_0
     111: getfield      #74                 // Field columnIds:[I
     114: iconst_0
     115: iaload
     116: invokeinterface #75,  2           // InterfaceMethod org/h2/result/SearchRow.getValue:(I)Lorg/h2/value/Value;
     121: astore        6
     123: aload         6
     125: getstatic     #76                 // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
     128: if_acmpeq     134
     131: aload         4
     133: areturn
     134: aload         4
     136: invokevirtual #78                 // Method org/h2/index/PageBtreeCursor.previous:()Z
     139: ifne          93
     142: aload         4
     144: areturn

  public double getCost(org.h2.engine.Session, int[], org.h2.table.TableFilter[], int, org.h2.result.SortOrder, java.util.HashSet<org.h2.table.Column>);
    Code:
       0: ldc2_w        #80                 // long 10l
       3: aload_0
       4: aload_2
       5: aload_0
       6: getfield      #6                  // Field tableData:Lorg/h2/table/RegularTable;
       9: aload_1
      10: invokevirtual #82                 // Method org/h2/table/RegularTable.getRowCount:(Lorg/h2/engine/Session;)J
      13: aload_3
      14: iload         4
      16: aload         5
      18: iconst_0
      19: aload         6
      21: invokevirtual #83                 // Method getCostRangeIndex:([IJ[Lorg/h2/table/TableFilter;ILorg/h2/result/SortOrder;ZLjava/util/HashSet;)J
      24: lmul
      25: l2d
      26: dreturn

  public boolean needRebuild();
    Code:
       0: aload_0
       1: getfield      #28                 // Field needRebuild:Z
       4: ireturn

  public void remove(org.h2.engine.Session, org.h2.result.Row);
    Code:
       0: aload_0
       1: getfield      #29                 // Field trace:Lorg/h2/message/Trace;
       4: invokevirtual #30                 // Method org/h2/message/Trace.isDebugEnabled:()Z
       7: ifeq          34
      10: aload_0
      11: getfield      #29                 // Field trace:Lorg/h2/message/Trace;
      14: ldc           #84                 // String {0} remove {1}
      16: iconst_2
      17: anewarray     #32                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: invokevirtual #33                 // Method getName:()Ljava/lang/String;
      26: aastore
      27: dup
      28: iconst_1
      29: aload_2
      30: aastore
      31: invokevirtual #35                 // Method org/h2/message/Trace.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      34: aload_0
      35: getfield      #26                 // Field rowCount:J
      38: lconst_1
      39: lcmp
      40: ifne          50
      43: aload_0
      44: invokespecial #85                 // Method removeAllRows:()V
      47: goto          101
      50: aload_0
      51: aload_0
      52: getfield      #18                 // Field rootPageId:I
      55: invokevirtual #24                 // Method getPage:(I)Lorg/h2/index/PageBtree;
      58: astore_3
      59: aload_3
      60: aload_2
      61: invokevirtual #86                 // Method org/h2/index/PageBtree.remove:(Lorg/h2/result/SearchRow;)Lorg/h2/result/SearchRow;
      64: pop
      65: aload_0
      66: invokespecial #52                 // Method invalidateRowCount:()V
      69: aload_0
      70: dup
      71: getfield      #26                 // Field rowCount:J
      74: lconst_1
      75: lsub
      76: putfield      #26                 // Field rowCount:J
      79: aload_0
      80: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
      83: invokevirtual #41                 // Method org/h2/store/PageStore.incrementChangeCount:()V
      86: goto          101
      89: astore        4
      91: aload_0
      92: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
      95: invokevirtual #41                 // Method org/h2/store/PageStore.incrementChangeCount:()V
      98: aload         4
     100: athrow
     101: return
    Exception table:
       from    to  target type
          50    79    89   any
          89    91    89   any

  public void remove(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #29                 // Field trace:Lorg/h2/message/Trace;
       4: invokevirtual #30                 // Method org/h2/message/Trace.isDebugEnabled:()Z
       7: ifeq          19
      10: aload_0
      11: getfield      #29                 // Field trace:Lorg/h2/message/Trace;
      14: ldc           #87                 // String remove
      16: invokevirtual #88                 // Method org/h2/message/Trace.debug:(Ljava/lang/String;)V
      19: aload_0
      20: invokespecial #85                 // Method removeAllRows:()V
      23: aload_0
      24: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
      27: aload_0
      28: getfield      #18                 // Field rootPageId:I
      31: invokevirtual #89                 // Method org/h2/store/PageStore.free:(I)V
      34: aload_0
      35: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
      38: aload_0
      39: aload_1
      40: invokevirtual #90                 // Method org/h2/store/PageStore.removeMeta:(Lorg/h2/index/Index;Lorg/h2/engine/Session;)V
      43: return

  public void truncate(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #29                 // Field trace:Lorg/h2/message/Trace;
       4: invokevirtual #30                 // Method org/h2/message/Trace.isDebugEnabled:()Z
       7: ifeq          19
      10: aload_0
      11: getfield      #29                 // Field trace:Lorg/h2/message/Trace;
      14: ldc           #91                 // String truncate
      16: invokevirtual #88                 // Method org/h2/message/Trace.debug:(Ljava/lang/String;)V
      19: aload_0
      20: invokespecial #85                 // Method removeAllRows:()V
      23: aload_0
      24: getfield      #6                  // Field tableData:Lorg/h2/table/RegularTable;
      27: invokevirtual #92                 // Method org/h2/table/RegularTable.getContainsLargeObject:()Z
      30: ifeq          52
      33: aload_0
      34: getfield      #3                  // Field database:Lorg/h2/engine/Database;
      37: invokevirtual #93                 // Method org/h2/engine/Database.getLobStorage:()Lorg/h2/store/LobStorageInterface;
      40: aload_0
      41: getfield      #53                 // Field table:Lorg/h2/table/Table;
      44: invokevirtual #94                 // Method org/h2/table/Table.getId:()I
      47: invokeinterface #95,  2           // InterfaceMethod org/h2/store/LobStorageInterface.removeAllForTable:(I)V
      52: aload_0
      53: getfield      #6                  // Field tableData:Lorg/h2/table/RegularTable;
      56: lconst_0
      57: invokevirtual #96                 // Method org/h2/table/RegularTable.setRowCount:(J)V
      60: return

  private void removeAllRows();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #18                 // Field rootPageId:I
       5: invokevirtual #24                 // Method getPage:(I)Lorg/h2/index/PageBtree;
       8: astore_1
       9: aload_1
      10: invokevirtual #97                 // Method org/h2/index/PageBtree.freeRecursive:()V
      13: aload_0
      14: aload_0
      15: getfield      #18                 // Field rootPageId:I
      18: iconst_0
      19: invokestatic  #20                 // Method org/h2/index/PageBtreeLeaf.create:(Lorg/h2/index/PageBtreeIndex;II)Lorg/h2/index/PageBtreeLeaf;
      22: astore_1
      23: aload_0
      24: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
      27: aload_0
      28: getfield      #18                 // Field rootPageId:I
      31: invokevirtual #98                 // Method org/h2/store/PageStore.removeFromCache:(I)V
      34: aload_0
      35: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
      38: aload_1
      39: invokevirtual #22                 // Method org/h2/store/PageStore.update:(Lorg/h2/store/Page;)V
      42: aload_0
      43: lconst_0
      44: putfield      #26                 // Field rowCount:J
      47: aload_0
      48: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
      51: invokevirtual #41                 // Method org/h2/store/PageStore.incrementChangeCount:()V
      54: goto          67
      57: astore_2
      58: aload_0
      59: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
      62: invokevirtual #41                 // Method org/h2/store/PageStore.incrementChangeCount:()V
      65: aload_2
      66: athrow
      67: return
    Exception table:
       from    to  target type
           0    47    57   any
          57    58    57   any

  public void checkRename();
    Code:
       0: return

  public org.h2.result.Row getRow(org.h2.engine.Session, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field tableData:Lorg/h2/table/RegularTable;
       4: aload_1
       5: lload_2
       6: invokevirtual #99                 // Method org/h2/table/RegularTable.getRow:(Lorg/h2/engine/Session;J)Lorg/h2/result/Row;
       9: areturn

  org.h2.store.PageStore getPageStore();
    Code:
       0: aload_0
       1: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
       4: areturn

  public long getRowCountApproximation();
    Code:
       0: aload_0
       1: getfield      #6                  // Field tableData:Lorg/h2/table/RegularTable;
       4: invokevirtual #100                // Method org/h2/table/RegularTable.getRowCountApproximation:()J
       7: lreturn

  public long getDiskSpaceUsed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field tableData:Lorg/h2/table/RegularTable;
       4: invokevirtual #101                // Method org/h2/table/RegularTable.getDiskSpaceUsed:()J
       7: lreturn

  public long getRowCount(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #26                 // Field rowCount:J
       4: lreturn

  public void close(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #29                 // Field trace:Lorg/h2/message/Trace;
       4: invokevirtual #30                 // Method org/h2/message/Trace.isDebugEnabled:()Z
       7: ifeq          19
      10: aload_0
      11: getfield      #29                 // Field trace:Lorg/h2/message/Trace;
      14: ldc           #102                // String close
      16: invokevirtual #88                 // Method org/h2/message/Trace.debug:(Ljava/lang/String;)V
      19: aload_0
      20: invokevirtual #103                // Method writeRowCount:()V
      23: aload_0
      24: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
      27: invokevirtual #41                 // Method org/h2/store/PageStore.incrementChangeCount:()V
      30: goto          43
      33: astore_2
      34: aload_0
      35: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
      38: invokevirtual #41                 // Method org/h2/store/PageStore.incrementChangeCount:()V
      41: aload_2
      42: athrow
      43: return
    Exception table:
       from    to  target type
          19    23    33   any
          33    34    33   any

  org.h2.result.SearchRow readRow(org.h2.store.Data, int, boolean, boolean);
    Code:
       0: aload_1
       1: dup
       2: astore        5
       4: monitorenter
       5: aload_1
       6: iload_2
       7: invokevirtual #104                // Method org/h2/store/Data.setPos:(I)V
      10: aload_1
      11: invokevirtual #105                // Method org/h2/store/Data.readVarLong:()J
      14: lstore        6
      16: iload_3
      17: ifeq          64
      20: iload         4
      22: ifeq          39
      25: aload_0
      26: getfield      #6                  // Field tableData:Lorg/h2/table/RegularTable;
      29: aconst_null
      30: lload         6
      32: invokevirtual #99                 // Method org/h2/table/RegularTable.getRow:(Lorg/h2/engine/Session;J)Lorg/h2/result/Row;
      35: aload         5
      37: monitorexit
      38: areturn
      39: aload_0
      40: getfield      #53                 // Field table:Lorg/h2/table/Table;
      43: iconst_1
      44: invokevirtual #55                 // Method org/h2/table/Table.getTemplateSimpleRow:(Z)Lorg/h2/result/SearchRow;
      47: astore        8
      49: aload         8
      51: lload         6
      53: invokeinterface #106,  3          // InterfaceMethod org/h2/result/SearchRow.setKey:(J)V
      58: aload         8
      60: aload         5
      62: monitorexit
      63: areturn
      64: aload_0
      65: getfield      #53                 // Field table:Lorg/h2/table/Table;
      68: aload_0
      69: getfield      #54                 // Field columns:[Lorg/h2/table/Column;
      72: arraylength
      73: iconst_1
      74: if_icmpne     81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: invokevirtual #55                 // Method org/h2/table/Table.getTemplateSimpleRow:(Z)Lorg/h2/result/SearchRow;
      85: astore        8
      87: aload         8
      89: lload         6
      91: invokeinterface #106,  3          // InterfaceMethod org/h2/result/SearchRow.setKey:(J)V
      96: aload_0
      97: getfield      #54                 // Field columns:[Lorg/h2/table/Column;
     100: astore        9
     102: aload         9
     104: arraylength
     105: istore        10
     107: iconst_0
     108: istore        11
     110: iload         11
     112: iload         10
     114: if_icmpge     150
     117: aload         9
     119: iload         11
     121: aaload
     122: astore        12
     124: aload         12
     126: invokevirtual #57                 // Method org/h2/table/Column.getColumnId:()I
     129: istore        13
     131: aload         8
     133: iload         13
     135: aload_1
     136: invokevirtual #107                // Method org/h2/store/Data.readValue:()Lorg/h2/value/Value;
     139: invokeinterface #59,  3           // InterfaceMethod org/h2/result/SearchRow.setValue:(ILorg/h2/value/Value;)V
     144: iinc          11, 1
     147: goto          110
     150: aload         8
     152: aload         5
     154: monitorexit
     155: areturn
     156: astore        14
     158: aload         5
     160: monitorexit
     161: aload         14
     163: athrow
    Exception table:
       from    to  target type
           5    38   156   any
          39    63   156   any
          64   155   156   any
         156   161   156   any

  org.h2.result.SearchRow readRow(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field tableData:Lorg/h2/table/RegularTable;
       4: aconst_null
       5: lload_1
       6: invokevirtual #99                 // Method org/h2/table/RegularTable.getRow:(Lorg/h2/engine/Session;J)Lorg/h2/result/Row;
       9: areturn

  void writeRow(org.h2.store.Data, int, org.h2.result.SearchRow, boolean);
    Code:
       0: aload_1
       1: iload_2
       2: invokevirtual #104                // Method org/h2/store/Data.setPos:(I)V
       5: aload_1
       6: aload_3
       7: invokeinterface #108,  1          // InterfaceMethod org/h2/result/SearchRow.getKey:()J
      12: invokevirtual #109                // Method org/h2/store/Data.writeVarLong:(J)V
      15: iload         4
      17: ifne          73
      20: aload_0
      21: getfield      #54                 // Field columns:[Lorg/h2/table/Column;
      24: astore        5
      26: aload         5
      28: arraylength
      29: istore        6
      31: iconst_0
      32: istore        7
      34: iload         7
      36: iload         6
      38: if_icmpge     73
      41: aload         5
      43: iload         7
      45: aaload
      46: astore        8
      48: aload         8
      50: invokevirtual #57                 // Method org/h2/table/Column.getColumnId:()I
      53: istore        9
      55: aload_1
      56: aload_3
      57: iload         9
      59: invokeinterface #75,  2           // InterfaceMethod org/h2/result/SearchRow.getValue:(I)Lorg/h2/value/Value;
      64: invokevirtual #110                // Method org/h2/store/Data.writeValue:(Lorg/h2/value/Value;)V
      67: iinc          7, 1
      70: goto          34
      73: return

  int getRowSize(org.h2.store.Data, org.h2.result.SearchRow, boolean);
    Code:
       0: aload_2
       1: invokeinterface #108,  1          // InterfaceMethod org/h2/result/SearchRow.getKey:()J
       6: invokestatic  #111                // Method org/h2/store/Data.getVarLongLen:(J)I
       9: istore        4
      11: iload_3
      12: ifne          73
      15: aload_0
      16: getfield      #54                 // Field columns:[Lorg/h2/table/Column;
      19: astore        5
      21: aload         5
      23: arraylength
      24: istore        6
      26: iconst_0
      27: istore        7
      29: iload         7
      31: iload         6
      33: if_icmpge     73
      36: aload         5
      38: iload         7
      40: aaload
      41: astore        8
      43: aload_2
      44: aload         8
      46: invokevirtual #57                 // Method org/h2/table/Column.getColumnId:()I
      49: invokeinterface #75,  2           // InterfaceMethod org/h2/result/SearchRow.getValue:(I)Lorg/h2/value/Value;
      54: astore        9
      56: iload         4
      58: aload_1
      59: aload         9
      61: invokevirtual #112                // Method org/h2/store/Data.getValueLen:(Lorg/h2/value/Value;)I
      64: iadd
      65: istore        4
      67: iinc          7, 1
      70: goto          29
      73: iload         4
      75: ireturn

  public boolean canFindNext();
    Code:
       0: iconst_1
       1: ireturn

  void setRootPageId(org.h2.engine.Session, int);
    Code:
       0: aload_0
       1: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
       4: aload_0
       5: aload_1
       6: invokevirtual #90                 // Method org/h2/store/PageStore.removeMeta:(Lorg/h2/index/Index;Lorg/h2/engine/Session;)V
       9: aload_0
      10: iload_2
      11: putfield      #18                 // Field rootPageId:I
      14: aload_0
      15: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
      18: aload_0
      19: aload_1
      20: invokevirtual #19                 // Method org/h2/store/PageStore.addMeta:(Lorg/h2/index/PageIndex;Lorg/h2/engine/Session;)V
      23: aload_0
      24: getfield      #15                 // Field store:Lorg/h2/store/PageStore;
      27: aload_0
      28: invokevirtual #16                 // Method org/h2/store/PageStore.addIndex:(Lorg/h2/index/PageIndex;)V
      31: return

  private void invalidateRowCount();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #18                 // Field rootPageId:I
       5: invokevirtual #24                 // Method getPage:(I)Lorg/h2/index/PageBtree;
       8: astore_1
       9: aload_1
      10: iconst_m1
      11: invokevirtual #113                // Method org/h2/index/PageBtree.setRowCountStored:(I)V
      14: return

  public void writeRowCount();
    Code:
       0: getstatic     #114                // Field org/h2/engine/SysProperties.MODIFY_ON_WRITE:Z
       3: ifeq          14
       6: aload_0
       7: getfield      #18                 // Field rootPageId:I
      10: ifne          14
      13: return
      14: aload_0
      15: aload_0
      16: getfield      #18                 // Field rootPageId:I
      19: invokevirtual #24                 // Method getPage:(I)Lorg/h2/index/PageBtree;
      22: astore_1
      23: aload_1
      24: aload_0
      25: getfield      #26                 // Field rowCount:J
      28: invokestatic  #115                // Method org/h2/util/MathUtils.convertLongToInt:(J)I
      31: invokevirtual #113                // Method org/h2/index/PageBtree.setRowCountStored:(I)V
      34: return

  boolean hasData(org.h2.result.SearchRow);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #54                 // Field columns:[Lorg/h2/table/Column;
       5: iconst_0
       6: aaload
       7: invokevirtual #57                 // Method org/h2/table/Column.getColumnId:()I
      10: invokeinterface #75,  2           // InterfaceMethod org/h2/result/SearchRow.getValue:(I)Lorg/h2/value/Value;
      15: ifnull        22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  int getMemoryPerPage();
    Code:
       0: aload_0
       1: getfield      #37                 // Field memoryPerPage:I
       4: ireturn

  void memoryChange(int);
    Code:
       0: aload_0
       1: getfield      #116                // Field memoryCount:I
       4: bipush        64
       6: if_icmpge     39
       9: aload_0
      10: dup
      11: getfield      #37                 // Field memoryPerPage:I
      14: iload_1
      15: aload_0
      16: getfield      #37                 // Field memoryPerPage:I
      19: isub
      20: aload_0
      21: dup
      22: getfield      #116                // Field memoryCount:I
      25: iconst_1
      26: iadd
      27: dup_x1
      28: putfield      #116                // Field memoryCount:I
      31: idiv
      32: iadd
      33: putfield      #37                 // Field memoryPerPage:I
      36: goto          71
      39: aload_0
      40: dup
      41: getfield      #37                 // Field memoryPerPage:I
      44: iload_1
      45: aload_0
      46: getfield      #37                 // Field memoryPerPage:I
      49: if_icmple     56
      52: iconst_1
      53: goto          57
      56: iconst_m1
      57: iload_1
      58: aload_0
      59: getfield      #37                 // Field memoryPerPage:I
      62: isub
      63: bipush        64
      65: idiv
      66: iadd
      67: iadd
      68: putfield      #37                 // Field memoryPerPage:I
      71: return

  static boolean isMemoryChangeRequired();
    Code:
       0: getstatic     #117                // Field memoryChangeRequired:I
       3: dup
       4: iconst_1
       5: isub
       6: putstatic     #117                // Field memoryChangeRequired:I
       9: ifgt          19
      12: bipush        10
      14: putstatic     #117                // Field memoryChangeRequired:I
      17: iconst_1
      18: ireturn
      19: iconst_0
      20: ireturn
}
