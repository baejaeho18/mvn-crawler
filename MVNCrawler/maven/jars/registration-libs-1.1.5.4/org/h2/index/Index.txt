Compiled from "Index.java"
public interface org.h2.index.Index extends org.h2.schema.SchemaObject {
  public abstract java.lang.String getPlanSQL();

  public abstract void close(org.h2.engine.Session);

  public abstract void add(org.h2.engine.Session, org.h2.result.Row);

  public abstract void remove(org.h2.engine.Session, org.h2.result.Row);

  public abstract boolean isFindUsingFullTableScan();

  public abstract org.h2.index.Cursor find(org.h2.engine.Session, org.h2.result.SearchRow, org.h2.result.SearchRow);

  public abstract org.h2.index.Cursor find(org.h2.table.TableFilter, org.h2.result.SearchRow, org.h2.result.SearchRow);

  public abstract double getCost(org.h2.engine.Session, int[], org.h2.table.TableFilter[], int, org.h2.result.SortOrder, java.util.HashSet<org.h2.table.Column>);

  public abstract void remove(org.h2.engine.Session);

  public abstract void truncate(org.h2.engine.Session);

  public abstract boolean canGetFirstOrLast();

  public abstract boolean canFindNext();

  public abstract org.h2.index.Cursor findNext(org.h2.engine.Session, org.h2.result.SearchRow, org.h2.result.SearchRow);

  public abstract org.h2.index.Cursor findFirstOrLast(org.h2.engine.Session, boolean);

  public abstract boolean needRebuild();

  public abstract long getRowCount(org.h2.engine.Session);

  public abstract long getRowCountApproximation();

  public abstract long getDiskSpaceUsed();

  public abstract int compareRows(org.h2.result.SearchRow, org.h2.result.SearchRow);

  public abstract int getColumnIndex(org.h2.table.Column);

  public abstract boolean isFirstColumn(org.h2.table.Column);

  public abstract org.h2.table.IndexColumn[] getIndexColumns();

  public abstract org.h2.table.Column[] getColumns();

  public abstract org.h2.index.IndexType getIndexType();

  public abstract org.h2.table.Table getTable();

  public abstract void commit(int, org.h2.result.Row);

  public abstract org.h2.result.Row getRow(org.h2.engine.Session, long);

  public abstract boolean isRowIdIndex();

  public abstract boolean canScan();

  public abstract void setSortedInsertMode(boolean);

  public abstract org.h2.index.IndexLookupBatch createLookupBatch(org.h2.table.TableFilter[], int);
}
