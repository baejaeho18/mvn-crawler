Compiled from "PageDelegateIndex.java"
public class org.h2.index.PageDelegateIndex extends org.h2.index.PageIndex {
  private final org.h2.index.PageDataIndex mainIndex;

  public org.h2.index.PageDelegateIndex(org.h2.table.RegularTable, int, java.lang.String, org.h2.index.IndexType, org.h2.index.PageDataIndex, boolean, org.h2.engine.Session);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/index/PageIndex."<init>":()V
       4: iconst_1
       5: anewarray     #2                  // class org/h2/table/Column
       8: dup
       9: iconst_0
      10: aload_1
      11: aload         5
      13: invokevirtual #3                  // Method org/h2/index/PageDataIndex.getMainIndexColumn:()I
      16: invokevirtual #4                  // Method org/h2/table/RegularTable.getColumn:(I)Lorg/h2/table/Column;
      19: aastore
      20: invokestatic  #5                  // Method org/h2/table/IndexColumn.wrap:([Lorg/h2/table/Column;)[Lorg/h2/table/IndexColumn;
      23: astore        8
      25: aload_0
      26: aload_1
      27: iload_2
      28: aload_3
      29: aload         8
      31: aload         4
      33: invokevirtual #6                  // Method initBaseIndex:(Lorg/h2/table/Table;ILjava/lang/String;[Lorg/h2/table/IndexColumn;Lorg/h2/index/IndexType;)V
      36: aload_0
      37: aload         5
      39: putfield      #7                  // Field mainIndex:Lorg/h2/index/PageDataIndex;
      42: aload_0
      43: getfield      #8                  // Field database:Lorg/h2/engine/Database;
      46: invokevirtual #9                  // Method org/h2/engine/Database.isPersistent:()Z
      49: ifeq          56
      52: iload_2
      53: ifge          79
      56: new           #10                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #12                 // String
      65: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_3
      69: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokestatic  #15                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      78: athrow
      79: aload_0
      80: getfield      #8                  // Field database:Lorg/h2/engine/Database;
      83: invokevirtual #16                 // Method org/h2/engine/Database.getPageStore:()Lorg/h2/store/PageStore;
      86: astore        9
      88: aload         9
      90: aload_0
      91: invokevirtual #17                 // Method org/h2/store/PageStore.addIndex:(Lorg/h2/index/PageIndex;)V
      94: iload         6
      96: ifeq          107
      99: aload         9
     101: aload_0
     102: aload         7
     104: invokevirtual #18                 // Method org/h2/store/PageStore.addMeta:(Lorg/h2/index/PageIndex;Lorg/h2/engine/Session;)V
     107: return

  public void add(org.h2.engine.Session, org.h2.result.Row);
    Code:
       0: return

  public boolean canFindNext();
    Code:
       0: iconst_0
       1: ireturn

  public boolean canGetFirstOrLast();
    Code:
       0: iconst_1
       1: ireturn

  public void close(org.h2.engine.Session);
    Code:
       0: return

  public org.h2.index.Cursor find(org.h2.engine.Session, org.h2.result.SearchRow, org.h2.result.SearchRow);
    Code:
       0: aload_0
       1: getfield      #7                  // Field mainIndex:Lorg/h2/index/PageDataIndex;
       4: aload_2
       5: ldc2_w        #19                 // long -9223372036854775808l
       8: ldc2_w        #19                 // long -9223372036854775808l
      11: invokevirtual #21                 // Method org/h2/index/PageDataIndex.getKey:(Lorg/h2/result/SearchRow;JJ)J
      14: lstore        4
      16: aload_0
      17: getfield      #7                  // Field mainIndex:Lorg/h2/index/PageDataIndex;
      20: aload_3
      21: ldc2_w        #22                 // long 9223372036854775807l
      24: ldc2_w        #19                 // long -9223372036854775808l
      27: invokevirtual #21                 // Method org/h2/index/PageDataIndex.getKey:(Lorg/h2/result/SearchRow;JJ)J
      30: lstore        6
      32: aload_0
      33: getfield      #7                  // Field mainIndex:Lorg/h2/index/PageDataIndex;
      36: aload_1
      37: lload         4
      39: lload         6
      41: iconst_0
      42: invokevirtual #24                 // Method org/h2/index/PageDataIndex.find:(Lorg/h2/engine/Session;JJZ)Lorg/h2/index/Cursor;
      45: areturn

  public org.h2.index.Cursor findFirstOrLast(org.h2.engine.Session, boolean);
    Code:
       0: iload_2
       1: ifeq          23
       4: aload_0
       5: getfield      #7                  // Field mainIndex:Lorg/h2/index/PageDataIndex;
       8: aload_1
       9: ldc2_w        #19                 // long -9223372036854775808l
      12: ldc2_w        #22                 // long 9223372036854775807l
      15: iconst_0
      16: invokevirtual #24                 // Method org/h2/index/PageDataIndex.find:(Lorg/h2/engine/Session;JJZ)Lorg/h2/index/Cursor;
      19: astore_3
      20: goto          46
      23: aload_0
      24: getfield      #7                  // Field mainIndex:Lorg/h2/index/PageDataIndex;
      27: invokevirtual #25                 // Method org/h2/index/PageDataIndex.getLastKey:()J
      30: lstore        4
      32: aload_0
      33: getfield      #7                  // Field mainIndex:Lorg/h2/index/PageDataIndex;
      36: aload_1
      37: lload         4
      39: lload         4
      41: iconst_0
      42: invokevirtual #24                 // Method org/h2/index/PageDataIndex.find:(Lorg/h2/engine/Session;JJZ)Lorg/h2/index/Cursor;
      45: astore_3
      46: aload_3
      47: invokeinterface #26,  1           // InterfaceMethod org/h2/index/Cursor.next:()Z
      52: pop
      53: aload_3
      54: areturn

  public org.h2.index.Cursor findNext(org.h2.engine.Session, org.h2.result.SearchRow, org.h2.result.SearchRow);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method toString:()Ljava/lang/String;
       4: invokestatic  #15                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
       7: athrow

  public int getColumnIndex(org.h2.table.Column);
    Code:
       0: aload_1
       1: invokevirtual #28                 // Method org/h2/table/Column.getColumnId:()I
       4: aload_0
       5: getfield      #7                  // Field mainIndex:Lorg/h2/index/PageDataIndex;
       8: invokevirtual #3                  // Method org/h2/index/PageDataIndex.getMainIndexColumn:()I
      11: if_icmpne     16
      14: iconst_0
      15: ireturn
      16: iconst_m1
      17: ireturn

  public boolean isFirstColumn(org.h2.table.Column);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method getColumnIndex:(Lorg/h2/table/Column;)I
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public double getCost(org.h2.engine.Session, int[], org.h2.table.TableFilter[], int, org.h2.result.SortOrder, java.util.HashSet<org.h2.table.Column>);
    Code:
       0: ldc2_w        #30                 // long 10l
       3: aload_0
       4: aload_2
       5: aload_0
       6: getfield      #7                  // Field mainIndex:Lorg/h2/index/PageDataIndex;
       9: aload_1
      10: invokevirtual #32                 // Method org/h2/index/PageDataIndex.getRowCount:(Lorg/h2/engine/Session;)J
      13: aload_3
      14: iload         4
      16: aload         5
      18: iconst_0
      19: aload         6
      21: invokevirtual #33                 // Method getCostRangeIndex:([IJ[Lorg/h2/table/TableFilter;ILorg/h2/result/SortOrder;ZLjava/util/HashSet;)J
      24: lmul
      25: l2d
      26: dreturn

  public boolean needRebuild();
    Code:
       0: iconst_0
       1: ireturn

  public void remove(org.h2.engine.Session, org.h2.result.Row);
    Code:
       0: return

  public void remove(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #7                  // Field mainIndex:Lorg/h2/index/PageDataIndex;
       4: iconst_m1
       5: invokevirtual #34                 // Method org/h2/index/PageDataIndex.setMainIndexColumn:(I)V
       8: aload_1
       9: invokevirtual #35                 // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      12: invokevirtual #16                 // Method org/h2/engine/Database.getPageStore:()Lorg/h2/store/PageStore;
      15: aload_0
      16: aload_1
      17: invokevirtual #36                 // Method org/h2/store/PageStore.removeMeta:(Lorg/h2/index/Index;Lorg/h2/engine/Session;)V
      20: return

  public void truncate(org.h2.engine.Session);
    Code:
       0: return

  public void checkRename();
    Code:
       0: return

  public long getRowCount(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #7                  // Field mainIndex:Lorg/h2/index/PageDataIndex;
       4: aload_1
       5: invokevirtual #32                 // Method org/h2/index/PageDataIndex.getRowCount:(Lorg/h2/engine/Session;)J
       8: lreturn

  public long getRowCountApproximation();
    Code:
       0: aload_0
       1: getfield      #7                  // Field mainIndex:Lorg/h2/index/PageDataIndex;
       4: invokevirtual #37                 // Method org/h2/index/PageDataIndex.getRowCountApproximation:()J
       7: lreturn

  public long getDiskSpaceUsed();
    Code:
       0: aload_0
       1: getfield      #7                  // Field mainIndex:Lorg/h2/index/PageDataIndex;
       4: invokevirtual #38                 // Method org/h2/index/PageDataIndex.getDiskSpaceUsed:()J
       7: lreturn

  public void writeRowCount();
    Code:
       0: return
}
