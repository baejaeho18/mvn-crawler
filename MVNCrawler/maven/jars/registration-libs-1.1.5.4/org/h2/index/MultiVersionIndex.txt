Compiled from "MultiVersionIndex.java"
public class org.h2.index.MultiVersionIndex implements org.h2.index.Index {
  private final org.h2.index.Index base;

  private final org.h2.index.TreeIndex delta;

  private final org.h2.table.RegularTable table;

  private final java.lang.Object sync;

  private final org.h2.table.Column firstColumn;

  public org.h2.index.MultiVersionIndex(org.h2.index.Index, org.h2.table.RegularTable);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field base:Lorg/h2/index/Index;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field table:Lorg/h2/table/RegularTable;
      14: iconst_0
      15: invokestatic  #4                  // Method org/h2/index/IndexType.createNonUnique:(Z)Lorg/h2/index/IndexType;
      18: astore_3
      19: aload_1
      20: instanceof    #5                  // class org/h2/index/SpatialIndex
      23: ifeq          34
      26: ldc           #6                  // int 50100
      28: ldc           #7                  // String MVCC & spatial index
      30: invokestatic  #8                  // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      33: athrow
      34: aload_0
      35: new           #9                  // class org/h2/index/TreeIndex
      38: dup
      39: aload_2
      40: iconst_m1
      41: ldc           #10                 // String DELTA
      43: aload_1
      44: invokeinterface #11,  1           // InterfaceMethod org/h2/index/Index.getIndexColumns:()[Lorg/h2/table/IndexColumn;
      49: aload_3
      50: invokespecial #12                 // Method org/h2/index/TreeIndex."<init>":(Lorg/h2/table/RegularTable;ILjava/lang/String;[Lorg/h2/table/IndexColumn;Lorg/h2/index/IndexType;)V
      53: putfield      #13                 // Field delta:Lorg/h2/index/TreeIndex;
      56: aload_0
      57: getfield      #13                 // Field delta:Lorg/h2/index/TreeIndex;
      60: iconst_1
      61: invokevirtual #14                 // Method org/h2/index/TreeIndex.setMultiVersion:(Z)V
      64: aload_0
      65: aload_1
      66: invokeinterface #15,  1           // InterfaceMethod org/h2/index/Index.getDatabase:()Lorg/h2/engine/Database;
      71: putfield      #16                 // Field sync:Ljava/lang/Object;
      74: aload_0
      75: aload_1
      76: invokeinterface #17,  1           // InterfaceMethod org/h2/index/Index.getColumns:()[Lorg/h2/table/Column;
      81: iconst_0
      82: aaload
      83: putfield      #18                 // Field firstColumn:Lorg/h2/table/Column;
      86: return

  public void add(org.h2.engine.Session, org.h2.result.Row);
    Code:
       0: aload_0
       1: getfield      #16                 // Field sync:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #2                  // Field base:Lorg/h2/index/Index;
      11: aload_1
      12: aload_2
      13: invokeinterface #19,  3           // InterfaceMethod org/h2/index/Index.add:(Lorg/h2/engine/Session;Lorg/h2/result/Row;)V
      18: aload_0
      19: aload_1
      20: aload_2
      21: invokespecial #20                 // Method removeIfExists:(Lorg/h2/engine/Session;Lorg/h2/result/Row;)Z
      24: ifeq          30
      27: goto          48
      30: aload_2
      31: invokeinterface #21,  1           // InterfaceMethod org/h2/result/Row.getSessionId:()I
      36: ifeq          48
      39: aload_0
      40: getfield      #13                 // Field delta:Lorg/h2/index/TreeIndex;
      43: aload_1
      44: aload_2
      45: invokevirtual #22                 // Method org/h2/index/TreeIndex.add:(Lorg/h2/engine/Session;Lorg/h2/result/Row;)V
      48: aload_3
      49: monitorexit
      50: goto          60
      53: astore        4
      55: aload_3
      56: monitorexit
      57: aload         4
      59: athrow
      60: return
    Exception table:
       from    to  target type
           7    50    53   any
          53    57    53   any

  public void close(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #16                 // Field sync:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #2                  // Field base:Lorg/h2/index/Index;
      11: aload_1
      12: invokeinterface #23,  2           // InterfaceMethod org/h2/index/Index.close:(Lorg/h2/engine/Session;)V
      17: aload_2
      18: monitorexit
      19: goto          27
      22: astore_3
      23: aload_2
      24: monitorexit
      25: aload_3
      26: athrow
      27: return
    Exception table:
       from    to  target type
           7    19    22   any
          22    25    22   any

  public boolean isFindUsingFullTableScan();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #24,  1           // InterfaceMethod org/h2/index/Index.isFindUsingFullTableScan:()Z
       9: ireturn

  public org.h2.index.Cursor find(org.h2.table.TableFilter, org.h2.result.SearchRow, org.h2.result.SearchRow);
    Code:
       0: aload_0
       1: getfield      #16                 // Field sync:Ljava/lang/Object;
       4: dup
       5: astore        4
       7: monitorenter
       8: aload_0
       9: getfield      #2                  // Field base:Lorg/h2/index/Index;
      12: aload_1
      13: aload_2
      14: aload_3
      15: invokeinterface #25,  4           // InterfaceMethod org/h2/index/Index.find:(Lorg/h2/table/TableFilter;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)Lorg/h2/index/Cursor;
      20: astore        5
      22: aload_0
      23: getfield      #13                 // Field delta:Lorg/h2/index/TreeIndex;
      26: aload_1
      27: aload_2
      28: aload_3
      29: invokevirtual #26                 // Method org/h2/index/TreeIndex.find:(Lorg/h2/table/TableFilter;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)Lorg/h2/index/Cursor;
      32: astore        6
      34: new           #27                 // class org/h2/index/MultiVersionCursor
      37: dup
      38: aload_1
      39: invokevirtual #28                 // Method org/h2/table/TableFilter.getSession:()Lorg/h2/engine/Session;
      42: aload_0
      43: aload         5
      45: aload         6
      47: aload_0
      48: getfield      #16                 // Field sync:Ljava/lang/Object;
      51: invokespecial #29                 // Method org/h2/index/MultiVersionCursor."<init>":(Lorg/h2/engine/Session;Lorg/h2/index/MultiVersionIndex;Lorg/h2/index/Cursor;Lorg/h2/index/Cursor;Ljava/lang/Object;)V
      54: aload         4
      56: monitorexit
      57: areturn
      58: astore        7
      60: aload         4
      62: monitorexit
      63: aload         7
      65: athrow
    Exception table:
       from    to  target type
           8    57    58   any
          58    63    58   any

  public org.h2.index.Cursor find(org.h2.engine.Session, org.h2.result.SearchRow, org.h2.result.SearchRow);
    Code:
       0: aload_0
       1: getfield      #16                 // Field sync:Ljava/lang/Object;
       4: dup
       5: astore        4
       7: monitorenter
       8: aload_0
       9: getfield      #2                  // Field base:Lorg/h2/index/Index;
      12: aload_1
      13: aload_2
      14: aload_3
      15: invokeinterface #30,  4           // InterfaceMethod org/h2/index/Index.find:(Lorg/h2/engine/Session;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)Lorg/h2/index/Cursor;
      20: astore        5
      22: aload_0
      23: getfield      #13                 // Field delta:Lorg/h2/index/TreeIndex;
      26: aload_1
      27: aload_2
      28: aload_3
      29: invokevirtual #31                 // Method org/h2/index/TreeIndex.find:(Lorg/h2/engine/Session;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)Lorg/h2/index/Cursor;
      32: astore        6
      34: new           #27                 // class org/h2/index/MultiVersionCursor
      37: dup
      38: aload_1
      39: aload_0
      40: aload         5
      42: aload         6
      44: aload_0
      45: getfield      #16                 // Field sync:Ljava/lang/Object;
      48: invokespecial #29                 // Method org/h2/index/MultiVersionCursor."<init>":(Lorg/h2/engine/Session;Lorg/h2/index/MultiVersionIndex;Lorg/h2/index/Cursor;Lorg/h2/index/Cursor;Ljava/lang/Object;)V
      51: aload         4
      53: monitorexit
      54: areturn
      55: astore        7
      57: aload         4
      59: monitorexit
      60: aload         7
      62: athrow
    Exception table:
       from    to  target type
           8    54    55   any
          55    60    55   any

  public org.h2.index.Cursor findNext(org.h2.engine.Session, org.h2.result.SearchRow, org.h2.result.SearchRow);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method java/lang/Object.toString:()Ljava/lang/String;
       4: invokestatic  #33                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
       7: athrow

  public boolean canFindNext();
    Code:
       0: iconst_0
       1: ireturn

  public boolean canGetFirstOrLast();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #34,  1           // InterfaceMethod org/h2/index/Index.canGetFirstOrLast:()Z
       9: ifeq          26
      12: aload_0
      13: getfield      #13                 // Field delta:Lorg/h2/index/TreeIndex;
      16: invokevirtual #35                 // Method org/h2/index/TreeIndex.canGetFirstOrLast:()Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public org.h2.index.Cursor findFirstOrLast(org.h2.engine.Session, boolean);
    Code:
       0: iload_2
       1: ifeq          60
       4: aload_0
       5: aload_1
       6: aconst_null
       7: aconst_null
       8: invokevirtual #36                 // Method find:(Lorg/h2/engine/Session;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)Lorg/h2/index/Cursor;
      11: astore_3
      12: aload_3
      13: invokeinterface #37,  1           // InterfaceMethod org/h2/index/Cursor.next:()Z
      18: ifeq          58
      21: aload_3
      22: invokeinterface #38,  1           // InterfaceMethod org/h2/index/Cursor.getSearchRow:()Lorg/h2/result/SearchRow;
      27: astore        4
      29: aload         4
      31: aload_0
      32: getfield      #18                 // Field firstColumn:Lorg/h2/table/Column;
      35: invokevirtual #39                 // Method org/h2/table/Column.getColumnId:()I
      38: invokeinterface #40,  2           // InterfaceMethod org/h2/result/SearchRow.getValue:(I)Lorg/h2/value/Value;
      43: astore        5
      45: aload         5
      47: getstatic     #41                 // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
      50: if_acmpeq     55
      53: aload_3
      54: areturn
      55: goto          12
      58: aload_3
      59: areturn
      60: aload_0
      61: getfield      #2                  // Field base:Lorg/h2/index/Index;
      64: aload_1
      65: iconst_0
      66: invokeinterface #42,  3           // InterfaceMethod org/h2/index/Index.findFirstOrLast:(Lorg/h2/engine/Session;Z)Lorg/h2/index/Cursor;
      71: astore_3
      72: aload_0
      73: getfield      #13                 // Field delta:Lorg/h2/index/TreeIndex;
      76: aload_1
      77: iconst_0
      78: invokevirtual #43                 // Method org/h2/index/TreeIndex.findFirstOrLast:(Lorg/h2/engine/Session;Z)Lorg/h2/index/Cursor;
      81: astore        4
      83: new           #27                 // class org/h2/index/MultiVersionCursor
      86: dup
      87: aload_1
      88: aload_0
      89: aload_3
      90: aload         4
      92: aload_0
      93: getfield      #16                 // Field sync:Ljava/lang/Object;
      96: invokespecial #29                 // Method org/h2/index/MultiVersionCursor."<init>":(Lorg/h2/engine/Session;Lorg/h2/index/MultiVersionIndex;Lorg/h2/index/Cursor;Lorg/h2/index/Cursor;Ljava/lang/Object;)V
      99: astore        5
     101: aload         5
     103: invokevirtual #44                 // Method org/h2/index/MultiVersionCursor.loadCurrent:()V
     106: aload         5
     108: invokevirtual #45                 // Method org/h2/index/MultiVersionCursor.previous:()Z
     111: ifeq          159
     114: aload         5
     116: invokevirtual #46                 // Method org/h2/index/MultiVersionCursor.getSearchRow:()Lorg/h2/result/SearchRow;
     119: astore        6
     121: aload         6
     123: ifnonnull     129
     126: goto          159
     129: aload         6
     131: aload_0
     132: getfield      #18                 // Field firstColumn:Lorg/h2/table/Column;
     135: invokevirtual #39                 // Method org/h2/table/Column.getColumnId:()I
     138: invokeinterface #40,  2           // InterfaceMethod org/h2/result/SearchRow.getValue:(I)Lorg/h2/value/Value;
     143: astore        7
     145: aload         7
     147: getstatic     #41                 // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
     150: if_acmpeq     156
     153: aload         5
     155: areturn
     156: goto          106
     159: aload         5
     161: areturn

  public double getCost(org.h2.engine.Session, int[], org.h2.table.TableFilter[], int, org.h2.result.SortOrder, java.util.HashSet<org.h2.table.Column>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: aload_1
       5: aload_2
       6: aload_3
       7: iload         4
       9: aload         5
      11: aload         6
      13: invokeinterface #47,  7           // InterfaceMethod org/h2/index/Index.getCost:(Lorg/h2/engine/Session;[I[Lorg/h2/table/TableFilter;ILorg/h2/result/SortOrder;Ljava/util/HashSet;)D
      18: dreturn

  public boolean needRebuild();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #48,  1           // InterfaceMethod org/h2/index/Index.needRebuild:()Z
       9: ireturn

  public boolean isUncommittedFromOtherSession(org.h2.engine.Session, org.h2.result.Row);
    Code:
       0: aload_0
       1: getfield      #13                 // Field delta:Lorg/h2/index/TreeIndex;
       4: aload_1
       5: aload_2
       6: aload_2
       7: invokevirtual #31                 // Method org/h2/index/TreeIndex.find:(Lorg/h2/engine/Session;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)Lorg/h2/index/Cursor;
      10: astore_3
      11: aload_3
      12: invokeinterface #37,  1           // InterfaceMethod org/h2/index/Cursor.next:()Z
      17: ifeq          48
      20: aload_3
      21: invokeinterface #49,  1           // InterfaceMethod org/h2/index/Cursor.get:()Lorg/h2/result/Row;
      26: astore        4
      28: aload         4
      30: invokeinterface #21,  1           // InterfaceMethod org/h2/result/Row.getSessionId:()I
      35: aload_1
      36: invokevirtual #50                 // Method org/h2/engine/Session.getId:()I
      39: if_icmpeq     46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn
      48: iconst_0
      49: ireturn

  private boolean removeIfExists(org.h2.engine.Session, org.h2.result.Row);
    Code:
       0: aload_0
       1: getfield      #13                 // Field delta:Lorg/h2/index/TreeIndex;
       4: aload_1
       5: aload_2
       6: aload_2
       7: invokevirtual #31                 // Method org/h2/index/TreeIndex.find:(Lorg/h2/engine/Session;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)Lorg/h2/index/Cursor;
      10: astore_3
      11: aload_3
      12: invokeinterface #37,  1           // InterfaceMethod org/h2/index/Cursor.next:()Z
      17: ifeq          119
      20: aload_3
      21: invokeinterface #49,  1           // InterfaceMethod org/h2/index/Cursor.get:()Lorg/h2/result/Row;
      26: astore        4
      28: aload         4
      30: invokeinterface #51,  1           // InterfaceMethod org/h2/result/Row.getKey:()J
      35: aload_2
      36: invokeinterface #51,  1           // InterfaceMethod org/h2/result/Row.getKey:()J
      41: lcmp
      42: ifne          116
      45: aload         4
      47: invokeinterface #52,  1           // InterfaceMethod org/h2/result/Row.getVersion:()I
      52: aload_2
      53: invokeinterface #52,  1           // InterfaceMethod org/h2/result/Row.getVersion:()I
      58: if_icmpne     116
      61: aload         4
      63: aload_2
      64: if_acmpeq     104
      67: aload_0
      68: getfield      #3                  // Field table:Lorg/h2/table/RegularTable;
      71: aload_1
      72: invokevirtual #53                 // Method org/h2/table/RegularTable.getScanIndex:(Lorg/h2/engine/Session;)Lorg/h2/index/Index;
      75: aload         4
      77: aload_2
      78: invokeinterface #54,  3           // InterfaceMethod org/h2/index/Index.compareRows:(Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)I
      83: ifeq          104
      86: aload_2
      87: aload         4
      89: invokeinterface #52,  1           // InterfaceMethod org/h2/result/Row.getVersion:()I
      94: iconst_1
      95: iadd
      96: invokeinterface #55,  2           // InterfaceMethod org/h2/result/Row.setVersion:(I)V
     101: goto          116
     104: aload_0
     105: getfield      #13                 // Field delta:Lorg/h2/index/TreeIndex;
     108: aload_1
     109: aload         4
     111: invokevirtual #56                 // Method org/h2/index/TreeIndex.remove:(Lorg/h2/engine/Session;Lorg/h2/result/Row;)V
     114: iconst_1
     115: ireturn
     116: goto          11
     119: iconst_0
     120: ireturn

  public void remove(org.h2.engine.Session, org.h2.result.Row);
    Code:
       0: aload_0
       1: getfield      #16                 // Field sync:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #2                  // Field base:Lorg/h2/index/Index;
      11: aload_1
      12: aload_2
      13: invokeinterface #57,  3           // InterfaceMethod org/h2/index/Index.remove:(Lorg/h2/engine/Session;Lorg/h2/result/Row;)V
      18: aload_0
      19: aload_1
      20: aload_2
      21: invokespecial #20                 // Method removeIfExists:(Lorg/h2/engine/Session;Lorg/h2/result/Row;)Z
      24: ifeq          30
      27: goto          39
      30: aload_0
      31: getfield      #13                 // Field delta:Lorg/h2/index/TreeIndex;
      34: aload_1
      35: aload_2
      36: invokevirtual #22                 // Method org/h2/index/TreeIndex.add:(Lorg/h2/engine/Session;Lorg/h2/result/Row;)V
      39: aload_3
      40: monitorexit
      41: goto          51
      44: astore        4
      46: aload_3
      47: monitorexit
      48: aload         4
      50: athrow
      51: return
    Exception table:
       from    to  target type
           7    41    44   any
          44    48    44   any

  public void remove(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #16                 // Field sync:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #2                  // Field base:Lorg/h2/index/Index;
      11: aload_1
      12: invokeinterface #58,  2           // InterfaceMethod org/h2/index/Index.remove:(Lorg/h2/engine/Session;)V
      17: aload_2
      18: monitorexit
      19: goto          27
      22: astore_3
      23: aload_2
      24: monitorexit
      25: aload_3
      26: athrow
      27: return
    Exception table:
       from    to  target type
           7    19    22   any
          22    25    22   any

  public void truncate(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #16                 // Field sync:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #13                 // Field delta:Lorg/h2/index/TreeIndex;
      11: aload_1
      12: invokevirtual #59                 // Method org/h2/index/TreeIndex.truncate:(Lorg/h2/engine/Session;)V
      15: aload_0
      16: getfield      #2                  // Field base:Lorg/h2/index/Index;
      19: aload_1
      20: invokeinterface #60,  2           // InterfaceMethod org/h2/index/Index.truncate:(Lorg/h2/engine/Session;)V
      25: aload_2
      26: monitorexit
      27: goto          35
      30: astore_3
      31: aload_2
      32: monitorexit
      33: aload_3
      34: athrow
      35: return
    Exception table:
       from    to  target type
           7    27    30   any
          30    33    30   any

  public void commit(int, org.h2.result.Row);
    Code:
       0: aload_0
       1: getfield      #16                 // Field sync:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: aconst_null
       9: aload_2
      10: invokespecial #20                 // Method removeIfExists:(Lorg/h2/engine/Session;Lorg/h2/result/Row;)Z
      13: pop
      14: aload_3
      15: monitorexit
      16: goto          26
      19: astore        4
      21: aload_3
      22: monitorexit
      23: aload         4
      25: athrow
      26: return
    Exception table:
       from    to  target type
           7    16    19   any
          19    23    19   any

  public int compareRows(org.h2.result.SearchRow, org.h2.result.SearchRow);
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: aload_1
       5: aload_2
       6: invokeinterface #54,  3           // InterfaceMethod org/h2/index/Index.compareRows:(Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)I
      11: ireturn

  public int getColumnIndex(org.h2.table.Column);
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: aload_1
       5: invokeinterface #61,  2           // InterfaceMethod org/h2/index/Index.getColumnIndex:(Lorg/h2/table/Column;)I
      10: ireturn

  public boolean isFirstColumn(org.h2.table.Column);
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: aload_1
       5: invokeinterface #62,  2           // InterfaceMethod org/h2/index/Index.isFirstColumn:(Lorg/h2/table/Column;)Z
      10: ireturn

  public org.h2.table.Column[] getColumns();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #17,  1           // InterfaceMethod org/h2/index/Index.getColumns:()[Lorg/h2/table/Column;
       9: areturn

  public org.h2.table.IndexColumn[] getIndexColumns();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #11,  1           // InterfaceMethod org/h2/index/Index.getIndexColumns:()[Lorg/h2/table/IndexColumn;
       9: areturn

  public java.lang.String getCreateSQL();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #63,  1           // InterfaceMethod org/h2/index/Index.getCreateSQL:()Ljava/lang/String;
       9: areturn

  public java.lang.String getCreateSQLForCopy(org.h2.table.Table, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: aload_1
       5: aload_2
       6: invokeinterface #64,  3           // InterfaceMethod org/h2/index/Index.getCreateSQLForCopy:(Lorg/h2/table/Table;Ljava/lang/String;)Ljava/lang/String;
      11: areturn

  public java.lang.String getDropSQL();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #65,  1           // InterfaceMethod org/h2/index/Index.getDropSQL:()Ljava/lang/String;
       9: areturn

  public org.h2.index.IndexType getIndexType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #66,  1           // InterfaceMethod org/h2/index/Index.getIndexType:()Lorg/h2/index/IndexType;
       9: areturn

  public java.lang.String getPlanSQL();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #67,  1           // InterfaceMethod org/h2/index/Index.getPlanSQL:()Ljava/lang/String;
       9: areturn

  public long getRowCount(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: aload_1
       5: invokeinterface #68,  2           // InterfaceMethod org/h2/index/Index.getRowCount:(Lorg/h2/engine/Session;)J
      10: lreturn

  public org.h2.table.Table getTable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #69,  1           // InterfaceMethod org/h2/index/Index.getTable:()Lorg/h2/table/Table;
       9: areturn

  public int getType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #70,  1           // InterfaceMethod org/h2/index/Index.getType:()I
       9: ireturn

  public void removeChildrenAndResources(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #16                 // Field sync:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #3                  // Field table:Lorg/h2/table/RegularTable;
      11: aload_0
      12: invokevirtual #71                 // Method org/h2/table/RegularTable.removeIndex:(Lorg/h2/index/Index;)V
      15: aload_0
      16: aload_1
      17: invokevirtual #72                 // Method remove:(Lorg/h2/engine/Session;)V
      20: aload_2
      21: monitorexit
      22: goto          30
      25: astore_3
      26: aload_2
      27: monitorexit
      28: aload_3
      29: athrow
      30: return
    Exception table:
       from    to  target type
           7    22    25   any
          25    28    25   any

  public java.lang.String getSQL();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #73,  1           // InterfaceMethod org/h2/index/Index.getSQL:()Ljava/lang/String;
       9: areturn

  public org.h2.schema.Schema getSchema();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #74,  1           // InterfaceMethod org/h2/index/Index.getSchema:()Lorg/h2/schema/Schema;
       9: areturn

  public void checkRename();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #75,  1           // InterfaceMethod org/h2/index/Index.checkRename:()V
       9: return

  public java.util.ArrayList<org.h2.engine.DbObject> getChildren();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #76,  1           // InterfaceMethod org/h2/index/Index.getChildren:()Ljava/util/ArrayList;
       9: areturn

  public java.lang.String getComment();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #77,  1           // InterfaceMethod org/h2/index/Index.getComment:()Ljava/lang/String;
       9: areturn

  public org.h2.engine.Database getDatabase();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #15,  1           // InterfaceMethod org/h2/index/Index.getDatabase:()Lorg/h2/engine/Database;
       9: areturn

  public int getId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #78,  1           // InterfaceMethod org/h2/index/Index.getId:()I
       9: ireturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #79,  1           // InterfaceMethod org/h2/index/Index.getName:()Ljava/lang/String;
       9: areturn

  public boolean isTemporary();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #80,  1           // InterfaceMethod org/h2/index/Index.isTemporary:()Z
       9: ireturn

  public void rename(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: aload_1
       5: invokeinterface #81,  2           // InterfaceMethod org/h2/index/Index.rename:(Ljava/lang/String;)V
      10: return

  public void setComment(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: aload_1
       5: invokeinterface #82,  2           // InterfaceMethod org/h2/index/Index.setComment:(Ljava/lang/String;)V
      10: return

  public void setTemporary(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: iload_1
       5: invokeinterface #83,  2           // InterfaceMethod org/h2/index/Index.setTemporary:(Z)V
      10: return

  public long getRowCountApproximation();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #84,  1           // InterfaceMethod org/h2/index/Index.getRowCountApproximation:()J
       9: lreturn

  public long getDiskSpaceUsed();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #85,  1           // InterfaceMethod org/h2/index/Index.getDiskSpaceUsed:()J
       9: lreturn

  public org.h2.index.Index getBaseIndex();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: areturn

  public org.h2.result.Row getRow(org.h2.engine.Session, long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: aload_1
       5: lload_2
       6: invokeinterface #86,  4           // InterfaceMethod org/h2/index/Index.getRow:(Lorg/h2/engine/Session;J)Lorg/h2/result/Row;
      11: areturn

  public boolean isHidden();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #87,  1           // InterfaceMethod org/h2/index/Index.isHidden:()Z
       9: ireturn

  public boolean isRowIdIndex();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #88,  1           // InterfaceMethod org/h2/index/Index.isRowIdIndex:()Z
       9: ifeq          26
      12: aload_0
      13: getfield      #13                 // Field delta:Lorg/h2/index/TreeIndex;
      16: invokevirtual #89                 // Method org/h2/index/TreeIndex.isRowIdIndex:()Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean canScan();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: invokeinterface #90,  1           // InterfaceMethod org/h2/index/Index.canScan:()Z
       9: ireturn

  public void setSortedInsertMode(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/h2/index/Index;
       4: iload_1
       5: invokeinterface #91,  2           // InterfaceMethod org/h2/index/Index.setSortedInsertMode:(Z)V
      10: aload_0
      11: getfield      #13                 // Field delta:Lorg/h2/index/TreeIndex;
      14: iload_1
      15: invokevirtual #92                 // Method org/h2/index/TreeIndex.setSortedInsertMode:(Z)V
      18: return

  public org.h2.index.IndexLookupBatch createLookupBatch(org.h2.table.TableFilter[], int);
    Code:
       0: aconst_null
       1: areturn
}
