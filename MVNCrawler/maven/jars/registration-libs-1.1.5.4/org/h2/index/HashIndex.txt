Compiled from "HashIndex.java"
public class org.h2.index.HashIndex extends org.h2.index.BaseIndex {
  private final int indexColumn;

  private final org.h2.table.RegularTable tableData;

  private org.h2.util.ValueHashMap<java.lang.Long> rows;

  public org.h2.index.HashIndex(org.h2.table.RegularTable, int, java.lang.String, org.h2.table.IndexColumn[], org.h2.index.IndexType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/index/BaseIndex."<init>":()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: aload_3
       8: aload         4
      10: aload         5
      12: invokevirtual #2                  // Method initBaseIndex:(Lorg/h2/table/Table;ILjava/lang/String;[Lorg/h2/table/IndexColumn;Lorg/h2/index/IndexType;)V
      15: aload_0
      16: aload         4
      18: iconst_0
      19: aaload
      20: getfield      #3                  // Field org/h2/table/IndexColumn.column:Lorg/h2/table/Column;
      23: invokevirtual #4                  // Method org/h2/table/Column.getColumnId:()I
      26: putfield      #5                  // Field indexColumn:I
      29: aload_0
      30: aload_1
      31: putfield      #6                  // Field tableData:Lorg/h2/table/RegularTable;
      34: aload_0
      35: invokespecial #7                  // Method reset:()V
      38: return

  private void reset();
    Code:
       0: aload_0
       1: invokestatic  #8                  // Method org/h2/util/ValueHashMap.newInstance:()Lorg/h2/util/ValueHashMap;
       4: putfield      #9                  // Field rows:Lorg/h2/util/ValueHashMap;
       7: return

  public void truncate(org.h2.engine.Session);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method reset:()V
       4: return

  public void add(org.h2.engine.Session, org.h2.result.Row);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #5                  // Field indexColumn:I
       5: invokeinterface #10,  2           // InterfaceMethod org/h2/result/Row.getValue:(I)Lorg/h2/value/Value;
      10: astore_3
      11: aload_0
      12: getfield      #9                  // Field rows:Lorg/h2/util/ValueHashMap;
      15: aload_3
      16: invokevirtual #11                 // Method org/h2/util/ValueHashMap.get:(Lorg/h2/value/Value;)Ljava/lang/Object;
      19: astore        4
      21: aload         4
      23: ifnull        35
      26: aload_0
      27: aload_3
      28: invokevirtual #12                 // Method org/h2/value/Value.toString:()Ljava/lang/String;
      31: invokevirtual #13                 // Method getDuplicateKeyException:(Ljava/lang/String;)Lorg/h2/message/DbException;
      34: athrow
      35: aload_0
      36: getfield      #9                  // Field rows:Lorg/h2/util/ValueHashMap;
      39: aload_3
      40: aload_2
      41: invokeinterface #14,  1           // InterfaceMethod org/h2/result/Row.getKey:()J
      46: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      49: invokevirtual #16                 // Method org/h2/util/ValueHashMap.put:(Lorg/h2/value/Value;Ljava/lang/Object;)V
      52: return

  public void remove(org.h2.engine.Session, org.h2.result.Row);
    Code:
       0: aload_0
       1: getfield      #9                  // Field rows:Lorg/h2/util/ValueHashMap;
       4: aload_2
       5: aload_0
       6: getfield      #5                  // Field indexColumn:I
       9: invokeinterface #10,  2           // InterfaceMethod org/h2/result/Row.getValue:(I)Lorg/h2/value/Value;
      14: invokevirtual #17                 // Method org/h2/util/ValueHashMap.remove:(Lorg/h2/value/Value;)V
      17: return

  public org.h2.index.Cursor find(org.h2.engine.Session, org.h2.result.SearchRow, org.h2.result.SearchRow);
    Code:
       0: aload_2
       1: ifnull        8
       4: aload_3
       5: ifnonnull     35
       8: new           #18                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      15: aload_2
      16: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #21                 // String
      21: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_3
      25: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokestatic  #24                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      34: athrow
      35: aload_2
      36: aload_0
      37: getfield      #5                  // Field indexColumn:I
      40: invokeinterface #25,  2           // InterfaceMethod org/h2/result/SearchRow.getValue:(I)Lorg/h2/value/Value;
      45: astore        4
      47: aload         4
      49: aload_0
      50: getfield      #6                  // Field tableData:Lorg/h2/table/RegularTable;
      53: aload_0
      54: getfield      #5                  // Field indexColumn:I
      57: invokevirtual #26                 // Method org/h2/table/RegularTable.getColumn:(I)Lorg/h2/table/Column;
      60: invokevirtual #27                 // Method org/h2/table/Column.getType:()I
      63: invokevirtual #28                 // Method org/h2/value/Value.convertTo:(I)Lorg/h2/value/Value;
      66: astore        4
      68: aload_0
      69: getfield      #9                  // Field rows:Lorg/h2/util/ValueHashMap;
      72: aload         4
      74: invokevirtual #11                 // Method org/h2/util/ValueHashMap.get:(Lorg/h2/value/Value;)Ljava/lang/Object;
      77: checkcast     #29                 // class java/lang/Long
      80: astore        6
      82: aload         6
      84: ifnonnull     93
      87: aconst_null
      88: astore        5
      90: goto          109
      93: aload_0
      94: getfield      #6                  // Field tableData:Lorg/h2/table/RegularTable;
      97: aload_1
      98: aload         6
     100: invokevirtual #30                 // Method java/lang/Long.intValue:()I
     103: i2l
     104: invokevirtual #31                 // Method org/h2/table/RegularTable.getRow:(Lorg/h2/engine/Session;J)Lorg/h2/result/Row;
     107: astore        5
     109: new           #32                 // class org/h2/index/SingleRowCursor
     112: dup
     113: aload         5
     115: invokespecial #33                 // Method org/h2/index/SingleRowCursor."<init>":(Lorg/h2/result/Row;)V
     118: areturn

  public long getRowCount(org.h2.engine.Session);
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method getRowCountApproximation:()J
       4: lreturn

  public long getRowCountApproximation();
    Code:
       0: aload_0
       1: getfield      #9                  // Field rows:Lorg/h2/util/ValueHashMap;
       4: invokevirtual #35                 // Method org/h2/util/ValueHashMap.size:()I
       7: i2l
       8: lreturn

  public long getDiskSpaceUsed();
    Code:
       0: lconst_0
       1: lreturn

  public void close(org.h2.engine.Session);
    Code:
       0: return

  public void remove(org.h2.engine.Session);
    Code:
       0: return

  public double getCost(org.h2.engine.Session, int[], org.h2.table.TableFilter[], int, org.h2.result.SortOrder, java.util.HashSet<org.h2.table.Column>);
    Code:
       0: aload_0
       1: getfield      #36                 // Field columns:[Lorg/h2/table/Column;
       4: astore        7
       6: aload         7
       8: arraylength
       9: istore        8
      11: iconst_0
      12: istore        9
      14: iload         9
      16: iload         8
      18: if_icmpge     59
      21: aload         7
      23: iload         9
      25: aaload
      26: astore        10
      28: aload         10
      30: invokevirtual #4                  // Method org/h2/table/Column.getColumnId:()I
      33: istore        11
      35: aload_2
      36: iload         11
      38: iaload
      39: istore        12
      41: iload         12
      43: iconst_1
      44: iand
      45: iconst_1
      46: if_icmpeq     53
      49: ldc2_w        #37                 // double 9.223372036854776E18d
      52: dreturn
      53: iinc          9, 1
      56: goto          14
      59: ldc2_w        #39                 // double 2.0d
      62: dreturn

  public void checkRename();
    Code:
       0: return

  public boolean needRebuild();
    Code:
       0: iconst_1
       1: ireturn

  public boolean canGetFirstOrLast();
    Code:
       0: iconst_0
       1: ireturn

  public org.h2.index.Cursor findFirstOrLast(org.h2.engine.Session, boolean);
    Code:
       0: ldc           #41                 // String HASH
       2: invokestatic  #42                 // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
       5: athrow

  public boolean canScan();
    Code:
       0: iconst_0
       1: ireturn
}
