Compiled from "PageData.java"
abstract class org.h2.index.PageData extends org.h2.store.Page {
  static final int START_PARENT;

  static final int ROOT;

  static final int UNKNOWN_ROWCOUNT;

  protected final org.h2.index.PageDataIndex index;

  protected int parentPageId;

  protected final org.h2.store.Data data;

  protected int entryCount;

  protected long[] keys;

  protected boolean written;

  private final int memoryEstimated;

  org.h2.index.PageData(org.h2.index.PageDataIndex, int, org.h2.store.Data);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/store/Page."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field index:Lorg/h2/index/PageDataIndex;
       9: aload_0
      10: aload_3
      11: putfield      #3                  // Field data:Lorg/h2/store/Data;
      14: aload_0
      15: iload_2
      16: invokevirtual #4                  // Method setPos:(I)V
      19: aload_0
      20: aload_1
      21: invokevirtual #5                  // Method org/h2/index/PageDataIndex.getMemoryPerPage:()I
      24: putfield      #6                  // Field memoryEstimated:I
      27: return

  abstract int getRowCount();

  abstract void setRowCountStored(int);

  abstract long getDiskSpaceUsed();

  int find(long);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_0
       3: getfield      #7                  // Field entryCount:I
       6: istore        4
       8: iload_3
       9: iload         4
      11: if_icmpge     63
      14: iload_3
      15: iload         4
      17: iadd
      18: iconst_1
      19: iushr
      20: istore        5
      22: aload_0
      23: getfield      #8                  // Field keys:[J
      26: iload         5
      28: laload
      29: lstore        6
      31: lload         6
      33: lload_1
      34: lcmp
      35: ifne          41
      38: iload         5
      40: ireturn
      41: lload         6
      43: lload_1
      44: lcmp
      45: ifle          55
      48: iload         5
      50: istore        4
      52: goto          60
      55: iload         5
      57: iconst_1
      58: iadd
      59: istore_3
      60: goto          8
      63: iload_3
      64: ireturn

  abstract int addRowTry(org.h2.result.Row);

  abstract org.h2.index.Cursor find(org.h2.engine.Session, long, long, boolean);

  long getKey(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field keys:[J
       4: iload_1
       5: laload
       6: lreturn

  abstract org.h2.index.PageData split(int);

  void setPageId(int);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getPos:()I
       4: istore_2
       5: aload_0
       6: getfield      #2                  // Field index:Lorg/h2/index/PageDataIndex;
       9: invokevirtual #10                 // Method org/h2/index/PageDataIndex.getPageStore:()Lorg/h2/store/PageStore;
      12: aload_0
      13: invokevirtual #9                  // Method getPos:()I
      16: invokevirtual #11                 // Method org/h2/store/PageStore.removeFromCache:(I)V
      19: aload_0
      20: iload_1
      21: invokevirtual #4                  // Method setPos:(I)V
      24: aload_0
      25: getfield      #2                  // Field index:Lorg/h2/index/PageDataIndex;
      28: invokevirtual #10                 // Method org/h2/index/PageDataIndex.getPageStore:()Lorg/h2/store/PageStore;
      31: aload_0
      32: aconst_null
      33: invokevirtual #12                 // Method org/h2/store/PageStore.logUndo:(Lorg/h2/store/Page;Lorg/h2/store/Data;)V
      36: aload_0
      37: iload_2
      38: invokevirtual #13                 // Method remapChildren:(I)V
      41: return

  abstract long getLastKey();

  abstract org.h2.index.PageDataLeaf getFirstLeaf();

  void setParentPageId(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field index:Lorg/h2/index/PageDataIndex;
       4: invokevirtual #10                 // Method org/h2/index/PageDataIndex.getPageStore:()Lorg/h2/store/PageStore;
       7: aload_0
       8: aload_0
       9: getfield      #3                  // Field data:Lorg/h2/store/Data;
      12: invokevirtual #12                 // Method org/h2/store/PageStore.logUndo:(Lorg/h2/store/Page;Lorg/h2/store/Data;)V
      15: aload_0
      16: iload_1
      17: putfield      #14                 // Field parentPageId:I
      20: aload_0
      21: getfield      #15                 // Field written:Z
      24: ifeq          53
      27: aload_0
      28: aload_0
      29: getfield      #2                  // Field index:Lorg/h2/index/PageDataIndex;
      32: invokevirtual #10                 // Method org/h2/index/PageDataIndex.getPageStore:()Lorg/h2/store/PageStore;
      35: invokevirtual #16                 // Method org/h2/store/PageStore.getChangeCount:()J
      38: putfield      #17                 // Field changeCount:J
      41: aload_0
      42: getfield      #3                  // Field data:Lorg/h2/store/Data;
      45: iconst_3
      46: aload_0
      47: getfield      #14                 // Field parentPageId:I
      50: invokevirtual #18                 // Method org/h2/store/Data.setInt:(II)V
      53: return

  abstract void remapChildren(int);

  abstract boolean remove(long);

  abstract void freeRecursive();

  abstract org.h2.result.Row getRowWithKey(long);

  public int getMemory();
    Code:
       0: aload_0
       1: getfield      #6                  // Field memoryEstimated:I
       4: ireturn

  int getParentPageId();
    Code:
       0: aload_0
       1: getfield      #14                 // Field parentPageId:I
       4: ireturn

  public boolean canRemove();
    Code:
       0: aload_0
       1: getfield      #17                 // Field changeCount:J
       4: aload_0
       5: getfield      #2                  // Field index:Lorg/h2/index/PageDataIndex;
       8: invokevirtual #10                 // Method org/h2/index/PageDataIndex.getPageStore:()Lorg/h2/store/PageStore;
      11: invokevirtual #16                 // Method org/h2/store/PageStore.getChangeCount:()J
      14: lcmp
      15: ifge          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn
}
