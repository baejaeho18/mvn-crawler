Compiled from "PageBtree.java"
public abstract class org.h2.index.PageBtree extends org.h2.store.Page {
  static final int ROOT;

  static final int UNKNOWN_ROWCOUNT;

  protected final org.h2.index.PageBtreeIndex index;

  protected int parentPageId;

  protected final org.h2.store.Data data;

  protected int[] offsets;

  protected int entryCount;

  protected org.h2.result.SearchRow[] rows;

  protected int start;

  protected boolean onlyPosition;

  protected boolean written;

  private final int memoryEstimated;

  org.h2.index.PageBtree(org.h2.index.PageBtreeIndex, int, org.h2.store.Data);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/store/Page."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field index:Lorg/h2/index/PageBtreeIndex;
       9: aload_0
      10: aload_3
      11: putfield      #3                  // Field data:Lorg/h2/store/Data;
      14: aload_0
      15: iload_2
      16: invokevirtual #4                  // Method setPos:(I)V
      19: aload_0
      20: aload_1
      21: invokevirtual #5                  // Method org/h2/index/PageBtreeIndex.getMemoryPerPage:()I
      24: putfield      #6                  // Field memoryEstimated:I
      27: return

  abstract int getRowCount();

  abstract void setRowCountStored(int);

  int find(org.h2.result.SearchRow, boolean, boolean, boolean);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: iconst_0
       7: istore        5
       9: aload_0
      10: getfield      #7                  // Field entryCount:I
      13: istore        6
      15: iconst_1
      16: istore        7
      18: iload         5
      20: iload         6
      22: if_icmpge     154
      25: iload         5
      27: iload         6
      29: iadd
      30: iconst_1
      31: iushr
      32: istore        8
      34: aload_0
      35: iload         8
      37: invokevirtual #8                  // Method getRow:(I)Lorg/h2/result/SearchRow;
      40: astore        9
      42: aload_0
      43: getfield      #2                  // Field index:Lorg/h2/index/PageBtreeIndex;
      46: aload         9
      48: aload_1
      49: invokevirtual #9                  // Method org/h2/index/PageBtreeIndex.compareRows:(Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)I
      52: istore        7
      54: iload         7
      56: ifne          124
      59: iload_3
      60: ifeq          99
      63: aload_0
      64: getfield      #2                  // Field index:Lorg/h2/index/PageBtreeIndex;
      67: getfield      #10                 // Field org/h2/index/PageBtreeIndex.indexType:Lorg/h2/index/IndexType;
      70: invokevirtual #11                 // Method org/h2/index/IndexType.isUnique:()Z
      73: ifeq          99
      76: aload_0
      77: getfield      #2                  // Field index:Lorg/h2/index/PageBtreeIndex;
      80: aload_1
      81: invokevirtual #12                 // Method org/h2/index/PageBtreeIndex.mayHaveNullDuplicates:(Lorg/h2/result/SearchRow;)Z
      84: ifne          99
      87: aload_0
      88: getfield      #2                  // Field index:Lorg/h2/index/PageBtreeIndex;
      91: aload_1
      92: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
      95: invokevirtual #14                 // Method org/h2/index/PageBtreeIndex.getDuplicateKeyException:(Ljava/lang/String;)Lorg/h2/message/DbException;
      98: athrow
      99: iload         4
     101: ifeq          124
     104: aload_0
     105: getfield      #2                  // Field index:Lorg/h2/index/PageBtreeIndex;
     108: aload         9
     110: aload_1
     111: invokevirtual #15                 // Method org/h2/index/PageBtreeIndex.compareKeys:(Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)I
     114: istore        7
     116: iload         7
     118: ifne          124
     121: iload         8
     123: ireturn
     124: iload         7
     126: ifgt          138
     129: iload_2
     130: ifne          145
     133: iload         7
     135: ifne          145
     138: iload         8
     140: istore        6
     142: goto          151
     145: iload         8
     147: iconst_1
     148: iadd
     149: istore        5
     151: goto          18
     154: iload         5
     156: ireturn

  abstract int addRowTry(org.h2.result.SearchRow);

  abstract void find(org.h2.index.PageBtreeCursor, org.h2.result.SearchRow, boolean);

  abstract void last(org.h2.index.PageBtreeCursor);

  org.h2.result.SearchRow getRow(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field rows:[Lorg/h2/result/SearchRow;
       4: iload_1
       5: aaload
       6: astore_2
       7: aload_2
       8: ifnonnull     48
      11: aload_0
      12: getfield      #2                  // Field index:Lorg/h2/index/PageBtreeIndex;
      15: aload_0
      16: getfield      #3                  // Field data:Lorg/h2/store/Data;
      19: aload_0
      20: getfield      #17                 // Field offsets:[I
      23: iload_1
      24: iaload
      25: aload_0
      26: getfield      #18                 // Field onlyPosition:Z
      29: iconst_1
      30: invokevirtual #19                 // Method org/h2/index/PageBtreeIndex.readRow:(Lorg/h2/store/Data;IZZ)Lorg/h2/result/SearchRow;
      33: astore_2
      34: aload_0
      35: invokevirtual #20                 // Method memoryChange:()V
      38: aload_0
      39: getfield      #16                 // Field rows:[Lorg/h2/result/SearchRow;
      42: iload_1
      43: aload_2
      44: aastore
      45: goto          84
      48: aload_0
      49: getfield      #2                  // Field index:Lorg/h2/index/PageBtreeIndex;
      52: aload_2
      53: invokevirtual #21                 // Method org/h2/index/PageBtreeIndex.hasData:(Lorg/h2/result/SearchRow;)Z
      56: ifne          84
      59: aload_0
      60: getfield      #2                  // Field index:Lorg/h2/index/PageBtreeIndex;
      63: aload_2
      64: invokeinterface #22,  1           // InterfaceMethod org/h2/result/SearchRow.getKey:()J
      69: invokevirtual #23                 // Method org/h2/index/PageBtreeIndex.readRow:(J)Lorg/h2/result/SearchRow;
      72: astore_2
      73: aload_0
      74: invokevirtual #20                 // Method memoryChange:()V
      77: aload_0
      78: getfield      #16                 // Field rows:[Lorg/h2/result/SearchRow;
      81: iload_1
      82: aload_2
      83: aastore
      84: aload_2
      85: areturn

  protected void memoryChange();
    Code:
       0: return

  abstract org.h2.index.PageBtree split(int);

  void setPageId(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field index:Lorg/h2/index/PageBtreeIndex;
       5: invokevirtual #24                 // Method org/h2/index/PageBtreeIndex.getPageStore:()Lorg/h2/store/PageStore;
       8: invokevirtual #25                 // Method org/h2/store/PageStore.getChangeCount:()J
      11: putfield      #26                 // Field changeCount:J
      14: aload_0
      15: iconst_0
      16: putfield      #27                 // Field written:Z
      19: aload_0
      20: getfield      #2                  // Field index:Lorg/h2/index/PageBtreeIndex;
      23: invokevirtual #24                 // Method org/h2/index/PageBtreeIndex.getPageStore:()Lorg/h2/store/PageStore;
      26: aload_0
      27: invokevirtual #28                 // Method getPos:()I
      30: invokevirtual #29                 // Method org/h2/store/PageStore.removeFromCache:(I)V
      33: aload_0
      34: iload_1
      35: invokevirtual #4                  // Method setPos:(I)V
      38: aload_0
      39: getfield      #2                  // Field index:Lorg/h2/index/PageBtreeIndex;
      42: invokevirtual #24                 // Method org/h2/index/PageBtreeIndex.getPageStore:()Lorg/h2/store/PageStore;
      45: aload_0
      46: aconst_null
      47: invokevirtual #30                 // Method org/h2/store/PageStore.logUndo:(Lorg/h2/store/Page;Lorg/h2/store/Data;)V
      50: aload_0
      51: invokevirtual #31                 // Method remapChildren:()V
      54: return

  abstract org.h2.index.PageBtreeLeaf getFirstLeaf();

  abstract org.h2.index.PageBtreeLeaf getLastLeaf();

  void setParentPageId(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field index:Lorg/h2/index/PageBtreeIndex;
       4: invokevirtual #24                 // Method org/h2/index/PageBtreeIndex.getPageStore:()Lorg/h2/store/PageStore;
       7: aload_0
       8: aload_0
       9: getfield      #3                  // Field data:Lorg/h2/store/Data;
      12: invokevirtual #30                 // Method org/h2/store/PageStore.logUndo:(Lorg/h2/store/Page;Lorg/h2/store/Data;)V
      15: aload_0
      16: aload_0
      17: getfield      #2                  // Field index:Lorg/h2/index/PageBtreeIndex;
      20: invokevirtual #24                 // Method org/h2/index/PageBtreeIndex.getPageStore:()Lorg/h2/store/PageStore;
      23: invokevirtual #25                 // Method org/h2/store/PageStore.getChangeCount:()J
      26: putfield      #26                 // Field changeCount:J
      29: aload_0
      30: iconst_0
      31: putfield      #27                 // Field written:Z
      34: aload_0
      35: iload_1
      36: putfield      #32                 // Field parentPageId:I
      39: return

  abstract void remapChildren();

  abstract org.h2.result.SearchRow remove(org.h2.result.SearchRow);

  abstract void freeRecursive();

  protected void readAllRows();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #7                  // Field entryCount:I
       7: if_icmpge     57
      10: aload_0
      11: getfield      #16                 // Field rows:[Lorg/h2/result/SearchRow;
      14: iload_1
      15: aaload
      16: astore_2
      17: aload_2
      18: ifnonnull     51
      21: aload_0
      22: getfield      #2                  // Field index:Lorg/h2/index/PageBtreeIndex;
      25: aload_0
      26: getfield      #3                  // Field data:Lorg/h2/store/Data;
      29: aload_0
      30: getfield      #17                 // Field offsets:[I
      33: iload_1
      34: iaload
      35: aload_0
      36: getfield      #18                 // Field onlyPosition:Z
      39: iconst_0
      40: invokevirtual #19                 // Method org/h2/index/PageBtreeIndex.readRow:(Lorg/h2/store/Data;IZZ)Lorg/h2/result/SearchRow;
      43: astore_2
      44: aload_0
      45: getfield      #16                 // Field rows:[Lorg/h2/result/SearchRow;
      48: iload_1
      49: aload_2
      50: aastore
      51: iinc          1, 1
      54: goto          2
      57: return

  public int getMemory();
    Code:
       0: aload_0
       1: getfield      #6                  // Field memoryEstimated:I
       4: ireturn

  public boolean canRemove();
    Code:
       0: aload_0
       1: getfield      #26                 // Field changeCount:J
       4: aload_0
       5: getfield      #2                  // Field index:Lorg/h2/index/PageBtreeIndex;
       8: invokevirtual #24                 // Method org/h2/index/PageBtreeIndex.getPageStore:()Lorg/h2/store/PageStore;
      11: invokevirtual #25                 // Method org/h2/store/PageStore.getChangeCount:()J
      14: lcmp
      15: ifge          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn
}
