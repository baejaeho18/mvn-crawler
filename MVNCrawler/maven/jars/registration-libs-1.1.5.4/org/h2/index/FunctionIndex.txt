Compiled from "FunctionIndex.java"
public class org.h2.index.FunctionIndex extends org.h2.index.BaseIndex {
  private final org.h2.table.FunctionTable functionTable;

  public org.h2.index.FunctionIndex(org.h2.table.FunctionTable, org.h2.table.IndexColumn[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/index/BaseIndex."<init>":()V
       4: aload_0
       5: aload_1
       6: iconst_0
       7: aconst_null
       8: aload_2
       9: iconst_1
      10: invokestatic  #2                  // Method org/h2/index/IndexType.createNonUnique:(Z)Lorg/h2/index/IndexType;
      13: invokevirtual #3                  // Method initBaseIndex:(Lorg/h2/table/Table;ILjava/lang/String;[Lorg/h2/table/IndexColumn;Lorg/h2/index/IndexType;)V
      16: aload_0
      17: aload_1
      18: putfield      #4                  // Field functionTable:Lorg/h2/table/FunctionTable;
      21: return

  public void close(org.h2.engine.Session);
    Code:
       0: return

  public void add(org.h2.engine.Session, org.h2.result.Row);
    Code:
       0: ldc           #5                  // String ALIAS
       2: invokestatic  #6                  // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
       5: athrow

  public void remove(org.h2.engine.Session, org.h2.result.Row);
    Code:
       0: ldc           #5                  // String ALIAS
       2: invokestatic  #6                  // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
       5: athrow

  public boolean isFindUsingFullTableScan();
    Code:
       0: iconst_1
       1: ireturn

  public org.h2.index.Cursor find(org.h2.engine.Session, org.h2.result.SearchRow, org.h2.result.SearchRow);
    Code:
       0: aload_0
       1: getfield      #4                  // Field functionTable:Lorg/h2/table/FunctionTable;
       4: invokevirtual #7                  // Method org/h2/table/FunctionTable.isBufferResultSetToLocalTemp:()Z
       7: ifeq          30
      10: new           #8                  // class org/h2/index/FunctionCursor
      13: dup
      14: aload_0
      15: aload_2
      16: aload_3
      17: aload_1
      18: aload_0
      19: getfield      #4                  // Field functionTable:Lorg/h2/table/FunctionTable;
      22: aload_1
      23: invokevirtual #9                  // Method org/h2/table/FunctionTable.getResult:(Lorg/h2/engine/Session;)Lorg/h2/result/ResultInterface;
      26: invokespecial #10                 // Method org/h2/index/FunctionCursor."<init>":(Lorg/h2/index/FunctionIndex;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;Lorg/h2/engine/Session;Lorg/h2/result/ResultInterface;)V
      29: areturn
      30: new           #11                 // class org/h2/index/FunctionCursorResultSet
      33: dup
      34: aload_0
      35: aload_2
      36: aload_3
      37: aload_1
      38: aload_0
      39: getfield      #4                  // Field functionTable:Lorg/h2/table/FunctionTable;
      42: aload_1
      43: invokevirtual #12                 // Method org/h2/table/FunctionTable.getResultSet:(Lorg/h2/engine/Session;)Ljava/sql/ResultSet;
      46: invokespecial #13                 // Method org/h2/index/FunctionCursorResultSet."<init>":(Lorg/h2/index/FunctionIndex;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;Lorg/h2/engine/Session;Ljava/sql/ResultSet;)V
      49: areturn

  public double getCost(org.h2.engine.Session, int[], org.h2.table.TableFilter[], int, org.h2.result.SortOrder, java.util.HashSet<org.h2.table.Column>);
    Code:
       0: aload_2
       1: ifnull        10
       4: ldc           #5                  // String ALIAS
       6: invokestatic  #6                  // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
       9: athrow
      10: aload_0
      11: getfield      #4                  // Field functionTable:Lorg/h2/table/FunctionTable;
      14: invokevirtual #14                 // Method org/h2/table/FunctionTable.canGetRowCount:()Z
      17: ifeq          32
      20: aload_0
      21: getfield      #4                  // Field functionTable:Lorg/h2/table/FunctionTable;
      24: invokevirtual #15                 // Method org/h2/table/FunctionTable.getRowCountApproximation:()J
      27: lstore        7
      29: goto          45
      32: aload_0
      33: getfield      #16                 // Field database:Lorg/h2/engine/Database;
      36: invokevirtual #17                 // Method org/h2/engine/Database.getSettings:()Lorg/h2/engine/DbSettings;
      39: getfield      #18                 // Field org/h2/engine/DbSettings.estimatedFunctionTableRows:I
      42: i2l
      43: lstore        7
      45: lload         7
      47: ldc2_w        #19                 // long 10l
      50: lmul
      51: l2d
      52: dreturn

  public void remove(org.h2.engine.Session);
    Code:
       0: ldc           #5                  // String ALIAS
       2: invokestatic  #6                  // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
       5: athrow

  public void truncate(org.h2.engine.Session);
    Code:
       0: ldc           #5                  // String ALIAS
       2: invokestatic  #6                  // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
       5: athrow

  public boolean needRebuild();
    Code:
       0: iconst_0
       1: ireturn

  public void checkRename();
    Code:
       0: ldc           #5                  // String ALIAS
       2: invokestatic  #6                  // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
       5: athrow

  public boolean canGetFirstOrLast();
    Code:
       0: iconst_0
       1: ireturn

  public org.h2.index.Cursor findFirstOrLast(org.h2.engine.Session, boolean);
    Code:
       0: ldc           #5                  // String ALIAS
       2: invokestatic  #6                  // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
       5: athrow

  public long getRowCount(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #4                  // Field functionTable:Lorg/h2/table/FunctionTable;
       4: aload_1
       5: invokevirtual #21                 // Method org/h2/table/FunctionTable.getRowCount:(Lorg/h2/engine/Session;)J
       8: lreturn

  public long getRowCountApproximation();
    Code:
       0: aload_0
       1: getfield      #4                  // Field functionTable:Lorg/h2/table/FunctionTable;
       4: invokevirtual #15                 // Method org/h2/table/FunctionTable.getRowCountApproximation:()J
       7: lreturn

  public long getDiskSpaceUsed();
    Code:
       0: lconst_0
       1: lreturn

  public java.lang.String getPlanSQL();
    Code:
       0: ldc           #22                 // String function
       2: areturn

  public boolean canScan();
    Code:
       0: iconst_0
       1: ireturn
}
