Compiled from "NonUniqueHashIndex.java"
public class org.h2.index.NonUniqueHashIndex extends org.h2.index.BaseIndex {
  private final int indexColumn;

  private org.h2.util.ValueHashMap<java.util.ArrayList<java.lang.Long>> rows;

  private final org.h2.table.RegularTable tableData;

  private long rowCount;

  public org.h2.index.NonUniqueHashIndex(org.h2.table.RegularTable, int, java.lang.String, org.h2.table.IndexColumn[], org.h2.index.IndexType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/index/BaseIndex."<init>":()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: aload_3
       8: aload         4
      10: aload         5
      12: invokevirtual #2                  // Method initBaseIndex:(Lorg/h2/table/Table;ILjava/lang/String;[Lorg/h2/table/IndexColumn;Lorg/h2/index/IndexType;)V
      15: aload_0
      16: aload         4
      18: iconst_0
      19: aaload
      20: getfield      #3                  // Field org/h2/table/IndexColumn.column:Lorg/h2/table/Column;
      23: invokevirtual #4                  // Method org/h2/table/Column.getColumnId:()I
      26: putfield      #5                  // Field indexColumn:I
      29: aload_0
      30: aload_1
      31: putfield      #6                  // Field tableData:Lorg/h2/table/RegularTable;
      34: aload_0
      35: invokespecial #7                  // Method reset:()V
      38: return

  private void reset();
    Code:
       0: aload_0
       1: invokestatic  #8                  // Method org/h2/util/ValueHashMap.newInstance:()Lorg/h2/util/ValueHashMap;
       4: putfield      #9                  // Field rows:Lorg/h2/util/ValueHashMap;
       7: aload_0
       8: lconst_0
       9: putfield      #10                 // Field rowCount:J
      12: return

  public void truncate(org.h2.engine.Session);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method reset:()V
       4: return

  public void add(org.h2.engine.Session, org.h2.result.Row);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #5                  // Field indexColumn:I
       5: invokeinterface #11,  2           // InterfaceMethod org/h2/result/Row.getValue:(I)Lorg/h2/value/Value;
      10: astore_3
      11: aload_0
      12: getfield      #9                  // Field rows:Lorg/h2/util/ValueHashMap;
      15: aload_3
      16: invokevirtual #12                 // Method org/h2/util/ValueHashMap.get:(Lorg/h2/value/Value;)Ljava/lang/Object;
      19: checkcast     #13                 // class java/util/ArrayList
      22: astore        4
      24: aload         4
      26: ifnonnull     44
      29: invokestatic  #14                 // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
      32: astore        4
      34: aload_0
      35: getfield      #9                  // Field rows:Lorg/h2/util/ValueHashMap;
      38: aload_3
      39: aload         4
      41: invokevirtual #15                 // Method org/h2/util/ValueHashMap.put:(Lorg/h2/value/Value;Ljava/lang/Object;)V
      44: aload         4
      46: aload_2
      47: invokeinterface #16,  1           // InterfaceMethod org/h2/result/Row.getKey:()J
      52: invokestatic  #17                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      55: invokevirtual #18                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      58: pop
      59: aload_0
      60: dup
      61: getfield      #10                 // Field rowCount:J
      64: lconst_1
      65: ladd
      66: putfield      #10                 // Field rowCount:J
      69: return

  public void remove(org.h2.engine.Session, org.h2.result.Row);
    Code:
       0: aload_0
       1: getfield      #10                 // Field rowCount:J
       4: lconst_1
       5: lcmp
       6: ifne          16
       9: aload_0
      10: invokespecial #7                  // Method reset:()V
      13: goto          85
      16: aload_2
      17: aload_0
      18: getfield      #5                  // Field indexColumn:I
      21: invokeinterface #11,  2           // InterfaceMethod org/h2/result/Row.getValue:(I)Lorg/h2/value/Value;
      26: astore_3
      27: aload_0
      28: getfield      #9                  // Field rows:Lorg/h2/util/ValueHashMap;
      31: aload_3
      32: invokevirtual #12                 // Method org/h2/util/ValueHashMap.get:(Lorg/h2/value/Value;)Ljava/lang/Object;
      35: checkcast     #13                 // class java/util/ArrayList
      38: astore        4
      40: aload         4
      42: invokevirtual #19                 // Method java/util/ArrayList.size:()I
      45: iconst_1
      46: if_icmpne     60
      49: aload_0
      50: getfield      #9                  // Field rows:Lorg/h2/util/ValueHashMap;
      53: aload_3
      54: invokevirtual #20                 // Method org/h2/util/ValueHashMap.remove:(Lorg/h2/value/Value;)V
      57: goto          75
      60: aload         4
      62: aload_2
      63: invokeinterface #16,  1           // InterfaceMethod org/h2/result/Row.getKey:()J
      68: invokestatic  #17                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      71: invokevirtual #21                 // Method java/util/ArrayList.remove:(Ljava/lang/Object;)Z
      74: pop
      75: aload_0
      76: dup
      77: getfield      #10                 // Field rowCount:J
      80: lconst_1
      81: lsub
      82: putfield      #10                 // Field rowCount:J
      85: return

  public org.h2.index.Cursor find(org.h2.engine.Session, org.h2.result.SearchRow, org.h2.result.SearchRow);
    Code:
       0: aload_2
       1: ifnull        8
       4: aload_3
       5: ifnonnull     35
       8: new           #22                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      15: aload_2
      16: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #25                 // String
      21: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_3
      25: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokestatic  #28                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      34: athrow
      35: aload_2
      36: aload_3
      37: if_acmpeq     53
      40: aload_0
      41: aload_2
      42: aload_3
      43: invokevirtual #29                 // Method compareKeys:(Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)I
      46: ifeq          53
      49: invokestatic  #30                 // Method org/h2/message/DbException.throwInternalError:()Ljava/lang/RuntimeException;
      52: athrow
      53: aload_2
      54: aload_0
      55: getfield      #5                  // Field indexColumn:I
      58: invokeinterface #31,  2           // InterfaceMethod org/h2/result/SearchRow.getValue:(I)Lorg/h2/value/Value;
      63: astore        4
      65: aload         4
      67: aload_0
      68: getfield      #6                  // Field tableData:Lorg/h2/table/RegularTable;
      71: aload_0
      72: getfield      #5                  // Field indexColumn:I
      75: invokevirtual #32                 // Method org/h2/table/RegularTable.getColumn:(I)Lorg/h2/table/Column;
      78: invokevirtual #33                 // Method org/h2/table/Column.getType:()I
      81: invokevirtual #34                 // Method org/h2/value/Value.convertTo:(I)Lorg/h2/value/Value;
      84: astore        4
      86: aload_0
      87: getfield      #9                  // Field rows:Lorg/h2/util/ValueHashMap;
      90: aload         4
      92: invokevirtual #12                 // Method org/h2/util/ValueHashMap.get:(Lorg/h2/value/Value;)Ljava/lang/Object;
      95: checkcast     #13                 // class java/util/ArrayList
      98: astore        5
     100: new           #35                 // class org/h2/index/NonUniqueHashCursor
     103: dup
     104: aload_1
     105: aload_0
     106: getfield      #6                  // Field tableData:Lorg/h2/table/RegularTable;
     109: aload         5
     111: invokespecial #36                 // Method org/h2/index/NonUniqueHashCursor."<init>":(Lorg/h2/engine/Session;Lorg/h2/table/RegularTable;Ljava/util/ArrayList;)V
     114: areturn

  public long getRowCount(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #10                 // Field rowCount:J
       4: lreturn

  public long getRowCountApproximation();
    Code:
       0: aload_0
       1: getfield      #10                 // Field rowCount:J
       4: lreturn

  public long getDiskSpaceUsed();
    Code:
       0: lconst_0
       1: lreturn

  public void close(org.h2.engine.Session);
    Code:
       0: return

  public void remove(org.h2.engine.Session);
    Code:
       0: return

  public double getCost(org.h2.engine.Session, int[], org.h2.table.TableFilter[], int, org.h2.result.SortOrder, java.util.HashSet<org.h2.table.Column>);
    Code:
       0: aload_0
       1: getfield      #37                 // Field columns:[Lorg/h2/table/Column;
       4: astore        7
       6: aload         7
       8: arraylength
       9: istore        8
      11: iconst_0
      12: istore        9
      14: iload         9
      16: iload         8
      18: if_icmpge     59
      21: aload         7
      23: iload         9
      25: aaload
      26: astore        10
      28: aload         10
      30: invokevirtual #4                  // Method org/h2/table/Column.getColumnId:()I
      33: istore        11
      35: aload_2
      36: iload         11
      38: iaload
      39: istore        12
      41: iload         12
      43: iconst_1
      44: iand
      45: iconst_1
      46: if_icmpeq     53
      49: ldc2_w        #38                 // double 9.223372036854776E18d
      52: dreturn
      53: iinc          9, 1
      56: goto          14
      59: ldc2_w        #40                 // double 2.0d
      62: dreturn

  public void checkRename();
    Code:
       0: return

  public boolean needRebuild();
    Code:
       0: iconst_1
       1: ireturn

  public boolean canGetFirstOrLast();
    Code:
       0: iconst_0
       1: ireturn

  public org.h2.index.Cursor findFirstOrLast(org.h2.engine.Session, boolean);
    Code:
       0: ldc           #42                 // String HASH
       2: invokestatic  #43                 // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
       5: athrow

  public boolean canScan();
    Code:
       0: iconst_0
       1: ireturn
}
