Compiled from "MultiVersionCursor.java"
public class org.h2.index.MultiVersionCursor implements org.h2.index.Cursor {
  private final org.h2.index.MultiVersionIndex index;

  private final org.h2.engine.Session session;

  private final org.h2.index.Cursor baseCursor;

  private final org.h2.index.Cursor deltaCursor;

  private final java.lang.Object sync;

  private org.h2.result.SearchRow baseRow;

  private org.h2.result.Row deltaRow;

  private boolean onBase;

  private boolean end;

  private boolean needNewDelta;

  private boolean needNewBase;

  private boolean reverse;

  org.h2.index.MultiVersionCursor(org.h2.engine.Session, org.h2.index.MultiVersionIndex, org.h2.index.Cursor, org.h2.index.Cursor, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field session:Lorg/h2/engine/Session;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field index:Lorg/h2/index/MultiVersionIndex;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field baseCursor:Lorg/h2/index/Cursor;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field deltaCursor:Lorg/h2/index/Cursor;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field sync:Ljava/lang/Object;
      31: aload_0
      32: iconst_1
      33: putfield      #7                  // Field needNewDelta:Z
      36: aload_0
      37: iconst_1
      38: putfield      #8                  // Field needNewBase:Z
      41: return

  void loadCurrent();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sync:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: aload_0
       9: getfield      #4                  // Field baseCursor:Lorg/h2/index/Cursor;
      12: invokeinterface #9,  1            // InterfaceMethod org/h2/index/Cursor.getSearchRow:()Lorg/h2/result/SearchRow;
      17: putfield      #10                 // Field baseRow:Lorg/h2/result/SearchRow;
      20: aload_0
      21: aload_0
      22: getfield      #5                  // Field deltaCursor:Lorg/h2/index/Cursor;
      25: invokeinterface #11,  1           // InterfaceMethod org/h2/index/Cursor.get:()Lorg/h2/result/Row;
      30: putfield      #12                 // Field deltaRow:Lorg/h2/result/Row;
      33: aload_0
      34: iconst_0
      35: putfield      #7                  // Field needNewDelta:Z
      38: aload_0
      39: iconst_0
      40: putfield      #8                  // Field needNewBase:Z
      43: aload_1
      44: monitorexit
      45: goto          53
      48: astore_2
      49: aload_1
      50: monitorexit
      51: aload_2
      52: athrow
      53: return
    Exception table:
       from    to  target type
           7    45    48   any
          48    51    48   any

  private void loadNext(boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field sync:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: iload_1
       8: ifeq          46
      11: aload_0
      12: aload_0
      13: getfield      #4                  // Field baseCursor:Lorg/h2/index/Cursor;
      16: invokespecial #13                 // Method step:(Lorg/h2/index/Cursor;)Z
      19: ifeq          38
      22: aload_0
      23: aload_0
      24: getfield      #4                  // Field baseCursor:Lorg/h2/index/Cursor;
      27: invokeinterface #9,  1            // InterfaceMethod org/h2/index/Cursor.getSearchRow:()Lorg/h2/result/SearchRow;
      32: putfield      #10                 // Field baseRow:Lorg/h2/result/SearchRow;
      35: goto          78
      38: aload_0
      39: aconst_null
      40: putfield      #10                 // Field baseRow:Lorg/h2/result/SearchRow;
      43: goto          78
      46: aload_0
      47: aload_0
      48: getfield      #5                  // Field deltaCursor:Lorg/h2/index/Cursor;
      51: invokespecial #13                 // Method step:(Lorg/h2/index/Cursor;)Z
      54: ifeq          73
      57: aload_0
      58: aload_0
      59: getfield      #5                  // Field deltaCursor:Lorg/h2/index/Cursor;
      62: invokeinterface #11,  1           // InterfaceMethod org/h2/index/Cursor.get:()Lorg/h2/result/Row;
      67: putfield      #12                 // Field deltaRow:Lorg/h2/result/Row;
      70: goto          78
      73: aload_0
      74: aconst_null
      75: putfield      #12                 // Field deltaRow:Lorg/h2/result/Row;
      78: aload_2
      79: monitorexit
      80: goto          88
      83: astore_3
      84: aload_2
      85: monitorexit
      86: aload_3
      87: athrow
      88: return
    Exception table:
       from    to  target type
           7    80    83   any
          83    86    83   any

  private boolean step(org.h2.index.Cursor);
    Code:
       0: aload_0
       1: getfield      #14                 // Field reverse:Z
       4: ifeq          16
       7: aload_1
       8: invokeinterface #15,  1           // InterfaceMethod org/h2/index/Cursor.previous:()Z
      13: goto          22
      16: aload_1
      17: invokeinterface #16,  1           // InterfaceMethod org/h2/index/Cursor.next:()Z
      22: ireturn

  public org.h2.result.Row get();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sync:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #17                 // Field end:Z
      11: ifeq          18
      14: aconst_null
      15: aload_1
      16: monitorexit
      17: areturn
      18: aload_0
      19: getfield      #18                 // Field onBase:Z
      22: ifeq          37
      25: aload_0
      26: getfield      #4                  // Field baseCursor:Lorg/h2/index/Cursor;
      29: invokeinterface #11,  1           // InterfaceMethod org/h2/index/Cursor.get:()Lorg/h2/result/Row;
      34: goto          46
      37: aload_0
      38: getfield      #5                  // Field deltaCursor:Lorg/h2/index/Cursor;
      41: invokeinterface #11,  1           // InterfaceMethod org/h2/index/Cursor.get:()Lorg/h2/result/Row;
      46: aload_1
      47: monitorexit
      48: areturn
      49: astore_2
      50: aload_1
      51: monitorexit
      52: aload_2
      53: athrow
    Exception table:
       from    to  target type
           7    17    49   any
          18    48    49   any
          49    52    49   any

  public org.h2.result.SearchRow getSearchRow();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sync:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #17                 // Field end:Z
      11: ifeq          18
      14: aconst_null
      15: aload_1
      16: monitorexit
      17: areturn
      18: aload_0
      19: getfield      #18                 // Field onBase:Z
      22: ifeq          37
      25: aload_0
      26: getfield      #4                  // Field baseCursor:Lorg/h2/index/Cursor;
      29: invokeinterface #9,  1            // InterfaceMethod org/h2/index/Cursor.getSearchRow:()Lorg/h2/result/SearchRow;
      34: goto          46
      37: aload_0
      38: getfield      #5                  // Field deltaCursor:Lorg/h2/index/Cursor;
      41: invokeinterface #9,  1            // InterfaceMethod org/h2/index/Cursor.getSearchRow:()Lorg/h2/result/SearchRow;
      46: aload_1
      47: monitorexit
      48: areturn
      49: astore_2
      50: aload_1
      51: monitorexit
      52: aload_2
      53: athrow
    Exception table:
       from    to  target type
           7    17    49   any
          18    48    49   any
          49    52    49   any

  public boolean next();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sync:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: getstatic     #19                 // Field org/h2/engine/SysProperties.CHECK:Z
      10: ifeq          24
      13: aload_0
      14: getfield      #17                 // Field end:Z
      17: ifeq          24
      20: invokestatic  #20                 // Method org/h2/message/DbException.throwInternalError:()Ljava/lang/RuntimeException;
      23: pop
      24: aload_0
      25: getfield      #7                  // Field needNewDelta:Z
      28: ifeq          41
      31: aload_0
      32: iconst_0
      33: invokespecial #21                 // Method loadNext:(Z)V
      36: aload_0
      37: iconst_0
      38: putfield      #7                  // Field needNewDelta:Z
      41: aload_0
      42: getfield      #8                  // Field needNewBase:Z
      45: ifeq          58
      48: aload_0
      49: iconst_1
      50: invokespecial #21                 // Method loadNext:(Z)V
      53: aload_0
      54: iconst_0
      55: putfield      #8                  // Field needNewBase:Z
      58: aload_0
      59: getfield      #12                 // Field deltaRow:Lorg/h2/result/Row;
      62: ifnonnull     95
      65: aload_0
      66: getfield      #10                 // Field baseRow:Lorg/h2/result/SearchRow;
      69: ifnonnull     81
      72: aload_0
      73: iconst_1
      74: putfield      #17                 // Field end:Z
      77: iconst_0
      78: aload_1
      79: monitorexit
      80: ireturn
      81: aload_0
      82: iconst_1
      83: putfield      #18                 // Field onBase:Z
      86: aload_0
      87: iconst_1
      88: putfield      #8                  // Field needNewBase:Z
      91: iconst_1
      92: aload_1
      93: monitorexit
      94: ireturn
      95: aload_0
      96: getfield      #12                 // Field deltaRow:Lorg/h2/result/Row;
      99: invokeinterface #22,  1           // InterfaceMethod org/h2/result/Row.getSessionId:()I
     104: istore_2
     105: iload_2
     106: aload_0
     107: getfield      #2                  // Field session:Lorg/h2/engine/Session;
     110: invokevirtual #23                 // Method org/h2/engine/Session.getId:()I
     113: if_icmpne     120
     116: iconst_1
     117: goto          121
     120: iconst_0
     121: istore_3
     122: aload_0
     123: getfield      #12                 // Field deltaRow:Lorg/h2/result/Row;
     126: invokeinterface #24,  1           // InterfaceMethod org/h2/result/Row.isDeleted:()Z
     131: istore        4
     133: iload_3
     134: ifeq          150
     137: iload         4
     139: ifeq          150
     142: aload_0
     143: iconst_1
     144: putfield      #7                  // Field needNewDelta:Z
     147: goto          24
     150: aload_0
     151: getfield      #10                 // Field baseRow:Lorg/h2/result/SearchRow;
     154: ifnonnull     193
     157: iload         4
     159: ifeq          189
     162: iload_3
     163: ifeq          175
     166: aload_0
     167: iconst_1
     168: putfield      #17                 // Field end:Z
     171: iconst_0
     172: aload_1
     173: monitorexit
     174: ireturn
     175: aload_0
     176: iconst_0
     177: putfield      #18                 // Field onBase:Z
     180: aload_0
     181: iconst_1
     182: putfield      #7                  // Field needNewDelta:Z
     185: iconst_1
     186: aload_1
     187: monitorexit
     188: ireturn
     189: invokestatic  #20                 // Method org/h2/message/DbException.throwInternalError:()Ljava/lang/RuntimeException;
     192: pop
     193: aload_0
     194: getfield      #3                  // Field index:Lorg/h2/index/MultiVersionIndex;
     197: aload_0
     198: getfield      #12                 // Field deltaRow:Lorg/h2/result/Row;
     201: aload_0
     202: getfield      #10                 // Field baseRow:Lorg/h2/result/SearchRow;
     205: invokevirtual #25                 // Method org/h2/index/MultiVersionIndex.compareRows:(Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)I
     208: istore        5
     210: iload         5
     212: ifne          246
     215: aload_0
     216: getfield      #12                 // Field deltaRow:Lorg/h2/result/Row;
     219: invokeinterface #26,  1           // InterfaceMethod org/h2/result/Row.getKey:()J
     224: lstore        6
     226: aload_0
     227: getfield      #10                 // Field baseRow:Lorg/h2/result/SearchRow;
     230: invokeinterface #27,  1           // InterfaceMethod org/h2/result/SearchRow.getKey:()J
     235: lstore        8
     237: lload         6
     239: lload         8
     241: invokestatic  #28                 // Method java/lang/Long.compare:(JJ)I
     244: istore        5
     246: iload         5
     248: ifne          303
     251: iload         4
     253: ifeq          267
     256: iload_3
     257: ifeq          303
     260: invokestatic  #20                 // Method org/h2/message/DbException.throwInternalError:()Ljava/lang/RuntimeException;
     263: pop
     264: goto          303
     267: iload_3
     268: ifeq          290
     271: aload_0
     272: iconst_0
     273: putfield      #18                 // Field onBase:Z
     276: aload_0
     277: iconst_1
     278: putfield      #8                  // Field needNewBase:Z
     281: aload_0
     282: iconst_1
     283: putfield      #7                  // Field needNewDelta:Z
     286: iconst_1
     287: aload_1
     288: monitorexit
     289: ireturn
     290: aload_0
     291: iconst_1
     292: putfield      #8                  // Field needNewBase:Z
     295: aload_0
     296: iconst_1
     297: putfield      #7                  // Field needNewDelta:Z
     300: goto          24
     303: iload         5
     305: ifle          322
     308: aload_0
     309: iconst_1
     310: putfield      #18                 // Field onBase:Z
     313: aload_0
     314: iconst_1
     315: putfield      #8                  // Field needNewBase:Z
     318: iconst_1
     319: aload_1
     320: monitorexit
     321: ireturn
     322: aload_0
     323: iconst_0
     324: putfield      #18                 // Field onBase:Z
     327: aload_0
     328: iconst_1
     329: putfield      #7                  // Field needNewDelta:Z
     332: iconst_1
     333: aload_1
     334: monitorexit
     335: ireturn
     336: astore        10
     338: aload_1
     339: monitorexit
     340: aload         10
     342: athrow
    Exception table:
       from    to  target type
           7    80   336   any
          81    94   336   any
          95   174   336   any
         175   188   336   any
         189   289   336   any
         290   321   336   any
         322   335   336   any
         336   340   336   any

  public boolean previous();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #14                 // Field reverse:Z
       5: aload_0
       6: invokevirtual #29                 // Method next:()Z
       9: istore_1
      10: aload_0
      11: iconst_0
      12: putfield      #14                 // Field reverse:Z
      15: iload_1
      16: ireturn
      17: astore_2
      18: aload_0
      19: iconst_0
      20: putfield      #14                 // Field reverse:Z
      23: aload_2
      24: athrow
    Exception table:
       from    to  target type
           5    10    17   any
          17    18    17   any
}
