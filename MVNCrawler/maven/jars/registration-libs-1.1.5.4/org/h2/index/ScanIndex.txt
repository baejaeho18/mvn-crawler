Compiled from "ScanIndex.java"
public class org.h2.index.ScanIndex extends org.h2.index.BaseIndex {
  private long firstFree;

  private java.util.ArrayList<org.h2.result.Row> rows;

  private final org.h2.table.RegularTable tableData;

  private int rowCountDiff;

  private final java.util.HashMap<java.lang.Integer, java.lang.Integer> sessionRowCount;

  private java.util.HashSet<org.h2.result.Row> delta;

  private long rowCount;

  public org.h2.index.ScanIndex(org.h2.table.RegularTable, int, org.h2.table.IndexColumn[], org.h2.index.IndexType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/index/BaseIndex."<init>":()V
       4: aload_0
       5: ldc2_w        #2                  // long -1l
       8: putfield      #4                  // Field firstFree:J
      11: aload_0
      12: invokestatic  #5                  // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
      15: putfield      #6                  // Field rows:Ljava/util/ArrayList;
      18: aload_0
      19: aload_1
      20: iload_2
      21: new           #7                  // class java/lang/StringBuilder
      24: dup
      25: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      28: aload_1
      29: invokevirtual #9                  // Method org/h2/table/RegularTable.getName:()Ljava/lang/String;
      32: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #11                 // String _DATA
      37: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: aload_3
      44: aload         4
      46: invokevirtual #13                 // Method initBaseIndex:(Lorg/h2/table/Table;ILjava/lang/String;[Lorg/h2/table/IndexColumn;Lorg/h2/index/IndexType;)V
      49: aload_0
      50: getfield      #14                 // Field database:Lorg/h2/engine/Database;
      53: invokevirtual #15                 // Method org/h2/engine/Database.isMultiVersion:()Z
      56: ifeq          73
      59: aload_0
      60: new           #16                 // class java/util/HashMap
      63: dup
      64: invokespecial #17                 // Method java/util/HashMap."<init>":()V
      67: putfield      #18                 // Field sessionRowCount:Ljava/util/HashMap;
      70: goto          78
      73: aload_0
      74: aconst_null
      75: putfield      #18                 // Field sessionRowCount:Ljava/util/HashMap;
      78: aload_0
      79: aload_1
      80: putfield      #19                 // Field tableData:Lorg/h2/table/RegularTable;
      83: return

  public void remove(org.h2.engine.Session);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method truncate:(Lorg/h2/engine/Session;)V
       5: return

  public void truncate(org.h2.engine.Session);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
       4: putfield      #6                  // Field rows:Ljava/util/ArrayList;
       7: aload_0
       8: ldc2_w        #2                  // long -1l
      11: putfield      #4                  // Field firstFree:J
      14: aload_0
      15: getfield      #19                 // Field tableData:Lorg/h2/table/RegularTable;
      18: invokevirtual #21                 // Method org/h2/table/RegularTable.getContainsLargeObject:()Z
      21: ifeq          53
      24: aload_0
      25: getfield      #19                 // Field tableData:Lorg/h2/table/RegularTable;
      28: invokevirtual #22                 // Method org/h2/table/RegularTable.isPersistData:()Z
      31: ifeq          53
      34: aload_0
      35: getfield      #14                 // Field database:Lorg/h2/engine/Database;
      38: invokevirtual #23                 // Method org/h2/engine/Database.getLobStorage:()Lorg/h2/store/LobStorageInterface;
      41: aload_0
      42: getfield      #24                 // Field table:Lorg/h2/table/Table;
      45: invokevirtual #25                 // Method org/h2/table/Table.getId:()I
      48: invokeinterface #26,  2           // InterfaceMethod org/h2/store/LobStorageInterface.removeAllForTable:(I)V
      53: aload_0
      54: getfield      #19                 // Field tableData:Lorg/h2/table/RegularTable;
      57: lconst_0
      58: invokevirtual #27                 // Method org/h2/table/RegularTable.setRowCount:(J)V
      61: aload_0
      62: lconst_0
      63: putfield      #28                 // Field rowCount:J
      66: aload_0
      67: iconst_0
      68: putfield      #29                 // Field rowCountDiff:I
      71: aload_0
      72: getfield      #14                 // Field database:Lorg/h2/engine/Database;
      75: invokevirtual #15                 // Method org/h2/engine/Database.isMultiVersion:()Z
      78: ifeq          88
      81: aload_0
      82: getfield      #18                 // Field sessionRowCount:Ljava/util/HashMap;
      85: invokevirtual #30                 // Method java/util/HashMap.clear:()V
      88: return

  public java.lang.String getCreateSQL();
    Code:
       0: aconst_null
       1: areturn

  public void close(org.h2.engine.Session);
    Code:
       0: return

  public org.h2.result.Row getRow(org.h2.engine.Session, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field rows:Ljava/util/ArrayList;
       4: lload_2
       5: l2i
       6: invokevirtual #31                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
       9: checkcast     #32                 // class org/h2/result/Row
      12: areturn

  public void add(org.h2.engine.Session, org.h2.result.Row);
    Code:
       0: aload_0
       1: getfield      #4                  // Field firstFree:J
       4: ldc2_w        #2                  // long -1l
       7: lcmp
       8: ifne          39
      11: aload_0
      12: getfield      #6                  // Field rows:Ljava/util/ArrayList;
      15: invokevirtual #33                 // Method java/util/ArrayList.size:()I
      18: istore_3
      19: aload_2
      20: iload_3
      21: i2l
      22: invokeinterface #34,  3           // InterfaceMethod org/h2/result/Row.setKey:(J)V
      27: aload_0
      28: getfield      #6                  // Field rows:Ljava/util/ArrayList;
      31: aload_2
      32: invokevirtual #35                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      35: pop
      36: goto          87
      39: aload_0
      40: getfield      #4                  // Field firstFree:J
      43: lstore_3
      44: aload_0
      45: getfield      #6                  // Field rows:Ljava/util/ArrayList;
      48: lload_3
      49: l2i
      50: invokevirtual #31                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      53: checkcast     #32                 // class org/h2/result/Row
      56: astore        5
      58: aload_0
      59: aload         5
      61: invokeinterface #36,  1           // InterfaceMethod org/h2/result/Row.getKey:()J
      66: putfield      #4                  // Field firstFree:J
      69: aload_2
      70: lload_3
      71: invokeinterface #34,  3           // InterfaceMethod org/h2/result/Row.setKey:(J)V
      76: aload_0
      77: getfield      #6                  // Field rows:Ljava/util/ArrayList;
      80: lload_3
      81: l2i
      82: aload_2
      83: invokevirtual #37                 // Method java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;
      86: pop
      87: aload_2
      88: iconst_0
      89: invokeinterface #38,  2           // InterfaceMethod org/h2/result/Row.setDeleted:(Z)V
      94: aload_0
      95: getfield      #14                 // Field database:Lorg/h2/engine/Database;
      98: invokevirtual #15                 // Method org/h2/engine/Database.isMultiVersion:()Z
     101: ifeq          153
     104: aload_0
     105: getfield      #39                 // Field delta:Ljava/util/HashSet;
     108: ifnonnull     122
     111: aload_0
     112: new           #40                 // class java/util/HashSet
     115: dup
     116: invokespecial #41                 // Method java/util/HashSet."<init>":()V
     119: putfield      #39                 // Field delta:Ljava/util/HashSet;
     122: aload_0
     123: getfield      #39                 // Field delta:Ljava/util/HashSet;
     126: aload_2
     127: invokevirtual #42                 // Method java/util/HashSet.remove:(Ljava/lang/Object;)Z
     130: istore_3
     131: iload_3
     132: ifne          144
     135: aload_0
     136: getfield      #39                 // Field delta:Ljava/util/HashSet;
     139: aload_2
     140: invokevirtual #43                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
     143: pop
     144: aload_0
     145: aload_1
     146: invokevirtual #44                 // Method org/h2/engine/Session.getId:()I
     149: iconst_1
     150: invokespecial #45                 // Method incrementRowCount:(II)V
     153: aload_0
     154: dup
     155: getfield      #28                 // Field rowCount:J
     158: lconst_1
     159: ladd
     160: putfield      #28                 // Field rowCount:J
     163: return

  public void commit(int, org.h2.result.Row);
    Code:
       0: aload_0
       1: getfield      #14                 // Field database:Lorg/h2/engine/Database;
       4: invokevirtual #15                 // Method org/h2/engine/Database.isMultiVersion:()Z
       7: ifeq          46
      10: aload_0
      11: getfield      #39                 // Field delta:Ljava/util/HashSet;
      14: ifnull        26
      17: aload_0
      18: getfield      #39                 // Field delta:Ljava/util/HashSet;
      21: aload_2
      22: invokevirtual #42                 // Method java/util/HashSet.remove:(Ljava/lang/Object;)Z
      25: pop
      26: aload_0
      27: aload_2
      28: invokeinterface #46,  1           // InterfaceMethod org/h2/result/Row.getSessionId:()I
      33: iload_1
      34: iconst_1
      35: if_icmpne     42
      38: iconst_1
      39: goto          43
      42: iconst_m1
      43: invokespecial #45                 // Method incrementRowCount:(II)V
      46: return

  private void incrementRowCount(int, int);
    Code:
       0: aload_0
       1: getfield      #14                 // Field database:Lorg/h2/engine/Database;
       4: invokevirtual #15                 // Method org/h2/engine/Database.isMultiVersion:()Z
       7: ifeq          70
      10: iload_1
      11: invokestatic  #47                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: astore_3
      15: aload_0
      16: getfield      #18                 // Field sessionRowCount:Ljava/util/HashMap;
      19: aload_3
      20: invokevirtual #48                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #49                 // class java/lang/Integer
      26: astore        4
      28: aload         4
      30: ifnonnull     37
      33: iconst_0
      34: goto          42
      37: aload         4
      39: invokevirtual #50                 // Method java/lang/Integer.intValue:()I
      42: istore        5
      44: aload_0
      45: getfield      #18                 // Field sessionRowCount:Ljava/util/HashMap;
      48: aload_3
      49: iload         5
      51: iload_2
      52: iadd
      53: invokestatic  #47                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      56: invokevirtual #51                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: aload_0
      61: dup
      62: getfield      #29                 // Field rowCountDiff:I
      65: iload_2
      66: iadd
      67: putfield      #29                 // Field rowCountDiff:I
      70: return

  public void remove(org.h2.engine.Session, org.h2.result.Row);
    Code:
       0: aload_0
       1: getfield      #14                 // Field database:Lorg/h2/engine/Database;
       4: invokevirtual #15                 // Method org/h2/engine/Database.isMultiVersion:()Z
       7: ifne          36
      10: aload_0
      11: getfield      #28                 // Field rowCount:J
      14: lconst_1
      15: lcmp
      16: ifne          36
      19: aload_0
      20: invokestatic  #5                  // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
      23: putfield      #6                  // Field rows:Ljava/util/ArrayList;
      26: aload_0
      27: ldc2_w        #2                  // long -1l
      30: putfield      #4                  // Field firstFree:J
      33: goto          129
      36: aload_1
      37: aconst_null
      38: iconst_1
      39: invokevirtual #52                 // Method org/h2/engine/Session.createRow:([Lorg/h2/value/Value;I)Lorg/h2/result/Row;
      42: astore_3
      43: aload_3
      44: aload_0
      45: getfield      #4                  // Field firstFree:J
      48: invokeinterface #34,  3           // InterfaceMethod org/h2/result/Row.setKey:(J)V
      53: aload_2
      54: invokeinterface #36,  1           // InterfaceMethod org/h2/result/Row.getKey:()J
      59: lstore        4
      61: aload_0
      62: getfield      #6                  // Field rows:Ljava/util/ArrayList;
      65: invokevirtual #33                 // Method java/util/ArrayList.size:()I
      68: i2l
      69: lload         4
      71: lcmp
      72: ifgt          111
      75: ldc           #53                 // int 90112
      77: new           #7                  // class java/lang/StringBuilder
      80: dup
      81: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      84: aload_0
      85: getfield      #6                  // Field rows:Ljava/util/ArrayList;
      88: invokevirtual #33                 // Method java/util/ArrayList.size:()I
      91: invokevirtual #54                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      94: ldc           #55                 // String :
      96: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: lload         4
     101: invokevirtual #56                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     104: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: invokestatic  #57                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
     110: athrow
     111: aload_0
     112: getfield      #6                  // Field rows:Ljava/util/ArrayList;
     115: lload         4
     117: l2i
     118: aload_3
     119: invokevirtual #37                 // Method java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;
     122: pop
     123: aload_0
     124: lload         4
     126: putfield      #4                  // Field firstFree:J
     129: aload_0
     130: getfield      #14                 // Field database:Lorg/h2/engine/Database;
     133: invokevirtual #15                 // Method org/h2/engine/Database.isMultiVersion:()Z
     136: ifeq          195
     139: aload_2
     140: iconst_1
     141: invokeinterface #38,  2           // InterfaceMethod org/h2/result/Row.setDeleted:(Z)V
     146: aload_0
     147: getfield      #39                 // Field delta:Ljava/util/HashSet;
     150: ifnonnull     164
     153: aload_0
     154: new           #40                 // class java/util/HashSet
     157: dup
     158: invokespecial #41                 // Method java/util/HashSet."<init>":()V
     161: putfield      #39                 // Field delta:Ljava/util/HashSet;
     164: aload_0
     165: getfield      #39                 // Field delta:Ljava/util/HashSet;
     168: aload_2
     169: invokevirtual #42                 // Method java/util/HashSet.remove:(Ljava/lang/Object;)Z
     172: istore_3
     173: iload_3
     174: ifne          186
     177: aload_0
     178: getfield      #39                 // Field delta:Ljava/util/HashSet;
     181: aload_2
     182: invokevirtual #43                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
     185: pop
     186: aload_0
     187: aload_1
     188: invokevirtual #44                 // Method org/h2/engine/Session.getId:()I
     191: iconst_m1
     192: invokespecial #45                 // Method incrementRowCount:(II)V
     195: aload_0
     196: dup
     197: getfield      #28                 // Field rowCount:J
     200: lconst_1
     201: lsub
     202: putfield      #28                 // Field rowCount:J
     205: return

  public org.h2.index.Cursor find(org.h2.engine.Session, org.h2.result.SearchRow, org.h2.result.SearchRow);
    Code:
       0: new           #58                 // class org/h2/index/ScanCursor
       3: dup
       4: aload_1
       5: aload_0
       6: aload_0
       7: getfield      #14                 // Field database:Lorg/h2/engine/Database;
      10: invokevirtual #15                 // Method org/h2/engine/Database.isMultiVersion:()Z
      13: invokespecial #59                 // Method org/h2/index/ScanCursor."<init>":(Lorg/h2/engine/Session;Lorg/h2/index/ScanIndex;Z)V
      16: areturn

  public double getCost(org.h2.engine.Session, int[], org.h2.table.TableFilter[], int, org.h2.result.SortOrder, java.util.HashSet<org.h2.table.Column>);
    Code:
       0: aload_0
       1: getfield      #19                 // Field tableData:Lorg/h2/table/RegularTable;
       4: invokevirtual #60                 // Method org/h2/table/RegularTable.getRowCountApproximation:()J
       7: ldc2_w        #61                 // long 1000l
      10: ladd
      11: l2d
      12: dreturn

  public long getRowCount(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #14                 // Field database:Lorg/h2/engine/Database;
       4: invokevirtual #15                 // Method org/h2/engine/Database.isMultiVersion:()Z
       7: ifeq          59
      10: aload_0
      11: getfield      #18                 // Field sessionRowCount:Ljava/util/HashMap;
      14: aload_1
      15: invokevirtual #44                 // Method org/h2/engine/Session.getId:()I
      18: invokestatic  #47                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      21: invokevirtual #48                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #49                 // class java/lang/Integer
      27: astore_2
      28: aload_2
      29: ifnonnull     36
      32: lconst_0
      33: goto          41
      36: aload_2
      37: invokevirtual #50                 // Method java/lang/Integer.intValue:()I
      40: i2l
      41: lstore_3
      42: lload_3
      43: aload_0
      44: getfield      #28                 // Field rowCount:J
      47: ladd
      48: lstore_3
      49: lload_3
      50: aload_0
      51: getfield      #29                 // Field rowCountDiff:I
      54: i2l
      55: lsub
      56: lstore_3
      57: lload_3
      58: lreturn
      59: aload_0
      60: getfield      #28                 // Field rowCount:J
      63: lreturn

  org.h2.result.Row getNextRow(org.h2.result.Row);
    Code:
       0: aload_1
       1: ifnonnull     11
       4: ldc2_w        #2                  // long -1l
       7: lstore_2
       8: goto          18
      11: aload_1
      12: invokeinterface #36,  1           // InterfaceMethod org/h2/result/Row.getKey:()J
      17: lstore_2
      18: lload_2
      19: lconst_1
      20: ladd
      21: lstore_2
      22: lload_2
      23: aload_0
      24: getfield      #6                  // Field rows:Ljava/util/ArrayList;
      27: invokevirtual #33                 // Method java/util/ArrayList.size:()I
      30: i2l
      31: lcmp
      32: iflt          37
      35: aconst_null
      36: areturn
      37: aload_0
      38: getfield      #6                  // Field rows:Ljava/util/ArrayList;
      41: lload_2
      42: l2i
      43: invokevirtual #31                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      46: checkcast     #32                 // class org/h2/result/Row
      49: astore_1
      50: aload_1
      51: invokeinterface #63,  1           // InterfaceMethod org/h2/result/Row.isEmpty:()Z
      56: ifne          18
      59: aload_1
      60: areturn

  public int getColumnIndex(org.h2.table.Column);
    Code:
       0: iconst_m1
       1: ireturn

  public boolean isFirstColumn(org.h2.table.Column);
    Code:
       0: iconst_0
       1: ireturn

  public void checkRename();
    Code:
       0: ldc           #64                 // String SCAN
       2: invokestatic  #65                 // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
       5: athrow

  public boolean needRebuild();
    Code:
       0: iconst_0
       1: ireturn

  public boolean canGetFirstOrLast();
    Code:
       0: iconst_0
       1: ireturn

  public org.h2.index.Cursor findFirstOrLast(org.h2.engine.Session, boolean);
    Code:
       0: ldc           #64                 // String SCAN
       2: invokestatic  #65                 // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
       5: athrow

  java.util.Iterator<org.h2.result.Row> getDelta();
    Code:
       0: aload_0
       1: getfield      #39                 // Field delta:Ljava/util/HashSet;
       4: ifnonnull     18
       7: invokestatic  #66                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: astore_1
      11: aload_1
      12: invokeinterface #67,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: areturn
      18: aload_0
      19: getfield      #39                 // Field delta:Ljava/util/HashSet;
      22: invokevirtual #68                 // Method java/util/HashSet.iterator:()Ljava/util/Iterator;
      25: areturn

  public long getRowCountApproximation();
    Code:
       0: aload_0
       1: getfield      #28                 // Field rowCount:J
       4: lreturn

  public long getDiskSpaceUsed();
    Code:
       0: lconst_0
       1: lreturn

  public java.lang.String getPlanSQL();
    Code:
       0: new           #7                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #24                 // Field table:Lorg/h2/table/Table;
      11: invokevirtual #69                 // Method org/h2/table/Table.getSQL:()Ljava/lang/String;
      14: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #70                 // String .tableScan
      19: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: areturn
}
