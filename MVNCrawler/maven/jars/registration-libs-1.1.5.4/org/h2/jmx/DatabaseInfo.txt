Compiled from "DatabaseInfo.java"
public class org.h2.jmx.DatabaseInfo implements org.h2.jmx.DatabaseInfoMBean {
  private static final java.util.Map<java.lang.String, javax.management.ObjectName> MBEANS;

  private final org.h2.engine.Database database;

  private org.h2.jmx.DatabaseInfo(org.h2.engine.Database);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String Argument \'database\' must not be null
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #5                  // Field database:Lorg/h2/engine/Database;
      23: return

  private static javax.management.ObjectName getObjectName(java.lang.String, java.lang.String) throws javax.management.JMException;
    Code:
       0: aload_0
       1: bipush        58
       3: bipush        95
       5: invokevirtual #6                  // Method java/lang/String.replace:(CC)Ljava/lang/String;
       8: astore_0
       9: aload_1
      10: bipush        58
      12: bipush        95
      14: invokevirtual #6                  // Method java/lang/String.replace:(CC)Ljava/lang/String;
      17: astore_1
      18: new           #7                  // class java/util/Hashtable
      21: dup
      22: invokespecial #8                  // Method java/util/Hashtable."<init>":()V
      25: astore_2
      26: aload_2
      27: ldc           #9                  // String name
      29: aload_0
      30: invokevirtual #10                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: aload_2
      35: ldc           #11                 // String path
      37: aload_1
      38: invokevirtual #10                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: new           #12                 // class javax/management/ObjectName
      45: dup
      46: ldc           #13                 // String org.h2
      48: aload_2
      49: invokespecial #14                 // Method javax/management/ObjectName."<init>":(Ljava/lang/String;Ljava/util/Hashtable;)V
      52: areturn

  public static void registerMBean(org.h2.engine.ConnectionInfo, org.h2.engine.Database) throws javax.management.JMException;
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method org/h2/engine/ConnectionInfo.getName:()Ljava/lang/String;
       4: astore_2
       5: getstatic     #16                 // Field MBEANS:Ljava/util/Map;
       8: aload_2
       9: invokeinterface #17,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      14: ifne          82
      17: invokestatic  #18                 // Method java/lang/management/ManagementFactory.getPlatformMBeanServer:()Ljavax/management/MBeanServer;
      20: astore_3
      21: aload_1
      22: invokevirtual #19                 // Method org/h2/engine/Database.getShortName:()Ljava/lang/String;
      25: astore        4
      27: aload         4
      29: aload_2
      30: invokestatic  #20                 // Method getObjectName:(Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;
      33: astore        5
      35: getstatic     #16                 // Field MBEANS:Ljava/util/Map;
      38: aload_2
      39: aload         5
      41: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: new           #22                 // class org/h2/jmx/DatabaseInfo
      50: dup
      51: aload_1
      52: invokespecial #23                 // Method "<init>":(Lorg/h2/engine/Database;)V
      55: astore        6
      57: new           #24                 // class org/h2/jmx/DocumentedMBean
      60: dup
      61: aload         6
      63: ldc_w         #25                 // class org/h2/jmx/DatabaseInfoMBean
      66: invokespecial #26                 // Method org/h2/jmx/DocumentedMBean."<init>":(Ljava/lang/Object;Ljava/lang/Class;)V
      69: astore        7
      71: aload_3
      72: aload         7
      74: aload         5
      76: invokeinterface #27,  3           // InterfaceMethod javax/management/MBeanServer.registerMBean:(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;
      81: pop
      82: return

  public static void unregisterMBean(java.lang.String) throws java.lang.Exception;
    Code:
       0: getstatic     #16                 // Field MBEANS:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #28,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #12                 // class javax/management/ObjectName
      12: astore_1
      13: aload_1
      14: ifnull        28
      17: invokestatic  #18                 // Method java/lang/management/ManagementFactory.getPlatformMBeanServer:()Ljavax/management/MBeanServer;
      20: astore_2
      21: aload_2
      22: aload_1
      23: invokeinterface #29,  2           // InterfaceMethod javax/management/MBeanServer.unregisterMBean:(Ljavax/management/ObjectName;)V
      28: return

  public boolean isExclusive();
    Code:
       0: aload_0
       1: getfield      #5                  // Field database:Lorg/h2/engine/Database;
       4: invokevirtual #30                 // Method org/h2/engine/Database.getExclusiveSession:()Lorg/h2/engine/Session;
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isReadOnly();
    Code:
       0: aload_0
       1: getfield      #5                  // Field database:Lorg/h2/engine/Database;
       4: invokevirtual #31                 // Method org/h2/engine/Database.isReadOnly:()Z
       7: ireturn

  public java.lang.String getMode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field database:Lorg/h2/engine/Database;
       4: invokevirtual #32                 // Method org/h2/engine/Database.getMode:()Lorg/h2/engine/Mode;
       7: invokevirtual #33                 // Method org/h2/engine/Mode.getName:()Ljava/lang/String;
      10: areturn

  public boolean isMultiThreaded();
    Code:
       0: aload_0
       1: getfield      #5                  // Field database:Lorg/h2/engine/Database;
       4: invokevirtual #34                 // Method org/h2/engine/Database.isMultiThreaded:()Z
       7: ireturn

  public boolean isMvcc();
    Code:
       0: aload_0
       1: getfield      #5                  // Field database:Lorg/h2/engine/Database;
       4: invokevirtual #35                 // Method org/h2/engine/Database.isMultiVersion:()Z
       7: ireturn

  public int getLogMode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field database:Lorg/h2/engine/Database;
       4: invokevirtual #36                 // Method org/h2/engine/Database.getLogMode:()I
       7: ireturn

  public void setLogMode(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field database:Lorg/h2/engine/Database;
       4: iload_1
       5: invokevirtual #37                 // Method org/h2/engine/Database.setLogMode:(I)V
       8: return

  public int getTraceLevel();
    Code:
       0: aload_0
       1: getfield      #5                  // Field database:Lorg/h2/engine/Database;
       4: invokevirtual #38                 // Method org/h2/engine/Database.getTraceSystem:()Lorg/h2/message/TraceSystem;
       7: invokevirtual #39                 // Method org/h2/message/TraceSystem.getLevelFile:()I
      10: ireturn

  public void setTraceLevel(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field database:Lorg/h2/engine/Database;
       4: invokevirtual #38                 // Method org/h2/engine/Database.getTraceSystem:()Lorg/h2/message/TraceSystem;
       7: iload_1
       8: invokevirtual #40                 // Method org/h2/message/TraceSystem.setLevelFile:(I)V
      11: return

  public long getFileWriteCountTotal();
    Code:
       0: aload_0
       1: getfield      #5                  // Field database:Lorg/h2/engine/Database;
       4: invokevirtual #41                 // Method org/h2/engine/Database.isPersistent:()Z
       7: ifne          12
      10: lconst_0
      11: lreturn
      12: aload_0
      13: getfield      #5                  // Field database:Lorg/h2/engine/Database;
      16: invokevirtual #42                 // Method org/h2/engine/Database.getPageStore:()Lorg/h2/store/PageStore;
      19: astore_1
      20: aload_1
      21: ifnull        29
      24: aload_1
      25: invokevirtual #43                 // Method org/h2/store/PageStore.getWriteCountTotal:()J
      28: lreturn
      29: lconst_0
      30: lreturn

  public long getFileWriteCount();
    Code:
       0: aload_0
       1: getfield      #5                  // Field database:Lorg/h2/engine/Database;
       4: invokevirtual #41                 // Method org/h2/engine/Database.isPersistent:()Z
       7: ifne          12
      10: lconst_0
      11: lreturn
      12: aload_0
      13: getfield      #5                  // Field database:Lorg/h2/engine/Database;
      16: invokevirtual #42                 // Method org/h2/engine/Database.getPageStore:()Lorg/h2/store/PageStore;
      19: astore_1
      20: aload_1
      21: ifnull        29
      24: aload_1
      25: invokevirtual #44                 // Method org/h2/store/PageStore.getWriteCount:()J
      28: lreturn
      29: aload_0
      30: getfield      #5                  // Field database:Lorg/h2/engine/Database;
      33: invokevirtual #45                 // Method org/h2/engine/Database.getMvStore:()Lorg/h2/mvstore/db/MVTableEngine$Store;
      36: invokevirtual #46                 // Method org/h2/mvstore/db/MVTableEngine$Store.getStore:()Lorg/h2/mvstore/MVStore;
      39: invokevirtual #47                 // Method org/h2/mvstore/MVStore.getFileStore:()Lorg/h2/mvstore/FileStore;
      42: invokevirtual #48                 // Method org/h2/mvstore/FileStore.getReadCount:()J
      45: lreturn

  public long getFileReadCount();
    Code:
       0: aload_0
       1: getfield      #5                  // Field database:Lorg/h2/engine/Database;
       4: invokevirtual #41                 // Method org/h2/engine/Database.isPersistent:()Z
       7: ifne          12
      10: lconst_0
      11: lreturn
      12: aload_0
      13: getfield      #5                  // Field database:Lorg/h2/engine/Database;
      16: invokevirtual #42                 // Method org/h2/engine/Database.getPageStore:()Lorg/h2/store/PageStore;
      19: astore_1
      20: aload_1
      21: ifnull        29
      24: aload_1
      25: invokevirtual #49                 // Method org/h2/store/PageStore.getReadCount:()J
      28: lreturn
      29: aload_0
      30: getfield      #5                  // Field database:Lorg/h2/engine/Database;
      33: invokevirtual #45                 // Method org/h2/engine/Database.getMvStore:()Lorg/h2/mvstore/db/MVTableEngine$Store;
      36: invokevirtual #46                 // Method org/h2/mvstore/db/MVTableEngine$Store.getStore:()Lorg/h2/mvstore/MVStore;
      39: invokevirtual #47                 // Method org/h2/mvstore/MVStore.getFileStore:()Lorg/h2/mvstore/FileStore;
      42: invokevirtual #48                 // Method org/h2/mvstore/FileStore.getReadCount:()J
      45: lreturn

  public long getFileSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field database:Lorg/h2/engine/Database;
       4: invokevirtual #41                 // Method org/h2/engine/Database.isPersistent:()Z
       7: ifne          12
      10: lconst_0
      11: lreturn
      12: aload_0
      13: getfield      #5                  // Field database:Lorg/h2/engine/Database;
      16: invokevirtual #42                 // Method org/h2/engine/Database.getPageStore:()Lorg/h2/store/PageStore;
      19: astore_1
      20: aload_1
      21: ifnull        39
      24: aload_1
      25: invokevirtual #50                 // Method org/h2/store/PageStore.getPageCount:()I
      28: aload_1
      29: invokevirtual #51                 // Method org/h2/store/PageStore.getPageSize:()I
      32: imul
      33: sipush        1024
      36: idiv
      37: i2l
      38: lreturn
      39: aload_0
      40: getfield      #5                  // Field database:Lorg/h2/engine/Database;
      43: invokevirtual #45                 // Method org/h2/engine/Database.getMvStore:()Lorg/h2/mvstore/db/MVTableEngine$Store;
      46: invokevirtual #46                 // Method org/h2/mvstore/db/MVTableEngine$Store.getStore:()Lorg/h2/mvstore/MVStore;
      49: invokevirtual #47                 // Method org/h2/mvstore/MVStore.getFileStore:()Lorg/h2/mvstore/FileStore;
      52: invokevirtual #52                 // Method org/h2/mvstore/FileStore.size:()J
      55: lreturn

  public int getCacheSizeMax();
    Code:
       0: aload_0
       1: getfield      #5                  // Field database:Lorg/h2/engine/Database;
       4: invokevirtual #41                 // Method org/h2/engine/Database.isPersistent:()Z
       7: ifne          12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: getfield      #5                  // Field database:Lorg/h2/engine/Database;
      16: invokevirtual #42                 // Method org/h2/engine/Database.getPageStore:()Lorg/h2/store/PageStore;
      19: astore_1
      20: aload_1
      21: ifnull        34
      24: aload_1
      25: invokevirtual #53                 // Method org/h2/store/PageStore.getCache:()Lorg/h2/util/Cache;
      28: invokeinterface #54,  1           // InterfaceMethod org/h2/util/Cache.getMaxMemory:()I
      33: ireturn
      34: aload_0
      35: getfield      #5                  // Field database:Lorg/h2/engine/Database;
      38: invokevirtual #45                 // Method org/h2/engine/Database.getMvStore:()Lorg/h2/mvstore/db/MVTableEngine$Store;
      41: invokevirtual #46                 // Method org/h2/mvstore/db/MVTableEngine$Store.getStore:()Lorg/h2/mvstore/MVStore;
      44: invokevirtual #55                 // Method org/h2/mvstore/MVStore.getCacheSize:()I
      47: sipush        1024
      50: imul
      51: ireturn

  public void setCacheSizeMax(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field database:Lorg/h2/engine/Database;
       4: invokevirtual #41                 // Method org/h2/engine/Database.isPersistent:()Z
       7: ifeq          18
      10: aload_0
      11: getfield      #5                  // Field database:Lorg/h2/engine/Database;
      14: iload_1
      15: invokevirtual #56                 // Method org/h2/engine/Database.setCacheSize:(I)V
      18: return

  public int getCacheSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field database:Lorg/h2/engine/Database;
       4: invokevirtual #41                 // Method org/h2/engine/Database.isPersistent:()Z
       7: ifne          12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: getfield      #5                  // Field database:Lorg/h2/engine/Database;
      16: invokevirtual #42                 // Method org/h2/engine/Database.getPageStore:()Lorg/h2/store/PageStore;
      19: astore_1
      20: aload_1
      21: ifnull        34
      24: aload_1
      25: invokevirtual #53                 // Method org/h2/store/PageStore.getCache:()Lorg/h2/util/Cache;
      28: invokeinterface #57,  1           // InterfaceMethod org/h2/util/Cache.getMemory:()I
      33: ireturn
      34: aload_0
      35: getfield      #5                  // Field database:Lorg/h2/engine/Database;
      38: invokevirtual #45                 // Method org/h2/engine/Database.getMvStore:()Lorg/h2/mvstore/db/MVTableEngine$Store;
      41: invokevirtual #46                 // Method org/h2/mvstore/db/MVTableEngine$Store.getStore:()Lorg/h2/mvstore/MVStore;
      44: invokevirtual #58                 // Method org/h2/mvstore/MVStore.getCacheSizeUsed:()I
      47: sipush        1024
      50: imul
      51: ireturn

  public java.lang.String getVersion();
    Code:
       0: invokestatic  #59                 // Method org/h2/engine/Constants.getFullVersion:()Ljava/lang/String;
       3: areturn

  public java.lang.String listSettings();
    Code:
       0: new           #60                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: new           #62                 // class java/util/TreeMap
      11: dup
      12: aload_0
      13: getfield      #5                  // Field database:Lorg/h2/engine/Database;
      16: invokevirtual #63                 // Method org/h2/engine/Database.getSettings:()Lorg/h2/engine/DbSettings;
      19: invokevirtual #64                 // Method org/h2/engine/DbSettings.getSettings:()Ljava/util/HashMap;
      22: invokespecial #65                 // Method java/util/TreeMap."<init>":(Ljava/util/Map;)V
      25: invokevirtual #66                 // Method java/util/TreeMap.entrySet:()Ljava/util/Set;
      28: invokeinterface #67,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      33: astore_2
      34: aload_2
      35: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          92
      43: aload_2
      44: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #70                 // class java/util/Map$Entry
      52: astore_3
      53: aload_1
      54: aload_3
      55: invokeinterface #71,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      60: checkcast     #72                 // class java/lang/String
      63: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: ldc           #74                 // String  =
      68: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_3
      72: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      77: checkcast     #72                 // class java/lang/String
      80: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: bipush        10
      85: invokevirtual #76                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      88: pop
      89: goto          34
      92: aload_1
      93: invokevirtual #77                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: areturn

  public java.lang.String listSessions();
    Code:
       0: new           #60                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #5                  // Field database:Lorg/h2/engine/Database;
      12: iconst_0
      13: invokevirtual #78                 // Method org/h2/engine/Database.getSessions:(Z)[Lorg/h2/engine/Session;
      16: astore_2
      17: aload_2
      18: arraylength
      19: istore_3
      20: iconst_0
      21: istore        4
      23: iload         4
      25: iload_3
      26: if_icmpge     289
      29: aload_2
      30: iload         4
      32: aaload
      33: astore        5
      35: aload_1
      36: ldc           #79                 // String session id:
      38: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload         5
      43: invokevirtual #80                 // Method org/h2/engine/Session.getId:()I
      46: invokevirtual #81                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      49: pop
      50: aload_1
      51: ldc           #82                 // String  user:
      53: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload         5
      58: invokevirtual #83                 // Method org/h2/engine/Session.getUser:()Lorg/h2/engine/User;
      61: invokevirtual #84                 // Method org/h2/engine/User.getName:()Ljava/lang/String;
      64: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: bipush        10
      69: invokevirtual #76                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      72: pop
      73: aload_1
      74: ldc           #85                 // String connected:
      76: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: new           #86                 // class java/sql/Timestamp
      82: dup
      83: aload         5
      85: invokevirtual #87                 // Method org/h2/engine/Session.getSessionStart:()J
      88: invokespecial #88                 // Method java/sql/Timestamp."<init>":(J)V
      91: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      94: bipush        10
      96: invokevirtual #76                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      99: pop
     100: aload         5
     102: invokevirtual #90                 // Method org/h2/engine/Session.getCurrentCommand:()Lorg/h2/command/Command;
     105: astore        6
     107: aload         6
     109: ifnull        170
     112: aload_1
     113: ldc           #91                 // String statement:
     115: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: aload         5
     120: invokevirtual #90                 // Method org/h2/engine/Session.getCurrentCommand:()Lorg/h2/command/Command;
     123: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     126: bipush        10
     128: invokevirtual #76                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     131: pop
     132: aload         5
     134: invokevirtual #92                 // Method org/h2/engine/Session.getCurrentCommandStart:()J
     137: lstore        7
     139: lload         7
     141: lconst_0
     142: lcmp
     143: ifeq          170
     146: aload_1
     147: ldc           #93                 // String started:
     149: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: new           #86                 // class java/sql/Timestamp
     155: dup
     156: lload         7
     158: invokespecial #88                 // Method java/sql/Timestamp."<init>":(J)V
     161: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     164: bipush        10
     166: invokevirtual #76                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     169: pop
     170: aload         5
     172: invokevirtual #94                 // Method org/h2/engine/Session.getLocks:()[Lorg/h2/table/Table;
     175: astore        7
     177: aload         7
     179: arraylength
     180: ifle          276
     183: aload         5
     185: invokevirtual #94                 // Method org/h2/engine/Session.getLocks:()[Lorg/h2/table/Table;
     188: astore        8
     190: aload         8
     192: arraylength
     193: istore        9
     195: iconst_0
     196: istore        10
     198: iload         10
     200: iload         9
     202: if_icmpge     276
     205: aload         8
     207: iload         10
     209: aaload
     210: astore        11
     212: aload         11
     214: aload         5
     216: invokevirtual #95                 // Method org/h2/table/Table.isLockedExclusivelyBy:(Lorg/h2/engine/Session;)Z
     219: ifeq          232
     222: aload_1
     223: ldc           #96                 // String write lock on
     225: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     228: pop
     229: goto          239
     232: aload_1
     233: ldc           #97                 // String read lock on
     235: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     238: pop
     239: aload_1
     240: aload         11
     242: invokevirtual #98                 // Method org/h2/table/Table.getSchema:()Lorg/h2/schema/Schema;
     245: invokevirtual #99                 // Method org/h2/schema/Schema.getName:()Ljava/lang/String;
     248: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     251: bipush        46
     253: invokevirtual #76                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     256: aload         11
     258: invokevirtual #100                // Method org/h2/table/Table.getName:()Ljava/lang/String;
     261: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     264: bipush        10
     266: invokevirtual #76                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     269: pop
     270: iinc          10, 1
     273: goto          198
     276: aload_1
     277: bipush        10
     279: invokevirtual #76                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     282: pop
     283: iinc          4, 1
     286: goto          23
     289: aload_1
     290: invokevirtual #77                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     293: areturn

  static {};
    Code:
       0: new           #101                // class java/util/HashMap
       3: dup
       4: invokespecial #102                // Method java/util/HashMap."<init>":()V
       7: putstatic     #16                 // Field MBEANS:Ljava/util/Map;
      10: return
}
