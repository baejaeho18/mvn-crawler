Compiled from "ValueTimestampTimeZone.java"
public class org.h2.value.ValueTimestampTimeZone extends org.h2.value.Value {
  public static final int DEFAULT_PRECISION;

  public static final int MAXIMUM_PRECISION;

  static final int DEFAULT_SCALE;

  static final int MAXIMUM_SCALE;

  private final long dateValue;

  private final long timeNanos;

  private final short timeZoneOffsetMins;

  public static int getDisplaySize(int);
    Code:
       0: iload_0
       1: ifne          9
       4: bipush        25
       6: goto          13
       9: bipush        26
      11: iload_0
      12: iadd
      13: ireturn

  private org.h2.value.ValueTimestampTimeZone(long, long, short);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/value/Value."<init>":()V
       4: lload_3
       5: lconst_0
       6: lcmp
       7: iflt          18
      10: lload_3
      11: ldc2_w        #2                  // long 86400000000000l
      14: lcmp
      15: iflt          45
      18: new           #4                  // class java/lang/IllegalArgumentException
      21: dup
      22: new           #5                  // class java/lang/StringBuilder
      25: dup
      26: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #7                  // String timeNanos out of range
      31: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: lload_3
      35: invokevirtual #9                  // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      38: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: iload         5
      47: sipush        -1080
      50: if_icmplt     61
      53: iload         5
      55: sipush        1080
      58: if_icmple     89
      61: new           #4                  // class java/lang/IllegalArgumentException
      64: dup
      65: new           #5                  // class java/lang/StringBuilder
      68: dup
      69: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      72: ldc           #12                 // String timeZoneOffsetMins out of range
      74: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: iload         5
      79: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      82: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: aload_0
      90: lload_1
      91: putfield      #14                 // Field dateValue:J
      94: aload_0
      95: lload_3
      96: putfield      #15                 // Field timeNanos:J
      99: aload_0
     100: iload         5
     102: putfield      #16                 // Field timeZoneOffsetMins:S
     105: return

  public static org.h2.value.ValueTimestampTimeZone fromDateValueAndNanos(long, long, short);
    Code:
       0: new           #17                 // class org/h2/value/ValueTimestampTimeZone
       3: dup
       4: lload_0
       5: lload_2
       6: iload         4
       8: invokespecial #18                 // Method "<init>":(JJS)V
      11: invokestatic  #19                 // Method org/h2/value/Value.cache:(Lorg/h2/value/Value;)Lorg/h2/value/Value;
      14: checkcast     #17                 // class org/h2/value/ValueTimestampTimeZone
      17: areturn

  public static org.h2.value.ValueTimestampTimeZone get(org.h2.api.TimestampWithTimeZone);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method org/h2/api/TimestampWithTimeZone.getYMD:()J
       4: aload_0
       5: invokevirtual #21                 // Method org/h2/api/TimestampWithTimeZone.getNanosSinceMidnight:()J
       8: aload_0
       9: invokevirtual #22                 // Method org/h2/api/TimestampWithTimeZone.getTimeZoneOffsetMins:()S
      12: invokestatic  #23                 // Method fromDateValueAndNanos:(JJS)Lorg/h2/value/ValueTimestampTimeZone;
      15: areturn

  public static org.h2.value.ValueTimestampTimeZone parse(java.lang.String);
    Code:
       0: aload_0
       1: aconst_null
       2: iconst_1
       3: invokestatic  #24                 // Method org/h2/util/DateTimeUtils.parseTimestamp:(Ljava/lang/String;Lorg/h2/engine/Mode;Z)Lorg/h2/value/Value;
       6: checkcast     #17                 // class org/h2/value/ValueTimestampTimeZone
       9: areturn
      10: astore_1
      11: sipush        22007
      14: aload_1
      15: iconst_2
      16: anewarray     #26                 // class java/lang/String
      19: dup
      20: iconst_0
      21: ldc           #27                 // String TIMESTAMP WITH TIME ZONE
      23: aastore
      24: dup
      25: iconst_1
      26: aload_0
      27: aastore
      28: invokestatic  #28                 // Method org/h2/message/DbException.get:(ILjava/lang/Throwable;[Ljava/lang/String;)Lorg/h2/message/DbException;
      31: athrow
    Exception table:
       from    to  target type
           0     9    10   Class java/lang/Exception

  public long getDateValue();
    Code:
       0: aload_0
       1: getfield      #14                 // Field dateValue:J
       4: lreturn

  public long getTimeNanos();
    Code:
       0: aload_0
       1: getfield      #15                 // Field timeNanos:J
       4: lreturn

  public short getTimeZoneOffsetMins();
    Code:
       0: aload_0
       1: getfield      #16                 // Field timeZoneOffsetMins:S
       4: ireturn

  public java.sql.Timestamp getTimestamp();
    Code:
       0: aload_0
       1: getfield      #14                 // Field dateValue:J
       4: aload_0
       5: getfield      #15                 // Field timeNanos:J
       8: aload_0
       9: getfield      #16                 // Field timeZoneOffsetMins:S
      12: invokestatic  #29                 // Method org/h2/util/DateTimeUtils.convertTimestampTimeZoneToTimestamp:(JJS)Ljava/sql/Timestamp;
      15: areturn

  public int getType();
    Code:
       0: bipush        24
       2: ireturn

  public java.lang.String getString();
    Code:
       0: aload_0
       1: getfield      #14                 // Field dateValue:J
       4: aload_0
       5: getfield      #15                 // Field timeNanos:J
       8: aload_0
       9: getfield      #16                 // Field timeZoneOffsetMins:S
      12: invokestatic  #30                 // Method org/h2/util/DateTimeUtils.timestampTimeZoneToString:(JJS)Ljava/lang/String;
      15: areturn

  public java.lang.String getSQL();
    Code:
       0: new           #5                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #31                 // String TIMESTAMP WITH TIME ZONE \'
       9: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #32                 // Method getString:()Ljava/lang/String;
      16: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #33                 // String \'
      21: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public long getPrecision();
    Code:
       0: ldc2_w        #34                 // long 35l
       3: lreturn

  public int getScale();
    Code:
       0: bipush        9
       2: ireturn

  public int getDisplaySize();
    Code:
       0: bipush        35
       2: ireturn

  public boolean checkPrecision(long);
    Code:
       0: iconst_1
       1: ireturn

  public org.h2.value.Value convertScale(boolean, int);
    Code:
       0: iload_2
       1: bipush        9
       3: if_icmplt     8
       6: aload_0
       7: areturn
       8: iload_2
       9: ifge          22
      12: ldc           #36                 // String scale
      14: iload_2
      15: invokestatic  #37                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      18: invokestatic  #38                 // Method org/h2/message/DbException.getInvalidValueException:(Ljava/lang/String;Ljava/lang/Object;)Lorg/h2/message/DbException;
      21: athrow
      22: aload_0
      23: getfield      #15                 // Field timeNanos:J
      26: lstore_3
      27: lload_3
      28: iload_2
      29: invokestatic  #39                 // Method org/h2/util/DateTimeUtils.convertScale:(JI)J
      32: lstore        5
      34: lload         5
      36: lload_3
      37: lcmp
      38: ifne          43
      41: aload_0
      42: areturn
      43: aload_0
      44: getfield      #14                 // Field dateValue:J
      47: lstore        7
      49: lload         5
      51: ldc2_w        #2                  // long 86400000000000l
      54: lcmp
      55: iflt          73
      58: lload         5
      60: ldc2_w        #2                  // long 86400000000000l
      63: lsub
      64: lstore        5
      66: lload         7
      68: invokestatic  #40                 // Method org/h2/util/DateTimeUtils.incrementDateValue:(J)J
      71: lstore        7
      73: lload         7
      75: lload         5
      77: aload_0
      78: getfield      #16                 // Field timeZoneOffsetMins:S
      81: invokestatic  #23                 // Method fromDateValueAndNanos:(JJS)Lorg/h2/value/ValueTimestampTimeZone;
      84: areturn

  protected int compareSecure(org.h2.value.Value, org.h2.value.CompareMode);
    Code:
       0: aload_1
       1: checkcast     #17                 // class org/h2/value/ValueTimestampTimeZone
       4: astore_3
       5: aload_0
       6: getfield      #14                 // Field dateValue:J
       9: lstore        4
      11: aload_0
      12: getfield      #15                 // Field timeNanos:J
      15: aload_0
      16: getfield      #16                 // Field timeZoneOffsetMins:S
      19: i2l
      20: ldc2_w        #41                 // long 60000000000l
      23: lmul
      24: lsub
      25: lstore        6
      27: lload         6
      29: lconst_0
      30: lcmp
      31: ifge          52
      34: lload         6
      36: ldc2_w        #2                  // long 86400000000000l
      39: ladd
      40: lstore        6
      42: lload         4
      44: invokestatic  #43                 // Method org/h2/util/DateTimeUtils.decrementDateValue:(J)J
      47: lstore        4
      49: goto          76
      52: lload         6
      54: ldc2_w        #2                  // long 86400000000000l
      57: lcmp
      58: iflt          76
      61: lload         6
      63: ldc2_w        #2                  // long 86400000000000l
      66: lsub
      67: lstore        6
      69: lload         4
      71: invokestatic  #40                 // Method org/h2/util/DateTimeUtils.incrementDateValue:(J)J
      74: lstore        4
      76: aload_3
      77: getfield      #14                 // Field dateValue:J
      80: lstore        8
      82: aload_3
      83: getfield      #15                 // Field timeNanos:J
      86: aload_3
      87: getfield      #16                 // Field timeZoneOffsetMins:S
      90: i2l
      91: ldc2_w        #41                 // long 60000000000l
      94: lmul
      95: lsub
      96: lstore        10
      98: lload         10
     100: lconst_0
     101: lcmp
     102: ifge          123
     105: lload         10
     107: ldc2_w        #2                  // long 86400000000000l
     110: ladd
     111: lstore        10
     113: lload         8
     115: invokestatic  #43                 // Method org/h2/util/DateTimeUtils.decrementDateValue:(J)J
     118: lstore        8
     120: goto          147
     123: lload         10
     125: ldc2_w        #2                  // long 86400000000000l
     128: lcmp
     129: iflt          147
     132: lload         10
     134: ldc2_w        #2                  // long 86400000000000l
     137: lsub
     138: lstore        10
     140: lload         8
     142: invokestatic  #40                 // Method org/h2/util/DateTimeUtils.incrementDateValue:(J)J
     145: lstore        8
     147: lload         4
     149: lload         8
     151: invokestatic  #44                 // Method java/lang/Long.compare:(JJ)I
     154: istore        12
     156: iload         12
     158: ifeq          164
     161: iload         12
     163: ireturn
     164: lload         6
     166: lload         10
     168: invokestatic  #44                 // Method java/lang/Long.compare:(JJ)I
     171: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #17                 // class org/h2/value/ValueTimestampTimeZone
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #17                 // class org/h2/value/ValueTimestampTimeZone
      20: astore_2
      21: aload_0
      22: getfield      #14                 // Field dateValue:J
      25: aload_2
      26: getfield      #14                 // Field dateValue:J
      29: lcmp
      30: ifne          60
      33: aload_0
      34: getfield      #15                 // Field timeNanos:J
      37: aload_2
      38: getfield      #15                 // Field timeNanos:J
      41: lcmp
      42: ifne          60
      45: aload_0
      46: getfield      #16                 // Field timeZoneOffsetMins:S
      49: aload_2
      50: getfield      #16                 // Field timeZoneOffsetMins:S
      53: if_icmpne     60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #14                 // Field dateValue:J
       4: aload_0
       5: getfield      #14                 // Field dateValue:J
       8: bipush        32
      10: lushr
      11: lxor
      12: aload_0
      13: getfield      #15                 // Field timeNanos:J
      16: lxor
      17: aload_0
      18: getfield      #15                 // Field timeNanos:J
      21: bipush        32
      23: lushr
      24: lxor
      25: aload_0
      26: getfield      #16                 // Field timeZoneOffsetMins:S
      29: i2l
      30: lxor
      31: l2i
      32: ireturn

  public java.lang.Object getObject();
    Code:
       0: new           #45                 // class org/h2/api/TimestampWithTimeZone
       3: dup
       4: aload_0
       5: getfield      #14                 // Field dateValue:J
       8: aload_0
       9: getfield      #15                 // Field timeNanos:J
      12: aload_0
      13: getfield      #16                 // Field timeZoneOffsetMins:S
      16: invokespecial #46                 // Method org/h2/api/TimestampWithTimeZone."<init>":(JJS)V
      19: areturn

  public void set(java.sql.PreparedStatement, int) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: iload_2
       2: aload_0
       3: invokevirtual #32                 // Method getString:()Ljava/lang/String;
       6: invokeinterface #47,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      11: return

  public org.h2.value.Value add(org.h2.value.Value);
    Code:
       0: ldc           #48                 // String manipulating TIMESTAMP WITH TIME ZONE values is unsupported
       2: invokestatic  #49                 // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
       5: athrow

  public org.h2.value.Value subtract(org.h2.value.Value);
    Code:
       0: ldc           #48                 // String manipulating TIMESTAMP WITH TIME ZONE values is unsupported
       2: invokestatic  #49                 // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
       5: athrow
}
