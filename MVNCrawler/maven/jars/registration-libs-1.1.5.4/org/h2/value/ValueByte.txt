Compiled from "ValueByte.java"
public class org.h2.value.ValueByte extends org.h2.value.Value {
  static final int PRECISION;

  static final int DISPLAY_SIZE;

  private final byte value;

  private org.h2.value.ValueByte(byte);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/value/Value."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field value:B
       9: return

  public org.h2.value.Value add(org.h2.value.Value);
    Code:
       0: aload_1
       1: checkcast     #3                  // class org/h2/value/ValueByte
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field value:B
       9: aload_2
      10: getfield      #2                  // Field value:B
      13: iadd
      14: invokestatic  #4                  // Method checkRange:(I)Lorg/h2/value/ValueByte;
      17: areturn

  private static org.h2.value.ValueByte checkRange(int);
    Code:
       0: iload_0
       1: bipush        -128
       3: if_icmplt     12
       6: iload_0
       7: bipush        127
       9: if_icmple     23
      12: sipush        22003
      15: iload_0
      16: invokestatic  #5                  // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      19: invokestatic  #6                  // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      22: athrow
      23: iload_0
      24: i2b
      25: invokestatic  #7                  // Method get:(B)Lorg/h2/value/ValueByte;
      28: areturn

  public int getSignum();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:B
       4: invokestatic  #8                  // Method java/lang/Integer.signum:(I)I
       7: ireturn

  public org.h2.value.Value negate();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:B
       4: ineg
       5: invokestatic  #4                  // Method checkRange:(I)Lorg/h2/value/ValueByte;
       8: areturn

  public org.h2.value.Value subtract(org.h2.value.Value);
    Code:
       0: aload_1
       1: checkcast     #3                  // class org/h2/value/ValueByte
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field value:B
       9: aload_2
      10: getfield      #2                  // Field value:B
      13: isub
      14: invokestatic  #4                  // Method checkRange:(I)Lorg/h2/value/ValueByte;
      17: areturn

  public org.h2.value.Value multiply(org.h2.value.Value);
    Code:
       0: aload_1
       1: checkcast     #3                  // class org/h2/value/ValueByte
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field value:B
       9: aload_2
      10: getfield      #2                  // Field value:B
      13: imul
      14: invokestatic  #4                  // Method checkRange:(I)Lorg/h2/value/ValueByte;
      17: areturn

  public org.h2.value.Value divide(org.h2.value.Value);
    Code:
       0: aload_1
       1: checkcast     #3                  // class org/h2/value/ValueByte
       4: astore_2
       5: aload_2
       6: getfield      #2                  // Field value:B
       9: ifne          23
      12: sipush        22012
      15: aload_0
      16: invokevirtual #9                  // Method getSQL:()Ljava/lang/String;
      19: invokestatic  #6                  // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      22: athrow
      23: aload_0
      24: getfield      #2                  // Field value:B
      27: aload_2
      28: getfield      #2                  // Field value:B
      31: idiv
      32: i2b
      33: invokestatic  #7                  // Method get:(B)Lorg/h2/value/ValueByte;
      36: areturn

  public org.h2.value.Value modulus(org.h2.value.Value);
    Code:
       0: aload_1
       1: checkcast     #3                  // class org/h2/value/ValueByte
       4: astore_2
       5: aload_2
       6: getfield      #2                  // Field value:B
       9: ifne          23
      12: sipush        22012
      15: aload_0
      16: invokevirtual #9                  // Method getSQL:()Ljava/lang/String;
      19: invokestatic  #6                  // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      22: athrow
      23: aload_0
      24: getfield      #2                  // Field value:B
      27: aload_2
      28: getfield      #2                  // Field value:B
      31: irem
      32: i2b
      33: invokestatic  #7                  // Method get:(B)Lorg/h2/value/ValueByte;
      36: areturn

  public java.lang.String getSQL();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getString:()Ljava/lang/String;
       4: areturn

  public int getType();
    Code:
       0: iconst_2
       1: ireturn

  public byte getByte();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:B
       4: ireturn

  public int getInt();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:B
       4: ireturn

  protected int compareSecure(org.h2.value.Value, org.h2.value.CompareMode);
    Code:
       0: aload_1
       1: checkcast     #3                  // class org/h2/value/ValueByte
       4: astore_3
       5: aload_0
       6: getfield      #2                  // Field value:B
       9: aload_3
      10: getfield      #2                  // Field value:B
      13: invokestatic  #11                 // Method java/lang/Integer.compare:(II)I
      16: ireturn

  public java.lang.String getString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:B
       4: invokestatic  #12                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
       7: areturn

  public long getPrecision();
    Code:
       0: ldc2_w        #13                 // long 3l
       3: lreturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:B
       4: ireturn

  public java.lang.Object getObject();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:B
       4: invokestatic  #15                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
       7: areturn

  public void set(java.sql.PreparedStatement, int) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: iload_2
       2: aload_0
       3: getfield      #2                  // Field value:B
       6: invokeinterface #16,  3           // InterfaceMethod java/sql/PreparedStatement.setByte:(IB)V
      11: return

  public static org.h2.value.ValueByte get(byte);
    Code:
       0: new           #3                  // class org/h2/value/ValueByte
       3: dup
       4: iload_0
       5: invokespecial #17                 // Method "<init>":(B)V
       8: invokestatic  #18                 // Method org/h2/value/Value.cache:(Lorg/h2/value/Value;)Lorg/h2/value/Value;
      11: checkcast     #3                  // class org/h2/value/ValueByte
      14: areturn

  public int getDisplaySize();
    Code:
       0: iconst_4
       1: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #3                  // class org/h2/value/ValueByte
       4: ifeq          25
       7: aload_0
       8: getfield      #2                  // Field value:B
      11: aload_1
      12: checkcast     #3                  // class org/h2/value/ValueByte
      15: getfield      #2                  // Field value:B
      18: if_icmpne     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn
}
