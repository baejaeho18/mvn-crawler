Compiled from "ValueFloat.java"
public class org.h2.value.ValueFloat extends org.h2.value.Value {
  public static final int ZERO_BITS;

  static final int PRECISION;

  static final int DISPLAY_SIZE;

  private static final org.h2.value.ValueFloat ZERO;

  private static final org.h2.value.ValueFloat ONE;

  private final float value;

  private org.h2.value.ValueFloat(float);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/value/Value."<init>":()V
       4: aload_0
       5: fload_1
       6: putfield      #2                  // Field value:F
       9: return

  public org.h2.value.Value add(org.h2.value.Value);
    Code:
       0: aload_1
       1: checkcast     #3                  // class org/h2/value/ValueFloat
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field value:F
       9: aload_2
      10: getfield      #2                  // Field value:F
      13: fadd
      14: invokestatic  #4                  // Method get:(F)Lorg/h2/value/ValueFloat;
      17: areturn

  public org.h2.value.Value subtract(org.h2.value.Value);
    Code:
       0: aload_1
       1: checkcast     #3                  // class org/h2/value/ValueFloat
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field value:F
       9: aload_2
      10: getfield      #2                  // Field value:F
      13: fsub
      14: invokestatic  #4                  // Method get:(F)Lorg/h2/value/ValueFloat;
      17: areturn

  public org.h2.value.Value negate();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:F
       4: fneg
       5: invokestatic  #4                  // Method get:(F)Lorg/h2/value/ValueFloat;
       8: areturn

  public org.h2.value.Value multiply(org.h2.value.Value);
    Code:
       0: aload_1
       1: checkcast     #3                  // class org/h2/value/ValueFloat
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field value:F
       9: aload_2
      10: getfield      #2                  // Field value:F
      13: fmul
      14: invokestatic  #4                  // Method get:(F)Lorg/h2/value/ValueFloat;
      17: areturn

  public org.h2.value.Value divide(org.h2.value.Value);
    Code:
       0: aload_1
       1: checkcast     #3                  // class org/h2/value/ValueFloat
       4: astore_2
       5: aload_2
       6: getfield      #2                  // Field value:F
       9: f2d
      10: dconst_0
      11: dcmpl
      12: ifne          26
      15: sipush        22012
      18: aload_0
      19: invokevirtual #5                  // Method getSQL:()Ljava/lang/String;
      22: invokestatic  #6                  // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      25: athrow
      26: aload_0
      27: getfield      #2                  // Field value:F
      30: aload_2
      31: getfield      #2                  // Field value:F
      34: fdiv
      35: invokestatic  #4                  // Method get:(F)Lorg/h2/value/ValueFloat;
      38: areturn

  public org.h2.value.Value modulus(org.h2.value.Value);
    Code:
       0: aload_1
       1: checkcast     #3                  // class org/h2/value/ValueFloat
       4: astore_2
       5: aload_2
       6: getfield      #2                  // Field value:F
       9: fconst_0
      10: fcmpl
      11: ifne          25
      14: sipush        22012
      17: aload_0
      18: invokevirtual #5                  // Method getSQL:()Ljava/lang/String;
      21: invokestatic  #6                  // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      24: athrow
      25: aload_0
      26: getfield      #2                  // Field value:F
      29: aload_2
      30: getfield      #2                  // Field value:F
      33: frem
      34: invokestatic  #4                  // Method get:(F)Lorg/h2/value/ValueFloat;
      37: areturn

  public java.lang.String getSQL();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:F
       4: ldc           #7                  // float Infinityf
       6: fcmpl
       7: ifne          13
      10: ldc           #8                  // String POWER(0, -1)
      12: areturn
      13: aload_0
      14: getfield      #2                  // Field value:F
      17: ldc           #9                  // float -Infinityf
      19: fcmpl
      20: ifne          26
      23: ldc           #10                 // String (-POWER(0, -1))
      25: areturn
      26: aload_0
      27: getfield      #2                  // Field value:F
      30: f2d
      31: invokestatic  #11                 // Method java/lang/Double.isNaN:(D)Z
      34: ifeq          40
      37: ldc           #12                 // String SQRT(-1)
      39: areturn
      40: aload_0
      41: invokevirtual #13                 // Method getString:()Ljava/lang/String;
      44: areturn

  public int getType();
    Code:
       0: bipush        8
       2: ireturn

  protected int compareSecure(org.h2.value.Value, org.h2.value.CompareMode);
    Code:
       0: aload_1
       1: checkcast     #3                  // class org/h2/value/ValueFloat
       4: astore_3
       5: aload_0
       6: getfield      #2                  // Field value:F
       9: aload_3
      10: getfield      #2                  // Field value:F
      13: invokestatic  #14                 // Method java/lang/Float.compare:(FF)I
      16: ireturn

  public int getSignum();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:F
       4: fconst_0
       5: fcmpl
       6: ifne          13
       9: iconst_0
      10: goto          27
      13: aload_0
      14: getfield      #2                  // Field value:F
      17: fconst_0
      18: fcmpg
      19: ifge          26
      22: iconst_m1
      23: goto          27
      26: iconst_1
      27: ireturn

  public float getFloat();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:F
       4: freturn

  public java.lang.String getString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:F
       4: invokestatic  #15                 // Method java/lang/String.valueOf:(F)Ljava/lang/String;
       7: areturn

  public long getPrecision();
    Code:
       0: ldc2_w        #16                 // long 7l
       3: lreturn

  public int getScale();
    Code:
       0: iconst_0
       1: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:F
       4: invokestatic  #18                 // Method java/lang/Float.floatToIntBits:(F)I
       7: i2l
       8: lstore_1
       9: lload_1
      10: lload_1
      11: bipush        32
      13: lshr
      14: lxor
      15: l2i
      16: ireturn

  public java.lang.Object getObject();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:F
       4: invokestatic  #19                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       7: areturn

  public void set(java.sql.PreparedStatement, int) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: iload_2
       2: aload_0
       3: getfield      #2                  // Field value:F
       6: invokeinterface #20,  3           // InterfaceMethod java/sql/PreparedStatement.setFloat:(IF)V
      11: return

  public static org.h2.value.ValueFloat get(float);
    Code:
       0: fload_0
       1: fconst_1
       2: fcmpl
       3: ifne          10
       6: getstatic     #21                 // Field ONE:Lorg/h2/value/ValueFloat;
       9: areturn
      10: fload_0
      11: fconst_0
      12: fcmpl
      13: ifne          20
      16: getstatic     #22                 // Field ZERO:Lorg/h2/value/ValueFloat;
      19: areturn
      20: new           #3                  // class org/h2/value/ValueFloat
      23: dup
      24: fload_0
      25: invokespecial #23                 // Method "<init>":(F)V
      28: invokestatic  #24                 // Method org/h2/value/Value.cache:(Lorg/h2/value/Value;)Lorg/h2/value/Value;
      31: checkcast     #3                  // class org/h2/value/ValueFloat
      34: areturn

  public int getDisplaySize();
    Code:
       0: bipush        15
       2: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #3                  // class org/h2/value/ValueFloat
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_1
      11: checkcast     #3                  // class org/h2/value/ValueFloat
      14: aconst_null
      15: invokevirtual #25                 // Method compareSecure:(Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  static {};
    Code:
       0: fconst_0
       1: invokestatic  #18                 // Method java/lang/Float.floatToIntBits:(F)I
       4: putstatic     #26                 // Field ZERO_BITS:I
       7: new           #3                  // class org/h2/value/ValueFloat
      10: dup
      11: fconst_0
      12: invokespecial #23                 // Method "<init>":(F)V
      15: putstatic     #22                 // Field ZERO:Lorg/h2/value/ValueFloat;
      18: new           #3                  // class org/h2/value/ValueFloat
      21: dup
      22: fconst_1
      23: invokespecial #23                 // Method "<init>":(F)V
      26: putstatic     #21                 // Field ONE:Lorg/h2/value/ValueFloat;
      29: return
}
