Compiled from "ValueBytes.java"
public class org.h2.value.ValueBytes extends org.h2.value.Value {
  private static final org.h2.value.ValueBytes EMPTY;

  protected byte[] value;

  protected int hash;

  protected org.h2.value.ValueBytes(byte[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/value/Value."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field value:[B
       9: return

  public static org.h2.value.ValueBytes get(byte[]);
    Code:
       0: aload_0
       1: arraylength
       2: ifne          9
       5: getstatic     #3                  // Field EMPTY:Lorg/h2/value/ValueBytes;
       8: areturn
       9: aload_0
      10: invokestatic  #4                  // Method org/h2/util/Utils.cloneByteArray:([B)[B
      13: astore_0
      14: aload_0
      15: invokestatic  #5                  // Method getNoCopy:([B)Lorg/h2/value/ValueBytes;
      18: areturn

  public static org.h2.value.ValueBytes getNoCopy(byte[]);
    Code:
       0: aload_0
       1: arraylength
       2: ifne          9
       5: getstatic     #3                  // Field EMPTY:Lorg/h2/value/ValueBytes;
       8: areturn
       9: new           #6                  // class org/h2/value/ValueBytes
      12: dup
      13: aload_0
      14: invokespecial #7                  // Method "<init>":([B)V
      17: astore_1
      18: aload_0
      19: arraylength
      20: getstatic     #8                  // Field org/h2/engine/SysProperties.OBJECT_CACHE_MAX_PER_ELEMENT_SIZE:I
      23: if_icmple     28
      26: aload_1
      27: areturn
      28: aload_1
      29: invokestatic  #9                  // Method org/h2/value/Value.cache:(Lorg/h2/value/Value;)Lorg/h2/value/Value;
      32: checkcast     #6                  // class org/h2/value/ValueBytes
      35: areturn

  public int getType();
    Code:
       0: bipush        12
       2: ireturn

  public java.lang.String getSQL();
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #12                 // String X\'
       9: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #14                 // Method getBytesNoCopy:()[B
      16: invokestatic  #15                 // Method org/h2/util/StringUtils.convertBytesToHex:([B)Ljava/lang/String;
      19: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #16                 // String \'
      24: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: areturn

  public byte[] getBytesNoCopy();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:[B
       4: areturn

  public byte[] getBytes();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getBytesNoCopy:()[B
       4: invokestatic  #4                  // Method org/h2/util/Utils.cloneByteArray:([B)[B
       7: areturn

  protected int compareSecure(org.h2.value.Value, org.h2.value.CompareMode);
    Code:
       0: aload_1
       1: checkcast     #6                  // class org/h2/value/ValueBytes
       4: getfield      #2                  // Field value:[B
       7: astore_3
       8: aload_2
       9: invokevirtual #18                 // Method org/h2/value/CompareMode.isBinaryUnsigned:()Z
      12: ifeq          24
      15: aload_0
      16: getfield      #2                  // Field value:[B
      19: aload_3
      20: invokestatic  #19                 // Method org/h2/util/Bits.compareNotNullUnsigned:([B[B)I
      23: ireturn
      24: aload_0
      25: getfield      #2                  // Field value:[B
      28: aload_3
      29: invokestatic  #20                 // Method org/h2/util/Bits.compareNotNullSigned:([B[B)I
      32: ireturn

  public java.lang.String getString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:[B
       4: invokestatic  #15                 // Method org/h2/util/StringUtils.convertBytesToHex:([B)Ljava/lang/String;
       7: areturn

  public long getPrecision();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:[B
       4: arraylength
       5: i2l
       6: lreturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #21                 // Field hash:I
       4: ifne          18
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field value:[B
      12: invokestatic  #22                 // Method org/h2/util/Utils.getByteArrayHash:([B)I
      15: putfield      #21                 // Field hash:I
      18: aload_0
      19: getfield      #21                 // Field hash:I
      22: ireturn

  public java.lang.Object getObject();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getBytes:()[B
       4: areturn

  public void set(java.sql.PreparedStatement, int) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: iload_2
       2: aload_0
       3: getfield      #2                  // Field value:[B
       6: invokeinterface #24,  3           // InterfaceMethod java/sql/PreparedStatement.setBytes:(I[B)V
      11: return

  public int getDisplaySize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:[B
       4: arraylength
       5: i2l
       6: ldc2_w        #25                 // long 2l
       9: lmul
      10: invokestatic  #27                 // Method org/h2/util/MathUtils.convertLongToInt:(J)I
      13: ireturn

  public int getMemory();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:[B
       4: arraylength
       5: bipush        24
       7: iadd
       8: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #6                  // class org/h2/value/ValueBytes
       4: ifeq          28
       7: aload_0
       8: getfield      #2                  // Field value:[B
      11: aload_1
      12: checkcast     #6                  // class org/h2/value/ValueBytes
      15: getfield      #2                  // Field value:[B
      18: invokestatic  #28                 // Method java/util/Arrays.equals:([B[B)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public org.h2.value.Value convertPrecision(long, boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:[B
       4: arraylength
       5: i2l
       6: lload_1
       7: lcmp
       8: ifgt          13
      11: aload_0
      12: areturn
      13: lload_1
      14: invokestatic  #27                 // Method org/h2/util/MathUtils.convertLongToInt:(J)I
      17: istore        4
      19: aload_0
      20: getfield      #2                  // Field value:[B
      23: iload         4
      25: invokestatic  #29                 // Method java/util/Arrays.copyOf:([BI)[B
      28: astore        5
      30: aload         5
      32: invokestatic  #30                 // Method get:([B)Lorg/h2/value/ValueBytes;
      35: areturn

  static {};
    Code:
       0: new           #6                  // class org/h2/value/ValueBytes
       3: dup
       4: getstatic     #31                 // Field org/h2/util/Utils.EMPTY_BYTES:[B
       7: invokespecial #7                  // Method "<init>":([B)V
      10: putstatic     #3                  // Field EMPTY:Lorg/h2/value/ValueBytes;
      13: return
}
