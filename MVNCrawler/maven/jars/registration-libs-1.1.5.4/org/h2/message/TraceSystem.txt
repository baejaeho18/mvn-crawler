Compiled from "TraceSystem.java"
public class org.h2.message.TraceSystem implements org.h2.message.TraceWriter {
  public static final int PARENT;

  public static final int OFF;

  public static final int ERROR;

  public static final int INFO;

  public static final int DEBUG;

  public static final int ADAPTER;

  public static final int DEFAULT_TRACE_LEVEL_SYSTEM_OUT;

  public static final int DEFAULT_TRACE_LEVEL_FILE;

  private static final int DEFAULT_MAX_FILE_SIZE;

  private static final int CHECK_SIZE_EACH_WRITES;

  private int levelSystemOut;

  private int levelFile;

  private int levelMax;

  private int maxFileSize;

  private java.lang.String fileName;

  private final java.util.concurrent.atomic.AtomicReferenceArray<org.h2.message.Trace> traces;

  private java.text.SimpleDateFormat dateFormat;

  private java.io.Writer fileWriter;

  private java.io.PrintWriter printWriter;

  private int checkSize;

  private boolean closed;

  private boolean writingErrorLogged;

  private org.h2.message.TraceWriter writer;

  private java.io.PrintStream sysOut;

  public org.h2.message.TraceSystem(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field levelSystemOut:I
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field levelFile:I
      14: aload_0
      15: ldc           #4                  // int 67108864
      17: putfield      #5                  // Field maxFileSize:I
      20: aload_0
      21: new           #6                  // class java/util/concurrent/atomic/AtomicReferenceArray
      24: dup
      25: getstatic     #7                  // Field org/h2/message/Trace.MODULE_NAMES:[Ljava/lang/String;
      28: arraylength
      29: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicReferenceArray."<init>":(I)V
      32: putfield      #9                  // Field traces:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      35: aload_0
      36: aload_0
      37: putfield      #10                 // Field writer:Lorg/h2/message/TraceWriter;
      40: aload_0
      41: getstatic     #11                 // Field java/lang/System.out:Ljava/io/PrintStream;
      44: putfield      #12                 // Field sysOut:Ljava/io/PrintStream;
      47: aload_0
      48: aload_1
      49: putfield      #13                 // Field fileName:Ljava/lang/String;
      52: aload_0
      53: invokespecial #14                 // Method updateLevel:()V
      56: return

  private void updateLevel();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field levelSystemOut:I
       5: aload_0
       6: getfield      #3                  // Field levelFile:I
       9: invokestatic  #15                 // Method java/lang/Math.max:(II)I
      12: putfield      #16                 // Field levelMax:I
      15: return

  public void setSysOut(java.io.PrintStream);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field sysOut:Ljava/io/PrintStream;
       5: return

  public org.h2.message.Trace getTrace(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field traces:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: iload_1
       5: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReferenceArray.get:(I)Ljava/lang/Object;
       8: checkcast     #18                 // class org/h2/message/Trace
      11: astore_2
      12: aload_2
      13: ifnonnull     54
      16: new           #18                 // class org/h2/message/Trace
      19: dup
      20: aload_0
      21: getfield      #10                 // Field writer:Lorg/h2/message/TraceWriter;
      24: iload_1
      25: invokespecial #19                 // Method org/h2/message/Trace."<init>":(Lorg/h2/message/TraceWriter;I)V
      28: astore_2
      29: aload_0
      30: getfield      #9                  // Field traces:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      33: iload_1
      34: aconst_null
      35: aload_2
      36: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicReferenceArray.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z
      39: ifne          54
      42: aload_0
      43: getfield      #9                  // Field traces:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      46: iload_1
      47: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReferenceArray.get:(I)Ljava/lang/Object;
      50: checkcast     #18                 // class org/h2/message/Trace
      53: astore_2
      54: aload_2
      55: areturn

  public org.h2.message.Trace getTrace(java.lang.String);
    Code:
       0: new           #18                 // class org/h2/message/Trace
       3: dup
       4: aload_0
       5: getfield      #10                 // Field writer:Lorg/h2/message/TraceWriter;
       8: aload_1
       9: invokespecial #21                 // Method org/h2/message/Trace."<init>":(Lorg/h2/message/TraceWriter;Ljava/lang/String;)V
      12: areturn

  public boolean isEnabled(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field levelMax:I
       4: iconst_4
       5: if_icmpne     19
       8: aload_0
       9: getfield      #10                 // Field writer:Lorg/h2/message/TraceWriter;
      12: iload_1
      13: invokeinterface #22,  2           // InterfaceMethod org/h2/message/TraceWriter.isEnabled:(I)Z
      18: ireturn
      19: iload_1
      20: aload_0
      21: getfield      #16                 // Field levelMax:I
      24: if_icmpgt     31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public void setFileName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field fileName:Ljava/lang/String;
       5: return

  public void setMaxFileSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field maxFileSize:I
       5: return

  public void setLevelSystemOut(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field levelSystemOut:I
       5: aload_0
       6: invokespecial #14                 // Method updateLevel:()V
       9: return

  public void setLevelFile(int);
    Code:
       0: iload_1
       1: iconst_4
       2: if_icmpne     125
       5: ldc           #23                 // String org.h2.message.TraceWriterAdapter
       7: astore_2
       8: aload_0
       9: aload_2
      10: invokestatic  #24                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      13: invokevirtual #25                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      16: checkcast     #26                 // class org/h2/message/TraceWriter
      19: putfield      #10                 // Field writer:Lorg/h2/message/TraceWriter;
      22: goto          50
      25: astore_3
      26: ldc           #28                 // int 90086
      28: aload_3
      29: iconst_1
      30: anewarray     #29                 // class java/lang/String
      33: dup
      34: iconst_0
      35: aload_2
      36: aastore
      37: invokestatic  #30                 // Method org/h2/message/DbException.get:(ILjava/lang/Throwable;[Ljava/lang/String;)Lorg/h2/message/DbException;
      40: astore_3
      41: aload_0
      42: iconst_1
      43: iconst_2
      44: aload_2
      45: aload_3
      46: invokevirtual #31                 // Method write:(IILjava/lang/String;Ljava/lang/Throwable;)V
      49: return
      50: aload_0
      51: getfield      #13                 // Field fileName:Ljava/lang/String;
      54: astore_3
      55: aload_3
      56: ifnull        125
      59: aload_3
      60: ldc           #32                 // String .trace.db
      62: invokevirtual #33                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      65: ifeq          84
      68: aload_3
      69: iconst_0
      70: aload_3
      71: invokevirtual #34                 // Method java/lang/String.length:()I
      74: ldc           #32                 // String .trace.db
      76: invokevirtual #34                 // Method java/lang/String.length:()I
      79: isub
      80: invokevirtual #35                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      83: astore_3
      84: aload_3
      85: bipush        47
      87: invokevirtual #36                 // Method java/lang/String.lastIndexOf:(I)I
      90: aload_3
      91: bipush        92
      93: invokevirtual #36                 // Method java/lang/String.lastIndexOf:(I)I
      96: invokestatic  #15                 // Method java/lang/Math.max:(II)I
      99: istore        4
     101: iload         4
     103: iflt          115
     106: aload_3
     107: iload         4
     109: iconst_1
     110: iadd
     111: invokevirtual #37                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     114: astore_3
     115: aload_0
     116: getfield      #10                 // Field writer:Lorg/h2/message/TraceWriter;
     119: aload_3
     120: invokeinterface #38,  2           // InterfaceMethod org/h2/message/TraceWriter.setName:(Ljava/lang/String;)V
     125: aload_0
     126: iload_1
     127: putfield      #3                  // Field levelFile:I
     130: aload_0
     131: invokespecial #14                 // Method updateLevel:()V
     134: return
    Exception table:
       from    to  target type
           8    22    25   Class java/lang/Throwable

  public int getLevelFile();
    Code:
       0: aload_0
       1: getfield      #3                  // Field levelFile:I
       4: ireturn

  private synchronized java.lang.String format(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #39                 // Field dateFormat:Ljava/text/SimpleDateFormat;
       4: ifnonnull     20
       7: aload_0
       8: new           #40                 // class java/text/SimpleDateFormat
      11: dup
      12: ldc           #41                 // String yyyy-MM-dd HH:mm:ss
      14: invokespecial #42                 // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;)V
      17: putfield      #39                 // Field dateFormat:Ljava/text/SimpleDateFormat;
      20: new           #43                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      27: aload_0
      28: getfield      #39                 // Field dateFormat:Ljava/text/SimpleDateFormat;
      31: invokestatic  #45                 // Method java/lang/System.currentTimeMillis:()J
      34: invokestatic  #46                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      37: invokevirtual #47                 // Method java/text/SimpleDateFormat.format:(Ljava/lang/Object;)Ljava/lang/String;
      40: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_1
      44: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #49                 // String :
      49: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_2
      53: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: areturn

  public void write(int, int, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #7                  // Field org/h2/message/Trace.MODULE_NAMES:[Ljava/lang/String;
       5: iload_2
       6: aaload
       7: aload_3
       8: aload         4
      10: invokevirtual #51                 // Method write:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      13: return

  public void write(int, java.lang.String, java.lang.String, java.lang.Throwable);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #2                  // Field levelSystemOut:I
       5: if_icmple     16
       8: iload_1
       9: aload_0
      10: getfield      #16                 // Field levelMax:I
      13: if_icmple     51
      16: aload_0
      17: getfield      #12                 // Field sysOut:Ljava/io/PrintStream;
      20: aload_0
      21: aload_2
      22: aload_3
      23: invokespecial #52                 // Method format:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      26: invokevirtual #53                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      29: aload         4
      31: ifnull        51
      34: aload_0
      35: getfield      #2                  // Field levelSystemOut:I
      38: iconst_3
      39: if_icmpne     51
      42: aload         4
      44: aload_0
      45: getfield      #12                 // Field sysOut:Ljava/io/PrintStream;
      48: invokevirtual #54                 // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintStream;)V
      51: aload_0
      52: getfield      #13                 // Field fileName:Ljava/lang/String;
      55: ifnull        78
      58: iload_1
      59: aload_0
      60: getfield      #3                  // Field levelFile:I
      63: if_icmpgt     78
      66: aload_0
      67: aload_0
      68: aload_2
      69: aload_3
      70: invokespecial #52                 // Method format:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      73: aload         4
      75: invokespecial #55                 // Method writeFile:(Ljava/lang/String;Ljava/lang/Throwable;)V
      78: return

  private synchronized void writeFile(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: dup
       2: getfield      #56                 // Field checkSize:I
       5: dup_x1
       6: iconst_1
       7: iadd
       8: putfield      #56                 // Field checkSize:I
      11: sipush        4096
      14: if_icmplt     84
      17: aload_0
      18: iconst_0
      19: putfield      #56                 // Field checkSize:I
      22: aload_0
      23: invokespecial #57                 // Method closeWriter:()V
      26: aload_0
      27: getfield      #5                  // Field maxFileSize:I
      30: ifle          84
      33: aload_0
      34: getfield      #13                 // Field fileName:Ljava/lang/String;
      37: invokestatic  #58                 // Method org/h2/store/fs/FileUtils.size:(Ljava/lang/String;)J
      40: aload_0
      41: getfield      #5                  // Field maxFileSize:I
      44: i2l
      45: lcmp
      46: ifle          84
      49: new           #43                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      56: aload_0
      57: getfield      #13                 // Field fileName:Ljava/lang/String;
      60: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: ldc           #59                 // String .old
      65: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: astore_3
      72: aload_3
      73: invokestatic  #60                 // Method org/h2/store/fs/FileUtils.delete:(Ljava/lang/String;)V
      76: aload_0
      77: getfield      #13                 // Field fileName:Ljava/lang/String;
      80: aload_3
      81: invokestatic  #61                 // Method org/h2/store/fs/FileUtils.move:(Ljava/lang/String;Ljava/lang/String;)V
      84: aload_0
      85: invokespecial #62                 // Method openWriter:()Z
      88: ifne          92
      91: return
      92: aload_0
      93: getfield      #63                 // Field printWriter:Ljava/io/PrintWriter;
      96: aload_1
      97: invokevirtual #64                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
     100: aload_2
     101: ifnull        171
     104: aload_0
     105: getfield      #3                  // Field levelFile:I
     108: iconst_1
     109: if_icmpne     163
     112: aload_2
     113: instanceof    #65                 // class org/h2/jdbc/JdbcSQLException
     116: ifeq          163
     119: aload_2
     120: checkcast     #65                 // class org/h2/jdbc/JdbcSQLException
     123: astore_3
     124: aload_3
     125: invokevirtual #66                 // Method org/h2/jdbc/JdbcSQLException.getErrorCode:()I
     128: istore        4
     130: iload         4
     132: invokestatic  #67                 // Method org/h2/api/ErrorCode.isCommon:(I)Z
     135: ifeq          152
     138: aload_0
     139: getfield      #63                 // Field printWriter:Ljava/io/PrintWriter;
     142: aload_2
     143: invokevirtual #68                 // Method java/lang/Throwable.toString:()Ljava/lang/String;
     146: invokevirtual #64                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
     149: goto          160
     152: aload_2
     153: aload_0
     154: getfield      #63                 // Field printWriter:Ljava/io/PrintWriter;
     157: invokevirtual #69                 // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintWriter;)V
     160: goto          171
     163: aload_2
     164: aload_0
     165: getfield      #63                 // Field printWriter:Ljava/io/PrintWriter;
     168: invokevirtual #69                 // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintWriter;)V
     171: aload_0
     172: getfield      #63                 // Field printWriter:Ljava/io/PrintWriter;
     175: invokevirtual #70                 // Method java/io/PrintWriter.flush:()V
     178: aload_0
     179: getfield      #71                 // Field closed:Z
     182: ifeq          189
     185: aload_0
     186: invokespecial #57                 // Method closeWriter:()V
     189: goto          198
     192: astore_3
     193: aload_0
     194: aload_3
     195: invokespecial #73                 // Method logWritingError:(Ljava/lang/Exception;)V
     198: return
    Exception table:
       from    to  target type
           0    91   192   Class java/lang/Exception
          92   189   192   Class java/lang/Exception

  private void logWritingError(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #74                 // Field writingErrorLogged:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #74                 // Field writingErrorLogged:Z
      13: ldc           #75                 // int 90034
      15: aload_1
      16: iconst_2
      17: anewarray     #29                 // class java/lang/String
      20: dup
      21: iconst_0
      22: aload_0
      23: getfield      #13                 // Field fileName:Ljava/lang/String;
      26: aastore
      27: dup
      28: iconst_1
      29: aload_1
      30: invokevirtual #76                 // Method java/lang/Exception.toString:()Ljava/lang/String;
      33: aastore
      34: invokestatic  #30                 // Method org/h2/message/DbException.get:(ILjava/lang/Throwable;[Ljava/lang/String;)Lorg/h2/message/DbException;
      37: astore_2
      38: aload_0
      39: aconst_null
      40: putfield      #13                 // Field fileName:Ljava/lang/String;
      43: aload_0
      44: getfield      #12                 // Field sysOut:Ljava/io/PrintStream;
      47: aload_2
      48: invokevirtual #77                 // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
      51: aload_2
      52: invokevirtual #78                 // Method java/lang/Exception.printStackTrace:()V
      55: return

  private boolean openWriter();
    Code:
       0: aload_0
       1: getfield      #63                 // Field printWriter:Ljava/io/PrintWriter;
       4: ifnonnull     81
       7: aload_0
       8: getfield      #13                 // Field fileName:Ljava/lang/String;
      11: invokestatic  #79                 // Method org/h2/store/fs/FileUtils.getParent:(Ljava/lang/String;)Ljava/lang/String;
      14: invokestatic  #80                 // Method org/h2/store/fs/FileUtils.createDirectories:(Ljava/lang/String;)V
      17: aload_0
      18: getfield      #13                 // Field fileName:Ljava/lang/String;
      21: invokestatic  #81                 // Method org/h2/store/fs/FileUtils.exists:(Ljava/lang/String;)Z
      24: ifeq          39
      27: aload_0
      28: getfield      #13                 // Field fileName:Ljava/lang/String;
      31: invokestatic  #82                 // Method org/h2/store/fs/FileUtils.canWrite:(Ljava/lang/String;)Z
      34: ifne          39
      37: iconst_0
      38: ireturn
      39: aload_0
      40: aload_0
      41: getfield      #13                 // Field fileName:Ljava/lang/String;
      44: iconst_1
      45: invokestatic  #83                 // Method org/h2/store/fs/FileUtils.newOutputStream:(Ljava/lang/String;Z)Ljava/io/OutputStream;
      48: invokestatic  #84                 // Method org/h2/util/IOUtils.getBufferedWriter:(Ljava/io/OutputStream;)Ljava/io/Writer;
      51: putfield      #85                 // Field fileWriter:Ljava/io/Writer;
      54: aload_0
      55: new           #86                 // class java/io/PrintWriter
      58: dup
      59: aload_0
      60: getfield      #85                 // Field fileWriter:Ljava/io/Writer;
      63: iconst_1
      64: invokespecial #87                 // Method java/io/PrintWriter."<init>":(Ljava/io/Writer;Z)V
      67: putfield      #63                 // Field printWriter:Ljava/io/PrintWriter;
      70: goto          81
      73: astore_1
      74: aload_0
      75: aload_1
      76: invokespecial #73                 // Method logWritingError:(Ljava/lang/Exception;)V
      79: iconst_0
      80: ireturn
      81: iconst_1
      82: ireturn
    Exception table:
       from    to  target type
           7    38    73   Class java/lang/Exception
          39    70    73   Class java/lang/Exception

  private synchronized void closeWriter();
    Code:
       0: aload_0
       1: getfield      #63                 // Field printWriter:Ljava/io/PrintWriter;
       4: ifnull        26
       7: aload_0
       8: getfield      #63                 // Field printWriter:Ljava/io/PrintWriter;
      11: invokevirtual #70                 // Method java/io/PrintWriter.flush:()V
      14: aload_0
      15: getfield      #63                 // Field printWriter:Ljava/io/PrintWriter;
      18: invokevirtual #88                 // Method java/io/PrintWriter.close:()V
      21: aload_0
      22: aconst_null
      23: putfield      #63                 // Field printWriter:Ljava/io/PrintWriter;
      26: aload_0
      27: getfield      #85                 // Field fileWriter:Ljava/io/Writer;
      30: ifnull        49
      33: aload_0
      34: getfield      #85                 // Field fileWriter:Ljava/io/Writer;
      37: invokevirtual #89                 // Method java/io/Writer.close:()V
      40: goto          44
      43: astore_1
      44: aload_0
      45: aconst_null
      46: putfield      #85                 // Field fileWriter:Ljava/io/Writer;
      49: return
    Exception table:
       from    to  target type
          33    40    43   Class java/io/IOException

  public void close();
    Code:
       0: aload_0
       1: invokespecial #57                 // Method closeWriter:()V
       4: aload_0
       5: iconst_1
       6: putfield      #71                 // Field closed:Z
       9: return

  public void setName(java.lang.String);
    Code:
       0: return
}
