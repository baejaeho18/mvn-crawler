Compiled from "PgServer.java"
public class org.h2.server.pg.PgServer implements org.h2.server.Service {
  public static final int DEFAULT_PORT;

  public static final int PG_TYPE_VARCHAR;

  public static final int PG_TYPE_BOOL;

  public static final int PG_TYPE_BYTEA;

  public static final int PG_TYPE_BPCHAR;

  public static final int PG_TYPE_INT8;

  public static final int PG_TYPE_INT2;

  public static final int PG_TYPE_INT4;

  public static final int PG_TYPE_TEXT;

  public static final int PG_TYPE_OID;

  public static final int PG_TYPE_FLOAT4;

  public static final int PG_TYPE_FLOAT8;

  public static final int PG_TYPE_UNKNOWN;

  public static final int PG_TYPE_TEXTARRAY;

  public static final int PG_TYPE_DATE;

  public static final int PG_TYPE_TIME;

  public static final int PG_TYPE_TIMESTAMP_NO_TMZONE;

  public static final int PG_TYPE_NUMERIC;

  private final java.util.HashSet<java.lang.Integer> typeSet;

  private int port;

  private boolean portIsSet;

  private boolean stop;

  private boolean trace;

  private java.net.ServerSocket serverSocket;

  private final java.util.Set<org.h2.server.pg.PgServerThread> running;

  private final java.util.concurrent.atomic.AtomicInteger pid;

  private java.lang.String baseDir;

  private boolean allowOthers;

  private boolean isDaemon;

  private boolean ifExists;

  private java.lang.String key;

  private java.lang.String keyDatabase;

  public org.h2.server.pg.PgServer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashSet
       8: dup
       9: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      12: putfield      #4                  // Field typeSet:Ljava/util/HashSet;
      15: aload_0
      16: sipush        5435
      19: putfield      #5                  // Field port:I
      22: aload_0
      23: new           #2                  // class java/util/HashSet
      26: dup
      27: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      30: invokestatic  #6                  // Method java/util/Collections.synchronizedSet:(Ljava/util/Set;)Ljava/util/Set;
      33: putfield      #7                  // Field running:Ljava/util/Set;
      36: aload_0
      37: new           #8                  // class java/util/concurrent/atomic/AtomicInteger
      40: dup
      41: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      44: putfield      #10                 // Field pid:Ljava/util/concurrent/atomic/AtomicInteger;
      47: return

  public void init(java.lang.String...);
    Code:
       0: aload_0
       1: sipush        5435
       4: putfield      #5                  // Field port:I
       7: iconst_0
       8: istore_2
       9: aload_1
      10: ifnull        181
      13: iload_2
      14: aload_1
      15: arraylength
      16: if_icmpge     181
      19: aload_1
      20: iload_2
      21: aaload
      22: astore_3
      23: aload_3
      24: ldc           #11                 // String -trace
      26: invokestatic  #12                 // Method org/h2/util/Tool.isOption:(Ljava/lang/String;Ljava/lang/String;)Z
      29: ifeq          40
      32: aload_0
      33: iconst_1
      34: putfield      #13                 // Field trace:Z
      37: goto          175
      40: aload_3
      41: ldc           #14                 // String -pgPort
      43: invokestatic  #12                 // Method org/h2/util/Tool.isOption:(Ljava/lang/String;Ljava/lang/String;)Z
      46: ifeq          73
      49: aload_0
      50: aload_1
      51: iinc          2, 1
      54: iload_2
      55: aaload
      56: invokestatic  #15                 // Method java/lang/Integer.decode:(Ljava/lang/String;)Ljava/lang/Integer;
      59: invokevirtual #16                 // Method java/lang/Integer.intValue:()I
      62: putfield      #5                  // Field port:I
      65: aload_0
      66: iconst_1
      67: putfield      #17                 // Field portIsSet:Z
      70: goto          175
      73: aload_3
      74: ldc           #18                 // String -baseDir
      76: invokestatic  #12                 // Method org/h2/util/Tool.isOption:(Ljava/lang/String;Ljava/lang/String;)Z
      79: ifeq          95
      82: aload_0
      83: aload_1
      84: iinc          2, 1
      87: iload_2
      88: aaload
      89: putfield      #19                 // Field baseDir:Ljava/lang/String;
      92: goto          175
      95: aload_3
      96: ldc           #20                 // String -pgAllowOthers
      98: invokestatic  #12                 // Method org/h2/util/Tool.isOption:(Ljava/lang/String;Ljava/lang/String;)Z
     101: ifeq          112
     104: aload_0
     105: iconst_1
     106: putfield      #21                 // Field allowOthers:Z
     109: goto          175
     112: aload_3
     113: ldc           #22                 // String -pgDaemon
     115: invokestatic  #12                 // Method org/h2/util/Tool.isOption:(Ljava/lang/String;Ljava/lang/String;)Z
     118: ifeq          129
     121: aload_0
     122: iconst_1
     123: putfield      #23                 // Field isDaemon:Z
     126: goto          175
     129: aload_3
     130: ldc           #24                 // String -ifExists
     132: invokestatic  #12                 // Method org/h2/util/Tool.isOption:(Ljava/lang/String;Ljava/lang/String;)Z
     135: ifeq          146
     138: aload_0
     139: iconst_1
     140: putfield      #25                 // Field ifExists:Z
     143: goto          175
     146: aload_3
     147: ldc           #26                 // String -key
     149: invokestatic  #12                 // Method org/h2/util/Tool.isOption:(Ljava/lang/String;Ljava/lang/String;)Z
     152: ifeq          175
     155: aload_0
     156: aload_1
     157: iinc          2, 1
     160: iload_2
     161: aaload
     162: putfield      #27                 // Field key:Ljava/lang/String;
     165: aload_0
     166: aload_1
     167: iinc          2, 1
     170: iload_2
     171: aaload
     172: putfield      #28                 // Field keyDatabase:Ljava/lang/String;
     175: iinc          2, 1
     178: goto          9
     181: invokestatic  #29                 // Method org/h2/Driver.load:()Lorg/h2/Driver;
     184: pop
     185: return

  boolean getTrace();
    Code:
       0: aload_0
       1: getfield      #13                 // Field trace:Z
       4: ireturn

  void trace(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #13                 // Field trace:Z
       4: ifeq          14
       7: getstatic     #30                 // Field java/lang/System.out:Ljava/io/PrintStream;
      10: aload_1
      11: invokevirtual #31                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      14: return

  synchronized void remove(org.h2.server.pg.PgServerThread);
    Code:
       0: aload_0
       1: getfield      #7                  // Field running:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #32,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  void traceError(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #13                 // Field trace:Z
       4: ifeq          11
       7: aload_1
       8: invokevirtual #33                 // Method java/lang/Exception.printStackTrace:()V
      11: return

  public java.lang.String getURL();
    Code:
       0: new           #34                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #36                 // String pg://
       9: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: invokestatic  #38                 // Method org/h2/util/NetUtils.getLocalAddress:()Ljava/lang/String;
      15: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #39                 // String :
      20: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: getfield      #5                  // Field port:I
      27: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: areturn

  public int getPort();
    Code:
       0: aload_0
       1: getfield      #5                  // Field port:I
       4: ireturn

  private boolean allow(java.net.Socket);
    Code:
       0: aload_0
       1: getfield      #21                 // Field allowOthers:Z
       4: ifeq          9
       7: iconst_1
       8: ireturn
       9: aload_1
      10: invokestatic  #42                 // Method org/h2/util/NetUtils.isLocalAddress:(Ljava/net/Socket;)Z
      13: ireturn
      14: astore_2
      15: aload_0
      16: aload_2
      17: invokevirtual #44                 // Method traceError:(Ljava/lang/Exception;)V
      20: iconst_0
      21: ireturn
    Exception table:
       from    to  target type
           9    13    14   Class java/net/UnknownHostException

  public void start();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #45                 // Field stop:Z
       5: aload_0
       6: aload_0
       7: getfield      #5                  // Field port:I
      10: iconst_0
      11: invokestatic  #46                 // Method org/h2/util/NetUtils.createServerSocket:(IZ)Ljava/net/ServerSocket;
      14: putfield      #47                 // Field serverSocket:Ljava/net/ServerSocket;
      17: goto          42
      20: astore_1
      21: aload_0
      22: getfield      #17                 // Field portIsSet:Z
      25: ifne          40
      28: aload_0
      29: iconst_0
      30: iconst_0
      31: invokestatic  #46                 // Method org/h2/util/NetUtils.createServerSocket:(IZ)Ljava/net/ServerSocket;
      34: putfield      #47                 // Field serverSocket:Ljava/net/ServerSocket;
      37: goto          42
      40: aload_1
      41: athrow
      42: aload_0
      43: aload_0
      44: getfield      #47                 // Field serverSocket:Ljava/net/ServerSocket;
      47: invokevirtual #49                 // Method java/net/ServerSocket.getLocalPort:()I
      50: putfield      #5                  // Field port:I
      53: return
    Exception table:
       from    to  target type
           5    17    20   Class org/h2/message/DbException

  public void listen();
    Code:
       0: invokestatic  #50                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #51                 // Method java/lang/Thread.getName:()Ljava/lang/String;
       6: astore_1
       7: aload_0
       8: getfield      #45                 // Field stop:Z
      11: ifne          127
      14: aload_0
      15: getfield      #47                 // Field serverSocket:Ljava/net/ServerSocket;
      18: invokevirtual #52                 // Method java/net/ServerSocket.accept:()Ljava/net/Socket;
      21: astore_2
      22: aload_0
      23: aload_2
      24: invokespecial #53                 // Method allow:(Ljava/net/Socket;)Z
      27: ifne          43
      30: aload_0
      31: ldc           #54                 // String Connection not allowed
      33: invokevirtual #55                 // Method trace:(Ljava/lang/String;)V
      36: aload_2
      37: invokevirtual #56                 // Method java/net/Socket.close:()V
      40: goto          124
      43: new           #57                 // class org/h2/server/pg/PgServerThread
      46: dup
      47: aload_2
      48: aload_0
      49: invokespecial #58                 // Method org/h2/server/pg/PgServerThread."<init>":(Ljava/net/Socket;Lorg/h2/server/pg/PgServer;)V
      52: astore_3
      53: aload_0
      54: getfield      #7                  // Field running:Ljava/util/Set;
      57: aload_3
      58: invokeinterface #59,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      63: pop
      64: aload_3
      65: aload_0
      66: getfield      #10                 // Field pid:Ljava/util/concurrent/atomic/AtomicInteger;
      69: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      72: invokevirtual #61                 // Method org/h2/server/pg/PgServerThread.setProcessId:(I)V
      75: new           #62                 // class java/lang/Thread
      78: dup
      79: aload_3
      80: new           #34                 // class java/lang/StringBuilder
      83: dup
      84: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      87: aload_1
      88: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: ldc           #63                 // String  thread
      93: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokespecial #64                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
     102: astore        4
     104: aload         4
     106: aload_0
     107: getfield      #23                 // Field isDaemon:Z
     110: invokevirtual #65                 // Method java/lang/Thread.setDaemon:(Z)V
     113: aload_3
     114: aload         4
     116: invokevirtual #66                 // Method org/h2/server/pg/PgServerThread.setThread:(Ljava/lang/Thread;)V
     119: aload         4
     121: invokevirtual #67                 // Method java/lang/Thread.start:()V
     124: goto          7
     127: goto          142
     130: astore_2
     131: aload_0
     132: getfield      #45                 // Field stop:Z
     135: ifne          142
     138: aload_2
     139: invokevirtual #33                 // Method java/lang/Exception.printStackTrace:()V
     142: return
    Exception table:
       from    to  target type
           7   127   130   Class java/lang/Exception

  public void stop();
    Code:
       0: aload_0
       1: getfield      #45                 // Field stop:Z
       4: ifne          39
       7: aload_0
       8: iconst_1
       9: putfield      #45                 // Field stop:Z
      12: aload_0
      13: getfield      #47                 // Field serverSocket:Ljava/net/ServerSocket;
      16: ifnull        39
      19: aload_0
      20: getfield      #47                 // Field serverSocket:Ljava/net/ServerSocket;
      23: invokevirtual #69                 // Method java/net/ServerSocket.close:()V
      26: goto          34
      29: astore_1
      30: aload_1
      31: invokevirtual #71                 // Method java/io/IOException.printStackTrace:()V
      34: aload_0
      35: aconst_null
      36: putfield      #47                 // Field serverSocket:Ljava/net/ServerSocket;
      39: new           #72                 // class java/util/ArrayList
      42: dup
      43: aload_0
      44: getfield      #7                  // Field running:Ljava/util/Set;
      47: invokespecial #73                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      50: invokevirtual #74                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      53: astore_1
      54: aload_1
      55: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      60: ifeq          104
      63: aload_1
      64: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      69: checkcast     #57                 // class org/h2/server/pg/PgServerThread
      72: astore_2
      73: aload_2
      74: invokevirtual #77                 // Method org/h2/server/pg/PgServerThread.close:()V
      77: aload_2
      78: invokevirtual #78                 // Method org/h2/server/pg/PgServerThread.getThread:()Ljava/lang/Thread;
      81: astore_3
      82: aload_3
      83: ifnull        93
      86: aload_3
      87: ldc2_w        #79                 // long 100l
      90: invokevirtual #81                 // Method java/lang/Thread.join:(J)V
      93: goto          101
      96: astore_3
      97: aload_3
      98: invokevirtual #33                 // Method java/lang/Exception.printStackTrace:()V
     101: goto          54
     104: return
    Exception table:
       from    to  target type
          19    26    29   Class java/io/IOException
          77    93    96   Class java/lang/Exception

  public boolean isRunning(boolean);
    Code:
       0: aload_0
       1: getfield      #47                 // Field serverSocket:Ljava/net/ServerSocket;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #47                 // Field serverSocket:Ljava/net/ServerSocket;
      13: invokevirtual #49                 // Method java/net/ServerSocket.getLocalPort:()I
      16: iconst_0
      17: invokestatic  #82                 // Method org/h2/util/NetUtils.createLoopbackSocket:(IZ)Ljava/net/Socket;
      20: astore_2
      21: aload_2
      22: invokevirtual #56                 // Method java/net/Socket.close:()V
      25: iconst_1
      26: ireturn
      27: astore_2
      28: iload_1
      29: ifeq          37
      32: aload_0
      33: aload_2
      34: invokevirtual #44                 // Method traceError:(Ljava/lang/Exception;)V
      37: iconst_0
      38: ireturn
    Exception table:
       from    to  target type
           9    26    27   Class java/lang/Exception

  org.h2.server.pg.PgServerThread getThread(int);
    Code:
       0: new           #72                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #7                  // Field running:Ljava/util/Set;
       8: invokespecial #73                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: invokevirtual #74                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          47
      24: aload_2
      25: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #57                 // class org/h2/server/pg/PgServerThread
      33: astore_3
      34: aload_3
      35: invokevirtual #83                 // Method org/h2/server/pg/PgServerThread.getProcessId:()I
      38: iload_1
      39: if_icmpne     44
      42: aload_3
      43: areturn
      44: goto          15
      47: aconst_null
      48: areturn

  java.lang.String getBaseDir();
    Code:
       0: aload_0
       1: getfield      #19                 // Field baseDir:Ljava/lang/String;
       4: areturn

  public boolean getAllowOthers();
    Code:
       0: aload_0
       1: getfield      #21                 // Field allowOthers:Z
       4: ireturn

  public java.lang.String getType();
    Code:
       0: ldc           #84                 // String PG
       2: areturn

  public java.lang.String getName();
    Code:
       0: ldc           #85                 // String H2 PG Server
       2: areturn

  boolean getIfExists();
    Code:
       0: aload_0
       1: getfield      #25                 // Field ifExists:Z
       4: ireturn

  public static java.lang.String getIndexColumn(java.sql.Connection, int, java.lang.Integer, java.lang.Boolean) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnull        11
       4: aload_2
       5: invokevirtual #16                 // Method java/lang/Integer.intValue:()I
       8: ifne          61
      11: aload_0
      12: ldc           #86                 // String select sql from information_schema.indexes where id=?
      14: invokeinterface #87,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      19: astore        4
      21: aload         4
      23: iconst_1
      24: iload_1
      25: invokeinterface #88,  3           // InterfaceMethod java/sql/PreparedStatement.setInt:(II)V
      30: aload         4
      32: invokeinterface #89,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
      37: astore        5
      39: aload         5
      41: invokeinterface #90,  1           // InterfaceMethod java/sql/ResultSet.next:()Z
      46: ifeq          58
      49: aload         5
      51: iconst_1
      52: invokeinterface #91,  2           // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
      57: areturn
      58: ldc           #92                 // String
      60: areturn
      61: aload_0
      62: ldc           #93                 // String select column_name from information_schema.indexes where id=? and ordinal_position=?
      64: invokeinterface #87,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      69: astore        4
      71: aload         4
      73: iconst_1
      74: iload_1
      75: invokeinterface #88,  3           // InterfaceMethod java/sql/PreparedStatement.setInt:(II)V
      80: aload         4
      82: iconst_2
      83: aload_2
      84: invokevirtual #16                 // Method java/lang/Integer.intValue:()I
      87: invokeinterface #88,  3           // InterfaceMethod java/sql/PreparedStatement.setInt:(II)V
      92: aload         4
      94: invokeinterface #89,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
      99: astore        5
     101: aload         5
     103: invokeinterface #90,  1           // InterfaceMethod java/sql/ResultSet.next:()Z
     108: ifeq          120
     111: aload         5
     113: iconst_1
     114: invokeinterface #91,  2           // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
     119: areturn
     120: ldc           #92                 // String
     122: areturn

  public static java.lang.String getCurrentSchema(java.sql.Connection) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokeinterface #94,  1           // InterfaceMethod java/sql/Connection.createStatement:()Ljava/sql/Statement;
       6: ldc           #95                 // String call schema()
       8: invokeinterface #96,  2           // InterfaceMethod java/sql/Statement.executeQuery:(Ljava/lang/String;)Ljava/sql/ResultSet;
      13: astore_1
      14: aload_1
      15: invokeinterface #90,  1           // InterfaceMethod java/sql/ResultSet.next:()Z
      20: pop
      21: aload_1
      22: iconst_1
      23: invokeinterface #91,  2           // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
      28: areturn

  public static int getOid(java.sql.Connection, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: ldc           #97                 // String \"
       3: invokevirtual #98                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          30
       9: aload_1
      10: ldc           #97                 // String \"
      12: invokevirtual #99                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      15: ifeq          30
      18: aload_1
      19: iconst_1
      20: aload_1
      21: invokevirtual #100                // Method java/lang/String.length:()I
      24: iconst_1
      25: isub
      26: invokevirtual #101                // Method java/lang/String.substring:(II)Ljava/lang/String;
      29: astore_1
      30: aload_0
      31: ldc           #102                // String select oid from pg_class where relName = ?
      33: invokeinterface #87,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      38: astore_2
      39: aload_2
      40: iconst_1
      41: aload_1
      42: invokeinterface #103,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      47: aload_2
      48: invokeinterface #89,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
      53: astore_3
      54: aload_3
      55: invokeinterface #90,  1           // InterfaceMethod java/sql/ResultSet.next:()Z
      60: ifne          65
      63: iconst_0
      64: ireturn
      65: aload_3
      66: iconst_1
      67: invokeinterface #104,  2          // InterfaceMethod java/sql/ResultSet.getInt:(I)I
      72: ireturn

  public static java.lang.String getEncodingName(int);
    Code:
       0: iload_0
       1: lookupswitch  { // 3
                     0: 36
                     6: 39
                     8: 42
               default: 45
          }
      36: ldc           #105                // String SQL_ASCII
      38: areturn
      39: ldc           #106                // String UTF8
      41: areturn
      42: ldc           #107                // String LATIN1
      44: areturn
      45: iload_0
      46: bipush        40
      48: if_icmpge     56
      51: ldc           #106                // String UTF8
      53: goto          58
      56: ldc           #92                 // String
      58: areturn

  public static java.lang.String getVersion();
    Code:
       0: new           #34                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #108                // String PostgreSQL 8.2.23 server protocol using H2
       9: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: invokestatic  #109                // Method org/h2/engine/Constants.getFullVersion:()Ljava/lang/String;
      15: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      21: areturn

  public static java.sql.Timestamp getStartTime();
    Code:
       0: new           #110                // class java/sql/Timestamp
       3: dup
       4: invokestatic  #111                // Method java/lang/System.currentTimeMillis:()J
       7: invokespecial #112                // Method java/sql/Timestamp."<init>":(J)V
      10: areturn

  public static java.lang.String getUserById(java.sql.Connection, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #113                // String SELECT NAME FROM INFORMATION_SCHEMA.USERS WHERE ID=?
       3: invokeinterface #87,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
       8: astore_2
       9: aload_2
      10: iconst_1
      11: iload_1
      12: invokeinterface #88,  3           // InterfaceMethod java/sql/PreparedStatement.setInt:(II)V
      17: aload_2
      18: invokeinterface #89,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
      23: astore_3
      24: aload_3
      25: invokeinterface #90,  1           // InterfaceMethod java/sql/ResultSet.next:()Z
      30: ifeq          41
      33: aload_3
      34: iconst_1
      35: invokeinterface #91,  2           // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
      40: areturn
      41: aconst_null
      42: areturn

  public static boolean hasDatabasePrivilege(int, java.lang.String);
    Code:
       0: iconst_1
       1: ireturn

  public static boolean hasTablePrivilege(java.lang.String, java.lang.String);
    Code:
       0: iconst_1
       1: ireturn

  public static int getCurrentTid(java.lang.String, java.lang.String);
    Code:
       0: iconst_1
       1: ireturn

  public static java.lang.String getPgExpr(java.lang.String, int);
    Code:
       0: aconst_null
       1: areturn

  public static java.lang.String formatType(java.sql.Connection, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #114                // String select typname from pg_catalog.pg_type where oid = ? and typtypmod = ?
       3: invokeinterface #87,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
       8: astore_3
       9: aload_3
      10: iconst_1
      11: iload_1
      12: invokeinterface #88,  3           // InterfaceMethod java/sql/PreparedStatement.setInt:(II)V
      17: aload_3
      18: iconst_2
      19: iload_2
      20: invokeinterface #88,  3           // InterfaceMethod java/sql/PreparedStatement.setInt:(II)V
      25: aload_3
      26: invokeinterface #89,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
      31: astore        4
      33: aload         4
      35: invokeinterface #90,  1           // InterfaceMethod java/sql/ResultSet.next:()Z
      40: ifeq          52
      43: aload         4
      45: iconst_1
      46: invokeinterface #91,  2           // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
      51: areturn
      52: aconst_null
      53: areturn

  public static int convertType(int);
    Code:
       0: iload_0
       1: lookupswitch  { // 16
                    -5: 160
                    -3: 187
                     1: 150
                     3: 163
                     4: 157
                     5: 154
                     7: 167
                     8: 171
                    12: 143
                    16: 140
                    91: 179
                    92: 175
                    93: 183
                  2003: 193
                  2004: 190
                  2005: 147
               default: 197
          }
     140: bipush        16
     142: ireturn
     143: sipush        1043
     146: ireturn
     147: bipush        25
     149: ireturn
     150: sipush        1042
     153: ireturn
     154: bipush        21
     156: ireturn
     157: bipush        23
     159: ireturn
     160: bipush        20
     162: ireturn
     163: sipush        1700
     166: ireturn
     167: sipush        700
     170: ireturn
     171: sipush        701
     174: ireturn
     175: sipush        1083
     178: ireturn
     179: sipush        1082
     182: ireturn
     183: sipush        1114
     186: ireturn
     187: bipush        17
     189: ireturn
     190: bipush        26
     192: ireturn
     193: sipush        1009
     196: ireturn
     197: sipush        705
     200: ireturn

  java.util.HashSet<java.lang.Integer> getTypeSet();
    Code:
       0: aload_0
       1: getfield      #4                  // Field typeSet:Ljava/util/HashSet;
       4: areturn

  void checkType(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field typeSet:Ljava/util/HashSet;
       4: iload_1
       5: invokestatic  #115                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokevirtual #116                // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
      11: ifne          37
      14: aload_0
      15: new           #34                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #117                // String Unsupported type:
      24: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: iload_1
      28: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokevirtual #55                 // Method trace:(Ljava/lang/String;)V
      37: return

  public java.lang.String checkKeyAndGetDatabaseName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #27                 // Field key:Ljava/lang/String;
       4: ifnonnull     9
       7: aload_1
       8: areturn
       9: aload_0
      10: getfield      #27                 // Field key:Ljava/lang/String;
      13: aload_1
      14: invokevirtual #118                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      17: ifeq          25
      20: aload_0
      21: getfield      #28                 // Field keyDatabase:Ljava/lang/String;
      24: areturn
      25: sipush        28000
      28: invokestatic  #119                // Method org/h2/message/DbException.get:(I)Lorg/h2/message/DbException;
      31: athrow

  public boolean isDaemon();
    Code:
       0: aload_0
       1: getfield      #23                 // Field isDaemon:Z
       4: ireturn
}
