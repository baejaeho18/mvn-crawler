Compiled from "ConditionExists.java"
public class org.h2.expression.ConditionExists extends org.h2.expression.Condition {
  private final org.h2.command.dml.Query query;

  public org.h2.expression.ConditionExists(org.h2.command.dml.Query);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/expression/Condition."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field query:Lorg/h2/command/dml/Query;
       9: return

  public org.h2.value.Value getValue(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #2                  // Field query:Lorg/h2/command/dml/Query;
       4: aload_1
       5: invokevirtual #3                  // Method org/h2/command/dml/Query.setSession:(Lorg/h2/engine/Session;)V
       8: aload_0
       9: getfield      #2                  // Field query:Lorg/h2/command/dml/Query;
      12: iconst_1
      13: invokevirtual #4                  // Method org/h2/command/dml/Query.query:(I)Lorg/h2/result/ResultInterface;
      16: astore_2
      17: aload_1
      18: aload_2
      19: invokevirtual #5                  // Method org/h2/engine/Session.addTemporaryResult:(Lorg/h2/result/ResultInterface;)V
      22: aload_2
      23: invokeinterface #6,  1            // InterfaceMethod org/h2/result/ResultInterface.hasNext:()Z
      28: istore_3
      29: iload_3
      30: invokestatic  #7                  // Method org/h2/value/ValueBoolean.get:(Z)Lorg/h2/value/ValueBoolean;
      33: areturn

  public org.h2.expression.Expression optimize(org.h2.engine.Session);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field query:Lorg/h2/command/dml/Query;
       5: invokevirtual #8                  // Method org/h2/engine/Session.optimizeQueryExpression:(Lorg/h2/command/dml/Query;)V
       8: aload_0
       9: areturn

  public java.lang.String getSQL();
    Code:
       0: new           #9                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #11                 // String EXISTS(\n
       9: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field query:Lorg/h2/command/dml/Query;
      16: invokevirtual #13                 // Method org/h2/command/dml/Query.getPlanSQL:()Ljava/lang/String;
      19: iconst_4
      20: iconst_0
      21: invokestatic  #14                 // Method org/h2/util/StringUtils.indent:(Ljava/lang/String;IZ)Ljava/lang/String;
      24: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #15                 // String )
      29: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: areturn

  public void updateAggregate(org.h2.engine.Session);
    Code:
       0: return

  public void mapColumns(org.h2.table.ColumnResolver, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field query:Lorg/h2/command/dml/Query;
       4: aload_1
       5: iload_2
       6: iconst_1
       7: iadd
       8: invokevirtual #17                 // Method org/h2/command/dml/Query.mapColumns:(Lorg/h2/table/ColumnResolver;I)V
      11: return

  public void setEvaluatable(org.h2.table.TableFilter, boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field query:Lorg/h2/command/dml/Query;
       4: aload_1
       5: iload_2
       6: invokevirtual #18                 // Method org/h2/command/dml/Query.setEvaluatable:(Lorg/h2/table/TableFilter;Z)V
       9: return

  public boolean isEverything(org.h2.expression.ExpressionVisitor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field query:Lorg/h2/command/dml/Query;
       4: aload_1
       5: invokevirtual #19                 // Method org/h2/command/dml/Query.isEverything:(Lorg/h2/expression/ExpressionVisitor;)Z
       8: ireturn

  public int getCost();
    Code:
       0: aload_0
       1: getfield      #2                  // Field query:Lorg/h2/command/dml/Query;
       4: invokevirtual #20                 // Method org/h2/command/dml/Query.getCostAsExpression:()I
       7: ireturn

  public int getDisplaySize();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method org/h2/expression/Condition.getDisplaySize:()I
       4: ireturn

  public long getPrecision();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method org/h2/expression/Condition.getPrecision:()J
       4: lreturn

  public int getScale();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method org/h2/expression/Condition.getScale:()I
       4: ireturn

  public int getType();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method org/h2/expression/Condition.getType:()I
       4: ireturn
}
