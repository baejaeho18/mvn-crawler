Compiled from "ConditionInConstantSet.java"
public class org.h2.expression.ConditionInConstantSet extends org.h2.expression.Condition {
  private org.h2.expression.Expression left;

  private int queryLevel;

  private final java.util.ArrayList<org.h2.expression.Expression> valueList;

  private final java.util.TreeSet<org.h2.value.Value> valueSet;

  public org.h2.expression.ConditionInConstantSet(org.h2.engine.Session, org.h2.expression.Expression, java.util.ArrayList<org.h2.expression.Expression>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/expression/Condition."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field left:Lorg/h2/expression/Expression;
       9: aload_0
      10: aload_3
      11: putfield      #3                  // Field valueList:Ljava/util/ArrayList;
      14: aload_0
      15: new           #4                  // class java/util/TreeSet
      18: dup
      19: new           #5                  // class org/h2/expression/ConditionInConstantSet$1
      22: dup
      23: aload_0
      24: aload_1
      25: invokespecial #6                  // Method org/h2/expression/ConditionInConstantSet$1."<init>":(Lorg/h2/expression/ConditionInConstantSet;Lorg/h2/engine/Session;)V
      28: invokespecial #7                  // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
      31: putfield      #8                  // Field valueSet:Ljava/util/TreeSet;
      34: aload_2
      35: invokevirtual #9                  // Method org/h2/expression/Expression.getType:()I
      38: istore        4
      40: aload_3
      41: invokevirtual #10                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      44: astore        5
      46: aload         5
      48: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      53: ifeq          90
      56: aload         5
      58: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      63: checkcast     #13                 // class org/h2/expression/Expression
      66: astore        6
      68: aload_0
      69: getfield      #8                  // Field valueSet:Ljava/util/TreeSet;
      72: aload         6
      74: aload_1
      75: invokevirtual #14                 // Method org/h2/expression/Expression.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
      78: iload         4
      80: invokevirtual #15                 // Method org/h2/value/Value.convertTo:(I)Lorg/h2/value/Value;
      83: invokevirtual #16                 // Method java/util/TreeSet.add:(Ljava/lang/Object;)Z
      86: pop
      87: goto          46
      90: return

  public org.h2.value.Value getValue(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #2                  // Field left:Lorg/h2/expression/Expression;
       4: aload_1
       5: invokevirtual #14                 // Method org/h2/expression/Expression.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
       8: astore_2
       9: aload_2
      10: getstatic     #17                 // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
      13: if_acmpne     18
      16: aload_2
      17: areturn
      18: aload_0
      19: getfield      #8                  // Field valueSet:Ljava/util/TreeSet;
      22: aload_2
      23: invokevirtual #18                 // Method java/util/TreeSet.contains:(Ljava/lang/Object;)Z
      26: istore_3
      27: iload_3
      28: ifne          52
      31: aload_0
      32: getfield      #8                  // Field valueSet:Ljava/util/TreeSet;
      35: getstatic     #17                 // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
      38: invokevirtual #18                 // Method java/util/TreeSet.contains:(Ljava/lang/Object;)Z
      41: istore        4
      43: iload         4
      45: ifeq          52
      48: getstatic     #17                 // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
      51: areturn
      52: iload_3
      53: invokestatic  #19                 // Method org/h2/value/ValueBoolean.get:(Z)Lorg/h2/value/ValueBoolean;
      56: areturn

  public void mapColumns(org.h2.table.ColumnResolver, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field left:Lorg/h2/expression/Expression;
       4: aload_1
       5: iload_2
       6: invokevirtual #20                 // Method org/h2/expression/Expression.mapColumns:(Lorg/h2/table/ColumnResolver;I)V
       9: aload_0
      10: iload_2
      11: aload_0
      12: getfield      #21                 // Field queryLevel:I
      15: invokestatic  #22                 // Method java/lang/Math.max:(II)I
      18: putfield      #21                 // Field queryLevel:I
      21: return

  public org.h2.expression.Expression optimize(org.h2.engine.Session);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field left:Lorg/h2/expression/Expression;
       5: aload_1
       6: invokevirtual #23                 // Method org/h2/expression/Expression.optimize:(Lorg/h2/engine/Session;)Lorg/h2/expression/Expression;
       9: putfield      #2                  // Field left:Lorg/h2/expression/Expression;
      12: aload_0
      13: areturn

  public void createIndexConditions(org.h2.engine.Session, org.h2.table.TableFilter);
    Code:
       0: aload_0
       1: getfield      #2                  // Field left:Lorg/h2/expression/Expression;
       4: instanceof    #24                 // class org/h2/expression/ExpressionColumn
       7: ifne          11
      10: return
      11: aload_0
      12: getfield      #2                  // Field left:Lorg/h2/expression/Expression;
      15: checkcast     #24                 // class org/h2/expression/ExpressionColumn
      18: astore_3
      19: aload_2
      20: aload_3
      21: invokevirtual #25                 // Method org/h2/expression/ExpressionColumn.getTableFilter:()Lorg/h2/table/TableFilter;
      24: if_acmpeq     28
      27: return
      28: aload_1
      29: invokevirtual #26                 // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      32: invokevirtual #27                 // Method org/h2/engine/Database.getSettings:()Lorg/h2/engine/DbSettings;
      35: getfield      #28                 // Field org/h2/engine/DbSettings.optimizeInList:Z
      38: ifeq          53
      41: aload_2
      42: aload_3
      43: aload_0
      44: getfield      #3                  // Field valueList:Ljava/util/ArrayList;
      47: invokestatic  #29                 // Method org/h2/index/IndexCondition.getInList:(Lorg/h2/expression/ExpressionColumn;Ljava/util/List;)Lorg/h2/index/IndexCondition;
      50: invokevirtual #30                 // Method org/h2/table/TableFilter.addIndexCondition:(Lorg/h2/index/IndexCondition;)V
      53: return

  public void setEvaluatable(org.h2.table.TableFilter, boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field left:Lorg/h2/expression/Expression;
       4: aload_1
       5: iload_2
       6: invokevirtual #31                 // Method org/h2/expression/Expression.setEvaluatable:(Lorg/h2/table/TableFilter;Z)V
       9: return

  public java.lang.String getSQL();
    Code:
       0: new           #32                 // class org/h2/util/StatementBuilder
       3: dup
       4: ldc           #33                 // String (
       6: invokespecial #34                 // Method org/h2/util/StatementBuilder."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: aload_1
      11: aload_0
      12: getfield      #2                  // Field left:Lorg/h2/expression/Expression;
      15: invokevirtual #35                 // Method org/h2/expression/Expression.getSQL:()Ljava/lang/String;
      18: invokevirtual #36                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      21: ldc           #37                 // String  IN(
      23: invokevirtual #36                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      26: pop
      27: aload_0
      28: getfield      #3                  // Field valueList:Ljava/util/ArrayList;
      31: invokevirtual #10                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      34: astore_2
      35: aload_2
      36: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          72
      44: aload_2
      45: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #13                 // class org/h2/expression/Expression
      53: astore_3
      54: aload_1
      55: ldc           #38                 // String ,
      57: invokevirtual #39                 // Method org/h2/util/StatementBuilder.appendExceptFirst:(Ljava/lang/String;)V
      60: aload_1
      61: aload_3
      62: invokevirtual #35                 // Method org/h2/expression/Expression.getSQL:()Ljava/lang/String;
      65: invokevirtual #36                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      68: pop
      69: goto          35
      72: aload_1
      73: ldc           #40                 // String ))
      75: invokevirtual #36                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      78: invokevirtual #41                 // Method org/h2/util/StatementBuilder.toString:()Ljava/lang/String;
      81: areturn

  public void updateAggregate(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #2                  // Field left:Lorg/h2/expression/Expression;
       4: aload_1
       5: invokevirtual #42                 // Method org/h2/expression/Expression.updateAggregate:(Lorg/h2/engine/Session;)V
       8: return

  public boolean isEverything(org.h2.expression.ExpressionVisitor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field left:Lorg/h2/expression/Expression;
       4: aload_1
       5: invokevirtual #43                 // Method org/h2/expression/Expression.isEverything:(Lorg/h2/expression/ExpressionVisitor;)Z
       8: ifne          13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: invokevirtual #44                 // Method org/h2/expression/ExpressionVisitor.getType:()I
      17: tableswitch   { // 0 to 9
                     0: 72
                     1: 72
                     2: 72
                     3: 72
                     4: 72
                     5: 72
                     6: 72
                     7: 72
                     8: 72
                     9: 72
               default: 74
          }
      72: iconst_1
      73: ireturn
      74: new           #45                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      81: ldc           #47                 // String type=
      83: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_1
      87: invokevirtual #44                 // Method org/h2/expression/ExpressionVisitor.getType:()I
      90: invokevirtual #49                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      93: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokestatic  #51                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      99: athrow

  public int getCost();
    Code:
       0: aload_0
       1: getfield      #2                  // Field left:Lorg/h2/expression/Expression;
       4: invokevirtual #52                 // Method org/h2/expression/Expression.getCost:()I
       7: ireturn

  org.h2.expression.Expression getAdditional(org.h2.engine.Session, org.h2.expression.Comparison);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #2                  // Field left:Lorg/h2/expression/Expression;
       5: invokevirtual #53                 // Method org/h2/expression/Comparison.getIfEquals:(Lorg/h2/expression/Expression;)Lorg/h2/expression/Expression;
       8: astore_3
       9: aload_3
      10: ifnull        54
      13: aload_3
      14: invokevirtual #54                 // Method org/h2/expression/Expression.isConstant:()Z
      17: ifeq          54
      20: aload_0
      21: getfield      #3                  // Field valueList:Ljava/util/ArrayList;
      24: aload_3
      25: invokevirtual #55                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      28: pop
      29: aload_0
      30: getfield      #8                  // Field valueSet:Ljava/util/TreeSet;
      33: aload_3
      34: aload_1
      35: invokevirtual #14                 // Method org/h2/expression/Expression.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
      38: aload_0
      39: getfield      #2                  // Field left:Lorg/h2/expression/Expression;
      42: invokevirtual #9                  // Method org/h2/expression/Expression.getType:()I
      45: invokevirtual #15                 // Method org/h2/value/Value.convertTo:(I)Lorg/h2/value/Value;
      48: invokevirtual #16                 // Method java/util/TreeSet.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_0
      53: areturn
      54: aconst_null
      55: areturn

  public int getDisplaySize();
    Code:
       0: aload_0
       1: invokespecial #56                 // Method org/h2/expression/Condition.getDisplaySize:()I
       4: ireturn

  public long getPrecision();
    Code:
       0: aload_0
       1: invokespecial #57                 // Method org/h2/expression/Condition.getPrecision:()J
       4: lreturn

  public int getScale();
    Code:
       0: aload_0
       1: invokespecial #58                 // Method org/h2/expression/Condition.getScale:()I
       4: ireturn

  public int getType();
    Code:
       0: aload_0
       1: invokespecial #59                 // Method org/h2/expression/Condition.getType:()I
       4: ireturn
}
