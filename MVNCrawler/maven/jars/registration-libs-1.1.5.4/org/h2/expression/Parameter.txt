Compiled from "Parameter.java"
public class org.h2.expression.Parameter extends org.h2.expression.Expression implements org.h2.expression.ParameterInterface {
  private org.h2.value.Value value;

  private org.h2.table.Column column;

  private final int index;

  public org.h2.expression.Parameter(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/expression/Expression."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field index:I
       9: return

  public java.lang.String getSQL();
    Code:
       0: new           #3                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #5                  // String ?
       9: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field index:I
      16: iconst_1
      17: iadd
      18: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      21: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: areturn

  public void setValue(org.h2.value.Value, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field value:Lorg/h2/value/Value;
       5: return

  public void setValue(org.h2.value.Value);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field value:Lorg/h2/value/Value;
       5: return

  public org.h2.value.Value getParamValue();
    Code:
       0: aload_0
       1: getfield      #9                  // Field value:Lorg/h2/value/Value;
       4: ifnonnull     11
       7: getstatic     #10                 // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
      10: areturn
      11: aload_0
      12: getfield      #9                  // Field value:Lorg/h2/value/Value;
      15: areturn

  public org.h2.value.Value getValue(org.h2.engine.Session);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getParamValue:()Lorg/h2/value/Value;
       4: areturn

  public int getType();
    Code:
       0: aload_0
       1: getfield      #9                  // Field value:Lorg/h2/value/Value;
       4: ifnull        15
       7: aload_0
       8: getfield      #9                  // Field value:Lorg/h2/value/Value;
      11: invokevirtual #12                 // Method org/h2/value/Value.getType:()I
      14: ireturn
      15: aload_0
      16: getfield      #13                 // Field column:Lorg/h2/table/Column;
      19: ifnull        30
      22: aload_0
      23: getfield      #13                 // Field column:Lorg/h2/table/Column;
      26: invokevirtual #14                 // Method org/h2/table/Column.getType:()I
      29: ireturn
      30: iconst_m1
      31: ireturn

  public void mapColumns(org.h2.table.ColumnResolver, int);
    Code:
       0: return

  public void checkSet();
    Code:
       0: aload_0
       1: getfield      #9                  // Field value:Lorg/h2/value/Value;
       4: ifnonnull     37
       7: ldc           #15                 // int 90012
       9: new           #3                  // class java/lang/StringBuilder
      12: dup
      13: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #16                 // String #
      18: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: getfield      #2                  // Field index:I
      25: iconst_1
      26: iadd
      27: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokestatic  #17                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      36: athrow
      37: return

  public org.h2.expression.Expression optimize(org.h2.engine.Session);
    Code:
       0: aload_1
       1: invokevirtual #18                 // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
       4: invokevirtual #19                 // Method org/h2/engine/Database.getMode:()Lorg/h2/engine/Mode;
       7: getfield      #20                 // Field org/h2/engine/Mode.treatEmptyStringsAsNull:Z
      10: ifeq          38
      13: aload_0
      14: getfield      #9                  // Field value:Lorg/h2/value/Value;
      17: instanceof    #21                 // class org/h2/value/ValueString
      20: ifeq          38
      23: aload_0
      24: aload_0
      25: getfield      #9                  // Field value:Lorg/h2/value/Value;
      28: invokevirtual #22                 // Method org/h2/value/Value.getString:()Ljava/lang/String;
      31: iconst_1
      32: invokestatic  #23                 // Method org/h2/value/ValueString.get:(Ljava/lang/String;Z)Lorg/h2/value/Value;
      35: putfield      #9                  // Field value:Lorg/h2/value/Value;
      38: aload_0
      39: areturn

  public boolean isConstant();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isValueSet();
    Code:
       0: aload_0
       1: getfield      #9                  // Field value:Lorg/h2/value/Value;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setEvaluatable(org.h2.table.TableFilter, boolean);
    Code:
       0: return

  public int getScale();
    Code:
       0: aload_0
       1: getfield      #9                  // Field value:Lorg/h2/value/Value;
       4: ifnull        15
       7: aload_0
       8: getfield      #9                  // Field value:Lorg/h2/value/Value;
      11: invokevirtual #24                 // Method org/h2/value/Value.getScale:()I
      14: ireturn
      15: aload_0
      16: getfield      #13                 // Field column:Lorg/h2/table/Column;
      19: ifnull        30
      22: aload_0
      23: getfield      #13                 // Field column:Lorg/h2/table/Column;
      26: invokevirtual #25                 // Method org/h2/table/Column.getScale:()I
      29: ireturn
      30: iconst_0
      31: ireturn

  public long getPrecision();
    Code:
       0: aload_0
       1: getfield      #9                  // Field value:Lorg/h2/value/Value;
       4: ifnull        15
       7: aload_0
       8: getfield      #9                  // Field value:Lorg/h2/value/Value;
      11: invokevirtual #26                 // Method org/h2/value/Value.getPrecision:()J
      14: lreturn
      15: aload_0
      16: getfield      #13                 // Field column:Lorg/h2/table/Column;
      19: ifnull        30
      22: aload_0
      23: getfield      #13                 // Field column:Lorg/h2/table/Column;
      26: invokevirtual #27                 // Method org/h2/table/Column.getPrecision:()J
      29: lreturn
      30: lconst_0
      31: lreturn

  public int getDisplaySize();
    Code:
       0: aload_0
       1: getfield      #9                  // Field value:Lorg/h2/value/Value;
       4: ifnull        15
       7: aload_0
       8: getfield      #9                  // Field value:Lorg/h2/value/Value;
      11: invokevirtual #28                 // Method org/h2/value/Value.getDisplaySize:()I
      14: ireturn
      15: aload_0
      16: getfield      #13                 // Field column:Lorg/h2/table/Column;
      19: ifnull        30
      22: aload_0
      23: getfield      #13                 // Field column:Lorg/h2/table/Column;
      26: invokevirtual #29                 // Method org/h2/table/Column.getDisplaySize:()I
      29: ireturn
      30: iconst_0
      31: ireturn

  public void updateAggregate(org.h2.engine.Session);
    Code:
       0: return

  public boolean isEverything(org.h2.expression.ExpressionVisitor);
    Code:
       0: aload_1
       1: invokevirtual #30                 // Method org/h2/expression/ExpressionVisitor.getType:()I
       4: tableswitch   { // 0 to 9
                     0: 62
                     1: 60
                     2: 60
                     3: 60
                     4: 60
                     5: 60
                     6: 60
                     7: 60
                     8: 60
                     9: 60
               default: 75
          }
      60: iconst_1
      61: ireturn
      62: aload_0
      63: getfield      #9                  // Field value:Lorg/h2/value/Value;
      66: ifnull        73
      69: iconst_1
      70: goto          74
      73: iconst_0
      74: ireturn
      75: new           #3                  // class java/lang/StringBuilder
      78: dup
      79: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      82: ldc           #31                 // String type=
      84: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_1
      88: invokevirtual #30                 // Method org/h2/expression/ExpressionVisitor.getType:()I
      91: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      94: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: invokestatic  #32                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
     100: athrow

  public int getCost();
    Code:
       0: iconst_0
       1: ireturn

  public org.h2.expression.Expression getNotIfPossible(org.h2.engine.Session);
    Code:
       0: new           #33                 // class org/h2/expression/Comparison
       3: dup
       4: aload_1
       5: iconst_0
       6: aload_0
       7: getstatic     #34                 // Field org/h2/value/ValueBoolean.FALSE:Lorg/h2/value/ValueBoolean;
      10: invokestatic  #35                 // Method org/h2/expression/ValueExpression.get:(Lorg/h2/value/Value;)Lorg/h2/expression/ValueExpression;
      13: invokespecial #36                 // Method org/h2/expression/Comparison."<init>":(Lorg/h2/engine/Session;ILorg/h2/expression/Expression;Lorg/h2/expression/Expression;)V
      16: areturn

  public void setColumn(org.h2.table.Column);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field column:Lorg/h2/table/Column;
       5: return

  public int getIndex();
    Code:
       0: aload_0
       1: getfield      #2                  // Field index:I
       4: ireturn
}
