Compiled from "SequenceValue.java"
public class org.h2.expression.SequenceValue extends org.h2.expression.Expression {
  private final org.h2.schema.Sequence sequence;

  public org.h2.expression.SequenceValue(org.h2.schema.Sequence);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/expression/Expression."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field sequence:Lorg/h2/schema/Sequence;
       9: return

  public org.h2.value.Value getValue(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #2                  // Field sequence:Lorg/h2/schema/Sequence;
       4: aload_1
       5: invokevirtual #3                  // Method org/h2/schema/Sequence.getNext:(Lorg/h2/engine/Session;)J
       8: lstore_2
       9: aload_1
      10: lload_2
      11: invokestatic  #4                  // Method org/h2/value/ValueLong.get:(J)Lorg/h2/value/ValueLong;
      14: invokevirtual #5                  // Method org/h2/engine/Session.setLastIdentity:(Lorg/h2/value/Value;)V
      17: lload_2
      18: invokestatic  #4                  // Method org/h2/value/ValueLong.get:(J)Lorg/h2/value/ValueLong;
      21: areturn

  public int getType();
    Code:
       0: iconst_5
       1: ireturn

  public void mapColumns(org.h2.table.ColumnResolver, int);
    Code:
       0: return

  public org.h2.expression.Expression optimize(org.h2.engine.Session);
    Code:
       0: aload_0
       1: areturn

  public void setEvaluatable(org.h2.table.TableFilter, boolean);
    Code:
       0: return

  public int getScale();
    Code:
       0: iconst_0
       1: ireturn

  public long getPrecision();
    Code:
       0: ldc2_w        #6                  // long 10l
       3: lreturn

  public int getDisplaySize();
    Code:
       0: bipush        11
       2: ireturn

  public java.lang.String getSQL();
    Code:
       0: new           #8                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #10                 // String (NEXT VALUE FOR
       9: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field sequence:Lorg/h2/schema/Sequence;
      16: invokevirtual #12                 // Method org/h2/schema/Sequence.getSQL:()Ljava/lang/String;
      19: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #13                 // String )
      24: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: areturn

  public void updateAggregate(org.h2.engine.Session);
    Code:
       0: return

  public boolean isEverything(org.h2.expression.ExpressionVisitor);
    Code:
       0: aload_1
       1: invokevirtual #15                 // Method org/h2/expression/ExpressionVisitor.getType:()I
       4: tableswitch   { // 0 to 9
                     0: 62
                     1: 60
                     2: 62
                     3: 60
                     4: 64
                     5: 62
                     6: 60
                     7: 77
                     8: 62
                     9: 60
               default: 87
          }
      60: iconst_1
      61: ireturn
      62: iconst_0
      63: ireturn
      64: aload_1
      65: aload_0
      66: getfield      #2                  // Field sequence:Lorg/h2/schema/Sequence;
      69: invokevirtual #16                 // Method org/h2/schema/Sequence.getModificationId:()J
      72: invokevirtual #17                 // Method org/h2/expression/ExpressionVisitor.addDataModificationId:(J)V
      75: iconst_1
      76: ireturn
      77: aload_1
      78: aload_0
      79: getfield      #2                  // Field sequence:Lorg/h2/schema/Sequence;
      82: invokevirtual #18                 // Method org/h2/expression/ExpressionVisitor.addDependency:(Lorg/h2/engine/DbObject;)V
      85: iconst_1
      86: ireturn
      87: new           #8                  // class java/lang/StringBuilder
      90: dup
      91: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      94: ldc           #19                 // String type=
      96: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload_1
     100: invokevirtual #15                 // Method org/h2/expression/ExpressionVisitor.getType:()I
     103: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     106: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     109: invokestatic  #21                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
     112: athrow

  public int getCost();
    Code:
       0: iconst_1
       1: ireturn
}
