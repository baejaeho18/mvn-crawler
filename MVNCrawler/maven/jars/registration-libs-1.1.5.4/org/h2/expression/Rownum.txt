Compiled from "Rownum.java"
public class org.h2.expression.Rownum extends org.h2.expression.Expression {
  private final org.h2.command.Prepared prepared;

  public org.h2.expression.Rownum(org.h2.command.Prepared);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/expression/Expression."<init>":()V
       4: aload_1
       5: ifnonnull     12
       8: invokestatic  #2                  // Method org/h2/message/DbException.throwInternalError:()Ljava/lang/RuntimeException;
      11: athrow
      12: aload_0
      13: aload_1
      14: putfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
      17: return

  public org.h2.value.Value getValue(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #3                  // Field prepared:Lorg/h2/command/Prepared;
       4: invokevirtual #4                  // Method org/h2/command/Prepared.getCurrentRowNumber:()I
       7: invokestatic  #5                  // Method org/h2/value/ValueInt.get:(I)Lorg/h2/value/ValueInt;
      10: areturn

  public int getType();
    Code:
       0: iconst_4
       1: ireturn

  public void mapColumns(org.h2.table.ColumnResolver, int);
    Code:
       0: return

  public org.h2.expression.Expression optimize(org.h2.engine.Session);
    Code:
       0: aload_0
       1: areturn

  public void setEvaluatable(org.h2.table.TableFilter, boolean);
    Code:
       0: return

  public int getScale();
    Code:
       0: iconst_0
       1: ireturn

  public long getPrecision();
    Code:
       0: ldc2_w        #6                  // long 10l
       3: lreturn

  public int getDisplaySize();
    Code:
       0: bipush        11
       2: ireturn

  public java.lang.String getSQL();
    Code:
       0: ldc           #8                  // String ROWNUM()
       2: areturn

  public void updateAggregate(org.h2.engine.Session);
    Code:
       0: return

  public boolean isEverything(org.h2.expression.ExpressionVisitor);
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method org/h2/expression/ExpressionVisitor.getType:()I
       4: tableswitch   { // 0 to 9
                     0: 60
                     1: 60
                     2: 60
                     3: 62
                     4: 62
                     5: 62
                     6: 62
                     7: 62
                     8: 60
                     9: 62
               default: 64
          }
      60: iconst_0
      61: ireturn
      62: iconst_1
      63: ireturn
      64: new           #10                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #12                 // String type=
      73: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_1
      77: invokevirtual #9                  // Method org/h2/expression/ExpressionVisitor.getType:()I
      80: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      83: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokestatic  #16                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      89: athrow

  public int getCost();
    Code:
       0: iconst_0
       1: ireturn
}
