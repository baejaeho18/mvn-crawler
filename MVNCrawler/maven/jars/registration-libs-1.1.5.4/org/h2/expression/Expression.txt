Compiled from "Expression.java"
public abstract class org.h2.expression.Expression {
  private boolean addedToFilter;

  public org.h2.expression.Expression();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract org.h2.value.Value getValue(org.h2.engine.Session);

  public abstract int getType();

  public abstract void mapColumns(org.h2.table.ColumnResolver, int);

  public abstract org.h2.expression.Expression optimize(org.h2.engine.Session);

  public abstract void setEvaluatable(org.h2.table.TableFilter, boolean);

  public abstract int getScale();

  public abstract long getPrecision();

  public abstract int getDisplaySize();

  public abstract java.lang.String getSQL();

  public abstract void updateAggregate(org.h2.engine.Session);

  public abstract boolean isEverything(org.h2.expression.ExpressionVisitor);

  public abstract int getCost();

  public org.h2.expression.Expression getNotIfPossible(org.h2.engine.Session);
    Code:
       0: aconst_null
       1: areturn

  public boolean isConstant();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isValueSet();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isAutoIncrement();
    Code:
       0: iconst_0
       1: ireturn

  public boolean getBooleanValue(org.h2.engine.Session);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
       5: invokevirtual #3                  // Method org/h2/value/Value.getBoolean:()Z
       8: ireturn

  public void createIndexConditions(org.h2.engine.Session, org.h2.table.TableFilter);
    Code:
       0: return

  public java.lang.String getColumnName();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getAlias:()Ljava/lang/String;
       4: areturn

  public java.lang.String getSchemaName();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getTableName();
    Code:
       0: aconst_null
       1: areturn

  public int getNullable();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.String getTableAlias();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getAlias();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSQL:()Ljava/lang/String;
       4: invokestatic  #6                  // Method org/h2/util/StringUtils.unEnclose:(Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public boolean isWildcard();
    Code:
       0: iconst_0
       1: ireturn

  public org.h2.expression.Expression getNonAliasExpression();
    Code:
       0: aload_0
       1: areturn

  public void addFilterConditions(org.h2.table.TableFilter, boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field addedToFilter:Z
       4: ifne          32
       7: iload_2
       8: ifne          32
      11: aload_0
      12: getstatic     #8                  // Field org/h2/expression/ExpressionVisitor.EVALUATABLE_VISITOR:Lorg/h2/expression/ExpressionVisitor;
      15: invokevirtual #9                  // Method isEverything:(Lorg/h2/expression/ExpressionVisitor;)Z
      18: ifeq          32
      21: aload_1
      22: aload_0
      23: iconst_0
      24: invokevirtual #10                 // Method org/h2/table/TableFilter.addFilterCondition:(Lorg/h2/expression/Expression;Z)V
      27: aload_0
      28: iconst_1
      29: putfield      #7                  // Field addedToFilter:Z
      32: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSQL:()Ljava/lang/String;
       4: areturn

  public org.h2.expression.Expression[] getExpressionColumns(org.h2.engine.Session);
    Code:
       0: aconst_null
       1: areturn

  static org.h2.expression.Expression[] getExpressionColumns(org.h2.engine.Session, org.h2.value.ValueArray);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method org/h2/value/ValueArray.getList:()[Lorg/h2/value/Value;
       4: astore_2
       5: aload_2
       6: arraylength
       7: anewarray     #12                 // class org/h2/expression/ExpressionColumn
      10: astore_3
      11: iconst_0
      12: istore        4
      14: aload_2
      15: arraylength
      16: istore        5
      18: iload         4
      20: iload         5
      22: if_icmpge     105
      25: aload_2
      26: iload         4
      28: aaload
      29: astore        6
      31: new           #13                 // class org/h2/table/Column
      34: dup
      35: new           #14                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #16                 // String C
      44: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: iload         4
      49: iconst_1
      50: iadd
      51: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      54: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: aload         6
      59: invokevirtual #20                 // Method org/h2/value/Value.getType:()I
      62: aload         6
      64: invokevirtual #21                 // Method org/h2/value/Value.getPrecision:()J
      67: aload         6
      69: invokevirtual #22                 // Method org/h2/value/Value.getScale:()I
      72: aload         6
      74: invokevirtual #23                 // Method org/h2/value/Value.getDisplaySize:()I
      77: invokespecial #24                 // Method org/h2/table/Column."<init>":(Ljava/lang/String;IJII)V
      80: astore        7
      82: aload_3
      83: iload         4
      85: new           #12                 // class org/h2/expression/ExpressionColumn
      88: dup
      89: aload_0
      90: invokevirtual #25                 // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      93: aload         7
      95: invokespecial #26                 // Method org/h2/expression/ExpressionColumn."<init>":(Lorg/h2/engine/Database;Lorg/h2/table/Column;)V
      98: aastore
      99: iinc          4, 1
     102: goto          18
     105: aload_3
     106: areturn

  public static org.h2.expression.Expression[] getExpressionColumns(org.h2.engine.Session, java.sql.ResultSet);
    Code:
       0: aload_1
       1: invokeinterface #27,  1           // InterfaceMethod java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;
       6: astore_2
       7: aload_2
       8: invokeinterface #28,  1           // InterfaceMethod java/sql/ResultSetMetaData.getColumnCount:()I
      13: istore_3
      14: iload_3
      15: anewarray     #29                 // class org/h2/expression/Expression
      18: astore        4
      20: aload_0
      21: ifnonnull     28
      24: aconst_null
      25: goto          32
      28: aload_0
      29: invokevirtual #25                 // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      32: astore        5
      34: iconst_0
      35: istore        6
      37: iload         6
      39: iload_3
      40: if_icmpge     147
      43: aload_2
      44: iload         6
      46: iconst_1
      47: iadd
      48: invokeinterface #30,  2           // InterfaceMethod java/sql/ResultSetMetaData.getColumnLabel:(I)Ljava/lang/String;
      53: astore        7
      55: aload_2
      56: iload         6
      58: iconst_1
      59: iadd
      60: invokestatic  #31                 // Method org/h2/value/DataType.getValueTypeFromResultSet:(Ljava/sql/ResultSetMetaData;I)I
      63: istore        8
      65: aload_2
      66: iload         6
      68: iconst_1
      69: iadd
      70: invokeinterface #32,  2           // InterfaceMethod java/sql/ResultSetMetaData.getPrecision:(I)I
      75: istore        9
      77: aload_2
      78: iload         6
      80: iconst_1
      81: iadd
      82: invokeinterface #33,  2           // InterfaceMethod java/sql/ResultSetMetaData.getScale:(I)I
      87: istore        10
      89: aload_2
      90: iload         6
      92: iconst_1
      93: iadd
      94: invokeinterface #34,  2           // InterfaceMethod java/sql/ResultSetMetaData.getColumnDisplaySize:(I)I
      99: istore        11
     101: new           #13                 // class org/h2/table/Column
     104: dup
     105: aload         7
     107: iload         8
     109: iload         9
     111: i2l
     112: iload         10
     114: iload         11
     116: invokespecial #24                 // Method org/h2/table/Column."<init>":(Ljava/lang/String;IJII)V
     119: astore        12
     121: new           #12                 // class org/h2/expression/ExpressionColumn
     124: dup
     125: aload         5
     127: aload         12
     129: invokespecial #26                 // Method org/h2/expression/ExpressionColumn."<init>":(Lorg/h2/engine/Database;Lorg/h2/table/Column;)V
     132: astore        13
     134: aload         4
     136: iload         6
     138: aload         13
     140: aastore
     141: iinc          6, 1
     144: goto          37
     147: aload         4
     149: areturn
     150: astore_2
     151: aload_2
     152: invokestatic  #36                 // Method org/h2/message/DbException.convert:(Ljava/lang/Throwable;)Lorg/h2/message/DbException;
     155: athrow
    Exception table:
       from    to  target type
           0   149   150   Class java/sql/SQLException
}
