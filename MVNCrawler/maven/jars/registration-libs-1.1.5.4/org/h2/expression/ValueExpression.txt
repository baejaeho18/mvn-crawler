Compiled from "ValueExpression.java"
public class org.h2.expression.ValueExpression extends org.h2.expression.Expression {
  private static final java.lang.Object NULL;

  private static final java.lang.Object DEFAULT;

  private final org.h2.value.Value value;

  private org.h2.expression.ValueExpression(org.h2.value.Value);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/expression/Expression."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field value:Lorg/h2/value/Value;
       9: return

  public static org.h2.expression.ValueExpression getNull();
    Code:
       0: getstatic     #3                  // Field NULL:Ljava/lang/Object;
       3: checkcast     #4                  // class org/h2/expression/ValueExpression
       6: areturn

  public static org.h2.expression.ValueExpression getDefault();
    Code:
       0: getstatic     #5                  // Field DEFAULT:Ljava/lang/Object;
       3: checkcast     #4                  // class org/h2/expression/ValueExpression
       6: areturn

  public static org.h2.expression.ValueExpression get(org.h2.value.Value);
    Code:
       0: aload_0
       1: getstatic     #6                  // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
       4: if_acmpne     11
       7: invokestatic  #7                  // Method getNull:()Lorg/h2/expression/ValueExpression;
      10: areturn
      11: new           #4                  // class org/h2/expression/ValueExpression
      14: dup
      15: aload_0
      16: invokespecial #8                  // Method "<init>":(Lorg/h2/value/Value;)V
      19: areturn

  public org.h2.value.Value getValue(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Lorg/h2/value/Value;
       4: areturn

  public int getType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Lorg/h2/value/Value;
       4: invokevirtual #9                  // Method org/h2/value/Value.getType:()I
       7: ireturn

  public void createIndexConditions(org.h2.engine.Session, org.h2.table.TableFilter);
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Lorg/h2/value/Value;
       4: invokevirtual #9                  // Method org/h2/value/Value.getType:()I
       7: iconst_1
       8: if_icmpne     37
      11: aload_0
      12: getfield      #2                  // Field value:Lorg/h2/value/Value;
      15: checkcast     #10                 // class org/h2/value/ValueBoolean
      18: invokevirtual #11                 // Method org/h2/value/ValueBoolean.getBoolean:()Z
      21: istore_3
      22: iload_3
      23: ifne          37
      26: aload_2
      27: bipush        8
      29: aconst_null
      30: aload_0
      31: invokestatic  #12                 // Method org/h2/index/IndexCondition.get:(ILorg/h2/expression/ExpressionColumn;Lorg/h2/expression/Expression;)Lorg/h2/index/IndexCondition;
      34: invokevirtual #13                 // Method org/h2/table/TableFilter.addIndexCondition:(Lorg/h2/index/IndexCondition;)V
      37: return

  public org.h2.expression.Expression getNotIfPossible(org.h2.engine.Session);
    Code:
       0: new           #14                 // class org/h2/expression/Comparison
       3: dup
       4: aload_1
       5: iconst_0
       6: aload_0
       7: getstatic     #15                 // Field org/h2/value/ValueBoolean.FALSE:Lorg/h2/value/ValueBoolean;
      10: invokestatic  #16                 // Method get:(Lorg/h2/value/Value;)Lorg/h2/expression/ValueExpression;
      13: invokespecial #17                 // Method org/h2/expression/Comparison."<init>":(Lorg/h2/engine/Session;ILorg/h2/expression/Expression;Lorg/h2/expression/Expression;)V
      16: areturn

  public void mapColumns(org.h2.table.ColumnResolver, int);
    Code:
       0: return

  public org.h2.expression.Expression optimize(org.h2.engine.Session);
    Code:
       0: aload_0
       1: areturn

  public boolean isConstant();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isValueSet();
    Code:
       0: iconst_1
       1: ireturn

  public void setEvaluatable(org.h2.table.TableFilter, boolean);
    Code:
       0: return

  public int getScale();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Lorg/h2/value/Value;
       4: invokevirtual #18                 // Method org/h2/value/Value.getScale:()I
       7: ireturn

  public long getPrecision();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Lorg/h2/value/Value;
       4: invokevirtual #19                 // Method org/h2/value/Value.getPrecision:()J
       7: lreturn

  public int getDisplaySize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Lorg/h2/value/Value;
       4: invokevirtual #20                 // Method org/h2/value/Value.getDisplaySize:()I
       7: ireturn

  public java.lang.String getSQL();
    Code:
       0: aload_0
       1: getstatic     #5                  // Field DEFAULT:Ljava/lang/Object;
       4: if_acmpne     10
       7: ldc           #21                 // String DEFAULT
       9: areturn
      10: aload_0
      11: getfield      #2                  // Field value:Lorg/h2/value/Value;
      14: invokevirtual #22                 // Method org/h2/value/Value.getSQL:()Ljava/lang/String;
      17: areturn

  public void updateAggregate(org.h2.engine.Session);
    Code:
       0: return

  public boolean isEverything(org.h2.expression.ExpressionVisitor);
    Code:
       0: aload_1
       1: invokevirtual #23                 // Method org/h2/expression/ExpressionVisitor.getType:()I
       4: tableswitch   { // 0 to 9
                     0: 60
                     1: 60
                     2: 60
                     3: 60
                     4: 60
                     5: 60
                     6: 60
                     7: 60
                     8: 60
                     9: 60
               default: 62
          }
      60: iconst_1
      61: ireturn
      62: new           #24                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #26                 // String type=
      71: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_1
      75: invokevirtual #23                 // Method org/h2/expression/ExpressionVisitor.getType:()I
      78: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      81: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokestatic  #30                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      87: athrow

  public int getCost();
    Code:
       0: iconst_0
       1: ireturn

  public org.h2.expression.Expression[] getExpressionColumns(org.h2.engine.Session);
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getType:()I
       4: bipush        17
       6: if_icmpne     22
       9: aload_1
      10: aload_0
      11: aload_1
      12: invokevirtual #32                 // Method getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
      15: checkcast     #33                 // class org/h2/value/ValueArray
      18: invokestatic  #34                 // Method getExpressionColumns:(Lorg/h2/engine/Session;Lorg/h2/value/ValueArray;)[Lorg/h2/expression/Expression;
      21: areturn
      22: aload_0
      23: aload_1
      24: invokespecial #35                 // Method org/h2/expression/Expression.getExpressionColumns:(Lorg/h2/engine/Session;)[Lorg/h2/expression/Expression;
      27: areturn

  static {};
    Code:
       0: new           #4                  // class org/h2/expression/ValueExpression
       3: dup
       4: getstatic     #6                  // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
       7: invokespecial #8                  // Method "<init>":(Lorg/h2/value/Value;)V
      10: putstatic     #3                  // Field NULL:Ljava/lang/Object;
      13: new           #4                  // class org/h2/expression/ValueExpression
      16: dup
      17: getstatic     #6                  // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
      20: invokespecial #8                  // Method "<init>":(Lorg/h2/value/Value;)V
      23: putstatic     #5                  // Field DEFAULT:Ljava/lang/Object;
      26: return
}
