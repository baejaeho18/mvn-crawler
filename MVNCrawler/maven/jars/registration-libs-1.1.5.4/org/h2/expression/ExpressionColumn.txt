Compiled from "ExpressionColumn.java"
public class org.h2.expression.ExpressionColumn extends org.h2.expression.Expression {
  private final org.h2.engine.Database database;

  private final java.lang.String schemaName;

  private final java.lang.String tableAlias;

  private java.lang.String columnName;

  private org.h2.table.ColumnResolver columnResolver;

  private int queryLevel;

  private org.h2.table.Column column;

  public org.h2.expression.ExpressionColumn(org.h2.engine.Database, org.h2.table.Column);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/expression/Expression."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field database:Lorg/h2/engine/Database;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field column:Lorg/h2/table/Column;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field schemaName:Ljava/lang/String;
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field tableAlias:Ljava/lang/String;
      24: aload_0
      25: aconst_null
      26: putfield      #6                  // Field columnName:Ljava/lang/String;
      29: return

  public org.h2.expression.ExpressionColumn(org.h2.engine.Database, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/expression/Expression."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field database:Lorg/h2/engine/Database;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field schemaName:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #5                  // Field tableAlias:Ljava/lang/String;
      19: aload_0
      20: aload         4
      22: putfield      #6                  // Field columnName:Ljava/lang/String;
      25: return

  public java.lang.String getSQL();
    Code:
       0: aload_0
       1: getfield      #2                  // Field database:Lorg/h2/engine/Database;
       4: invokevirtual #7                  // Method org/h2/engine/Database.getSettings:()Lorg/h2/engine/DbSettings;
       7: getfield      #8                  // Field org/h2/engine/DbSettings.databaseToUpper:Z
      10: istore_2
      11: aload_0
      12: getfield      #3                  // Field column:Lorg/h2/table/Column;
      15: ifnull        29
      18: aload_0
      19: getfield      #3                  // Field column:Lorg/h2/table/Column;
      22: invokevirtual #9                  // Method org/h2/table/Column.getSQL:()Ljava/lang/String;
      25: astore_1
      26: goto          48
      29: iload_2
      30: ifeq          43
      33: aload_0
      34: getfield      #6                  // Field columnName:Ljava/lang/String;
      37: invokestatic  #10                 // Method org/h2/command/Parser.quoteIdentifier:(Ljava/lang/String;)Ljava/lang/String;
      40: goto          47
      43: aload_0
      44: getfield      #6                  // Field columnName:Ljava/lang/String;
      47: astore_1
      48: aload_0
      49: getfield      #5                  // Field tableAlias:Ljava/lang/String;
      52: ifnull        98
      55: iload_2
      56: ifeq          69
      59: aload_0
      60: getfield      #5                  // Field tableAlias:Ljava/lang/String;
      63: invokestatic  #10                 // Method org/h2/command/Parser.quoteIdentifier:(Ljava/lang/String;)Ljava/lang/String;
      66: goto          73
      69: aload_0
      70: getfield      #5                  // Field tableAlias:Ljava/lang/String;
      73: astore_3
      74: new           #11                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      81: aload_3
      82: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: ldc           #14                 // String .
      87: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_1
      91: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: astore_1
      98: aload_0
      99: getfield      #4                  // Field schemaName:Ljava/lang/String;
     102: ifnull        148
     105: iload_2
     106: ifeq          119
     109: aload_0
     110: getfield      #4                  // Field schemaName:Ljava/lang/String;
     113: invokestatic  #10                 // Method org/h2/command/Parser.quoteIdentifier:(Ljava/lang/String;)Ljava/lang/String;
     116: goto          123
     119: aload_0
     120: getfield      #4                  // Field schemaName:Ljava/lang/String;
     123: astore_3
     124: new           #11                 // class java/lang/StringBuilder
     127: dup
     128: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     131: aload_3
     132: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: ldc           #14                 // String .
     137: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: aload_1
     141: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     147: astore_1
     148: aload_1
     149: areturn

  public org.h2.table.TableFilter getTableFilter();
    Code:
       0: aload_0
       1: getfield      #16                 // Field columnResolver:Lorg/h2/table/ColumnResolver;
       4: ifnonnull     11
       7: aconst_null
       8: goto          20
      11: aload_0
      12: getfield      #16                 // Field columnResolver:Lorg/h2/table/ColumnResolver;
      15: invokeinterface #17,  1           // InterfaceMethod org/h2/table/ColumnResolver.getTableFilter:()Lorg/h2/table/TableFilter;
      20: areturn

  public void mapColumns(org.h2.table.ColumnResolver, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field tableAlias:Ljava/lang/String;
       4: ifnull        28
       7: aload_0
       8: getfield      #2                  // Field database:Lorg/h2/engine/Database;
      11: aload_0
      12: getfield      #5                  // Field tableAlias:Ljava/lang/String;
      15: aload_1
      16: invokeinterface #18,  1           // InterfaceMethod org/h2/table/ColumnResolver.getTableAlias:()Ljava/lang/String;
      21: invokevirtual #19                 // Method org/h2/engine/Database.equalsIdentifiers:(Ljava/lang/String;Ljava/lang/String;)Z
      24: ifne          28
      27: return
      28: aload_0
      29: getfield      #4                  // Field schemaName:Ljava/lang/String;
      32: ifnull        56
      35: aload_0
      36: getfield      #2                  // Field database:Lorg/h2/engine/Database;
      39: aload_0
      40: getfield      #4                  // Field schemaName:Ljava/lang/String;
      43: aload_1
      44: invokeinterface #20,  1           // InterfaceMethod org/h2/table/ColumnResolver.getSchemaName:()Ljava/lang/String;
      49: invokevirtual #19                 // Method org/h2/engine/Database.equalsIdentifiers:(Ljava/lang/String;Ljava/lang/String;)Z
      52: ifne          56
      55: return
      56: aload_1
      57: invokeinterface #21,  1           // InterfaceMethod org/h2/table/ColumnResolver.getColumns:()[Lorg/h2/table/Column;
      62: astore_3
      63: aload_3
      64: arraylength
      65: istore        4
      67: iconst_0
      68: istore        5
      70: iload         5
      72: iload         4
      74: if_icmpge     136
      77: aload_3
      78: iload         5
      80: aaload
      81: astore        6
      83: aload_1
      84: aload         6
      86: invokeinterface #22,  2           // InterfaceMethod org/h2/table/ColumnResolver.getDerivedColumnName:(Lorg/h2/table/Column;)Ljava/lang/String;
      91: astore        7
      93: aload         7
      95: ifnonnull     105
      98: aload         6
     100: invokevirtual #23                 // Method org/h2/table/Column.getName:()Ljava/lang/String;
     103: astore        7
     105: aload_0
     106: getfield      #2                  // Field database:Lorg/h2/engine/Database;
     109: aload_0
     110: getfield      #6                  // Field columnName:Ljava/lang/String;
     113: aload         7
     115: invokevirtual #19                 // Method org/h2/engine/Database.equalsIdentifiers:(Ljava/lang/String;Ljava/lang/String;)Z
     118: ifeq          130
     121: aload_0
     122: aload_1
     123: aload         6
     125: iload_2
     126: invokespecial #24                 // Method mapColumn:(Lorg/h2/table/ColumnResolver;Lorg/h2/table/Column;I)V
     129: return
     130: iinc          5, 1
     133: goto          70
     136: aload_0
     137: getfield      #2                  // Field database:Lorg/h2/engine/Database;
     140: ldc           #25                 // String _ROWID_
     142: aload_0
     143: getfield      #6                  // Field columnName:Ljava/lang/String;
     146: invokevirtual #19                 // Method org/h2/engine/Database.equalsIdentifiers:(Ljava/lang/String;Ljava/lang/String;)Z
     149: ifeq          171
     152: aload_1
     153: invokeinterface #26,  1           // InterfaceMethod org/h2/table/ColumnResolver.getRowIdColumn:()Lorg/h2/table/Column;
     158: astore_3
     159: aload_3
     160: ifnull        171
     163: aload_0
     164: aload_1
     165: aload_3
     166: iload_2
     167: invokespecial #24                 // Method mapColumn:(Lorg/h2/table/ColumnResolver;Lorg/h2/table/Column;I)V
     170: return
     171: aload_1
     172: invokeinterface #27,  1           // InterfaceMethod org/h2/table/ColumnResolver.getSystemColumns:()[Lorg/h2/table/Column;
     177: astore_3
     178: iconst_0
     179: istore        4
     181: aload_3
     182: ifnull        232
     185: iload         4
     187: aload_3
     188: arraylength
     189: if_icmpge     232
     192: aload_3
     193: iload         4
     195: aaload
     196: astore        5
     198: aload_0
     199: getfield      #2                  // Field database:Lorg/h2/engine/Database;
     202: aload_0
     203: getfield      #6                  // Field columnName:Ljava/lang/String;
     206: aload         5
     208: invokevirtual #23                 // Method org/h2/table/Column.getName:()Ljava/lang/String;
     211: invokevirtual #19                 // Method org/h2/engine/Database.equalsIdentifiers:(Ljava/lang/String;Ljava/lang/String;)Z
     214: ifeq          226
     217: aload_0
     218: aload_1
     219: aload         5
     221: iload_2
     222: invokespecial #24                 // Method mapColumn:(Lorg/h2/table/ColumnResolver;Lorg/h2/table/Column;I)V
     225: return
     226: iinc          4, 1
     229: goto          181
     232: return

  private void mapColumn(org.h2.table.ColumnResolver, org.h2.table.Column, int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field columnResolver:Lorg/h2/table/ColumnResolver;
       4: ifnonnull     25
       7: aload_0
       8: iload_3
       9: putfield      #28                 // Field queryLevel:I
      12: aload_0
      13: aload_2
      14: putfield      #3                  // Field column:Lorg/h2/table/Column;
      17: aload_0
      18: aload_1
      19: putfield      #16                 // Field columnResolver:Lorg/h2/table/ColumnResolver;
      22: goto          61
      25: aload_0
      26: getfield      #28                 // Field queryLevel:I
      29: iload_3
      30: if_icmpne     61
      33: aload_0
      34: getfield      #16                 // Field columnResolver:Lorg/h2/table/ColumnResolver;
      37: aload_1
      38: if_acmpeq     61
      41: aload_1
      42: instanceof    #29                 // class org/h2/command/dml/SelectListColumnResolver
      45: ifeq          51
      48: goto          61
      51: ldc           #30                 // int 90059
      53: aload_0
      54: getfield      #6                  // Field columnName:Ljava/lang/String;
      57: invokestatic  #31                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      60: athrow
      61: return

  public org.h2.expression.Expression optimize(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #16                 // Field columnResolver:Lorg/h2/table/ColumnResolver;
       4: ifnonnull     135
       7: aload_1
       8: invokevirtual #32                 // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      11: aload_0
      12: getfield      #5                  // Field tableAlias:Ljava/lang/String;
      15: ifnonnull     25
      18: aload_1
      19: invokevirtual #33                 // Method org/h2/engine/Session.getCurrentSchemaName:()Ljava/lang/String;
      22: goto          29
      25: aload_0
      26: getfield      #5                  // Field tableAlias:Ljava/lang/String;
      29: invokevirtual #34                 // Method org/h2/engine/Database.findSchema:(Ljava/lang/String;)Lorg/h2/schema/Schema;
      32: astore_2
      33: aload_2
      34: ifnull        55
      37: aload_2
      38: aload_0
      39: getfield      #6                  // Field columnName:Ljava/lang/String;
      42: invokevirtual #35                 // Method org/h2/schema/Schema.findConstant:(Ljava/lang/String;)Lorg/h2/schema/Constant;
      45: astore_3
      46: aload_3
      47: ifnull        55
      50: aload_3
      51: invokevirtual #36                 // Method org/h2/schema/Constant.getValue:()Lorg/h2/expression/ValueExpression;
      54: areturn
      55: aload_0
      56: getfield      #6                  // Field columnName:Ljava/lang/String;
      59: astore_3
      60: aload_0
      61: getfield      #5                  // Field tableAlias:Ljava/lang/String;
      64: ifnull        128
      67: new           #11                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      74: aload_0
      75: getfield      #5                  // Field tableAlias:Ljava/lang/String;
      78: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #14                 // String .
      83: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_3
      87: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: astore_3
      94: aload_0
      95: getfield      #4                  // Field schemaName:Ljava/lang/String;
      98: ifnull        128
     101: new           #11                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     108: aload_0
     109: getfield      #4                  // Field schemaName:Ljava/lang/String;
     112: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: ldc           #14                 // String .
     117: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload_3
     121: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: astore_3
     128: ldc           #37                 // int 42122
     130: aload_3
     131: invokestatic  #31                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
     134: athrow
     135: aload_0
     136: getfield      #16                 // Field columnResolver:Lorg/h2/table/ColumnResolver;
     139: aload_0
     140: aload_0
     141: getfield      #3                  // Field column:Lorg/h2/table/Column;
     144: invokeinterface #38,  3           // InterfaceMethod org/h2/table/ColumnResolver.optimize:(Lorg/h2/expression/ExpressionColumn;Lorg/h2/table/Column;)Lorg/h2/expression/Expression;
     149: areturn

  public void updateAggregate(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #16                 // Field columnResolver:Lorg/h2/table/ColumnResolver;
       4: aload_0
       5: getfield      #3                  // Field column:Lorg/h2/table/Column;
       8: invokeinterface #39,  2           // InterfaceMethod org/h2/table/ColumnResolver.getValue:(Lorg/h2/table/Column;)Lorg/h2/value/Value;
      13: astore_2
      14: aload_0
      15: getfield      #16                 // Field columnResolver:Lorg/h2/table/ColumnResolver;
      18: invokeinterface #40,  1           // InterfaceMethod org/h2/table/ColumnResolver.getSelect:()Lorg/h2/command/dml/Select;
      23: astore_3
      24: aload_3
      25: ifnonnull     38
      28: ldc           #41                 // int 90016
      30: aload_0
      31: invokevirtual #42                 // Method getSQL:()Ljava/lang/String;
      34: invokestatic  #31                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      37: athrow
      38: aload_3
      39: invokevirtual #43                 // Method org/h2/command/dml/Select.getCurrentGroup:()Ljava/util/HashMap;
      42: astore        4
      44: aload         4
      46: ifnonnull     50
      49: return
      50: aload         4
      52: aload_0
      53: invokevirtual #44                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #45                 // class org/h2/value/Value
      59: astore        5
      61: aload         5
      63: ifnonnull     77
      66: aload         4
      68: aload_0
      69: aload_2
      70: invokevirtual #46                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: pop
      74: goto          100
      77: aload_0
      78: getfield      #2                  // Field database:Lorg/h2/engine/Database;
      81: aload_2
      82: aload         5
      84: invokevirtual #47                 // Method org/h2/engine/Database.areEqual:(Lorg/h2/value/Value;Lorg/h2/value/Value;)Z
      87: ifne          100
      90: ldc           #41                 // int 90016
      92: aload_0
      93: invokevirtual #42                 // Method getSQL:()Ljava/lang/String;
      96: invokestatic  #31                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      99: athrow
     100: return

  public org.h2.value.Value getValue(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #16                 // Field columnResolver:Lorg/h2/table/ColumnResolver;
       4: invokeinterface #40,  1           // InterfaceMethod org/h2/table/ColumnResolver.getSelect:()Lorg/h2/command/dml/Select;
       9: astore_2
      10: aload_2
      11: ifnull        41
      14: aload_2
      15: invokevirtual #43                 // Method org/h2/command/dml/Select.getCurrentGroup:()Ljava/util/HashMap;
      18: astore_3
      19: aload_3
      20: ifnull        41
      23: aload_3
      24: aload_0
      25: invokevirtual #44                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #45                 // class org/h2/value/Value
      31: astore        4
      33: aload         4
      35: ifnull        41
      38: aload         4
      40: areturn
      41: aload_0
      42: getfield      #16                 // Field columnResolver:Lorg/h2/table/ColumnResolver;
      45: aload_0
      46: getfield      #3                  // Field column:Lorg/h2/table/Column;
      49: invokeinterface #39,  2           // InterfaceMethod org/h2/table/ColumnResolver.getValue:(Lorg/h2/table/Column;)Lorg/h2/value/Value;
      54: astore_3
      55: aload_3
      56: ifnonnull     84
      59: aload_2
      60: ifnonnull     74
      63: sipush        23502
      66: aload_0
      67: invokevirtual #42                 // Method getSQL:()Ljava/lang/String;
      70: invokestatic  #31                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      73: athrow
      74: ldc           #41                 // int 90016
      76: aload_0
      77: invokevirtual #42                 // Method getSQL:()Ljava/lang/String;
      80: invokestatic  #31                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      83: athrow
      84: aload_0
      85: getfield      #3                  // Field column:Lorg/h2/table/Column;
      88: invokevirtual #48                 // Method org/h2/table/Column.getEnumerators:()[Ljava/lang/String;
      91: ifnull        116
      94: aload_3
      95: getstatic     #49                 // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
      98: if_acmpeq     116
     101: aload_0
     102: getfield      #3                  // Field column:Lorg/h2/table/Column;
     105: invokevirtual #48                 // Method org/h2/table/Column.getEnumerators:()[Ljava/lang/String;
     108: aload_3
     109: invokevirtual #50                 // Method org/h2/value/Value.getInt:()I
     112: invokestatic  #51                 // Method org/h2/value/ValueEnum.get:([Ljava/lang/String;I)Lorg/h2/value/ValueEnum;
     115: areturn
     116: aload_3
     117: areturn

  public int getType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field column:Lorg/h2/table/Column;
       4: invokevirtual #52                 // Method org/h2/table/Column.getType:()I
       7: ireturn

  public void setEvaluatable(org.h2.table.TableFilter, boolean);
    Code:
       0: return

  public org.h2.table.Column getColumn();
    Code:
       0: aload_0
       1: getfield      #3                  // Field column:Lorg/h2/table/Column;
       4: areturn

  public int getScale();
    Code:
       0: aload_0
       1: getfield      #3                  // Field column:Lorg/h2/table/Column;
       4: invokevirtual #53                 // Method org/h2/table/Column.getScale:()I
       7: ireturn

  public long getPrecision();
    Code:
       0: aload_0
       1: getfield      #3                  // Field column:Lorg/h2/table/Column;
       4: invokevirtual #54                 // Method org/h2/table/Column.getPrecision:()J
       7: lreturn

  public int getDisplaySize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field column:Lorg/h2/table/Column;
       4: invokevirtual #55                 // Method org/h2/table/Column.getDisplaySize:()I
       7: ireturn

  public java.lang.String getOriginalColumnName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field columnName:Ljava/lang/String;
       4: areturn

  public java.lang.String getOriginalTableAliasName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field tableAlias:Ljava/lang/String;
       4: areturn

  public java.lang.String getColumnName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field columnName:Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: getfield      #6                  // Field columnName:Ljava/lang/String;
      11: goto          21
      14: aload_0
      15: getfield      #3                  // Field column:Lorg/h2/table/Column;
      18: invokevirtual #23                 // Method org/h2/table/Column.getName:()Ljava/lang/String;
      21: areturn

  public java.lang.String getSchemaName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field column:Lorg/h2/table/Column;
       4: invokevirtual #56                 // Method org/h2/table/Column.getTable:()Lorg/h2/table/Table;
       7: astore_1
       8: aload_1
       9: ifnonnull     16
      12: aconst_null
      13: goto          23
      16: aload_1
      17: invokevirtual #57                 // Method org/h2/table/Table.getSchema:()Lorg/h2/schema/Schema;
      20: invokevirtual #58                 // Method org/h2/schema/Schema.getName:()Ljava/lang/String;
      23: areturn

  public java.lang.String getTableName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field column:Lorg/h2/table/Column;
       4: invokevirtual #56                 // Method org/h2/table/Column.getTable:()Lorg/h2/table/Table;
       7: astore_1
       8: aload_1
       9: ifnonnull     16
      12: aconst_null
      13: goto          20
      16: aload_1
      17: invokevirtual #59                 // Method org/h2/table/Table.getName:()Ljava/lang/String;
      20: areturn

  public java.lang.String getAlias();
    Code:
       0: aload_0
       1: getfield      #3                  // Field column:Lorg/h2/table/Column;
       4: ifnull        42
       7: aload_0
       8: getfield      #16                 // Field columnResolver:Lorg/h2/table/ColumnResolver;
      11: ifnull        34
      14: aload_0
      15: getfield      #16                 // Field columnResolver:Lorg/h2/table/ColumnResolver;
      18: aload_0
      19: getfield      #3                  // Field column:Lorg/h2/table/Column;
      22: invokeinterface #22,  2           // InterfaceMethod org/h2/table/ColumnResolver.getDerivedColumnName:(Lorg/h2/table/Column;)Ljava/lang/String;
      27: astore_1
      28: aload_1
      29: ifnull        34
      32: aload_1
      33: areturn
      34: aload_0
      35: getfield      #3                  // Field column:Lorg/h2/table/Column;
      38: invokevirtual #23                 // Method org/h2/table/Column.getName:()Ljava/lang/String;
      41: areturn
      42: aload_0
      43: getfield      #5                  // Field tableAlias:Ljava/lang/String;
      46: ifnull        79
      49: new           #11                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      56: aload_0
      57: getfield      #5                  // Field tableAlias:Ljava/lang/String;
      60: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: ldc           #14                 // String .
      65: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_0
      69: getfield      #6                  // Field columnName:Ljava/lang/String;
      72: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: areturn
      79: aload_0
      80: getfield      #6                  // Field columnName:Ljava/lang/String;
      83: areturn

  public boolean isAutoIncrement();
    Code:
       0: aload_0
       1: getfield      #3                  // Field column:Lorg/h2/table/Column;
       4: invokevirtual #60                 // Method org/h2/table/Column.getSequence:()Lorg/h2/schema/Sequence;
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public int getNullable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field column:Lorg/h2/table/Column;
       4: invokevirtual #61                 // Method org/h2/table/Column.isNullable:()Z
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isEverything(org.h2.expression.ExpressionVisitor);
    Code:
       0: aload_1
       1: invokevirtual #62                 // Method org/h2/expression/ExpressionVisitor.getType:()I
       4: tableswitch   { // 0 to 9
                     0: 64
                     1: 60
                     2: 62
                     3: 81
                     4: 111
                     5: 62
                     6: 127
                     7: 144
                     8: 62
                     9: 164
               default: 174
          }
      60: iconst_0
      61: ireturn
      62: iconst_1
      63: ireturn
      64: aload_0
      65: getfield      #28                 // Field queryLevel:I
      68: aload_1
      69: invokevirtual #63                 // Method org/h2/expression/ExpressionVisitor.getQueryLevel:()I
      72: if_icmpge     79
      75: iconst_1
      76: goto          80
      79: iconst_0
      80: ireturn
      81: aload_1
      82: invokevirtual #63                 // Method org/h2/expression/ExpressionVisitor.getQueryLevel:()I
      85: aload_0
      86: getfield      #28                 // Field queryLevel:I
      89: if_icmpge     94
      92: iconst_1
      93: ireturn
      94: aload_0
      95: invokevirtual #64                 // Method getTableFilter:()Lorg/h2/table/TableFilter;
      98: ifnonnull     103
     101: iconst_0
     102: ireturn
     103: aload_0
     104: invokevirtual #64                 // Method getTableFilter:()Lorg/h2/table/TableFilter;
     107: invokevirtual #65                 // Method org/h2/table/TableFilter.isEvaluatable:()Z
     110: ireturn
     111: aload_1
     112: aload_0
     113: getfield      #3                  // Field column:Lorg/h2/table/Column;
     116: invokevirtual #56                 // Method org/h2/table/Column.getTable:()Lorg/h2/table/Table;
     119: invokevirtual #66                 // Method org/h2/table/Table.getMaxDataModificationId:()J
     122: invokevirtual #67                 // Method org/h2/expression/ExpressionVisitor.addDataModificationId:(J)V
     125: iconst_1
     126: ireturn
     127: aload_0
     128: getfield      #16                 // Field columnResolver:Lorg/h2/table/ColumnResolver;
     131: aload_1
     132: invokevirtual #68                 // Method org/h2/expression/ExpressionVisitor.getResolver:()Lorg/h2/table/ColumnResolver;
     135: if_acmpeq     142
     138: iconst_1
     139: goto          143
     142: iconst_0
     143: ireturn
     144: aload_0
     145: getfield      #3                  // Field column:Lorg/h2/table/Column;
     148: ifnull        162
     151: aload_1
     152: aload_0
     153: getfield      #3                  // Field column:Lorg/h2/table/Column;
     156: invokevirtual #56                 // Method org/h2/table/Column.getTable:()Lorg/h2/table/Table;
     159: invokevirtual #69                 // Method org/h2/expression/ExpressionVisitor.addDependency:(Lorg/h2/engine/DbObject;)V
     162: iconst_1
     163: ireturn
     164: aload_1
     165: aload_0
     166: getfield      #3                  // Field column:Lorg/h2/table/Column;
     169: invokevirtual #70                 // Method org/h2/expression/ExpressionVisitor.addColumn:(Lorg/h2/table/Column;)V
     172: iconst_1
     173: ireturn
     174: new           #11                 // class java/lang/StringBuilder
     177: dup
     178: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     181: ldc           #71                 // String type=
     183: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     186: aload_1
     187: invokevirtual #62                 // Method org/h2/expression/ExpressionVisitor.getType:()I
     190: invokevirtual #72                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     193: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     196: invokestatic  #73                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
     199: athrow

  public int getCost();
    Code:
       0: iconst_2
       1: ireturn

  public void createIndexConditions(org.h2.engine.Session, org.h2.table.TableFilter);
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method getTableFilter:()Lorg/h2/table/TableFilter;
       4: astore_3
       5: aload_2
       6: aload_3
       7: if_acmpne     40
      10: aload_0
      11: getfield      #3                  // Field column:Lorg/h2/table/Column;
      14: invokevirtual #52                 // Method org/h2/table/Column.getType:()I
      17: iconst_1
      18: if_icmpne     40
      21: iconst_0
      22: aload_0
      23: getstatic     #74                 // Field org/h2/value/ValueBoolean.TRUE:Lorg/h2/value/ValueBoolean;
      26: invokestatic  #75                 // Method org/h2/expression/ValueExpression.get:(Lorg/h2/value/Value;)Lorg/h2/expression/ValueExpression;
      29: invokestatic  #76                 // Method org/h2/index/IndexCondition.get:(ILorg/h2/expression/ExpressionColumn;Lorg/h2/expression/Expression;)Lorg/h2/index/IndexCondition;
      32: astore        4
      34: aload_2
      35: aload         4
      37: invokevirtual #77                 // Method org/h2/table/TableFilter.addIndexCondition:(Lorg/h2/index/IndexCondition;)V
      40: return

  public org.h2.expression.Expression getNotIfPossible(org.h2.engine.Session);
    Code:
       0: new           #78                 // class org/h2/expression/Comparison
       3: dup
       4: aload_1
       5: iconst_0
       6: aload_0
       7: getstatic     #79                 // Field org/h2/value/ValueBoolean.FALSE:Lorg/h2/value/ValueBoolean;
      10: invokestatic  #75                 // Method org/h2/expression/ValueExpression.get:(Lorg/h2/value/Value;)Lorg/h2/expression/ValueExpression;
      13: invokespecial #80                 // Method org/h2/expression/Comparison."<init>":(Lorg/h2/engine/Session;ILorg/h2/expression/Expression;Lorg/h2/expression/Expression;)V
      16: areturn
}
