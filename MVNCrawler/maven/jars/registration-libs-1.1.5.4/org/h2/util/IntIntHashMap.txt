Compiled from "IntIntHashMap.java"
public class org.h2.util.IntIntHashMap extends org.h2.util.HashBase {
  public static final int NOT_FOUND;

  private static final int DELETED;

  private int[] keys;

  private int[] values;

  private int zeroValue;

  public org.h2.util.IntIntHashMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/util/HashBase."<init>":()V
       4: return

  protected void reset(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #2                  // Method org/h2/util/HashBase.reset:(I)V
       5: aload_0
       6: aload_0
       7: getfield      #3                  // Field len:I
      10: newarray       int
      12: putfield      #4                  // Field keys:[I
      15: aload_0
      16: aload_0
      17: getfield      #3                  // Field len:I
      20: newarray       int
      22: putfield      #5                  // Field values:[I
      25: return

  public void put(int, int);
    Code:
       0: iload_1
       1: ifne          15
       4: aload_0
       5: iconst_1
       6: putfield      #6                  // Field zeroKey:Z
       9: aload_0
      10: iload_2
      11: putfield      #7                  // Field zeroValue:I
      14: return
      15: aload_0
      16: invokevirtual #8                  // Method checkSizePut:()V
      19: aload_0
      20: iload_1
      21: iload_2
      22: invokespecial #9                  // Method internalPut:(II)V
      25: return

  private void internalPut(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #10                 // Method getIndex:(I)I
       5: istore_3
       6: iconst_1
       7: istore        4
       9: iconst_m1
      10: istore        5
      12: aload_0
      13: getfield      #4                  // Field keys:[I
      16: iload_3
      17: iaload
      18: istore        6
      20: iload         6
      22: ifne          89
      25: aload_0
      26: getfield      #5                  // Field values:[I
      29: iload_3
      30: iaload
      31: iconst_1
      32: if_icmpeq     78
      35: iload         5
      37: iflt          53
      40: iload         5
      42: istore_3
      43: aload_0
      44: dup
      45: getfield      #11                 // Field deletedCount:I
      48: iconst_1
      49: isub
      50: putfield      #11                 // Field deletedCount:I
      53: aload_0
      54: dup
      55: getfield      #12                 // Field size:I
      58: iconst_1
      59: iadd
      60: putfield      #12                 // Field size:I
      63: aload_0
      64: getfield      #4                  // Field keys:[I
      67: iload_3
      68: iload_1
      69: iastore
      70: aload_0
      71: getfield      #5                  // Field values:[I
      74: iload_3
      75: iload_2
      76: iastore
      77: return
      78: iload         5
      80: ifge          103
      83: iload_3
      84: istore        5
      86: goto          103
      89: iload         6
      91: iload_1
      92: if_icmpne     103
      95: aload_0
      96: getfield      #5                  // Field values:[I
      99: iload_3
     100: iload_2
     101: iastore
     102: return
     103: iload_3
     104: iload         4
     106: iinc          4, 1
     109: iadd
     110: aload_0
     111: getfield      #13                 // Field mask:I
     114: iand
     115: istore_3
     116: iload         4
     118: aload_0
     119: getfield      #3                  // Field len:I
     122: if_icmple     12
     125: ldc           #14                 // String hashmap is full
     127: invokestatic  #15                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
     130: pop
     131: return

  public void remove(int);
    Code:
       0: iload_1
       1: ifne          10
       4: aload_0
       5: iconst_0
       6: putfield      #6                  // Field zeroKey:Z
       9: return
      10: aload_0
      11: invokevirtual #16                 // Method checkSizeRemove:()V
      14: aload_0
      15: iload_1
      16: invokevirtual #10                 // Method getIndex:(I)I
      19: istore_2
      20: iconst_1
      21: istore_3
      22: aload_0
      23: getfield      #4                  // Field keys:[I
      26: iload_2
      27: iaload
      28: istore        4
      30: iload         4
      32: iload_1
      33: if_icmpne     71
      36: aload_0
      37: getfield      #4                  // Field keys:[I
      40: iload_2
      41: iconst_0
      42: iastore
      43: aload_0
      44: getfield      #5                  // Field values:[I
      47: iload_2
      48: iconst_1
      49: iastore
      50: aload_0
      51: dup
      52: getfield      #11                 // Field deletedCount:I
      55: iconst_1
      56: iadd
      57: putfield      #11                 // Field deletedCount:I
      60: aload_0
      61: dup
      62: getfield      #12                 // Field size:I
      65: iconst_1
      66: isub
      67: putfield      #12                 // Field size:I
      70: return
      71: iload         4
      73: ifne          86
      76: aload_0
      77: getfield      #5                  // Field values:[I
      80: iload_2
      81: iaload
      82: ifne          86
      85: return
      86: iload_2
      87: iload_3
      88: iinc          3, 1
      91: iadd
      92: aload_0
      93: getfield      #13                 // Field mask:I
      96: iand
      97: istore_2
      98: iload_3
      99: aload_0
     100: getfield      #3                  // Field len:I
     103: if_icmple     22
     106: return

  protected void rehash(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field keys:[I
       4: astore_2
       5: aload_0
       6: getfield      #5                  // Field values:[I
       9: astore_3
      10: aload_0
      11: iload_1
      12: invokevirtual #17                 // Method reset:(I)V
      15: iconst_0
      16: istore        4
      18: iload         4
      20: aload_2
      21: arraylength
      22: if_icmpge     52
      25: aload_2
      26: iload         4
      28: iaload
      29: istore        5
      31: iload         5
      33: ifeq          46
      36: aload_0
      37: iload         5
      39: aload_3
      40: iload         4
      42: iaload
      43: invokespecial #9                  // Method internalPut:(II)V
      46: iinc          4, 1
      49: goto          18
      52: return

  public int get(int);
    Code:
       0: iload_1
       1: ifne          20
       4: aload_0
       5: getfield      #6                  // Field zeroKey:Z
       8: ifeq          18
      11: aload_0
      12: getfield      #7                  // Field zeroValue:I
      15: goto          19
      18: iconst_m1
      19: ireturn
      20: aload_0
      21: iload_1
      22: invokevirtual #10                 // Method getIndex:(I)I
      25: istore_2
      26: iconst_1
      27: istore_3
      28: aload_0
      29: getfield      #4                  // Field keys:[I
      32: iload_2
      33: iaload
      34: istore        4
      36: iload         4
      38: ifne          52
      41: aload_0
      42: getfield      #5                  // Field values:[I
      45: iload_2
      46: iaload
      47: ifne          52
      50: iconst_m1
      51: ireturn
      52: iload         4
      54: iload_1
      55: if_icmpne     65
      58: aload_0
      59: getfield      #5                  // Field values:[I
      62: iload_2
      63: iaload
      64: ireturn
      65: iload_2
      66: iload_3
      67: iinc          3, 1
      70: iadd
      71: aload_0
      72: getfield      #13                 // Field mask:I
      75: iand
      76: istore_2
      77: iload_3
      78: aload_0
      79: getfield      #3                  // Field len:I
      82: if_icmple     28
      85: iconst_m1
      86: ireturn
}
