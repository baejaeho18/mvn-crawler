Compiled from "LazyFuture.java"
public abstract class org.h2.util.LazyFuture<T> implements java.util.concurrent.Future<T> {
  private static final int S_READY;

  private static final int S_DONE;

  private static final int S_ERROR;

  private static final int S_CANCELED;

  private int state;

  private T result;

  private java.lang.Exception error;

  public org.h2.util.LazyFuture();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field state:I
       9: return

  public boolean reset();
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: iconst_0
      11: putfield      #2                  // Field state:I
      14: aload_0
      15: aconst_null
      16: putfield      #3                  // Field result:Ljava/lang/Object;
      19: aload_0
      20: aconst_null
      21: putfield      #4                  // Field error:Ljava/lang/Exception;
      24: iconst_1
      25: ireturn

  protected abstract T run() throws java.lang.Exception;

  public boolean cancel(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: iconst_3
      11: putfield      #2                  // Field state:I
      14: iconst_1
      15: ireturn

  public T get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: tableswitch   { // 0 to 3
                     0: 36
                     1: 113
                     2: 118
                     3: 130
               default: 138
          }
      36: aload_0
      37: aload_0
      38: invokevirtual #5                  // Method run:()Ljava/lang/Object;
      41: putfield      #3                  // Field result:Ljava/lang/Object;
      44: aload_0
      45: iconst_1
      46: putfield      #2                  // Field state:I
      49: aload_0
      50: getfield      #2                  // Field state:I
      53: iconst_1
      54: if_icmpeq     108
      57: aload_0
      58: iconst_2
      59: putfield      #2                  // Field state:I
      62: goto          108
      65: astore_1
      66: aload_0
      67: aload_1
      68: putfield      #4                  // Field error:Ljava/lang/Exception;
      71: aload_1
      72: instanceof    #7                  // class java/lang/InterruptedException
      75: ifeq          83
      78: aload_1
      79: checkcast     #7                  // class java/lang/InterruptedException
      82: athrow
      83: new           #8                  // class java/util/concurrent/ExecutionException
      86: dup
      87: aload_1
      88: invokespecial #9                  // Method java/util/concurrent/ExecutionException."<init>":(Ljava/lang/Throwable;)V
      91: athrow
      92: astore_2
      93: aload_0
      94: getfield      #2                  // Field state:I
      97: iconst_1
      98: if_icmpeq     106
     101: aload_0
     102: iconst_2
     103: putfield      #2                  // Field state:I
     106: aload_2
     107: athrow
     108: aload_0
     109: getfield      #3                  // Field result:Ljava/lang/Object;
     112: areturn
     113: aload_0
     114: getfield      #3                  // Field result:Ljava/lang/Object;
     117: areturn
     118: new           #8                  // class java/util/concurrent/ExecutionException
     121: dup
     122: aload_0
     123: getfield      #4                  // Field error:Ljava/lang/Exception;
     126: invokespecial #9                  // Method java/util/concurrent/ExecutionException."<init>":(Ljava/lang/Throwable;)V
     129: athrow
     130: new           #10                 // class java/util/concurrent/CancellationException
     133: dup
     134: invokespecial #11                 // Method java/util/concurrent/CancellationException."<init>":()V
     137: athrow
     138: new           #12                 // class java/lang/StringBuilder
     141: dup
     142: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     145: ldc           #14                 // String
     147: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: aload_0
     151: getfield      #2                  // Field state:I
     154: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     157: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     160: invokestatic  #18                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
     163: athrow
    Exception table:
       from    to  target type
          36    49    65   Class java/lang/Exception
          36    49    92   any
          65    93    92   any

  public T get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method get:()Ljava/lang/Object;
       4: areturn

  public boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: iconst_3
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isDone();
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn
}
