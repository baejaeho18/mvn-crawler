Compiled from "DebuggingThreadLocal.java"
public class org.h2.util.DebuggingThreadLocal<T> {
  private final java.util.concurrent.ConcurrentHashMap<java.lang.Long, T> map;

  public org.h2.util.DebuggingThreadLocal();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      15: return

  public void set(T);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokestatic  #5                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       7: invokevirtual #6                  // Method java/lang/Thread.getId:()J
      10: invokestatic  #7                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      13: aload_1
      14: invokevirtual #8                  // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: return

  public void remove();
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokestatic  #5                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       7: invokevirtual #6                  // Method java/lang/Thread.getId:()J
      10: invokestatic  #7                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      13: invokevirtual #9                  // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  public T get();
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokestatic  #5                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       7: invokevirtual #6                  // Method java/lang/Thread.getId:()J
      10: invokestatic  #7                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      13: invokevirtual #10                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn

  public java.util.HashMap<java.lang.Long, T> getSnapshotOfAllThreads();
    Code:
       0: new           #11                 // class java/util/HashMap
       3: dup
       4: aload_0
       5: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       8: invokespecial #12                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      11: areturn
}
