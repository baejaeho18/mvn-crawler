Compiled from "SoftHashMap.java"
public class org.h2.util.SoftHashMap<K, V> extends java.util.AbstractMap<K, V> {
  private final java.util.Map<K, org.h2.util.SoftHashMap$SoftValue<V>> map;

  private final java.lang.ref.ReferenceQueue<V> queue;

  public org.h2.util.SoftHashMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractMap."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/ref/ReferenceQueue
       8: dup
       9: invokespecial #3                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      12: putfield      #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      15: aload_0
      16: new           #5                  // class java/util/HashMap
      19: dup
      20: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      23: putfield      #7                  // Field map:Ljava/util/Map;
      26: return

  private void processQueue();
    Code:
       0: aload_0
       1: getfield      #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
       4: invokevirtual #8                  // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       7: astore_1
       8: aload_1
       9: ifnonnull     13
      12: return
      13: aload_1
      14: checkcast     #9                  // class org/h2/util/SoftHashMap$SoftValue
      17: astore_2
      18: aload_2
      19: getfield      #10                 // Field org/h2/util/SoftHashMap$SoftValue.key:Ljava/lang/Object;
      22: astore_3
      23: aload_0
      24: getfield      #7                  // Field map:Ljava/util/Map;
      27: aload_3
      28: invokeinterface #11,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: goto          0

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method processQueue:()V
       4: aload_0
       5: getfield      #7                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #14                 // class java/lang/ref/SoftReference
      17: astore_2
      18: aload_2
      19: ifnonnull     24
      22: aconst_null
      23: areturn
      24: aload_2
      25: invokevirtual #15                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      28: areturn

  public V put(K, V);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method processQueue:()V
       4: aload_0
       5: getfield      #7                  // Field map:Ljava/util/Map;
       8: aload_1
       9: new           #9                  // class org/h2/util/SoftHashMap$SoftValue
      12: dup
      13: aload_2
      14: aload_0
      15: getfield      #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      18: aload_1
      19: invokespecial #16                 // Method org/h2/util/SoftHashMap$SoftValue."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;)V
      22: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #9                  // class org/h2/util/SoftHashMap$SoftValue
      30: astore_3
      31: aload_3
      32: ifnonnull     39
      35: aconst_null
      36: goto          43
      39: aload_3
      40: invokevirtual #18                 // Method org/h2/util/SoftHashMap$SoftValue.get:()Ljava/lang/Object;
      43: areturn

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method processQueue:()V
       4: aload_0
       5: getfield      #7                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #11,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #14                 // class java/lang/ref/SoftReference
      17: astore_2
      18: aload_2
      19: ifnonnull     26
      22: aconst_null
      23: goto          30
      26: aload_2
      27: invokevirtual #15                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      30: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method processQueue:()V
       4: aload_0
       5: getfield      #7                  // Field map:Ljava/util/Map;
       8: invokeinterface #19,  1           // InterfaceMethod java/util/Map.clear:()V
      13: return

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: new           #20                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #21                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow
}
