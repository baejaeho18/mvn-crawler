Compiled from "SynchronizedVerifier.java"
public class org.h2.util.SynchronizedVerifier {
  private static volatile boolean enabled;

  private static final java.util.Map<java.lang.Class<?>, java.util.concurrent.atomic.AtomicBoolean> DETECT;

  private static final java.util.Map<java.lang.Object, java.lang.Object> CURRENT;

  public org.h2.util.SynchronizedVerifier();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void setDetect(java.lang.Class<?>, boolean);
    Code:
       0: iload_1
       1: ifeq          24
       4: getstatic     #2                  // Field DETECT:Ljava/util/Map;
       7: aload_0
       8: new           #3                  // class java/util/concurrent/atomic/AtomicBoolean
      11: dup
      12: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      15: invokeinterface #5,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: goto          68
      24: getstatic     #2                  // Field DETECT:Ljava/util/Map;
      27: aload_0
      28: invokeinterface #6,  2            // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #3                  // class java/util/concurrent/atomic/AtomicBoolean
      36: astore_2
      37: aload_2
      38: ifnonnull     51
      41: new           #7                  // class java/lang/AssertionError
      44: dup
      45: ldc           #8                  // String Detection was not enabled
      47: invokespecial #9                  // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      50: athrow
      51: aload_2
      52: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      55: ifne          68
      58: new           #7                  // class java/lang/AssertionError
      61: dup
      62: ldc           #11                 // String No object of this class was tested
      64: invokespecial #9                  // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      67: athrow
      68: getstatic     #2                  // Field DETECT:Ljava/util/Map;
      71: invokeinterface #12,  1           // InterfaceMethod java/util/Map.size:()I
      76: ifle          83
      79: iconst_1
      80: goto          84
      83: iconst_0
      84: putstatic     #13                 // Field enabled:Z
      87: return

  public static void check(java.lang.Object);
    Code:
       0: getstatic     #13                 // Field enabled:Z
       3: ifeq          10
       6: aload_0
       7: invokestatic  #14                 // Method detectConcurrentAccess:(Ljava/lang/Object;)V
      10: return

  private static void detectConcurrentAccess(java.lang.Object);
    Code:
       0: getstatic     #2                  // Field DETECT:Ljava/util/Map;
       3: aload_0
       4: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #3                  // class java/util/concurrent/atomic/AtomicBoolean
      15: astore_1
      16: aload_1
      17: ifnull        90
      20: aload_1
      21: iconst_1
      22: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      25: getstatic     #18                 // Field CURRENT:Ljava/util/Map;
      28: aload_0
      29: invokeinterface #6,  2            // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      34: ifnull        47
      37: new           #7                  // class java/lang/AssertionError
      40: dup
      41: ldc           #19                 // String Concurrent access
      43: invokespecial #9                  // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      46: athrow
      47: getstatic     #18                 // Field CURRENT:Ljava/util/Map;
      50: aload_0
      51: aload_0
      52: invokeinterface #5,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: lconst_1
      59: invokestatic  #20                 // Method java/lang/Thread.sleep:(J)V
      62: goto          66
      65: astore_2
      66: getstatic     #18                 // Field CURRENT:Ljava/util/Map;
      69: aload_0
      70: invokeinterface #6,  2            // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      75: astore_2
      76: aload_2
      77: ifnonnull     90
      80: new           #7                  // class java/lang/AssertionError
      83: dup
      84: ldc           #19                 // String Concurrent access
      86: invokespecial #9                  // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      89: athrow
      90: return
    Exception table:
       from    to  target type
          58    62    65   Class java/lang/InterruptedException

  static {};
    Code:
       0: new           #22                 // class java/util/HashMap
       3: dup
       4: invokespecial #23                 // Method java/util/HashMap."<init>":()V
       7: invokestatic  #24                 // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      10: putstatic     #2                  // Field DETECT:Ljava/util/Map;
      13: new           #25                 // class java/util/IdentityHashMap
      16: dup
      17: invokespecial #26                 // Method java/util/IdentityHashMap."<init>":()V
      20: invokestatic  #24                 // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      23: putstatic     #18                 // Field CURRENT:Ljava/util/Map;
      26: return
}
