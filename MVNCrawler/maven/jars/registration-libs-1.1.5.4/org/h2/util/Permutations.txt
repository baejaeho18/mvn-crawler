Compiled from "Permutations.java"
public class org.h2.util.Permutations<T> {
  private final T[] in;

  private final T[] out;

  private final int n;

  private final int m;

  private final int[] index;

  private boolean hasNext;

  private org.h2.util.Permutations(T[], T[], int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field hasNext:Z
       9: aload_0
      10: aload_1
      11: arraylength
      12: putfield      #3                  // Field n:I
      15: aload_0
      16: iload_3
      17: putfield      #4                  // Field m:I
      20: aload_0
      21: getfield      #3                  // Field n:I
      24: iload_3
      25: if_icmplt     32
      28: iload_3
      29: ifge          38
      32: ldc           #5                  // String n < m or m < 0
      34: invokestatic  #6                  // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      37: pop
      38: aload_0
      39: aload_1
      40: putfield      #7                  // Field in:[Ljava/lang/Object;
      43: aload_0
      44: aload_2
      45: putfield      #8                  // Field out:[Ljava/lang/Object;
      48: aload_0
      49: aload_0
      50: getfield      #3                  // Field n:I
      53: newarray       int
      55: putfield      #9                  // Field index:[I
      58: iconst_0
      59: istore        4
      61: iload         4
      63: aload_0
      64: getfield      #3                  // Field n:I
      67: if_icmpge     85
      70: aload_0
      71: getfield      #9                  // Field index:[I
      74: iload         4
      76: iload         4
      78: iastore
      79: iinc          4, 1
      82: goto          61
      85: aload_0
      86: iload_3
      87: iconst_1
      88: isub
      89: invokespecial #10                 // Method reverseAfter:(I)V
      92: return

  public static <T> org.h2.util.Permutations<T> create(T[], T[]);
    Code:
       0: new           #11                 // class org/h2/util/Permutations
       3: dup
       4: aload_0
       5: aload_1
       6: aload_0
       7: arraylength
       8: invokespecial #12                 // Method "<init>":([Ljava/lang/Object;[Ljava/lang/Object;I)V
      11: areturn

  public static <T> org.h2.util.Permutations<T> create(T[], T[], int);
    Code:
       0: new           #11                 // class org/h2/util/Permutations
       3: dup
       4: aload_0
       5: aload_1
       6: iload_2
       7: invokespecial #12                 // Method "<init>":([Ljava/lang/Object;[Ljava/lang/Object;I)V
      10: areturn

  private void moveIndex();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method rightmostDip:()I
       4: istore_1
       5: iload_1
       6: ifge          15
       9: aload_0
      10: iconst_0
      11: putfield      #2                  // Field hasNext:Z
      14: return
      15: iload_1
      16: iconst_1
      17: iadd
      18: istore_2
      19: iload_1
      20: iconst_2
      21: iadd
      22: istore_3
      23: iload_3
      24: aload_0
      25: getfield      #3                  // Field n:I
      28: if_icmpge     69
      31: aload_0
      32: getfield      #9                  // Field index:[I
      35: iload_3
      36: iaload
      37: aload_0
      38: getfield      #9                  // Field index:[I
      41: iload_2
      42: iaload
      43: if_icmpge     63
      46: aload_0
      47: getfield      #9                  // Field index:[I
      50: iload_3
      51: iaload
      52: aload_0
      53: getfield      #9                  // Field index:[I
      56: iload_1
      57: iaload
      58: if_icmple     63
      61: iload_3
      62: istore_2
      63: iinc          3, 1
      66: goto          23
      69: aload_0
      70: getfield      #9                  // Field index:[I
      73: iload_1
      74: iaload
      75: istore_3
      76: aload_0
      77: getfield      #9                  // Field index:[I
      80: iload_1
      81: aload_0
      82: getfield      #9                  // Field index:[I
      85: iload_2
      86: iaload
      87: iastore
      88: aload_0
      89: getfield      #9                  // Field index:[I
      92: iload_2
      93: iload_3
      94: iastore
      95: aload_0
      96: getfield      #4                  // Field m:I
      99: iconst_1
     100: isub
     101: iload_1
     102: if_icmple     120
     105: aload_0
     106: iload_1
     107: invokespecial #10                 // Method reverseAfter:(I)V
     110: aload_0
     111: aload_0
     112: getfield      #4                  // Field m:I
     115: iconst_1
     116: isub
     117: invokespecial #10                 // Method reverseAfter:(I)V
     120: return

  private int rightmostDip();
    Code:
       0: aload_0
       1: getfield      #3                  // Field n:I
       4: iconst_2
       5: isub
       6: istore_1
       7: iload_1
       8: iflt          36
      11: aload_0
      12: getfield      #9                  // Field index:[I
      15: iload_1
      16: iaload
      17: aload_0
      18: getfield      #9                  // Field index:[I
      21: iload_1
      22: iconst_1
      23: iadd
      24: iaload
      25: if_icmpge     30
      28: iload_1
      29: ireturn
      30: iinc          1, -1
      33: goto          7
      36: iconst_m1
      37: ireturn

  private void reverseAfter(int);
    Code:
       0: iload_1
       1: iconst_1
       2: iadd
       3: istore_2
       4: aload_0
       5: getfield      #3                  // Field n:I
       8: iconst_1
       9: isub
      10: istore_3
      11: iload_2
      12: iload_3
      13: if_icmpge     53
      16: aload_0
      17: getfield      #9                  // Field index:[I
      20: iload_2
      21: iaload
      22: istore        4
      24: aload_0
      25: getfield      #9                  // Field index:[I
      28: iload_2
      29: aload_0
      30: getfield      #9                  // Field index:[I
      33: iload_3
      34: iaload
      35: iastore
      36: aload_0
      37: getfield      #9                  // Field index:[I
      40: iload_3
      41: iload         4
      43: iastore
      44: iinc          2, 1
      47: iinc          3, -1
      50: goto          11
      53: return

  public boolean next();
    Code:
       0: aload_0
       1: getfield      #2                  // Field hasNext:Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: iconst_0
      10: istore_1
      11: iload_1
      12: aload_0
      13: getfield      #4                  // Field m:I
      16: if_icmpge     42
      19: aload_0
      20: getfield      #8                  // Field out:[Ljava/lang/Object;
      23: iload_1
      24: aload_0
      25: getfield      #7                  // Field in:[Ljava/lang/Object;
      28: aload_0
      29: getfield      #9                  // Field index:[I
      32: iload_1
      33: iaload
      34: aaload
      35: aastore
      36: iinc          1, 1
      39: goto          11
      42: aload_0
      43: invokespecial #14                 // Method moveIndex:()V
      46: iconst_1
      47: ireturn
}
