Compiled from "ToDateParser.java"
public class org.h2.util.ToDateParser {
  private final java.lang.String unmodifiedInputStr;

  private final java.lang.String unmodifiedFormatStr;

  private final org.h2.util.ToDateParser$ConfigParam functionName;

  private java.lang.String inputStr;

  private java.lang.String formatStr;

  private boolean doyValid;

  private boolean absoluteDayValid;

  private boolean hour12Valid;

  private boolean timeZoneHMValid;

  private boolean bc;

  private long absoluteDay;

  private int year;

  private int month;

  private int day;

  private int dayOfYear;

  private int hour;

  private int minute;

  private int second;

  private int nanos;

  private int hour12;

  private boolean isAM;

  private java.util.TimeZone timeZone;

  private int timeZoneHour;

  private int timeZoneMinute;

  private int currentYear;

  private int currentMonth;

  private org.h2.util.ToDateParser(org.h2.util.ToDateParser$ConfigParam, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field doyValid:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field absoluteDayValid:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field hour12Valid:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field timeZoneHMValid:Z
      24: aload_0
      25: iconst_1
      26: putfield      #6                  // Field day:I
      29: aload_0
      30: iconst_1
      31: putfield      #7                  // Field isAM:Z
      34: aload_0
      35: aload_1
      36: putfield      #8                  // Field functionName:Lorg/h2/util/ToDateParser$ConfigParam;
      39: aload_0
      40: aload_2
      41: invokevirtual #9                  // Method java/lang/String.trim:()Ljava/lang/String;
      44: putfield      #10                 // Field inputStr:Ljava/lang/String;
      47: aload_0
      48: aload_0
      49: getfield      #10                 // Field inputStr:Ljava/lang/String;
      52: putfield      #11                 // Field unmodifiedInputStr:Ljava/lang/String;
      55: aload_3
      56: ifnull        66
      59: aload_3
      60: invokevirtual #12                 // Method java/lang/String.isEmpty:()Z
      63: ifeq          77
      66: aload_0
      67: aload_1
      68: invokevirtual #13                 // Method org/h2/util/ToDateParser$ConfigParam.getDefaultFormatStr:()Ljava/lang/String;
      71: putfield      #14                 // Field formatStr:Ljava/lang/String;
      74: goto          85
      77: aload_0
      78: aload_3
      79: invokevirtual #9                  // Method java/lang/String.trim:()Ljava/lang/String;
      82: putfield      #14                 // Field formatStr:Ljava/lang/String;
      85: aload_0
      86: aload_0
      87: getfield      #14                 // Field formatStr:Ljava/lang/String;
      90: putfield      #15                 // Field unmodifiedFormatStr:Ljava/lang/String;
      93: return

  private static org.h2.util.ToDateParser getTimestampParser(org.h2.util.ToDateParser$ConfigParam, java.lang.String, java.lang.String);
    Code:
       0: new           #16                 // class org/h2/util/ToDateParser
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #17                 // Method "<init>":(Lorg/h2/util/ToDateParser$ConfigParam;Ljava/lang/String;Ljava/lang/String;)V
      10: astore_3
      11: aload_3
      12: invokestatic  #18                 // Method parse:(Lorg/h2/util/ToDateParser;)Lorg/h2/util/ToDateParser;
      15: pop
      16: aload_3
      17: areturn

  private org.h2.value.ValueTimestamp getResultingValue();
    Code:
       0: aload_0
       1: getfield      #3                  // Field absoluteDayValid:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #19                 // Field absoluteDay:J
      11: invokestatic  #20                 // Method org/h2/util/DateTimeUtils.dateValueFromAbsoluteDay:(J)J
      14: lstore_1
      15: goto          99
      18: aload_0
      19: getfield      #21                 // Field year:I
      22: istore_3
      23: iload_3
      24: ifne          32
      27: aload_0
      28: invokevirtual #22                 // Method getCurrentYear:()I
      31: istore_3
      32: aload_0
      33: getfield      #23                 // Field bc:Z
      36: ifeq          43
      39: iconst_1
      40: iload_3
      41: isub
      42: istore_3
      43: aload_0
      44: getfield      #2                  // Field doyValid:Z
      47: ifeq          70
      50: iload_3
      51: i2l
      52: invokestatic  #24                 // Method org/h2/util/DateTimeUtils.absoluteDayFromYear:(J)J
      55: aload_0
      56: getfield      #25                 // Field dayOfYear:I
      59: i2l
      60: ladd
      61: lconst_1
      62: lsub
      63: invokestatic  #20                 // Method org/h2/util/DateTimeUtils.dateValueFromAbsoluteDay:(J)J
      66: lstore_1
      67: goto          99
      70: aload_0
      71: getfield      #26                 // Field month:I
      74: istore        4
      76: iload         4
      78: ifne          87
      81: aload_0
      82: invokevirtual #27                 // Method getCurrentMonth:()I
      85: istore        4
      87: iload_3
      88: i2l
      89: iload         4
      91: aload_0
      92: getfield      #6                  // Field day:I
      95: invokestatic  #28                 // Method org/h2/util/DateTimeUtils.dateValue:(JII)J
      98: lstore_1
      99: aload_0
     100: getfield      #4                  // Field hour12Valid:Z
     103: ifeq          127
     106: aload_0
     107: getfield      #29                 // Field hour12:I
     110: bipush        12
     112: irem
     113: istore_3
     114: aload_0
     115: getfield      #7                  // Field isAM:Z
     118: ifne          132
     121: iinc          3, 12
     124: goto          132
     127: aload_0
     128: getfield      #30                 // Field hour:I
     131: istore_3
     132: iload_3
     133: bipush        60
     135: imul
     136: aload_0
     137: getfield      #31                 // Field minute:I
     140: iadd
     141: bipush        60
     143: imul
     144: aload_0
     145: getfield      #32                 // Field second:I
     148: iadd
     149: i2l
     150: ldc2_w        #33                 // long 1000000000l
     153: lmul
     154: aload_0
     155: getfield      #35                 // Field nanos:I
     158: i2l
     159: ladd
     160: lstore        4
     162: lload_1
     163: lload         4
     165: invokestatic  #36                 // Method org/h2/value/ValueTimestamp.fromDateValueAndNanos:(JJ)Lorg/h2/value/ValueTimestamp;
     168: areturn

  private org.h2.value.ValueTimestampTimeZone getResultingValueWithTimeZone();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method getResultingValue:()Lorg/h2/value/ValueTimestamp;
       4: astore_1
       5: aload_1
       6: invokevirtual #38                 // Method org/h2/value/ValueTimestamp.getDateValue:()J
       9: lstore_2
      10: aload_0
      11: getfield      #5                  // Field timeZoneHMValid:Z
      14: ifeq          50
      17: aload_0
      18: getfield      #39                 // Field timeZoneHour:I
      21: bipush        60
      23: imul
      24: aload_0
      25: getfield      #39                 // Field timeZoneHour:I
      28: iflt          38
      31: aload_0
      32: getfield      #40                 // Field timeZoneMinute:I
      35: goto          43
      38: aload_0
      39: getfield      #40                 // Field timeZoneMinute:I
      42: ineg
      43: iadd
      44: i2s
      45: istore        4
      47: goto          95
      50: aload_0
      51: getfield      #41                 // Field timeZone:Ljava/util/TimeZone;
      54: astore        5
      56: aload         5
      58: ifnonnull     66
      61: invokestatic  #42                 // Method java/util/TimeZone.getDefault:()Ljava/util/TimeZone;
      64: astore        5
      66: aload         5
      68: lload_2
      69: aload_0
      70: getfield      #35                 // Field nanos:I
      73: ldc           #43                 // int 1000000
      75: idiv
      76: i2l
      77: invokestatic  #44                 // Method org/h2/util/DateTimeUtils.convertDateTimeValueToMillis:(Ljava/util/TimeZone;JJ)J
      80: lstore        6
      82: aload         5
      84: lload         6
      86: invokevirtual #45                 // Method java/util/TimeZone.getOffset:(J)I
      89: ldc           #46                 // int 60000
      91: idiv
      92: i2s
      93: istore        4
      95: lload_2
      96: aload_1
      97: invokevirtual #47                 // Method org/h2/value/ValueTimestamp.getTimeNanos:()J
     100: iload         4
     102: invokestatic  #48                 // Method org/h2/value/ValueTimestampTimeZone.fromDateValueAndNanos:(JJS)Lorg/h2/value/ValueTimestampTimeZone;
     105: areturn

  java.lang.String getInputStr();
    Code:
       0: aload_0
       1: getfield      #10                 // Field inputStr:Ljava/lang/String;
       4: areturn

  java.lang.String getFormatStr();
    Code:
       0: aload_0
       1: getfield      #14                 // Field formatStr:Ljava/lang/String;
       4: areturn

  java.lang.String getFunctionName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field functionName:Lorg/h2/util/ToDateParser$ConfigParam;
       4: invokevirtual #49                 // Method org/h2/util/ToDateParser$ConfigParam.name:()Ljava/lang/String;
       7: areturn

  private void queryCurrentYearAndMonth();
    Code:
       0: invokestatic  #50                 // Method org/h2/util/DateTimeUtils.getCalendar:()Ljava/util/GregorianCalendar;
       3: astore_1
       4: aload_1
       5: invokestatic  #51                 // Method java/lang/System.currentTimeMillis:()J
       8: invokevirtual #52                 // Method java/util/GregorianCalendar.setTimeInMillis:(J)V
      11: aload_0
      12: aload_1
      13: iconst_1
      14: invokevirtual #53                 // Method java/util/GregorianCalendar.get:(I)I
      17: putfield      #54                 // Field currentYear:I
      20: aload_0
      21: aload_1
      22: iconst_2
      23: invokevirtual #53                 // Method java/util/GregorianCalendar.get:(I)I
      26: iconst_1
      27: iadd
      28: putfield      #55                 // Field currentMonth:I
      31: return

  int getCurrentYear();
    Code:
       0: aload_0
       1: getfield      #54                 // Field currentYear:I
       4: ifne          11
       7: aload_0
       8: invokespecial #56                 // Method queryCurrentYearAndMonth:()V
      11: aload_0
      12: getfield      #54                 // Field currentYear:I
      15: ireturn

  int getCurrentMonth();
    Code:
       0: aload_0
       1: getfield      #55                 // Field currentMonth:I
       4: ifne          11
       7: aload_0
       8: invokespecial #56                 // Method queryCurrentYearAndMonth:()V
      11: aload_0
      12: getfield      #55                 // Field currentMonth:I
      15: ireturn

  void setAbsoluteDay(int);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field doyValid:Z
       5: aload_0
       6: iconst_1
       7: putfield      #3                  // Field absoluteDayValid:Z
      10: aload_0
      11: iload_1
      12: i2l
      13: putfield      #19                 // Field absoluteDay:J
      16: return

  void setBC(boolean);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field doyValid:Z
       5: aload_0
       6: iconst_0
       7: putfield      #3                  // Field absoluteDayValid:Z
      10: aload_0
      11: iload_1
      12: putfield      #23                 // Field bc:Z
      15: return

  void setYear(int);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field doyValid:Z
       5: aload_0
       6: iconst_0
       7: putfield      #3                  // Field absoluteDayValid:Z
      10: aload_0
      11: iload_1
      12: putfield      #21                 // Field year:I
      15: return

  void setMonth(int);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field doyValid:Z
       5: aload_0
       6: iconst_0
       7: putfield      #3                  // Field absoluteDayValid:Z
      10: aload_0
      11: iload_1
      12: putfield      #26                 // Field month:I
      15: aload_0
      16: getfield      #21                 // Field year:I
      19: ifne          29
      22: aload_0
      23: sipush        1970
      26: putfield      #21                 // Field year:I
      29: return

  void setDay(int);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field doyValid:Z
       5: aload_0
       6: iconst_0
       7: putfield      #3                  // Field absoluteDayValid:Z
      10: aload_0
      11: iload_1
      12: putfield      #6                  // Field day:I
      15: aload_0
      16: getfield      #21                 // Field year:I
      19: ifne          29
      22: aload_0
      23: sipush        1970
      26: putfield      #21                 // Field year:I
      29: return

  void setDayOfYear(int);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field doyValid:Z
       5: aload_0
       6: iconst_0
       7: putfield      #3                  // Field absoluteDayValid:Z
      10: aload_0
      11: iload_1
      12: putfield      #25                 // Field dayOfYear:I
      15: return

  void setHour(int);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #4                  // Field hour12Valid:Z
       5: aload_0
       6: iload_1
       7: putfield      #30                 // Field hour:I
      10: return

  void setMinute(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #31                 // Field minute:I
       5: return

  void setSecond(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #32                 // Field second:I
       5: return

  void setNanos(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #35                 // Field nanos:I
       5: return

  void setAmPm(boolean);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field hour12Valid:Z
       5: aload_0
       6: iload_1
       7: putfield      #7                  // Field isAM:Z
      10: return

  void setHour12(int);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field hour12Valid:Z
       5: aload_0
       6: iload_1
       7: putfield      #29                 // Field hour12:I
      10: return

  void setTimeZone(java.util.TimeZone);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #5                  // Field timeZoneHMValid:Z
       5: aload_0
       6: aload_1
       7: putfield      #41                 // Field timeZone:Ljava/util/TimeZone;
      10: return

  void setTimeZoneHour(int);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field timeZoneHMValid:Z
       5: aload_0
       6: iload_1
       7: putfield      #39                 // Field timeZoneHour:I
      10: return

  void setTimeZoneMinute(int);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field timeZoneHMValid:Z
       5: aload_0
       6: iload_1
       7: putfield      #40                 // Field timeZoneMinute:I
      10: return

  private boolean hasToParseData();
    Code:
       0: aload_0
       1: getfield      #14                 // Field formatStr:Ljava/lang/String;
       4: invokevirtual #57                 // Method java/lang/String.length:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private void removeFirstChar();
    Code:
       0: aload_0
       1: getfield      #14                 // Field formatStr:Ljava/lang/String;
       4: invokevirtual #12                 // Method java/lang/String.isEmpty:()Z
       7: ifne          22
      10: aload_0
      11: aload_0
      12: getfield      #14                 // Field formatStr:Ljava/lang/String;
      15: iconst_1
      16: invokevirtual #58                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      19: putfield      #14                 // Field formatStr:Ljava/lang/String;
      22: aload_0
      23: getfield      #10                 // Field inputStr:Ljava/lang/String;
      26: invokevirtual #12                 // Method java/lang/String.isEmpty:()Z
      29: ifne          44
      32: aload_0
      33: aload_0
      34: getfield      #10                 // Field inputStr:Ljava/lang/String;
      37: iconst_1
      38: invokevirtual #58                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      41: putfield      #10                 // Field inputStr:Ljava/lang/String;
      44: return

  private static org.h2.util.ToDateParser parse(org.h2.util.ToDateParser);
    Code:
       0: aload_0
       1: invokespecial #59                 // Method hasToParseData:()Z
       4: ifeq          88
       7: aload_0
       8: invokevirtual #60                 // Method getFormatStr:()Ljava/lang/String;
      11: invokestatic  #61                 // Method org/h2/util/ToDateTokenizer$FormatTokenEnum.getTokensInQuestion:(Ljava/lang/String;)Ljava/util/List;
      14: astore_1
      15: aload_1
      16: invokeinterface #62,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      21: ifeq          31
      24: aload_0
      25: invokespecial #63                 // Method removeFirstChar:()V
      28: goto          0
      31: iconst_0
      32: istore_2
      33: aload_1
      34: invokeinterface #64,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      39: astore_3
      40: aload_3
      41: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          77
      49: aload_3
      50: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #67                 // class org/h2/util/ToDateTokenizer$FormatTokenEnum
      58: astore        4
      60: aload         4
      62: aload_0
      63: invokevirtual #68                 // Method org/h2/util/ToDateTokenizer$FormatTokenEnum.parseFormatStrWithToken:(Lorg/h2/util/ToDateParser;)Z
      66: ifeq          74
      69: iconst_1
      70: istore_2
      71: goto          77
      74: goto          40
      77: iload_2
      78: ifne          85
      81: aload_0
      82: invokespecial #63                 // Method removeFirstChar:()V
      85: goto          0
      88: aload_0
      89: areturn

  void remove(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        33
       4: aload_0
       5: getfield      #10                 // Field inputStr:Ljava/lang/String;
       8: invokevirtual #57                 // Method java/lang/String.length:()I
      11: aload_1
      12: invokevirtual #57                 // Method java/lang/String.length:()I
      15: if_icmplt     33
      18: aload_0
      19: aload_0
      20: getfield      #10                 // Field inputStr:Ljava/lang/String;
      23: aload_1
      24: invokevirtual #57                 // Method java/lang/String.length:()I
      27: invokevirtual #58                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      30: putfield      #10                 // Field inputStr:Ljava/lang/String;
      33: aload_2
      34: ifnull        66
      37: aload_0
      38: getfield      #14                 // Field formatStr:Ljava/lang/String;
      41: invokevirtual #57                 // Method java/lang/String.length:()I
      44: aload_2
      45: invokevirtual #57                 // Method java/lang/String.length:()I
      48: if_icmplt     66
      51: aload_0
      52: aload_0
      53: getfield      #14                 // Field formatStr:Ljava/lang/String;
      56: aload_2
      57: invokevirtual #57                 // Method java/lang/String.length:()I
      60: invokevirtual #58                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      63: putfield      #14                 // Field formatStr:Ljava/lang/String;
      66: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #10                 // Field inputStr:Ljava/lang/String;
       4: invokevirtual #57                 // Method java/lang/String.length:()I
       7: istore_1
       8: aload_0
       9: getfield      #11                 // Field unmodifiedInputStr:Ljava/lang/String;
      12: invokevirtual #57                 // Method java/lang/String.length:()I
      15: istore_2
      16: iload_2
      17: iload_1
      18: isub
      19: istore_3
      20: iload_1
      21: ifgt          28
      24: iload_1
      25: goto          31
      28: iload_1
      29: iconst_1
      30: isub
      31: istore        4
      33: aload_0
      34: getfield      #15                 // Field unmodifiedFormatStr:Ljava/lang/String;
      37: invokevirtual #57                 // Method java/lang/String.length:()I
      40: istore        5
      42: iload         5
      44: aload_0
      45: getfield      #14                 // Field formatStr:Ljava/lang/String;
      48: invokevirtual #57                 // Method java/lang/String.length:()I
      51: isub
      52: istore        6
      54: new           #69                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #70                 // Method java/lang/StringBuilder."<init>":()V
      61: ldc           #71                 // String \n    %s(\'%s\', \'%s\')
      63: iconst_3
      64: anewarray     #72                 // class java/lang/Object
      67: dup
      68: iconst_0
      69: aload_0
      70: getfield      #8                  // Field functionName:Lorg/h2/util/ToDateParser$ConfigParam;
      73: aastore
      74: dup
      75: iconst_1
      76: aload_0
      77: getfield      #11                 // Field unmodifiedInputStr:Ljava/lang/String;
      80: aastore
      81: dup
      82: iconst_2
      83: aload_0
      84: getfield      #15                 // Field unmodifiedFormatStr:Ljava/lang/String;
      87: aastore
      88: invokestatic  #73                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      91: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: ldc           #75                 // String \n      %s^%s ,  %s^ <-- Parsing failed at this point
      96: iconst_3
      97: anewarray     #72                 // class java/lang/Object
     100: dup
     101: iconst_0
     102: new           #69                 // class java/lang/StringBuilder
     105: dup
     106: invokespecial #70                 // Method java/lang/StringBuilder."<init>":()V
     109: ldc           #76                 // String %
     111: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_0
     115: getfield      #8                  // Field functionName:Lorg/h2/util/ToDateParser$ConfigParam;
     118: invokevirtual #49                 // Method org/h2/util/ToDateParser$ConfigParam.name:()Ljava/lang/String;
     121: invokevirtual #57                 // Method java/lang/String.length:()I
     124: iload_3
     125: iadd
     126: invokevirtual #77                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     129: ldc           #78                 // String s
     131: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     137: iconst_1
     138: anewarray     #72                 // class java/lang/Object
     141: dup
     142: iconst_0
     143: ldc           #80                 // String
     145: aastore
     146: invokestatic  #73                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     149: aastore
     150: dup
     151: iconst_1
     152: iload         4
     154: ifgt          162
     157: ldc           #80                 // String
     159: goto          199
     162: new           #69                 // class java/lang/StringBuilder
     165: dup
     166: invokespecial #70                 // Method java/lang/StringBuilder."<init>":()V
     169: ldc           #76                 // String %
     171: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: iload         4
     176: invokevirtual #77                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     179: ldc           #78                 // String s
     181: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     184: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     187: iconst_1
     188: anewarray     #72                 // class java/lang/Object
     191: dup
     192: iconst_0
     193: ldc           #80                 // String
     195: aastore
     196: invokestatic  #73                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     199: aastore
     200: dup
     201: iconst_2
     202: iload         6
     204: ifgt          212
     207: ldc           #80                 // String
     209: goto          249
     212: new           #69                 // class java/lang/StringBuilder
     215: dup
     216: invokespecial #70                 // Method java/lang/StringBuilder."<init>":()V
     219: ldc           #76                 // String %
     221: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     224: iload         6
     226: invokevirtual #77                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     229: ldc           #78                 // String s
     231: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     234: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     237: iconst_1
     238: anewarray     #72                 // class java/lang/Object
     241: dup
     242: iconst_0
     243: ldc           #80                 // String
     245: aastore
     246: invokestatic  #73                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     249: aastore
     250: invokestatic  #73                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     253: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     256: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     259: areturn

  public static org.h2.value.ValueTimestamp toTimestamp(java.lang.String, java.lang.String);
    Code:
       0: getstatic     #81                 // Field org/h2/util/ToDateParser$ConfigParam.TO_TIMESTAMP:Lorg/h2/util/ToDateParser$ConfigParam;
       3: aload_0
       4: aload_1
       5: invokestatic  #82                 // Method getTimestampParser:(Lorg/h2/util/ToDateParser$ConfigParam;Ljava/lang/String;Ljava/lang/String;)Lorg/h2/util/ToDateParser;
       8: astore_2
       9: aload_2
      10: invokespecial #37                 // Method getResultingValue:()Lorg/h2/value/ValueTimestamp;
      13: areturn

  public static org.h2.value.ValueTimestampTimeZone toTimestampTz(java.lang.String, java.lang.String);
    Code:
       0: getstatic     #83                 // Field org/h2/util/ToDateParser$ConfigParam.TO_TIMESTAMP_TZ:Lorg/h2/util/ToDateParser$ConfigParam;
       3: aload_0
       4: aload_1
       5: invokestatic  #82                 // Method getTimestampParser:(Lorg/h2/util/ToDateParser$ConfigParam;Ljava/lang/String;Ljava/lang/String;)Lorg/h2/util/ToDateParser;
       8: astore_2
       9: aload_2
      10: invokespecial #84                 // Method getResultingValueWithTimeZone:()Lorg/h2/value/ValueTimestampTimeZone;
      13: areturn

  public static org.h2.value.ValueTimestamp toDate(java.lang.String, java.lang.String);
    Code:
       0: getstatic     #85                 // Field org/h2/util/ToDateParser$ConfigParam.TO_DATE:Lorg/h2/util/ToDateParser$ConfigParam;
       3: aload_0
       4: aload_1
       5: invokestatic  #82                 // Method getTimestampParser:(Lorg/h2/util/ToDateParser$ConfigParam;Ljava/lang/String;Ljava/lang/String;)Lorg/h2/util/ToDateParser;
       8: astore_2
       9: aload_2
      10: invokespecial #37                 // Method getResultingValue:()Lorg/h2/value/ValueTimestamp;
      13: areturn
}
