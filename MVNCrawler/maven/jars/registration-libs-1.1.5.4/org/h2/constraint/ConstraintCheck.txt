Compiled from "ConstraintCheck.java"
public class org.h2.constraint.ConstraintCheck extends org.h2.constraint.Constraint {
  private org.h2.table.TableFilter filter;

  private org.h2.expression.Expression expr;

  public org.h2.constraint.ConstraintCheck(org.h2.schema.Schema, int, java.lang.String, org.h2.table.Table);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: invokespecial #1                  // Method org/h2/constraint/Constraint."<init>":(Lorg/h2/schema/Schema;ILjava/lang/String;Lorg/h2/table/Table;)V
       9: return

  public org.h2.constraint.Constraint$Type getConstraintType();
    Code:
       0: getstatic     #2                  // Field org/h2/constraint/Constraint$Type.CHECK:Lorg/h2/constraint/Constraint$Type;
       3: areturn

  public void setTableFilter(org.h2.table.TableFilter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field filter:Lorg/h2/table/TableFilter;
       5: return

  public void setExpression(org.h2.expression.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field expr:Lorg/h2/expression/Expression;
       5: return

  public java.lang.String getCreateSQLForCopy(org.h2.table.Table, java.lang.String);
    Code:
       0: new           #5                  // class java/lang/StringBuilder
       3: dup
       4: ldc           #6                  // String ALTER TABLE
       6: invokespecial #7                  // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: astore_3
      10: aload_3
      11: aload_1
      12: invokevirtual #8                  // Method org/h2/table/Table.getSQL:()Ljava/lang/String;
      15: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #10                 // String  ADD CONSTRAINT
      20: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: invokevirtual #11                 // Method org/h2/table/Table.isHidden:()Z
      28: ifeq          38
      31: aload_3
      32: ldc           #12                 // String IF NOT EXISTS
      34: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_3
      39: aload_2
      40: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: pop
      44: aload_0
      45: getfield      #13                 // Field comment:Ljava/lang/String;
      48: ifnull        68
      51: aload_3
      52: ldc           #14                 // String  COMMENT
      54: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_0
      58: getfield      #13                 // Field comment:Ljava/lang/String;
      61: invokestatic  #15                 // Method org/h2/util/StringUtils.quoteStringSQL:(Ljava/lang/String;)Ljava/lang/String;
      64: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: pop
      68: aload_3
      69: ldc           #16                 // String  CHECK
      71: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: getfield      #4                  // Field expr:Lorg/h2/expression/Expression;
      78: invokevirtual #17                 // Method org/h2/expression/Expression.getSQL:()Ljava/lang/String;
      81: invokestatic  #18                 // Method org/h2/util/StringUtils.enclose:(Ljava/lang/String;)Ljava/lang/String;
      84: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: ldc           #19                 // String  NOCHECK
      89: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_3
      94: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: areturn

  private java.lang.String getShortDescription();
    Code:
       0: new           #5                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #22                 // Method getName:()Ljava/lang/String;
      11: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #23                 // String :
      16: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #4                  // Field expr:Lorg/h2/expression/Expression;
      23: invokevirtual #17                 // Method org/h2/expression/Expression.getSQL:()Ljava/lang/String;
      26: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: areturn

  public java.lang.String getCreateSQLWithoutIndexes();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getCreateSQL:()Ljava/lang/String;
       4: areturn

  public java.lang.String getCreateSQL();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field table:Lorg/h2/table/Table;
       5: aload_0
       6: invokevirtual #26                 // Method getSQL:()Ljava/lang/String;
       9: invokevirtual #27                 // Method getCreateSQLForCopy:(Lorg/h2/table/Table;Ljava/lang/String;)Ljava/lang/String;
      12: areturn

  public void removeChildrenAndResources(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #25                 // Field table:Lorg/h2/table/Table;
       4: aload_0
       5: invokevirtual #28                 // Method org/h2/table/Table.removeConstraint:(Lorg/h2/constraint/Constraint;)V
       8: aload_0
       9: getfield      #29                 // Field database:Lorg/h2/engine/Database;
      12: aload_1
      13: aload_0
      14: invokevirtual #30                 // Method getId:()I
      17: invokevirtual #31                 // Method org/h2/engine/Database.removeMeta:(Lorg/h2/engine/Session;I)V
      20: aload_0
      21: aconst_null
      22: putfield      #3                  // Field filter:Lorg/h2/table/TableFilter;
      25: aload_0
      26: aconst_null
      27: putfield      #4                  // Field expr:Lorg/h2/expression/Expression;
      30: aload_0
      31: aconst_null
      32: putfield      #25                 // Field table:Lorg/h2/table/Table;
      35: aload_0
      36: invokevirtual #32                 // Method invalidate:()V
      39: return

  public void checkRow(org.h2.engine.Session, org.h2.table.Table, org.h2.result.Row, org.h2.result.Row);
    Code:
       0: aload         4
       2: ifnonnull     6
       5: return
       6: aload_0
       7: getfield      #3                  // Field filter:Lorg/h2/table/TableFilter;
      10: aload         4
      12: invokevirtual #33                 // Method org/h2/table/TableFilter.set:(Lorg/h2/result/Row;)V
      15: aload_0
      16: getfield      #4                  // Field expr:Lorg/h2/expression/Expression;
      19: aload_1
      20: invokevirtual #34                 // Method org/h2/expression/Expression.getValue:(Lorg/h2/engine/Session;)Lorg/h2/value/Value;
      23: astore        6
      25: aload         6
      27: getstatic     #35                 // Field org/h2/value/ValueNull.INSTANCE:Lorg/h2/value/ValueNull;
      30: if_acmpeq     41
      33: aload         6
      35: invokevirtual #36                 // Method org/h2/value/Value.getBoolean:()Z
      38: ifeq          45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: istore        5
      48: goto          73
      51: astore        6
      53: sipush        23514
      56: aload         6
      58: iconst_1
      59: anewarray     #38                 // class java/lang/String
      62: dup
      63: iconst_0
      64: aload_0
      65: invokespecial #39                 // Method getShortDescription:()Ljava/lang/String;
      68: aastore
      69: invokestatic  #40                 // Method org/h2/message/DbException.get:(ILjava/lang/Throwable;[Ljava/lang/String;)Lorg/h2/message/DbException;
      72: athrow
      73: iload         5
      75: ifne          89
      78: sipush        23513
      81: aload_0
      82: invokespecial #39                 // Method getShortDescription:()Ljava/lang/String;
      85: invokestatic  #41                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      88: athrow
      89: return
    Exception table:
       from    to  target type
          15    48    51   Class org/h2/message/DbException

  public boolean usesIndex(org.h2.index.Index);
    Code:
       0: iconst_0
       1: ireturn

  public void setIndexOwner(org.h2.index.Index);
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method toString:()Ljava/lang/String;
       4: invokestatic  #43                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
       7: pop
       8: return

  public java.util.HashSet<org.h2.table.Column> getReferencedColumns(org.h2.table.Table);
    Code:
       0: new           #44                 // class java/util/HashSet
       3: dup
       4: invokespecial #45                 // Method java/util/HashSet."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #4                  // Field expr:Lorg/h2/expression/Expression;
      12: aload_2
      13: invokestatic  #46                 // Method org/h2/expression/ExpressionVisitor.getColumnsVisitor:(Ljava/util/HashSet;)Lorg/h2/expression/ExpressionVisitor;
      16: invokevirtual #47                 // Method org/h2/expression/Expression.isEverything:(Lorg/h2/expression/ExpressionVisitor;)Z
      19: pop
      20: aload_2
      21: invokevirtual #48                 // Method java/util/HashSet.iterator:()Ljava/util/Iterator;
      24: astore_3
      25: aload_3
      26: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          59
      34: aload_3
      35: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #51                 // class org/h2/table/Column
      43: invokevirtual #52                 // Method org/h2/table/Column.getTable:()Lorg/h2/table/Table;
      46: aload_1
      47: if_acmpeq     25
      50: aload_3
      51: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.remove:()V
      56: goto          25
      59: aload_2
      60: areturn

  public org.h2.expression.Expression getExpression();
    Code:
       0: aload_0
       1: getfield      #4                  // Field expr:Lorg/h2/expression/Expression;
       4: areturn

  public boolean isBefore();
    Code:
       0: iconst_1
       1: ireturn

  public void checkExistingData(org.h2.engine.Session);
    Code:
       0: aload_1
       1: invokevirtual #54                 // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
       4: invokevirtual #55                 // Method org/h2/engine/Database.isStarting:()Z
       7: ifeq          11
      10: return
      11: new           #5                  // class java/lang/StringBuilder
      14: dup
      15: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #56                 // String SELECT 1 FROM
      20: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: getfield      #3                  // Field filter:Lorg/h2/table/TableFilter;
      27: invokevirtual #57                 // Method org/h2/table/TableFilter.getTable:()Lorg/h2/table/Table;
      30: invokevirtual #8                  // Method org/h2/table/Table.getSQL:()Ljava/lang/String;
      33: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #58                 // String  WHERE NOT(
      38: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #4                  // Field expr:Lorg/h2/expression/Expression;
      45: invokevirtual #17                 // Method org/h2/expression/Expression.getSQL:()Ljava/lang/String;
      48: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #59                 // String )
      53: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: astore_2
      60: aload_1
      61: aload_2
      62: invokevirtual #60                 // Method org/h2/engine/Session.prepare:(Ljava/lang/String;)Lorg/h2/command/Prepared;
      65: iconst_1
      66: invokevirtual #61                 // Method org/h2/command/Prepared.query:(I)Lorg/h2/result/ResultInterface;
      69: astore_3
      70: aload_3
      71: invokeinterface #62,  1           // InterfaceMethod org/h2/result/ResultInterface.next:()Z
      76: ifeq          90
      79: sipush        23513
      82: aload_0
      83: invokevirtual #22                 // Method getName:()Ljava/lang/String;
      86: invokestatic  #41                 // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      89: athrow
      90: return

  public org.h2.index.Index getUniqueIndex();
    Code:
       0: aconst_null
       1: areturn

  public void rebuild();
    Code:
       0: return

  public boolean isEverything(org.h2.expression.ExpressionVisitor);
    Code:
       0: aload_0
       1: getfield      #4                  // Field expr:Lorg/h2/expression/Expression;
       4: aload_1
       5: invokevirtual #47                 // Method org/h2/expression/Expression.isEverything:(Lorg/h2/expression/ExpressionVisitor;)Z
       8: ireturn
}
