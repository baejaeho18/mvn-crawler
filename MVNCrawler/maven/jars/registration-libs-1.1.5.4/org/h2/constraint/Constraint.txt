Compiled from "Constraint.java"
public abstract class org.h2.constraint.Constraint extends org.h2.schema.SchemaObjectBase implements java.lang.Comparable<org.h2.constraint.Constraint> {
  protected org.h2.table.Table table;

  org.h2.constraint.Constraint(org.h2.schema.Schema, int, java.lang.String, org.h2.table.Table);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/schema/SchemaObjectBase."<init>":()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: aload_3
       8: iconst_1
       9: invokevirtual #2                  // Method initSchemaObjectBase:(Lorg/h2/schema/Schema;ILjava/lang/String;I)V
      12: aload_0
      13: aload         4
      15: putfield      #3                  // Field table:Lorg/h2/table/Table;
      18: aload_0
      19: aload         4
      21: invokevirtual #4                  // Method org/h2/table/Table.isTemporary:()Z
      24: invokevirtual #5                  // Method setTemporary:(Z)V
      27: return

  public abstract org.h2.constraint.Constraint$Type getConstraintType();

  public abstract void checkRow(org.h2.engine.Session, org.h2.table.Table, org.h2.result.Row, org.h2.result.Row);

  public abstract boolean usesIndex(org.h2.index.Index);

  public abstract void setIndexOwner(org.h2.index.Index);

  public abstract java.util.HashSet<org.h2.table.Column> getReferencedColumns(org.h2.table.Table);

  public abstract java.lang.String getCreateSQLWithoutIndexes();

  public abstract boolean isBefore();

  public abstract void checkExistingData(org.h2.engine.Session);

  public abstract void rebuild();

  public abstract org.h2.index.Index getUniqueIndex();

  public void checkRename();
    Code:
       0: return

  public int getType();
    Code:
       0: iconst_5
       1: ireturn

  public org.h2.table.Table getTable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field table:Lorg/h2/table/Table;
       4: areturn

  public org.h2.table.Table getRefTable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field table:Lorg/h2/table/Table;
       4: areturn

  public java.lang.String getDropSQL();
    Code:
       0: aconst_null
       1: areturn

  public int compareTo(org.h2.constraint.Constraint);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_0
       8: invokevirtual #6                  // Method getConstraintType:()Lorg/h2/constraint/Constraint$Type;
      11: invokevirtual #7                  // Method org/h2/constraint/Constraint$Type.ordinal:()I
      14: aload_1
      15: invokevirtual #6                  // Method getConstraintType:()Lorg/h2/constraint/Constraint$Type;
      18: invokevirtual #7                  // Method org/h2/constraint/Constraint$Type.ordinal:()I
      21: invokestatic  #8                  // Method java/lang/Integer.compare:(II)I
      24: ireturn

  public boolean isHidden();
    Code:
       0: aload_0
       1: getfield      #3                  // Field table:Lorg/h2/table/Table;
       4: invokevirtual #9                  // Method org/h2/table/Table.isHidden:()Z
       7: ireturn

  public boolean isEverything(org.h2.expression.ExpressionVisitor);
    Code:
       0: iconst_1
       1: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #10                 // class org/h2/constraint/Constraint
       5: invokevirtual #11                 // Method compareTo:(Lorg/h2/constraint/Constraint;)I
       8: ireturn
}
