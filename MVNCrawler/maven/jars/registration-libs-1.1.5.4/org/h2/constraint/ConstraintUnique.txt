Compiled from "ConstraintUnique.java"
public class org.h2.constraint.ConstraintUnique extends org.h2.constraint.Constraint {
  private org.h2.index.Index index;

  private boolean indexOwner;

  private org.h2.table.IndexColumn[] columns;

  private final boolean primaryKey;

  public org.h2.constraint.ConstraintUnique(org.h2.schema.Schema, int, java.lang.String, org.h2.table.Table, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: invokespecial #1                  // Method org/h2/constraint/Constraint."<init>":(Lorg/h2/schema/Schema;ILjava/lang/String;Lorg/h2/table/Table;)V
       9: aload_0
      10: iload         5
      12: putfield      #2                  // Field primaryKey:Z
      15: return

  public org.h2.constraint.Constraint$Type getConstraintType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field primaryKey:Z
       4: ifeq          13
       7: getstatic     #3                  // Field org/h2/constraint/Constraint$Type.PRIMARY_KEY:Lorg/h2/constraint/Constraint$Type;
      10: goto          16
      13: getstatic     #4                  // Field org/h2/constraint/Constraint$Type.UNIQUE:Lorg/h2/constraint/Constraint$Type;
      16: areturn

  public java.lang.String getCreateSQLForCopy(org.h2.table.Table, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #5                  // Method getCreateSQLForCopy:(Lorg/h2/table/Table;Ljava/lang/String;Z)Ljava/lang/String;
       7: areturn

  private java.lang.String getCreateSQLForCopy(org.h2.table.Table, java.lang.String, boolean);
    Code:
       0: new           #6                  // class org/h2/util/StatementBuilder
       3: dup
       4: ldc           #7                  // String ALTER TABLE
       6: invokespecial #8                  // Method org/h2/util/StatementBuilder."<init>":(Ljava/lang/String;)V
       9: astore        4
      11: aload         4
      13: aload_1
      14: invokevirtual #9                  // Method org/h2/table/Table.getSQL:()Ljava/lang/String;
      17: invokevirtual #10                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      20: ldc           #11                 // String  ADD CONSTRAINT
      22: invokevirtual #10                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      25: pop
      26: aload_1
      27: invokevirtual #12                 // Method org/h2/table/Table.isHidden:()Z
      30: ifeq          41
      33: aload         4
      35: ldc           #13                 // String IF NOT EXISTS
      37: invokevirtual #10                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      40: pop
      41: aload         4
      43: aload_2
      44: invokevirtual #10                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      47: pop
      48: aload_0
      49: getfield      #14                 // Field comment:Ljava/lang/String;
      52: ifnull        73
      55: aload         4
      57: ldc           #15                 // String  COMMENT
      59: invokevirtual #10                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      62: aload_0
      63: getfield      #14                 // Field comment:Ljava/lang/String;
      66: invokestatic  #16                 // Method org/h2/util/StringUtils.quoteStringSQL:(Ljava/lang/String;)Ljava/lang/String;
      69: invokevirtual #10                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      72: pop
      73: aload         4
      75: bipush        32
      77: invokevirtual #17                 // Method org/h2/util/StatementBuilder.append:(C)Lorg/h2/util/StatementBuilder;
      80: aload_0
      81: invokevirtual #18                 // Method getConstraintType:()Lorg/h2/constraint/Constraint$Type;
      84: invokevirtual #19                 // Method org/h2/constraint/Constraint$Type.getSqlName:()Ljava/lang/String;
      87: invokevirtual #10                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
      90: bipush        40
      92: invokevirtual #17                 // Method org/h2/util/StatementBuilder.append:(C)Lorg/h2/util/StatementBuilder;
      95: pop
      96: aload_0
      97: getfield      #20                 // Field columns:[Lorg/h2/table/IndexColumn;
     100: astore        5
     102: aload         5
     104: arraylength
     105: istore        6
     107: iconst_0
     108: istore        7
     110: iload         7
     112: iload         6
     114: if_icmpge     154
     117: aload         5
     119: iload         7
     121: aaload
     122: astore        8
     124: aload         4
     126: ldc           #21                 // String ,
     128: invokevirtual #22                 // Method org/h2/util/StatementBuilder.appendExceptFirst:(Ljava/lang/String;)V
     131: aload         4
     133: aload         8
     135: getfield      #23                 // Field org/h2/table/IndexColumn.column:Lorg/h2/table/Column;
     138: invokevirtual #24                 // Method org/h2/table/Column.getName:()Ljava/lang/String;
     141: invokestatic  #25                 // Method org/h2/command/Parser.quoteIdentifier:(Ljava/lang/String;)Ljava/lang/String;
     144: invokevirtual #10                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
     147: pop
     148: iinc          7, 1
     151: goto          110
     154: aload         4
     156: bipush        41
     158: invokevirtual #17                 // Method org/h2/util/StatementBuilder.append:(C)Lorg/h2/util/StatementBuilder;
     161: pop
     162: iload_3
     163: ifeq          201
     166: aload_0
     167: getfield      #26                 // Field indexOwner:Z
     170: ifeq          201
     173: aload_1
     174: aload_0
     175: getfield      #27                 // Field table:Lorg/h2/table/Table;
     178: if_acmpne     201
     181: aload         4
     183: ldc           #28                 // String  INDEX
     185: invokevirtual #10                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
     188: aload_0
     189: getfield      #29                 // Field index:Lorg/h2/index/Index;
     192: invokeinterface #30,  1           // InterfaceMethod org/h2/index/Index.getSQL:()Ljava/lang/String;
     197: invokevirtual #10                 // Method org/h2/util/StatementBuilder.append:(Ljava/lang/String;)Lorg/h2/util/StatementBuilder;
     200: pop
     201: aload         4
     203: invokevirtual #31                 // Method org/h2/util/StatementBuilder.toString:()Ljava/lang/String;
     206: areturn

  public java.lang.String getCreateSQLWithoutIndexes();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field table:Lorg/h2/table/Table;
       5: aload_0
       6: invokevirtual #32                 // Method getSQL:()Ljava/lang/String;
       9: iconst_0
      10: invokespecial #5                  // Method getCreateSQLForCopy:(Lorg/h2/table/Table;Ljava/lang/String;Z)Ljava/lang/String;
      13: areturn

  public java.lang.String getCreateSQL();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field table:Lorg/h2/table/Table;
       5: aload_0
       6: invokevirtual #32                 // Method getSQL:()Ljava/lang/String;
       9: invokevirtual #33                 // Method getCreateSQLForCopy:(Lorg/h2/table/Table;Ljava/lang/String;)Ljava/lang/String;
      12: areturn

  public void setColumns(org.h2.table.IndexColumn[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field columns:[Lorg/h2/table/IndexColumn;
       5: return

  public org.h2.table.IndexColumn[] getColumns();
    Code:
       0: aload_0
       1: getfield      #20                 // Field columns:[Lorg/h2/table/IndexColumn;
       4: areturn

  public void setIndex(org.h2.index.Index, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field index:Lorg/h2/index/Index;
       5: aload_0
       6: iload_2
       7: putfield      #26                 // Field indexOwner:Z
      10: return

  public void removeChildrenAndResources(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #27                 // Field table:Lorg/h2/table/Table;
       4: aload_0
       5: invokevirtual #34                 // Method org/h2/table/Table.removeConstraint:(Lorg/h2/constraint/Constraint;)V
       8: aload_0
       9: getfield      #26                 // Field indexOwner:Z
      12: ifeq          27
      15: aload_0
      16: getfield      #27                 // Field table:Lorg/h2/table/Table;
      19: aload_1
      20: aload_0
      21: getfield      #29                 // Field index:Lorg/h2/index/Index;
      24: invokevirtual #35                 // Method org/h2/table/Table.removeIndexOrTransferOwnership:(Lorg/h2/engine/Session;Lorg/h2/index/Index;)V
      27: aload_0
      28: getfield      #36                 // Field database:Lorg/h2/engine/Database;
      31: aload_1
      32: aload_0
      33: invokevirtual #37                 // Method getId:()I
      36: invokevirtual #38                 // Method org/h2/engine/Database.removeMeta:(Lorg/h2/engine/Session;I)V
      39: aload_0
      40: aconst_null
      41: putfield      #29                 // Field index:Lorg/h2/index/Index;
      44: aload_0
      45: aconst_null
      46: putfield      #20                 // Field columns:[Lorg/h2/table/IndexColumn;
      49: aload_0
      50: aconst_null
      51: putfield      #27                 // Field table:Lorg/h2/table/Table;
      54: aload_0
      55: invokevirtual #39                 // Method invalidate:()V
      58: return

  public void checkRow(org.h2.engine.Session, org.h2.table.Table, org.h2.result.Row, org.h2.result.Row);
    Code:
       0: return

  public boolean usesIndex(org.h2.index.Index);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #29                 // Field index:Lorg/h2/index/Index;
       5: if_acmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public void setIndexOwner(org.h2.index.Index);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #26                 // Field indexOwner:Z
       5: return

  public java.util.HashSet<org.h2.table.Column> getReferencedColumns(org.h2.table.Table);
    Code:
       0: new           #40                 // class java/util/HashSet
       3: dup
       4: invokespecial #41                 // Method java/util/HashSet."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #20                 // Field columns:[Lorg/h2/table/IndexColumn;
      12: astore_3
      13: aload_3
      14: arraylength
      15: istore        4
      17: iconst_0
      18: istore        5
      20: iload         5
      22: iload         4
      24: if_icmpge     49
      27: aload_3
      28: iload         5
      30: aaload
      31: astore        6
      33: aload_2
      34: aload         6
      36: getfield      #23                 // Field org/h2/table/IndexColumn.column:Lorg/h2/table/Column;
      39: invokevirtual #42                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      42: pop
      43: iinc          5, 1
      46: goto          20
      49: aload_2
      50: areturn

  public boolean isBefore();
    Code:
       0: iconst_1
       1: ireturn

  public void checkExistingData(org.h2.engine.Session);
    Code:
       0: return

  public org.h2.index.Index getUniqueIndex();
    Code:
       0: aload_0
       1: getfield      #29                 // Field index:Lorg/h2/index/Index;
       4: areturn

  public void rebuild();
    Code:
       0: return
}
