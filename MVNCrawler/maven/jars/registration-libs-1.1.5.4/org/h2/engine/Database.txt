Compiled from "Database.java"
public class org.h2.engine.Database implements org.h2.store.DataHandler {
  private static int initialPowerOffCount;

  private static final java.lang.ThreadLocal<org.h2.engine.Session> META_LOCK_DEBUGGING;

  private static final java.lang.ThreadLocal<java.lang.Throwable> META_LOCK_DEBUGGING_STACK;

  private static final java.lang.String SYSTEM_USER_NAME;

  private final boolean persistent;

  private final java.lang.String databaseName;

  private final java.lang.String databaseShortName;

  private final java.lang.String databaseURL;

  private final java.lang.String cipher;

  private final byte[] filePasswordHash;

  private final byte[] fileEncryptionKey;

  private final java.util.HashMap<java.lang.String, org.h2.engine.Role> roles;

  private final java.util.HashMap<java.lang.String, org.h2.engine.User> users;

  private final java.util.HashMap<java.lang.String, org.h2.engine.Setting> settings;

  private final java.util.HashMap<java.lang.String, org.h2.schema.Schema> schemas;

  private final java.util.HashMap<java.lang.String, org.h2.engine.Right> rights;

  private final java.util.HashMap<java.lang.String, org.h2.engine.UserDataType> userDataTypes;

  private final java.util.HashMap<java.lang.String, org.h2.engine.UserAggregate> aggregates;

  private final java.util.HashMap<java.lang.String, org.h2.engine.Comment> comments;

  private final java.util.HashMap<java.lang.String, org.h2.api.TableEngine> tableEngines;

  private final java.util.Set<org.h2.engine.Session> userSessions;

  private final java.util.concurrent.atomic.AtomicReference<org.h2.engine.Session> exclusiveSession;

  private final org.h2.util.BitField objectIds;

  private final java.lang.Object lobSyncObject;

  private org.h2.schema.Schema mainSchema;

  private org.h2.schema.Schema infoSchema;

  private int nextSessionId;

  private int nextTempTableId;

  private org.h2.engine.User systemUser;

  private org.h2.engine.Session systemSession;

  private org.h2.engine.Session lobSession;

  private org.h2.table.Table meta;

  private org.h2.index.Index metaIdIndex;

  private org.h2.store.FileLock lock;

  private org.h2.store.WriterThread writer;

  private boolean starting;

  private org.h2.message.TraceSystem traceSystem;

  private org.h2.message.Trace trace;

  private final org.h2.store.FileLockMethod fileLockMethod;

  private org.h2.engine.Role publicRole;

  private final java.util.concurrent.atomic.AtomicLong modificationDataId;

  private final java.util.concurrent.atomic.AtomicLong modificationMetaId;

  private org.h2.value.CompareMode compareMode;

  private java.lang.String cluster;

  private boolean readOnly;

  private int writeDelay;

  private org.h2.api.DatabaseEventListener eventListener;

  private int maxMemoryRows;

  private int maxMemoryUndo;

  private int lockMode;

  private int maxLengthInplaceLob;

  private int allowLiterals;

  private int powerOffCount;

  private int closeDelay;

  private org.h2.engine.DatabaseCloser delayedCloser;

  private volatile boolean closing;

  private boolean ignoreCase;

  private boolean deleteFilesOnDisconnect;

  private java.lang.String lobCompressionAlgorithm;

  private boolean optimizeReuseResults;

  private final java.lang.String cacheType;

  private final java.lang.String accessModeData;

  private boolean referentialIntegrity;

  private boolean multiVersion;

  private org.h2.engine.DatabaseCloser closeOnExit;

  private org.h2.engine.Mode mode;

  private boolean multiThreaded;

  private int maxOperationMemory;

  private org.h2.util.SmallLRUCache<java.lang.String, java.lang.String[]> lobFileListCache;

  private final boolean autoServerMode;

  private final int autoServerPort;

  private org.h2.tools.Server server;

  private java.util.HashMap<org.h2.table.TableLinkConnection, org.h2.table.TableLinkConnection> linkConnections;

  private final org.h2.util.TempFileDeleter tempFileDeleter;

  private org.h2.store.PageStore pageStore;

  private java.util.Properties reconnectLastLock;

  private volatile long reconnectCheckNext;

  private volatile boolean reconnectChangePending;

  private volatile int checkpointAllowed;

  private volatile boolean checkpointRunning;

  private final java.lang.Object reconnectSync;

  private int cacheSize;

  private int compactMode;

  private org.h2.util.SourceCompiler compiler;

  private volatile boolean metaTablesInitialized;

  private boolean flushOnEachCommit;

  private org.h2.store.LobStorageInterface lobStorage;

  private final int pageSize;

  private int defaultTableType;

  private final org.h2.engine.DbSettings dbSettings;

  private final long reconnectCheckDelayNs;

  private int logMode;

  private org.h2.mvstore.db.MVTableEngine$Store mvStore;

  private int retentionTime;

  private boolean allowBuiltinAliasOverride;

  private org.h2.message.DbException backgroundException;

  private org.h2.api.JavaObjectSerializer javaObjectSerializer;

  private java.lang.String javaObjectSerializerName;

  private volatile boolean javaObjectSerializerInitialized;

  private boolean queryStatistics;

  private int queryStatisticsMaxEntries;

  private org.h2.engine.QueryStatisticsData queryStatisticsData;

  private org.h2.result.RowFactory rowFactory;

  static final boolean $assertionsDisabled;

  public org.h2.engine.Database(org.h2.engine.ConnectionInfo, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field roles:Ljava/util/HashMap;
      15: aload_0
      16: new           #2                  // class java/util/HashMap
      19: dup
      20: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      23: putfield      #5                  // Field users:Ljava/util/HashMap;
      26: aload_0
      27: new           #2                  // class java/util/HashMap
      30: dup
      31: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      34: putfield      #6                  // Field settings:Ljava/util/HashMap;
      37: aload_0
      38: new           #2                  // class java/util/HashMap
      41: dup
      42: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      45: putfield      #7                  // Field schemas:Ljava/util/HashMap;
      48: aload_0
      49: new           #2                  // class java/util/HashMap
      52: dup
      53: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      56: putfield      #8                  // Field rights:Ljava/util/HashMap;
      59: aload_0
      60: new           #2                  // class java/util/HashMap
      63: dup
      64: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      67: putfield      #9                  // Field userDataTypes:Ljava/util/HashMap;
      70: aload_0
      71: new           #2                  // class java/util/HashMap
      74: dup
      75: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      78: putfield      #10                 // Field aggregates:Ljava/util/HashMap;
      81: aload_0
      82: new           #2                  // class java/util/HashMap
      85: dup
      86: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      89: putfield      #11                 // Field comments:Ljava/util/HashMap;
      92: aload_0
      93: new           #2                  // class java/util/HashMap
      96: dup
      97: invokespecial #3                  // Method java/util/HashMap."<init>":()V
     100: putfield      #12                 // Field tableEngines:Ljava/util/HashMap;
     103: aload_0
     104: new           #13                 // class java/util/HashSet
     107: dup
     108: invokespecial #14                 // Method java/util/HashSet."<init>":()V
     111: invokestatic  #15                 // Method java/util/Collections.synchronizedSet:(Ljava/util/Set;)Ljava/util/Set;
     114: putfield      #16                 // Field userSessions:Ljava/util/Set;
     117: aload_0
     118: new           #17                 // class java/util/concurrent/atomic/AtomicReference
     121: dup
     122: invokespecial #18                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
     125: putfield      #19                 // Field exclusiveSession:Ljava/util/concurrent/atomic/AtomicReference;
     128: aload_0
     129: new           #20                 // class org/h2/util/BitField
     132: dup
     133: invokespecial #21                 // Method org/h2/util/BitField."<init>":()V
     136: putfield      #22                 // Field objectIds:Lorg/h2/util/BitField;
     139: aload_0
     140: new           #23                 // class java/lang/Object
     143: dup
     144: invokespecial #1                  // Method java/lang/Object."<init>":()V
     147: putfield      #24                 // Field lobSyncObject:Ljava/lang/Object;
     150: aload_0
     151: new           #25                 // class java/util/concurrent/atomic/AtomicLong
     154: dup
     155: invokespecial #26                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
     158: putfield      #27                 // Field modificationDataId:Ljava/util/concurrent/atomic/AtomicLong;
     161: aload_0
     162: new           #25                 // class java/util/concurrent/atomic/AtomicLong
     165: dup
     166: invokespecial #26                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
     169: putfield      #28                 // Field modificationMetaId:Ljava/util/concurrent/atomic/AtomicLong;
     172: aload_0
     173: ldc           #29                 // String \'\'
     175: putfield      #30                 // Field cluster:Ljava/lang/String;
     178: aload_0
     179: sipush        500
     182: putfield      #31                 // Field writeDelay:I
     185: aload_0
     186: getstatic     #32                 // Field org/h2/engine/SysProperties.MAX_MEMORY_ROWS:I
     189: putfield      #33                 // Field maxMemoryRows:I
     192: aload_0
     193: ldc           #34                 // int 50000
     195: putfield      #35                 // Field maxMemoryUndo:I
     198: aload_0
     199: iconst_3
     200: putfield      #36                 // Field lockMode:I
     203: aload_0
     204: iconst_2
     205: putfield      #37                 // Field allowLiterals:I
     208: aload_0
     209: getstatic     #38                 // Field initialPowerOffCount:I
     212: putfield      #39                 // Field powerOffCount:I
     215: aload_0
     216: iconst_1
     217: putfield      #40                 // Field optimizeReuseResults:Z
     220: aload_0
     221: iconst_1
     222: putfield      #41                 // Field referentialIntegrity:Z
     225: aload_0
     226: invokestatic  #42                 // Method org/h2/engine/Mode.getRegular:()Lorg/h2/engine/Mode;
     229: putfield      #43                 // Field mode:Lorg/h2/engine/Mode;
     232: aload_0
     233: ldc           #44                 // int 100000
     235: putfield      #45                 // Field maxOperationMemory:I
     238: aload_0
     239: invokestatic  #46                 // Method org/h2/util/TempFileDeleter.getInstance:()Lorg/h2/util/TempFileDeleter;
     242: putfield      #47                 // Field tempFileDeleter:Lorg/h2/util/TempFileDeleter;
     245: aload_0
     246: new           #23                 // class java/lang/Object
     249: dup
     250: invokespecial #1                  // Method java/lang/Object."<init>":()V
     253: putfield      #48                 // Field reconnectSync:Ljava/lang/Object;
     256: aload_0
     257: iconst_0
     258: putfield      #49                 // Field defaultTableType:I
     261: aload_0
     262: bipush        100
     264: putfield      #50                 // Field queryStatisticsMaxEntries:I
     267: aload_0
     268: getstatic     #51                 // Field org/h2/result/RowFactory.DEFAULT:Lorg/h2/result/RowFactory;
     271: putfield      #52                 // Field rowFactory:Lorg/h2/result/RowFactory;
     274: getstatic     #53                 // Field META_LOCK_DEBUGGING:Ljava/lang/ThreadLocal;
     277: aconst_null
     278: invokevirtual #54                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     281: getstatic     #55                 // Field META_LOCK_DEBUGGING_STACK:Ljava/lang/ThreadLocal;
     284: aconst_null
     285: invokevirtual #54                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     288: aload_1
     289: invokevirtual #56                 // Method org/h2/engine/ConnectionInfo.getName:()Ljava/lang/String;
     292: astore_3
     293: aload_0
     294: aload_1
     295: invokevirtual #57                 // Method org/h2/engine/ConnectionInfo.getDbSettings:()Lorg/h2/engine/DbSettings;
     298: putfield      #58                 // Field dbSettings:Lorg/h2/engine/DbSettings;
     301: aload_0
     302: getstatic     #59                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     305: aload_0
     306: getfield      #58                 // Field dbSettings:Lorg/h2/engine/DbSettings;
     309: getfield      #60                 // Field org/h2/engine/DbSettings.reconnectCheckDelay:I
     312: i2l
     313: invokevirtual #61                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     316: putfield      #62                 // Field reconnectCheckDelayNs:J
     319: aload_0
     320: aconst_null
     321: iconst_0
     322: invokestatic  #63                 // Method org/h2/value/CompareMode.getInstance:(Ljava/lang/String;I)Lorg/h2/value/CompareMode;
     325: putfield      #64                 // Field compareMode:Lorg/h2/value/CompareMode;
     328: aload_0
     329: aload_1
     330: invokevirtual #65                 // Method org/h2/engine/ConnectionInfo.isPersistent:()Z
     333: putfield      #66                 // Field persistent:Z
     336: aload_0
     337: aload_1
     338: invokevirtual #67                 // Method org/h2/engine/ConnectionInfo.getFilePasswordHash:()[B
     341: putfield      #68                 // Field filePasswordHash:[B
     344: aload_0
     345: aload_1
     346: invokevirtual #69                 // Method org/h2/engine/ConnectionInfo.getFileEncryptionKey:()[B
     349: putfield      #70                 // Field fileEncryptionKey:[B
     352: aload_0
     353: aload_3
     354: putfield      #71                 // Field databaseName:Ljava/lang/String;
     357: aload_0
     358: aload_0
     359: invokespecial #72                 // Method parseDatabaseShortName:()Ljava/lang/String;
     362: putfield      #73                 // Field databaseShortName:Ljava/lang/String;
     365: aload_0
     366: sipush        256
     369: putfield      #74                 // Field maxLengthInplaceLob:I
     372: aload_0
     373: aload_2
     374: putfield      #75                 // Field cipher:Ljava/lang/String;
     377: aload_1
     378: ldc           #76                 // String FILE_LOCK
     380: aconst_null
     381: invokevirtual #77                 // Method org/h2/engine/ConnectionInfo.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     384: astore        4
     386: aload_0
     387: aload_1
     388: ldc           #78                 // String ACCESS_MODE_DATA
     390: ldc           #79                 // String rw
     392: invokevirtual #77                 // Method org/h2/engine/ConnectionInfo.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     395: invokestatic  #80                 // Method org/h2/util/StringUtils.toLowerEnglish:(Ljava/lang/String;)Ljava/lang/String;
     398: putfield      #81                 // Field accessModeData:Ljava/lang/String;
     401: aload_0
     402: aload_1
     403: ldc           #82                 // String AUTO_SERVER
     405: iconst_0
     406: invokevirtual #83                 // Method org/h2/engine/ConnectionInfo.getProperty:(Ljava/lang/String;Z)Z
     409: putfield      #84                 // Field autoServerMode:Z
     412: aload_0
     413: aload_1
     414: ldc           #85                 // String AUTO_SERVER_PORT
     416: iconst_0
     417: invokevirtual #86                 // Method org/h2/engine/ConnectionInfo.getProperty:(Ljava/lang/String;I)I
     420: putfield      #87                 // Field autoServerPort:I
     423: ldc           #88                 // int 65536
     425: invokestatic  #89                 // Method org/h2/util/Utils.scaleForAvailableMemory:(I)I
     428: istore        5
     430: aload_0
     431: aload_1
     432: ldc           #90                 // String CACHE_SIZE
     434: iload         5
     436: invokevirtual #86                 // Method org/h2/engine/ConnectionInfo.getProperty:(Ljava/lang/String;I)I
     439: putfield      #91                 // Field cacheSize:I
     442: aload_0
     443: aload_1
     444: ldc           #92                 // String PAGE_SIZE
     446: sipush        4096
     449: invokevirtual #86                 // Method org/h2/engine/ConnectionInfo.getProperty:(Ljava/lang/String;I)I
     452: putfield      #93                 // Field pageSize:I
     455: ldc           #94                 // String r
     457: aload_0
     458: getfield      #81                 // Field accessModeData:Ljava/lang/String;
     461: invokevirtual #95                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     464: ifeq          472
     467: aload_0
     468: iconst_1
     469: putfield      #96                 // Field readOnly:Z
     472: aload_0
     473: getfield      #58                 // Field dbSettings:Lorg/h2/engine/DbSettings;
     476: getfield      #97                 // Field org/h2/engine/DbSettings.mvStore:Z
     479: ifeq          514
     482: aload         4
     484: ifnonnull     514
     487: aload_0
     488: getfield      #84                 // Field autoServerMode:Z
     491: ifeq          504
     494: aload_0
     495: getstatic     #98                 // Field org/h2/store/FileLockMethod.FILE:Lorg/h2/store/FileLockMethod;
     498: putfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
     501: goto          523
     504: aload_0
     505: getstatic     #100                // Field org/h2/store/FileLockMethod.FS:Lorg/h2/store/FileLockMethod;
     508: putfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
     511: goto          523
     514: aload_0
     515: aload         4
     517: invokestatic  #101                // Method org/h2/store/FileLock.getFileLockMethod:(Ljava/lang/String;)Lorg/h2/store/FileLockMethod;
     520: putfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
     523: aload_0
     524: getfield      #58                 // Field dbSettings:Lorg/h2/engine/DbSettings;
     527: getfield      #97                 // Field org/h2/engine/DbSettings.mvStore:Z
     530: ifeq          549
     533: aload_0
     534: getfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
     537: getstatic     #102                // Field org/h2/store/FileLockMethod.SERIALIZED:Lorg/h2/store/FileLockMethod;
     540: if_acmpne     549
     543: ldc           #103                // String MV_STORE combined with FILE_LOCK=SERIALIZED
     545: invokestatic  #104                // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
     548: athrow
     549: aload_0
     550: aload_1
     551: invokevirtual #105                // Method org/h2/engine/ConnectionInfo.getURL:()Ljava/lang/String;
     554: putfield      #106                // Field databaseURL:Ljava/lang/String;
     557: aload_1
     558: ldc           #107                // String DATABASE_EVENT_LISTENER
     560: aconst_null
     561: invokevirtual #108                // Method org/h2/engine/ConnectionInfo.removeProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     564: astore        6
     566: aload         6
     568: ifnull        588
     571: aload         6
     573: iconst_1
     574: iconst_1
     575: ldc           #109                // String \'
     577: invokestatic  #110                // Method org/h2/util/StringUtils.trim:(Ljava/lang/String;ZZLjava/lang/String;)Ljava/lang/String;
     580: astore        6
     582: aload_0
     583: aload         6
     585: invokevirtual #111                // Method setEventListenerClass:(Ljava/lang/String;)V
     588: aload_1
     589: ldc           #112                // String MODE
     591: aconst_null
     592: invokevirtual #108                // Method org/h2/engine/ConnectionInfo.removeProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     595: astore        7
     597: aload         7
     599: ifnull        611
     602: aload_0
     603: aload         7
     605: invokestatic  #113                // Method org/h2/engine/Mode.getInstance:(Ljava/lang/String;)Lorg/h2/engine/Mode;
     608: putfield      #43                 // Field mode:Lorg/h2/engine/Mode;
     611: aload_0
     612: aload_1
     613: ldc           #114                // String MVCC
     615: aload_0
     616: getfield      #58                 // Field dbSettings:Lorg/h2/engine/DbSettings;
     619: getfield      #97                 // Field org/h2/engine/DbSettings.mvStore:Z
     622: invokevirtual #83                 // Method org/h2/engine/ConnectionInfo.getProperty:(Ljava/lang/String;Z)Z
     625: putfield      #115                // Field multiVersion:Z
     628: aload_0
     629: aload_1
     630: ldc           #116                // String LOG
     632: iconst_2
     633: invokevirtual #86                 // Method org/h2/engine/ConnectionInfo.getProperty:(Ljava/lang/String;I)I
     636: putfield      #117                // Field logMode:I
     639: aload_0
     640: aload_1
     641: ldc           #118                // String JAVA_OBJECT_SERIALIZER
     643: aconst_null
     644: invokevirtual #77                 // Method org/h2/engine/ConnectionInfo.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     647: putfield      #119                // Field javaObjectSerializerName:Ljava/lang/String;
     650: aload_0
     651: aload_1
     652: ldc           #120                // String MULTI_THREADED
     654: iconst_0
     655: invokevirtual #83                 // Method org/h2/engine/ConnectionInfo.getProperty:(Ljava/lang/String;Z)Z
     658: putfield      #121                // Field multiThreaded:Z
     661: aload_0
     662: getfield      #58                 // Field dbSettings:Lorg/h2/engine/DbSettings;
     665: getfield      #122                // Field org/h2/engine/DbSettings.dbCloseOnExit:Z
     668: istore        8
     670: aload_1
     671: bipush        10
     673: iconst_1
     674: invokevirtual #123                // Method org/h2/engine/ConnectionInfo.getIntProperty:(II)I
     677: istore        9
     679: aload_1
     680: bipush        9
     682: iconst_0
     683: invokevirtual #123                // Method org/h2/engine/ConnectionInfo.getIntProperty:(II)I
     686: istore        10
     688: aload_0
     689: aload_1
     690: ldc           #124                // String CACHE_TYPE
     692: ldc           #125                // String LRU
     694: invokevirtual #108                // Method org/h2/engine/ConnectionInfo.removeProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     697: invokestatic  #126                // Method org/h2/util/StringUtils.toUpperEnglish:(Ljava/lang/String;)Ljava/lang/String;
     700: putfield      #127                // Field cacheType:Ljava/lang/String;
     703: aload_0
     704: iload         9
     706: iload         10
     708: iload         8
     710: invokespecial #128                // Method openDatabase:(IIZ)V
     713: return

  private void openDatabase(int, int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #129                // Method open:(II)V
       6: iload_3
       7: ifeq          44
      10: aload_0
      11: new           #130                // class org/h2/engine/DatabaseCloser
      14: dup
      15: aload_0
      16: iconst_0
      17: iconst_1
      18: invokespecial #131                // Method org/h2/engine/DatabaseCloser."<init>":(Lorg/h2/engine/Database;IZ)V
      21: putfield      #132                // Field closeOnExit:Lorg/h2/engine/DatabaseCloser;
      24: invokestatic  #133                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      27: aload_0
      28: getfield      #132                // Field closeOnExit:Lorg/h2/engine/DatabaseCloser;
      31: invokevirtual #134                // Method java/lang/Runtime.addShutdownHook:(Ljava/lang/Thread;)V
      34: goto          44
      37: astore        4
      39: goto          44
      42: astore        4
      44: goto          160
      47: astore        4
      49: aload         4
      51: instanceof    #138                // class java/lang/OutOfMemoryError
      54: ifeq          63
      57: aload         4
      59: invokevirtual #139                // Method java/lang/Throwable.fillInStackTrace:()Ljava/lang/Throwable;
      62: pop
      63: aload         4
      65: instanceof    #140                // class org/h2/message/DbException
      68: ifeq          88
      71: aload         4
      73: checkcast     #140                // class org/h2/message/DbException
      76: invokevirtual #141                // Method org/h2/message/DbException.getErrorCode:()I
      79: ldc           #142                // int 90020
      81: if_icmpne     88
      84: iconst_1
      85: goto          89
      88: iconst_0
      89: istore        5
      91: iload         5
      93: ifeq          100
      96: aload_0
      97: invokespecial #143                // Method stopServer:()V
     100: aload_0
     101: getfield      #144                // Field traceSystem:Lorg/h2/message/TraceSystem;
     104: ifnull        149
     107: aload         4
     109: instanceof    #140                // class org/h2/message/DbException
     112: ifeq          142
     115: iload         5
     117: ifne          142
     120: aload_0
     121: getfield      #145                // Field trace:Lorg/h2/message/Trace;
     124: aload         4
     126: ldc           #146                // String opening {0}
     128: iconst_1
     129: anewarray     #23                 // class java/lang/Object
     132: dup
     133: iconst_0
     134: aload_0
     135: getfield      #71                 // Field databaseName:Ljava/lang/String;
     138: aastore
     139: invokevirtual #147                // Method org/h2/message/Trace.error:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
     142: aload_0
     143: getfield      #144                // Field traceSystem:Lorg/h2/message/TraceSystem;
     146: invokevirtual #148                // Method org/h2/message/TraceSystem.close:()V
     149: aload_0
     150: iconst_0
     151: invokespecial #149                // Method closeOpenFilesAndUnlock:(Z)V
     154: aload         4
     156: invokestatic  #150                // Method org/h2/message/DbException.convert:(Ljava/lang/Throwable;)Lorg/h2/message/DbException;
     159: athrow
     160: return
    Exception table:
       from    to  target type
          10    34    37   Class java/lang/IllegalStateException
          10    34    42   Class java/lang/SecurityException
           0    44    47   Class java/lang/Throwable

  public org.h2.result.Row createRow(org.h2.value.Value[], int);
    Code:
       0: aload_0
       1: getfield      #52                 // Field rowFactory:Lorg/h2/result/RowFactory;
       4: aload_1
       5: iload_2
       6: invokevirtual #151                // Method org/h2/result/RowFactory.createRow:([Lorg/h2/value/Value;I)Lorg/h2/result/Row;
       9: areturn

  public org.h2.result.RowFactory getRowFactory();
    Code:
       0: aload_0
       1: getfield      #52                 // Field rowFactory:Lorg/h2/result/RowFactory;
       4: areturn

  public void setRowFactory(org.h2.result.RowFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field rowFactory:Lorg/h2/result/RowFactory;
       5: return

  public static void setInitialPowerOffCount(int);
    Code:
       0: iload_0
       1: putstatic     #38                 // Field initialPowerOffCount:I
       4: return

  public void setPowerOffCount(int);
    Code:
       0: aload_0
       1: getfield      #39                 // Field powerOffCount:I
       4: iconst_m1
       5: if_icmpne     9
       8: return
       9: aload_0
      10: iload_1
      11: putfield      #39                 // Field powerOffCount:I
      14: return

  public org.h2.mvstore.db.MVTableEngine$Store getMvStore();
    Code:
       0: aload_0
       1: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
       4: areturn

  public void setMvStore(org.h2.mvstore.db.MVTableEngine$Store);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
       5: aload_0
       6: aload_1
       7: invokevirtual #153                // Method org/h2/mvstore/db/MVTableEngine$Store.getStore:()Lorg/h2/mvstore/MVStore;
      10: invokevirtual #154                // Method org/h2/mvstore/MVStore.getRetentionTime:()I
      13: putfield      #155                // Field retentionTime:I
      16: return

  public boolean areEqual(org.h2.value.Value, org.h2.value.Value);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: getfield      #64                 // Field compareMode:Lorg/h2/value/CompareMode;
       6: invokevirtual #156                // Method org/h2/value/Value.compareTo:(Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public int compare(org.h2.value.Value, org.h2.value.Value);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: getfield      #64                 // Field compareMode:Lorg/h2/value/CompareMode;
       6: invokevirtual #156                // Method org/h2/value/Value.compareTo:(Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I
       9: ireturn

  public int compareTypeSafe(org.h2.value.Value, org.h2.value.Value);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: getfield      #64                 // Field compareMode:Lorg/h2/value/CompareMode;
       6: invokevirtual #157                // Method org/h2/value/Value.compareTypeSafe:(Lorg/h2/value/Value;Lorg/h2/value/CompareMode;)I
       9: ireturn

  public long getModificationDataId();
    Code:
       0: aload_0
       1: getfield      #27                 // Field modificationDataId:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #158                // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  private synchronized boolean reconnectModified(boolean);
    Code:
       0: aload_0
       1: getfield      #96                 // Field readOnly:Z
       4: ifne          24
       7: aload_0
       8: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
      11: ifnull        24
      14: aload_0
      15: getfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
      18: getstatic     #102                // Field org/h2/store/FileLockMethod.SERIALIZED:Lorg/h2/store/FileLockMethod;
      21: if_acmpeq     26
      24: iconst_1
      25: ireturn
      26: iload_1
      27: aload_0
      28: getfield      #160                // Field reconnectChangePending:Z
      31: if_icmpne     120
      34: invokestatic  #161                // Method java/lang/System.nanoTime:()J
      37: lstore_2
      38: lload_2
      39: aload_0
      40: getfield      #162                // Field reconnectCheckNext:J
      43: lcmp
      44: ifle          118
      47: iload_1
      48: ifeq          108
      51: aload_0
      52: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      55: ifnonnull     62
      58: aconst_null
      59: goto          87
      62: new           #164                // class java/lang/StringBuilder
      65: dup
      66: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #166                // String
      71: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      78: invokevirtual #168                // Method org/h2/store/PageStore.getWriteCountTotal:()J
      81: invokevirtual #169                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      84: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: astore        4
      89: aload_0
      90: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
      93: ldc           #171                // String logPos
      95: aload         4
      97: invokevirtual #172                // Method org/h2/store/FileLock.setProperty:(Ljava/lang/String;Ljava/lang/String;)V
     100: aload_0
     101: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
     104: invokevirtual #173                // Method org/h2/store/FileLock.save:()Ljava/util/Properties;
     107: pop
     108: aload_0
     109: lload_2
     110: aload_0
     111: getfield      #62                 // Field reconnectCheckDelayNs:J
     114: ladd
     115: putfield      #162                // Field reconnectCheckNext:J
     118: iconst_1
     119: ireturn
     120: aload_0
     121: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
     124: invokevirtual #174                // Method org/h2/store/FileLock.load:()Ljava/util/Properties;
     127: astore_2
     128: iload_1
     129: ifeq          189
     132: aload_2
     133: ldc           #175                // String changePending
     135: invokevirtual #176                // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     138: ifnull        143
     141: iconst_0
     142: ireturn
     143: aload_0
     144: getfield      #145                // Field trace:Lorg/h2/message/Trace;
     147: ldc           #177                // String wait before writing
     149: invokevirtual #178                // Method org/h2/message/Trace.debug:(Ljava/lang/String;)V
     152: getstatic     #179                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     155: aload_0
     156: getfield      #62                 // Field reconnectCheckDelayNs:J
     159: l2d
     160: ldc2_w        #180                // double 1.1d
     163: dmul
     164: d2l
     165: invokevirtual #182                // Method java/util/concurrent/TimeUnit.toMillis:(J)J
     168: invokestatic  #183                // Method java/lang/Thread.sleep:(J)V
     171: aload_0
     172: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
     175: invokevirtual #174                // Method org/h2/store/FileLock.load:()Ljava/util/Properties;
     178: astore_3
     179: aload_3
     180: aload_2
     181: invokevirtual #184                // Method java/util/Properties.equals:(Ljava/lang/Object;)Z
     184: ifne          189
     187: iconst_0
     188: ireturn
     189: aload_0
     190: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
     193: ifnonnull     200
     196: aconst_null
     197: goto          225
     200: new           #164                // class java/lang/StringBuilder
     203: dup
     204: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
     207: ldc           #166                // String
     209: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     212: aload_0
     213: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
     216: invokevirtual #168                // Method org/h2/store/PageStore.getWriteCountTotal:()J
     219: invokevirtual #169                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     222: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     225: astore_3
     226: aload_0
     227: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
     230: ldc           #171                // String logPos
     232: aload_3
     233: invokevirtual #172                // Method org/h2/store/FileLock.setProperty:(Ljava/lang/String;Ljava/lang/String;)V
     236: iload_1
     237: ifeq          273
     240: aload_0
     241: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
     244: ldc           #175                // String changePending
     246: new           #164                // class java/lang/StringBuilder
     249: dup
     250: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
     253: ldc           #185                // String true-
     255: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     258: invokestatic  #186                // Method java/lang/Math.random:()D
     261: invokevirtual #187                // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
     264: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     267: invokevirtual #172                // Method org/h2/store/FileLock.setProperty:(Ljava/lang/String;Ljava/lang/String;)V
     270: goto          283
     273: aload_0
     274: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
     277: ldc           #175                // String changePending
     279: aconst_null
     280: invokevirtual #172                // Method org/h2/store/FileLock.setProperty:(Ljava/lang/String;Ljava/lang/String;)V
     283: aload_0
     284: invokestatic  #161                // Method java/lang/System.nanoTime:()J
     287: ldc2_w        #188                // long 2l
     290: aload_0
     291: getfield      #62                 // Field reconnectCheckDelayNs:J
     294: lmul
     295: ladd
     296: putfield      #162                // Field reconnectCheckNext:J
     299: aload_0
     300: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
     303: invokevirtual #173                // Method org/h2/store/FileLock.save:()Ljava/util/Properties;
     306: astore_2
     307: iload_1
     308: ifeq          362
     311: aload_0
     312: getfield      #145                // Field trace:Lorg/h2/message/Trace;
     315: ldc           #190                // String wait before writing again
     317: invokevirtual #178                // Method org/h2/message/Trace.debug:(Ljava/lang/String;)V
     320: getstatic     #179                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     323: aload_0
     324: getfield      #62                 // Field reconnectCheckDelayNs:J
     327: l2d
     328: ldc2_w        #180                // double 1.1d
     331: dmul
     332: d2l
     333: invokevirtual #182                // Method java/util/concurrent/TimeUnit.toMillis:(J)J
     336: invokestatic  #183                // Method java/lang/Thread.sleep:(J)V
     339: aload_0
     340: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
     343: invokevirtual #174                // Method org/h2/store/FileLock.load:()Ljava/util/Properties;
     346: astore        4
     348: aload         4
     350: aload_2
     351: invokevirtual #184                // Method java/util/Properties.equals:(Ljava/lang/Object;)Z
     354: ifne          359
     357: iconst_0
     358: ireturn
     359: goto          366
     362: lconst_1
     363: invokestatic  #183                // Method java/lang/Thread.sleep:(J)V
     366: aload_0
     367: aload_2
     368: putfield      #191                // Field reconnectLastLock:Ljava/util/Properties;
     371: aload_0
     372: iload_1
     373: putfield      #160                // Field reconnectChangePending:Z
     376: aload_0
     377: invokestatic  #161                // Method java/lang/System.nanoTime:()J
     380: aload_0
     381: getfield      #62                 // Field reconnectCheckDelayNs:J
     384: ladd
     385: putfield      #162                // Field reconnectCheckNext:J
     388: iconst_1
     389: ireturn
     390: astore_2
     391: aload_0
     392: getfield      #145                // Field trace:Lorg/h2/message/Trace;
     395: aload_2
     396: ldc           #193                // String pending {0}
     398: iconst_1
     399: anewarray     #23                 // class java/lang/Object
     402: dup
     403: iconst_0
     404: iload_1
     405: invokestatic  #194                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     408: aastore
     409: invokevirtual #147                // Method org/h2/message/Trace.error:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
     412: iconst_0
     413: ireturn
    Exception table:
       from    to  target type
          26   119   390   Class java/lang/Exception
         120   142   390   Class java/lang/Exception
         143   188   390   Class java/lang/Exception
         189   358   390   Class java/lang/Exception
         359   389   390   Class java/lang/Exception

  public long getNextModificationDataId();
    Code:
       0: aload_0
       1: getfield      #27                 // Field modificationDataId:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #195                // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: lreturn

  public long getModificationMetaId();
    Code:
       0: aload_0
       1: getfield      #28                 // Field modificationMetaId:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #158                // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getNextModificationMetaId();
    Code:
       0: aload_0
       1: getfield      #27                 // Field modificationDataId:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #195                // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: aload_0
       9: getfield      #28                 // Field modificationMetaId:Ljava/util/concurrent/atomic/AtomicLong;
      12: invokevirtual #195                // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      15: lconst_1
      16: lsub
      17: lreturn

  public int getPowerOffCount();
    Code:
       0: aload_0
       1: getfield      #39                 // Field powerOffCount:I
       4: ireturn

  public void checkPowerOff();
    Code:
       0: aload_0
       1: getfield      #39                 // Field powerOffCount:I
       4: ifne          8
       7: return
       8: aload_0
       9: getfield      #39                 // Field powerOffCount:I
      12: iconst_1
      13: if_icmple     27
      16: aload_0
      17: dup
      18: getfield      #39                 // Field powerOffCount:I
      21: iconst_1
      22: isub
      23: putfield      #39                 // Field powerOffCount:I
      26: return
      27: aload_0
      28: getfield      #39                 // Field powerOffCount:I
      31: iconst_m1
      32: if_icmpeq     136
      35: aload_0
      36: iconst_m1
      37: putfield      #39                 // Field powerOffCount:I
      40: aload_0
      41: invokespecial #196                // Method stopWriter:()V
      44: aload_0
      45: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      48: ifnull        58
      51: aload_0
      52: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      55: invokevirtual #197                // Method org/h2/mvstore/db/MVTableEngine$Store.closeImmediately:()V
      58: aload_0
      59: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      62: ifnull        81
      65: aload_0
      66: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      69: invokevirtual #198                // Method org/h2/store/PageStore.close:()V
      72: goto          76
      75: astore_1
      76: aload_0
      77: aconst_null
      78: putfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      81: aload_0
      82: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
      85: ifnull        114
      88: aload_0
      89: invokespecial #143                // Method stopServer:()V
      92: aload_0
      93: getfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
      96: getstatic     #102                // Field org/h2/store/FileLockMethod.SERIALIZED:Lorg/h2/store/FileLockMethod;
      99: if_acmpeq     109
     102: aload_0
     103: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
     106: invokevirtual #199                // Method org/h2/store/FileLock.unlock:()V
     109: aload_0
     110: aconst_null
     111: putfield      #159                // Field lock:Lorg/h2/store/FileLock;
     114: aload_0
     115: getfield      #144                // Field traceSystem:Lorg/h2/message/TraceSystem;
     118: ifnull        128
     121: aload_0
     122: getfield      #144                // Field traceSystem:Lorg/h2/message/TraceSystem;
     125: invokevirtual #148                // Method org/h2/message/TraceSystem.close:()V
     128: goto          136
     131: astore_1
     132: aload_1
     133: invokestatic  #200                // Method org/h2/message/DbException.traceThrowable:(Ljava/lang/Throwable;)V
     136: invokestatic  #201                // Method org/h2/engine/Engine.getInstance:()Lorg/h2/engine/Engine;
     139: aload_0
     140: getfield      #71                 // Field databaseName:Ljava/lang/String;
     143: invokevirtual #202                // Method org/h2/engine/Engine.close:(Ljava/lang/String;)V
     146: ldc           #203                // int 90098
     148: invokestatic  #204                // Method org/h2/message/DbException.get:(I)Lorg/h2/message/DbException;
     151: athrow
    Exception table:
       from    to  target type
          65    72    75   Class org/h2/message/DbException
          35   128   131   Class org/h2/message/DbException

  static boolean exists(java.lang.String);
    Code:
       0: new           #164                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #205                // String .h2.db
      13: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: invokestatic  #206                // Method org/h2/store/fs/FileUtils.exists:(Ljava/lang/String;)Z
      22: ifeq          27
      25: iconst_1
      26: ireturn
      27: new           #164                // class java/lang/StringBuilder
      30: dup
      31: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
      34: aload_0
      35: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #207                // String .mv.db
      40: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokestatic  #206                // Method org/h2/store/fs/FileUtils.exists:(Ljava/lang/String;)Z
      49: ireturn

  public org.h2.message.Trace getTrace(int);
    Code:
       0: aload_0
       1: getfield      #144                // Field traceSystem:Lorg/h2/message/TraceSystem;
       4: iload_1
       5: invokevirtual #208                // Method org/h2/message/TraceSystem.getTrace:(I)Lorg/h2/message/Trace;
       8: areturn

  public org.h2.store.FileStore openFile(java.lang.String, java.lang.String, boolean);
    Code:
       0: iload_3
       1: ifeq          18
       4: aload_1
       5: invokestatic  #206                // Method org/h2/store/fs/FileUtils.exists:(Ljava/lang/String;)Z
       8: ifne          18
      11: ldc           #209                // int 90124
      13: aload_1
      14: invokestatic  #210                // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      17: athrow
      18: aload_0
      19: aload_1
      20: aload_2
      21: aload_0
      22: getfield      #75                 // Field cipher:Ljava/lang/String;
      25: aload_0
      26: getfield      #68                 // Field filePasswordHash:[B
      29: invokestatic  #211                // Method org/h2/store/FileStore.open:(Lorg/h2/store/DataHandler;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[B)Lorg/h2/store/FileStore;
      32: astore        4
      34: aload         4
      36: invokevirtual #212                // Method org/h2/store/FileStore.init:()V
      39: goto          52
      42: astore        5
      44: aload         4
      46: invokevirtual #213                // Method org/h2/store/FileStore.closeSilently:()V
      49: aload         5
      51: athrow
      52: aload         4
      54: areturn
    Exception table:
       from    to  target type
          34    39    42   Class org/h2/message/DbException

  boolean validateFilePasswordHash(java.lang.String, byte[]);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #75                 // Field cipher:Ljava/lang/String;
       5: invokestatic  #214                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ifne          13
      11: iconst_0
      12: ireturn
      13: aload_2
      14: aload_0
      15: getfield      #68                 // Field filePasswordHash:[B
      18: invokestatic  #215                // Method org/h2/util/Utils.compareSecure:([B[B)Z
      21: ireturn

  private java.lang.String parseDatabaseShortName();
    Code:
       0: aload_0
       1: getfield      #71                 // Field databaseName:Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ldc           #216                // String :
       8: invokevirtual #217                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      11: ifeq          16
      14: aconst_null
      15: astore_1
      16: aload_1
      17: ifnull        46
      20: new           #218                // class java/util/StringTokenizer
      23: dup
      24: aload_1
      25: ldc           #219                // String /\\:,;
      27: invokespecial #220                // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      30: astore_2
      31: aload_2
      32: invokevirtual #221                // Method java/util/StringTokenizer.hasMoreTokens:()Z
      35: ifeq          46
      38: aload_2
      39: invokevirtual #222                // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      42: astore_1
      43: goto          31
      46: aload_1
      47: ifnull        57
      50: aload_1
      51: invokevirtual #223                // Method java/lang/String.length:()I
      54: ifne          60
      57: ldc           #224                // String unnamed
      59: astore_1
      60: aload_0
      61: getfield      #58                 // Field dbSettings:Lorg/h2/engine/DbSettings;
      64: getfield      #225                // Field org/h2/engine/DbSettings.databaseToUpper:Z
      67: ifeq          77
      70: aload_1
      71: invokestatic  #126                // Method org/h2/util/StringUtils.toUpperEnglish:(Ljava/lang/String;)Ljava/lang/String;
      74: goto          78
      77: aload_1
      78: areturn

  private synchronized void open(int, int);
    Code:
       0: aload_0
       1: getfield      #66                 // Field persistent:Z
       4: ifeq          727
       7: new           #164                // class java/lang/StringBuilder
      10: dup
      11: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
      14: aload_0
      15: getfield      #71                 // Field databaseName:Ljava/lang/String;
      18: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #226                // String .data.db
      23: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: astore_3
      30: aload_3
      31: invokestatic  #206                // Method org/h2/store/fs/FileUtils.exists:(Ljava/lang/String;)Z
      34: istore        4
      36: new           #164                // class java/lang/StringBuilder
      39: dup
      40: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
      43: aload_0
      44: getfield      #71                 // Field databaseName:Ljava/lang/String;
      47: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #205                // String .h2.db
      52: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: astore        5
      60: new           #164                // class java/lang/StringBuilder
      63: dup
      64: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
      67: aload_0
      68: getfield      #71                 // Field databaseName:Ljava/lang/String;
      71: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: ldc           #207                // String .mv.db
      76: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: astore        6
      84: aload         5
      86: invokestatic  #206                // Method org/h2/store/fs/FileUtils.exists:(Ljava/lang/String;)Z
      89: istore        7
      91: aload         6
      93: invokestatic  #206                // Method org/h2/store/fs/FileUtils.exists:(Ljava/lang/String;)Z
      96: istore        8
      98: iload         4
     100: ifeq          148
     103: iload         7
     105: ifne          148
     108: iload         8
     110: ifne          148
     113: ldc           #227                // int 90048
     115: new           #164                // class java/lang/StringBuilder
     118: dup
     119: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
     122: ldc           #228                // String Old database:
     124: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload_3
     128: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: ldc           #229                // String  - please convert the database
     133: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: ldc           #230                // String to a SQL script and re-create it.
     138: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     144: invokestatic  #210                // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
     147: athrow
     148: iload         7
     150: ifeq          166
     153: aload         5
     155: invokestatic  #231                // Method org/h2/store/fs/FileUtils.canWrite:(Ljava/lang/String;)Z
     158: ifne          166
     161: aload_0
     162: iconst_1
     163: putfield      #96                 // Field readOnly:Z
     166: iload         8
     168: ifeq          184
     171: aload         6
     173: invokestatic  #231                // Method org/h2/store/fs/FileUtils.canWrite:(Ljava/lang/String;)Z
     176: ifne          184
     179: aload_0
     180: iconst_1
     181: putfield      #96                 // Field readOnly:Z
     184: iload         7
     186: ifeq          202
     189: iload         8
     191: ifne          202
     194: aload_0
     195: getfield      #58                 // Field dbSettings:Lorg/h2/engine/DbSettings;
     198: iconst_0
     199: putfield      #97                 // Field org/h2/engine/DbSettings.mvStore:Z
     202: aload_0
     203: getfield      #96                 // Field readOnly:Z
     206: ifeq          301
     209: iload_1
     210: iconst_3
     211: if_icmplt     286
     214: new           #164                // class java/lang/StringBuilder
     217: dup
     218: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
     221: ldc           #232                // String java.io.tmpdir
     223: ldc           #233                // String .
     225: invokestatic  #234                // Method org/h2/util/Utils.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     228: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     231: ldc           #235                // String /
     233: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     236: ldc           #236                // String h2_
     238: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     241: invokestatic  #237                // Method java/lang/System.currentTimeMillis:()J
     244: invokevirtual #169                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     247: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     250: astore        9
     252: aload_0
     253: new           #238                // class org/h2/message/TraceSystem
     256: dup
     257: new           #164                // class java/lang/StringBuilder
     260: dup
     261: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
     264: aload         9
     266: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: ldc           #239                // String .trace.db
     271: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     274: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     277: invokespecial #240                // Method org/h2/message/TraceSystem."<init>":(Ljava/lang/String;)V
     280: putfield      #144                // Field traceSystem:Lorg/h2/message/TraceSystem;
     283: goto          334
     286: aload_0
     287: new           #238                // class org/h2/message/TraceSystem
     290: dup
     291: aconst_null
     292: invokespecial #240                // Method org/h2/message/TraceSystem."<init>":(Ljava/lang/String;)V
     295: putfield      #144                // Field traceSystem:Lorg/h2/message/TraceSystem;
     298: goto          334
     301: aload_0
     302: new           #238                // class org/h2/message/TraceSystem
     305: dup
     306: new           #164                // class java/lang/StringBuilder
     309: dup
     310: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
     313: aload_0
     314: getfield      #71                 // Field databaseName:Ljava/lang/String;
     317: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     320: ldc           #239                // String .trace.db
     322: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     325: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     328: invokespecial #240                // Method org/h2/message/TraceSystem."<init>":(Ljava/lang/String;)V
     331: putfield      #144                // Field traceSystem:Lorg/h2/message/TraceSystem;
     334: aload_0
     335: getfield      #144                // Field traceSystem:Lorg/h2/message/TraceSystem;
     338: iload_1
     339: invokevirtual #241                // Method org/h2/message/TraceSystem.setLevelFile:(I)V
     342: aload_0
     343: getfield      #144                // Field traceSystem:Lorg/h2/message/TraceSystem;
     346: iload_2
     347: invokevirtual #242                // Method org/h2/message/TraceSystem.setLevelSystemOut:(I)V
     350: aload_0
     351: aload_0
     352: getfield      #144                // Field traceSystem:Lorg/h2/message/TraceSystem;
     355: iconst_2
     356: invokevirtual #208                // Method org/h2/message/TraceSystem.getTrace:(I)Lorg/h2/message/Trace;
     359: putfield      #145                // Field trace:Lorg/h2/message/Trace;
     362: aload_0
     363: getfield      #145                // Field trace:Lorg/h2/message/Trace;
     366: ldc           #243                // String opening {0} (build {1})
     368: iconst_2
     369: anewarray     #23                 // class java/lang/Object
     372: dup
     373: iconst_0
     374: aload_0
     375: getfield      #71                 // Field databaseName:Ljava/lang/String;
     378: aastore
     379: dup
     380: iconst_1
     381: sipush        197
     384: invokestatic  #244                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     387: aastore
     388: invokevirtual #245                // Method org/h2/message/Trace.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     391: aload_0
     392: getfield      #84                 // Field autoServerMode:Z
     395: ifeq          448
     398: aload_0
     399: getfield      #96                 // Field readOnly:Z
     402: ifne          442
     405: aload_0
     406: getfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
     409: getstatic     #246                // Field org/h2/store/FileLockMethod.NO:Lorg/h2/store/FileLockMethod;
     412: if_acmpeq     442
     415: aload_0
     416: getfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
     419: getstatic     #102                // Field org/h2/store/FileLockMethod.SERIALIZED:Lorg/h2/store/FileLockMethod;
     422: if_acmpeq     442
     425: aload_0
     426: getfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
     429: getstatic     #100                // Field org/h2/store/FileLockMethod.FS:Lorg/h2/store/FileLockMethod;
     432: if_acmpeq     442
     435: aload_0
     436: getfield      #66                 // Field persistent:Z
     439: ifne          448
     442: ldc           #247                // String autoServerMode && (readOnly || fileLockMethod == NO || fileLockMethod == SERIALIZED || fileLockMethod == FS || inMemory)
     444: invokestatic  #104                // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
     447: athrow
     448: new           #164                // class java/lang/StringBuilder
     451: dup
     452: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
     455: aload_0
     456: getfield      #71                 // Field databaseName:Ljava/lang/String;
     459: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     462: ldc           #248                // String .lock.db
     464: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     467: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     470: astore        9
     472: aload_0
     473: getfield      #96                 // Field readOnly:Z
     476: ifeq          513
     479: aload         9
     481: invokestatic  #206                // Method org/h2/store/fs/FileUtils.exists:(Ljava/lang/String;)Z
     484: ifeq          513
     487: ldc           #142                // int 90020
     489: new           #164                // class java/lang/StringBuilder
     492: dup
     493: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
     496: ldc           #249                // String Lock file exists:
     498: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     501: aload         9
     503: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     506: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     509: invokestatic  #210                // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
     512: athrow
     513: aload_0
     514: getfield      #96                 // Field readOnly:Z
     517: ifne          589
     520: aload_0
     521: getfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
     524: getstatic     #246                // Field org/h2/store/FileLockMethod.NO:Lorg/h2/store/FileLockMethod;
     527: if_acmpeq     589
     530: aload_0
     531: getfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
     534: getstatic     #100                // Field org/h2/store/FileLockMethod.FS:Lorg/h2/store/FileLockMethod;
     537: if_acmpeq     589
     540: aload_0
     541: new           #250                // class org/h2/store/FileLock
     544: dup
     545: aload_0
     546: getfield      #144                // Field traceSystem:Lorg/h2/message/TraceSystem;
     549: aload         9
     551: sipush        1000
     554: invokespecial #251                // Method org/h2/store/FileLock."<init>":(Lorg/h2/message/TraceSystem;Ljava/lang/String;I)V
     557: putfield      #159                // Field lock:Lorg/h2/store/FileLock;
     560: aload_0
     561: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
     564: aload_0
     565: getfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
     568: invokevirtual #252                // Method org/h2/store/FileLock.lock:(Lorg/h2/store/FileLockMethod;)V
     571: aload_0
     572: getfield      #84                 // Field autoServerMode:Z
     575: ifeq          589
     578: aload_0
     579: aload_0
     580: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
     583: invokevirtual #253                // Method org/h2/store/FileLock.getUniqueId:()Ljava/lang/String;
     586: invokespecial #254                // Method startServer:(Ljava/lang/String;)V
     589: getstatic     #255                // Field org/h2/engine/SysProperties.MODIFY_ON_WRITE:Z
     592: ifeq          605
     595: aload_0
     596: invokevirtual #256                // Method isReconnectNeeded:()Z
     599: ifeq          622
     602: goto          595
     605: aload_0
     606: invokevirtual #256                // Method isReconnectNeeded:()Z
     609: ifeq          622
     612: aload_0
     613: invokevirtual #257                // Method beforeWriting:()Z
     616: ifne          622
     619: goto          605
     622: aload_0
     623: invokespecial #258                // Method deleteOldTempFiles:()V
     626: aload_0
     627: iconst_1
     628: putfield      #259                // Field starting:Z
     631: getstatic     #255                // Field org/h2/engine/SysProperties.MODIFY_ON_WRITE:Z
     634: ifeq          684
     637: aload_0
     638: invokevirtual #260                // Method getPageStore:()Lorg/h2/store/PageStore;
     641: pop
     642: goto          689
     645: astore        10
     647: aload         10
     649: invokevirtual #141                // Method org/h2/message/DbException.getErrorCode:()I
     652: ldc_w         #261                // int 90097
     655: if_icmpeq     661
     658: aload         10
     660: athrow
     661: aload_0
     662: aconst_null
     663: putfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
     666: aload_0
     667: invokevirtual #257                // Method beforeWriting:()Z
     670: ifne          676
     673: goto          666
     676: aload_0
     677: invokevirtual #260                // Method getPageStore:()Lorg/h2/store/PageStore;
     680: pop
     681: goto          689
     684: aload_0
     685: invokevirtual #260                // Method getPageStore:()Lorg/h2/store/PageStore;
     688: pop
     689: aload_0
     690: iconst_0
     691: putfield      #259                // Field starting:Z
     694: aload_0
     695: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
     698: ifnonnull     716
     701: aload_0
     702: aload_0
     703: aload_0
     704: getfield      #31                 // Field writeDelay:I
     707: invokestatic  #262                // Method org/h2/store/WriterThread.create:(Lorg/h2/engine/Database;I)Lorg/h2/store/WriterThread;
     710: putfield      #263                // Field writer:Lorg/h2/store/WriterThread;
     713: goto          724
     716: aload_0
     717: aload_0
     718: getfield      #31                 // Field writeDelay:I
     721: invokevirtual #264                // Method setWriteDelay:(I)V
     724: goto          780
     727: aload_0
     728: getfield      #84                 // Field autoServerMode:Z
     731: ifeq          741
     734: ldc_w         #265                // String autoServerMode && inMemory
     737: invokestatic  #104                // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
     740: athrow
     741: aload_0
     742: new           #238                // class org/h2/message/TraceSystem
     745: dup
     746: aconst_null
     747: invokespecial #240                // Method org/h2/message/TraceSystem."<init>":(Ljava/lang/String;)V
     750: putfield      #144                // Field traceSystem:Lorg/h2/message/TraceSystem;
     753: aload_0
     754: aload_0
     755: getfield      #144                // Field traceSystem:Lorg/h2/message/TraceSystem;
     758: iconst_2
     759: invokevirtual #208                // Method org/h2/message/TraceSystem.getTrace:(I)Lorg/h2/message/Trace;
     762: putfield      #145                // Field trace:Lorg/h2/message/Trace;
     765: aload_0
     766: getfield      #58                 // Field dbSettings:Lorg/h2/engine/DbSettings;
     769: getfield      #97                 // Field org/h2/engine/DbSettings.mvStore:Z
     772: ifeq          780
     775: aload_0
     776: invokevirtual #260                // Method getPageStore:()Lorg/h2/store/PageStore;
     779: pop
     780: aload_0
     781: new           #266                // class org/h2/engine/User
     784: dup
     785: aload_0
     786: iconst_0
     787: ldc_w         #267                // String DBA
     790: iconst_1
     791: invokespecial #268                // Method org/h2/engine/User."<init>":(Lorg/h2/engine/Database;ILjava/lang/String;Z)V
     794: putfield      #269                // Field systemUser:Lorg/h2/engine/User;
     797: aload_0
     798: new           #270                // class org/h2/schema/Schema
     801: dup
     802: aload_0
     803: iconst_0
     804: ldc_w         #271                // String PUBLIC
     807: aload_0
     808: getfield      #269                // Field systemUser:Lorg/h2/engine/User;
     811: iconst_1
     812: invokespecial #272                // Method org/h2/schema/Schema."<init>":(Lorg/h2/engine/Database;ILjava/lang/String;Lorg/h2/engine/User;Z)V
     815: putfield      #273                // Field mainSchema:Lorg/h2/schema/Schema;
     818: aload_0
     819: new           #270                // class org/h2/schema/Schema
     822: dup
     823: aload_0
     824: iconst_m1
     825: ldc_w         #274                // String INFORMATION_SCHEMA
     828: aload_0
     829: getfield      #269                // Field systemUser:Lorg/h2/engine/User;
     832: iconst_1
     833: invokespecial #272                // Method org/h2/schema/Schema."<init>":(Lorg/h2/engine/Database;ILjava/lang/String;Lorg/h2/engine/User;Z)V
     836: putfield      #275                // Field infoSchema:Lorg/h2/schema/Schema;
     839: aload_0
     840: getfield      #7                  // Field schemas:Ljava/util/HashMap;
     843: aload_0
     844: getfield      #273                // Field mainSchema:Lorg/h2/schema/Schema;
     847: invokevirtual #276                // Method org/h2/schema/Schema.getName:()Ljava/lang/String;
     850: aload_0
     851: getfield      #273                // Field mainSchema:Lorg/h2/schema/Schema;
     854: invokevirtual #277                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     857: pop
     858: aload_0
     859: getfield      #7                  // Field schemas:Ljava/util/HashMap;
     862: aload_0
     863: getfield      #275                // Field infoSchema:Lorg/h2/schema/Schema;
     866: invokevirtual #276                // Method org/h2/schema/Schema.getName:()Ljava/lang/String;
     869: aload_0
     870: getfield      #275                // Field infoSchema:Lorg/h2/schema/Schema;
     873: invokevirtual #277                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     876: pop
     877: aload_0
     878: new           #278                // class org/h2/engine/Role
     881: dup
     882: aload_0
     883: iconst_0
     884: ldc_w         #271                // String PUBLIC
     887: iconst_1
     888: invokespecial #279                // Method org/h2/engine/Role."<init>":(Lorg/h2/engine/Database;ILjava/lang/String;Z)V
     891: putfield      #280                // Field publicRole:Lorg/h2/engine/Role;
     894: aload_0
     895: getfield      #4                  // Field roles:Ljava/util/HashMap;
     898: ldc_w         #271                // String PUBLIC
     901: aload_0
     902: getfield      #280                // Field publicRole:Lorg/h2/engine/Role;
     905: invokevirtual #277                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     908: pop
     909: aload_0
     910: getfield      #269                // Field systemUser:Lorg/h2/engine/User;
     913: iconst_1
     914: invokevirtual #281                // Method org/h2/engine/User.setAdmin:(Z)V
     917: aload_0
     918: new           #282                // class org/h2/engine/Session
     921: dup
     922: aload_0
     923: aload_0
     924: getfield      #269                // Field systemUser:Lorg/h2/engine/User;
     927: aload_0
     928: dup
     929: getfield      #283                // Field nextSessionId:I
     932: iconst_1
     933: iadd
     934: dup_x1
     935: putfield      #283                // Field nextSessionId:I
     938: invokespecial #284                // Method org/h2/engine/Session."<init>":(Lorg/h2/engine/Database;Lorg/h2/engine/User;I)V
     941: putfield      #285                // Field systemSession:Lorg/h2/engine/Session;
     944: aload_0
     945: new           #282                // class org/h2/engine/Session
     948: dup
     949: aload_0
     950: aload_0
     951: getfield      #269                // Field systemUser:Lorg/h2/engine/User;
     954: aload_0
     955: dup
     956: getfield      #283                // Field nextSessionId:I
     959: iconst_1
     960: iadd
     961: dup_x1
     962: putfield      #283                // Field nextSessionId:I
     965: invokespecial #284                // Method org/h2/engine/Session."<init>":(Lorg/h2/engine/Database;Lorg/h2/engine/User;I)V
     968: putfield      #286                // Field lobSession:Lorg/h2/engine/Session;
     971: new           #287                // class org/h2/command/ddl/CreateTableData
     974: dup
     975: invokespecial #288                // Method org/h2/command/ddl/CreateTableData."<init>":()V
     978: astore_3
     979: aload_3
     980: getfield      #289                // Field org/h2/command/ddl/CreateTableData.columns:Ljava/util/ArrayList;
     983: astore        4
     985: new           #290                // class org/h2/table/Column
     988: dup
     989: ldc_w         #291                // String ID
     992: iconst_4
     993: invokespecial #292                // Method org/h2/table/Column."<init>":(Ljava/lang/String;I)V
     996: astore        5
     998: aload         5
    1000: iconst_0
    1001: invokevirtual #293                // Method org/h2/table/Column.setNullable:(Z)V
    1004: aload         4
    1006: aload         5
    1008: invokevirtual #294                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
    1011: pop
    1012: aload         4
    1014: new           #290                // class org/h2/table/Column
    1017: dup
    1018: ldc_w         #295                // String HEAD
    1021: iconst_4
    1022: invokespecial #292                // Method org/h2/table/Column."<init>":(Ljava/lang/String;I)V
    1025: invokevirtual #294                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
    1028: pop
    1029: aload         4
    1031: new           #290                // class org/h2/table/Column
    1034: dup
    1035: ldc_w         #296                // String TYPE
    1038: iconst_4
    1039: invokespecial #292                // Method org/h2/table/Column."<init>":(Ljava/lang/String;I)V
    1042: invokevirtual #294                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
    1045: pop
    1046: aload         4
    1048: new           #290                // class org/h2/table/Column
    1051: dup
    1052: ldc_w         #297                // String SQL
    1055: bipush        13
    1057: invokespecial #292                // Method org/h2/table/Column."<init>":(Ljava/lang/String;I)V
    1060: invokevirtual #294                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
    1063: pop
    1064: iconst_1
    1065: istore        6
    1067: aload_0
    1068: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
    1071: ifnull        1083
    1074: aload_0
    1075: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
    1078: invokevirtual #298                // Method org/h2/store/PageStore.isNew:()Z
    1081: istore        6
    1083: aload_3
    1084: ldc_w         #299                // String SYS
    1087: putfield      #300                // Field org/h2/command/ddl/CreateTableData.tableName:Ljava/lang/String;
    1090: aload_3
    1091: iconst_0
    1092: putfield      #301                // Field org/h2/command/ddl/CreateTableData.id:I
    1095: aload_3
    1096: iconst_0
    1097: putfield      #302                // Field org/h2/command/ddl/CreateTableData.temporary:Z
    1100: aload_3
    1101: aload_0
    1102: getfield      #66                 // Field persistent:Z
    1105: putfield      #303                // Field org/h2/command/ddl/CreateTableData.persistData:Z
    1108: aload_3
    1109: aload_0
    1110: getfield      #66                 // Field persistent:Z
    1113: putfield      #304                // Field org/h2/command/ddl/CreateTableData.persistIndexes:Z
    1116: aload_3
    1117: iload         6
    1119: putfield      #305                // Field org/h2/command/ddl/CreateTableData.create:Z
    1122: aload_3
    1123: iconst_1
    1124: putfield      #306                // Field org/h2/command/ddl/CreateTableData.isHidden:Z
    1127: aload_3
    1128: aload_0
    1129: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
    1132: putfield      #307                // Field org/h2/command/ddl/CreateTableData.session:Lorg/h2/engine/Session;
    1135: aload_0
    1136: aload_0
    1137: getfield      #273                // Field mainSchema:Lorg/h2/schema/Schema;
    1140: aload_3
    1141: invokevirtual #308                // Method org/h2/schema/Schema.createTable:(Lorg/h2/command/ddl/CreateTableData;)Lorg/h2/table/Table;
    1144: putfield      #309                // Field meta:Lorg/h2/table/Table;
    1147: iconst_1
    1148: anewarray     #290                // class org/h2/table/Column
    1151: dup
    1152: iconst_0
    1153: aload         5
    1155: aastore
    1156: invokestatic  #310                // Method org/h2/table/IndexColumn.wrap:([Lorg/h2/table/Column;)[Lorg/h2/table/IndexColumn;
    1159: astore        7
    1161: aload_0
    1162: aload_0
    1163: getfield      #309                // Field meta:Lorg/h2/table/Table;
    1166: aload_0
    1167: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
    1170: ldc_w         #311                // String SYS_ID
    1173: iconst_0
    1174: aload         7
    1176: iconst_0
    1177: iconst_0
    1178: invokestatic  #312                // Method org/h2/index/IndexType.createPrimaryKey:(ZZ)Lorg/h2/index/IndexType;
    1181: iconst_1
    1182: aconst_null
    1183: invokevirtual #313                // Method org/h2/table/Table.addIndex:(Lorg/h2/engine/Session;Ljava/lang/String;I[Lorg/h2/table/IndexColumn;Lorg/h2/index/IndexType;ZLjava/lang/String;)Lorg/h2/index/Index;
    1186: putfield      #314                // Field metaIdIndex:Lorg/h2/index/Index;
    1189: aload_0
    1190: getfield      #22                 // Field objectIds:Lorg/h2/util/BitField;
    1193: iconst_0
    1194: invokevirtual #315                // Method org/h2/util/BitField.set:(I)V
    1197: aload_0
    1198: iconst_1
    1199: putfield      #259                // Field starting:Z
    1202: aload_0
    1203: getfield      #314                // Field metaIdIndex:Lorg/h2/index/Index;
    1206: aload_0
    1207: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
    1210: aconst_null
    1211: aconst_null
    1212: invokeinterface #316,  4          // InterfaceMethod org/h2/index/Index.find:(Lorg/h2/engine/Session;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)Lorg/h2/index/Cursor;
    1217: astore        8
    1219: invokestatic  #317                // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
    1222: astore        9
    1224: aload         8
    1226: invokeinterface #318,  1          // InterfaceMethod org/h2/index/Cursor.next:()Z
    1231: ifeq          1273
    1234: new           #319                // class org/h2/engine/MetaRecord
    1237: dup
    1238: aload         8
    1240: invokeinterface #320,  1          // InterfaceMethod org/h2/index/Cursor.get:()Lorg/h2/result/Row;
    1245: invokespecial #321                // Method org/h2/engine/MetaRecord."<init>":(Lorg/h2/result/SearchRow;)V
    1248: astore        10
    1250: aload_0
    1251: getfield      #22                 // Field objectIds:Lorg/h2/util/BitField;
    1254: aload         10
    1256: invokevirtual #322                // Method org/h2/engine/MetaRecord.getId:()I
    1259: invokevirtual #315                // Method org/h2/util/BitField.set:(I)V
    1262: aload         9
    1264: aload         10
    1266: invokevirtual #294                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
    1269: pop
    1270: goto          1224
    1273: aload         9
    1275: invokestatic  #323                // Method java/util/Collections.sort:(Ljava/util/List;)V
    1278: aload_0
    1279: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
    1282: dup
    1283: astore        10
    1285: monitorenter
    1286: aload         9
    1288: invokevirtual #324                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
    1291: astore        11
    1293: aload         11
    1295: invokeinterface #325,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
    1300: ifeq          1332
    1303: aload         11
    1305: invokeinterface #326,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
    1310: checkcast     #319                // class org/h2/engine/MetaRecord
    1313: astore        12
    1315: aload         12
    1317: aload_0
    1318: aload_0
    1319: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
    1322: aload_0
    1323: getfield      #327                // Field eventListener:Lorg/h2/api/DatabaseEventListener;
    1326: invokevirtual #328                // Method org/h2/engine/MetaRecord.execute:(Lorg/h2/engine/Database;Lorg/h2/engine/Session;Lorg/h2/api/DatabaseEventListener;)V
    1329: goto          1293
    1332: aload         10
    1334: monitorexit
    1335: goto          1346
    1338: astore        13
    1340: aload         10
    1342: monitorexit
    1343: aload         13
    1345: athrow
    1346: aload_0
    1347: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
    1350: ifnull        1371
    1353: aload_0
    1354: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
    1357: invokevirtual #329                // Method org/h2/mvstore/db/MVTableEngine$Store.initTransactions:()V
    1360: aload_0
    1361: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
    1364: aload_0
    1365: getfield      #22                 // Field objectIds:Lorg/h2/util/BitField;
    1368: invokevirtual #330                // Method org/h2/mvstore/db/MVTableEngine$Store.removeTemporaryMaps:(Lorg/h2/util/BitField;)V
    1371: aload_0
    1372: aload_0
    1373: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
    1376: invokespecial #331                // Method recompileInvalidViews:(Lorg/h2/engine/Session;)V
    1379: aload_0
    1380: iconst_0
    1381: putfield      #259                // Field starting:Z
    1384: aload_0
    1385: getfield      #96                 // Field readOnly:Z
    1388: ifne          1551
    1391: bipush        34
    1393: invokestatic  #332                // Method org/h2/command/dml/SetTypes.getTypeName:(I)Ljava/lang/String;
    1396: astore        10
    1398: aload_0
    1399: getfield      #6                  // Field settings:Ljava/util/HashMap;
    1402: aload         10
    1404: invokevirtual #333                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
    1407: ifnonnull     1453
    1410: new           #334                // class org/h2/engine/Setting
    1413: dup
    1414: aload_0
    1415: aload_0
    1416: invokevirtual #335                // Method allocateObjectId:()I
    1419: aload         10
    1421: invokespecial #336                // Method org/h2/engine/Setting."<init>":(Lorg/h2/engine/Database;ILjava/lang/String;)V
    1424: astore        11
    1426: aload         11
    1428: sipush        197
    1431: invokevirtual #337                // Method org/h2/engine/Setting.setIntValue:(I)V
    1434: aload_0
    1435: aload_0
    1436: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
    1439: invokevirtual #338                // Method lockMeta:(Lorg/h2/engine/Session;)Z
    1442: pop
    1443: aload_0
    1444: aload_0
    1445: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
    1448: aload         11
    1450: invokevirtual #339                // Method addDatabaseObject:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
    1453: aload_0
    1454: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
    1457: ifnull        1551
    1460: aload_0
    1461: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
    1464: invokevirtual #340                // Method org/h2/store/PageStore.getObjectIds:()Lorg/h2/util/BitField;
    1467: astore        11
    1469: iconst_0
    1470: istore        12
    1472: aload         11
    1474: invokevirtual #341                // Method org/h2/util/BitField.length:()I
    1477: istore        13
    1479: iload         12
    1481: iload         13
    1483: if_icmpge     1551
    1486: aload         11
    1488: iload         12
    1490: invokevirtual #342                // Method org/h2/util/BitField.get:(I)Z
    1493: ifeq          1545
    1496: aload_0
    1497: getfield      #22                 // Field objectIds:Lorg/h2/util/BitField;
    1500: iload         12
    1502: invokevirtual #342                // Method org/h2/util/BitField.get:(I)Z
    1505: ifne          1545
    1508: aload_0
    1509: getfield      #145                // Field trace:Lorg/h2/message/Trace;
    1512: new           #164                // class java/lang/StringBuilder
    1515: dup
    1516: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
    1519: ldc_w         #343                // String unused object id:
    1522: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1525: iload         12
    1527: invokevirtual #344                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
    1530: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1533: invokevirtual #345                // Method org/h2/message/Trace.info:(Ljava/lang/String;)V
    1536: aload_0
    1537: getfield      #22                 // Field objectIds:Lorg/h2/util/BitField;
    1540: iload         12
    1542: invokevirtual #315                // Method org/h2/util/BitField.set:(I)V
    1545: iinc          12, 1
    1548: goto          1479
    1551: aload_0
    1552: invokevirtual #346                // Method getLobStorage:()Lorg/h2/store/LobStorageInterface;
    1555: invokeinterface #347,  1          // InterfaceMethod org/h2/store/LobStorageInterface.init:()V
    1560: aload_0
    1561: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
    1564: iconst_1
    1565: invokevirtual #348                // Method org/h2/engine/Session.commit:(Z)V
    1568: aload_0
    1569: getfield      #145                // Field trace:Lorg/h2/message/Trace;
    1572: ldc_w         #349                // String opened {0}
    1575: iconst_1
    1576: anewarray     #23                 // class java/lang/Object
    1579: dup
    1580: iconst_0
    1581: aload_0
    1582: getfield      #71                 // Field databaseName:Ljava/lang/String;
    1585: aastore
    1586: invokevirtual #245                // Method org/h2/message/Trace.info:(Ljava/lang/String;[Ljava/lang/Object;)V
    1589: aload_0
    1590: getfield      #350                // Field checkpointAllowed:I
    1593: ifle          1600
    1596: aload_0
    1597: invokevirtual #351                // Method afterWriting:()V
    1600: return
    Exception table:
       from    to  target type
         637   642   645   Class org/h2/message/DbException
        1286  1335  1338   any
        1338  1343  1338   any

  private void startServer(java.lang.String);
    Code:
       0: aload_0
       1: bipush        7
       3: anewarray     #352                // class java/lang/String
       6: dup
       7: iconst_0
       8: ldc_w         #353                // String -tcpPort
      11: aastore
      12: dup
      13: iconst_1
      14: aload_0
      15: getfield      #87                 // Field autoServerPort:I
      18: invokestatic  #354                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      21: aastore
      22: dup
      23: iconst_2
      24: ldc_w         #355                // String -tcpAllowOthers
      27: aastore
      28: dup
      29: iconst_3
      30: ldc_w         #356                // String -tcpDaemon
      33: aastore
      34: dup
      35: iconst_4
      36: ldc_w         #357                // String -key
      39: aastore
      40: dup
      41: iconst_5
      42: aload_1
      43: aastore
      44: dup
      45: bipush        6
      47: aload_0
      48: getfield      #71                 // Field databaseName:Ljava/lang/String;
      51: aastore
      52: invokestatic  #358                // Method org/h2/tools/Server.createTcpServer:([Ljava/lang/String;)Lorg/h2/tools/Server;
      55: putfield      #359                // Field server:Lorg/h2/tools/Server;
      58: aload_0
      59: getfield      #359                // Field server:Lorg/h2/tools/Server;
      62: invokevirtual #360                // Method org/h2/tools/Server.start:()Lorg/h2/tools/Server;
      65: pop
      66: goto          75
      69: astore_2
      70: aload_2
      71: invokestatic  #150                // Method org/h2/message/DbException.convert:(Ljava/lang/Throwable;)Lorg/h2/message/DbException;
      74: athrow
      75: invokestatic  #362                // Method org/h2/util/NetUtils.getLocalAddress:()Ljava/lang/String;
      78: astore_2
      79: new           #164                // class java/lang/StringBuilder
      82: dup
      83: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
      86: aload_2
      87: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: ldc           #216                // String :
      92: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: aload_0
      96: getfield      #359                // Field server:Lorg/h2/tools/Server;
      99: invokevirtual #363                // Method org/h2/tools/Server.getPort:()I
     102: invokevirtual #344                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     105: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     108: astore_3
     109: aload_0
     110: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
     113: ldc_w         #364                // String server
     116: aload_3
     117: invokevirtual #172                // Method org/h2/store/FileLock.setProperty:(Ljava/lang/String;Ljava/lang/String;)V
     120: aload_2
     121: invokestatic  #365                // Method org/h2/util/NetUtils.getHostName:(Ljava/lang/String;)Ljava/lang/String;
     124: astore        4
     126: aload_0
     127: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
     130: ldc_w         #366                // String hostName
     133: aload         4
     135: invokevirtual #172                // Method org/h2/store/FileLock.setProperty:(Ljava/lang/String;Ljava/lang/String;)V
     138: aload_0
     139: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
     142: invokevirtual #173                // Method org/h2/store/FileLock.save:()Ljava/util/Properties;
     145: pop
     146: return
    Exception table:
       from    to  target type
           0    66    69   Class java/sql/SQLException

  private void stopServer();
    Code:
       0: aload_0
       1: getfield      #359                // Field server:Lorg/h2/tools/Server;
       4: ifnull        21
       7: aload_0
       8: getfield      #359                // Field server:Lorg/h2/tools/Server;
      11: astore_1
      12: aload_0
      13: aconst_null
      14: putfield      #359                // Field server:Lorg/h2/tools/Server;
      17: aload_1
      18: invokevirtual #367                // Method org/h2/tools/Server.stop:()V
      21: return

  private void recompileInvalidViews(org.h2.engine.Session);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: iconst_0
       4: invokevirtual #368                // Method getAllTablesAndViews:(Z)Ljava/util/ArrayList;
       7: invokevirtual #324                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      10: astore_3
      11: aload_3
      12: invokeinterface #325,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          76
      20: aload_3
      21: invokeinterface #326,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #369                // class org/h2/table/Table
      29: astore        4
      31: aload         4
      33: instanceof    #370                // class org/h2/table/TableView
      36: ifeq          73
      39: aload         4
      41: checkcast     #370                // class org/h2/table/TableView
      44: astore        5
      46: aload         5
      48: invokevirtual #371                // Method org/h2/table/TableView.isInvalid:()Z
      51: ifeq          73
      54: aload         5
      56: aload_1
      57: iconst_1
      58: iconst_0
      59: invokevirtual #372                // Method org/h2/table/TableView.recompile:(Lorg/h2/engine/Session;ZZ)Lorg/h2/message/DbException;
      62: pop
      63: aload         5
      65: invokevirtual #371                // Method org/h2/table/TableView.isInvalid:()Z
      68: ifne          73
      71: iconst_1
      72: istore_2
      73: goto          11
      76: iload_2
      77: ifne          0
      80: aload_1
      81: invokevirtual #373                // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
      84: invokestatic  #374                // Method org/h2/table/TableView.clearIndexCaches:(Lorg/h2/engine/Database;)V
      87: return

  private void initMetaTables();
    Code:
       0: aload_0
       1: getfield      #375                // Field metaTablesInitialized:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #275                // Field infoSchema:Lorg/h2/schema/Schema;
      12: dup
      13: astore_1
      14: monitorenter
      15: aload_0
      16: getfield      #375                // Field metaTablesInitialized:Z
      19: ifne          70
      22: iconst_0
      23: istore_2
      24: invokestatic  #376                // Method org/h2/table/MetaTable.getMetaTableTypeCount:()I
      27: istore_3
      28: iload_2
      29: iload_3
      30: if_icmpge     65
      33: new           #377                // class org/h2/table/MetaTable
      36: dup
      37: aload_0
      38: getfield      #275                // Field infoSchema:Lorg/h2/schema/Schema;
      41: iconst_m1
      42: iload_2
      43: isub
      44: iload_2
      45: invokespecial #378                // Method org/h2/table/MetaTable."<init>":(Lorg/h2/schema/Schema;II)V
      48: astore        4
      50: aload_0
      51: getfield      #275                // Field infoSchema:Lorg/h2/schema/Schema;
      54: aload         4
      56: invokevirtual #379                // Method org/h2/schema/Schema.add:(Lorg/h2/schema/SchemaObject;)V
      59: iinc          2, 1
      62: goto          28
      65: aload_0
      66: iconst_1
      67: putfield      #375                // Field metaTablesInitialized:Z
      70: aload_1
      71: monitorexit
      72: goto          82
      75: astore        5
      77: aload_1
      78: monitorexit
      79: aload         5
      81: athrow
      82: return
    Exception table:
       from    to  target type
          15    72    75   any
          75    79    75   any

  private synchronized void addMeta(org.h2.engine.Session, org.h2.engine.DbObject);
    Code:
       0: aload_2
       1: invokeinterface #380,  1          // InterfaceMethod org/h2/engine/DbObject.getId:()I
       6: istore_3
       7: iload_3
       8: ifle          100
      11: aload_0
      12: getfield      #259                // Field starting:Z
      15: ifne          100
      18: aload_2
      19: invokeinterface #381,  1          // InterfaceMethod org/h2/engine/DbObject.isTemporary:()Z
      24: ifne          100
      27: aload_0
      28: getfield      #309                // Field meta:Lorg/h2/table/Table;
      31: invokevirtual #382                // Method org/h2/table/Table.getTemplateRow:()Lorg/h2/result/Row;
      34: astore        4
      36: new           #319                // class org/h2/engine/MetaRecord
      39: dup
      40: aload_2
      41: invokespecial #383                // Method org/h2/engine/MetaRecord."<init>":(Lorg/h2/engine/DbObject;)V
      44: astore        5
      46: aload         5
      48: aload         4
      50: invokevirtual #384                // Method org/h2/engine/MetaRecord.setRecord:(Lorg/h2/result/SearchRow;)V
      53: aload_0
      54: getfield      #22                 // Field objectIds:Lorg/h2/util/BitField;
      57: iload_3
      58: invokevirtual #315                // Method org/h2/util/BitField.set:(I)V
      61: getstatic     #385                // Field org/h2/engine/SysProperties.CHECK:Z
      64: ifeq          72
      67: aload_0
      68: aload_1
      69: invokevirtual #386                // Method verifyMetaLocked:(Lorg/h2/engine/Session;)V
      72: aload_0
      73: getfield      #309                // Field meta:Lorg/h2/table/Table;
      76: aload_1
      77: aload         4
      79: invokevirtual #387                // Method org/h2/table/Table.addRow:(Lorg/h2/engine/Session;Lorg/h2/result/Row;)V
      82: aload_0
      83: invokevirtual #388                // Method isMultiVersion:()Z
      86: ifeq          100
      89: aload_1
      90: aload_0
      91: getfield      #309                // Field meta:Lorg/h2/table/Table;
      94: iconst_0
      95: aload         4
      97: invokevirtual #389                // Method org/h2/engine/Session.log:(Lorg/h2/table/Table;SLorg/h2/result/Row;)V
     100: return

  public void verifyMetaLocked(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #309                // Field meta:Lorg/h2/table/Table;
       4: ifnull        29
       7: aload_0
       8: getfield      #309                // Field meta:Lorg/h2/table/Table;
      11: aload_1
      12: invokevirtual #390                // Method org/h2/table/Table.isLockedExclusivelyBy:(Lorg/h2/engine/Session;)Z
      15: ifne          29
      18: aload_0
      19: getfield      #36                 // Field lockMode:I
      22: ifeq          29
      25: invokestatic  #391                // Method org/h2/message/DbException.throwInternalError:()Ljava/lang/RuntimeException;
      28: athrow
      29: return

  public boolean lockMeta(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #309                // Field meta:Lorg/h2/table/Table;
       4: ifnonnull     9
       7: iconst_1
       8: ireturn
       9: getstatic     #392                // Field org/h2/engine/SysProperties.CHECK2:Z
      12: ifeq          142
      15: getstatic     #53                 // Field META_LOCK_DEBUGGING:Ljava/lang/ThreadLocal;
      18: invokevirtual #393                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      21: checkcast     #282                // class org/h2/engine/Session
      24: astore_2
      25: aload_2
      26: ifnonnull     55
      29: getstatic     #53                 // Field META_LOCK_DEBUGGING:Ljava/lang/ThreadLocal;
      32: aload_1
      33: invokevirtual #54                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      36: getstatic     #55                 // Field META_LOCK_DEBUGGING_STACK:Ljava/lang/ThreadLocal;
      39: new           #137                // class java/lang/Throwable
      42: dup
      43: ldc_w         #394                // String Last meta lock granted in this stack trace, this is debug information for following IllegalStateException
      46: invokespecial #395                // Method java/lang/Throwable."<init>":(Ljava/lang/String;)V
      49: invokevirtual #54                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      52: goto          142
      55: aload_2
      56: aload_1
      57: if_acmpeq     142
      60: getstatic     #55                 // Field META_LOCK_DEBUGGING_STACK:Ljava/lang/ThreadLocal;
      63: invokevirtual #393                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      66: checkcast     #137                // class java/lang/Throwable
      69: invokevirtual #396                // Method java/lang/Throwable.printStackTrace:()V
      72: new           #135                // class java/lang/IllegalStateException
      75: dup
      76: new           #164                // class java/lang/StringBuilder
      79: dup
      80: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
      83: ldc_w         #397                // String meta currently locked by
      86: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_2
      90: invokevirtual #398                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      93: ldc_w         #399                // String , sessionid=
      96: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload_2
     100: invokevirtual #400                // Method org/h2/engine/Session.getId:()I
     103: invokevirtual #344                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     106: ldc_w         #401                // String  and trying to be locked by different session,
     109: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload_1
     113: invokevirtual #398                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     116: ldc_w         #399                // String , sessionid=
     119: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload_1
     123: invokevirtual #400                // Method org/h2/engine/Session.getId:()I
     126: invokevirtual #344                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     129: ldc_w         #402                // String  on same thread
     132: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: invokespecial #403                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     141: athrow
     142: aload_0
     143: getfield      #309                // Field meta:Lorg/h2/table/Table;
     146: aload_1
     147: iconst_1
     148: iconst_1
     149: invokevirtual #404                // Method org/h2/table/Table.lock:(Lorg/h2/engine/Session;ZZ)Z
     152: ireturn

  public void unlockMeta(org.h2.engine.Session);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #405                // Method unlockMetaDebug:(Lorg/h2/engine/Session;)V
       5: aload_0
       6: getfield      #309                // Field meta:Lorg/h2/table/Table;
       9: aload_1
      10: invokevirtual #406                // Method org/h2/table/Table.unlock:(Lorg/h2/engine/Session;)V
      13: aload_1
      14: aload_0
      15: getfield      #309                // Field meta:Lorg/h2/table/Table;
      18: invokevirtual #407                // Method org/h2/engine/Session.unlock:(Lorg/h2/table/Table;)V
      21: return

  public void unlockMetaDebug(org.h2.engine.Session);
    Code:
       0: getstatic     #392                // Field org/h2/engine/SysProperties.CHECK2:Z
       3: ifeq          30
       6: getstatic     #53                 // Field META_LOCK_DEBUGGING:Ljava/lang/ThreadLocal;
       9: invokevirtual #393                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      12: aload_1
      13: if_acmpne     30
      16: getstatic     #53                 // Field META_LOCK_DEBUGGING:Ljava/lang/ThreadLocal;
      19: aconst_null
      20: invokevirtual #54                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      23: getstatic     #55                 // Field META_LOCK_DEBUGGING_STACK:Ljava/lang/ThreadLocal;
      26: aconst_null
      27: invokevirtual #54                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      30: return

  public synchronized void removeMeta(org.h2.engine.Session, int);
    Code:
       0: iload_2
       1: ifle          170
       4: aload_0
       5: getfield      #259                // Field starting:Z
       8: ifne          170
      11: aload_0
      12: getfield      #309                // Field meta:Lorg/h2/table/Table;
      15: iconst_0
      16: invokevirtual #408                // Method org/h2/table/Table.getTemplateSimpleRow:(Z)Lorg/h2/result/SearchRow;
      19: astore_3
      20: aload_3
      21: iconst_0
      22: iload_2
      23: invokestatic  #409                // Method org/h2/value/ValueInt.get:(I)Lorg/h2/value/ValueInt;
      26: invokeinterface #410,  3          // InterfaceMethod org/h2/result/SearchRow.setValue:(ILorg/h2/value/Value;)V
      31: aload_0
      32: aload_1
      33: invokevirtual #338                // Method lockMeta:(Lorg/h2/engine/Session;)Z
      36: istore        4
      38: aload_0
      39: getfield      #314                // Field metaIdIndex:Lorg/h2/index/Index;
      42: aload_1
      43: aload_3
      44: aload_3
      45: invokeinterface #316,  4          // InterfaceMethod org/h2/index/Index.find:(Lorg/h2/engine/Session;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)Lorg/h2/index/Cursor;
      50: astore        5
      52: aload         5
      54: invokeinterface #318,  1          // InterfaceMethod org/h2/index/Cursor.next:()Z
      59: ifeq          136
      62: getstatic     #385                // Field org/h2/engine/SysProperties.CHECK:Z
      65: ifeq          84
      68: aload_0
      69: getfield      #36                 // Field lockMode:I
      72: ifeq          84
      75: iload         4
      77: ifne          84
      80: invokestatic  #391                // Method org/h2/message/DbException.throwInternalError:()Ljava/lang/RuntimeException;
      83: athrow
      84: aload         5
      86: invokeinterface #320,  1          // InterfaceMethod org/h2/index/Cursor.get:()Lorg/h2/result/Row;
      91: astore        6
      93: aload_0
      94: getfield      #309                // Field meta:Lorg/h2/table/Table;
      97: aload_1
      98: aload         6
     100: invokevirtual #411                // Method org/h2/table/Table.removeRow:(Lorg/h2/engine/Session;Lorg/h2/result/Row;)V
     103: aload_0
     104: invokevirtual #388                // Method isMultiVersion:()Z
     107: ifeq          121
     110: aload_1
     111: aload_0
     112: getfield      #309                // Field meta:Lorg/h2/table/Table;
     115: iconst_1
     116: aload         6
     118: invokevirtual #389                // Method org/h2/engine/Session.log:(Lorg/h2/table/Table;SLorg/h2/result/Row;)V
     121: getstatic     #385                // Field org/h2/engine/SysProperties.CHECK:Z
     124: ifeq          133
     127: aload_0
     128: aload_1
     129: iload_2
     130: invokespecial #412                // Method checkMetaFree:(Lorg/h2/engine/Session;I)V
     133: goto          162
     136: iload         4
     138: ifne          162
     141: aload_0
     142: aload_1
     143: invokevirtual #405                // Method unlockMetaDebug:(Lorg/h2/engine/Session;)V
     146: aload_0
     147: getfield      #309                // Field meta:Lorg/h2/table/Table;
     150: aload_1
     151: invokevirtual #406                // Method org/h2/table/Table.unlock:(Lorg/h2/engine/Session;)V
     154: aload_1
     155: aload_0
     156: getfield      #309                // Field meta:Lorg/h2/table/Table;
     159: invokevirtual #407                // Method org/h2/engine/Session.unlock:(Lorg/h2/table/Table;)V
     162: aload_0
     163: getfield      #22                 // Field objectIds:Lorg/h2/util/BitField;
     166: iload_2
     167: invokevirtual #413                // Method org/h2/util/BitField.clear:(I)V
     170: return

  private java.util.HashMap<java.lang.String, org.h2.engine.DbObject> getMap(int);
    Code:
       0: iload_1
       1: tableswitch   { // 2 to 14
                     2: 68
                     3: 132
                     4: 132
                     5: 132
                     6: 76
                     7: 84
                     8: 92
                     9: 132
                    10: 100
                    11: 132
                    12: 108
                    13: 116
                    14: 124
               default: 132
          }
      68: aload_0
      69: getfield      #5                  // Field users:Ljava/util/HashMap;
      72: astore_2
      73: goto          156
      76: aload_0
      77: getfield      #6                  // Field settings:Ljava/util/HashMap;
      80: astore_2
      81: goto          156
      84: aload_0
      85: getfield      #4                  // Field roles:Ljava/util/HashMap;
      88: astore_2
      89: goto          156
      92: aload_0
      93: getfield      #8                  // Field rights:Ljava/util/HashMap;
      96: astore_2
      97: goto          156
     100: aload_0
     101: getfield      #7                  // Field schemas:Ljava/util/HashMap;
     104: astore_2
     105: goto          156
     108: aload_0
     109: getfield      #9                  // Field userDataTypes:Ljava/util/HashMap;
     112: astore_2
     113: goto          156
     116: aload_0
     117: getfield      #11                 // Field comments:Ljava/util/HashMap;
     120: astore_2
     121: goto          156
     124: aload_0
     125: getfield      #10                 // Field aggregates:Ljava/util/HashMap;
     128: astore_2
     129: goto          156
     132: new           #164                // class java/lang/StringBuilder
     135: dup
     136: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
     139: ldc_w         #414                // String type=
     142: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: iload_1
     146: invokevirtual #344                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     149: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     152: invokestatic  #415                // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
     155: athrow
     156: aload_2
     157: areturn

  public void addSchemaObject(org.h2.engine.Session, org.h2.schema.SchemaObject);
    Code:
       0: aload_2
       1: invokeinterface #416,  1          // InterfaceMethod org/h2/schema/SchemaObject.getId:()I
       6: istore_3
       7: iload_3
       8: ifle          22
      11: aload_0
      12: getfield      #259                // Field starting:Z
      15: ifne          22
      18: aload_0
      19: invokevirtual #417                // Method checkWritingAllowed:()V
      22: aload_0
      23: aload_1
      24: invokevirtual #338                // Method lockMeta:(Lorg/h2/engine/Session;)Z
      27: pop
      28: aload_0
      29: dup
      30: astore        4
      32: monitorenter
      33: aload_2
      34: invokeinterface #418,  1          // InterfaceMethod org/h2/schema/SchemaObject.getSchema:()Lorg/h2/schema/Schema;
      39: aload_2
      40: invokevirtual #379                // Method org/h2/schema/Schema.add:(Lorg/h2/schema/SchemaObject;)V
      43: aload_0
      44: aload_1
      45: aload_2
      46: invokespecial #419                // Method addMeta:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
      49: aload         4
      51: monitorexit
      52: goto          63
      55: astore        5
      57: aload         4
      59: monitorexit
      60: aload         5
      62: athrow
      63: return
    Exception table:
       from    to  target type
          33    52    55   any
          55    60    55   any

  public synchronized void addDatabaseObject(org.h2.engine.Session, org.h2.engine.DbObject);
    Code:
       0: aload_2
       1: invokeinterface #380,  1          // InterfaceMethod org/h2/engine/DbObject.getId:()I
       6: istore_3
       7: iload_3
       8: ifle          22
      11: aload_0
      12: getfield      #259                // Field starting:Z
      15: ifne          22
      18: aload_0
      19: invokevirtual #417                // Method checkWritingAllowed:()V
      22: aload_0
      23: aload_2
      24: invokeinterface #420,  1          // InterfaceMethod org/h2/engine/DbObject.getType:()I
      29: invokespecial #421                // Method getMap:(I)Ljava/util/HashMap;
      32: astore        4
      34: aload_2
      35: invokeinterface #420,  1          // InterfaceMethod org/h2/engine/DbObject.getType:()I
      40: iconst_2
      41: if_icmpne     86
      44: aload_2
      45: checkcast     #266                // class org/h2/engine/User
      48: astore        5
      50: aload         5
      52: invokevirtual #422                // Method org/h2/engine/User.isAdmin:()Z
      55: ifeq          86
      58: aload_0
      59: getfield      #269                // Field systemUser:Lorg/h2/engine/User;
      62: invokevirtual #423                // Method org/h2/engine/User.getName:()Ljava/lang/String;
      65: ldc_w         #267                // String DBA
      68: invokevirtual #95                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      71: ifeq          86
      74: aload_0
      75: getfield      #269                // Field systemUser:Lorg/h2/engine/User;
      78: aload         5
      80: invokevirtual #423                // Method org/h2/engine/User.getName:()Ljava/lang/String;
      83: invokevirtual #424                // Method org/h2/engine/User.rename:(Ljava/lang/String;)V
      86: aload_2
      87: invokeinterface #425,  1          // InterfaceMethod org/h2/engine/DbObject.getName:()Ljava/lang/String;
      92: astore        5
      94: getstatic     #385                // Field org/h2/engine/SysProperties.CHECK:Z
      97: ifeq          117
     100: aload         4
     102: aload         5
     104: invokevirtual #333                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     107: ifnull        117
     110: ldc_w         #426                // String object already exists
     113: invokestatic  #415                // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
     116: pop
     117: aload_0
     118: aload_1
     119: invokevirtual #338                // Method lockMeta:(Lorg/h2/engine/Session;)Z
     122: pop
     123: aload_0
     124: aload_1
     125: aload_2
     126: invokespecial #419                // Method addMeta:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
     129: aload         4
     131: aload         5
     133: aload_2
     134: invokevirtual #277                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     137: pop
     138: return

  public org.h2.engine.UserAggregate findAggregate(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field aggregates:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #333                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #427                // class org/h2/engine/UserAggregate
      11: areturn

  public org.h2.engine.Comment findComment(org.h2.engine.DbObject);
    Code:
       0: aload_1
       1: invokeinterface #420,  1          // InterfaceMethod org/h2/engine/DbObject.getType:()I
       6: bipush        13
       8: if_icmpne     13
      11: aconst_null
      12: areturn
      13: aload_1
      14: invokestatic  #428                // Method org/h2/engine/Comment.getKey:(Lorg/h2/engine/DbObject;)Ljava/lang/String;
      17: astore_2
      18: aload_0
      19: getfield      #11                 // Field comments:Ljava/util/HashMap;
      22: aload_2
      23: invokevirtual #333                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #429                // class org/h2/engine/Comment
      29: areturn

  public org.h2.engine.Role findRole(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field roles:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #333                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #278                // class org/h2/engine/Role
      11: areturn

  public org.h2.schema.Schema findSchema(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field schemas:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #333                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #270                // class org/h2/schema/Schema
      11: astore_2
      12: aload_2
      13: aload_0
      14: getfield      #275                // Field infoSchema:Lorg/h2/schema/Schema;
      17: if_acmpne     24
      20: aload_0
      21: invokespecial #430                // Method initMetaTables:()V
      24: aload_2
      25: areturn

  public org.h2.engine.Setting findSetting(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field settings:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #333                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #334                // class org/h2/engine/Setting
      11: areturn

  public org.h2.engine.User findUser(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field users:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #333                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #266                // class org/h2/engine/User
      11: areturn

  public org.h2.engine.UserDataType findUserDataType(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field userDataTypes:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #333                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #431                // class org/h2/engine/UserDataType
      11: areturn

  public org.h2.engine.User getUser(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #432                // Method findUser:(Ljava/lang/String;)Lorg/h2/engine/User;
       5: astore_2
       6: aload_2
       7: ifnonnull     18
      10: ldc_w         #433                // int 90032
      13: aload_1
      14: invokestatic  #210                // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      17: athrow
      18: aload_2
      19: areturn

  synchronized org.h2.engine.Session createSession(org.h2.engine.User);
    Code:
       0: aload_0
       1: getfield      #434                // Field closing:Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #19                 // Field exclusiveSession:Ljava/util/concurrent/atomic/AtomicReference;
      13: invokevirtual #435                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      16: ifnull        26
      19: ldc_w         #436                // int 90135
      22: invokestatic  #204                // Method org/h2/message/DbException.get:(I)Lorg/h2/message/DbException;
      25: athrow
      26: new           #282                // class org/h2/engine/Session
      29: dup
      30: aload_0
      31: aload_1
      32: aload_0
      33: dup
      34: getfield      #283                // Field nextSessionId:I
      37: iconst_1
      38: iadd
      39: dup_x1
      40: putfield      #283                // Field nextSessionId:I
      43: invokespecial #284                // Method org/h2/engine/Session."<init>":(Lorg/h2/engine/Database;Lorg/h2/engine/User;I)V
      46: astore_2
      47: aload_0
      48: getfield      #16                 // Field userSessions:Ljava/util/Set;
      51: aload_2
      52: invokeinterface #437,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      57: pop
      58: aload_0
      59: getfield      #145                // Field trace:Lorg/h2/message/Trace;
      62: ldc_w         #438                // String connecting session #{0} to {1}
      65: iconst_2
      66: anewarray     #23                 // class java/lang/Object
      69: dup
      70: iconst_0
      71: aload_2
      72: invokevirtual #400                // Method org/h2/engine/Session.getId:()I
      75: invokestatic  #244                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      78: aastore
      79: dup
      80: iconst_1
      81: aload_0
      82: getfield      #71                 // Field databaseName:Ljava/lang/String;
      85: aastore
      86: invokevirtual #245                // Method org/h2/message/Trace.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      89: aload_0
      90: getfield      #439                // Field delayedCloser:Lorg/h2/engine/DatabaseCloser;
      93: ifnull        108
      96: aload_0
      97: getfield      #439                // Field delayedCloser:Lorg/h2/engine/DatabaseCloser;
     100: invokevirtual #440                // Method org/h2/engine/DatabaseCloser.reset:()V
     103: aload_0
     104: aconst_null
     105: putfield      #439                // Field delayedCloser:Lorg/h2/engine/DatabaseCloser;
     108: aload_2
     109: areturn

  public synchronized void removeSession(org.h2.engine.Session);
    Code:
       0: aload_1
       1: ifnull        65
       4: aload_0
       5: getfield      #19                 // Field exclusiveSession:Ljava/util/concurrent/atomic/AtomicReference;
       8: aload_1
       9: aconst_null
      10: invokevirtual #441                // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      13: pop
      14: aload_0
      15: getfield      #16                 // Field userSessions:Ljava/util/Set;
      18: aload_1
      19: invokeinterface #442,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      24: pop
      25: aload_1
      26: aload_0
      27: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
      30: if_acmpeq     65
      33: aload_1
      34: aload_0
      35: getfield      #286                // Field lobSession:Lorg/h2/engine/Session;
      38: if_acmpeq     65
      41: aload_0
      42: getfield      #145                // Field trace:Lorg/h2/message/Trace;
      45: ldc_w         #443                // String disconnecting session #{0}
      48: iconst_1
      49: anewarray     #23                 // class java/lang/Object
      52: dup
      53: iconst_0
      54: aload_1
      55: invokevirtual #400                // Method org/h2/engine/Session.getId:()I
      58: invokestatic  #244                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: aastore
      62: invokevirtual #245                // Method org/h2/message/Trace.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      65: aload_0
      66: getfield      #16                 // Field userSessions:Ljava/util/Set;
      69: invokeinterface #444,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
      74: ifeq          182
      77: aload_1
      78: aload_0
      79: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
      82: if_acmpeq     182
      85: aload_1
      86: aload_0
      87: getfield      #286                // Field lobSession:Lorg/h2/engine/Session;
      90: if_acmpeq     182
      93: aload_0
      94: getfield      #445                // Field closeDelay:I
      97: ifne          108
     100: aload_0
     101: iconst_0
     102: invokevirtual #446                // Method close:(Z)V
     105: goto          182
     108: aload_0
     109: getfield      #445                // Field closeDelay:I
     112: ifge          116
     115: return
     116: aload_0
     117: new           #130                // class org/h2/engine/DatabaseCloser
     120: dup
     121: aload_0
     122: aload_0
     123: getfield      #445                // Field closeDelay:I
     126: sipush        1000
     129: imul
     130: iconst_0
     131: invokespecial #131                // Method org/h2/engine/DatabaseCloser."<init>":(Lorg/h2/engine/Database;IZ)V
     134: putfield      #439                // Field delayedCloser:Lorg/h2/engine/DatabaseCloser;
     137: aload_0
     138: getfield      #439                // Field delayedCloser:Lorg/h2/engine/DatabaseCloser;
     141: new           #164                // class java/lang/StringBuilder
     144: dup
     145: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
     148: ldc_w         #447                // String H2 Close Delay
     151: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: aload_0
     155: invokevirtual #448                // Method getShortName:()Ljava/lang/String;
     158: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     164: invokevirtual #449                // Method org/h2/engine/DatabaseCloser.setName:(Ljava/lang/String;)V
     167: aload_0
     168: getfield      #439                // Field delayedCloser:Lorg/h2/engine/DatabaseCloser;
     171: iconst_1
     172: invokevirtual #450                // Method org/h2/engine/DatabaseCloser.setDaemon:(Z)V
     175: aload_0
     176: getfield      #439                // Field delayedCloser:Lorg/h2/engine/DatabaseCloser;
     179: invokevirtual #451                // Method org/h2/engine/DatabaseCloser.start:()V
     182: aload_1
     183: aload_0
     184: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
     187: if_acmpeq     226
     190: aload_1
     191: aload_0
     192: getfield      #286                // Field lobSession:Lorg/h2/engine/Session;
     195: if_acmpeq     226
     198: aload_1
     199: ifnull        226
     202: aload_0
     203: getfield      #145                // Field trace:Lorg/h2/message/Trace;
     206: ldc_w         #452                // String disconnected session #{0}
     209: iconst_1
     210: anewarray     #23                 // class java/lang/Object
     213: dup
     214: iconst_0
     215: aload_1
     216: invokevirtual #400                // Method org/h2/engine/Session.getId:()I
     219: invokestatic  #244                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     222: aastore
     223: invokevirtual #245                // Method org/h2/message/Trace.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     226: return

  private synchronized void closeAllSessionsException(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #16                 // Field userSessions:Ljava/util/Set;
       4: aload_0
       5: getfield      #16                 // Field userSessions:Ljava/util/Set;
       8: invokeinterface #453,  1          // InterfaceMethod java/util/Set.size:()I
      13: anewarray     #282                // class org/h2/engine/Session
      16: invokeinterface #454,  2          // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      21: checkcast     #455                // class "[Lorg/h2/engine/Session;"
      24: astore_2
      25: aload_2
      26: astore_3
      27: aload_3
      28: arraylength
      29: istore        4
      31: iconst_0
      32: istore        5
      34: iload         5
      36: iload         4
      38: if_icmpge     101
      41: aload_3
      42: iload         5
      44: aaload
      45: astore        6
      47: aload         6
      49: aload_1
      50: if_acmpeq     95
      53: aload         6
      55: invokevirtual #456                // Method org/h2/engine/Session.rollback:()V
      58: aload         6
      60: invokevirtual #457                // Method org/h2/engine/Session.close:()V
      63: goto          95
      66: astore        7
      68: aload_0
      69: getfield      #145                // Field trace:Lorg/h2/message/Trace;
      72: aload         7
      74: ldc_w         #443                // String disconnecting session #{0}
      77: iconst_1
      78: anewarray     #23                 // class java/lang/Object
      81: dup
      82: iconst_0
      83: aload         6
      85: invokevirtual #400                // Method org/h2/engine/Session.getId:()I
      88: invokestatic  #244                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      91: aastore
      92: invokevirtual #147                // Method org/h2/message/Trace.error:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      95: iinc          5, 1
      98: goto          34
     101: return
    Exception table:
       from    to  target type
          53    63    66   Class org/h2/message/DbException

  void close(boolean);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #434                // Field closing:Z
       8: ifeq          24
      11: aload_2
      12: monitorexit
      13: invokestatic  #201                // Method org/h2/engine/Engine.getInstance:()Lorg/h2/engine/Engine;
      16: aload_0
      17: getfield      #71                 // Field databaseName:Ljava/lang/String;
      20: invokevirtual #202                // Method org/h2/engine/Engine.close:(Ljava/lang/String;)V
      23: return
      24: aload_0
      25: invokespecial #458                // Method throwLastBackgroundException:()V
      28: aload_0
      29: getfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
      32: getstatic     #102                // Field org/h2/store/FileLockMethod.SERIALIZED:Lorg/h2/store/FileLockMethod;
      35: if_acmpne     74
      38: aload_0
      39: getfield      #160                // Field reconnectChangePending:Z
      42: ifne          74
      45: aload_0
      46: iconst_0
      47: invokespecial #149                // Method closeOpenFilesAndUnlock:(Z)V
      50: goto          54
      53: astore_3
      54: aload_0
      55: getfield      #144                // Field traceSystem:Lorg/h2/message/TraceSystem;
      58: invokevirtual #148                // Method org/h2/message/TraceSystem.close:()V
      61: aload_2
      62: monitorexit
      63: invokestatic  #201                // Method org/h2/engine/Engine.getInstance:()Lorg/h2/engine/Engine;
      66: aload_0
      67: getfield      #71                 // Field databaseName:Ljava/lang/String;
      70: invokevirtual #202                // Method org/h2/engine/Engine.close:(Ljava/lang/String;)V
      73: return
      74: aload_0
      75: iconst_1
      76: putfield      #434                // Field closing:Z
      79: aload_0
      80: invokespecial #143                // Method stopServer:()V
      83: aload_0
      84: getfield      #16                 // Field userSessions:Ljava/util/Set;
      87: invokeinterface #444,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
      92: ifne          138
      95: iload_1
      96: ifne          112
      99: aload_2
     100: monitorexit
     101: invokestatic  #201                // Method org/h2/engine/Engine.getInstance:()Lorg/h2/engine/Engine;
     104: aload_0
     105: getfield      #71                 // Field databaseName:Ljava/lang/String;
     108: invokevirtual #202                // Method org/h2/engine/Engine.close:(Ljava/lang/String;)V
     111: return
     112: aload_0
     113: getfield      #145                // Field trace:Lorg/h2/message/Trace;
     116: ldc_w         #459                // String closing {0} from shutdown hook
     119: iconst_1
     120: anewarray     #23                 // class java/lang/Object
     123: dup
     124: iconst_0
     125: aload_0
     126: getfield      #71                 // Field databaseName:Ljava/lang/String;
     129: aastore
     130: invokevirtual #245                // Method org/h2/message/Trace.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     133: aload_0
     134: aconst_null
     135: invokespecial #460                // Method closeAllSessionsException:(Lorg/h2/engine/Session;)V
     138: aload_0
     139: getfield      #145                // Field trace:Lorg/h2/message/Trace;
     142: ldc_w         #461                // String closing {0}
     145: iconst_1
     146: anewarray     #23                 // class java/lang/Object
     149: dup
     150: iconst_0
     151: aload_0
     152: getfield      #71                 // Field databaseName:Ljava/lang/String;
     155: aastore
     156: invokevirtual #245                // Method org/h2/message/Trace.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     159: aload_0
     160: getfield      #327                // Field eventListener:Lorg/h2/api/DatabaseEventListener;
     163: ifnull        217
     166: aload_0
     167: iconst_0
     168: putfield      #434                // Field closing:Z
     171: aload_0
     172: getfield      #327                // Field eventListener:Lorg/h2/api/DatabaseEventListener;
     175: astore_3
     176: aload_0
     177: aconst_null
     178: putfield      #327                // Field eventListener:Lorg/h2/api/DatabaseEventListener;
     181: aload_3
     182: invokeinterface #462,  1          // InterfaceMethod org/h2/api/DatabaseEventListener.closingDatabase:()V
     187: aload_0
     188: getfield      #16                 // Field userSessions:Ljava/util/Set;
     191: invokeinterface #444,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
     196: ifne          212
     199: aload_2
     200: monitorexit
     201: invokestatic  #201                // Method org/h2/engine/Engine.getInstance:()Lorg/h2/engine/Engine;
     204: aload_0
     205: getfield      #71                 // Field databaseName:Ljava/lang/String;
     208: invokevirtual #202                // Method org/h2/engine/Engine.close:(Ljava/lang/String;)V
     211: return
     212: aload_0
     213: iconst_1
     214: putfield      #434                // Field closing:Z
     217: aload_2
     218: monitorexit
     219: goto          229
     222: astore        4
     224: aload_2
     225: monitorexit
     226: aload         4
     228: athrow
     229: aload_0
     230: invokespecial #463                // Method removeOrphanedLobs:()V
     233: aload_0
     234: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
     237: ifnull        433
     240: aload_0
     241: getfield      #39                 // Field powerOffCount:I
     244: iconst_m1
     245: if_icmpeq     347
     248: aload_0
     249: iconst_0
     250: invokevirtual #368                // Method getAllTablesAndViews:(Z)Ljava/util/ArrayList;
     253: invokevirtual #324                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     256: astore_2
     257: aload_2
     258: invokeinterface #325,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     263: ifeq          305
     266: aload_2
     267: invokeinterface #326,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     272: checkcast     #369                // class org/h2/table/Table
     275: astore_3
     276: aload_3
     277: invokevirtual #464                // Method org/h2/table/Table.isGlobalTemporary:()Z
     280: ifeq          294
     283: aload_3
     284: aload_0
     285: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
     288: invokevirtual #465                // Method org/h2/table/Table.removeChildrenAndResources:(Lorg/h2/engine/Session;)V
     291: goto          302
     294: aload_3
     295: aload_0
     296: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
     299: invokevirtual #466                // Method org/h2/table/Table.close:(Lorg/h2/engine/Session;)V
     302: goto          257
     305: aload_0
     306: iconst_3
     307: invokevirtual #467                // Method getAllSchemaObjects:(I)Ljava/util/ArrayList;
     310: invokevirtual #324                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     313: astore_2
     314: aload_2
     315: invokeinterface #325,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     320: ifeq          347
     323: aload_2
     324: invokeinterface #326,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     329: checkcast     #468                // class org/h2/schema/SchemaObject
     332: astore_3
     333: aload_3
     334: checkcast     #469                // class org/h2/schema/Sequence
     337: astore        4
     339: aload         4
     341: invokevirtual #470                // Method org/h2/schema/Sequence.close:()V
     344: goto          314
     347: aload_0
     348: iconst_4
     349: invokevirtual #467                // Method getAllSchemaObjects:(I)Ljava/util/ArrayList;
     352: invokevirtual #324                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     355: astore_2
     356: aload_2
     357: invokeinterface #325,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     362: ifeq          406
     365: aload_2
     366: invokeinterface #326,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     371: checkcast     #468                // class org/h2/schema/SchemaObject
     374: astore_3
     375: aload_3
     376: checkcast     #471                // class org/h2/schema/TriggerObject
     379: astore        4
     381: aload         4
     383: invokevirtual #472                // Method org/h2/schema/TriggerObject.close:()V
     386: goto          403
     389: astore        5
     391: aload_0
     392: getfield      #145                // Field trace:Lorg/h2/message/Trace;
     395: aload         5
     397: ldc_w         #473                // String close
     400: invokevirtual #474                // Method org/h2/message/Trace.error:(Ljava/lang/Throwable;Ljava/lang/String;)V
     403: goto          356
     406: aload_0
     407: getfield      #39                 // Field powerOffCount:I
     410: iconst_m1
     411: if_icmpeq     433
     414: aload_0
     415: getfield      #309                // Field meta:Lorg/h2/table/Table;
     418: aload_0
     419: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
     422: invokevirtual #466                // Method org/h2/table/Table.close:(Lorg/h2/engine/Session;)V
     425: aload_0
     426: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
     429: iconst_1
     430: invokevirtual #348                // Method org/h2/engine/Session.commit:(Z)V
     433: goto          448
     436: astore_2
     437: aload_0
     438: getfield      #145                // Field trace:Lorg/h2/message/Trace;
     441: aload_2
     442: ldc_w         #473                // String close
     445: invokevirtual #474                // Method org/h2/message/Trace.error:(Ljava/lang/Throwable;Ljava/lang/String;)V
     448: aload_0
     449: getfield      #47                 // Field tempFileDeleter:Lorg/h2/util/TempFileDeleter;
     452: invokevirtual #475                // Method org/h2/util/TempFileDeleter.deleteAll:()V
     455: aload_0
     456: iconst_1
     457: invokespecial #149                // Method closeOpenFilesAndUnlock:(Z)V
     460: goto          475
     463: astore_2
     464: aload_0
     465: getfield      #145                // Field trace:Lorg/h2/message/Trace;
     468: aload_2
     469: ldc_w         #473                // String close
     472: invokevirtual #474                // Method org/h2/message/Trace.error:(Ljava/lang/Throwable;Ljava/lang/String;)V
     475: aload_0
     476: getfield      #145                // Field trace:Lorg/h2/message/Trace;
     479: ldc_w         #476                // String closed
     482: invokevirtual #345                // Method org/h2/message/Trace.info:(Ljava/lang/String;)V
     485: aload_0
     486: getfield      #144                // Field traceSystem:Lorg/h2/message/TraceSystem;
     489: invokevirtual #148                // Method org/h2/message/TraceSystem.close:()V
     492: aload_0
     493: getfield      #132                // Field closeOnExit:Lorg/h2/engine/DatabaseCloser;
     496: ifnull        530
     499: aload_0
     500: getfield      #132                // Field closeOnExit:Lorg/h2/engine/DatabaseCloser;
     503: invokevirtual #440                // Method org/h2/engine/DatabaseCloser.reset:()V
     506: invokestatic  #133                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
     509: aload_0
     510: getfield      #132                // Field closeOnExit:Lorg/h2/engine/DatabaseCloser;
     513: invokevirtual #477                // Method java/lang/Runtime.removeShutdownHook:(Ljava/lang/Thread;)Z
     516: pop
     517: goto          525
     520: astore_2
     521: goto          525
     524: astore_2
     525: aload_0
     526: aconst_null
     527: putfield      #132                // Field closeOnExit:Lorg/h2/engine/DatabaseCloser;
     530: aload_0
     531: getfield      #478                // Field deleteFilesOnDisconnect:Z
     534: ifeq          575
     537: aload_0
     538: getfield      #66                 // Field persistent:Z
     541: ifeq          575
     544: aload_0
     545: iconst_0
     546: putfield      #478                // Field deleteFilesOnDisconnect:Z
     549: aload_0
     550: getfield      #71                 // Field databaseName:Ljava/lang/String;
     553: invokestatic  #479                // Method org/h2/store/fs/FileUtils.getParent:(Ljava/lang/String;)Ljava/lang/String;
     556: astore_2
     557: aload_0
     558: getfield      #71                 // Field databaseName:Ljava/lang/String;
     561: invokestatic  #480                // Method org/h2/store/fs/FileUtils.getName:(Ljava/lang/String;)Ljava/lang/String;
     564: astore_3
     565: aload_2
     566: aload_3
     567: iconst_1
     568: invokestatic  #481                // Method org/h2/tools/DeleteDbFiles.execute:(Ljava/lang/String;Ljava/lang/String;Z)V
     571: goto          575
     574: astore_2
     575: invokestatic  #201                // Method org/h2/engine/Engine.getInstance:()Lorg/h2/engine/Engine;
     578: aload_0
     579: getfield      #71                 // Field databaseName:Ljava/lang/String;
     582: invokevirtual #202                // Method org/h2/engine/Engine.close:(Ljava/lang/String;)V
     585: goto          603
     588: astore        6
     590: invokestatic  #201                // Method org/h2/engine/Engine.getInstance:()Lorg/h2/engine/Engine;
     593: aload_0
     594: getfield      #71                 // Field databaseName:Ljava/lang/String;
     597: invokevirtual #202                // Method org/h2/engine/Engine.close:(Ljava/lang/String;)V
     600: aload         6
     602: athrow
     603: return
    Exception table:
       from    to  target type
          45    50    53   Class org/h2/message/DbException
           4    13   222   any
          24    63   222   any
          74   101   222   any
         112   201   222   any
         212   219   222   any
         222   226   222   any
         381   386   389   Class java/sql/SQLException
         233   433   436   Class org/h2/message/DbException
         455   460   463   Class org/h2/message/DbException
         506   517   520   Class java/lang/IllegalStateException
         506   517   524   Class java/lang/SecurityException
         549   571   574   Class java/lang/Exception
           0    13   588   any
          24    63   588   any
          74   101   588   any
         112   201   588   any
         212   575   588   any
         588   590   588   any

  private void removeOrphanedLobs();
    Code:
       0: aload_0
       1: getfield      #66                 // Field persistent:Z
       4: ifne          8
       7: return
       8: aload_0
       9: getfield      #275                // Field infoSchema:Lorg/h2/schema/Schema;
      12: aload_0
      13: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
      16: ldc_w         #482                // String LOB_DATA
      19: invokevirtual #483                // Method org/h2/schema/Schema.findTableOrView:(Lorg/h2/engine/Session;Ljava/lang/String;)Lorg/h2/table/Table;
      22: ifnull        29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: istore_1
      31: iload_1
      32: aload_0
      33: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      36: ifnull        43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ior
      45: istore_1
      46: iload_1
      47: ifne          51
      50: return
      51: aload_0
      52: invokevirtual #346                // Method getLobStorage:()Lorg/h2/store/LobStorageInterface;
      55: pop
      56: aload_0
      57: getfield      #484                // Field lobStorage:Lorg/h2/store/LobStorageInterface;
      60: iconst_m1
      61: invokeinterface #485,  2          // InterfaceMethod org/h2/store/LobStorageInterface.removeAllForTable:(I)V
      66: goto          81
      69: astore_2
      70: aload_0
      71: getfield      #145                // Field trace:Lorg/h2/message/Trace;
      74: aload_2
      75: ldc_w         #473                // String close
      78: invokevirtual #474                // Method org/h2/message/Trace.error:(Ljava/lang/Throwable;Ljava/lang/String;)V
      81: return
    Exception table:
       from    to  target type
          51    66    69   Class org/h2/message/DbException

  private void stopWriter();
    Code:
       0: aload_0
       1: getfield      #263                // Field writer:Lorg/h2/store/WriterThread;
       4: ifnull        19
       7: aload_0
       8: getfield      #263                // Field writer:Lorg/h2/store/WriterThread;
      11: invokevirtual #486                // Method org/h2/store/WriterThread.stopThread:()V
      14: aload_0
      15: aconst_null
      16: putfield      #263                // Field writer:Lorg/h2/store/WriterThread;
      19: return

  private synchronized void closeOpenFilesAndUnlock(boolean);
    Code:
       0: aload_0
       1: invokespecial #196                // Method stopWriter:()V
       4: aload_0
       5: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
       8: ifnull        138
      11: iload_1
      12: ifeq          138
      15: aload_0
      16: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      19: invokevirtual #487                // Method org/h2/store/PageStore.checkpoint:()V
      22: aload_0
      23: getfield      #96                 // Field readOnly:Z
      26: ifne          63
      29: aload_0
      30: aload_0
      31: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      34: invokevirtual #488                // Method org/h2/store/PageStore.getPageStoreSession:()Lorg/h2/engine/Session;
      37: invokevirtual #338                // Method lockMeta:(Lorg/h2/engine/Session;)Z
      40: pop
      41: aload_0
      42: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      45: aload_0
      46: getfield      #489                // Field compactMode:I
      49: invokevirtual #490                // Method org/h2/store/PageStore.compact:(I)V
      52: aload_0
      53: aload_0
      54: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      57: invokevirtual #488                // Method org/h2/store/PageStore.getPageStoreSession:()Lorg/h2/engine/Session;
      60: invokevirtual #491                // Method unlockMeta:(Lorg/h2/engine/Session;)V
      63: goto          138
      66: astore_2
      67: getstatic     #392                // Field org/h2/engine/SysProperties.CHECK2:Z
      70: ifeq          102
      73: aload_2
      74: invokevirtual #141                // Method org/h2/message/DbException.getErrorCode:()I
      77: istore_3
      78: iload_3
      79: ldc           #203                // int 90098
      81: if_icmpeq     102
      84: iload_3
      85: ldc_w         #492                // int 50200
      88: if_icmpeq     102
      91: iload_3
      92: ldc_w         #493                // int 90031
      95: if_icmpeq     102
      98: aload_2
      99: invokevirtual #494                // Method org/h2/message/DbException.printStackTrace:()V
     102: aload_0
     103: getfield      #145                // Field trace:Lorg/h2/message/Trace;
     106: aload_2
     107: ldc_w         #473                // String close
     110: invokevirtual #474                // Method org/h2/message/Trace.error:(Ljava/lang/Throwable;Ljava/lang/String;)V
     113: goto          138
     116: astore_2
     117: getstatic     #392                // Field org/h2/engine/SysProperties.CHECK2:Z
     120: ifeq          127
     123: aload_2
     124: invokevirtual #396                // Method java/lang/Throwable.printStackTrace:()V
     127: aload_0
     128: getfield      #145                // Field trace:Lorg/h2/message/Trace;
     131: aload_2
     132: ldc_w         #473                // String close
     135: invokevirtual #474                // Method org/h2/message/Trace.error:(Ljava/lang/Throwable;Ljava/lang/String;)V
     138: aload_0
     139: iconst_0
     140: invokespecial #495                // Method reconnectModified:(Z)Z
     143: pop
     144: aload_0
     145: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
     148: ifnull        225
     151: aload_0
     152: getfield      #58                 // Field dbSettings:Lorg/h2/engine/DbSettings;
     155: getfield      #496                // Field org/h2/engine/DbSettings.maxCompactTime:I
     158: i2l
     159: lstore_2
     160: aload_0
     161: getfield      #489                // Field compactMode:I
     164: bipush        82
     166: if_icmpne     187
     169: aload_0
     170: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
     173: aload_0
     174: getfield      #58                 // Field dbSettings:Lorg/h2/engine/DbSettings;
     177: getfield      #496                // Field org/h2/engine/DbSettings.maxCompactTime:I
     180: i2l
     181: invokevirtual #497                // Method org/h2/mvstore/db/MVTableEngine$Store.compactFile:(J)V
     184: goto          217
     187: aload_0
     188: getfield      #489                // Field compactMode:I
     191: bipush        84
     193: if_icmpne     203
     196: ldc2_w        #498                // long 9223372036854775807l
     199: lstore_2
     200: goto          217
     203: aload_0
     204: invokevirtual #500                // Method getSettings:()Lorg/h2/engine/DbSettings;
     207: getfield      #501                // Field org/h2/engine/DbSettings.defragAlways:Z
     210: ifeq          217
     213: ldc2_w        #498                // long 9223372036854775807l
     216: lstore_2
     217: aload_0
     218: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
     221: lload_2
     222: invokevirtual #502                // Method org/h2/mvstore/db/MVTableEngine$Store.close:(J)V
     225: aload_0
     226: invokespecial #503                // Method closeFiles:()V
     229: aload_0
     230: getfield      #66                 // Field persistent:Z
     233: ifeq          264
     236: aload_0
     237: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
     240: ifnonnull     264
     243: aload_0
     244: getfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
     247: getstatic     #246                // Field org/h2/store/FileLockMethod.NO:Lorg/h2/store/FileLockMethod;
     250: if_acmpeq     264
     253: aload_0
     254: getfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
     257: getstatic     #100                // Field org/h2/store/FileLockMethod.FS:Lorg/h2/store/FileLockMethod;
     260: if_acmpeq     264
     263: return
     264: aload_0
     265: getfield      #66                 // Field persistent:Z
     268: ifeq          275
     271: aload_0
     272: invokespecial #258                // Method deleteOldTempFiles:()V
     275: aload_0
     276: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
     279: ifnull        294
     282: aload_0
     283: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
     286: invokevirtual #457                // Method org/h2/engine/Session.close:()V
     289: aload_0
     290: aconst_null
     291: putfield      #285                // Field systemSession:Lorg/h2/engine/Session;
     294: aload_0
     295: getfield      #286                // Field lobSession:Lorg/h2/engine/Session;
     298: ifnull        313
     301: aload_0
     302: getfield      #286                // Field lobSession:Lorg/h2/engine/Session;
     305: invokevirtual #457                // Method org/h2/engine/Session.close:()V
     308: aload_0
     309: aconst_null
     310: putfield      #286                // Field lobSession:Lorg/h2/engine/Session;
     313: aload_0
     314: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
     317: ifnull        391
     320: aload_0
     321: getfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
     324: getstatic     #102                // Field org/h2/store/FileLockMethod.SERIALIZED:Lorg/h2/store/FileLockMethod;
     327: if_acmpne     379
     330: aload_0
     331: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
     334: invokevirtual #174                // Method org/h2/store/FileLock.load:()Ljava/util/Properties;
     337: ldc           #175                // String changePending
     339: invokevirtual #504                // Method java/util/Properties.containsKey:(Ljava/lang/Object;)Z
     342: ifeq          379
     345: getstatic     #179                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     348: aload_0
     349: getfield      #62                 // Field reconnectCheckDelayNs:J
     352: l2d
     353: ldc2_w        #180                // double 1.1d
     356: dmul
     357: d2l
     358: invokevirtual #182                // Method java/util/concurrent/TimeUnit.toMillis:(J)J
     361: invokestatic  #183                // Method java/lang/Thread.sleep:(J)V
     364: goto          379
     367: astore_2
     368: aload_0
     369: getfield      #145                // Field trace:Lorg/h2/message/Trace;
     372: aload_2
     373: ldc_w         #473                // String close
     376: invokevirtual #474                // Method org/h2/message/Trace.error:(Ljava/lang/Throwable;Ljava/lang/String;)V
     379: aload_0
     380: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
     383: invokevirtual #199                // Method org/h2/store/FileLock.unlock:()V
     386: aload_0
     387: aconst_null
     388: putfield      #159                // Field lock:Lorg/h2/store/FileLock;
     391: return
    Exception table:
       from    to  target type
          15    63    66   Class org/h2/message/DbException
          15    63   116   Class java/lang/Throwable
         345   364   367   Class java/lang/InterruptedException

  private synchronized void closeFiles();
    Code:
       0: aload_0
       1: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
       4: ifnull        14
       7: aload_0
       8: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      11: invokevirtual #197                // Method org/h2/mvstore/db/MVTableEngine$Store.closeImmediately:()V
      14: aload_0
      15: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      18: ifnull        33
      21: aload_0
      22: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      25: invokevirtual #198                // Method org/h2/store/PageStore.close:()V
      28: aload_0
      29: aconst_null
      30: putfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      33: goto          48
      36: astore_1
      37: aload_0
      38: getfield      #145                // Field trace:Lorg/h2/message/Trace;
      41: aload_1
      42: ldc_w         #473                // String close
      45: invokevirtual #474                // Method org/h2/message/Trace.error:(Ljava/lang/Throwable;Ljava/lang/String;)V
      48: return
    Exception table:
       from    to  target type
           0    33    36   Class org/h2/message/DbException

  private void checkMetaFree(org.h2.engine.Session, int);
    Code:
       0: aload_0
       1: getfield      #309                // Field meta:Lorg/h2/table/Table;
       4: iconst_0
       5: invokevirtual #408                // Method org/h2/table/Table.getTemplateSimpleRow:(Z)Lorg/h2/result/SearchRow;
       8: astore_3
       9: aload_3
      10: iconst_0
      11: iload_2
      12: invokestatic  #409                // Method org/h2/value/ValueInt.get:(I)Lorg/h2/value/ValueInt;
      15: invokeinterface #410,  3          // InterfaceMethod org/h2/result/SearchRow.setValue:(ILorg/h2/value/Value;)V
      20: aload_0
      21: getfield      #314                // Field metaIdIndex:Lorg/h2/index/Index;
      24: aload_1
      25: aload_3
      26: aload_3
      27: invokeinterface #316,  4          // InterfaceMethod org/h2/index/Index.find:(Lorg/h2/engine/Session;Lorg/h2/result/SearchRow;Lorg/h2/result/SearchRow;)Lorg/h2/index/Cursor;
      32: astore        4
      34: aload         4
      36: invokeinterface #318,  1          // InterfaceMethod org/h2/index/Cursor.next:()Z
      41: ifeq          48
      44: invokestatic  #391                // Method org/h2/message/DbException.throwInternalError:()Ljava/lang/RuntimeException;
      47: pop
      48: return

  public synchronized int allocateObjectId();
    Code:
       0: aload_0
       1: getfield      #22                 // Field objectIds:Lorg/h2/util/BitField;
       4: iconst_0
       5: invokevirtual #506                // Method org/h2/util/BitField.nextClearBit:(I)I
       8: istore_1
       9: aload_0
      10: getfield      #22                 // Field objectIds:Lorg/h2/util/BitField;
      13: iload_1
      14: invokevirtual #315                // Method org/h2/util/BitField.set:(I)V
      17: iload_1
      18: ireturn

  public java.util.ArrayList<org.h2.engine.UserAggregate> getAllAggregates();
    Code:
       0: new           #507                // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #10                 // Field aggregates:Ljava/util/HashMap;
       8: invokevirtual #508                // Method java/util/HashMap.values:()Ljava/util/Collection;
      11: invokespecial #509                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      14: areturn

  public java.util.ArrayList<org.h2.engine.Comment> getAllComments();
    Code:
       0: new           #507                // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #11                 // Field comments:Ljava/util/HashMap;
       8: invokevirtual #508                // Method java/util/HashMap.values:()Ljava/util/Collection;
      11: invokespecial #509                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      14: areturn

  public int getAllowLiterals();
    Code:
       0: aload_0
       1: getfield      #259                // Field starting:Z
       4: ifeq          9
       7: iconst_2
       8: ireturn
       9: aload_0
      10: getfield      #37                 // Field allowLiterals:I
      13: ireturn

  public java.util.ArrayList<org.h2.engine.Right> getAllRights();
    Code:
       0: new           #507                // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #8                  // Field rights:Ljava/util/HashMap;
       8: invokevirtual #508                // Method java/util/HashMap.values:()Ljava/util/Collection;
      11: invokespecial #509                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      14: areturn

  public java.util.ArrayList<org.h2.engine.Role> getAllRoles();
    Code:
       0: new           #507                // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #4                  // Field roles:Ljava/util/HashMap;
       8: invokevirtual #508                // Method java/util/HashMap.values:()Ljava/util/Collection;
      11: invokespecial #509                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      14: areturn

  public java.util.ArrayList<org.h2.schema.SchemaObject> getAllSchemaObjects();
    Code:
       0: aload_0
       1: invokespecial #430                // Method initMetaTables:()V
       4: invokestatic  #317                // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
       7: astore_1
       8: aload_0
       9: getfield      #7                  // Field schemas:Ljava/util/HashMap;
      12: invokevirtual #508                // Method java/util/HashMap.values:()Ljava/util/Collection;
      15: invokeinterface #510,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #325,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          52
      30: aload_2
      31: invokeinterface #326,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #270                // class org/h2/schema/Schema
      39: astore_3
      40: aload_1
      41: aload_3
      42: invokevirtual #511                // Method org/h2/schema/Schema.getAll:()Ljava/util/ArrayList;
      45: invokevirtual #512                // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      48: pop
      49: goto          21
      52: aload_1
      53: areturn

  public java.util.ArrayList<org.h2.schema.SchemaObject> getAllSchemaObjects(int);
    Code:
       0: iload_1
       1: ifne          8
       4: aload_0
       5: invokespecial #430                // Method initMetaTables:()V
       8: invokestatic  #317                // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
      11: astore_2
      12: aload_0
      13: getfield      #7                  // Field schemas:Ljava/util/HashMap;
      16: invokevirtual #508                // Method java/util/HashMap.values:()Ljava/util/Collection;
      19: invokeinterface #510,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      24: astore_3
      25: aload_3
      26: invokeinterface #325,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          59
      34: aload_3
      35: invokeinterface #326,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #270                // class org/h2/schema/Schema
      43: astore        4
      45: aload_2
      46: aload         4
      48: iload_1
      49: invokevirtual #513                // Method org/h2/schema/Schema.getAll:(I)Ljava/util/ArrayList;
      52: invokevirtual #512                // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      55: pop
      56: goto          25
      59: aload_2
      60: areturn

  public java.util.ArrayList<org.h2.table.Table> getAllTablesAndViews(boolean);
    Code:
       0: iload_1
       1: ifeq          8
       4: aload_0
       5: invokespecial #430                // Method initMetaTables:()V
       8: invokestatic  #317                // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
      11: astore_2
      12: aload_0
      13: getfield      #7                  // Field schemas:Ljava/util/HashMap;
      16: invokevirtual #508                // Method java/util/HashMap.values:()Ljava/util/Collection;
      19: invokeinterface #510,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      24: astore_3
      25: aload_3
      26: invokeinterface #325,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          58
      34: aload_3
      35: invokeinterface #326,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #270                // class org/h2/schema/Schema
      43: astore        4
      45: aload_2
      46: aload         4
      48: invokevirtual #514                // Method org/h2/schema/Schema.getAllTablesAndViews:()Ljava/util/ArrayList;
      51: invokevirtual #512                // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      54: pop
      55: goto          25
      58: aload_2
      59: areturn

  public java.util.ArrayList<org.h2.table.TableSynonym> getAllSynonyms();
    Code:
       0: invokestatic  #317                // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
       3: astore_1
       4: aload_0
       5: getfield      #7                  // Field schemas:Ljava/util/HashMap;
       8: invokevirtual #508                // Method java/util/HashMap.values:()Ljava/util/Collection;
      11: invokeinterface #510,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #325,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          48
      26: aload_2
      27: invokeinterface #326,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #270                // class org/h2/schema/Schema
      35: astore_3
      36: aload_1
      37: aload_3
      38: invokevirtual #515                // Method org/h2/schema/Schema.getAllSynonyms:()Ljava/util/ArrayList;
      41: invokevirtual #512                // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      44: pop
      45: goto          17
      48: aload_1
      49: areturn

  public java.util.ArrayList<org.h2.table.Table> getTableOrViewByName(java.lang.String);
    Code:
       0: invokestatic  #317                // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
       3: astore_2
       4: aload_0
       5: getfield      #7                  // Field schemas:Ljava/util/HashMap;
       8: invokevirtual #508                // Method java/util/HashMap.values:()Ljava/util/Collection;
      11: invokeinterface #510,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #325,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          60
      26: aload_3
      27: invokeinterface #326,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #270                // class org/h2/schema/Schema
      35: astore        4
      37: aload         4
      39: aload_1
      40: invokevirtual #516                // Method org/h2/schema/Schema.getTableOrViewByName:(Ljava/lang/String;)Lorg/h2/table/Table;
      43: astore        5
      45: aload         5
      47: ifnull        57
      50: aload_2
      51: aload         5
      53: invokevirtual #294                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      56: pop
      57: goto          17
      60: aload_2
      61: areturn

  public java.util.ArrayList<org.h2.schema.Schema> getAllSchemas();
    Code:
       0: aload_0
       1: invokespecial #430                // Method initMetaTables:()V
       4: new           #507                // class java/util/ArrayList
       7: dup
       8: aload_0
       9: getfield      #7                  // Field schemas:Ljava/util/HashMap;
      12: invokevirtual #508                // Method java/util/HashMap.values:()Ljava/util/Collection;
      15: invokespecial #509                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      18: areturn

  public java.util.ArrayList<org.h2.engine.Setting> getAllSettings();
    Code:
       0: new           #507                // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #6                  // Field settings:Ljava/util/HashMap;
       8: invokevirtual #508                // Method java/util/HashMap.values:()Ljava/util/Collection;
      11: invokespecial #509                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      14: areturn

  public java.util.ArrayList<org.h2.engine.UserDataType> getAllUserDataTypes();
    Code:
       0: new           #507                // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #9                  // Field userDataTypes:Ljava/util/HashMap;
       8: invokevirtual #508                // Method java/util/HashMap.values:()Ljava/util/Collection;
      11: invokespecial #509                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      14: areturn

  public java.util.ArrayList<org.h2.engine.User> getAllUsers();
    Code:
       0: new           #507                // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #5                  // Field users:Ljava/util/HashMap;
       8: invokevirtual #508                // Method java/util/HashMap.values:()Ljava/util/Collection;
      11: invokespecial #509                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      14: areturn

  public java.lang.String getCacheType();
    Code:
       0: aload_0
       1: getfield      #127                // Field cacheType:Ljava/lang/String;
       4: areturn

  public java.lang.String getCluster();
    Code:
       0: aload_0
       1: getfield      #30                 // Field cluster:Ljava/lang/String;
       4: areturn

  public org.h2.value.CompareMode getCompareMode();
    Code:
       0: aload_0
       1: getfield      #64                 // Field compareMode:Lorg/h2/value/CompareMode;
       4: areturn

  public java.lang.String getDatabasePath();
    Code:
       0: aload_0
       1: getfield      #66                 // Field persistent:Z
       4: ifeq          15
       7: aload_0
       8: getfield      #71                 // Field databaseName:Ljava/lang/String;
      11: invokestatic  #517                // Method org/h2/store/fs/FileUtils.toRealPath:(Ljava/lang/String;)Ljava/lang/String;
      14: areturn
      15: aconst_null
      16: areturn

  public java.lang.String getShortName();
    Code:
       0: aload_0
       1: getfield      #73                 // Field databaseShortName:Ljava/lang/String;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #71                 // Field databaseName:Ljava/lang/String;
       4: areturn

  public org.h2.engine.Session[] getSessions(boolean);
    Code:
       0: aload_0
       1: getfield      #16                 // Field userSessions:Ljava/util/Set;
       4: dup
       5: astore_3
       6: monitorenter
       7: new           #507                // class java/util/ArrayList
      10: dup
      11: aload_0
      12: getfield      #16                 // Field userSessions:Ljava/util/Set;
      15: invokespecial #509                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      18: astore_2
      19: aload_3
      20: monitorexit
      21: goto          31
      24: astore        4
      26: aload_3
      27: monitorexit
      28: aload         4
      30: athrow
      31: aload_0
      32: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
      35: astore_3
      36: aload_0
      37: getfield      #286                // Field lobSession:Lorg/h2/engine/Session;
      40: astore        4
      42: iload_1
      43: ifeq          56
      46: aload_3
      47: ifnull        56
      50: aload_2
      51: aload_3
      52: invokevirtual #294                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      55: pop
      56: iload_1
      57: ifeq          72
      60: aload         4
      62: ifnull        72
      65: aload_2
      66: aload         4
      68: invokevirtual #294                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      71: pop
      72: aload_2
      73: iconst_0
      74: anewarray     #282                // class org/h2/engine/Session
      77: invokevirtual #518                // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      80: checkcast     #455                // class "[Lorg/h2/engine/Session;"
      83: areturn
    Exception table:
       from    to  target type
           7    21    24   any
          24    28    24   any

  public void updateMeta(org.h2.engine.Session, org.h2.engine.DbObject);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #338                // Method lockMeta:(Lorg/h2/engine/Session;)Z
       5: pop
       6: aload_0
       7: dup
       8: astore_3
       9: monitorenter
      10: aload_2
      11: invokeinterface #380,  1          // InterfaceMethod org/h2/engine/DbObject.getId:()I
      16: istore        4
      18: aload_0
      19: aload_1
      20: iload         4
      22: invokevirtual #519                // Method removeMeta:(Lorg/h2/engine/Session;I)V
      25: aload_0
      26: aload_1
      27: aload_2
      28: invokespecial #419                // Method addMeta:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
      31: iload         4
      33: ifle          45
      36: aload_0
      37: getfield      #22                 // Field objectIds:Lorg/h2/util/BitField;
      40: iload         4
      42: invokevirtual #315                // Method org/h2/util/BitField.set:(I)V
      45: aload_3
      46: monitorexit
      47: goto          57
      50: astore        5
      52: aload_3
      53: monitorexit
      54: aload         5
      56: athrow
      57: return
    Exception table:
       from    to  target type
          10    47    50   any
          50    54    50   any

  public synchronized void renameSchemaObject(org.h2.engine.Session, org.h2.schema.SchemaObject, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #417                // Method checkWritingAllowed:()V
       4: aload_2
       5: invokeinterface #418,  1          // InterfaceMethod org/h2/schema/SchemaObject.getSchema:()Lorg/h2/schema/Schema;
      10: aload_2
      11: aload_3
      12: invokevirtual #520                // Method org/h2/schema/Schema.rename:(Lorg/h2/schema/SchemaObject;Ljava/lang/String;)V
      15: aload_0
      16: aload_1
      17: aload_2
      18: invokespecial #521                // Method updateMetaAndFirstLevelChildren:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
      21: return

  private synchronized void updateMetaAndFirstLevelChildren(org.h2.engine.Session, org.h2.engine.DbObject);
    Code:
       0: aload_2
       1: invokeinterface #522,  1          // InterfaceMethod org/h2/engine/DbObject.getChildren:()Ljava/util/ArrayList;
       6: astore_3
       7: aload_0
       8: aload_2
       9: invokevirtual #523                // Method findComment:(Lorg/h2/engine/DbObject;)Lorg/h2/engine/Comment;
      12: astore        4
      14: aload         4
      16: ifnull        28
      19: aload         4
      21: invokevirtual #524                // Method org/h2/engine/Comment.toString:()Ljava/lang/String;
      24: invokestatic  #415                // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      27: pop
      28: aload_0
      29: aload_1
      30: aload_2
      31: invokevirtual #525                // Method updateMeta:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
      34: aload_3
      35: ifnull        86
      38: aload_3
      39: invokevirtual #324                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      42: astore        5
      44: aload         5
      46: invokeinterface #325,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          86
      54: aload         5
      56: invokeinterface #326,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #526                // class org/h2/engine/DbObject
      64: astore        6
      66: aload         6
      68: invokeinterface #527,  1          // InterfaceMethod org/h2/engine/DbObject.getCreateSQL:()Ljava/lang/String;
      73: ifnull        83
      76: aload_0
      77: aload_1
      78: aload         6
      80: invokevirtual #525                // Method updateMeta:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
      83: goto          44
      86: return

  public synchronized void renameDatabaseObject(org.h2.engine.Session, org.h2.engine.DbObject, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #417                // Method checkWritingAllowed:()V
       4: aload_2
       5: invokeinterface #420,  1          // InterfaceMethod org/h2/engine/DbObject.getType:()I
      10: istore        4
      12: aload_0
      13: iload         4
      15: invokespecial #421                // Method getMap:(I)Ljava/util/HashMap;
      18: astore        5
      20: getstatic     #385                // Field org/h2/engine/SysProperties.CHECK:Z
      23: ifeq          115
      26: aload         5
      28: aload_2
      29: invokeinterface #425,  1          // InterfaceMethod org/h2/engine/DbObject.getName:()Ljava/lang/String;
      34: invokevirtual #528                // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      37: ifne          69
      40: new           #164                // class java/lang/StringBuilder
      43: dup
      44: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
      47: ldc_w         #529                // String not found:
      50: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_2
      54: invokeinterface #425,  1          // InterfaceMethod org/h2/engine/DbObject.getName:()Ljava/lang/String;
      59: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokestatic  #415                // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      68: pop
      69: aload_2
      70: invokeinterface #425,  1          // InterfaceMethod org/h2/engine/DbObject.getName:()Ljava/lang/String;
      75: aload_3
      76: invokevirtual #95                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      79: ifne          91
      82: aload         5
      84: aload_3
      85: invokevirtual #528                // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      88: ifeq          115
      91: new           #164                // class java/lang/StringBuilder
      94: dup
      95: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
      98: ldc_w         #530                // String object already exists:
     101: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_3
     105: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: invokestatic  #415                // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
     114: pop
     115: aload_2
     116: invokeinterface #531,  1          // InterfaceMethod org/h2/engine/DbObject.checkRename:()V
     121: aload_2
     122: invokeinterface #380,  1          // InterfaceMethod org/h2/engine/DbObject.getId:()I
     127: istore        6
     129: aload_0
     130: aload_1
     131: invokevirtual #338                // Method lockMeta:(Lorg/h2/engine/Session;)Z
     134: pop
     135: aload_0
     136: aload_1
     137: iload         6
     139: invokevirtual #519                // Method removeMeta:(Lorg/h2/engine/Session;I)V
     142: aload         5
     144: aload_2
     145: invokeinterface #425,  1          // InterfaceMethod org/h2/engine/DbObject.getName:()Ljava/lang/String;
     150: invokevirtual #532                // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     153: pop
     154: aload_2
     155: aload_3
     156: invokeinterface #533,  2          // InterfaceMethod org/h2/engine/DbObject.rename:(Ljava/lang/String;)V
     161: aload         5
     163: aload_3
     164: aload_2
     165: invokevirtual #277                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     168: pop
     169: aload_0
     170: aload_1
     171: aload_2
     172: invokespecial #521                // Method updateMetaAndFirstLevelChildren:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
     175: return

  public java.lang.String createTempFile();
    Code:
       0: aload_0
       1: getfield      #96                 // Field readOnly:Z
       4: istore_1
       5: aload_0
       6: getfield      #71                 // Field databaseName:Ljava/lang/String;
       9: astore_2
      10: aload_0
      11: getfield      #66                 // Field persistent:Z
      14: ifne          38
      17: new           #164                // class java/lang/StringBuilder
      20: dup
      21: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
      24: ldc_w         #534                // String memFS:
      27: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_2
      31: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: astore_2
      38: aload_2
      39: ldc_w         #535                // String .temp.db
      42: iconst_1
      43: iload_1
      44: invokestatic  #536                // Method org/h2/store/fs/FileUtils.createTempFile:(Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/lang/String;
      47: areturn
      48: astore_1
      49: aload_1
      50: aload_0
      51: getfield      #71                 // Field databaseName:Ljava/lang/String;
      54: invokestatic  #538                // Method org/h2/message/DbException.convertIOException:(Ljava/io/IOException;Ljava/lang/String;)Lorg/h2/message/DbException;
      57: athrow
    Exception table:
       from    to  target type
           0    47    48   Class java/io/IOException

  private void deleteOldTempFiles();
    Code:
       0: aload_0
       1: getfield      #71                 // Field databaseName:Ljava/lang/String;
       4: invokestatic  #479                // Method org/h2/store/fs/FileUtils.getParent:(Ljava/lang/String;)Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: invokestatic  #539                // Method org/h2/store/fs/FileUtils.newDirectoryStream:(Ljava/lang/String;)Ljava/util/List;
      12: invokeinterface #540,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #325,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          66
      27: aload_2
      28: invokeinterface #326,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #352                // class java/lang/String
      36: astore_3
      37: aload_3
      38: ldc_w         #535                // String .temp.db
      41: invokevirtual #217                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      44: ifeq          63
      47: aload_3
      48: aload_0
      49: getfield      #71                 // Field databaseName:Ljava/lang/String;
      52: invokevirtual #541                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      55: ifeq          63
      58: aload_3
      59: invokestatic  #542                // Method org/h2/store/fs/FileUtils.tryDelete:(Ljava/lang/String;)Z
      62: pop
      63: goto          18
      66: return

  public org.h2.schema.Schema getSchema(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #543                // Method findSchema:(Ljava/lang/String;)Lorg/h2/schema/Schema;
       5: astore_2
       6: aload_2
       7: ifnonnull     18
      10: ldc_w         #544                // int 90079
      13: aload_1
      14: invokestatic  #210                // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      17: athrow
      18: aload_2
      19: areturn

  public synchronized void removeDatabaseObject(org.h2.engine.Session, org.h2.engine.DbObject);
    Code:
       0: aload_0
       1: invokevirtual #417                // Method checkWritingAllowed:()V
       4: aload_2
       5: invokeinterface #425,  1          // InterfaceMethod org/h2/engine/DbObject.getName:()Ljava/lang/String;
      10: astore_3
      11: aload_2
      12: invokeinterface #420,  1          // InterfaceMethod org/h2/engine/DbObject.getType:()I
      17: istore        4
      19: aload_0
      20: iload         4
      22: invokespecial #421                // Method getMap:(I)Ljava/util/HashMap;
      25: astore        5
      27: getstatic     #385                // Field org/h2/engine/SysProperties.CHECK:Z
      30: ifeq          66
      33: aload         5
      35: aload_3
      36: invokevirtual #528                // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      39: ifne          66
      42: new           #164                // class java/lang/StringBuilder
      45: dup
      46: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
      49: ldc_w         #529                // String not found:
      52: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_3
      56: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokestatic  #415                // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      65: pop
      66: aload_0
      67: aload_2
      68: invokevirtual #523                // Method findComment:(Lorg/h2/engine/DbObject;)Lorg/h2/engine/Comment;
      71: astore        6
      73: aload_0
      74: aload_1
      75: invokevirtual #338                // Method lockMeta:(Lorg/h2/engine/Session;)Z
      78: pop
      79: aload         6
      81: ifnull        91
      84: aload_0
      85: aload_1
      86: aload         6
      88: invokevirtual #545                // Method removeDatabaseObject:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
      91: aload_2
      92: invokeinterface #380,  1          // InterfaceMethod org/h2/engine/DbObject.getId:()I
      97: istore        7
      99: aload_2
     100: aload_1
     101: invokeinterface #546,  2          // InterfaceMethod org/h2/engine/DbObject.removeChildrenAndResources:(Lorg/h2/engine/Session;)V
     106: aload         5
     108: aload_3
     109: invokevirtual #532                // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     112: pop
     113: aload_0
     114: aload_1
     115: iload         7
     117: invokevirtual #519                // Method removeMeta:(Lorg/h2/engine/Session;I)V
     120: return

  public org.h2.table.Table getDependentTable(org.h2.schema.SchemaObject, org.h2.table.Table);
    Code:
       0: aload_1
       1: invokeinterface #547,  1          // InterfaceMethod org/h2/schema/SchemaObject.getType:()I
       6: tableswitch   { // 1 to 13
                     1: 72
                     2: 72
                     3: 74
                     4: 72
                     5: 72
                     6: 74
                     7: 74
                     8: 72
                     9: 74
                    10: 74
                    11: 74
                    12: 74
                    13: 72
               default: 74
          }
      72: aconst_null
      73: areturn
      74: new           #13                 // class java/util/HashSet
      77: dup
      78: invokespecial #14                 // Method java/util/HashSet."<init>":()V
      81: astore_3
      82: aload_0
      83: iconst_0
      84: invokevirtual #368                // Method getAllTablesAndViews:(Z)Ljava/util/ArrayList;
      87: invokevirtual #324                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      90: astore        4
      92: aload         4
      94: invokeinterface #325,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      99: ifeq          161
     102: aload         4
     104: invokeinterface #326,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     109: checkcast     #369                // class org/h2/table/Table
     112: astore        5
     114: aload_2
     115: aload         5
     117: if_acmpne     123
     120: goto          92
     123: getstatic     #548                // Field org/h2/table/TableType.VIEW:Lorg/h2/table/TableType;
     126: aload         5
     128: invokevirtual #549                // Method org/h2/table/Table.getTableType:()Lorg/h2/table/TableType;
     131: if_acmpne     137
     134: goto          92
     137: aload_3
     138: invokevirtual #550                // Method java/util/HashSet.clear:()V
     141: aload         5
     143: aload_3
     144: invokevirtual #551                // Method org/h2/table/Table.addDependencies:(Ljava/util/HashSet;)V
     147: aload_3
     148: aload_1
     149: invokevirtual #552                // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
     152: ifeq          158
     155: aload         5
     157: areturn
     158: goto          92
     161: aconst_null
     162: areturn

  public void removeSchemaObject(org.h2.engine.Session, org.h2.schema.SchemaObject);
    Code:
       0: aload_2
       1: invokeinterface #547,  1          // InterfaceMethod org/h2/schema/SchemaObject.getType:()I
       6: istore_3
       7: iload_3
       8: ifne          43
      11: aload_2
      12: checkcast     #369                // class org/h2/table/Table
      15: astore        4
      17: aload         4
      19: invokevirtual #553                // Method org/h2/table/Table.isTemporary:()Z
      22: ifeq          40
      25: aload         4
      27: invokevirtual #464                // Method org/h2/table/Table.isGlobalTemporary:()Z
      30: ifne          40
      33: aload_1
      34: aload         4
      36: invokevirtual #554                // Method org/h2/engine/Session.removeLocalTempTable:(Lorg/h2/table/Table;)V
      39: return
      40: goto          130
      43: iload_3
      44: iconst_1
      45: if_icmpne     89
      48: aload_2
      49: checkcast     #555                // class org/h2/index/Index
      52: astore        4
      54: aload         4
      56: invokeinterface #556,  1          // InterfaceMethod org/h2/index/Index.getTable:()Lorg/h2/table/Table;
      61: astore        5
      63: aload         5
      65: invokevirtual #553                // Method org/h2/table/Table.isTemporary:()Z
      68: ifeq          86
      71: aload         5
      73: invokevirtual #464                // Method org/h2/table/Table.isGlobalTemporary:()Z
      76: ifne          86
      79: aload_1
      80: aload         4
      82: invokevirtual #557                // Method org/h2/engine/Session.removeLocalTempTableIndex:(Lorg/h2/index/Index;)V
      85: return
      86: goto          130
      89: iload_3
      90: iconst_5
      91: if_icmpne     130
      94: aload_2
      95: checkcast     #558                // class org/h2/constraint/Constraint
      98: astore        4
     100: aload         4
     102: invokevirtual #559                // Method org/h2/constraint/Constraint.getTable:()Lorg/h2/table/Table;
     105: astore        5
     107: aload         5
     109: invokevirtual #553                // Method org/h2/table/Table.isTemporary:()Z
     112: ifeq          130
     115: aload         5
     117: invokevirtual #464                // Method org/h2/table/Table.isGlobalTemporary:()Z
     120: ifne          130
     123: aload_1
     124: aload         4
     126: invokevirtual #560                // Method org/h2/engine/Session.removeLocalTempTableConstraint:(Lorg/h2/constraint/Constraint;)V
     129: return
     130: aload_0
     131: invokevirtual #417                // Method checkWritingAllowed:()V
     134: aload_0
     135: aload_1
     136: invokevirtual #338                // Method lockMeta:(Lorg/h2/engine/Session;)Z
     139: pop
     140: aload_0
     141: dup
     142: astore        4
     144: monitorenter
     145: aload_0
     146: aload_2
     147: invokevirtual #523                // Method findComment:(Lorg/h2/engine/DbObject;)Lorg/h2/engine/Comment;
     150: astore        5
     152: aload         5
     154: ifnull        164
     157: aload_0
     158: aload_1
     159: aload         5
     161: invokevirtual #545                // Method removeDatabaseObject:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
     164: aload_2
     165: invokeinterface #418,  1          // InterfaceMethod org/h2/schema/SchemaObject.getSchema:()Lorg/h2/schema/Schema;
     170: aload_2
     171: invokevirtual #561                // Method org/h2/schema/Schema.remove:(Lorg/h2/schema/SchemaObject;)V
     174: aload_2
     175: invokeinterface #416,  1          // InterfaceMethod org/h2/schema/SchemaObject.getId:()I
     180: istore        6
     182: aload_0
     183: getfield      #259                // Field starting:Z
     186: ifne          247
     189: aload_0
     190: aload_2
     191: aconst_null
     192: invokevirtual #562                // Method getDependentTable:(Lorg/h2/schema/SchemaObject;Lorg/h2/table/Table;)Lorg/h2/table/Table;
     195: astore        7
     197: aload         7
     199: ifnull        240
     202: aload_2
     203: invokeinterface #418,  1          // InterfaceMethod org/h2/schema/SchemaObject.getSchema:()Lorg/h2/schema/Schema;
     208: aload_2
     209: invokevirtual #379                // Method org/h2/schema/Schema.add:(Lorg/h2/schema/SchemaObject;)V
     212: ldc_w         #563                // int 90107
     215: iconst_2
     216: anewarray     #352                // class java/lang/String
     219: dup
     220: iconst_0
     221: aload_2
     222: invokeinterface #564,  1          // InterfaceMethod org/h2/schema/SchemaObject.getSQL:()Ljava/lang/String;
     227: aastore
     228: dup
     229: iconst_1
     230: aload         7
     232: invokevirtual #565                // Method org/h2/table/Table.getSQL:()Ljava/lang/String;
     235: aastore
     236: invokestatic  #566                // Method org/h2/message/DbException.get:(I[Ljava/lang/String;)Lorg/h2/message/DbException;
     239: athrow
     240: aload_2
     241: aload_1
     242: invokeinterface #567,  2          // InterfaceMethod org/h2/schema/SchemaObject.removeChildrenAndResources:(Lorg/h2/engine/Session;)V
     247: aload_0
     248: aload_1
     249: iload         6
     251: invokevirtual #519                // Method removeMeta:(Lorg/h2/engine/Session;I)V
     254: aload         4
     256: monitorexit
     257: goto          268
     260: astore        8
     262: aload         4
     264: monitorexit
     265: aload         8
     267: athrow
     268: return
    Exception table:
       from    to  target type
         145   257   260   any
         260   265   260   any

  public boolean isPersistent();
    Code:
       0: aload_0
       1: getfield      #66                 // Field persistent:Z
       4: ireturn

  public org.h2.message.TraceSystem getTraceSystem();
    Code:
       0: aload_0
       1: getfield      #144                // Field traceSystem:Lorg/h2/message/TraceSystem;
       4: areturn

  public synchronized void setCacheSize(int);
    Code:
       0: aload_0
       1: getfield      #259                // Field starting:Z
       4: ifeq          22
       7: invokestatic  #568                // Method org/h2/util/Utils.getMemoryMax:()J
      10: invokestatic  #569                // Method org/h2/util/MathUtils.convertLongToInt:(J)I
      13: iconst_2
      14: idiv
      15: istore_2
      16: iload_1
      17: iload_2
      18: invokestatic  #570                // Method java/lang/Math.min:(II)I
      21: istore_1
      22: aload_0
      23: iload_1
      24: putfield      #91                 // Field cacheSize:I
      27: aload_0
      28: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      31: ifnull        47
      34: aload_0
      35: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      38: invokevirtual #571                // Method org/h2/store/PageStore.getCache:()Lorg/h2/util/Cache;
      41: iload_1
      42: invokeinterface #572,  2          // InterfaceMethod org/h2/util/Cache.setMaxMemory:(I)V
      47: aload_0
      48: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      51: ifnull        66
      54: aload_0
      55: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      58: iconst_1
      59: iload_1
      60: invokestatic  #573                // Method java/lang/Math.max:(II)I
      63: invokevirtual #574                // Method org/h2/mvstore/db/MVTableEngine$Store.setCacheSize:(I)V
      66: return

  public synchronized void setMasterUser(org.h2.engine.User);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
       5: invokevirtual #338                // Method lockMeta:(Lorg/h2/engine/Session;)Z
       8: pop
       9: aload_0
      10: aload_0
      11: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
      14: aload_1
      15: invokevirtual #339                // Method addDatabaseObject:(Lorg/h2/engine/Session;Lorg/h2/engine/DbObject;)V
      18: aload_0
      19: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
      22: iconst_1
      23: invokevirtual #348                // Method org/h2/engine/Session.commit:(Z)V
      26: return

  public org.h2.engine.Role getPublicRole();
    Code:
       0: aload_0
       1: getfield      #280                // Field publicRole:Lorg/h2/engine/Role;
       4: areturn

  public synchronized java.lang.String getTempTableName(java.lang.String, org.h2.engine.Session);
    Code:
       0: new           #164                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc_w         #575                // String _COPY_
      14: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: aload_2
      18: invokevirtual #400                // Method org/h2/engine/Session.getId:()I
      21: invokevirtual #344                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: ldc_w         #576                // String _
      27: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_0
      31: dup
      32: getfield      #577                // Field nextTempTableId:I
      35: dup_x1
      36: iconst_1
      37: iadd
      38: putfield      #577                // Field nextTempTableId:I
      41: invokevirtual #344                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: astore_3
      48: aload_0
      49: getfield      #273                // Field mainSchema:Lorg/h2/schema/Schema;
      52: aload_2
      53: aload_3
      54: invokevirtual #483                // Method org/h2/schema/Schema.findTableOrView:(Lorg/h2/engine/Session;Ljava/lang/String;)Lorg/h2/table/Table;
      57: ifnonnull     0
      60: aload_3
      61: areturn

  public void setCompareMode(org.h2.value.CompareMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #64                 // Field compareMode:Lorg/h2/value/CompareMode;
       5: return

  public void setCluster(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field cluster:Ljava/lang/String;
       5: return

  public void checkWritingAllowed();
    Code:
       0: aload_0
       1: getfield      #96                 // Field readOnly:Z
       4: ifeq          14
       7: ldc_w         #261                // int 90097
      10: invokestatic  #204                // Method org/h2/message/DbException.get:(I)Lorg/h2/message/DbException;
      13: athrow
      14: aload_0
      15: getfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
      18: getstatic     #102                // Field org/h2/store/FileLockMethod.SERIALIZED:Lorg/h2/store/FileLockMethod;
      21: if_acmpne     38
      24: aload_0
      25: getfield      #160                // Field reconnectChangePending:Z
      28: ifne          38
      31: ldc_w         #261                // int 90097
      34: invokestatic  #204                // Method org/h2/message/DbException.get:(I)Lorg/h2/message/DbException;
      37: athrow
      38: return

  public boolean isReadOnly();
    Code:
       0: aload_0
       1: getfield      #96                 // Field readOnly:Z
       4: ireturn

  public void setWriteDelay(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #31                 // Field writeDelay:I
       5: aload_0
       6: getfield      #263                // Field writer:Lorg/h2/store/WriterThread;
       9: ifnull        37
      12: aload_0
      13: getfield      #263                // Field writer:Lorg/h2/store/WriterThread;
      16: iload_1
      17: invokevirtual #578                // Method org/h2/store/WriterThread.setWriteDelay:(I)V
      20: aload_0
      21: aload_0
      22: getfield      #31                 // Field writeDelay:I
      25: iconst_5
      26: if_icmpge     33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: putfield      #579                // Field flushOnEachCommit:Z
      37: aload_0
      38: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      41: ifnull        65
      44: iload_1
      45: ifge          52
      48: iconst_0
      49: goto          53
      52: iload_1
      53: istore_2
      54: aload_0
      55: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      58: invokevirtual #153                // Method org/h2/mvstore/db/MVTableEngine$Store.getStore:()Lorg/h2/mvstore/MVStore;
      61: iload_2
      62: invokevirtual #580                // Method org/h2/mvstore/MVStore.setAutoCommitDelay:(I)V
      65: return

  public int getRetentionTime();
    Code:
       0: aload_0
       1: getfield      #155                // Field retentionTime:I
       4: ireturn

  public void setRetentionTime(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #155                // Field retentionTime:I
       5: aload_0
       6: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
       9: ifnull        23
      12: aload_0
      13: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      16: invokevirtual #153                // Method org/h2/mvstore/db/MVTableEngine$Store.getStore:()Lorg/h2/mvstore/MVStore;
      19: iload_1
      20: invokevirtual #581                // Method org/h2/mvstore/MVStore.setRetentionTime:(I)V
      23: return

  public void setAllowBuiltinAliasOverride(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #582                // Field allowBuiltinAliasOverride:Z
       5: return

  public boolean isAllowBuiltinAliasOverride();
    Code:
       0: aload_0
       1: getfield      #582                // Field allowBuiltinAliasOverride:Z
       4: ireturn

  public boolean getFlushOnEachCommit();
    Code:
       0: aload_0
       1: getfield      #579                // Field flushOnEachCommit:Z
       4: ireturn

  public java.util.ArrayList<org.h2.store.InDoubtTransaction> getInDoubtTransactions();
    Code:
       0: aload_0
       1: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
       4: ifnull        15
       7: aload_0
       8: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      11: invokevirtual #583                // Method org/h2/mvstore/db/MVTableEngine$Store.getInDoubtTransactions:()Ljava/util/ArrayList;
      14: areturn
      15: aload_0
      16: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      19: ifnonnull     26
      22: aconst_null
      23: goto          33
      26: aload_0
      27: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      30: invokevirtual #584                // Method org/h2/store/PageStore.getInDoubtTransactions:()Ljava/util/ArrayList;
      33: areturn

  synchronized void prepareCommit(org.h2.engine.Session, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #96                 // Field readOnly:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      12: ifnull        25
      15: aload_0
      16: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      19: aload_1
      20: aload_2
      21: invokevirtual #585                // Method org/h2/mvstore/db/MVTableEngine$Store.prepareCommit:(Lorg/h2/engine/Session;Ljava/lang/String;)V
      24: return
      25: aload_0
      26: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      29: ifnull        48
      32: aload_0
      33: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      36: invokevirtual #586                // Method org/h2/store/PageStore.flushLog:()V
      39: aload_0
      40: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      43: aload_1
      44: aload_2
      45: invokevirtual #587                // Method org/h2/store/PageStore.prepareCommit:(Lorg/h2/engine/Session;Ljava/lang/String;)V
      48: return

  synchronized void commit(org.h2.engine.Session);
    Code:
       0: aload_0
       1: invokespecial #458                // Method throwLastBackgroundException:()V
       4: aload_0
       5: getfield      #96                 // Field readOnly:Z
       8: ifeq          12
      11: return
      12: aload_0
      13: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      16: ifnull        27
      19: aload_0
      20: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      23: aload_1
      24: invokevirtual #588                // Method org/h2/store/PageStore.commit:(Lorg/h2/engine/Session;)V
      27: aload_1
      28: invokevirtual #589                // Method org/h2/engine/Session.setAllCommitted:()V
      31: return

  private void throwLastBackgroundException();
    Code:
       0: aload_0
       1: getfield      #590                // Field backgroundException:Lorg/h2/message/DbException;
       4: ifnull        41
       7: aload_0
       8: getfield      #590                // Field backgroundException:Lorg/h2/message/DbException;
      11: astore_1
      12: aload_0
      13: aconst_null
      14: putfield      #590                // Field backgroundException:Lorg/h2/message/DbException;
      17: aload_1
      18: ifnull        41
      21: aload_1
      22: invokevirtual #141                // Method org/h2/message/DbException.getErrorCode:()I
      25: aload_1
      26: iconst_1
      27: anewarray     #352                // class java/lang/String
      30: dup
      31: iconst_0
      32: aload_1
      33: invokevirtual #591                // Method org/h2/message/DbException.getMessage:()Ljava/lang/String;
      36: aastore
      37: invokestatic  #592                // Method org/h2/message/DbException.get:(ILjava/lang/Throwable;[Ljava/lang/String;)Lorg/h2/message/DbException;
      40: athrow
      41: return

  public void setBackgroundException(org.h2.message.DbException);
    Code:
       0: aload_0
       1: getfield      #590                // Field backgroundException:Lorg/h2/message/DbException;
       4: ifnonnull     33
       7: aload_0
       8: aload_1
       9: putfield      #590                // Field backgroundException:Lorg/h2/message/DbException;
      12: aload_0
      13: invokevirtual #593                // Method getTraceSystem:()Lorg/h2/message/TraceSystem;
      16: astore_2
      17: aload_2
      18: ifnull        33
      21: aload_2
      22: iconst_2
      23: invokevirtual #208                // Method org/h2/message/TraceSystem.getTrace:(I)Lorg/h2/message/Trace;
      26: aload_1
      27: ldc_w         #594                // String flush
      30: invokevirtual #474                // Method org/h2/message/Trace.error:(Ljava/lang/Throwable;Ljava/lang/String;)V
      33: return

  public synchronized void flush();
    Code:
       0: aload_0
       1: getfield      #96                 // Field readOnly:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      12: ifnull        22
      15: aload_0
      16: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      19: invokevirtual #586                // Method org/h2/store/PageStore.flushLog:()V
      22: aload_0
      23: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      26: ifnull        50
      29: aload_0
      30: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      33: invokevirtual #595                // Method org/h2/mvstore/db/MVTableEngine$Store.flush:()V
      36: goto          50
      39: astore_1
      40: aload_0
      41: aload_1
      42: invokestatic  #150                // Method org/h2/message/DbException.convert:(Ljava/lang/Throwable;)Lorg/h2/message/DbException;
      45: putfield      #590                // Field backgroundException:Lorg/h2/message/DbException;
      48: aload_1
      49: athrow
      50: return
    Exception table:
       from    to  target type
          29    36    39   Class java/lang/RuntimeException

  public void setEventListener(org.h2.api.DatabaseEventListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #327                // Field eventListener:Lorg/h2/api/DatabaseEventListener;
       5: return

  public void setEventListenerClass(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #223                // Method java/lang/String.length:()I
       8: ifne          19
      11: aload_0
      12: aconst_null
      13: putfield      #327                // Field eventListener:Lorg/h2/api/DatabaseEventListener;
      16: goto          110
      19: aload_0
      20: aload_1
      21: invokestatic  #597                // Method org/h2/util/JdbcUtils.loadUserClass:(Ljava/lang/String;)Ljava/lang/Class;
      24: invokevirtual #598                // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      27: checkcast     #599                // class org/h2/api/DatabaseEventListener
      30: putfield      #327                // Field eventListener:Lorg/h2/api/DatabaseEventListener;
      33: aload_0
      34: getfield      #106                // Field databaseURL:Ljava/lang/String;
      37: astore_2
      38: aload_0
      39: getfield      #75                 // Field cipher:Ljava/lang/String;
      42: ifnull        73
      45: new           #164                // class java/lang/StringBuilder
      48: dup
      49: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
      52: aload_2
      53: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: ldc_w         #600                // String ;CIPHER=
      59: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: getfield      #75                 // Field cipher:Ljava/lang/String;
      66: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: astore_2
      73: aload_0
      74: getfield      #327                // Field eventListener:Lorg/h2/api/DatabaseEventListener;
      77: aload_2
      78: invokeinterface #601,  2          // InterfaceMethod org/h2/api/DatabaseEventListener.init:(Ljava/lang/String;)V
      83: goto          110
      86: astore_2
      87: ldc_w         #602                // int 90099
      90: aload_2
      91: iconst_2
      92: anewarray     #352                // class java/lang/String
      95: dup
      96: iconst_0
      97: aload_1
      98: aastore
      99: dup
     100: iconst_1
     101: aload_2
     102: invokevirtual #603                // Method java/lang/Throwable.toString:()Ljava/lang/String;
     105: aastore
     106: invokestatic  #592                // Method org/h2/message/DbException.get:(ILjava/lang/Throwable;[Ljava/lang/String;)Lorg/h2/message/DbException;
     109: athrow
     110: return
    Exception table:
       from    to  target type
          19    83    86   Class java/lang/Throwable

  public void setProgress(int, java.lang.String, int, int);
    Code:
       0: aload_0
       1: getfield      #327                // Field eventListener:Lorg/h2/api/DatabaseEventListener;
       4: ifnull        26
       7: aload_0
       8: getfield      #327                // Field eventListener:Lorg/h2/api/DatabaseEventListener;
      11: iload_1
      12: aload_2
      13: iload_3
      14: iload         4
      16: invokeinterface #604,  5          // InterfaceMethod org/h2/api/DatabaseEventListener.setProgress:(ILjava/lang/String;II)V
      21: goto          26
      24: astore        5
      26: return
    Exception table:
       from    to  target type
           7    21    24   Class java/lang/Exception

  public void exceptionThrown(java.sql.SQLException, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #327                // Field eventListener:Lorg/h2/api/DatabaseEventListener;
       4: ifnull        22
       7: aload_0
       8: getfield      #327                // Field eventListener:Lorg/h2/api/DatabaseEventListener;
      11: aload_1
      12: aload_2
      13: invokeinterface #605,  3          // InterfaceMethod org/h2/api/DatabaseEventListener.exceptionThrown:(Ljava/sql/SQLException;Ljava/lang/String;)V
      18: goto          22
      21: astore_3
      22: return
    Exception table:
       from    to  target type
           7    18    21   Class java/lang/Exception

  public synchronized void sync();
    Code:
       0: aload_0
       1: getfield      #96                 // Field readOnly:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      12: ifnull        22
      15: aload_0
      16: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      19: invokevirtual #606                // Method org/h2/mvstore/db/MVTableEngine$Store.sync:()V
      22: aload_0
      23: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      26: ifnull        36
      29: aload_0
      30: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      33: invokevirtual #607                // Method org/h2/store/PageStore.sync:()V
      36: return

  public int getMaxMemoryRows();
    Code:
       0: aload_0
       1: getfield      #33                 // Field maxMemoryRows:I
       4: ireturn

  public void setMaxMemoryRows(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #33                 // Field maxMemoryRows:I
       5: return

  public void setMaxMemoryUndo(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #35                 // Field maxMemoryUndo:I
       5: return

  public int getMaxMemoryUndo();
    Code:
       0: aload_0
       1: getfield      #35                 // Field maxMemoryUndo:I
       4: ireturn

  public void setLockMode(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 3
                     0: 32
                     1: 49
                     2: 49
                     3: 49
               default: 52
          }
      32: aload_0
      33: getfield      #121                // Field multiThreaded:Z
      36: ifeq          63
      39: ldc_w         #608                // int 90021
      42: ldc_w         #609                // String LOCK_MODE=0 & MULTI_THREADED
      45: invokestatic  #210                // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      48: athrow
      49: goto          63
      52: ldc_w         #610                // String lock mode
      55: iload_1
      56: invokestatic  #244                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      59: invokestatic  #611                // Method org/h2/message/DbException.getInvalidValueException:(Ljava/lang/String;Ljava/lang/Object;)Lorg/h2/message/DbException;
      62: athrow
      63: aload_0
      64: iload_1
      65: putfield      #36                 // Field lockMode:I
      68: return

  public int getLockMode();
    Code:
       0: aload_0
       1: getfield      #36                 // Field lockMode:I
       4: ireturn

  public synchronized void setCloseDelay(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #445                // Field closeDelay:I
       5: return

  public org.h2.engine.Session getSystemSession();
    Code:
       0: aload_0
       1: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
       4: areturn

  public boolean isClosing();
    Code:
       0: aload_0
       1: getfield      #434                // Field closing:Z
       4: ireturn

  public void setMaxLengthInplaceLob(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #74                 // Field maxLengthInplaceLob:I
       5: return

  public int getMaxLengthInplaceLob();
    Code:
       0: aload_0
       1: getfield      #74                 // Field maxLengthInplaceLob:I
       4: ireturn

  public void setIgnoreCase(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #612                // Field ignoreCase:Z
       5: return

  public boolean getIgnoreCase();
    Code:
       0: aload_0
       1: getfield      #259                // Field starting:Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #612                // Field ignoreCase:Z
      13: ireturn

  public synchronized void setDeleteFilesOnDisconnect(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #478                // Field deleteFilesOnDisconnect:Z
       5: return

  public java.lang.String getLobCompressionAlgorithm(int);
    Code:
       0: aload_0
       1: getfield      #613                // Field lobCompressionAlgorithm:Ljava/lang/String;
       4: areturn

  public void setLobCompressionAlgorithm(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #613                // Field lobCompressionAlgorithm:Ljava/lang/String;
       5: return

  public synchronized void setMaxLogSize(long);
    Code:
       0: aload_0
       1: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
       4: ifnull        15
       7: aload_0
       8: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      11: lload_1
      12: invokevirtual #614                // Method org/h2/store/PageStore.setMaxLogSize:(J)V
      15: return

  public void setAllowLiterals(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #37                 // Field allowLiterals:I
       5: return

  public boolean getOptimizeReuseResults();
    Code:
       0: aload_0
       1: getfield      #40                 // Field optimizeReuseResults:Z
       4: ireturn

  public void setOptimizeReuseResults(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #40                 // Field optimizeReuseResults:Z
       5: return

  public java.lang.Object getLobSyncObject();
    Code:
       0: aload_0
       1: getfield      #24                 // Field lobSyncObject:Ljava/lang/Object;
       4: areturn

  public int getSessionCount();
    Code:
       0: aload_0
       1: getfield      #16                 // Field userSessions:Ljava/util/Set;
       4: invokeinterface #453,  1          // InterfaceMethod java/util/Set.size:()I
       9: ireturn

  public void setReferentialIntegrity(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #41                 // Field referentialIntegrity:Z
       5: return

  public boolean getReferentialIntegrity();
    Code:
       0: aload_0
       1: getfield      #41                 // Field referentialIntegrity:Z
       4: ireturn

  public void setQueryStatistics(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #615                // Field queryStatistics:Z
       5: aload_0
       6: dup
       7: astore_2
       8: monitorenter
       9: iload_1
      10: ifne          18
      13: aload_0
      14: aconst_null
      15: putfield      #616                // Field queryStatisticsData:Lorg/h2/engine/QueryStatisticsData;
      18: aload_2
      19: monitorexit
      20: goto          28
      23: astore_3
      24: aload_2
      25: monitorexit
      26: aload_3
      27: athrow
      28: return
    Exception table:
       from    to  target type
           9    20    23   any
          23    26    23   any

  public boolean getQueryStatistics();
    Code:
       0: aload_0
       1: getfield      #615                // Field queryStatistics:Z
       4: ireturn

  public void setQueryStatisticsMaxEntries(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #50                 // Field queryStatisticsMaxEntries:I
       5: aload_0
       6: getfield      #616                // Field queryStatisticsData:Lorg/h2/engine/QueryStatisticsData;
       9: ifnull        44
      12: aload_0
      13: dup
      14: astore_2
      15: monitorenter
      16: aload_0
      17: getfield      #616                // Field queryStatisticsData:Lorg/h2/engine/QueryStatisticsData;
      20: ifnull        34
      23: aload_0
      24: getfield      #616                // Field queryStatisticsData:Lorg/h2/engine/QueryStatisticsData;
      27: aload_0
      28: getfield      #50                 // Field queryStatisticsMaxEntries:I
      31: invokevirtual #617                // Method org/h2/engine/QueryStatisticsData.setMaxQueryEntries:(I)V
      34: aload_2
      35: monitorexit
      36: goto          44
      39: astore_3
      40: aload_2
      41: monitorexit
      42: aload_3
      43: athrow
      44: return
    Exception table:
       from    to  target type
          16    36    39   any
          39    42    39   any

  public org.h2.engine.QueryStatisticsData getQueryStatisticsData();
    Code:
       0: aload_0
       1: getfield      #615                // Field queryStatistics:Z
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #616                // Field queryStatisticsData:Lorg/h2/engine/QueryStatisticsData;
      13: ifnonnull     52
      16: aload_0
      17: dup
      18: astore_1
      19: monitorenter
      20: aload_0
      21: getfield      #616                // Field queryStatisticsData:Lorg/h2/engine/QueryStatisticsData;
      24: ifnonnull     42
      27: aload_0
      28: new           #618                // class org/h2/engine/QueryStatisticsData
      31: dup
      32: aload_0
      33: getfield      #50                 // Field queryStatisticsMaxEntries:I
      36: invokespecial #619                // Method org/h2/engine/QueryStatisticsData."<init>":(I)V
      39: putfield      #616                // Field queryStatisticsData:Lorg/h2/engine/QueryStatisticsData;
      42: aload_1
      43: monitorexit
      44: goto          52
      47: astore_2
      48: aload_1
      49: monitorexit
      50: aload_2
      51: athrow
      52: aload_0
      53: getfield      #616                // Field queryStatisticsData:Lorg/h2/engine/QueryStatisticsData;
      56: areturn
    Exception table:
       from    to  target type
          20    44    47   any
          47    50    47   any

  public boolean isStarting();
    Code:
       0: aload_0
       1: getfield      #259                // Field starting:Z
       4: ireturn

  public boolean isMultiVersion();
    Code:
       0: aload_0
       1: getfield      #115                // Field multiVersion:Z
       4: ireturn

  void opened();
    Code:
       0: aload_0
       1: getfield      #327                // Field eventListener:Lorg/h2/api/DatabaseEventListener;
       4: ifnull        16
       7: aload_0
       8: getfield      #327                // Field eventListener:Lorg/h2/api/DatabaseEventListener;
      11: invokeinterface #620,  1          // InterfaceMethod org/h2/api/DatabaseEventListener.opened:()V
      16: aload_0
      17: getfield      #263                // Field writer:Lorg/h2/store/WriterThread;
      20: ifnull        30
      23: aload_0
      24: getfield      #263                // Field writer:Lorg/h2/store/WriterThread;
      27: invokevirtual #621                // Method org/h2/store/WriterThread.startThread:()V
      30: return

  public void setMode(org.h2.engine.Mode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field mode:Lorg/h2/engine/Mode;
       5: return

  public org.h2.engine.Mode getMode();
    Code:
       0: aload_0
       1: getfield      #43                 // Field mode:Lorg/h2/engine/Mode;
       4: areturn

  public boolean isMultiThreaded();
    Code:
       0: aload_0
       1: getfield      #121                // Field multiThreaded:Z
       4: ireturn

  public void setMultiThreaded(boolean);
    Code:
       0: iload_1
       1: ifeq          53
       4: aload_0
       5: getfield      #121                // Field multiThreaded:Z
       8: iload_1
       9: if_icmpeq     53
      12: aload_0
      13: getfield      #115                // Field multiVersion:Z
      16: ifeq          36
      19: aload_0
      20: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      23: ifnonnull     36
      26: ldc_w         #608                // int 90021
      29: ldc_w         #622                // String MVCC & MULTI_THREADED
      32: invokestatic  #210                // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      35: athrow
      36: aload_0
      37: getfield      #36                 // Field lockMode:I
      40: ifne          53
      43: ldc_w         #608                // int 90021
      46: ldc_w         #609                // String LOCK_MODE=0 & MULTI_THREADED
      49: invokestatic  #210                // Method org/h2/message/DbException.get:(ILjava/lang/String;)Lorg/h2/message/DbException;
      52: athrow
      53: aload_0
      54: iload_1
      55: putfield      #121                // Field multiThreaded:Z
      58: return

  public void setMaxOperationMemory(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #45                 // Field maxOperationMemory:I
       5: return

  public int getMaxOperationMemory();
    Code:
       0: aload_0
       1: getfield      #45                 // Field maxOperationMemory:I
       4: ireturn

  public org.h2.engine.Session getExclusiveSession();
    Code:
       0: aload_0
       1: getfield      #19                 // Field exclusiveSession:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #435                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #282                // class org/h2/engine/Session
      10: areturn

  public void setExclusiveSession(org.h2.engine.Session, boolean);
    Code:
       0: aload_0
       1: getfield      #19                 // Field exclusiveSession:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: invokevirtual #623                // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
       8: iload_2
       9: ifeq          17
      12: aload_0
      13: aload_1
      14: invokespecial #460                // Method closeAllSessionsException:(Lorg/h2/engine/Session;)V
      17: return

  public org.h2.util.SmallLRUCache<java.lang.String, java.lang.String[]> getLobFileListCache();
    Code:
       0: aload_0
       1: getfield      #624                // Field lobFileListCache:Lorg/h2/util/SmallLRUCache;
       4: ifnonnull     17
       7: aload_0
       8: sipush        128
      11: invokestatic  #625                // Method org/h2/util/SmallLRUCache.newInstance:(I)Lorg/h2/util/SmallLRUCache;
      14: putfield      #624                // Field lobFileListCache:Lorg/h2/util/SmallLRUCache;
      17: aload_0
      18: getfield      #624                // Field lobFileListCache:Lorg/h2/util/SmallLRUCache;
      21: areturn

  public boolean isSysTableLocked();
    Code:
       0: aload_0
       1: getfield      #309                // Field meta:Lorg/h2/table/Table;
       4: ifnull        17
       7: aload_0
       8: getfield      #309                // Field meta:Lorg/h2/table/Table;
      11: invokevirtual #626                // Method org/h2/table/Table.isLockedExclusively:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean isSysTableLockedBy(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #309                // Field meta:Lorg/h2/table/Table;
       4: ifnull        18
       7: aload_0
       8: getfield      #309                // Field meta:Lorg/h2/table/Table;
      11: aload_1
      12: invokevirtual #390                // Method org/h2/table/Table.isLockedExclusivelyBy:(Lorg/h2/engine/Session;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public org.h2.table.TableLinkConnection getLinkConnection(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #627                // Field linkConnections:Ljava/util/HashMap;
       4: ifnonnull     18
       7: aload_0
       8: new           #2                  // class java/util/HashMap
      11: dup
      12: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      15: putfield      #627                // Field linkConnections:Ljava/util/HashMap;
      18: aload_0
      19: getfield      #627                // Field linkConnections:Ljava/util/HashMap;
      22: aload_1
      23: aload_2
      24: aload_3
      25: aload         4
      27: aload_0
      28: getfield      #58                 // Field dbSettings:Lorg/h2/engine/DbSettings;
      31: getfield      #628                // Field org/h2/engine/DbSettings.shareLinkedConnections:Z
      34: invokestatic  #629                // Method org/h2/table/TableLinkConnection.open:(Ljava/util/HashMap;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/h2/table/TableLinkConnection;
      37: areturn

  public java.lang.String toString();
    Code:
       0: new           #164                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #73                 // Field databaseShortName:Ljava/lang/String;
      11: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #216                // String :
      16: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: invokespecial #630                // Method java/lang/Object.toString:()Ljava/lang/String;
      23: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  public void shutdownImmediately();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #631                // Method setPowerOffCount:(I)V
       5: aload_0
       6: invokevirtual #632                // Method checkPowerOff:()V
       9: goto          13
      12: astore_1
      13: aload_0
      14: invokespecial #503                // Method closeFiles:()V
      17: return
    Exception table:
       from    to  target type
           5     9    12   Class org/h2/message/DbException

  public org.h2.util.TempFileDeleter getTempFileDeleter();
    Code:
       0: aload_0
       1: getfield      #47                 // Field tempFileDeleter:Lorg/h2/util/TempFileDeleter;
       4: areturn

  public org.h2.store.PageStore getPageStore();
    Code:
       0: aload_0
       1: getfield      #58                 // Field dbSettings:Lorg/h2/engine/DbSettings;
       4: getfield      #97                 // Field org/h2/engine/DbSettings.mvStore:Z
       7: ifeq          27
      10: aload_0
      11: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      14: ifnonnull     25
      17: aload_0
      18: aload_0
      19: invokestatic  #633                // Method org/h2/mvstore/db/MVTableEngine.init:(Lorg/h2/engine/Database;)Lorg/h2/mvstore/db/MVTableEngine$Store;
      22: putfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      25: aconst_null
      26: areturn
      27: aload_0
      28: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      31: ifnonnull     140
      34: aload_0
      35: new           #634                // class org/h2/store/PageStore
      38: dup
      39: aload_0
      40: new           #164                // class java/lang/StringBuilder
      43: dup
      44: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
      47: aload_0
      48: getfield      #71                 // Field databaseName:Ljava/lang/String;
      51: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #205                // String .h2.db
      56: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: aload_0
      63: getfield      #81                 // Field accessModeData:Ljava/lang/String;
      66: aload_0
      67: getfield      #91                 // Field cacheSize:I
      70: invokespecial #635                // Method org/h2/store/PageStore."<init>":(Lorg/h2/engine/Database;Ljava/lang/String;Ljava/lang/String;I)V
      73: putfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      76: aload_0
      77: getfield      #93                 // Field pageSize:I
      80: sipush        4096
      83: if_icmpeq     97
      86: aload_0
      87: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      90: aload_0
      91: getfield      #93                 // Field pageSize:I
      94: invokevirtual #636                // Method org/h2/store/PageStore.setPageSize:(I)V
      97: aload_0
      98: getfield      #96                 // Field readOnly:Z
     101: ifne          122
     104: aload_0
     105: getfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
     108: getstatic     #100                // Field org/h2/store/FileLockMethod.FS:Lorg/h2/store/FileLockMethod;
     111: if_acmpne     122
     114: aload_0
     115: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
     118: iconst_1
     119: invokevirtual #637                // Method org/h2/store/PageStore.setLockFile:(Z)V
     122: aload_0
     123: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
     126: aload_0
     127: getfield      #117                // Field logMode:I
     130: invokevirtual #638                // Method org/h2/store/PageStore.setLogMode:(I)V
     133: aload_0
     134: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
     137: invokevirtual #639                // Method org/h2/store/PageStore.open:()V
     140: aload_0
     141: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
     144: areturn

  public org.h2.table.Table getFirstUserTable();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #368                // Method getAllTablesAndViews:(Z)Ljava/util/ArrayList;
       5: invokevirtual #324                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
       8: astore_1
       9: aload_1
      10: invokeinterface #325,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          50
      18: aload_1
      19: invokeinterface #326,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #369                // class org/h2/table/Table
      27: astore_2
      28: aload_2
      29: invokevirtual #640                // Method org/h2/table/Table.getCreateSQL:()Ljava/lang/String;
      32: ifnull        47
      35: aload_2
      36: invokevirtual #641                // Method org/h2/table/Table.isHidden:()Z
      39: ifeq          45
      42: goto          9
      45: aload_2
      46: areturn
      47: goto          9
      50: aconst_null
      51: areturn

  public boolean isReconnectNeeded();
    Code:
       0: aload_0
       1: getfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
       4: getstatic     #102                // Field org/h2/store/FileLockMethod.SERIALIZED:Lorg/h2/store/FileLockMethod;
       7: if_acmpeq     12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: getfield      #160                // Field reconnectChangePending:Z
      16: ifeq          21
      19: iconst_0
      20: ireturn
      21: invokestatic  #161                // Method java/lang/System.nanoTime:()J
      24: lstore_1
      25: lload_1
      26: aload_0
      27: getfield      #162                // Field reconnectCheckNext:J
      30: lcmp
      31: ifge          36
      34: iconst_0
      35: ireturn
      36: aload_0
      37: lload_1
      38: aload_0
      39: getfield      #62                 // Field reconnectCheckDelayNs:J
      42: ladd
      43: putfield      #162                // Field reconnectCheckNext:J
      46: aload_0
      47: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
      50: ifnonnull     93
      53: aload_0
      54: new           #250                // class org/h2/store/FileLock
      57: dup
      58: aload_0
      59: getfield      #144                // Field traceSystem:Lorg/h2/message/TraceSystem;
      62: new           #164                // class java/lang/StringBuilder
      65: dup
      66: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
      69: aload_0
      70: getfield      #71                 // Field databaseName:Ljava/lang/String;
      73: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc           #248                // String .lock.db
      78: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: sipush        1000
      87: invokespecial #251                // Method org/h2/store/FileLock."<init>":(Lorg/h2/message/TraceSystem;Ljava/lang/String;I)V
      90: putfield      #159                // Field lock:Lorg/h2/store/FileLock;
      93: aload_0
      94: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
      97: invokevirtual #174                // Method org/h2/store/FileLock.load:()Ljava/util/Properties;
     100: astore_3
     101: aload_3
     102: astore        4
     104: aload_3
     105: aload_0
     106: getfield      #191                // Field reconnectLastLock:Ljava/util/Properties;
     109: invokevirtual #184                // Method java/util/Properties.equals:(Ljava/lang/Object;)Z
     112: ifeq          117
     115: iconst_0
     116: ireturn
     117: aload_3
     118: ldc           #175                // String changePending
     120: aconst_null
     121: invokevirtual #642                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     124: ifnonnull     130
     127: goto          211
     130: invokestatic  #161                // Method java/lang/System.nanoTime:()J
     133: lload_1
     134: aload_0
     135: getfield      #62                 // Field reconnectCheckDelayNs:J
     138: ldc2_w        #643                // long 10l
     141: lmul
     142: ladd
     143: lcmp
     144: ifle          177
     147: aload         4
     149: aload_3
     150: invokevirtual #184                // Method java/util/Properties.equals:(Ljava/lang/Object;)Z
     153: ifeq          177
     156: aload_0
     157: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
     160: ldc           #175                // String changePending
     162: aconst_null
     163: invokevirtual #172                // Method org/h2/store/FileLock.setProperty:(Ljava/lang/String;Ljava/lang/String;)V
     166: aload_0
     167: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
     170: invokevirtual #173                // Method org/h2/store/FileLock.save:()Ljava/util/Properties;
     173: pop
     174: goto          211
     177: aload_0
     178: getfield      #145                // Field trace:Lorg/h2/message/Trace;
     181: ldc_w         #645                // String delay (change pending)
     184: invokevirtual #178                // Method org/h2/message/Trace.debug:(Ljava/lang/String;)V
     187: getstatic     #179                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     190: aload_0
     191: getfield      #62                 // Field reconnectCheckDelayNs:J
     194: invokevirtual #182                // Method java/util/concurrent/TimeUnit.toMillis:(J)J
     197: invokestatic  #183                // Method java/lang/Thread.sleep:(J)V
     200: aload_0
     201: getfield      #159                // Field lock:Lorg/h2/store/FileLock;
     204: invokevirtual #174                // Method org/h2/store/FileLock.load:()Ljava/util/Properties;
     207: astore_3
     208: goto          104
     211: aload_0
     212: aload_3
     213: putfield      #191                // Field reconnectLastLock:Ljava/util/Properties;
     216: goto          245
     219: astore_3
     220: aload_0
     221: getfield      #145                // Field trace:Lorg/h2/message/Trace;
     224: aload_3
     225: ldc_w         #646                // String readOnly {0}
     228: iconst_1
     229: anewarray     #23                 // class java/lang/Object
     232: dup
     233: iconst_0
     234: aload_0
     235: getfield      #96                 // Field readOnly:Z
     238: invokestatic  #194                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     241: aastore
     242: invokevirtual #147                // Method org/h2/message/Trace.error:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
     245: iconst_1
     246: ireturn
    Exception table:
       from    to  target type
          93   116   219   Class java/lang/Exception
         117   216   219   Class java/lang/Exception

  public void checkpointIfRequired();
    Code:
       0: aload_0
       1: getfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
       4: getstatic     #102                // Field org/h2/store/FileLockMethod.SERIALIZED:Lorg/h2/store/FileLockMethod;
       7: if_acmpne     31
      10: aload_0
      11: getfield      #96                 // Field readOnly:Z
      14: ifne          31
      17: aload_0
      18: getfield      #160                // Field reconnectChangePending:Z
      21: ifeq          31
      24: aload_0
      25: getfield      #434                // Field closing:Z
      28: ifeq          32
      31: return
      32: invokestatic  #161                // Method java/lang/System.nanoTime:()J
      35: lstore_1
      36: lload_1
      37: aload_0
      38: getfield      #162                // Field reconnectCheckNext:J
      41: aload_0
      42: getfield      #62                 // Field reconnectCheckDelayNs:J
      45: ladd
      46: lcmp
      47: ifle          197
      50: getstatic     #385                // Field org/h2/engine/SysProperties.CHECK:Z
      53: ifeq          89
      56: aload_0
      57: getfield      #350                // Field checkpointAllowed:I
      60: ifge          89
      63: new           #164                // class java/lang/StringBuilder
      66: dup
      67: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #166                // String
      72: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_0
      76: getfield      #350                // Field checkpointAllowed:I
      79: invokevirtual #344                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      82: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokestatic  #415                // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      88: pop
      89: aload_0
      90: getfield      #48                 // Field reconnectSync:Ljava/lang/Object;
      93: dup
      94: astore_3
      95: monitorenter
      96: aload_0
      97: getfield      #350                // Field checkpointAllowed:I
     100: ifle          106
     103: aload_3
     104: monitorexit
     105: return
     106: aload_0
     107: iconst_1
     108: putfield      #647                // Field checkpointRunning:Z
     111: aload_3
     112: monitorexit
     113: goto          123
     116: astore        4
     118: aload_3
     119: monitorexit
     120: aload         4
     122: athrow
     123: aload_0
     124: dup
     125: astore_3
     126: monitorenter
     127: aload_0
     128: getfield      #145                // Field trace:Lorg/h2/message/Trace;
     131: ldc_w         #648                // String checkpoint start
     134: invokevirtual #178                // Method org/h2/message/Trace.debug:(Ljava/lang/String;)V
     137: aload_0
     138: invokespecial #649                // Method flushSequences:()V
     141: aload_0
     142: invokevirtual #650                // Method checkpoint:()V
     145: aload_0
     146: iconst_0
     147: invokespecial #495                // Method reconnectModified:(Z)Z
     150: pop
     151: aload_0
     152: getfield      #145                // Field trace:Lorg/h2/message/Trace;
     155: ldc_w         #651                // String checkpoint end
     158: invokevirtual #178                // Method org/h2/message/Trace.debug:(Ljava/lang/String;)V
     161: aload_3
     162: monitorexit
     163: goto          173
     166: astore        5
     168: aload_3
     169: monitorexit
     170: aload         5
     172: athrow
     173: aload_0
     174: getfield      #48                 // Field reconnectSync:Ljava/lang/Object;
     177: dup
     178: astore_3
     179: monitorenter
     180: aload_0
     181: iconst_0
     182: putfield      #647                // Field checkpointRunning:Z
     185: aload_3
     186: monitorexit
     187: goto          197
     190: astore        6
     192: aload_3
     193: monitorexit
     194: aload         6
     196: athrow
     197: return
    Exception table:
       from    to  target type
          96   105   116   any
         106   113   116   any
         116   120   116   any
         127   163   166   any
         166   170   166   any
         180   187   190   any
         190   194   190   any

  public boolean isFileLockSerialized();
    Code:
       0: aload_0
       1: getfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
       4: getstatic     #102                // Field org/h2/store/FileLockMethod.SERIALIZED:Lorg/h2/store/FileLockMethod;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private void flushSequences();
    Code:
       0: aload_0
       1: iconst_3
       2: invokevirtual #467                // Method getAllSchemaObjects:(I)Ljava/util/ArrayList;
       5: invokevirtual #324                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
       8: astore_1
       9: aload_1
      10: invokeinterface #325,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          40
      18: aload_1
      19: invokeinterface #326,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #468                // class org/h2/schema/SchemaObject
      27: astore_2
      28: aload_2
      29: checkcast     #469                // class org/h2/schema/Sequence
      32: astore_3
      33: aload_3
      34: invokevirtual #652                // Method org/h2/schema/Sequence.flushWithoutMargin:()V
      37: goto          9
      40: return

  public void checkpoint();
    Code:
       0: aload_0
       1: getfield      #66                 // Field persistent:Z
       4: ifeq          49
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      15: ifnull        25
      18: aload_0
      19: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      22: invokevirtual #487                // Method org/h2/store/PageStore.checkpoint:()V
      25: aload_1
      26: monitorexit
      27: goto          35
      30: astore_2
      31: aload_1
      32: monitorexit
      33: aload_2
      34: athrow
      35: aload_0
      36: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      39: ifnull        49
      42: aload_0
      43: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      46: invokevirtual #595                // Method org/h2/mvstore/db/MVTableEngine$Store.flush:()V
      49: aload_0
      50: invokevirtual #653                // Method getTempFileDeleter:()Lorg/h2/util/TempFileDeleter;
      53: invokevirtual #654                // Method org/h2/util/TempFileDeleter.deleteUnused:()V
      56: return
    Exception table:
       from    to  target type
          11    27    30   any
          30    33    30   any

  public boolean beforeWriting();
    Code:
       0: aload_0
       1: getfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
       4: getstatic     #102                // Field org/h2/store/FileLockMethod.SERIALIZED:Lorg/h2/store/FileLockMethod;
       7: if_acmpeq     12
      10: iconst_1
      11: ireturn
      12: aload_0
      13: getfield      #647                // Field checkpointRunning:Z
      16: ifeq          41
      19: bipush        10
      21: invokestatic  #186                // Method java/lang/Math.random:()D
      24: ldc2_w        #655                // double 10.0d
      27: dmul
      28: d2i
      29: iadd
      30: i2l
      31: invokestatic  #183                // Method java/lang/Thread.sleep:(J)V
      34: goto          12
      37: astore_1
      38: goto          12
      41: aload_0
      42: getfield      #48                 // Field reconnectSync:Ljava/lang/Object;
      45: dup
      46: astore_1
      47: monitorenter
      48: aload_0
      49: iconst_1
      50: invokespecial #495                // Method reconnectModified:(Z)Z
      53: ifeq          111
      56: aload_0
      57: dup
      58: getfield      #350                // Field checkpointAllowed:I
      61: iconst_1
      62: iadd
      63: putfield      #350                // Field checkpointAllowed:I
      66: getstatic     #385                // Field org/h2/engine/SysProperties.CHECK:Z
      69: ifeq          107
      72: aload_0
      73: getfield      #350                // Field checkpointAllowed:I
      76: bipush        20
      78: if_icmple     107
      81: new           #164                // class java/lang/StringBuilder
      84: dup
      85: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
      88: ldc           #166                // String
      90: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload_0
      94: getfield      #350                // Field checkpointAllowed:I
      97: invokevirtual #344                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     100: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokestatic  #415                // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
     106: athrow
     107: iconst_1
     108: aload_1
     109: monitorexit
     110: ireturn
     111: aload_1
     112: monitorexit
     113: goto          121
     116: astore_2
     117: aload_1
     118: monitorexit
     119: aload_2
     120: athrow
     121: aload_0
     122: invokestatic  #161                // Method java/lang/System.nanoTime:()J
     125: lconst_1
     126: lsub
     127: putfield      #162                // Field reconnectCheckNext:J
     130: aload_0
     131: aconst_null
     132: putfield      #191                // Field reconnectLastLock:Ljava/util/Properties;
     135: iconst_0
     136: ireturn
    Exception table:
       from    to  target type
          19    34    37   Class java/lang/Exception
          48   110   116   any
         111   113   116   any
         116   119   116   any

  public void afterWriting();
    Code:
       0: aload_0
       1: getfield      #99                 // Field fileLockMethod:Lorg/h2/store/FileLockMethod;
       4: getstatic     #102                // Field org/h2/store/FileLockMethod.SERIALIZED:Lorg/h2/store/FileLockMethod;
       7: if_acmpeq     11
      10: return
      11: aload_0
      12: getfield      #48                 // Field reconnectSync:Ljava/lang/Object;
      15: dup
      16: astore_1
      17: monitorenter
      18: aload_0
      19: dup
      20: getfield      #350                // Field checkpointAllowed:I
      23: iconst_1
      24: isub
      25: putfield      #350                // Field checkpointAllowed:I
      28: aload_1
      29: monitorexit
      30: goto          38
      33: astore_2
      34: aload_1
      35: monitorexit
      36: aload_2
      37: athrow
      38: getstatic     #385                // Field org/h2/engine/SysProperties.CHECK:Z
      41: ifeq          77
      44: aload_0
      45: getfield      #350                // Field checkpointAllowed:I
      48: ifge          77
      51: new           #164                // class java/lang/StringBuilder
      54: dup
      55: invokespecial #165                // Method java/lang/StringBuilder."<init>":()V
      58: ldc           #166                // String
      60: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_0
      64: getfield      #350                // Field checkpointAllowed:I
      67: invokevirtual #344                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      70: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokestatic  #415                // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      76: athrow
      77: return
    Exception table:
       from    to  target type
          18    30    33   any
          33    36    33   any

  public void setReadOnly(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #96                 // Field readOnly:Z
       5: return

  public void setCompactMode(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #489                // Field compactMode:I
       5: return

  public org.h2.util.SourceCompiler getCompiler();
    Code:
       0: aload_0
       1: getfield      #657                // Field compiler:Lorg/h2/util/SourceCompiler;
       4: ifnonnull     18
       7: aload_0
       8: new           #658                // class org/h2/util/SourceCompiler
      11: dup
      12: invokespecial #659                // Method org/h2/util/SourceCompiler."<init>":()V
      15: putfield      #657                // Field compiler:Lorg/h2/util/SourceCompiler;
      18: aload_0
      19: getfield      #657                // Field compiler:Lorg/h2/util/SourceCompiler;
      22: areturn

  public org.h2.store.LobStorageInterface getLobStorage();
    Code:
       0: aload_0
       1: getfield      #484                // Field lobStorage:Lorg/h2/store/LobStorageInterface;
       4: ifnonnull     44
       7: aload_0
       8: getfield      #58                 // Field dbSettings:Lorg/h2/engine/DbSettings;
      11: getfield      #97                 // Field org/h2/engine/DbSettings.mvStore:Z
      14: ifeq          32
      17: aload_0
      18: new           #660                // class org/h2/store/LobStorageMap
      21: dup
      22: aload_0
      23: invokespecial #661                // Method org/h2/store/LobStorageMap."<init>":(Lorg/h2/engine/Database;)V
      26: putfield      #484                // Field lobStorage:Lorg/h2/store/LobStorageInterface;
      29: goto          44
      32: aload_0
      33: new           #662                // class org/h2/store/LobStorageBackend
      36: dup
      37: aload_0
      38: invokespecial #663                // Method org/h2/store/LobStorageBackend."<init>":(Lorg/h2/engine/Database;)V
      41: putfield      #484                // Field lobStorage:Lorg/h2/store/LobStorageInterface;
      44: aload_0
      45: getfield      #484                // Field lobStorage:Lorg/h2/store/LobStorageInterface;
      48: areturn

  public org.h2.jdbc.JdbcConnection getLobConnectionForInit();
    Code:
       0: ldc_w         #664                // String jdbc:default:connection
       3: astore_1
       4: new           #665                // class org/h2/jdbc/JdbcConnection
       7: dup
       8: aload_0
       9: getfield      #285                // Field systemSession:Lorg/h2/engine/Session;
      12: aload_0
      13: getfield      #269                // Field systemUser:Lorg/h2/engine/User;
      16: invokevirtual #423                // Method org/h2/engine/User.getName:()Ljava/lang/String;
      19: aload_1
      20: invokespecial #666                // Method org/h2/jdbc/JdbcConnection."<init>":(Lorg/h2/engine/SessionInterface;Ljava/lang/String;Ljava/lang/String;)V
      23: astore_2
      24: aload_2
      25: iconst_0
      26: invokevirtual #667                // Method org/h2/jdbc/JdbcConnection.setTraceLevel:(I)V
      29: aload_2
      30: areturn

  public org.h2.jdbc.JdbcConnection getLobConnectionForRegularUse();
    Code:
       0: ldc_w         #664                // String jdbc:default:connection
       3: astore_1
       4: new           #665                // class org/h2/jdbc/JdbcConnection
       7: dup
       8: aload_0
       9: getfield      #286                // Field lobSession:Lorg/h2/engine/Session;
      12: aload_0
      13: getfield      #269                // Field systemUser:Lorg/h2/engine/User;
      16: invokevirtual #423                // Method org/h2/engine/User.getName:()Ljava/lang/String;
      19: aload_1
      20: invokespecial #666                // Method org/h2/jdbc/JdbcConnection."<init>":(Lorg/h2/engine/SessionInterface;Ljava/lang/String;Ljava/lang/String;)V
      23: astore_2
      24: aload_2
      25: iconst_0
      26: invokevirtual #667                // Method org/h2/jdbc/JdbcConnection.setTraceLevel:(I)V
      29: aload_2
      30: areturn

  public org.h2.engine.Session getLobSession();
    Code:
       0: aload_0
       1: getfield      #286                // Field lobSession:Lorg/h2/engine/Session;
       4: areturn

  public void setLogMode(int);
    Code:
       0: iload_1
       1: iflt          9
       4: iload_1
       5: iconst_2
       6: if_icmple     19
       9: ldc           #116                // String LOG
      11: iload_1
      12: invokestatic  #244                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokestatic  #611                // Method org/h2/message/DbException.getInvalidValueException:(Ljava/lang/String;Ljava/lang/Object;)Lorg/h2/message/DbException;
      18: athrow
      19: aload_0
      20: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      23: ifnull        77
      26: iload_1
      27: iconst_2
      28: if_icmpne     42
      31: aload_0
      32: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      35: invokevirtual #668                // Method org/h2/store/PageStore.getLogMode:()I
      38: iconst_2
      39: if_icmpeq     64
      42: aload_0
      43: getfield      #145                // Field trace:Lorg/h2/message/Trace;
      46: aconst_null
      47: ldc_w         #669                // String log {0}
      50: iconst_1
      51: anewarray     #23                 // class java/lang/Object
      54: dup
      55: iconst_0
      56: iload_1
      57: invokestatic  #244                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      60: aastore
      61: invokevirtual #147                // Method org/h2/message/Trace.error:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      64: aload_0
      65: iload_1
      66: putfield      #117                // Field logMode:I
      69: aload_0
      70: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      73: iload_1
      74: invokevirtual #638                // Method org/h2/store/PageStore.setLogMode:(I)V
      77: aload_0
      78: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      81: ifnull        89
      84: aload_0
      85: iload_1
      86: putfield      #117                // Field logMode:I
      89: return

  public int getLogMode();
    Code:
       0: aload_0
       1: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
       4: ifnull        15
       7: aload_0
       8: getfield      #163                // Field pageStore:Lorg/h2/store/PageStore;
      11: invokevirtual #668                // Method org/h2/store/PageStore.getLogMode:()I
      14: ireturn
      15: aload_0
      16: getfield      #152                // Field mvStore:Lorg/h2/mvstore/db/MVTableEngine$Store;
      19: ifnull        27
      22: aload_0
      23: getfield      #117                // Field logMode:I
      26: ireturn
      27: iconst_0
      28: ireturn

  public int getDefaultTableType();
    Code:
       0: aload_0
       1: getfield      #49                 // Field defaultTableType:I
       4: ireturn

  public void setDefaultTableType(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #49                 // Field defaultTableType:I
       5: return

  public void setMultiVersion(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #115                // Field multiVersion:Z
       5: return

  public org.h2.engine.DbSettings getSettings();
    Code:
       0: aload_0
       1: getfield      #58                 // Field dbSettings:Lorg/h2/engine/DbSettings;
       4: areturn

  public <V> java.util.HashMap<java.lang.String, V> newStringMap();
    Code:
       0: aload_0
       1: getfield      #58                 // Field dbSettings:Lorg/h2/engine/DbSettings;
       4: getfield      #225                // Field org/h2/engine/DbSettings.databaseToUpper:Z
       7: ifeq          20
      10: new           #2                  // class java/util/HashMap
      13: dup
      14: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      17: goto          27
      20: new           #670                // class org/h2/value/CaseInsensitiveMap
      23: dup
      24: invokespecial #671                // Method org/h2/value/CaseInsensitiveMap."<init>":()V
      27: areturn

  public <V> java.util.concurrent.ConcurrentHashMap<java.lang.String, V> newConcurrentStringMap();
    Code:
       0: aload_0
       1: getfield      #58                 // Field dbSettings:Lorg/h2/engine/DbSettings;
       4: getfield      #225                // Field org/h2/engine/DbSettings.databaseToUpper:Z
       7: ifeq          20
      10: new           #672                // class org/h2/value/NullableKeyConcurrentMap
      13: dup
      14: invokespecial #673                // Method org/h2/value/NullableKeyConcurrentMap."<init>":()V
      17: goto          27
      20: new           #674                // class org/h2/value/CaseInsensitiveConcurrentMap
      23: dup
      24: invokespecial #675                // Method org/h2/value/CaseInsensitiveConcurrentMap."<init>":()V
      27: areturn

  public boolean equalsIdentifiers(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #95                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       5: ifne          26
       8: aload_0
       9: getfield      #58                 // Field dbSettings:Lorg/h2/engine/DbSettings;
      12: getfield      #225                // Field org/h2/engine/DbSettings.databaseToUpper:Z
      15: ifne          30
      18: aload_1
      19: aload_2
      20: invokevirtual #676                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public int readLob(long, byte[], long, byte[], int, int);
    Code:
       0: invokestatic  #391                // Method org/h2/message/DbException.throwInternalError:()Ljava/lang/RuntimeException;
       3: athrow

  public byte[] getFileEncryptionKey();
    Code:
       0: aload_0
       1: getfield      #70                 // Field fileEncryptionKey:[B
       4: areturn

  public int getPageSize();
    Code:
       0: aload_0
       1: getfield      #93                 // Field pageSize:I
       4: ireturn

  public org.h2.api.JavaObjectSerializer getJavaObjectSerializer();
    Code:
       0: aload_0
       1: invokespecial #677                // Method initJavaObjectSerializer:()V
       4: aload_0
       5: getfield      #678                // Field javaObjectSerializer:Lorg/h2/api/JavaObjectSerializer;
       8: areturn

  private void initJavaObjectSerializer();
    Code:
       0: aload_0
       1: getfield      #679                // Field javaObjectSerializerInitialized:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: dup
      10: astore_1
      11: monitorenter
      12: aload_0
      13: getfield      #679                // Field javaObjectSerializerInitialized:Z
      16: ifeq          22
      19: aload_1
      20: monitorexit
      21: return
      22: aload_0
      23: getfield      #119                // Field javaObjectSerializerName:Ljava/lang/String;
      26: astore_2
      27: aload_2
      28: ifnull        76
      31: aload_2
      32: invokevirtual #680                // Method java/lang/String.trim:()Ljava/lang/String;
      35: astore_2
      36: aload_2
      37: invokevirtual #681                // Method java/lang/String.isEmpty:()Z
      40: ifne          76
      43: aload_2
      44: ldc_w         #682                // String null
      47: invokevirtual #95                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      50: ifne          76
      53: aload_0
      54: aload_2
      55: invokestatic  #597                // Method org/h2/util/JdbcUtils.loadUserClass:(Ljava/lang/String;)Ljava/lang/Class;
      58: invokevirtual #598                // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      61: checkcast     #683                // class org/h2/api/JavaObjectSerializer
      64: putfield      #678                // Field javaObjectSerializer:Lorg/h2/api/JavaObjectSerializer;
      67: goto          76
      70: astore_3
      71: aload_3
      72: invokestatic  #150                // Method org/h2/message/DbException.convert:(Ljava/lang/Throwable;)Lorg/h2/message/DbException;
      75: athrow
      76: aload_0
      77: iconst_1
      78: putfield      #679                // Field javaObjectSerializerInitialized:Z
      81: aload_1
      82: monitorexit
      83: goto          93
      86: astore        4
      88: aload_1
      89: monitorexit
      90: aload         4
      92: athrow
      93: return
    Exception table:
       from    to  target type
          53    67    70   Class java/lang/Exception
          12    21    86   any
          22    83    86   any
          86    90    86   any

  public void setJavaObjectSerializerName(java.lang.String);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: iconst_0
       6: putfield      #679                // Field javaObjectSerializerInitialized:Z
       9: aload_0
      10: aload_1
      11: putfield      #119                // Field javaObjectSerializerName:Ljava/lang/String;
      14: aload_2
      15: monitorexit
      16: goto          24
      19: astore_3
      20: aload_2
      21: monitorexit
      22: aload_3
      23: athrow
      24: return
    Exception table:
       from    to  target type
           4    16    19   any
          19    22    19   any

  public org.h2.api.TableEngine getTableEngine(java.lang.String);
    Code:
       0: getstatic     #684                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #685                // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #686                // class java/lang/AssertionError
      16: dup
      17: invokespecial #687                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #12                 // Field tableEngines:Ljava/util/HashMap;
      25: aload_1
      26: invokevirtual #333                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #688                // class org/h2/api/TableEngine
      32: astore_2
      33: aload_2
      34: ifnonnull     67
      37: aload_1
      38: invokestatic  #597                // Method org/h2/util/JdbcUtils.loadUserClass:(Ljava/lang/String;)Ljava/lang/Class;
      41: invokevirtual #598                // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      44: checkcast     #688                // class org/h2/api/TableEngine
      47: astore_2
      48: goto          57
      51: astore_3
      52: aload_3
      53: invokestatic  #150                // Method org/h2/message/DbException.convert:(Ljava/lang/Throwable;)Lorg/h2/message/DbException;
      56: athrow
      57: aload_0
      58: getfield      #12                 // Field tableEngines:Ljava/util/HashMap;
      61: aload_1
      62: aload_2
      63: invokevirtual #277                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      66: pop
      67: aload_2
      68: areturn
    Exception table:
       from    to  target type
          37    48    51   Class java/lang/Exception

  static {};
    Code:
       0: ldc_w         #689                // class org/h2/engine/Database
       3: invokevirtual #690                // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #684                // Field $assertionsDisabled:Z
      17: new           #691                // class java/lang/ThreadLocal
      20: dup
      21: invokespecial #692                // Method java/lang/ThreadLocal."<init>":()V
      24: putstatic     #53                 // Field META_LOCK_DEBUGGING:Ljava/lang/ThreadLocal;
      27: new           #691                // class java/lang/ThreadLocal
      30: dup
      31: invokespecial #692                // Method java/lang/ThreadLocal."<init>":()V
      34: putstatic     #55                 // Field META_LOCK_DEBUGGING_STACK:Ljava/lang/ThreadLocal;
      37: return
}
