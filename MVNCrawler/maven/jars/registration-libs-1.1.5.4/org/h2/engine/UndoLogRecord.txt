Compiled from "UndoLogRecord.java"
public class org.h2.engine.UndoLogRecord {
  public static final short INSERT;

  public static final short DELETE;

  private static final int IN_MEMORY;

  private static final int STORED;

  private static final int IN_MEMORY_INVALID;

  private org.h2.table.Table table;

  private org.h2.result.Row row;

  private short operation;

  private short state;

  private int filePos;

  org.h2.engine.UndoLogRecord(org.h2.table.Table, short, org.h2.result.Row);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field table:Lorg/h2/table/Table;
       9: aload_0
      10: aload_3
      11: putfield      #3                  // Field row:Lorg/h2/result/Row;
      14: aload_0
      15: iload_2
      16: putfield      #4                  // Field operation:S
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field state:S
      24: return

  boolean isStored();
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:S
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  boolean canStore();
    Code:
       0: aload_0
       1: getfield      #2                  // Field table:Lorg/h2/table/Table;
       4: invokevirtual #6                  // Method org/h2/table/Table.getUniqueIndex:()Lorg/h2/index/Index;
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  void undo(org.h2.engine.Session);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
       4: astore_2
       5: aload_0
       6: getfield      #4                  // Field operation:S
       9: lookupswitch  { // 2
                     0: 36
                     1: 136
               default: 206
          }
      36: aload_0
      37: getfield      #5                  // Field state:S
      40: iconst_2
      41: if_icmpne     49
      44: aload_0
      45: iconst_0
      46: putfield      #5                  // Field state:S
      49: aload_2
      50: invokevirtual #8                  // Method org/h2/engine/Database.getLockMode:()I
      53: ifne          69
      56: aload_0
      57: getfield      #3                  // Field row:Lorg/h2/result/Row;
      60: invokeinterface #9,  1            // InterfaceMethod org/h2/result/Row.isDeleted:()Z
      65: ifeq          69
      68: return
      69: aload_0
      70: getfield      #3                  // Field row:Lorg/h2/result/Row;
      73: iconst_0
      74: invokeinterface #10,  2           // InterfaceMethod org/h2/result/Row.setDeleted:(Z)V
      79: aload_0
      80: getfield      #2                  // Field table:Lorg/h2/table/Table;
      83: aload_1
      84: aload_0
      85: getfield      #3                  // Field row:Lorg/h2/result/Row;
      88: invokevirtual #11                 // Method org/h2/table/Table.removeRow:(Lorg/h2/engine/Session;Lorg/h2/result/Row;)V
      91: aload_0
      92: getfield      #2                  // Field table:Lorg/h2/table/Table;
      95: aload_1
      96: aload_0
      97: getfield      #3                  // Field row:Lorg/h2/result/Row;
     100: aconst_null
     101: iconst_1
     102: invokevirtual #12                 // Method org/h2/table/Table.fireAfterRow:(Lorg/h2/engine/Session;Lorg/h2/result/Row;Lorg/h2/result/Row;Z)V
     105: goto          232
     108: astore_3
     109: aload_1
     110: invokevirtual #7                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
     113: invokevirtual #8                  // Method org/h2/engine/Database.getLockMode:()I
     116: ifne          131
     119: aload_3
     120: invokevirtual #14                 // Method org/h2/message/DbException.getErrorCode:()I
     123: ldc           #15                 // int 90112
     125: if_icmpne     131
     128: goto          133
     131: aload_3
     132: athrow
     133: goto          232
     136: aload_0
     137: getfield      #2                  // Field table:Lorg/h2/table/Table;
     140: aload_1
     141: aload_0
     142: getfield      #3                  // Field row:Lorg/h2/result/Row;
     145: invokevirtual #16                 // Method org/h2/table/Table.addRow:(Lorg/h2/engine/Session;Lorg/h2/result/Row;)V
     148: aload_0
     149: getfield      #2                  // Field table:Lorg/h2/table/Table;
     152: aload_1
     153: aconst_null
     154: aload_0
     155: getfield      #3                  // Field row:Lorg/h2/result/Row;
     158: iconst_1
     159: invokevirtual #12                 // Method org/h2/table/Table.fireAfterRow:(Lorg/h2/engine/Session;Lorg/h2/result/Row;Lorg/h2/result/Row;Z)V
     162: aload_0
     163: getfield      #3                  // Field row:Lorg/h2/result/Row;
     166: invokeinterface #17,  1           // InterfaceMethod org/h2/result/Row.commit:()V
     171: goto          232
     174: astore_3
     175: aload_1
     176: invokevirtual #7                  // Method org/h2/engine/Session.getDatabase:()Lorg/h2/engine/Database;
     179: invokevirtual #8                  // Method org/h2/engine/Database.getLockMode:()I
     182: ifne          201
     185: aload_3
     186: invokevirtual #18                 // Method org/h2/message/DbException.getSQLException:()Ljava/sql/SQLException;
     189: invokevirtual #19                 // Method java/sql/SQLException.getErrorCode:()I
     192: sipush        23505
     195: if_icmpne     201
     198: goto          203
     201: aload_3
     202: athrow
     203: goto          232
     206: new           #20                 // class java/lang/StringBuilder
     209: dup
     210: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
     213: ldc           #22                 // String op=
     215: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     218: aload_0
     219: getfield      #4                  // Field operation:S
     222: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     225: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     228: invokestatic  #26                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
     231: pop
     232: return
    Exception table:
       from    to  target type
          69   105   108   Class org/h2/message/DbException
         136   171   174   Class org/h2/message/DbException

  void append(org.h2.store.Data, org.h2.engine.UndoLog);
    Code:
       0: aload_1
       1: invokevirtual #27                 // Method org/h2/store/Data.length:()I
       4: istore_3
       5: aload_1
       6: iconst_0
       7: invokevirtual #28                 // Method org/h2/store/Data.writeInt:(I)V
      10: aload_1
      11: aload_0
      12: getfield      #4                  // Field operation:S
      15: invokevirtual #28                 // Method org/h2/store/Data.writeInt:(I)V
      18: aload_1
      19: aload_0
      20: getfield      #3                  // Field row:Lorg/h2/result/Row;
      23: invokeinterface #9,  1            // InterfaceMethod org/h2/result/Row.isDeleted:()Z
      28: ifeq          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: invokevirtual #29                 // Method org/h2/store/Data.writeByte:(B)V
      39: aload_1
      40: aload_2
      41: aload_0
      42: getfield      #2                  // Field table:Lorg/h2/table/Table;
      45: invokevirtual #30                 // Method org/h2/engine/UndoLog.getTableId:(Lorg/h2/table/Table;)I
      48: invokevirtual #28                 // Method org/h2/store/Data.writeInt:(I)V
      51: aload_1
      52: aload_0
      53: getfield      #3                  // Field row:Lorg/h2/result/Row;
      56: invokeinterface #31,  1           // InterfaceMethod org/h2/result/Row.getKey:()J
      61: invokevirtual #32                 // Method org/h2/store/Data.writeLong:(J)V
      64: aload_1
      65: aload_0
      66: getfield      #3                  // Field row:Lorg/h2/result/Row;
      69: invokeinterface #33,  1           // InterfaceMethod org/h2/result/Row.getSessionId:()I
      74: invokevirtual #28                 // Method org/h2/store/Data.writeInt:(I)V
      77: aload_0
      78: getfield      #3                  // Field row:Lorg/h2/result/Row;
      81: invokeinterface #34,  1           // InterfaceMethod org/h2/result/Row.getColumnCount:()I
      86: istore        4
      88: aload_1
      89: iload         4
      91: invokevirtual #28                 // Method org/h2/store/Data.writeInt:(I)V
      94: iconst_0
      95: istore        5
      97: iload         5
      99: iload         4
     101: if_icmpge     139
     104: aload_0
     105: getfield      #3                  // Field row:Lorg/h2/result/Row;
     108: iload         5
     110: invokeinterface #35,  2           // InterfaceMethod org/h2/result/Row.getValue:(I)Lorg/h2/value/Value;
     115: astore        6
     117: aload_1
     118: aload_1
     119: aload         6
     121: invokevirtual #36                 // Method org/h2/store/Data.getValueLen:(Lorg/h2/value/Value;)I
     124: invokevirtual #37                 // Method org/h2/store/Data.checkCapacity:(I)V
     127: aload_1
     128: aload         6
     130: invokevirtual #38                 // Method org/h2/store/Data.writeValue:(Lorg/h2/value/Value;)V
     133: iinc          5, 1
     136: goto          97
     139: aload_1
     140: invokevirtual #39                 // Method org/h2/store/Data.fillAligned:()V
     143: aload_1
     144: iload_3
     145: aload_1
     146: invokevirtual #27                 // Method org/h2/store/Data.length:()I
     149: iload_3
     150: isub
     151: bipush        16
     153: idiv
     154: invokevirtual #40                 // Method org/h2/store/Data.setInt:(II)V
     157: return

  void save(org.h2.store.Data, org.h2.store.FileStore, org.h2.engine.UndoLog);
    Code:
       0: aload_1
       1: invokevirtual #41                 // Method org/h2/store/Data.reset:()V
       4: aload_0
       5: aload_1
       6: aload_3
       7: invokevirtual #42                 // Method append:(Lorg/h2/store/Data;Lorg/h2/engine/UndoLog;)V
      10: aload_0
      11: aload_2
      12: invokevirtual #43                 // Method org/h2/store/FileStore.getFilePointer:()J
      15: ldc2_w        #44                 // long 16l
      18: ldiv
      19: l2i
      20: putfield      #46                 // Field filePos:I
      23: aload_2
      24: aload_1
      25: invokevirtual #47                 // Method org/h2/store/Data.getBytes:()[B
      28: iconst_0
      29: aload_1
      30: invokevirtual #27                 // Method org/h2/store/Data.length:()I
      33: invokevirtual #48                 // Method org/h2/store/FileStore.write:([BII)V
      36: aload_0
      37: aconst_null
      38: putfield      #3                  // Field row:Lorg/h2/result/Row;
      41: aload_0
      42: iconst_1
      43: putfield      #5                  // Field state:S
      46: return

  static org.h2.engine.UndoLogRecord loadFromBuffer(org.h2.store.Data, org.h2.engine.UndoLog);
    Code:
       0: new           #49                 // class org/h2/engine/UndoLogRecord
       3: dup
       4: aconst_null
       5: iconst_0
       6: aconst_null
       7: invokespecial #50                 // Method "<init>":(Lorg/h2/table/Table;SLorg/h2/result/Row;)V
      10: astore_2
      11: aload_0
      12: invokevirtual #27                 // Method org/h2/store/Data.length:()I
      15: istore_3
      16: aload_0
      17: invokevirtual #51                 // Method org/h2/store/Data.readInt:()I
      20: bipush        16
      22: imul
      23: istore        4
      25: aload_2
      26: aload_0
      27: aload_1
      28: invokespecial #52                 // Method load:(Lorg/h2/store/Data;Lorg/h2/engine/UndoLog;)V
      31: aload_0
      32: iload_3
      33: iload         4
      35: iadd
      36: invokevirtual #53                 // Method org/h2/store/Data.setPos:(I)V
      39: aload_2
      40: areturn

  void load(org.h2.store.Data, org.h2.store.FileStore, org.h2.engine.UndoLog);
    Code:
       0: bipush        16
       2: istore        4
       4: aload_3
       5: aload_0
       6: getfield      #46                 // Field filePos:I
       9: i2l
      10: invokevirtual #54                 // Method org/h2/engine/UndoLog.seek:(J)V
      13: aload_1
      14: invokevirtual #41                 // Method org/h2/store/Data.reset:()V
      17: aload_2
      18: aload_1
      19: invokevirtual #47                 // Method org/h2/store/Data.getBytes:()[B
      22: iconst_0
      23: iload         4
      25: invokevirtual #55                 // Method org/h2/store/FileStore.readFully:([BII)V
      28: aload_1
      29: invokevirtual #51                 // Method org/h2/store/Data.readInt:()I
      32: bipush        16
      34: imul
      35: istore        5
      37: aload_1
      38: iload         5
      40: invokevirtual #37                 // Method org/h2/store/Data.checkCapacity:(I)V
      43: iload         5
      45: iload         4
      47: isub
      48: ifle          66
      51: aload_2
      52: aload_1
      53: invokevirtual #47                 // Method org/h2/store/Data.getBytes:()[B
      56: iload         4
      58: iload         5
      60: iload         4
      62: isub
      63: invokevirtual #55                 // Method org/h2/store/FileStore.readFully:([BII)V
      66: aload_0
      67: getfield      #4                  // Field operation:S
      70: istore        6
      72: aload_0
      73: aload_1
      74: aload_3
      75: invokespecial #52                 // Method load:(Lorg/h2/store/Data;Lorg/h2/engine/UndoLog;)V
      78: getstatic     #56                 // Field org/h2/engine/SysProperties.CHECK:Z
      81: ifeq          129
      84: aload_0
      85: getfield      #4                  // Field operation:S
      88: iload         6
      90: if_icmpeq     129
      93: new           #20                 // class java/lang/StringBuilder
      96: dup
      97: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
     100: ldc           #57                 // String operation=
     102: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload_0
     106: getfield      #4                  // Field operation:S
     109: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     112: ldc           #58                 // String  op=
     114: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: iload         6
     119: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     122: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     125: invokestatic  #26                 // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
     128: pop
     129: return

  private void load(org.h2.store.Data, org.h2.engine.UndoLog);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #51                 // Method org/h2/store/Data.readInt:()I
       5: i2s
       6: putfield      #4                  // Field operation:S
       9: aload_1
      10: invokevirtual #59                 // Method org/h2/store/Data.readByte:()B
      13: iconst_1
      14: if_icmpne     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: istore_3
      23: aload_0
      24: aload_2
      25: aload_1
      26: invokevirtual #51                 // Method org/h2/store/Data.readInt:()I
      29: invokevirtual #60                 // Method org/h2/engine/UndoLog.getTable:(I)Lorg/h2/table/Table;
      32: putfield      #2                  // Field table:Lorg/h2/table/Table;
      35: aload_1
      36: invokevirtual #61                 // Method org/h2/store/Data.readLong:()J
      39: lstore        4
      41: aload_1
      42: invokevirtual #51                 // Method org/h2/store/Data.readInt:()I
      45: istore        6
      47: aload_1
      48: invokevirtual #51                 // Method org/h2/store/Data.readInt:()I
      51: istore        7
      53: iload         7
      55: anewarray     #62                 // class org/h2/value/Value
      58: astore        8
      60: iconst_0
      61: istore        9
      63: iload         9
      65: iload         7
      67: if_icmpge     85
      70: aload         8
      72: iload         9
      74: aload_1
      75: invokevirtual #63                 // Method org/h2/store/Data.readValue:()Lorg/h2/value/Value;
      78: aastore
      79: iinc          9, 1
      82: goto          63
      85: aload_0
      86: aload_0
      87: invokevirtual #64                 // Method getTable:()Lorg/h2/table/Table;
      90: invokevirtual #65                 // Method org/h2/table/Table.getDatabase:()Lorg/h2/engine/Database;
      93: aload         8
      95: iconst_m1
      96: invokevirtual #66                 // Method org/h2/engine/Database.createRow:([Lorg/h2/value/Value;I)Lorg/h2/result/Row;
      99: putfield      #3                  // Field row:Lorg/h2/result/Row;
     102: aload_0
     103: getfield      #3                  // Field row:Lorg/h2/result/Row;
     106: lload         4
     108: invokeinterface #67,  3           // InterfaceMethod org/h2/result/Row.setKey:(J)V
     113: aload_0
     114: getfield      #3                  // Field row:Lorg/h2/result/Row;
     117: iload_3
     118: invokeinterface #10,  2           // InterfaceMethod org/h2/result/Row.setDeleted:(Z)V
     123: aload_0
     124: getfield      #3                  // Field row:Lorg/h2/result/Row;
     127: iload         6
     129: invokeinterface #68,  2           // InterfaceMethod org/h2/result/Row.setSessionId:(I)V
     134: aload_0
     135: iconst_2
     136: putfield      #5                  // Field state:S
     139: return

  public org.h2.table.Table getTable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field table:Lorg/h2/table/Table;
       4: areturn

  public long getFilePos();
    Code:
       0: aload_0
       1: getfield      #46                 // Field filePos:I
       4: i2l
       5: lreturn

  void commit();
    Code:
       0: aload_0
       1: getfield      #2                  // Field table:Lorg/h2/table/Table;
       4: aload_0
       5: getfield      #4                  // Field operation:S
       8: aload_0
       9: getfield      #3                  // Field row:Lorg/h2/result/Row;
      12: invokevirtual #69                 // Method org/h2/table/Table.commit:(SLorg/h2/result/Row;)V
      15: return

  public org.h2.result.Row getRow();
    Code:
       0: aload_0
       1: getfield      #3                  // Field row:Lorg/h2/result/Row;
       4: areturn

  void invalidatePos();
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:S
       4: ifne          12
       7: aload_0
       8: iconst_2
       9: putfield      #5                  // Field state:S
      12: return
}
