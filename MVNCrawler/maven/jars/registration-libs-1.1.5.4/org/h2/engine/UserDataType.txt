Compiled from "UserDataType.java"
public class org.h2.engine.UserDataType extends org.h2.engine.DbObjectBase {
  private org.h2.table.Column column;

  public org.h2.engine.UserDataType(org.h2.engine.Database, int, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/engine/DbObjectBase."<init>":()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: aload_3
       8: iconst_2
       9: invokevirtual #2                  // Method initDbObjectBase:(Lorg/h2/engine/Database;ILjava/lang/String;I)V
      12: return

  public java.lang.String getCreateSQLForCopy(org.h2.table.Table, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method toString:()Ljava/lang/String;
       4: invokestatic  #4                  // Method org/h2/message/DbException.throwInternalError:(Ljava/lang/String;)Ljava/lang/RuntimeException;
       7: athrow

  public java.lang.String getDropSQL();
    Code:
       0: new           #5                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #7                  // String DROP DOMAIN IF EXISTS
       9: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #9                  // Method getSQL:()Ljava/lang/String;
      16: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  public java.lang.String getCreateSQL();
    Code:
       0: new           #5                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #11                 // String CREATE DOMAIN
       9: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #9                  // Method getSQL:()Ljava/lang/String;
      16: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #12                 // String  AS
      21: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #13                 // Field column:Lorg/h2/table/Column;
      28: invokevirtual #14                 // Method org/h2/table/Column.getCreateSQL:()Ljava/lang/String;
      31: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: areturn

  public org.h2.table.Column getColumn();
    Code:
       0: aload_0
       1: getfield      #13                 // Field column:Lorg/h2/table/Column;
       4: areturn

  public int getType();
    Code:
       0: bipush        12
       2: ireturn

  public void removeChildrenAndResources(org.h2.engine.Session);
    Code:
       0: aload_0
       1: getfield      #15                 // Field database:Lorg/h2/engine/Database;
       4: aload_1
       5: aload_0
       6: invokevirtual #16                 // Method getId:()I
       9: invokevirtual #17                 // Method org/h2/engine/Database.removeMeta:(Lorg/h2/engine/Session;I)V
      12: return

  public void checkRename();
    Code:
       0: return

  public void setColumn(org.h2.table.Column);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field column:Lorg/h2/table/Column;
       5: return
}
