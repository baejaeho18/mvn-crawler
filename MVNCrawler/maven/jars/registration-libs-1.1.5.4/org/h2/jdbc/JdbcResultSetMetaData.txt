Compiled from "JdbcResultSetMetaData.java"
public class org.h2.jdbc.JdbcResultSetMetaData extends org.h2.message.TraceObject implements java.sql.ResultSetMetaData {
  private final java.lang.String catalog;

  private final org.h2.jdbc.JdbcResultSet rs;

  private final org.h2.jdbc.JdbcPreparedStatement prep;

  private final org.h2.result.ResultInterface result;

  private final int columnCount;

  org.h2.jdbc.JdbcResultSetMetaData(org.h2.jdbc.JdbcResultSet, org.h2.jdbc.JdbcPreparedStatement, org.h2.result.ResultInterface, java.lang.String, org.h2.message.Trace, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/h2/message/TraceObject."<init>":()V
       4: aload_0
       5: aload         5
       7: iconst_5
       8: iload         6
      10: invokevirtual #2                  // Method setTrace:(Lorg/h2/message/Trace;II)V
      13: aload_0
      14: aload         4
      16: putfield      #3                  // Field catalog:Ljava/lang/String;
      19: aload_0
      20: aload_1
      21: putfield      #4                  // Field rs:Lorg/h2/jdbc/JdbcResultSet;
      24: aload_0
      25: aload_2
      26: putfield      #5                  // Field prep:Lorg/h2/jdbc/JdbcPreparedStatement;
      29: aload_0
      30: aload_3
      31: putfield      #6                  // Field result:Lorg/h2/result/ResultInterface;
      34: aload_0
      35: aload_3
      36: invokeinterface #7,  1            // InterfaceMethod org/h2/result/ResultInterface.getVisibleColumnCount:()I
      41: putfield      #8                  // Field columnCount:I
      44: return

  public int getColumnCount() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #9                  // String getColumnCount
       3: invokevirtual #10                 // Method debugCodeCall:(Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #11                 // Method checkClosed:()V
      10: aload_0
      11: getfield      #8                  // Field columnCount:I
      14: ireturn
      15: astore_1
      16: aload_0
      17: aload_1
      18: invokevirtual #13                 // Method logAndConvert:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      21: athrow
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/Exception

  public java.lang.String getColumnLabel(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #14                 // String getColumnLabel
       3: iload_1
       4: i2l
       5: invokevirtual #15                 // Method debugCodeCall:(Ljava/lang/String;J)V
       8: aload_0
       9: iload_1
      10: invokespecial #16                 // Method checkColumnIndex:(I)V
      13: aload_0
      14: getfield      #6                  // Field result:Lorg/h2/result/ResultInterface;
      17: iinc          1, -1
      20: iload_1
      21: invokeinterface #17,  2           // InterfaceMethod org/h2/result/ResultInterface.getAlias:(I)Ljava/lang/String;
      26: areturn
      27: astore_2
      28: aload_0
      29: aload_2
      30: invokevirtual #13                 // Method logAndConvert:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      33: athrow
    Exception table:
       from    to  target type
           0    26    27   Class java/lang/Exception

  public java.lang.String getColumnName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #18                 // String getColumnName
       3: iload_1
       4: i2l
       5: invokevirtual #15                 // Method debugCodeCall:(Ljava/lang/String;J)V
       8: aload_0
       9: iload_1
      10: invokespecial #16                 // Method checkColumnIndex:(I)V
      13: aload_0
      14: getfield      #6                  // Field result:Lorg/h2/result/ResultInterface;
      17: iinc          1, -1
      20: iload_1
      21: invokeinterface #19,  2           // InterfaceMethod org/h2/result/ResultInterface.getColumnName:(I)Ljava/lang/String;
      26: areturn
      27: astore_2
      28: aload_0
      29: aload_2
      30: invokevirtual #13                 // Method logAndConvert:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      33: athrow
    Exception table:
       from    to  target type
           0    26    27   Class java/lang/Exception

  public int getColumnType(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #20                 // String getColumnType
       3: iload_1
       4: i2l
       5: invokevirtual #15                 // Method debugCodeCall:(Ljava/lang/String;J)V
       8: aload_0
       9: iload_1
      10: invokespecial #16                 // Method checkColumnIndex:(I)V
      13: aload_0
      14: getfield      #6                  // Field result:Lorg/h2/result/ResultInterface;
      17: iinc          1, -1
      20: iload_1
      21: invokeinterface #21,  2           // InterfaceMethod org/h2/result/ResultInterface.getColumnType:(I)I
      26: istore_2
      27: iload_2
      28: invokestatic  #22                 // Method org/h2/value/DataType.convertTypeToSQLType:(I)I
      31: ireturn
      32: astore_2
      33: aload_0
      34: aload_2
      35: invokevirtual #13                 // Method logAndConvert:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      38: athrow
    Exception table:
       from    to  target type
           0    31    32   Class java/lang/Exception

  public java.lang.String getColumnTypeName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #23                 // String getColumnTypeName
       3: iload_1
       4: i2l
       5: invokevirtual #15                 // Method debugCodeCall:(Ljava/lang/String;J)V
       8: aload_0
       9: iload_1
      10: invokespecial #16                 // Method checkColumnIndex:(I)V
      13: aload_0
      14: getfield      #6                  // Field result:Lorg/h2/result/ResultInterface;
      17: iinc          1, -1
      20: iload_1
      21: invokeinterface #21,  2           // InterfaceMethod org/h2/result/ResultInterface.getColumnType:(I)I
      26: istore_2
      27: iload_2
      28: invokestatic  #24                 // Method org/h2/value/DataType.getDataType:(I)Lorg/h2/value/DataType;
      31: getfield      #25                 // Field org/h2/value/DataType.name:Ljava/lang/String;
      34: areturn
      35: astore_2
      36: aload_0
      37: aload_2
      38: invokevirtual #13                 // Method logAndConvert:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      41: athrow
    Exception table:
       from    to  target type
           0    34    35   Class java/lang/Exception

  public java.lang.String getSchemaName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #26                 // String getSchemaName
       3: iload_1
       4: i2l
       5: invokevirtual #15                 // Method debugCodeCall:(Ljava/lang/String;J)V
       8: aload_0
       9: iload_1
      10: invokespecial #16                 // Method checkColumnIndex:(I)V
      13: aload_0
      14: getfield      #6                  // Field result:Lorg/h2/result/ResultInterface;
      17: iinc          1, -1
      20: iload_1
      21: invokeinterface #27,  2           // InterfaceMethod org/h2/result/ResultInterface.getSchemaName:(I)Ljava/lang/String;
      26: astore_2
      27: aload_2
      28: ifnonnull     36
      31: ldc           #28                 // String
      33: goto          37
      36: aload_2
      37: areturn
      38: astore_2
      39: aload_0
      40: aload_2
      41: invokevirtual #13                 // Method logAndConvert:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      44: athrow
    Exception table:
       from    to  target type
           0    37    38   Class java/lang/Exception

  public java.lang.String getTableName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #29                 // String getTableName
       3: iload_1
       4: i2l
       5: invokevirtual #15                 // Method debugCodeCall:(Ljava/lang/String;J)V
       8: aload_0
       9: iload_1
      10: invokespecial #16                 // Method checkColumnIndex:(I)V
      13: aload_0
      14: getfield      #6                  // Field result:Lorg/h2/result/ResultInterface;
      17: iinc          1, -1
      20: iload_1
      21: invokeinterface #30,  2           // InterfaceMethod org/h2/result/ResultInterface.getTableName:(I)Ljava/lang/String;
      26: astore_2
      27: aload_2
      28: ifnonnull     36
      31: ldc           #28                 // String
      33: goto          37
      36: aload_2
      37: areturn
      38: astore_2
      39: aload_0
      40: aload_2
      41: invokevirtual #13                 // Method logAndConvert:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      44: athrow
    Exception table:
       from    to  target type
           0    37    38   Class java/lang/Exception

  public java.lang.String getCatalogName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #31                 // String getCatalogName
       3: iload_1
       4: i2l
       5: invokevirtual #15                 // Method debugCodeCall:(Ljava/lang/String;J)V
       8: aload_0
       9: iload_1
      10: invokespecial #16                 // Method checkColumnIndex:(I)V
      13: aload_0
      14: getfield      #3                  // Field catalog:Ljava/lang/String;
      17: ifnonnull     25
      20: ldc           #28                 // String
      22: goto          29
      25: aload_0
      26: getfield      #3                  // Field catalog:Ljava/lang/String;
      29: areturn
      30: astore_2
      31: aload_0
      32: aload_2
      33: invokevirtual #13                 // Method logAndConvert:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      36: athrow
    Exception table:
       from    to  target type
           0    29    30   Class java/lang/Exception

  public boolean isAutoIncrement(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #32                 // String isAutoIncrement
       3: iload_1
       4: i2l
       5: invokevirtual #15                 // Method debugCodeCall:(Ljava/lang/String;J)V
       8: aload_0
       9: iload_1
      10: invokespecial #16                 // Method checkColumnIndex:(I)V
      13: aload_0
      14: getfield      #6                  // Field result:Lorg/h2/result/ResultInterface;
      17: iinc          1, -1
      20: iload_1
      21: invokeinterface #33,  2           // InterfaceMethod org/h2/result/ResultInterface.isAutoIncrement:(I)Z
      26: ireturn
      27: astore_2
      28: aload_0
      29: aload_2
      30: invokevirtual #13                 // Method logAndConvert:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      33: athrow
    Exception table:
       from    to  target type
           0    26    27   Class java/lang/Exception

  public boolean isCaseSensitive(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #34                 // String isCaseSensitive
       3: iload_1
       4: i2l
       5: invokevirtual #15                 // Method debugCodeCall:(Ljava/lang/String;J)V
       8: aload_0
       9: iload_1
      10: invokespecial #16                 // Method checkColumnIndex:(I)V
      13: iconst_1
      14: ireturn
      15: astore_2
      16: aload_0
      17: aload_2
      18: invokevirtual #13                 // Method logAndConvert:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      21: athrow
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/Exception

  public boolean isSearchable(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #35                 // String isSearchable
       3: iload_1
       4: i2l
       5: invokevirtual #15                 // Method debugCodeCall:(Ljava/lang/String;J)V
       8: aload_0
       9: iload_1
      10: invokespecial #16                 // Method checkColumnIndex:(I)V
      13: iconst_1
      14: ireturn
      15: astore_2
      16: aload_0
      17: aload_2
      18: invokevirtual #13                 // Method logAndConvert:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      21: athrow
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/Exception

  public boolean isCurrency(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #36                 // String isCurrency
       3: iload_1
       4: i2l
       5: invokevirtual #15                 // Method debugCodeCall:(Ljava/lang/String;J)V
       8: aload_0
       9: iload_1
      10: invokespecial #16                 // Method checkColumnIndex:(I)V
      13: iconst_0
      14: ireturn
      15: astore_2
      16: aload_0
      17: aload_2
      18: invokevirtual #13                 // Method logAndConvert:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      21: athrow
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/Exception

  public int isNullable(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #37                 // String isNullable
       3: iload_1
       4: i2l
       5: invokevirtual #15                 // Method debugCodeCall:(Ljava/lang/String;J)V
       8: aload_0
       9: iload_1
      10: invokespecial #16                 // Method checkColumnIndex:(I)V
      13: aload_0
      14: getfield      #6                  // Field result:Lorg/h2/result/ResultInterface;
      17: iinc          1, -1
      20: iload_1
      21: invokeinterface #38,  2           // InterfaceMethod org/h2/result/ResultInterface.getNullable:(I)I
      26: ireturn
      27: astore_2
      28: aload_0
      29: aload_2
      30: invokevirtual #13                 // Method logAndConvert:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      33: athrow
    Exception table:
       from    to  target type
           0    26    27   Class java/lang/Exception

  public boolean isSigned(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #39                 // String isSigned
       3: iload_1
       4: i2l
       5: invokevirtual #15                 // Method debugCodeCall:(Ljava/lang/String;J)V
       8: aload_0
       9: iload_1
      10: invokespecial #16                 // Method checkColumnIndex:(I)V
      13: iconst_1
      14: ireturn
      15: astore_2
      16: aload_0
      17: aload_2
      18: invokevirtual #13                 // Method logAndConvert:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      21: athrow
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/Exception

  public boolean isReadOnly(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #40                 // String isReadOnly
       3: iload_1
       4: i2l
       5: invokevirtual #15                 // Method debugCodeCall:(Ljava/lang/String;J)V
       8: aload_0
       9: iload_1
      10: invokespecial #16                 // Method checkColumnIndex:(I)V
      13: iconst_0
      14: ireturn
      15: astore_2
      16: aload_0
      17: aload_2
      18: invokevirtual #13                 // Method logAndConvert:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      21: athrow
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/Exception

  public boolean isWritable(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #41                 // String isWritable
       3: iload_1
       4: i2l
       5: invokevirtual #15                 // Method debugCodeCall:(Ljava/lang/String;J)V
       8: aload_0
       9: iload_1
      10: invokespecial #16                 // Method checkColumnIndex:(I)V
      13: iconst_1
      14: ireturn
      15: astore_2
      16: aload_0
      17: aload_2
      18: invokevirtual #13                 // Method logAndConvert:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      21: athrow
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/Exception

  public boolean isDefinitelyWritable(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #42                 // String isDefinitelyWritable
       3: iload_1
       4: i2l
       5: invokevirtual #15                 // Method debugCodeCall:(Ljava/lang/String;J)V
       8: aload_0
       9: iload_1
      10: invokespecial #16                 // Method checkColumnIndex:(I)V
      13: iconst_0
      14: ireturn
      15: astore_2
      16: aload_0
      17: aload_2
      18: invokevirtual #13                 // Method logAndConvert:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      21: athrow
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/Exception

  public java.lang.String getColumnClassName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #43                 // String getColumnClassName
       3: iload_1
       4: i2l
       5: invokevirtual #15                 // Method debugCodeCall:(Ljava/lang/String;J)V
       8: aload_0
       9: iload_1
      10: invokespecial #16                 // Method checkColumnIndex:(I)V
      13: aload_0
      14: getfield      #6                  // Field result:Lorg/h2/result/ResultInterface;
      17: iinc          1, -1
      20: iload_1
      21: invokeinterface #21,  2           // InterfaceMethod org/h2/result/ResultInterface.getColumnType:(I)I
      26: istore_2
      27: iload_2
      28: invokestatic  #44                 // Method org/h2/value/DataType.getTypeClassName:(I)Ljava/lang/String;
      31: areturn
      32: astore_2
      33: aload_0
      34: aload_2
      35: invokevirtual #13                 // Method logAndConvert:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      38: athrow
    Exception table:
       from    to  target type
           0    31    32   Class java/lang/Exception

  public int getPrecision(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #45                 // String getPrecision
       3: iload_1
       4: i2l
       5: invokevirtual #15                 // Method debugCodeCall:(Ljava/lang/String;J)V
       8: aload_0
       9: iload_1
      10: invokespecial #16                 // Method checkColumnIndex:(I)V
      13: aload_0
      14: getfield      #6                  // Field result:Lorg/h2/result/ResultInterface;
      17: iinc          1, -1
      20: iload_1
      21: invokeinterface #46,  2           // InterfaceMethod org/h2/result/ResultInterface.getColumnPrecision:(I)J
      26: lstore_2
      27: lload_2
      28: invokestatic  #47                 // Method org/h2/util/MathUtils.convertLongToInt:(J)I
      31: ireturn
      32: astore_2
      33: aload_0
      34: aload_2
      35: invokevirtual #13                 // Method logAndConvert:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      38: athrow
    Exception table:
       from    to  target type
           0    31    32   Class java/lang/Exception

  public int getScale(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #48                 // String getScale
       3: iload_1
       4: i2l
       5: invokevirtual #15                 // Method debugCodeCall:(Ljava/lang/String;J)V
       8: aload_0
       9: iload_1
      10: invokespecial #16                 // Method checkColumnIndex:(I)V
      13: aload_0
      14: getfield      #6                  // Field result:Lorg/h2/result/ResultInterface;
      17: iinc          1, -1
      20: iload_1
      21: invokeinterface #49,  2           // InterfaceMethod org/h2/result/ResultInterface.getColumnScale:(I)I
      26: ireturn
      27: astore_2
      28: aload_0
      29: aload_2
      30: invokevirtual #13                 // Method logAndConvert:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      33: athrow
    Exception table:
       from    to  target type
           0    26    27   Class java/lang/Exception

  public int getColumnDisplaySize(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #50                 // String getColumnDisplaySize
       3: iload_1
       4: i2l
       5: invokevirtual #15                 // Method debugCodeCall:(Ljava/lang/String;J)V
       8: aload_0
       9: iload_1
      10: invokespecial #16                 // Method checkColumnIndex:(I)V
      13: aload_0
      14: getfield      #6                  // Field result:Lorg/h2/result/ResultInterface;
      17: iinc          1, -1
      20: iload_1
      21: invokeinterface #51,  2           // InterfaceMethod org/h2/result/ResultInterface.getDisplaySize:(I)I
      26: ireturn
      27: astore_2
      28: aload_0
      29: aload_2
      30: invokevirtual #13                 // Method logAndConvert:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      33: athrow
    Exception table:
       from    to  target type
           0    26    27   Class java/lang/Exception

  private void checkClosed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field rs:Lorg/h2/jdbc/JdbcResultSet;
       4: ifnull        14
       7: aload_0
       8: getfield      #4                  // Field rs:Lorg/h2/jdbc/JdbcResultSet;
      11: invokevirtual #52                 // Method org/h2/jdbc/JdbcResultSet.checkClosed:()V
      14: aload_0
      15: getfield      #5                  // Field prep:Lorg/h2/jdbc/JdbcPreparedStatement;
      18: ifnull        29
      21: aload_0
      22: getfield      #5                  // Field prep:Lorg/h2/jdbc/JdbcPreparedStatement;
      25: invokevirtual #53                 // Method org/h2/jdbc/JdbcPreparedStatement.checkClosed:()Z
      28: pop
      29: return

  private void checkColumnIndex(int);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method checkClosed:()V
       4: iload_1
       5: iconst_1
       6: if_icmplt     17
       9: iload_1
      10: aload_0
      11: getfield      #8                  // Field columnCount:I
      14: if_icmple     27
      17: ldc           #54                 // String columnIndex
      19: iload_1
      20: invokestatic  #55                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: invokestatic  #56                 // Method org/h2/message/DbException.getInvalidValueException:(Ljava/lang/String;Ljava/lang/Object;)Lorg/h2/message/DbException;
      26: athrow
      27: return

  public <T> T unwrap(java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #57                 // Method isWrapperFor:(Ljava/lang/Class;)Z
       5: ifeq          10
       8: aload_0
       9: areturn
      10: ldc           #58                 // String iface
      12: aload_1
      13: invokestatic  #56                 // Method org/h2/message/DbException.getInvalidValueException:(Ljava/lang/String;Ljava/lang/Object;)Lorg/h2/message/DbException;
      16: athrow
      17: astore_2
      18: aload_0
      19: aload_2
      20: invokevirtual #13                 // Method logAndConvert:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      23: athrow
    Exception table:
       from    to  target type
           0     9    17   Class java/lang/Exception
          10    17    17   Class java/lang/Exception

  public boolean isWrapperFor(java.lang.Class<?>) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_1
       5: aload_0
       6: invokevirtual #59                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #60                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public java.lang.String toString();
    Code:
       0: new           #61                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #62                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #63                 // Method getTraceObjectName:()Ljava/lang/String;
      11: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #65                 // String : columns=
      16: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #8                  // Field columnCount:I
      23: invokevirtual #66                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: invokevirtual #67                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn
}
