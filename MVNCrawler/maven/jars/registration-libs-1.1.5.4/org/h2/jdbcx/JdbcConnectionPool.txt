Compiled from "JdbcConnectionPool.java"
public class org.h2.jdbcx.JdbcConnectionPool implements javax.sql.DataSource,javax.sql.ConnectionEventListener,org.h2.jdbcx.JdbcConnectionPoolBackwardsCompat {
  private static final int DEFAULT_TIMEOUT;

  private static final int DEFAULT_MAX_CONNECTIONS;

  private final javax.sql.ConnectionPoolDataSource dataSource;

  private final java.util.ArrayList<javax.sql.PooledConnection> recycledConnections;

  private java.io.PrintWriter logWriter;

  private int maxConnections;

  private int timeout;

  private int activeConnections;

  private boolean isDisposed;

  protected org.h2.jdbcx.JdbcConnectionPool(javax.sql.ConnectionPoolDataSource);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
       8: putfield      #3                  // Field recycledConnections:Ljava/util/ArrayList;
      11: aload_0
      12: bipush        10
      14: putfield      #4                  // Field maxConnections:I
      17: aload_0
      18: bipush        30
      20: putfield      #5                  // Field timeout:I
      23: aload_0
      24: aload_1
      25: putfield      #6                  // Field dataSource:Ljavax/sql/ConnectionPoolDataSource;
      28: aload_1
      29: ifnull        46
      32: aload_0
      33: aload_1
      34: invokeinterface #7,  1            // InterfaceMethod javax/sql/ConnectionPoolDataSource.getLogWriter:()Ljava/io/PrintWriter;
      39: putfield      #8                  // Field logWriter:Ljava/io/PrintWriter;
      42: goto          46
      45: astore_2
      46: return
    Exception table:
       from    to  target type
          32    42    45   Class java/sql/SQLException

  public static org.h2.jdbcx.JdbcConnectionPool create(javax.sql.ConnectionPoolDataSource);
    Code:
       0: new           #10                 // class org/h2/jdbcx/JdbcConnectionPool
       3: dup
       4: aload_0
       5: invokespecial #11                 // Method "<init>":(Ljavax/sql/ConnectionPoolDataSource;)V
       8: areturn

  public static org.h2.jdbcx.JdbcConnectionPool create(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: new           #12                 // class org/h2/jdbcx/JdbcDataSource
       3: dup
       4: invokespecial #13                 // Method org/h2/jdbcx/JdbcDataSource."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_0
      10: invokevirtual #14                 // Method org/h2/jdbcx/JdbcDataSource.setURL:(Ljava/lang/String;)V
      13: aload_3
      14: aload_1
      15: invokevirtual #15                 // Method org/h2/jdbcx/JdbcDataSource.setUser:(Ljava/lang/String;)V
      18: aload_3
      19: aload_2
      20: invokevirtual #16                 // Method org/h2/jdbcx/JdbcDataSource.setPassword:(Ljava/lang/String;)V
      23: new           #10                 // class org/h2/jdbcx/JdbcConnectionPool
      26: dup
      27: aload_3
      28: invokespecial #11                 // Method "<init>":(Ljavax/sql/ConnectionPoolDataSource;)V
      31: areturn

  public synchronized void setMaxConnections(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpge     32
       5: new           #17                 // class java/lang/IllegalArgumentException
       8: dup
       9: new           #18                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #20                 // String Invalid maxConnections value:
      18: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: iload_1
      22: invokevirtual #22                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      25: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_0
      33: iload_1
      34: putfield      #4                  // Field maxConnections:I
      37: aload_0
      38: invokevirtual #25                 // Method java/lang/Object.notifyAll:()V
      41: return

  public synchronized int getMaxConnections();
    Code:
       0: aload_0
       1: getfield      #4                  // Field maxConnections:I
       4: ireturn

  public synchronized int getLoginTimeout();
    Code:
       0: aload_0
       1: getfield      #5                  // Field timeout:I
       4: ireturn

  public synchronized void setLoginTimeout(int);
    Code:
       0: iload_1
       1: ifne          7
       4: bipush        30
       6: istore_1
       7: aload_0
       8: iload_1
       9: putfield      #5                  // Field timeout:I
      12: return

  public synchronized void dispose();
    Code:
       0: aload_0
       1: getfield      #26                 // Field isDisposed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #26                 // Field isDisposed:Z
      13: aload_0
      14: getfield      #3                  // Field recycledConnections:Ljava/util/ArrayList;
      17: invokevirtual #27                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      20: astore_1
      21: aload_1
      22: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          48
      30: aload_1
      31: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #30                 // class javax/sql/PooledConnection
      39: astore_2
      40: aload_0
      41: aload_2
      42: invokespecial #31                 // Method closeConnection:(Ljavax/sql/PooledConnection;)V
      45: goto          21
      48: return

  public java.sql.Connection getConnection() throws java.sql.SQLException;
    Code:
       0: invokestatic  #32                 // Method java/lang/System.nanoTime:()J
       3: getstatic     #33                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       6: aload_0
       7: getfield      #5                  // Field timeout:I
      10: i2l
      11: invokevirtual #34                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      14: ladd
      15: lstore_1
      16: aload_0
      17: dup
      18: astore_3
      19: monitorenter
      20: aload_0
      21: getfield      #35                 // Field activeConnections:I
      24: aload_0
      25: getfield      #4                  // Field maxConnections:I
      28: if_icmpge     38
      31: aload_0
      32: invokespecial #36                 // Method getConnectionNow:()Ljava/sql/Connection;
      35: aload_3
      36: monitorexit
      37: areturn
      38: aload_0
      39: ldc2_w        #37                 // long 1000l
      42: invokevirtual #39                 // Method java/lang/Object.wait:(J)V
      45: goto          50
      48: astore        4
      50: aload_3
      51: monitorexit
      52: goto          62
      55: astore        5
      57: aload_3
      58: monitorexit
      59: aload         5
      61: athrow
      62: invokestatic  #32                 // Method java/lang/System.nanoTime:()J
      65: lload_1
      66: lcmp
      67: ifle          16
      70: new           #9                  // class java/sql/SQLException
      73: dup
      74: ldc           #41                 // String Login timeout
      76: ldc           #42                 // String 08001
      78: sipush        8001
      81: invokespecial #43                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;Ljava/lang/String;I)V
      84: athrow
    Exception table:
       from    to  target type
          38    45    48   Class java/lang/InterruptedException
          20    37    55   any
          38    52    55   any
          55    59    55   any

  public java.sql.Connection getConnection(java.lang.String, java.lang.String);
    Code:
       0: new           #44                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #45                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  private java.sql.Connection getConnectionNow() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field isDisposed:Z
       4: ifeq          17
       7: new           #46                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #47                 // String Connection pool has been disposed.
      13: invokespecial #48                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #3                  // Field recycledConnections:Ljava/util/ArrayList;
      21: invokevirtual #49                 // Method java/util/ArrayList.isEmpty:()Z
      24: ifne          50
      27: aload_0
      28: getfield      #3                  // Field recycledConnections:Ljava/util/ArrayList;
      31: aload_0
      32: getfield      #3                  // Field recycledConnections:Ljava/util/ArrayList;
      35: invokevirtual #50                 // Method java/util/ArrayList.size:()I
      38: iconst_1
      39: isub
      40: invokevirtual #51                 // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;
      43: checkcast     #30                 // class javax/sql/PooledConnection
      46: astore_1
      47: goto          60
      50: aload_0
      51: getfield      #6                  // Field dataSource:Ljavax/sql/ConnectionPoolDataSource;
      54: invokeinterface #52,  1           // InterfaceMethod javax/sql/ConnectionPoolDataSource.getPooledConnection:()Ljavax/sql/PooledConnection;
      59: astore_1
      60: aload_1
      61: invokeinterface #53,  1           // InterfaceMethod javax/sql/PooledConnection.getConnection:()Ljava/sql/Connection;
      66: astore_2
      67: aload_0
      68: dup
      69: getfield      #35                 // Field activeConnections:I
      72: iconst_1
      73: iadd
      74: putfield      #35                 // Field activeConnections:I
      77: aload_1
      78: aload_0
      79: invokeinterface #54,  2           // InterfaceMethod javax/sql/PooledConnection.addConnectionEventListener:(Ljavax/sql/ConnectionEventListener;)V
      84: aload_2
      85: areturn

  synchronized void recycleConnection(javax.sql.PooledConnection);
    Code:
       0: aload_0
       1: getfield      #35                 // Field activeConnections:I
       4: ifgt          15
       7: new           #55                 // class java/lang/AssertionError
      10: dup
      11: invokespecial #56                 // Method java/lang/AssertionError."<init>":()V
      14: athrow
      15: aload_0
      16: dup
      17: getfield      #35                 // Field activeConnections:I
      20: iconst_1
      21: isub
      22: putfield      #35                 // Field activeConnections:I
      25: aload_0
      26: getfield      #26                 // Field isDisposed:Z
      29: ifne          55
      32: aload_0
      33: getfield      #35                 // Field activeConnections:I
      36: aload_0
      37: getfield      #4                  // Field maxConnections:I
      40: if_icmpge     55
      43: aload_0
      44: getfield      #3                  // Field recycledConnections:Ljava/util/ArrayList;
      47: aload_1
      48: invokevirtual #57                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      51: pop
      52: goto          60
      55: aload_0
      56: aload_1
      57: invokespecial #31                 // Method closeConnection:(Ljavax/sql/PooledConnection;)V
      60: aload_0
      61: getfield      #35                 // Field activeConnections:I
      64: aload_0
      65: getfield      #4                  // Field maxConnections:I
      68: iconst_1
      69: isub
      70: if_icmplt     77
      73: aload_0
      74: invokevirtual #25                 // Method java/lang/Object.notifyAll:()V
      77: return

  private void closeConnection(javax.sql.PooledConnection);
    Code:
       0: aload_1
       1: invokeinterface #58,  1           // InterfaceMethod javax/sql/PooledConnection.close:()V
       6: goto          25
       9: astore_2
      10: aload_0
      11: getfield      #8                  // Field logWriter:Ljava/io/PrintWriter;
      14: ifnull        25
      17: aload_2
      18: aload_0
      19: getfield      #8                  // Field logWriter:Ljava/io/PrintWriter;
      22: invokevirtual #59                 // Method java/sql/SQLException.printStackTrace:(Ljava/io/PrintWriter;)V
      25: return
    Exception table:
       from    to  target type
           0     6     9   Class java/sql/SQLException

  public void connectionClosed(javax.sql.ConnectionEvent);
    Code:
       0: aload_1
       1: invokevirtual #60                 // Method javax/sql/ConnectionEvent.getSource:()Ljava/lang/Object;
       4: checkcast     #30                 // class javax/sql/PooledConnection
       7: astore_2
       8: aload_2
       9: aload_0
      10: invokeinterface #61,  2           // InterfaceMethod javax/sql/PooledConnection.removeConnectionEventListener:(Ljavax/sql/ConnectionEventListener;)V
      15: aload_0
      16: aload_2
      17: invokevirtual #62                 // Method recycleConnection:(Ljavax/sql/PooledConnection;)V
      20: return

  public void connectionErrorOccurred(javax.sql.ConnectionEvent);
    Code:
       0: return

  public synchronized int getActiveConnections();
    Code:
       0: aload_0
       1: getfield      #35                 // Field activeConnections:I
       4: ireturn

  public java.io.PrintWriter getLogWriter();
    Code:
       0: aload_0
       1: getfield      #8                  // Field logWriter:Ljava/io/PrintWriter;
       4: areturn

  public void setLogWriter(java.io.PrintWriter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field logWriter:Ljava/io/PrintWriter;
       5: return

  public <T> T unwrap(java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: ldc           #63                 // String unwrap
       2: invokestatic  #64                 // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
       5: athrow

  public boolean isWrapperFor(java.lang.Class<?>) throws java.sql.SQLException;
    Code:
       0: ldc           #65                 // String isWrapperFor
       2: invokestatic  #64                 // Method org/h2/message/DbException.getUnsupportedException:(Ljava/lang/String;)Lorg/h2/message/DbException;
       5: athrow

  public java.util.logging.Logger getParentLogger();
    Code:
       0: aconst_null
       1: areturn
}
