Compiled from "ResultRemote.java"
public class org.h2.result.ResultRemote implements org.h2.result.ResultInterface {
  private int fetchSize;

  private org.h2.engine.SessionRemote session;

  private org.h2.value.Transfer transfer;

  private int id;

  private final org.h2.result.ResultColumn[] columns;

  private org.h2.value.Value[] currentRow;

  private final int rowCount;

  private int rowId;

  private int rowOffset;

  private java.util.ArrayList<org.h2.value.Value[]> result;

  private final org.h2.message.Trace trace;

  public org.h2.result.ResultRemote(org.h2.engine.SessionRemote, org.h2.value.Transfer, int, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field session:Lorg/h2/engine/SessionRemote;
       9: aload_0
      10: aload_1
      11: invokevirtual #3                  // Method org/h2/engine/SessionRemote.getTrace:()Lorg/h2/message/Trace;
      14: putfield      #4                  // Field trace:Lorg/h2/message/Trace;
      17: aload_0
      18: aload_2
      19: putfield      #5                  // Field transfer:Lorg/h2/value/Transfer;
      22: aload_0
      23: iload_3
      24: putfield      #6                  // Field id:I
      27: aload_0
      28: iload         4
      30: anewarray     #7                  // class org/h2/result/ResultColumn
      33: putfield      #8                  // Field columns:[Lorg/h2/result/ResultColumn;
      36: aload_0
      37: aload_2
      38: invokevirtual #9                  // Method org/h2/value/Transfer.readInt:()I
      41: putfield      #10                 // Field rowCount:I
      44: iconst_0
      45: istore        6
      47: iload         6
      49: iload         4
      51: if_icmpge     75
      54: aload_0
      55: getfield      #8                  // Field columns:[Lorg/h2/result/ResultColumn;
      58: iload         6
      60: new           #7                  // class org/h2/result/ResultColumn
      63: dup
      64: aload_2
      65: invokespecial #11                 // Method org/h2/result/ResultColumn."<init>":(Lorg/h2/value/Transfer;)V
      68: aastore
      69: iinc          6, 1
      72: goto          47
      75: aload_0
      76: iconst_m1
      77: putfield      #12                 // Field rowId:I
      80: aload_0
      81: invokestatic  #13                 // Method org/h2/util/New.arrayList:()Ljava/util/ArrayList;
      84: putfield      #14                 // Field result:Ljava/util/ArrayList;
      87: aload_0
      88: iload         5
      90: putfield      #15                 // Field fetchSize:I
      93: aload_0
      94: iconst_0
      95: invokespecial #16                 // Method fetchRows:(Z)V
      98: return

  public boolean isLazy();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String getAlias(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field columns:[Lorg/h2/result/ResultColumn;
       4: iload_1
       5: aaload
       6: getfield      #17                 // Field org/h2/result/ResultColumn.alias:Ljava/lang/String;
       9: areturn

  public java.lang.String getSchemaName(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field columns:[Lorg/h2/result/ResultColumn;
       4: iload_1
       5: aaload
       6: getfield      #18                 // Field org/h2/result/ResultColumn.schemaName:Ljava/lang/String;
       9: areturn

  public java.lang.String getTableName(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field columns:[Lorg/h2/result/ResultColumn;
       4: iload_1
       5: aaload
       6: getfield      #19                 // Field org/h2/result/ResultColumn.tableName:Ljava/lang/String;
       9: areturn

  public java.lang.String getColumnName(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field columns:[Lorg/h2/result/ResultColumn;
       4: iload_1
       5: aaload
       6: getfield      #20                 // Field org/h2/result/ResultColumn.columnName:Ljava/lang/String;
       9: areturn

  public int getColumnType(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field columns:[Lorg/h2/result/ResultColumn;
       4: iload_1
       5: aaload
       6: getfield      #21                 // Field org/h2/result/ResultColumn.columnType:I
       9: ireturn

  public long getColumnPrecision(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field columns:[Lorg/h2/result/ResultColumn;
       4: iload_1
       5: aaload
       6: getfield      #22                 // Field org/h2/result/ResultColumn.precision:J
       9: lreturn

  public int getColumnScale(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field columns:[Lorg/h2/result/ResultColumn;
       4: iload_1
       5: aaload
       6: getfield      #23                 // Field org/h2/result/ResultColumn.scale:I
       9: ireturn

  public int getDisplaySize(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field columns:[Lorg/h2/result/ResultColumn;
       4: iload_1
       5: aaload
       6: getfield      #24                 // Field org/h2/result/ResultColumn.displaySize:I
       9: ireturn

  public boolean isAutoIncrement(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field columns:[Lorg/h2/result/ResultColumn;
       4: iload_1
       5: aaload
       6: getfield      #25                 // Field org/h2/result/ResultColumn.autoIncrement:Z
       9: ireturn

  public int getNullable(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field columns:[Lorg/h2/result/ResultColumn;
       4: iload_1
       5: aaload
       6: getfield      #26                 // Field org/h2/result/ResultColumn.nullable:I
       9: ireturn

  public void reset();
    Code:
       0: aload_0
       1: iconst_m1
       2: putfield      #12                 // Field rowId:I
       5: aload_0
       6: aconst_null
       7: putfield      #27                 // Field currentRow:[Lorg/h2/value/Value;
      10: aload_0
      11: getfield      #2                  // Field session:Lorg/h2/engine/SessionRemote;
      14: ifnonnull     18
      17: return
      18: aload_0
      19: getfield      #2                  // Field session:Lorg/h2/engine/SessionRemote;
      22: dup
      23: astore_1
      24: monitorenter
      25: aload_0
      26: getfield      #2                  // Field session:Lorg/h2/engine/SessionRemote;
      29: invokevirtual #28                 // Method org/h2/engine/SessionRemote.checkClosed:()V
      32: aload_0
      33: getfield      #2                  // Field session:Lorg/h2/engine/SessionRemote;
      36: ldc           #29                 // String RESULT_RESET
      38: aload_0
      39: getfield      #6                  // Field id:I
      42: invokevirtual #30                 // Method org/h2/engine/SessionRemote.traceOperation:(Ljava/lang/String;I)V
      45: aload_0
      46: getfield      #5                  // Field transfer:Lorg/h2/value/Transfer;
      49: bipush        6
      51: invokevirtual #31                 // Method org/h2/value/Transfer.writeInt:(I)Lorg/h2/value/Transfer;
      54: aload_0
      55: getfield      #6                  // Field id:I
      58: invokevirtual #31                 // Method org/h2/value/Transfer.writeInt:(I)Lorg/h2/value/Transfer;
      61: invokevirtual #32                 // Method org/h2/value/Transfer.flush:()V
      64: goto          74
      67: astore_2
      68: aload_2
      69: aconst_null
      70: invokestatic  #34                 // Method org/h2/message/DbException.convertIOException:(Ljava/io/IOException;Ljava/lang/String;)Lorg/h2/message/DbException;
      73: athrow
      74: aload_1
      75: monitorexit
      76: goto          84
      79: astore_3
      80: aload_1
      81: monitorexit
      82: aload_3
      83: athrow
      84: return
    Exception table:
       from    to  target type
          32    64    67   Class java/io/IOException
          25    76    79   any
          79    82    79   any

  public org.h2.value.Value[] currentRow();
    Code:
       0: aload_0
       1: getfield      #27                 // Field currentRow:[Lorg/h2/value/Value;
       4: areturn

  public boolean next();
    Code:
       0: aload_0
       1: getfield      #12                 // Field rowId:I
       4: aload_0
       5: getfield      #10                 // Field rowCount:I
       8: if_icmpge     90
      11: aload_0
      12: dup
      13: getfield      #12                 // Field rowId:I
      16: iconst_1
      17: iadd
      18: putfield      #12                 // Field rowId:I
      21: aload_0
      22: invokespecial #35                 // Method remapIfOld:()V
      25: aload_0
      26: getfield      #12                 // Field rowId:I
      29: aload_0
      30: getfield      #10                 // Field rowCount:I
      33: if_icmpge     85
      36: aload_0
      37: getfield      #12                 // Field rowId:I
      40: aload_0
      41: getfield      #36                 // Field rowOffset:I
      44: isub
      45: aload_0
      46: getfield      #14                 // Field result:Ljava/util/ArrayList;
      49: invokevirtual #37                 // Method java/util/ArrayList.size:()I
      52: if_icmplt     60
      55: aload_0
      56: iconst_1
      57: invokespecial #16                 // Method fetchRows:(Z)V
      60: aload_0
      61: aload_0
      62: getfield      #14                 // Field result:Ljava/util/ArrayList;
      65: aload_0
      66: getfield      #12                 // Field rowId:I
      69: aload_0
      70: getfield      #36                 // Field rowOffset:I
      73: isub
      74: invokevirtual #38                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      77: checkcast     #39                 // class "[Lorg/h2/value/Value;"
      80: putfield      #27                 // Field currentRow:[Lorg/h2/value/Value;
      83: iconst_1
      84: ireturn
      85: aload_0
      86: aconst_null
      87: putfield      #27                 // Field currentRow:[Lorg/h2/value/Value;
      90: iconst_0
      91: ireturn

  public int getRowId();
    Code:
       0: aload_0
       1: getfield      #12                 // Field rowId:I
       4: ireturn

  public boolean isAfterLast();
    Code:
       0: aload_0
       1: getfield      #12                 // Field rowId:I
       4: aload_0
       5: getfield      #10                 // Field rowCount:I
       8: if_icmplt     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public int getVisibleColumnCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field columns:[Lorg/h2/result/ResultColumn;
       4: arraylength
       5: ireturn

  public int getRowCount();
    Code:
       0: aload_0
       1: getfield      #10                 // Field rowCount:I
       4: ireturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #12                 // Field rowId:I
       4: aload_0
       5: getfield      #10                 // Field rowCount:I
       8: iconst_1
       9: isub
      10: if_icmpge     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  private void sendClose();
    Code:
       0: aload_0
       1: getfield      #2                  // Field session:Lorg/h2/engine/SessionRemote;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #2                  // Field session:Lorg/h2/engine/SessionRemote;
      12: dup
      13: astore_1
      14: monitorenter
      15: aload_0
      16: getfield      #2                  // Field session:Lorg/h2/engine/SessionRemote;
      19: ldc           #40                 // String RESULT_CLOSE
      21: aload_0
      22: getfield      #6                  // Field id:I
      25: invokevirtual #30                 // Method org/h2/engine/SessionRemote.traceOperation:(Ljava/lang/String;I)V
      28: aload_0
      29: getfield      #5                  // Field transfer:Lorg/h2/value/Transfer;
      32: bipush        7
      34: invokevirtual #31                 // Method org/h2/value/Transfer.writeInt:(I)Lorg/h2/value/Transfer;
      37: aload_0
      38: getfield      #6                  // Field id:I
      41: invokevirtual #31                 // Method org/h2/value/Transfer.writeInt:(I)Lorg/h2/value/Transfer;
      44: pop
      45: aload_1
      46: monitorexit
      47: goto          55
      50: astore_2
      51: aload_1
      52: monitorexit
      53: aload_2
      54: athrow
      55: aload_0
      56: aconst_null
      57: putfield      #5                  // Field transfer:Lorg/h2/value/Transfer;
      60: aload_0
      61: aconst_null
      62: putfield      #2                  // Field session:Lorg/h2/engine/SessionRemote;
      65: goto          105
      68: astore_1
      69: aload_0
      70: getfield      #4                  // Field trace:Lorg/h2/message/Trace;
      73: aload_1
      74: ldc           #41                 // String close
      76: invokevirtual #42                 // Method org/h2/message/Trace.error:(Ljava/lang/Throwable;Ljava/lang/String;)V
      79: aload_0
      80: aconst_null
      81: putfield      #5                  // Field transfer:Lorg/h2/value/Transfer;
      84: aload_0
      85: aconst_null
      86: putfield      #2                  // Field session:Lorg/h2/engine/SessionRemote;
      89: goto          105
      92: astore_3
      93: aload_0
      94: aconst_null
      95: putfield      #5                  // Field transfer:Lorg/h2/value/Transfer;
      98: aload_0
      99: aconst_null
     100: putfield      #2                  // Field session:Lorg/h2/engine/SessionRemote;
     103: aload_3
     104: athrow
     105: return
    Exception table:
       from    to  target type
          15    47    50   any
          50    53    50   any
           8    55    68   Class java/io/IOException
           8    55    92   any
          68    79    92   any
          92    93    92   any

  public void close();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #14                 // Field result:Ljava/util/ArrayList;
       5: aload_0
       6: invokespecial #43                 // Method sendClose:()V
       9: return

  private void remapIfOld();
    Code:
       0: aload_0
       1: getfield      #2                  // Field session:Lorg/h2/engine/SessionRemote;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #6                  // Field id:I
      12: aload_0
      13: getfield      #2                  // Field session:Lorg/h2/engine/SessionRemote;
      16: invokevirtual #44                 // Method org/h2/engine/SessionRemote.getCurrentId:()I
      19: getstatic     #45                 // Field org/h2/engine/SysProperties.SERVER_CACHED_OBJECTS:I
      22: iconst_2
      23: idiv
      24: isub
      25: if_icmpgt     75
      28: aload_0
      29: getfield      #2                  // Field session:Lorg/h2/engine/SessionRemote;
      32: invokevirtual #46                 // Method org/h2/engine/SessionRemote.getNextId:()I
      35: istore_1
      36: aload_0
      37: getfield      #2                  // Field session:Lorg/h2/engine/SessionRemote;
      40: ldc           #47                 // String CHANGE_ID
      42: aload_0
      43: getfield      #6                  // Field id:I
      46: invokevirtual #30                 // Method org/h2/engine/SessionRemote.traceOperation:(Ljava/lang/String;I)V
      49: aload_0
      50: getfield      #5                  // Field transfer:Lorg/h2/value/Transfer;
      53: bipush        9
      55: invokevirtual #31                 // Method org/h2/value/Transfer.writeInt:(I)Lorg/h2/value/Transfer;
      58: aload_0
      59: getfield      #6                  // Field id:I
      62: invokevirtual #31                 // Method org/h2/value/Transfer.writeInt:(I)Lorg/h2/value/Transfer;
      65: iload_1
      66: invokevirtual #31                 // Method org/h2/value/Transfer.writeInt:(I)Lorg/h2/value/Transfer;
      69: pop
      70: aload_0
      71: iload_1
      72: putfield      #6                  // Field id:I
      75: goto          85
      78: astore_1
      79: aload_1
      80: aconst_null
      81: invokestatic  #34                 // Method org/h2/message/DbException.convertIOException:(Ljava/io/IOException;Ljava/lang/String;)Lorg/h2/message/DbException;
      84: athrow
      85: return
    Exception table:
       from    to  target type
           8    75    78   Class java/io/IOException

  private void fetchRows(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field session:Lorg/h2/engine/SessionRemote;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #2                  // Field session:Lorg/h2/engine/SessionRemote;
      11: invokevirtual #28                 // Method org/h2/engine/SessionRemote.checkClosed:()V
      14: aload_0
      15: dup
      16: getfield      #36                 // Field rowOffset:I
      19: aload_0
      20: getfield      #14                 // Field result:Ljava/util/ArrayList;
      23: invokevirtual #37                 // Method java/util/ArrayList.size:()I
      26: iadd
      27: putfield      #36                 // Field rowOffset:I
      30: aload_0
      31: getfield      #14                 // Field result:Ljava/util/ArrayList;
      34: invokevirtual #48                 // Method java/util/ArrayList.clear:()V
      37: aload_0
      38: getfield      #15                 // Field fetchSize:I
      41: aload_0
      42: getfield      #10                 // Field rowCount:I
      45: aload_0
      46: getfield      #36                 // Field rowOffset:I
      49: isub
      50: invokestatic  #49                 // Method java/lang/Math.min:(II)I
      53: istore_3
      54: iload_1
      55: ifeq          102
      58: aload_0
      59: getfield      #2                  // Field session:Lorg/h2/engine/SessionRemote;
      62: ldc           #50                 // String RESULT_FETCH_ROWS
      64: aload_0
      65: getfield      #6                  // Field id:I
      68: invokevirtual #30                 // Method org/h2/engine/SessionRemote.traceOperation:(Ljava/lang/String;I)V
      71: aload_0
      72: getfield      #5                  // Field transfer:Lorg/h2/value/Transfer;
      75: iconst_5
      76: invokevirtual #31                 // Method org/h2/value/Transfer.writeInt:(I)Lorg/h2/value/Transfer;
      79: aload_0
      80: getfield      #6                  // Field id:I
      83: invokevirtual #31                 // Method org/h2/value/Transfer.writeInt:(I)Lorg/h2/value/Transfer;
      86: iload_3
      87: invokevirtual #31                 // Method org/h2/value/Transfer.writeInt:(I)Lorg/h2/value/Transfer;
      90: pop
      91: aload_0
      92: getfield      #2                  // Field session:Lorg/h2/engine/SessionRemote;
      95: aload_0
      96: getfield      #5                  // Field transfer:Lorg/h2/value/Transfer;
      99: invokevirtual #51                 // Method org/h2/engine/SessionRemote.done:(Lorg/h2/value/Transfer;)V
     102: iconst_0
     103: istore        4
     105: iload         4
     107: iload_3
     108: if_icmpge     190
     111: aload_0
     112: getfield      #5                  // Field transfer:Lorg/h2/value/Transfer;
     115: invokevirtual #52                 // Method org/h2/value/Transfer.readBoolean:()Z
     118: istore        5
     120: iload         5
     122: ifne          128
     125: goto          190
     128: aload_0
     129: getfield      #8                  // Field columns:[Lorg/h2/result/ResultColumn;
     132: arraylength
     133: istore        6
     135: iload         6
     137: anewarray     #53                 // class org/h2/value/Value
     140: astore        7
     142: iconst_0
     143: istore        8
     145: iload         8
     147: iload         6
     149: if_icmpge     174
     152: aload_0
     153: getfield      #5                  // Field transfer:Lorg/h2/value/Transfer;
     156: invokevirtual #54                 // Method org/h2/value/Transfer.readValue:()Lorg/h2/value/Value;
     159: astore        9
     161: aload         7
     163: iload         8
     165: aload         9
     167: aastore
     168: iinc          8, 1
     171: goto          145
     174: aload_0
     175: getfield      #14                 // Field result:Ljava/util/ArrayList;
     178: aload         7
     180: invokevirtual #55                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     183: pop
     184: iinc          4, 1
     187: goto          105
     190: aload_0
     191: getfield      #36                 // Field rowOffset:I
     194: aload_0
     195: getfield      #14                 // Field result:Ljava/util/ArrayList;
     198: invokevirtual #37                 // Method java/util/ArrayList.size:()I
     201: iadd
     202: aload_0
     203: getfield      #10                 // Field rowCount:I
     206: if_icmplt     213
     209: aload_0
     210: invokespecial #43                 // Method sendClose:()V
     213: goto          223
     216: astore_3
     217: aload_3
     218: aconst_null
     219: invokestatic  #34                 // Method org/h2/message/DbException.convertIOException:(Ljava/io/IOException;Ljava/lang/String;)Lorg/h2/message/DbException;
     222: athrow
     223: aload_2
     224: monitorexit
     225: goto          235
     228: astore        10
     230: aload_2
     231: monitorexit
     232: aload         10
     234: athrow
     235: return
    Exception table:
       from    to  target type
          14   213   216   Class java/io/IOException
           7   225   228   any
         228   232   228   any

  public java.lang.String toString();
    Code:
       0: new           #56                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #58                 // String columns:
       9: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #8                  // Field columns:[Lorg/h2/result/ResultColumn;
      16: arraylength
      17: invokevirtual #60                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      20: ldc           #61                 // String  rows:
      22: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: getfield      #10                 // Field rowCount:I
      29: invokevirtual #60                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: ldc           #62                 // String  pos:
      34: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: getfield      #12                 // Field rowId:I
      41: invokevirtual #60                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: areturn

  public int getFetchSize();
    Code:
       0: aload_0
       1: getfield      #15                 // Field fetchSize:I
       4: ireturn

  public void setFetchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field fetchSize:I
       5: return

  public boolean needToClose();
    Code:
       0: iconst_1
       1: ireturn

  public org.h2.result.ResultInterface createShallowCopy(org.h2.engine.SessionInterface);
    Code:
       0: aconst_null
       1: areturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #14                 // Field result:Ljava/util/ArrayList;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean containsDistinct(org.h2.value.Value[]);
    Code:
       0: invokestatic  #64                 // Method org/h2/message/DbException.throwInternalError:()Ljava/lang/RuntimeException;
       3: athrow
}
