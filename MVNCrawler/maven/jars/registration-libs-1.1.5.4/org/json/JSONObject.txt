Compiled from "JSONObject.java"
public class org.json.JSONObject {
  private static final java.lang.Double NEGATIVE_ZERO;

  public static final java.lang.Object NULL;

  private final java.util.Map<java.lang.String, java.lang.Object> nameValuePairs;

  public org.json.JSONObject();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: putfield      #5                  // Field nameValuePairs:Ljava/util/Map;
      15: return

  public org.json.JSONObject(java.util.Map);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method "<init>":()V
       4: aload_1
       5: astore_2
       6: aload_2
       7: invokeinterface #7,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      12: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          90
      27: aload_3
      28: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #11                 // class java/util/Map$Entry
      36: astore        4
      38: aload         4
      40: invokeinterface #12,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      45: checkcast     #13                 // class java/lang/String
      48: astore        5
      50: aload         5
      52: ifnonnull     65
      55: new           #14                 // class java/lang/NullPointerException
      58: dup
      59: ldc           #15                 // String key == null
      61: invokespecial #16                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: aload_0
      66: getfield      #5                  // Field nameValuePairs:Ljava/util/Map;
      69: aload         5
      71: aload         4
      73: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      78: invokestatic  #18                 // Method wrap:(Ljava/lang/Object;)Ljava/lang/Object;
      81: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      86: pop
      87: goto          18
      90: return

  public org.json.JSONObject(org.json.JSONTokener) throws org.json.JSONException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokevirtual #20                 // Method org/json/JSONTokener.nextValue:()Ljava/lang/Object;
       8: astore_2
       9: aload_2
      10: instanceof    #21                 // class org/json/JSONObject
      13: ifeq          30
      16: aload_0
      17: aload_2
      18: checkcast     #21                 // class org/json/JSONObject
      21: getfield      #5                  // Field nameValuePairs:Ljava/util/Map;
      24: putfield      #5                  // Field nameValuePairs:Ljava/util/Map;
      27: goto          37
      30: aload_2
      31: ldc           #22                 // String JSONObject
      33: invokestatic  #23                 // Method org/json/JSON.typeMismatch:(Ljava/lang/Object;Ljava/lang/String;)Lorg/json/JSONException;
      36: athrow
      37: return

  public org.json.JSONObject(java.lang.String) throws org.json.JSONException;
    Code:
       0: aload_0
       1: new           #24                 // class org/json/JSONTokener
       4: dup
       5: aload_1
       6: invokespecial #25                 // Method org/json/JSONTokener."<init>":(Ljava/lang/String;)V
       9: invokespecial #26                 // Method "<init>":(Lorg/json/JSONTokener;)V
      12: return

  public org.json.JSONObject(org.json.JSONObject, java.lang.String[]) throws org.json.JSONException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method "<init>":()V
       4: aload_2
       5: astore_3
       6: aload_3
       7: arraylength
       8: istore        4
      10: iconst_0
      11: istore        5
      13: iload         5
      15: iload         4
      17: if_icmpge     59
      20: aload_3
      21: iload         5
      23: aaload
      24: astore        6
      26: aload_1
      27: aload         6
      29: invokevirtual #27                 // Method opt:(Ljava/lang/String;)Ljava/lang/Object;
      32: astore        7
      34: aload         7
      36: ifnull        53
      39: aload_0
      40: getfield      #5                  // Field nameValuePairs:Ljava/util/Map;
      43: aload         6
      45: aload         7
      47: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      52: pop
      53: iinc          5, 1
      56: goto          13
      59: return

  public int length();
    Code:
       0: aload_0
       1: getfield      #5                  // Field nameValuePairs:Ljava/util/Map;
       4: invokeinterface #28,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public org.json.JSONObject put(java.lang.String, boolean) throws org.json.JSONException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field nameValuePairs:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: invokevirtual #29                 // Method checkName:(Ljava/lang/String;)Ljava/lang/String;
       9: iload_2
      10: invokestatic  #30                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_0
      20: areturn

  public org.json.JSONObject put(java.lang.String, double) throws org.json.JSONException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field nameValuePairs:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: invokevirtual #29                 // Method checkName:(Ljava/lang/String;)Ljava/lang/String;
       9: dload_2
      10: invokestatic  #31                 // Method org/json/JSON.checkDouble:(D)D
      13: invokestatic  #32                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      16: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: aload_0
      23: areturn

  public org.json.JSONObject put(java.lang.String, int) throws org.json.JSONException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field nameValuePairs:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: invokevirtual #29                 // Method checkName:(Ljava/lang/String;)Ljava/lang/String;
       9: iload_2
      10: invokestatic  #33                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_0
      20: areturn

  public org.json.JSONObject put(java.lang.String, long) throws org.json.JSONException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field nameValuePairs:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: invokevirtual #29                 // Method checkName:(Ljava/lang/String;)Ljava/lang/String;
       9: lload_2
      10: invokestatic  #34                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      13: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_0
      20: areturn

  public org.json.JSONObject put(java.lang.String, java.lang.Object) throws org.json.JSONException;
    Code:
       0: aload_2
       1: ifnonnull     17
       4: aload_0
       5: getfield      #5                  // Field nameValuePairs:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #35,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: areturn
      17: aload_2
      18: instanceof    #36                 // class java/lang/Number
      21: ifeq          35
      24: aload_2
      25: checkcast     #36                 // class java/lang/Number
      28: invokevirtual #37                 // Method java/lang/Number.doubleValue:()D
      31: invokestatic  #31                 // Method org/json/JSON.checkDouble:(D)D
      34: pop2
      35: aload_0
      36: getfield      #5                  // Field nameValuePairs:Ljava/util/Map;
      39: aload_0
      40: aload_1
      41: invokevirtual #29                 // Method checkName:(Ljava/lang/String;)Ljava/lang/String;
      44: aload_2
      45: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: aload_0
      52: areturn

  public org.json.JSONObject putOpt(java.lang.String, java.lang.Object) throws org.json.JSONException;
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_2
       5: ifnonnull     10
       8: aload_0
       9: areturn
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokevirtual #38                 // Method put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
      16: areturn

  public org.json.JSONObject accumulate(java.lang.String, java.lang.Object) throws org.json.JSONException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field nameValuePairs:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: invokevirtual #29                 // Method checkName:(Ljava/lang/String;)Ljava/lang/String;
       9: invokeinterface #39,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_3
      15: aload_3
      16: ifnonnull     26
      19: aload_0
      20: aload_1
      21: aload_2
      22: invokevirtual #38                 // Method put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
      25: areturn
      26: aload_2
      27: instanceof    #36                 // class java/lang/Number
      30: ifeq          44
      33: aload_2
      34: checkcast     #36                 // class java/lang/Number
      37: invokevirtual #37                 // Method java/lang/Number.doubleValue:()D
      40: invokestatic  #31                 // Method org/json/JSON.checkDouble:(D)D
      43: pop2
      44: aload_3
      45: instanceof    #40                 // class org/json/JSONArray
      48: ifeq          67
      51: aload_3
      52: checkcast     #40                 // class org/json/JSONArray
      55: astore        4
      57: aload         4
      59: aload_2
      60: invokevirtual #41                 // Method org/json/JSONArray.put:(Ljava/lang/Object;)Lorg/json/JSONArray;
      63: pop
      64: goto          103
      67: new           #40                 // class org/json/JSONArray
      70: dup
      71: invokespecial #42                 // Method org/json/JSONArray."<init>":()V
      74: astore        4
      76: aload         4
      78: aload_3
      79: invokevirtual #41                 // Method org/json/JSONArray.put:(Ljava/lang/Object;)Lorg/json/JSONArray;
      82: pop
      83: aload         4
      85: aload_2
      86: invokevirtual #41                 // Method org/json/JSONArray.put:(Ljava/lang/Object;)Lorg/json/JSONArray;
      89: pop
      90: aload_0
      91: getfield      #5                  // Field nameValuePairs:Ljava/util/Map;
      94: aload_1
      95: aload         4
      97: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     102: pop
     103: aload_0
     104: areturn

  java.lang.String checkName(java.lang.String) throws org.json.JSONException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #43                 // class org/json/JSONException
       7: dup
       8: ldc           #44                 // String Names must be non-null
      10: invokespecial #45                 // Method org/json/JSONException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: areturn

  public java.lang.Object remove(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field nameValuePairs:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #35,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public boolean isNull(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field nameValuePairs:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_2
      11: aload_2
      12: ifnull        22
      15: aload_2
      16: getstatic     #46                 // Field NULL:Ljava/lang/Object;
      19: if_acmpne     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean has(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field nameValuePairs:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #47,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public java.lang.Object get(java.lang.String) throws org.json.JSONException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field nameValuePairs:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_2
      11: aload_2
      12: ifnonnull     42
      15: new           #43                 // class org/json/JSONException
      18: dup
      19: new           #48                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #50                 // String No value for
      28: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #45                 // Method org/json/JSONException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_2
      43: areturn

  public java.lang.Object opt(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field nameValuePairs:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public boolean getBoolean(java.lang.String) throws org.json.JSONException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method get:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: invokestatic  #54                 // Method org/json/JSON.toBoolean:(Ljava/lang/Object;)Ljava/lang/Boolean;
      10: astore_3
      11: aload_3
      12: ifnonnull     23
      15: aload_1
      16: aload_2
      17: ldc           #55                 // String boolean
      19: invokestatic  #56                 // Method org/json/JSON.typeMismatch:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lorg/json/JSONException;
      22: athrow
      23: aload_3
      24: invokevirtual #57                 // Method java/lang/Boolean.booleanValue:()Z
      27: ireturn

  public boolean optBoolean(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #58                 // Method optBoolean:(Ljava/lang/String;Z)Z
       6: ireturn

  public boolean optBoolean(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method opt:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_3
       6: aload_3
       7: invokestatic  #54                 // Method org/json/JSON.toBoolean:(Ljava/lang/Object;)Ljava/lang/Boolean;
      10: astore        4
      12: aload         4
      14: ifnull        25
      17: aload         4
      19: invokevirtual #57                 // Method java/lang/Boolean.booleanValue:()Z
      22: goto          26
      25: iload_2
      26: ireturn

  public double getDouble(java.lang.String) throws org.json.JSONException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method get:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: invokestatic  #59                 // Method org/json/JSON.toDouble:(Ljava/lang/Object;)Ljava/lang/Double;
      10: astore_3
      11: aload_3
      12: ifnonnull     23
      15: aload_1
      16: aload_2
      17: ldc           #60                 // String double
      19: invokestatic  #56                 // Method org/json/JSON.typeMismatch:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lorg/json/JSONException;
      22: athrow
      23: aload_3
      24: invokevirtual #61                 // Method java/lang/Double.doubleValue:()D
      27: dreturn

  public double optDouble(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #62                 // double NaNd
       5: invokevirtual #64                 // Method optDouble:(Ljava/lang/String;D)D
       8: dreturn

  public double optDouble(java.lang.String, double);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method opt:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore        4
       7: aload         4
       9: invokestatic  #59                 // Method org/json/JSON.toDouble:(Ljava/lang/Object;)Ljava/lang/Double;
      12: astore        5
      14: aload         5
      16: ifnull        27
      19: aload         5
      21: invokevirtual #61                 // Method java/lang/Double.doubleValue:()D
      24: goto          28
      27: dload_2
      28: dreturn

  public int getInt(java.lang.String) throws org.json.JSONException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method get:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: invokestatic  #65                 // Method org/json/JSON.toInteger:(Ljava/lang/Object;)Ljava/lang/Integer;
      10: astore_3
      11: aload_3
      12: ifnonnull     23
      15: aload_1
      16: aload_2
      17: ldc           #66                 // String int
      19: invokestatic  #56                 // Method org/json/JSON.typeMismatch:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lorg/json/JSONException;
      22: athrow
      23: aload_3
      24: invokevirtual #67                 // Method java/lang/Integer.intValue:()I
      27: ireturn

  public int optInt(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #68                 // Method optInt:(Ljava/lang/String;I)I
       6: ireturn

  public int optInt(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method opt:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_3
       6: aload_3
       7: invokestatic  #65                 // Method org/json/JSON.toInteger:(Ljava/lang/Object;)Ljava/lang/Integer;
      10: astore        4
      12: aload         4
      14: ifnull        25
      17: aload         4
      19: invokevirtual #67                 // Method java/lang/Integer.intValue:()I
      22: goto          26
      25: iload_2
      26: ireturn

  public long getLong(java.lang.String) throws org.json.JSONException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method get:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: invokestatic  #69                 // Method org/json/JSON.toLong:(Ljava/lang/Object;)Ljava/lang/Long;
      10: astore_3
      11: aload_3
      12: ifnonnull     23
      15: aload_1
      16: aload_2
      17: ldc           #70                 // String long
      19: invokestatic  #56                 // Method org/json/JSON.typeMismatch:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lorg/json/JSONException;
      22: athrow
      23: aload_3
      24: invokevirtual #71                 // Method java/lang/Long.longValue:()J
      27: lreturn

  public long optLong(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: lconst_0
       3: invokevirtual #72                 // Method optLong:(Ljava/lang/String;J)J
       6: lreturn

  public long optLong(java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method opt:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore        4
       7: aload         4
       9: invokestatic  #69                 // Method org/json/JSON.toLong:(Ljava/lang/Object;)Ljava/lang/Long;
      12: astore        5
      14: aload         5
      16: ifnull        27
      19: aload         5
      21: invokevirtual #71                 // Method java/lang/Long.longValue:()J
      24: goto          28
      27: lload_2
      28: lreturn

  public java.lang.String getString(java.lang.String) throws org.json.JSONException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method get:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: invokestatic  #73                 // Method org/json/JSON.toString:(Ljava/lang/Object;)Ljava/lang/String;
      10: astore_3
      11: aload_3
      12: ifnonnull     23
      15: aload_1
      16: aload_2
      17: ldc           #74                 // String String
      19: invokestatic  #56                 // Method org/json/JSON.typeMismatch:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lorg/json/JSONException;
      22: athrow
      23: aload_3
      24: areturn

  public java.lang.String optString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #75                 // String
       4: invokevirtual #76                 // Method optString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String optString(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method opt:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_3
       6: aload_3
       7: invokestatic  #73                 // Method org/json/JSON.toString:(Ljava/lang/Object;)Ljava/lang/String;
      10: astore        4
      12: aload         4
      14: ifnull        22
      17: aload         4
      19: goto          23
      22: aload_2
      23: areturn

  public org.json.JSONArray getJSONArray(java.lang.String) throws org.json.JSONException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method get:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: instanceof    #40                 // class org/json/JSONArray
      10: ifeq          18
      13: aload_2
      14: checkcast     #40                 // class org/json/JSONArray
      17: areturn
      18: aload_1
      19: aload_2
      20: ldc           #77                 // String JSONArray
      22: invokestatic  #56                 // Method org/json/JSON.typeMismatch:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lorg/json/JSONException;
      25: athrow

  public org.json.JSONArray optJSONArray(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method opt:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: instanceof    #40                 // class org/json/JSONArray
      10: ifeq          20
      13: aload_2
      14: checkcast     #40                 // class org/json/JSONArray
      17: goto          21
      20: aconst_null
      21: areturn

  public org.json.JSONObject getJSONObject(java.lang.String) throws org.json.JSONException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method get:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: instanceof    #21                 // class org/json/JSONObject
      10: ifeq          18
      13: aload_2
      14: checkcast     #21                 // class org/json/JSONObject
      17: areturn
      18: aload_1
      19: aload_2
      20: ldc           #22                 // String JSONObject
      22: invokestatic  #56                 // Method org/json/JSON.typeMismatch:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lorg/json/JSONException;
      25: athrow

  public org.json.JSONObject optJSONObject(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method opt:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: instanceof    #21                 // class org/json/JSONObject
      10: ifeq          20
      13: aload_2
      14: checkcast     #21                 // class org/json/JSONObject
      17: goto          21
      20: aconst_null
      21: areturn

  public org.json.JSONArray toJSONArray(org.json.JSONArray) throws org.json.JSONException;
    Code:
       0: new           #40                 // class org/json/JSONArray
       3: dup
       4: invokespecial #42                 // Method org/json/JSONArray."<init>":()V
       7: astore_2
       8: aload_1
       9: ifnonnull     14
      12: aconst_null
      13: areturn
      14: aload_1
      15: invokevirtual #78                 // Method org/json/JSONArray.length:()I
      18: istore_3
      19: iload_3
      20: ifne          25
      23: aconst_null
      24: areturn
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     62
      34: aload_1
      35: iload         4
      37: invokevirtual #79                 // Method org/json/JSONArray.opt:(I)Ljava/lang/Object;
      40: invokestatic  #73                 // Method org/json/JSON.toString:(Ljava/lang/Object;)Ljava/lang/String;
      43: astore        5
      45: aload_2
      46: aload_0
      47: aload         5
      49: invokevirtual #27                 // Method opt:(Ljava/lang/String;)Ljava/lang/Object;
      52: invokevirtual #41                 // Method org/json/JSONArray.put:(Ljava/lang/Object;)Lorg/json/JSONArray;
      55: pop
      56: iinc          4, 1
      59: goto          28
      62: aload_2
      63: areturn

  public java.util.Iterator keys();
    Code:
       0: aload_0
       1: getfield      #5                  // Field nameValuePairs:Ljava/util/Map;
       4: invokeinterface #80,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokeinterface #81,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: areturn

  public org.json.JSONArray names();
    Code:
       0: aload_0
       1: getfield      #5                  // Field nameValuePairs:Ljava/util/Map;
       4: invokeinterface #82,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ifeq          16
      12: aconst_null
      13: goto          39
      16: new           #40                 // class org/json/JSONArray
      19: dup
      20: new           #83                 // class java/util/ArrayList
      23: dup
      24: aload_0
      25: getfield      #5                  // Field nameValuePairs:Ljava/util/Map;
      28: invokeinterface #80,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      33: invokespecial #84                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      36: invokespecial #85                 // Method org/json/JSONArray."<init>":(Ljava/util/Collection;)V
      39: areturn

  public java.lang.String toString();
    Code:
       0: new           #86                 // class org/json/JSONStringer
       3: dup
       4: invokespecial #87                 // Method org/json/JSONStringer."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #88                 // Method writeTo:(Lorg/json/JSONStringer;)V
      13: aload_1
      14: invokevirtual #89                 // Method org/json/JSONStringer.toString:()Ljava/lang/String;
      17: areturn
      18: astore_1
      19: aconst_null
      20: areturn
    Exception table:
       from    to  target type
           0    17    18   Class org/json/JSONException

  public java.lang.String toString(int) throws org.json.JSONException;
    Code:
       0: new           #86                 // class org/json/JSONStringer
       3: dup
       4: iload_1
       5: invokespecial #90                 // Method org/json/JSONStringer."<init>":(I)V
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokevirtual #88                 // Method writeTo:(Lorg/json/JSONStringer;)V
      14: aload_2
      15: invokevirtual #89                 // Method org/json/JSONStringer.toString:()Ljava/lang/String;
      18: areturn

  void writeTo(org.json.JSONStringer) throws org.json.JSONException;
    Code:
       0: aload_1
       1: invokevirtual #91                 // Method org/json/JSONStringer.object:()Lorg/json/JSONStringer;
       4: pop
       5: aload_0
       6: getfield      #5                  // Field nameValuePairs:Ljava/util/Map;
       9: invokeinterface #7,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          65
      29: aload_2
      30: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #11                 // class java/util/Map$Entry
      38: astore_3
      39: aload_1
      40: aload_3
      41: invokeinterface #12,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      46: checkcast     #13                 // class java/lang/String
      49: invokevirtual #92                 // Method org/json/JSONStringer.key:(Ljava/lang/String;)Lorg/json/JSONStringer;
      52: aload_3
      53: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      58: invokevirtual #93                 // Method org/json/JSONStringer.value:(Ljava/lang/Object;)Lorg/json/JSONStringer;
      61: pop
      62: goto          20
      65: aload_1
      66: invokevirtual #94                 // Method org/json/JSONStringer.endObject:()Lorg/json/JSONStringer;
      69: pop
      70: return

  public static java.lang.String numberToString(java.lang.Number) throws org.json.JSONException;
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #43                 // class org/json/JSONException
       7: dup
       8: ldc           #95                 // String Number must be non-null
      10: invokespecial #45                 // Method org/json/JSONException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #37                 // Method java/lang/Number.doubleValue:()D
      18: dstore_1
      19: dload_1
      20: invokestatic  #31                 // Method org/json/JSON.checkDouble:(D)D
      23: pop2
      24: aload_0
      25: getstatic     #96                 // Field NEGATIVE_ZERO:Ljava/lang/Double;
      28: invokevirtual #97                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      31: ifeq          37
      34: ldc           #98                 // String -0
      36: areturn
      37: aload_0
      38: invokevirtual #99                 // Method java/lang/Number.longValue:()J
      41: lstore_3
      42: dload_1
      43: lload_3
      44: l2d
      45: dcmpl
      46: ifne          54
      49: lload_3
      50: invokestatic  #100                // Method java/lang/Long.toString:(J)Ljava/lang/String;
      53: areturn
      54: aload_0
      55: invokevirtual #101                // Method java/lang/Object.toString:()Ljava/lang/String;
      58: areturn

  public static java.lang.String quote(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     7
       4: ldc           #102                // String \"\"
       6: areturn
       7: new           #86                 // class org/json/JSONStringer
      10: dup
      11: invokespecial #87                 // Method org/json/JSONStringer."<init>":()V
      14: astore_1
      15: aload_1
      16: getstatic     #103                // Field org/json/JSONStringer$Scope.NULL:Lorg/json/JSONStringer$Scope;
      19: ldc           #75                 // String
      21: invokevirtual #104                // Method org/json/JSONStringer.open:(Lorg/json/JSONStringer$Scope;Ljava/lang/String;)Lorg/json/JSONStringer;
      24: pop
      25: aload_1
      26: aload_0
      27: invokevirtual #93                 // Method org/json/JSONStringer.value:(Ljava/lang/Object;)Lorg/json/JSONStringer;
      30: pop
      31: aload_1
      32: getstatic     #103                // Field org/json/JSONStringer$Scope.NULL:Lorg/json/JSONStringer$Scope;
      35: getstatic     #103                // Field org/json/JSONStringer$Scope.NULL:Lorg/json/JSONStringer$Scope;
      38: ldc           #75                 // String
      40: invokevirtual #105                // Method org/json/JSONStringer.close:(Lorg/json/JSONStringer$Scope;Lorg/json/JSONStringer$Scope;Ljava/lang/String;)Lorg/json/JSONStringer;
      43: pop
      44: aload_1
      45: invokevirtual #89                 // Method org/json/JSONStringer.toString:()Ljava/lang/String;
      48: areturn
      49: astore_1
      50: new           #106                // class java/lang/AssertionError
      53: dup
      54: invokespecial #107                // Method java/lang/AssertionError."<init>":()V
      57: athrow
    Exception table:
       from    to  target type
           7    48    49   Class org/json/JSONException

  public static java.lang.Object wrap(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: getstatic     #46                 // Field NULL:Ljava/lang/Object;
       7: areturn
       8: aload_0
       9: instanceof    #40                 // class org/json/JSONArray
      12: ifne          22
      15: aload_0
      16: instanceof    #21                 // class org/json/JSONObject
      19: ifeq          24
      22: aload_0
      23: areturn
      24: aload_0
      25: getstatic     #46                 // Field NULL:Ljava/lang/Object;
      28: invokevirtual #97                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      31: ifeq          36
      34: aload_0
      35: areturn
      36: aload_0
      37: instanceof    #108                // class java/util/Collection
      40: ifeq          55
      43: new           #40                 // class org/json/JSONArray
      46: dup
      47: aload_0
      48: checkcast     #108                // class java/util/Collection
      51: invokespecial #85                 // Method org/json/JSONArray."<init>":(Ljava/util/Collection;)V
      54: areturn
      55: aload_0
      56: invokevirtual #109                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      59: invokevirtual #110                // Method java/lang/Class.isArray:()Z
      62: ifeq          74
      65: new           #40                 // class org/json/JSONArray
      68: dup
      69: aload_0
      70: invokespecial #111                // Method org/json/JSONArray."<init>":(Ljava/lang/Object;)V
      73: areturn
      74: aload_0
      75: instanceof    #112                // class java/util/Map
      78: ifeq          93
      81: new           #21                 // class org/json/JSONObject
      84: dup
      85: aload_0
      86: checkcast     #112                // class java/util/Map
      89: invokespecial #113                // Method "<init>":(Ljava/util/Map;)V
      92: areturn
      93: aload_0
      94: instanceof    #114                // class java/lang/Boolean
      97: ifne          156
     100: aload_0
     101: instanceof    #115                // class java/lang/Byte
     104: ifne          156
     107: aload_0
     108: instanceof    #116                // class java/lang/Character
     111: ifne          156
     114: aload_0
     115: instanceof    #117                // class java/lang/Double
     118: ifne          156
     121: aload_0
     122: instanceof    #118                // class java/lang/Float
     125: ifne          156
     128: aload_0
     129: instanceof    #119                // class java/lang/Integer
     132: ifne          156
     135: aload_0
     136: instanceof    #120                // class java/lang/Long
     139: ifne          156
     142: aload_0
     143: instanceof    #121                // class java/lang/Short
     146: ifne          156
     149: aload_0
     150: instanceof    #13                 // class java/lang/String
     153: ifeq          158
     156: aload_0
     157: areturn
     158: aload_0
     159: invokevirtual #109                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     162: invokevirtual #122                // Method java/lang/Class.getPackage:()Ljava/lang/Package;
     165: invokevirtual #123                // Method java/lang/Package.getName:()Ljava/lang/String;
     168: ldc           #124                // String java.
     170: invokevirtual #125                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     173: ifeq          181
     176: aload_0
     177: invokevirtual #101                // Method java/lang/Object.toString:()Ljava/lang/String;
     180: areturn
     181: goto          185
     184: astore_1
     185: aconst_null
     186: areturn
    Exception table:
       from    to  target type
          36    54   184   Class java/lang/Exception
          55    73   184   Class java/lang/Exception
          74    92   184   Class java/lang/Exception
          93   157   184   Class java/lang/Exception
         158   180   184   Class java/lang/Exception

  static {};
    Code:
       0: ldc2_w        #127                // double -0.0d
       3: invokestatic  #32                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       6: putstatic     #96                 // Field NEGATIVE_ZERO:Ljava/lang/Double;
       9: new           #129                // class org/json/JSONObject$1
      12: dup
      13: invokespecial #130                // Method org/json/JSONObject$1."<init>":()V
      16: putstatic     #46                 // Field NULL:Ljava/lang/Object;
      19: return
}
