Compiled from "CombinableMatcher.java"
public class org.hamcrest.core.CombinableMatcher<T> extends org.hamcrest.TypeSafeDiagnosingMatcher<T> {
  private final org.hamcrest.Matcher<? super T> matcher;

  public org.hamcrest.core.CombinableMatcher(org.hamcrest.Matcher<? super T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hamcrest/TypeSafeDiagnosingMatcher."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field matcher:Lorg/hamcrest/Matcher;
       9: return

  protected boolean matchesSafely(T, org.hamcrest.Description);
    Code:
       0: aload_0
       1: getfield      #2                  // Field matcher:Lorg/hamcrest/Matcher;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod org/hamcrest/Matcher.matches:(Ljava/lang/Object;)Z
      10: ifne          26
      13: aload_0
      14: getfield      #2                  // Field matcher:Lorg/hamcrest/Matcher;
      17: aload_1
      18: aload_2
      19: invokeinterface #4,  3            // InterfaceMethod org/hamcrest/Matcher.describeMismatch:(Ljava/lang/Object;Lorg/hamcrest/Description;)V
      24: iconst_0
      25: ireturn
      26: iconst_1
      27: ireturn

  public void describeTo(org.hamcrest.Description);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field matcher:Lorg/hamcrest/Matcher;
       5: invokeinterface #5,  2            // InterfaceMethod org/hamcrest/Description.appendDescriptionOf:(Lorg/hamcrest/SelfDescribing;)Lorg/hamcrest/Description;
      10: pop
      11: return

  public org.hamcrest.core.CombinableMatcher<T> and(org.hamcrest.Matcher<? super T>);
    Code:
       0: new           #6                  // class org/hamcrest/core/CombinableMatcher
       3: dup
       4: new           #7                  // class org/hamcrest/core/AllOf
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #8                  // Method templatedListWith:(Lorg/hamcrest/Matcher;)Ljava/util/ArrayList;
      13: invokespecial #9                  // Method org/hamcrest/core/AllOf."<init>":(Ljava/lang/Iterable;)V
      16: invokespecial #10                 // Method "<init>":(Lorg/hamcrest/Matcher;)V
      19: areturn

  public org.hamcrest.core.CombinableMatcher<T> or(org.hamcrest.Matcher<? super T>);
    Code:
       0: new           #6                  // class org/hamcrest/core/CombinableMatcher
       3: dup
       4: new           #11                 // class org/hamcrest/core/AnyOf
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #8                  // Method templatedListWith:(Lorg/hamcrest/Matcher;)Ljava/util/ArrayList;
      13: invokespecial #12                 // Method org/hamcrest/core/AnyOf."<init>":(Ljava/lang/Iterable;)V
      16: invokespecial #10                 // Method "<init>":(Lorg/hamcrest/Matcher;)V
      19: areturn

  private java.util.ArrayList<org.hamcrest.Matcher<? super T>> templatedListWith(org.hamcrest.Matcher<? super T>);
    Code:
       0: new           #13                 // class java/util/ArrayList
       3: dup
       4: invokespecial #14                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: getfield      #2                  // Field matcher:Lorg/hamcrest/Matcher;
      13: invokevirtual #15                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_2
      18: aload_1
      19: invokevirtual #15                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      22: pop
      23: aload_2
      24: areturn

  public static <LHS> org.hamcrest.core.CombinableMatcher$CombinableBothMatcher<LHS> both(org.hamcrest.Matcher<? super LHS>);
    Code:
       0: new           #16                 // class org/hamcrest/core/CombinableMatcher$CombinableBothMatcher
       3: dup
       4: aload_0
       5: invokespecial #17                 // Method org/hamcrest/core/CombinableMatcher$CombinableBothMatcher."<init>":(Lorg/hamcrest/Matcher;)V
       8: areturn

  public static <LHS> org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher<LHS> either(org.hamcrest.Matcher<? super LHS>);
    Code:
       0: new           #18                 // class org/hamcrest/core/CombinableMatcher$CombinableEitherMatcher
       3: dup
       4: aload_0
       5: invokespecial #19                 // Method org/hamcrest/core/CombinableMatcher$CombinableEitherMatcher."<init>":(Lorg/hamcrest/Matcher;)V
       8: areturn
}
