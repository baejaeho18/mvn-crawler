Compiled from "IsCompatibleType.java"
public class org.hamcrest.object.IsCompatibleType<T> extends org.hamcrest.TypeSafeMatcher<java.lang.Class<?>> {
  private final java.lang.Class<T> type;

  public org.hamcrest.object.IsCompatibleType(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hamcrest/TypeSafeMatcher."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field type:Ljava/lang/Class;
       9: return

  public boolean matchesSafely(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field type:Ljava/lang/Class;
       4: aload_1
       5: invokevirtual #3                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ireturn

  public void describeMismatchSafely(java.lang.Class<?>, org.hamcrest.Description);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #4                  // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokeinterface #5,  2            // InterfaceMethod org/hamcrest/Description.appendValue:(Ljava/lang/Object;)Lorg/hamcrest/Description;
      10: pop
      11: return

  public void describeTo(org.hamcrest.Description);
    Code:
       0: aload_1
       1: ldc           #6                  // String type <
       3: invokeinterface #7,  2            // InterfaceMethod org/hamcrest/Description.appendText:(Ljava/lang/String;)Lorg/hamcrest/Description;
       8: aload_0
       9: getfield      #2                  // Field type:Ljava/lang/Class;
      12: invokevirtual #4                  // Method java/lang/Class.getName:()Ljava/lang/String;
      15: invokeinterface #7,  2            // InterfaceMethod org/hamcrest/Description.appendText:(Ljava/lang/String;)Lorg/hamcrest/Description;
      20: pop
      21: return

  public static <T> org.hamcrest.Matcher<java.lang.Class<?>> typeCompatibleWith(java.lang.Class<T>);
    Code:
       0: new           #8                  // class org/hamcrest/object/IsCompatibleType
       3: dup
       4: aload_0
       5: invokespecial #9                  // Method "<init>":(Ljava/lang/Class;)V
       8: areturn

  public void describeMismatchSafely(java.lang.Object, org.hamcrest.Description);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #10                 // class java/lang/Class
       5: aload_2
       6: invokevirtual #11                 // Method describeMismatchSafely:(Ljava/lang/Class;Lorg/hamcrest/Description;)V
       9: return

  public boolean matchesSafely(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #10                 // class java/lang/Class
       5: invokevirtual #12                 // Method matchesSafely:(Ljava/lang/Class;)Z
       8: ireturn
}
