Compiled from "BigDecimalCloseTo.java"
public class org.hamcrest.number.BigDecimalCloseTo extends org.hamcrest.TypeSafeMatcher<java.math.BigDecimal> {
  private final java.math.BigDecimal delta;

  private final java.math.BigDecimal value;

  public org.hamcrest.number.BigDecimalCloseTo(java.math.BigDecimal, java.math.BigDecimal);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hamcrest/TypeSafeMatcher."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field delta:Ljava/math/BigDecimal;
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field value:Ljava/math/BigDecimal;
      14: return

  public boolean matchesSafely(java.math.BigDecimal);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method actualDelta:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
       5: getstatic     #5                  // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;
       8: invokevirtual #6                  // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
      11: ifgt          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public void describeMismatchSafely(java.math.BigDecimal, org.hamcrest.Description);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #7,  2            // InterfaceMethod org/hamcrest/Description.appendValue:(Ljava/lang/Object;)Lorg/hamcrest/Description;
       7: ldc           #8                  // String  differed by
       9: invokeinterface #9,  2            // InterfaceMethod org/hamcrest/Description.appendText:(Ljava/lang/String;)Lorg/hamcrest/Description;
      14: aload_0
      15: aload_1
      16: invokespecial #4                  // Method actualDelta:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
      19: invokeinterface #7,  2            // InterfaceMethod org/hamcrest/Description.appendValue:(Ljava/lang/Object;)Lorg/hamcrest/Description;
      24: pop
      25: return

  public void describeTo(org.hamcrest.Description);
    Code:
       0: aload_1
       1: ldc           #10                 // String a numeric value within
       3: invokeinterface #9,  2            // InterfaceMethod org/hamcrest/Description.appendText:(Ljava/lang/String;)Lorg/hamcrest/Description;
       8: aload_0
       9: getfield      #2                  // Field delta:Ljava/math/BigDecimal;
      12: invokeinterface #7,  2            // InterfaceMethod org/hamcrest/Description.appendValue:(Ljava/lang/Object;)Lorg/hamcrest/Description;
      17: ldc           #11                 // String  of
      19: invokeinterface #9,  2            // InterfaceMethod org/hamcrest/Description.appendText:(Ljava/lang/String;)Lorg/hamcrest/Description;
      24: aload_0
      25: getfield      #3                  // Field value:Ljava/math/BigDecimal;
      28: invokeinterface #7,  2            // InterfaceMethod org/hamcrest/Description.appendValue:(Ljava/lang/Object;)Lorg/hamcrest/Description;
      33: pop
      34: return

  private java.math.BigDecimal actualDelta(java.math.BigDecimal);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field value:Ljava/math/BigDecimal;
       5: getstatic     #12                 // Field java/math/MathContext.DECIMAL128:Ljava/math/MathContext;
       8: invokevirtual #13                 // Method java/math/BigDecimal.subtract:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
      11: invokevirtual #14                 // Method java/math/BigDecimal.abs:()Ljava/math/BigDecimal;
      14: aload_0
      15: getfield      #2                  // Field delta:Ljava/math/BigDecimal;
      18: getstatic     #12                 // Field java/math/MathContext.DECIMAL128:Ljava/math/MathContext;
      21: invokevirtual #13                 // Method java/math/BigDecimal.subtract:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
      24: invokevirtual #15                 // Method java/math/BigDecimal.stripTrailingZeros:()Ljava/math/BigDecimal;
      27: areturn

  public static org.hamcrest.Matcher<java.math.BigDecimal> closeTo(java.math.BigDecimal, java.math.BigDecimal);
    Code:
       0: new           #16                 // class org/hamcrest/number/BigDecimalCloseTo
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #17                 // Method "<init>":(Ljava/math/BigDecimal;Ljava/math/BigDecimal;)V
       9: areturn

  public void describeMismatchSafely(java.lang.Object, org.hamcrest.Description);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #18                 // class java/math/BigDecimal
       5: aload_2
       6: invokevirtual #19                 // Method describeMismatchSafely:(Ljava/math/BigDecimal;Lorg/hamcrest/Description;)V
       9: return

  public boolean matchesSafely(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #18                 // class java/math/BigDecimal
       5: invokevirtual #20                 // Method matchesSafely:(Ljava/math/BigDecimal;)Z
       8: ireturn
}
