Compiled from "SourceLocation.java"
public class org.aspectj.bridge.SourceLocation implements org.aspectj.bridge.ISourceLocation {
  private static final long serialVersionUID;

  private transient int cachedHashcode;

  public static final org.aspectj.bridge.ISourceLocation UNKNOWN;

  private final java.io.File sourceFile;

  private final int startLine;

  private final int column;

  private final int endLine;

  private int offset;

  private final java.lang.String context;

  private boolean noColumn;

  private java.lang.String sourceFileName;

  public static final void validLine(int);
    Code:
       0: iload_0
       1: ifge          31
       4: new           #1                  // class java/lang/IllegalArgumentException
       7: dup
       8: new           #2                  // class java/lang/StringBuilder
      11: dup
      12: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #4                  // String negative line:
      17: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_0
      21: invokevirtual #6                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: iload_0
      32: ldc           #10                 // int 1073741823
      34: if_icmple     64
      37: new           #1                  // class java/lang/IllegalArgumentException
      40: dup
      41: new           #2                  // class java/lang/StringBuilder
      44: dup
      45: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #11                 // String line too large:
      50: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: iload_0
      54: invokevirtual #6                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      57: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: return

  public static final void validColumn(int);
    Code:
       0: iload_0
       1: ifge          31
       4: new           #1                  // class java/lang/IllegalArgumentException
       7: dup
       8: new           #2                  // class java/lang/StringBuilder
      11: dup
      12: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #12                 // String negative column:
      17: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_0
      21: invokevirtual #6                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: iload_0
      32: ldc           #10                 // int 1073741823
      34: if_icmple     64
      37: new           #1                  // class java/lang/IllegalArgumentException
      40: dup
      41: new           #2                  // class java/lang/StringBuilder
      44: dup
      45: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #13                 // String column too large:
      50: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: iload_0
      54: invokevirtual #6                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      57: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: return

  public org.aspectj.bridge.SourceLocation(java.io.File, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_2
       4: ldc           #14                 // int -2147483647
       6: invokespecial #15                 // Method "<init>":(Ljava/io/File;III)V
       9: return

  public org.aspectj.bridge.SourceLocation(java.io.File, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: ldc           #14                 // int -2147483647
       6: invokespecial #15                 // Method "<init>":(Ljava/io/File;III)V
       9: return

  public org.aspectj.bridge.SourceLocation(java.io.File, int, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: aconst_null
       7: checkcast     #16                 // class java/lang/String
      10: invokespecial #17                 // Method "<init>":(Ljava/io/File;IIILjava/lang/String;)V
      13: return

  public org.aspectj.bridge.SourceLocation(java.io.File, int, int, int, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #19                 // Field cachedHashcode:I
       9: iload         4
      11: ldc           #14                 // int -2147483647
      13: if_icmpne     24
      16: iconst_0
      17: istore        4
      19: aload_0
      20: iconst_1
      21: putfield      #20                 // Field noColumn:Z
      24: aconst_null
      25: aload_1
      26: if_acmpne     33
      29: getstatic     #21                 // Field org/aspectj/bridge/ISourceLocation.NO_FILE:Ljava/io/File;
      32: astore_1
      33: iload_2
      34: invokestatic  #22                 // Method validLine:(I)V
      37: iload_3
      38: invokestatic  #22                 // Method validLine:(I)V
      41: iload_2
      42: iload_3
      43: if_icmpgt     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: new           #2                  // class java/lang/StringBuilder
      54: dup
      55: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      58: iload_2
      59: invokevirtual #6                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      62: ldc           #23                 // String  >
      64: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: iload_3
      68: invokevirtual #6                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      71: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokestatic  #24                 // Method org/aspectj/util/LangUtil.throwIaxIfFalse:(ZLjava/lang/String;)V
      77: iload         4
      79: iflt          86
      82: iconst_1
      83: goto          87
      86: iconst_0
      87: new           #2                  // class java/lang/StringBuilder
      90: dup
      91: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      94: ldc           #12                 // String negative column:
      96: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: iload         4
     101: invokevirtual #6                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     104: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: invokestatic  #24                 // Method org/aspectj/util/LangUtil.throwIaxIfFalse:(ZLjava/lang/String;)V
     110: aload_0
     111: aload_1
     112: putfield      #25                 // Field sourceFile:Ljava/io/File;
     115: aload_0
     116: iload_2
     117: putfield      #26                 // Field startLine:I
     120: aload_0
     121: iload         4
     123: putfield      #27                 // Field column:I
     126: aload_0
     127: iload_3
     128: putfield      #28                 // Field endLine:I
     131: aload_0
     132: aload         5
     134: putfield      #29                 // Field context:Ljava/lang/String;
     137: return

  public org.aspectj.bridge.SourceLocation(java.io.File, int, int, int, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: aload         5
       8: invokespecial #17                 // Method "<init>":(Ljava/io/File;IIILjava/lang/String;)V
      11: aload_0
      12: aload         6
      14: putfield      #30                 // Field sourceFileName:Ljava/lang/String;
      17: return

  public java.io.File getSourceFile();
    Code:
       0: aload_0
       1: getfield      #25                 // Field sourceFile:Ljava/io/File;
       4: areturn

  public int getLine();
    Code:
       0: aload_0
       1: getfield      #26                 // Field startLine:I
       4: ireturn

  public int getColumn();
    Code:
       0: aload_0
       1: getfield      #27                 // Field column:I
       4: ireturn

  public int getEndLine();
    Code:
       0: aload_0
       1: getfield      #28                 // Field endLine:I
       4: ireturn

  public java.lang.String getContext();
    Code:
       0: aload_0
       1: getfield      #29                 // Field context:Ljava/lang/String;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #31                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #32                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aconst_null
       9: aload_0
      10: getfield      #29                 // Field context:Ljava/lang/String;
      13: if_acmpeq     33
      16: aload_1
      17: aload_0
      18: getfield      #29                 // Field context:Ljava/lang/String;
      21: invokevirtual #33                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      24: pop
      25: aload_1
      26: getstatic     #34                 // Field org/aspectj/util/LangUtil.EOL:Ljava/lang/String;
      29: invokevirtual #33                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      32: pop
      33: aload_0
      34: getfield      #25                 // Field sourceFile:Ljava/io/File;
      37: getstatic     #21                 // Field org/aspectj/bridge/ISourceLocation.NO_FILE:Ljava/io/File;
      40: if_acmpeq     55
      43: aload_1
      44: aload_0
      45: getfield      #25                 // Field sourceFile:Ljava/io/File;
      48: invokevirtual #35                 // Method java/io/File.getPath:()Ljava/lang/String;
      51: invokevirtual #33                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      54: pop
      55: aload_0
      56: getfield      #26                 // Field startLine:I
      59: ifle          78
      62: aload_1
      63: ldc           #36                 // String :
      65: invokevirtual #33                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      68: pop
      69: aload_1
      70: aload_0
      71: getfield      #26                 // Field startLine:I
      74: invokevirtual #37                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      77: pop
      78: aload_0
      79: getfield      #20                 // Field noColumn:Z
      82: ifne          112
      85: aload_1
      86: new           #2                  // class java/lang/StringBuilder
      89: dup
      90: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #36                 // String :
      95: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: getfield      #27                 // Field column:I
     102: invokevirtual #6                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     105: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     108: invokevirtual #33                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     111: pop
     112: aload_0
     113: getfield      #38                 // Field offset:I
     116: iflt          146
     119: aload_1
     120: new           #2                  // class java/lang/StringBuilder
     123: dup
     124: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
     127: ldc           #39                 // String ::
     129: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload_0
     133: getfield      #38                 // Field offset:I
     136: invokevirtual #6                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     139: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     142: invokevirtual #33                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     145: pop
     146: aload_1
     147: invokevirtual #40                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     150: areturn

  public int getOffset();
    Code:
       0: aload_0
       1: getfield      #38                 // Field offset:I
       4: ireturn

  public void setOffset(int);
    Code:
       0: aload_0
       1: iconst_m1
       2: putfield      #19                 // Field cachedHashcode:I
       5: aload_0
       6: iload_1
       7: putfield      #38                 // Field offset:I
      10: return

  public java.lang.String getSourceFileName();
    Code:
       0: aload_0
       1: getfield      #30                 // Field sourceFileName:Ljava/lang/String;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #41                 // class org/aspectj/bridge/SourceLocation
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #41                 // class org/aspectj/bridge/SourceLocation
      13: astore_2
      14: aload_0
      15: getfield      #26                 // Field startLine:I
      18: aload_2
      19: getfield      #26                 // Field startLine:I
      22: if_icmpne     166
      25: aload_0
      26: getfield      #27                 // Field column:I
      29: aload_2
      30: getfield      #27                 // Field column:I
      33: if_icmpne     166
      36: aload_0
      37: getfield      #28                 // Field endLine:I
      40: aload_2
      41: getfield      #28                 // Field endLine:I
      44: if_icmpne     166
      47: aload_0
      48: getfield      #38                 // Field offset:I
      51: aload_2
      52: getfield      #38                 // Field offset:I
      55: if_icmpne     166
      58: aload_0
      59: getfield      #25                 // Field sourceFile:Ljava/io/File;
      62: ifnonnull     75
      65: aload_2
      66: getfield      #25                 // Field sourceFile:Ljava/io/File;
      69: ifnonnull     166
      72: goto          89
      75: aload_0
      76: getfield      #25                 // Field sourceFile:Ljava/io/File;
      79: aload_2
      80: getfield      #25                 // Field sourceFile:Ljava/io/File;
      83: invokevirtual #42                 // Method java/io/File.equals:(Ljava/lang/Object;)Z
      86: ifeq          166
      89: aload_0
      90: getfield      #29                 // Field context:Ljava/lang/String;
      93: ifnonnull     106
      96: aload_2
      97: getfield      #29                 // Field context:Ljava/lang/String;
     100: ifnonnull     166
     103: goto          120
     106: aload_0
     107: getfield      #29                 // Field context:Ljava/lang/String;
     110: aload_2
     111: getfield      #29                 // Field context:Ljava/lang/String;
     114: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     117: ifeq          166
     120: aload_0
     121: getfield      #20                 // Field noColumn:Z
     124: aload_2
     125: getfield      #20                 // Field noColumn:Z
     128: if_icmpne     166
     131: aload_0
     132: getfield      #30                 // Field sourceFileName:Ljava/lang/String;
     135: ifnonnull     148
     138: aload_2
     139: getfield      #30                 // Field sourceFileName:Ljava/lang/String;
     142: ifnonnull     166
     145: goto          162
     148: aload_0
     149: getfield      #30                 // Field sourceFileName:Ljava/lang/String;
     152: aload_2
     153: getfield      #30                 // Field sourceFileName:Ljava/lang/String;
     156: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     159: ifeq          166
     162: iconst_1
     163: goto          167
     166: iconst_0
     167: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #19                 // Field cachedHashcode:I
       4: iconst_m1
       5: if_icmpne     178
       8: aload_0
       9: aload_0
      10: getfield      #25                 // Field sourceFile:Ljava/io/File;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: getfield      #25                 // Field sourceFile:Ljava/io/File;
      24: invokevirtual #44                 // Method java/io/File.hashCode:()I
      27: putfield      #19                 // Field cachedHashcode:I
      30: aload_0
      31: aload_0
      32: getfield      #19                 // Field cachedHashcode:I
      35: bipush        37
      37: imul
      38: aload_0
      39: getfield      #26                 // Field startLine:I
      42: iadd
      43: putfield      #19                 // Field cachedHashcode:I
      46: aload_0
      47: aload_0
      48: getfield      #19                 // Field cachedHashcode:I
      51: bipush        37
      53: imul
      54: aload_0
      55: getfield      #27                 // Field column:I
      58: iadd
      59: putfield      #19                 // Field cachedHashcode:I
      62: aload_0
      63: aload_0
      64: getfield      #19                 // Field cachedHashcode:I
      67: bipush        37
      69: imul
      70: aload_0
      71: getfield      #28                 // Field endLine:I
      74: iadd
      75: putfield      #19                 // Field cachedHashcode:I
      78: aload_0
      79: aload_0
      80: getfield      #19                 // Field cachedHashcode:I
      83: bipush        37
      85: imul
      86: aload_0
      87: getfield      #38                 // Field offset:I
      90: iadd
      91: putfield      #19                 // Field cachedHashcode:I
      94: aload_0
      95: aload_0
      96: getfield      #19                 // Field cachedHashcode:I
      99: bipush        37
     101: imul
     102: aload_0
     103: getfield      #29                 // Field context:Ljava/lang/String;
     106: ifnonnull     113
     109: iconst_0
     110: goto          120
     113: aload_0
     114: getfield      #29                 // Field context:Ljava/lang/String;
     117: invokevirtual #45                 // Method java/lang/String.hashCode:()I
     120: iadd
     121: putfield      #19                 // Field cachedHashcode:I
     124: aload_0
     125: aload_0
     126: getfield      #19                 // Field cachedHashcode:I
     129: bipush        37
     131: imul
     132: aload_0
     133: getfield      #20                 // Field noColumn:Z
     136: ifeq          143
     139: iconst_0
     140: goto          144
     143: iconst_1
     144: iadd
     145: putfield      #19                 // Field cachedHashcode:I
     148: aload_0
     149: aload_0
     150: getfield      #19                 // Field cachedHashcode:I
     153: bipush        37
     155: imul
     156: aload_0
     157: getfield      #30                 // Field sourceFileName:Ljava/lang/String;
     160: ifnonnull     167
     163: iconst_0
     164: goto          174
     167: aload_0
     168: getfield      #30                 // Field sourceFileName:Ljava/lang/String;
     171: invokevirtual #45                 // Method java/lang/String.hashCode:()I
     174: iadd
     175: putfield      #19                 // Field cachedHashcode:I
     178: aload_0
     179: getfield      #19                 // Field cachedHashcode:I
     182: ireturn

  static {};
    Code:
       0: new           #41                 // class org/aspectj/bridge/SourceLocation
       3: dup
       4: getstatic     #21                 // Field org/aspectj/bridge/ISourceLocation.NO_FILE:Ljava/io/File;
       7: iconst_0
       8: iconst_0
       9: iconst_0
      10: invokespecial #15                 // Method "<init>":(Ljava/io/File;III)V
      13: putstatic     #46                 // Field UNKNOWN:Lorg/aspectj/bridge/ISourceLocation;
      16: return
}
