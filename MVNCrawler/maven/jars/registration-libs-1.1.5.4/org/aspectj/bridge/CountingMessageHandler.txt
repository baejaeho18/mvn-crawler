Compiled from "CountingMessageHandler.java"
public class org.aspectj.bridge.CountingMessageHandler implements org.aspectj.bridge.IMessageHandler {
  public final org.aspectj.bridge.IMessageHandler delegate;

  public final org.aspectj.bridge.CountingMessageHandler proxy;

  private final java.util.Hashtable<org.aspectj.bridge.IMessage$Kind, org.aspectj.bridge.CountingMessageHandler$IntHolder> counters;

  public static org.aspectj.bridge.CountingMessageHandler makeCountingMessageHandler(org.aspectj.bridge.IMessageHandler);
    Code:
       0: aload_0
       1: instanceof    #1                  // class org/aspectj/bridge/CountingMessageHandler
       4: ifeq          12
       7: aload_0
       8: checkcast     #1                  // class org/aspectj/bridge/CountingMessageHandler
      11: areturn
      12: new           #1                  // class org/aspectj/bridge/CountingMessageHandler
      15: dup
      16: aload_0
      17: invokespecial #2                  // Method "<init>":(Lorg/aspectj/bridge/IMessageHandler;)V
      20: areturn

  public org.aspectj.bridge.CountingMessageHandler(org.aspectj.bridge.IMessageHandler);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #4                  // String delegate
       7: invokestatic  #5                  // Method org/aspectj/util/LangUtil.throwIaxIfNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #6                  // Field delegate:Lorg/aspectj/bridge/IMessageHandler;
      15: aload_0
      16: new           #7                  // class java/util/Hashtable
      19: dup
      20: invokespecial #8                  // Method java/util/Hashtable."<init>":()V
      23: putfield      #9                  // Field counters:Ljava/util/Hashtable;
      26: aload_0
      27: aload_1
      28: instanceof    #1                  // class org/aspectj/bridge/CountingMessageHandler
      31: ifeq          41
      34: aload_1
      35: checkcast     #1                  // class org/aspectj/bridge/CountingMessageHandler
      38: goto          42
      41: aconst_null
      42: putfield      #10                 // Field proxy:Lorg/aspectj/bridge/CountingMessageHandler;
      45: return

  public boolean handleMessage(org.aspectj.bridge.IMessage) throws org.aspectj.bridge.AbortException;
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #10                 // Field proxy:Lorg/aspectj/bridge/CountingMessageHandler;
       5: if_acmpeq     17
       8: aload_0
       9: getfield      #10                 // Field proxy:Lorg/aspectj/bridge/CountingMessageHandler;
      12: aload_1
      13: invokevirtual #11                 // Method handleMessage:(Lorg/aspectj/bridge/IMessage;)Z
      16: ireturn
      17: aconst_null
      18: aload_1
      19: if_acmpeq     42
      22: aload_1
      23: invokeinterface #12,  1           // InterfaceMethod org/aspectj/bridge/IMessage.getKind:()Lorg/aspectj/bridge/IMessage$Kind;
      28: astore_2
      29: aload_0
      30: aload_2
      31: invokevirtual #13                 // Method isIgnoring:(Lorg/aspectj/bridge/IMessage$Kind;)Z
      34: ifne          42
      37: aload_0
      38: aload_2
      39: invokespecial #14                 // Method increment:(Lorg/aspectj/bridge/IMessage$Kind;)V
      42: aload_0
      43: getfield      #6                  // Field delegate:Lorg/aspectj/bridge/IMessageHandler;
      46: aload_1
      47: invokeinterface #15,  2           // InterfaceMethod org/aspectj/bridge/IMessageHandler.handleMessage:(Lorg/aspectj/bridge/IMessage;)Z
      52: ireturn

  public boolean isIgnoring(org.aspectj.bridge.IMessage$Kind);
    Code:
       0: aload_0
       1: getfield      #6                  // Field delegate:Lorg/aspectj/bridge/IMessageHandler;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod org/aspectj/bridge/IMessageHandler.isIgnoring:(Lorg/aspectj/bridge/IMessage$Kind;)Z
      10: ireturn

  public void dontIgnore(org.aspectj.bridge.IMessage$Kind);
    Code:
       0: aload_0
       1: getfield      #6                  // Field delegate:Lorg/aspectj/bridge/IMessageHandler;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod org/aspectj/bridge/IMessageHandler.dontIgnore:(Lorg/aspectj/bridge/IMessage$Kind;)V
      10: return

  public void ignore(org.aspectj.bridge.IMessage$Kind);
    Code:
       0: aload_0
       1: getfield      #6                  // Field delegate:Lorg/aspectj/bridge/IMessageHandler;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod org/aspectj/bridge/IMessageHandler.ignore:(Lorg/aspectj/bridge/IMessage$Kind;)V
      10: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #6                  // Field delegate:Lorg/aspectj/bridge/IMessageHandler;
       4: invokevirtual #19                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public int numMessages(org.aspectj.bridge.IMessage$Kind, boolean);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #10                 // Field proxy:Lorg/aspectj/bridge/CountingMessageHandler;
       5: if_acmpeq     18
       8: aload_0
       9: getfield      #10                 // Field proxy:Lorg/aspectj/bridge/CountingMessageHandler;
      12: aload_1
      13: iload_2
      14: invokevirtual #20                 // Method numMessages:(Lorg/aspectj/bridge/IMessage$Kind;Z)I
      17: ireturn
      18: iconst_0
      19: istore_3
      20: aconst_null
      21: aload_1
      22: if_acmpne     66
      25: aload_0
      26: getfield      #9                  // Field counters:Ljava/util/Hashtable;
      29: invokevirtual #21                 // Method java/util/Hashtable.elements:()Ljava/util/Enumeration;
      32: astore        4
      34: aload         4
      36: invokeinterface #22,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      41: ifeq          63
      44: iload_3
      45: aload         4
      47: invokeinterface #23,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      52: checkcast     #24                 // class org/aspectj/bridge/CountingMessageHandler$IntHolder
      55: getfield      #25                 // Field org/aspectj/bridge/CountingMessageHandler$IntHolder.count:I
      58: iadd
      59: istore_3
      60: goto          34
      63: goto          132
      66: iload_2
      67: ifne          79
      70: aload_0
      71: aload_1
      72: invokespecial #26                 // Method numMessages:(Lorg/aspectj/bridge/IMessage$Kind;)I
      75: istore_3
      76: goto          132
      79: getstatic     #27                 // Field org/aspectj/bridge/IMessage.KINDS:Ljava/util/List;
      82: invokeinterface #28,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      87: astore        4
      89: aload         4
      91: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      96: ifeq          132
      99: aload         4
     101: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     106: checkcast     #31                 // class org/aspectj/bridge/IMessage$Kind
     109: astore        5
     111: aload_1
     112: aload         5
     114: invokevirtual #32                 // Method org/aspectj/bridge/IMessage$Kind.isSameOrLessThan:(Lorg/aspectj/bridge/IMessage$Kind;)Z
     117: ifeq          129
     120: iload_3
     121: aload_0
     122: aload         5
     124: invokespecial #26                 // Method numMessages:(Lorg/aspectj/bridge/IMessage$Kind;)I
     127: iadd
     128: istore_3
     129: goto          89
     132: iload_3
     133: ireturn

  public boolean hasErrors();
    Code:
       0: iconst_0
       1: aload_0
       2: getstatic     #33                 // Field org/aspectj/bridge/IMessage.ERROR:Lorg/aspectj/bridge/IMessage$Kind;
       5: iconst_1
       6: invokevirtual #20                 // Method numMessages:(Lorg/aspectj/bridge/IMessage$Kind;Z)I
       9: if_icmpge     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private int numMessages(org.aspectj.bridge.IMessage$Kind);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #10                 // Field proxy:Lorg/aspectj/bridge/CountingMessageHandler;
       5: if_acmpeq     17
       8: aload_0
       9: getfield      #10                 // Field proxy:Lorg/aspectj/bridge/CountingMessageHandler;
      12: aload_1
      13: invokespecial #26                 // Method numMessages:(Lorg/aspectj/bridge/IMessage$Kind;)I
      16: ireturn
      17: aload_0
      18: getfield      #9                  // Field counters:Ljava/util/Hashtable;
      21: aload_1
      22: invokevirtual #34                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #24                 // class org/aspectj/bridge/CountingMessageHandler$IntHolder
      28: astore_2
      29: aconst_null
      30: aload_2
      31: if_acmpne     38
      34: iconst_0
      35: goto          42
      38: aload_2
      39: getfield      #25                 // Field org/aspectj/bridge/CountingMessageHandler$IntHolder.count:I
      42: ireturn

  private void increment(org.aspectj.bridge.IMessage$Kind);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #10                 // Field proxy:Lorg/aspectj/bridge/CountingMessageHandler;
       5: if_acmpeq     18
       8: new           #35                 // class java/lang/IllegalStateException
      11: dup
      12: ldc           #36                 // String not called when proxying
      14: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: getfield      #9                  // Field counters:Ljava/util/Hashtable;
      22: aload_1
      23: invokevirtual #34                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #24                 // class org/aspectj/bridge/CountingMessageHandler$IntHolder
      29: astore_2
      30: aconst_null
      31: aload_2
      32: if_acmpne     54
      35: new           #24                 // class org/aspectj/bridge/CountingMessageHandler$IntHolder
      38: dup
      39: aconst_null
      40: invokespecial #38                 // Method org/aspectj/bridge/CountingMessageHandler$IntHolder."<init>":(Lorg/aspectj/bridge/CountingMessageHandler$1;)V
      43: astore_2
      44: aload_0
      45: getfield      #9                  // Field counters:Ljava/util/Hashtable;
      48: aload_1
      49: aload_2
      50: invokevirtual #39                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: aload_2
      55: dup
      56: getfield      #25                 // Field org/aspectj/bridge/CountingMessageHandler$IntHolder.count:I
      59: iconst_1
      60: iadd
      61: putfield      #25                 // Field org/aspectj/bridge/CountingMessageHandler$IntHolder.count:I
      64: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #10                 // Field proxy:Lorg/aspectj/bridge/CountingMessageHandler;
       4: ifnull        14
       7: aload_0
       8: getfield      #10                 // Field proxy:Lorg/aspectj/bridge/CountingMessageHandler;
      11: invokevirtual #40                 // Method reset:()V
      14: aload_0
      15: getfield      #9                  // Field counters:Ljava/util/Hashtable;
      18: invokevirtual #41                 // Method java/util/Hashtable.clear:()V
      21: return
}
