public class org.aspectj.apache.bcel.generic.RET extends org.aspectj.apache.bcel.generic.Instruction {
  private boolean wide;

  private int index;

  public org.aspectj.apache.bcel.generic.RET(int, boolean);
    Code:
       0: aload_0
       1: sipush        169
       4: invokespecial #2                  // Method org/aspectj/apache/bcel/generic/Instruction."<init>":(S)V
       7: aload_0
       8: iload_1
       9: putfield      #3                  // Field index:I
      12: aload_0
      13: iload_2
      14: putfield      #4                  // Field wide:Z
      17: return

  public void dump(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field wide:Z
       4: ifeq          14
       7: aload_1
       8: sipush        196
      11: invokevirtual #5                  // Method java/io/DataOutputStream.writeByte:(I)V
      14: aload_1
      15: aload_0
      16: getfield      #6                  // Field opcode:S
      19: invokevirtual #5                  // Method java/io/DataOutputStream.writeByte:(I)V
      22: aload_0
      23: getfield      #4                  // Field wide:Z
      26: ifeq          40
      29: aload_1
      30: aload_0
      31: getfield      #3                  // Field index:I
      34: invokevirtual #7                  // Method java/io/DataOutputStream.writeShort:(I)V
      37: goto          48
      40: aload_1
      41: aload_0
      42: getfield      #3                  // Field index:I
      45: invokevirtual #5                  // Method java/io/DataOutputStream.writeByte:(I)V
      48: return

  public int getLength();
    Code:
       0: aload_0
       1: getfield      #4                  // Field wide:Z
       4: ifeq          9
       7: iconst_4
       8: ireturn
       9: iconst_2
      10: ireturn

  public final int getIndex();
    Code:
       0: aload_0
       1: getfield      #3                  // Field index:I
       4: ireturn

  public final void setIndex(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field index:I
       5: aload_0
       6: iload_1
       7: sipush        255
      10: if_icmple     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: putfield      #4                  // Field wide:Z
      21: return

  public java.lang.String toString(boolean);
    Code:
       0: new           #8                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: iload_1
       9: invokespecial #10                 // Method org/aspectj/apache/bcel/generic/Instruction.toString:(Z)Ljava/lang/String;
      12: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #12                 // String
      17: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_0
      21: getfield      #3                  // Field index:I
      24: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      27: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: areturn

  public org.aspectj.apache.bcel.generic.Type getType(org.aspectj.apache.bcel.classfile.ConstantPool);
    Code:
       0: getstatic     #15                 // Field org/aspectj/apache/bcel/generic/ReturnaddressType.NO_TARGET:Lorg/aspectj/apache/bcel/generic/ReturnaddressType;
       3: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #16                 // class org/aspectj/apache/bcel/generic/RET
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #16                 // class org/aspectj/apache/bcel/generic/RET
      13: astore_2
      14: aload_2
      15: getfield      #6                  // Field opcode:S
      18: aload_0
      19: getfield      #6                  // Field opcode:S
      22: if_icmpne     40
      25: aload_2
      26: getfield      #3                  // Field index:I
      29: aload_0
      30: getfield      #3                  // Field index:I
      33: if_icmpne     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field opcode:S
       4: bipush        37
       6: imul
       7: aload_0
       8: getfield      #3                  // Field index:I
      11: iadd
      12: ireturn
}
