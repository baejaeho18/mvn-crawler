public abstract class org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos extends org.aspectj.apache.bcel.classfile.Attribute {
  private java.util.List<org.aspectj.apache.bcel.classfile.annotation.AnnotationGen> annotations;

  private boolean visible;

  private boolean inflated;

  private byte[] annotation_data;

  public org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos(byte, boolean, int, int, org.aspectj.apache.bcel.classfile.ConstantPool);
    Code:
       0: aload_0
       1: iload_1
       2: iload_3
       3: iload         4
       5: aload         5
       7: invokespecial #1                  // Method org/aspectj/apache/bcel/classfile/Attribute."<init>":(BIILorg/aspectj/apache/bcel/classfile/ConstantPool;)V
      10: aload_0
      11: iconst_0
      12: putfield      #2                  // Field inflated:Z
      15: aload_0
      16: iload_2
      17: putfield      #3                  // Field visible:Z
      20: aload_0
      21: new           #4                  // class java/util/ArrayList
      24: dup
      25: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      28: putfield      #6                  // Field annotations:Ljava/util/List;
      31: return

  public org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos(byte, boolean, int, int, byte[], org.aspectj.apache.bcel.classfile.ConstantPool);
    Code:
       0: aload_0
       1: iload_1
       2: iload_3
       3: iload         4
       5: aload         6
       7: invokespecial #1                  // Method org/aspectj/apache/bcel/classfile/Attribute."<init>":(BIILorg/aspectj/apache/bcel/classfile/ConstantPool;)V
      10: aload_0
      11: iconst_0
      12: putfield      #2                  // Field inflated:Z
      15: aload_0
      16: iload_2
      17: putfield      #3                  // Field visible:Z
      20: aload_0
      21: new           #4                  // class java/util/ArrayList
      24: dup
      25: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      28: putfield      #6                  // Field annotations:Ljava/util/List;
      31: aload_0
      32: aload         5
      34: putfield      #7                  // Field annotation_data:[B
      37: return

  public java.util.List<org.aspectj.apache.bcel.classfile.annotation.AnnotationGen> getAnnotations();
    Code:
       0: aload_0
       1: getfield      #2                  // Field inflated:Z
       4: ifne          11
       7: aload_0
       8: invokespecial #8                  // Method inflate:()V
      11: aload_0
      12: getfield      #6                  // Field annotations:Ljava/util/List;
      15: areturn

  public boolean areVisible();
    Code:
       0: aload_0
       1: getfield      #3                  // Field visible:Z
       4: ireturn

  protected void readAnnotations(java.io.DataInputStream, org.aspectj.apache.bcel.classfile.ConstantPool) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field length:I
       5: newarray       byte
       7: putfield      #7                  // Field annotation_data:[B
      10: aload_1
      11: aload_0
      12: getfield      #7                  // Field annotation_data:[B
      15: iconst_0
      16: aload_0
      17: getfield      #9                  // Field length:I
      20: invokevirtual #10                 // Method java/io/DataInputStream.readFully:([BII)V
      23: return

  protected void writeAnnotations(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field inflated:Z
       4: ifne          23
       7: aload_1
       8: aload_0
       9: getfield      #7                  // Field annotation_data:[B
      12: iconst_0
      13: aload_0
      14: getfield      #9                  // Field length:I
      17: invokevirtual #11                 // Method java/io/DataOutputStream.write:([BII)V
      20: goto          73
      23: aload_1
      24: aload_0
      25: getfield      #6                  // Field annotations:Ljava/util/List;
      28: invokeinterface #12,  1           // InterfaceMethod java/util/List.size:()I
      33: invokevirtual #13                 // Method java/io/DataOutputStream.writeShort:(I)V
      36: aload_0
      37: getfield      #6                  // Field annotations:Ljava/util/List;
      40: invokeinterface #14,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      45: astore_2
      46: aload_2
      47: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          73
      55: aload_2
      56: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #17                 // class org/aspectj/apache/bcel/classfile/annotation/AnnotationGen
      64: astore_3
      65: aload_3
      66: aload_1
      67: invokevirtual #18                 // Method org/aspectj/apache/bcel/classfile/annotation/AnnotationGen.dump:(Ljava/io/DataOutputStream;)V
      70: goto          46
      73: return

  private void inflate();
    Code:
       0: new           #19                 // class java/io/DataInputStream
       3: dup
       4: new           #20                 // class java/io/ByteArrayInputStream
       7: dup
       8: aload_0
       9: getfield      #7                  // Field annotation_data:[B
      12: invokespecial #21                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      15: invokespecial #22                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #23                 // Method java/io/DataInputStream.readUnsignedShort:()I
      23: istore_2
      24: iload_2
      25: ifle          75
      28: new           #4                  // class java/util/ArrayList
      31: dup
      32: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      35: astore_3
      36: iconst_0
      37: istore        4
      39: iload         4
      41: iload_2
      42: if_icmpge     70
      45: aload_3
      46: aload_1
      47: aload_0
      48: invokevirtual #24                 // Method getConstantPool:()Lorg/aspectj/apache/bcel/classfile/ConstantPool;
      51: aload_0
      52: getfield      #3                  // Field visible:Z
      55: invokestatic  #25                 // Method org/aspectj/apache/bcel/classfile/annotation/AnnotationGen.read:(Ljava/io/DataInputStream;Lorg/aspectj/apache/bcel/classfile/ConstantPool;Z)Lorg/aspectj/apache/bcel/classfile/annotation/AnnotationGen;
      58: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      63: pop
      64: iinc          4, 1
      67: goto          39
      70: aload_0
      71: aload_3
      72: putfield      #6                  // Field annotations:Ljava/util/List;
      75: aload_1
      76: invokevirtual #27                 // Method java/io/DataInputStream.close:()V
      79: aload_0
      80: iconst_1
      81: putfield      #2                  // Field inflated:Z
      84: goto          98
      87: astore_1
      88: new           #29                 // class java/lang/RuntimeException
      91: dup
      92: ldc           #30                 // String Unabled to inflate annotation data, badly formed?
      94: invokespecial #31                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: return
    Exception table:
       from    to  target type
           0    84    87   Class java/io/IOException

  public boolean isInflated();
    Code:
       0: aload_0
       1: getfield      #2                  // Field inflated:Z
       4: ireturn
}
