public class org.aspectj.apache.bcel.generic.InstructionByte extends org.aspectj.apache.bcel.generic.Instruction {
  private final byte theByte;

  public org.aspectj.apache.bcel.generic.InstructionByte(short, byte);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method org/aspectj/apache/bcel/generic/Instruction."<init>":(S)V
       5: aload_0
       6: iload_2
       7: putfield      #2                  // Field theByte:B
      10: return

  public void dump(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field opcode:S
       5: invokevirtual #4                  // Method java/io/DataOutputStream.writeByte:(I)V
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field theByte:B
      13: invokevirtual #4                  // Method java/io/DataOutputStream.writeByte:(I)V
      16: return

  public java.lang.String toString(boolean);
    Code:
       0: new           #5                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: iload_1
       9: invokespecial #7                  // Method org/aspectj/apache/bcel/generic/Instruction.toString:(Z)Ljava/lang/String;
      12: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #9                  // String
      17: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_0
      21: getfield      #2                  // Field theByte:B
      24: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      27: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: areturn

  public final byte getTypecode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field theByte:B
       4: ireturn

  public final org.aspectj.apache.bcel.generic.Type getType();
    Code:
       0: new           #12                 // class org/aspectj/apache/bcel/generic/ArrayType
       3: dup
       4: aload_0
       5: getfield      #2                  // Field theByte:B
       8: invokestatic  #13                 // Method org/aspectj/apache/bcel/generic/BasicType.getType:(B)Lorg/aspectj/apache/bcel/generic/BasicType;
      11: iconst_1
      12: invokespecial #14                 // Method org/aspectj/apache/bcel/generic/ArrayType."<init>":(Lorg/aspectj/apache/bcel/generic/Type;I)V
      15: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #15                 // class org/aspectj/apache/bcel/generic/InstructionByte
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #15                 // class org/aspectj/apache/bcel/generic/InstructionByte
      13: astore_2
      14: aload_2
      15: getfield      #3                  // Field opcode:S
      18: aload_0
      19: getfield      #3                  // Field opcode:S
      22: if_icmpne     40
      25: aload_2
      26: getfield      #2                  // Field theByte:B
      29: aload_0
      30: getfield      #2                  // Field theByte:B
      33: if_icmpne     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field opcode:S
       4: bipush        37
       6: imul
       7: aload_0
       8: getfield      #2                  // Field theByte:B
      11: iadd
      12: ireturn
}
