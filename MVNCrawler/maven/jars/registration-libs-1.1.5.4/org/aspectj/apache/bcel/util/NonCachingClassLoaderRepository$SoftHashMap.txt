public class org.aspectj.apache.bcel.util.NonCachingClassLoaderRepository$SoftHashMap extends java.util.AbstractMap {
  private java.util.Map<java.lang.Object, org.aspectj.apache.bcel.util.NonCachingClassLoaderRepository$SoftHashMap$SpecialValue> map;

  private java.lang.ref.ReferenceQueue rq;

  public org.aspectj.apache.bcel.util.NonCachingClassLoaderRepository$SoftHashMap(java.util.Map<java.lang.Object, org.aspectj.apache.bcel.util.NonCachingClassLoaderRepository$SoftHashMap$SpecialValue>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/util/AbstractMap."<init>":()V
       4: aload_0
       5: new           #3                  // class java/lang/ref/ReferenceQueue
       8: dup
       9: invokespecial #4                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      12: putfield      #1                  // Field rq:Ljava/lang/ref/ReferenceQueue;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field map:Ljava/util/Map;
      20: return

  public org.aspectj.apache.bcel.util.NonCachingClassLoaderRepository$SoftHashMap();
    Code:
       0: aload_0
       1: new           #6                  // class java/util/HashMap
       4: dup
       5: invokespecial #7                  // Method java/util/HashMap."<init>":()V
       8: invokespecial #8                  // Method "<init>":(Ljava/util/Map;)V
      11: return

  public org.aspectj.apache.bcel.util.NonCachingClassLoaderRepository$SoftHashMap(java.util.Map<java.lang.Object, org.aspectj.apache.bcel.util.NonCachingClassLoaderRepository$SoftHashMap$SpecialValue>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method "<init>":(Ljava/util/Map;)V
       5: return

  private void processQueue();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #1                  // Field rq:Ljava/lang/ref/ReferenceQueue;
       6: invokevirtual #9                  // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       9: checkcast     #10                 // class org/aspectj/apache/bcel/util/NonCachingClassLoaderRepository$SoftHashMap$SpecialValue
      12: dup
      13: astore_1
      14: ifnull        34
      17: aload_0
      18: getfield      #5                  // Field map:Ljava/util/Map;
      21: aload_1
      22: invokestatic  #11                 // Method org/aspectj/apache/bcel/util/NonCachingClassLoaderRepository$SoftHashMap$SpecialValue.access$100:(Lorg/aspectj/apache/bcel/util/NonCachingClassLoaderRepository$SoftHashMap$SpecialValue;)Ljava/lang/Object;
      25: invokeinterface #12,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: goto          2
      34: return

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class org/aspectj/apache/bcel/util/NonCachingClassLoaderRepository$SoftHashMap$SpecialValue
      13: astore_2
      14: aload_2
      15: ifnonnull     20
      18: aconst_null
      19: areturn
      20: aload_2
      21: invokevirtual #14                 // Method org/aspectj/apache/bcel/util/NonCachingClassLoaderRepository$SoftHashMap$SpecialValue.get:()Ljava/lang/Object;
      24: ifnonnull     43
      27: aload_0
      28: getfield      #5                  // Field map:Ljava/util/Map;
      31: aload_2
      32: invokestatic  #11                 // Method org/aspectj/apache/bcel/util/NonCachingClassLoaderRepository$SoftHashMap$SpecialValue.access$100:(Lorg/aspectj/apache/bcel/util/NonCachingClassLoaderRepository$SoftHashMap$SpecialValue;)Ljava/lang/Object;
      35: invokeinterface #12,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: aconst_null
      42: areturn
      43: aload_2
      44: invokevirtual #14                 // Method org/aspectj/apache/bcel/util/NonCachingClassLoaderRepository$SoftHashMap$SpecialValue.get:()Ljava/lang/Object;
      47: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method processQueue:()V
       4: aload_0
       5: getfield      #5                  // Field map:Ljava/util/Map;
       8: aload_1
       9: new           #10                 // class org/aspectj/apache/bcel/util/NonCachingClassLoaderRepository$SoftHashMap$SpecialValue
      12: dup
      13: aload_0
      14: aload_1
      15: aload_2
      16: invokespecial #16                 // Method org/aspectj/apache/bcel/util/NonCachingClassLoaderRepository$SoftHashMap$SpecialValue."<init>":(Lorg/aspectj/apache/bcel/util/NonCachingClassLoaderRepository$SoftHashMap;Ljava/lang/Object;Ljava/lang/Object;)V
      19: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: areturn

  public java.util.Set entrySet();
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method processQueue:()V
       4: aload_0
       5: getfield      #5                  // Field map:Ljava/util/Map;
       8: invokeinterface #19,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      13: astore_1
      14: aload_1
      15: invokeinterface #20,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          51
      30: aload_2
      31: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: astore_3
      37: aload_0
      38: getfield      #5                  // Field map:Ljava/util/Map;
      41: aload_3
      42: invokeinterface #12,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: goto          21
      51: return

  public int size();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method processQueue:()V
       4: aload_0
       5: getfield      #5                  // Field map:Ljava/util/Map;
       8: invokeinterface #23,  1           // InterfaceMethod java/util/Map.size:()I
      13: ireturn

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method processQueue:()V
       4: aload_0
       5: getfield      #5                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #12,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #10                 // class org/aspectj/apache/bcel/util/NonCachingClassLoaderRepository$SoftHashMap$SpecialValue
      17: astore_2
      18: aload_2
      19: ifnonnull     24
      22: aconst_null
      23: areturn
      24: aload_2
      25: invokevirtual #14                 // Method org/aspectj/apache/bcel/util/NonCachingClassLoaderRepository$SoftHashMap$SpecialValue.get:()Ljava/lang/Object;
      28: ifnull        36
      31: aload_2
      32: invokevirtual #14                 // Method org/aspectj/apache/bcel/util/NonCachingClassLoaderRepository$SoftHashMap$SpecialValue.get:()Ljava/lang/Object;
      35: areturn
      36: aconst_null
      37: areturn

  static java.lang.ref.ReferenceQueue access$000(org.aspectj.apache.bcel.util.NonCachingClassLoaderRepository$SoftHashMap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field rq:Ljava/lang/ref/ReferenceQueue;
       4: areturn
}
