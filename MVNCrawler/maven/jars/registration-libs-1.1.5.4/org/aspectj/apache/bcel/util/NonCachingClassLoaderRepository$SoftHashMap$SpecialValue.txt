class org.aspectj.apache.bcel.util.NonCachingClassLoaderRepository$SoftHashMap$SpecialValue extends java.lang.ref.SoftReference {
  private final java.lang.Object key;

  final org.aspectj.apache.bcel.util.NonCachingClassLoaderRepository$SoftHashMap this$0;

  org.aspectj.apache.bcel.util.NonCachingClassLoaderRepository$SoftHashMap$SpecialValue(org.aspectj.apache.bcel.util.NonCachingClassLoaderRepository$SoftHashMap, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/aspectj/apache/bcel/util/NonCachingClassLoaderRepository$SoftHashMap;
       5: aload_0
       6: aload_3
       7: aload_1
       8: invokestatic  #3                  // Method org/aspectj/apache/bcel/util/NonCachingClassLoaderRepository$SoftHashMap.access$000:(Lorg/aspectj/apache/bcel/util/NonCachingClassLoaderRepository$SoftHashMap;)Ljava/lang/ref/ReferenceQueue;
      11: invokespecial #4                  // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      14: aload_0
      15: aload_2
      16: putfield      #1                  // Field key:Ljava/lang/Object;
      19: return

  static java.lang.Object access$100(org.aspectj.apache.bcel.util.NonCachingClassLoaderRepository$SoftHashMap$SpecialValue);
    Code:
       0: aload_0
       1: getfield      #1                  // Field key:Ljava/lang/Object;
       4: areturn
}
