Compiled from "PerObjectInterfaceTypeMunger.java"
public class org.aspectj.weaver.PerObjectInterfaceTypeMunger extends org.aspectj.weaver.ResolvedTypeMunger {
  private final org.aspectj.weaver.UnresolvedType interfaceType;

  private final org.aspectj.weaver.patterns.Pointcut testPointcut;

  private org.aspectj.weaver.patterns.TypePattern lazyTestTypePattern;

  private volatile int hashCode;

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: instanceof    #1                  // class org/aspectj/weaver/PerObjectInterfaceTypeMunger
       8: ifne          13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: checkcast     #1                  // class org/aspectj/weaver/PerObjectInterfaceTypeMunger
      17: astore_2
      18: aload_0
      19: getfield      #2                  // Field testPointcut:Lorg/aspectj/weaver/patterns/Pointcut;
      22: ifnonnull     35
      25: aload_2
      26: getfield      #2                  // Field testPointcut:Lorg/aspectj/weaver/patterns/Pointcut;
      29: ifnonnull     84
      32: goto          49
      35: aload_0
      36: getfield      #2                  // Field testPointcut:Lorg/aspectj/weaver/patterns/Pointcut;
      39: aload_2
      40: getfield      #2                  // Field testPointcut:Lorg/aspectj/weaver/patterns/Pointcut;
      43: invokevirtual #3                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      46: ifeq          84
      49: aload_0
      50: getfield      #4                  // Field lazyTestTypePattern:Lorg/aspectj/weaver/patterns/TypePattern;
      53: ifnonnull     66
      56: aload_2
      57: getfield      #4                  // Field lazyTestTypePattern:Lorg/aspectj/weaver/patterns/TypePattern;
      60: ifnonnull     84
      63: goto          80
      66: aload_0
      67: getfield      #4                  // Field lazyTestTypePattern:Lorg/aspectj/weaver/patterns/TypePattern;
      70: aload_2
      71: getfield      #4                  // Field lazyTestTypePattern:Lorg/aspectj/weaver/patterns/TypePattern;
      74: invokevirtual #3                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      77: ifeq          84
      80: iconst_1
      81: goto          85
      84: iconst_0
      85: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field hashCode:I
       4: ifne          63
       7: bipush        17
       9: istore_1
      10: bipush        37
      12: iload_1
      13: imul
      14: aload_0
      15: getfield      #2                  // Field testPointcut:Lorg/aspectj/weaver/patterns/Pointcut;
      18: ifnonnull     25
      21: iconst_0
      22: goto          32
      25: aload_0
      26: getfield      #2                  // Field testPointcut:Lorg/aspectj/weaver/patterns/Pointcut;
      29: invokevirtual #6                  // Method java/lang/Object.hashCode:()I
      32: iadd
      33: istore_1
      34: bipush        37
      36: iload_1
      37: imul
      38: aload_0
      39: getfield      #4                  // Field lazyTestTypePattern:Lorg/aspectj/weaver/patterns/TypePattern;
      42: ifnonnull     49
      45: iconst_0
      46: goto          56
      49: aload_0
      50: getfield      #4                  // Field lazyTestTypePattern:Lorg/aspectj/weaver/patterns/TypePattern;
      53: invokevirtual #6                  // Method java/lang/Object.hashCode:()I
      56: iadd
      57: istore_1
      58: aload_0
      59: iload_1
      60: putfield      #5                  // Field hashCode:I
      63: aload_0
      64: getfield      #5                  // Field hashCode:I
      67: ireturn

  public org.aspectj.weaver.PerObjectInterfaceTypeMunger(org.aspectj.weaver.UnresolvedType, org.aspectj.weaver.patterns.Pointcut);
    Code:
       0: aload_0
       1: getstatic     #7                  // Field PerObjectInterface:Lorg/aspectj/weaver/ResolvedTypeMunger$Kind;
       4: aconst_null
       5: invokespecial #8                  // Method org/aspectj/weaver/ResolvedTypeMunger."<init>":(Lorg/aspectj/weaver/ResolvedTypeMunger$Kind;Lorg/aspectj/weaver/ResolvedMember;)V
       8: aload_0
       9: iconst_0
      10: putfield      #5                  // Field hashCode:I
      13: aload_0
      14: aload_2
      15: putfield      #2                  // Field testPointcut:Lorg/aspectj/weaver/patterns/Pointcut;
      18: aload_0
      19: aload_1
      20: invokestatic  #9                  // Method org/aspectj/weaver/AjcMemberMaker.perObjectInterfaceType:(Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/UnresolvedType;
      23: putfield      #10                 // Field interfaceType:Lorg/aspectj/weaver/UnresolvedType;
      26: return

  private org.aspectj.weaver.patterns.TypePattern getTestTypePattern(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lazyTestTypePattern:Lorg/aspectj/weaver/patterns/TypePattern;
       4: ifnonnull     86
       7: aload_1
       8: invokevirtual #11                 // Method org/aspectj/weaver/ResolvedType.getPerClause:()Lorg/aspectj/weaver/patterns/PerClause;
      11: instanceof    #12                 // class org/aspectj/weaver/patterns/PerFromSuper
      14: ifeq          40
      17: aload_1
      18: invokevirtual #11                 // Method org/aspectj/weaver/ResolvedType.getPerClause:()Lorg/aspectj/weaver/patterns/PerClause;
      21: checkcast     #12                 // class org/aspectj/weaver/patterns/PerFromSuper
      24: astore_3
      25: aload_3
      26: aload_1
      27: invokevirtual #13                 // Method org/aspectj/weaver/patterns/PerFromSuper.lookupConcretePerClause:(Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/weaver/patterns/PerClause;
      30: checkcast     #14                 // class org/aspectj/weaver/patterns/PerObject
      33: invokevirtual #15                 // Method org/aspectj/weaver/patterns/PerObject.isThis:()Z
      36: istore_2
      37: goto          51
      40: aload_1
      41: invokevirtual #11                 // Method org/aspectj/weaver/ResolvedType.getPerClause:()Lorg/aspectj/weaver/patterns/PerClause;
      44: checkcast     #14                 // class org/aspectj/weaver/patterns/PerObject
      47: invokevirtual #15                 // Method org/aspectj/weaver/patterns/PerObject.isThis:()Z
      50: istore_2
      51: new           #16                 // class org/aspectj/weaver/patterns/PerThisOrTargetPointcutVisitor
      54: dup
      55: iload_2
      56: ifne          63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: aload_1
      65: invokespecial #17                 // Method org/aspectj/weaver/patterns/PerThisOrTargetPointcutVisitor."<init>":(ZLorg/aspectj/weaver/ResolvedType;)V
      68: astore_3
      69: aload_0
      70: aload_3
      71: aload_0
      72: getfield      #2                  // Field testPointcut:Lorg/aspectj/weaver/patterns/Pointcut;
      75: invokevirtual #18                 // Method org/aspectj/weaver/patterns/PerThisOrTargetPointcutVisitor.getPerTypePointcut:(Lorg/aspectj/weaver/patterns/Pointcut;)Lorg/aspectj/weaver/patterns/TypePattern;
      78: putfield      #4                  // Field lazyTestTypePattern:Lorg/aspectj/weaver/patterns/TypePattern;
      81: aload_0
      82: iconst_0
      83: putfield      #5                  // Field hashCode:I
      86: aload_0
      87: getfield      #4                  // Field lazyTestTypePattern:Lorg/aspectj/weaver/patterns/TypePattern;
      90: areturn

  public void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;
    Code:
       0: new           #19                 // class java/lang/RuntimeException
       3: dup
       4: ldc           #20                 // String shouldn\'t be serialized
       6: invokespecial #21                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.aspectj.weaver.UnresolvedType getInterfaceType();
    Code:
       0: aload_0
       1: getfield      #10                 // Field interfaceType:Lorg/aspectj/weaver/UnresolvedType;
       4: areturn

  public org.aspectj.weaver.patterns.Pointcut getTestPointcut();
    Code:
       0: aload_0
       1: getfield      #2                  // Field testPointcut:Lorg/aspectj/weaver/patterns/Pointcut;
       4: areturn

  public boolean matches(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method org/aspectj/weaver/ResolvedType.isInterface:()Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_2
      11: invokespecial #23                 // Method getTestTypePattern:(Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/weaver/patterns/TypePattern;
      14: aload_1
      15: invokevirtual #24                 // Method org/aspectj/weaver/patterns/TypePattern.matchesStatically:(Lorg/aspectj/weaver/ResolvedType;)Z
      18: ireturn

  public boolean isLateMunger();
    Code:
       0: iconst_1
       1: ireturn
}
