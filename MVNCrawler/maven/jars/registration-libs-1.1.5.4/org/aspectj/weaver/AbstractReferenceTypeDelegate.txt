Compiled from "AbstractReferenceTypeDelegate.java"
public abstract class org.aspectj.weaver.AbstractReferenceTypeDelegate implements org.aspectj.weaver.ReferenceTypeDelegate {
  private java.lang.String sourcefilename;

  private org.aspectj.weaver.ISourceContext sourceContext;

  protected boolean exposedToWeaver;

  protected org.aspectj.weaver.ReferenceType resolvedTypeX;

  protected org.aspectj.util.GenericSignature$ClassSignature cachedGenericClassTypeSignature;

  public static final java.lang.String UNKNOWN_SOURCE_FILE;

  public org.aspectj.weaver.AbstractReferenceTypeDelegate(org.aspectj.weaver.ReferenceType, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // String <Unknown>
       7: putfield      #4                  // Field sourcefilename:Ljava/lang/String;
      10: aload_0
      11: getstatic     #5                  // Field org/aspectj/weaver/SourceContextImpl.UNKNOWN_SOURCE_CONTEXT:Lorg/aspectj/weaver/ISourceContext;
      14: putfield      #6                  // Field sourceContext:Lorg/aspectj/weaver/ISourceContext;
      17: aload_0
      18: aload_1
      19: putfield      #7                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
      22: aload_0
      23: iload_2
      24: putfield      #8                  // Field exposedToWeaver:Z
      27: return

  public final boolean isClass();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isAspect:()Z
       4: ifne          18
       7: aload_0
       8: invokevirtual #10                 // Method isInterface:()Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean isCacheable();
    Code:
       0: iconst_0
       1: ireturn

  public boolean doesNotExposeShadowMungers();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isExposedToWeaver();
    Code:
       0: aload_0
       1: getfield      #8                  // Field exposedToWeaver:Z
       4: ireturn

  public org.aspectj.weaver.ReferenceType getResolvedTypeX();
    Code:
       0: aload_0
       1: getfield      #7                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: areturn

  public final java.lang.String getSourcefilename();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sourcefilename:Ljava/lang/String;
       4: areturn

  public final void setSourcefilename(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field sourcefilename:Ljava/lang/String;
       5: aload_1
       6: ifnull        55
       9: aload_1
      10: ldc           #3                  // String <Unknown>
      12: invokevirtual #11                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ifeq          55
      18: aload_0
      19: new           #12                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #14                 // String Type \'
      28: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: invokevirtual #16                 // Method getResolvedTypeX:()Lorg/aspectj/weaver/ReferenceType;
      35: invokevirtual #17                 // Method org/aspectj/weaver/ReferenceType.getName:()Ljava/lang/String;
      38: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #18                 // String \' (no debug info available)
      43: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: putfield      #4                  // Field sourcefilename:Ljava/lang/String;
      52: goto          101
      55: aload_0
      56: invokevirtual #16                 // Method getResolvedTypeX:()Lorg/aspectj/weaver/ReferenceType;
      59: invokevirtual #20                 // Method org/aspectj/weaver/ReferenceType.getPackageName:()Ljava/lang/String;
      62: astore_2
      63: aload_2
      64: ifnull        101
      67: aload_0
      68: new           #12                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      75: aload_2
      76: bipush        46
      78: bipush        47
      80: invokevirtual #21                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      83: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: bipush        47
      88: invokevirtual #22                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      91: aload_1
      92: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: putfield      #4                  // Field sourcefilename:Ljava/lang/String;
     101: aload_0
     102: getfield      #4                  // Field sourcefilename:Ljava/lang/String;
     105: ifnull        132
     108: aload_0
     109: getfield      #6                  // Field sourceContext:Lorg/aspectj/weaver/ISourceContext;
     112: instanceof    #23                 // class org/aspectj/weaver/SourceContextImpl
     115: ifeq          132
     118: aload_0
     119: getfield      #6                  // Field sourceContext:Lorg/aspectj/weaver/ISourceContext;
     122: checkcast     #23                 // class org/aspectj/weaver/SourceContextImpl
     125: aload_0
     126: getfield      #4                  // Field sourcefilename:Ljava/lang/String;
     129: invokevirtual #24                 // Method org/aspectj/weaver/SourceContextImpl.setSourceFileName:(Ljava/lang/String;)V
     132: return

  public org.aspectj.bridge.ISourceLocation getSourceLocation();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getSourceContext:()Lorg/aspectj/weaver/ISourceContext;
       4: iconst_0
       5: iconst_0
       6: invokeinterface #26,  3           // InterfaceMethod org/aspectj/weaver/ISourceContext.makeSourceLocation:(II)Lorg/aspectj/bridge/ISourceLocation;
      11: areturn

  public org.aspectj.weaver.ISourceContext getSourceContext();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sourceContext:Lorg/aspectj/weaver/ISourceContext;
       4: areturn

  public void setSourceContext(org.aspectj.weaver.ISourceContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field sourceContext:Lorg/aspectj/weaver/ISourceContext;
       5: return

  public org.aspectj.util.GenericSignature$ClassSignature getGenericClassTypeSignature();
    Code:
       0: aload_0
       1: getfield      #27                 // Field cachedGenericClassTypeSignature:Lorg/aspectj/util/GenericSignature$ClassSignature;
       4: ifnonnull     33
       7: aload_0
       8: invokevirtual #28                 // Method getDeclaredGenericSignature:()Ljava/lang/String;
      11: astore_1
      12: aload_1
      13: ifnull        33
      16: new           #29                 // class org/aspectj/util/GenericSignatureParser
      19: dup
      20: invokespecial #30                 // Method org/aspectj/util/GenericSignatureParser."<init>":()V
      23: astore_2
      24: aload_0
      25: aload_2
      26: aload_1
      27: invokevirtual #31                 // Method org/aspectj/util/GenericSignatureParser.parseAsClassSignature:(Ljava/lang/String;)Lorg/aspectj/util/GenericSignature$ClassSignature;
      30: putfield      #27                 // Field cachedGenericClassTypeSignature:Lorg/aspectj/util/GenericSignature$ClassSignature;
      33: aload_0
      34: getfield      #27                 // Field cachedGenericClassTypeSignature:Lorg/aspectj/util/GenericSignature$ClassSignature;
      37: areturn

  protected org.aspectj.util.GenericSignature$FormalTypeParameter[] getFormalTypeParametersFromOuterClass();
    Code:
       0: new           #32                 // class java/util/ArrayList
       3: dup
       4: invokespecial #33                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #34                 // Method getOuterClass:()Lorg/aspectj/weaver/ResolvedType;
      12: astore_2
      13: aload_2
      14: instanceof    #35                 // class org/aspectj/weaver/ReferenceType
      17: ifne          97
      20: aload_2
      21: ifnonnull     28
      24: getstatic     #36                 // Field org/aspectj/util/GenericSignature$FormalTypeParameter.NONE:[Lorg/aspectj/util/GenericSignature$FormalTypeParameter;
      27: areturn
      28: new           #37                 // class org/aspectj/weaver/BCException
      31: dup
      32: new           #12                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #38                 // String Whilst processing type \'
      41: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: getfield      #7                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
      48: invokevirtual #39                 // Method org/aspectj/weaver/ReferenceType.getSignature:()Ljava/lang/String;
      51: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #40                 // String \' - cannot cast the outer type to a reference type.  Signature=
      56: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_2
      60: invokevirtual #41                 // Method org/aspectj/weaver/ResolvedType.getSignature:()Ljava/lang/String;
      63: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: ldc           #42                 // String  toString()=
      68: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_2
      72: invokevirtual #43                 // Method org/aspectj/weaver/ResolvedType.toString:()Ljava/lang/String;
      75: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: ldc           #44                 // String  class=
      80: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload_2
      84: invokevirtual #45                 // Method org/aspectj/weaver/ResolvedType.getClassName:()Ljava/lang/String;
      87: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokespecial #46                 // Method org/aspectj/weaver/BCException."<init>":(Ljava/lang/String;)V
      96: athrow
      97: aload_2
      98: checkcast     #35                 // class org/aspectj/weaver/ReferenceType
     101: astore_3
     102: aload_3
     103: invokevirtual #47                 // Method org/aspectj/weaver/ReferenceType.getDelegate:()Lorg/aspectj/weaver/ReferenceTypeDelegate;
     106: astore        4
     108: aload         4
     110: checkcast     #2                  // class org/aspectj/weaver/AbstractReferenceTypeDelegate
     113: astore        5
     115: aload         5
     117: invokevirtual #48                 // Method isNested:()Z
     120: ifeq          159
     123: aload         5
     125: invokevirtual #49                 // Method getFormalTypeParametersFromOuterClass:()[Lorg/aspectj/util/GenericSignature$FormalTypeParameter;
     128: astore        6
     130: iconst_0
     131: istore        7
     133: iload         7
     135: aload         6
     137: arraylength
     138: if_icmpge     159
     141: aload_1
     142: aload         6
     144: iload         7
     146: aaload
     147: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     152: pop
     153: iinc          7, 1
     156: goto          133
     159: aload         5
     161: invokevirtual #51                 // Method getGenericClassTypeSignature:()Lorg/aspectj/util/GenericSignature$ClassSignature;
     164: astore        6
     166: aload         6
     168: ifnull        206
     171: iconst_0
     172: istore        7
     174: iload         7
     176: aload         6
     178: getfield      #52                 // Field org/aspectj/util/GenericSignature$ClassSignature.formalTypeParameters:[Lorg/aspectj/util/GenericSignature$FormalTypeParameter;
     181: arraylength
     182: if_icmpge     206
     185: aload_1
     186: aload         6
     188: getfield      #52                 // Field org/aspectj/util/GenericSignature$ClassSignature.formalTypeParameters:[Lorg/aspectj/util/GenericSignature$FormalTypeParameter;
     191: iload         7
     193: aaload
     194: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     199: pop
     200: iinc          7, 1
     203: goto          174
     206: aload_1
     207: invokeinterface #53,  1           // InterfaceMethod java/util/List.size:()I
     212: anewarray     #54                 // class org/aspectj/util/GenericSignature$FormalTypeParameter
     215: astore        7
     217: aload_1
     218: aload         7
     220: invokeinterface #55,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     225: pop
     226: aload         7
     228: areturn

  public boolean copySourceContext();
    Code:
       0: iconst_1
       1: ireturn

  public int getCompilerVersion();
    Code:
       0: invokestatic  #56                 // Method org/aspectj/weaver/AjAttribute$WeaverVersionInfo.getCurrentWeaverMajorVersion:()S
       3: ireturn

  public void ensureConsistent();
    Code:
       0: return

  public boolean isWeavable();
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasBeenWoven();
    Code:
       0: iconst_0
       1: ireturn
}
