Compiled from "ResolvedType.java"
class org.aspectj.weaver.ResolvedType$Missing extends org.aspectj.weaver.ResolvedType {
  org.aspectj.weaver.ResolvedType$Missing();
    Code:
       0: aload_0
       1: ldc           #2                  // String @missing@
       3: aconst_null
       4: invokespecial #3                  // Method org/aspectj/weaver/ResolvedType."<init>":(Ljava/lang/String;Lorg/aspectj/weaver/World;)V
       7: return

  public final java.lang.String getName();
    Code:
       0: ldc           #2                  // String @missing@
       2: areturn

  public final boolean isMissing();
    Code:
       0: iconst_1
       1: ireturn

  public boolean hasAnnotation(org.aspectj.weaver.UnresolvedType);
    Code:
       0: iconst_0
       1: ireturn

  public final org.aspectj.weaver.ResolvedMember[] getDeclaredFields();
    Code:
       0: getstatic     #4                  // Field org/aspectj/weaver/ResolvedMember.NONE:[Lorg/aspectj/weaver/ResolvedMember;
       3: areturn

  public final org.aspectj.weaver.ResolvedMember[] getDeclaredMethods();
    Code:
       0: getstatic     #4                  // Field org/aspectj/weaver/ResolvedMember.NONE:[Lorg/aspectj/weaver/ResolvedMember;
       3: areturn

  public final org.aspectj.weaver.ResolvedType[] getDeclaredInterfaces();
    Code:
       0: getstatic     #5                  // Field org/aspectj/weaver/ResolvedType.NONE:[Lorg/aspectj/weaver/ResolvedType;
       3: areturn

  public final org.aspectj.weaver.ResolvedMember[] getDeclaredPointcuts();
    Code:
       0: getstatic     #4                  // Field org/aspectj/weaver/ResolvedMember.NONE:[Lorg/aspectj/weaver/ResolvedMember;
       3: areturn

  public final org.aspectj.weaver.ResolvedType getSuperclass();
    Code:
       0: aconst_null
       1: areturn

  public final int getModifiers();
    Code:
       0: iconst_0
       1: ireturn

  public final boolean isAssignableFrom(org.aspectj.weaver.ResolvedType);
    Code:
       0: iconst_0
       1: ireturn

  public final boolean isAssignableFrom(org.aspectj.weaver.ResolvedType, boolean);
    Code:
       0: iconst_0
       1: ireturn

  public final boolean isCoerceableFrom(org.aspectj.weaver.ResolvedType);
    Code:
       0: iconst_0
       1: ireturn

  public boolean needsNoConversionFrom(org.aspectj.weaver.ResolvedType);
    Code:
       0: iconst_0
       1: ireturn

  public org.aspectj.weaver.ISourceContext getSourceContext();
    Code:
       0: aconst_null
       1: areturn

  public org.aspectj.weaver.UnresolvedType getRawType();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/aspectj/weaver/ResolvedType.getRawType:()Lorg/aspectj/weaver/ResolvedType;
       4: areturn
}
