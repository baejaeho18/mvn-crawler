Compiled from "NotPointcut.java"
public class org.aspectj.weaver.patterns.NotPointcut extends org.aspectj.weaver.patterns.Pointcut {
  private org.aspectj.weaver.patterns.Pointcut body;

  public org.aspectj.weaver.patterns.NotPointcut(org.aspectj.weaver.patterns.Pointcut);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/aspectj/weaver/patterns/Pointcut."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field body:Lorg/aspectj/weaver/patterns/Pointcut;
       9: aload_0
      10: bipush        7
      12: putfield      #4                  // Field pointcutKind:B
      15: aload_0
      16: aload_1
      17: invokevirtual #5                  // Method org/aspectj/weaver/patterns/Pointcut.getSourceContext:()Lorg/aspectj/weaver/ISourceContext;
      20: aload_1
      21: invokevirtual #6                  // Method org/aspectj/weaver/patterns/Pointcut.getStart:()I
      24: aload_1
      25: invokevirtual #7                  // Method org/aspectj/weaver/patterns/Pointcut.getEnd:()I
      28: invokevirtual #8                  // Method setLocation:(Lorg/aspectj/weaver/ISourceContext;II)V
      31: return

  public org.aspectj.weaver.patterns.NotPointcut(org.aspectj.weaver.patterns.Pointcut, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method "<init>":(Lorg/aspectj/weaver/patterns/Pointcut;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #5                  // Method org/aspectj/weaver/patterns/Pointcut.getSourceContext:()Lorg/aspectj/weaver/ISourceContext;
      10: iload_2
      11: aload_1
      12: invokevirtual #7                  // Method org/aspectj/weaver/patterns/Pointcut.getEnd:()I
      15: invokevirtual #8                  // Method setLocation:(Lorg/aspectj/weaver/ISourceContext;II)V
      18: return

  public int couldMatchKinds();
    Code:
       0: getstatic     #10                 // Field org/aspectj/weaver/Shadow.ALL_SHADOW_KINDS_BITS:I
       3: ireturn

  public org.aspectj.weaver.patterns.Pointcut getNegatedPointcut();
    Code:
       0: aload_0
       1: getfield      #2                  // Field body:Lorg/aspectj/weaver/patterns/Pointcut;
       4: areturn

  public org.aspectj.util.FuzzyBoolean fastMatch(org.aspectj.weaver.patterns.FastMatchInfo);
    Code:
       0: aload_0
       1: getfield      #2                  // Field body:Lorg/aspectj/weaver/patterns/Pointcut;
       4: aload_1
       5: invokevirtual #11                 // Method org/aspectj/weaver/patterns/Pointcut.fastMatch:(Lorg/aspectj/weaver/patterns/FastMatchInfo;)Lorg/aspectj/util/FuzzyBoolean;
       8: invokevirtual #12                 // Method org/aspectj/util/FuzzyBoolean.not:()Lorg/aspectj/util/FuzzyBoolean;
      11: areturn

  protected org.aspectj.util.FuzzyBoolean matchInternal(org.aspectj.weaver.Shadow);
    Code:
       0: aload_0
       1: getfield      #2                  // Field body:Lorg/aspectj/weaver/patterns/Pointcut;
       4: aload_1
       5: invokevirtual #13                 // Method org/aspectj/weaver/patterns/Pointcut.match:(Lorg/aspectj/weaver/Shadow;)Lorg/aspectj/util/FuzzyBoolean;
       8: invokevirtual #12                 // Method org/aspectj/util/FuzzyBoolean.not:()Lorg/aspectj/util/FuzzyBoolean;
      11: areturn

  public java.lang.String toString();
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #16                 // String !
       9: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field body:Lorg/aspectj/weaver/patterns/Pointcut;
      16: invokevirtual #18                 // Method java/lang/Object.toString:()Ljava/lang/String;
      19: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #20                 // class org/aspectj/weaver/patterns/NotPointcut
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #20                 // class org/aspectj/weaver/patterns/NotPointcut
      13: astore_2
      14: aload_2
      15: getfield      #2                  // Field body:Lorg/aspectj/weaver/patterns/Pointcut;
      18: aload_0
      19: getfield      #2                  // Field body:Lorg/aspectj/weaver/patterns/Pointcut;
      22: invokevirtual #21                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      25: ireturn

  public int hashCode();
    Code:
       0: sipush        851
       3: aload_0
       4: getfield      #2                  // Field body:Lorg/aspectj/weaver/patterns/Pointcut;
       7: invokevirtual #22                 // Method java/lang/Object.hashCode:()I
      10: iadd
      11: ireturn

  public void resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings);
    Code:
       0: aload_0
       1: getfield      #2                  // Field body:Lorg/aspectj/weaver/patterns/Pointcut;
       4: aload_1
       5: aconst_null
       6: invokevirtual #23                 // Method org/aspectj/weaver/patterns/Pointcut.resolveBindings:(Lorg/aspectj/weaver/patterns/IScope;Lorg/aspectj/weaver/patterns/Bindings;)V
       9: return

  public void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: bipush        7
       3: invokevirtual #24                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeByte:(I)V
       6: aload_0
       7: getfield      #2                  // Field body:Lorg/aspectj/weaver/patterns/Pointcut;
      10: aload_1
      11: invokevirtual #25                 // Method org/aspectj/weaver/patterns/Pointcut.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      14: aload_0
      15: aload_1
      16: invokevirtual #26                 // Method writeLocation:(Ljava/io/DataOutputStream;)V
      19: return

  public static org.aspectj.weaver.patterns.Pointcut read(org.aspectj.weaver.VersionedDataInputStream, org.aspectj.weaver.ISourceContext) throws java.io.IOException;
    Code:
       0: new           #20                 // class org/aspectj/weaver/patterns/NotPointcut
       3: dup
       4: aload_0
       5: aload_1
       6: invokestatic  #27                 // Method org/aspectj/weaver/patterns/Pointcut.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/Pointcut;
       9: invokespecial #9                  // Method "<init>":(Lorg/aspectj/weaver/patterns/Pointcut;)V
      12: astore_2
      13: aload_2
      14: aload_1
      15: aload_0
      16: invokevirtual #28                 // Method readLocation:(Lorg/aspectj/weaver/ISourceContext;Ljava/io/DataInputStream;)V
      19: aload_2
      20: areturn

  protected org.aspectj.weaver.ast.Test findResidueInternal(org.aspectj.weaver.Shadow, org.aspectj.weaver.patterns.ExposedState);
    Code:
       0: aload_0
       1: getfield      #2                  // Field body:Lorg/aspectj/weaver/patterns/Pointcut;
       4: aload_1
       5: aload_2
       6: invokevirtual #29                 // Method org/aspectj/weaver/patterns/Pointcut.findResidue:(Lorg/aspectj/weaver/Shadow;Lorg/aspectj/weaver/patterns/ExposedState;)Lorg/aspectj/weaver/ast/Test;
       9: invokestatic  #30                 // Method org/aspectj/weaver/ast/Test.makeNot:(Lorg/aspectj/weaver/ast/Test;)Lorg/aspectj/weaver/ast/Test;
      12: areturn

  public org.aspectj.weaver.patterns.Pointcut concretize1(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.ResolvedType, org.aspectj.weaver.IntMap);
    Code:
       0: new           #20                 // class org/aspectj/weaver/patterns/NotPointcut
       3: dup
       4: aload_0
       5: getfield      #2                  // Field body:Lorg/aspectj/weaver/patterns/Pointcut;
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokevirtual #31                 // Method org/aspectj/weaver/patterns/Pointcut.concretize:(Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/IntMap;)Lorg/aspectj/weaver/patterns/Pointcut;
      14: invokespecial #9                  // Method "<init>":(Lorg/aspectj/weaver/patterns/Pointcut;)V
      17: astore        4
      19: aload         4
      21: aload_0
      22: invokevirtual #32                 // Method org/aspectj/weaver/patterns/Pointcut.copyLocationFrom:(Lorg/aspectj/weaver/patterns/PatternNode;)V
      25: aload         4
      27: areturn

  public org.aspectj.weaver.patterns.Pointcut parameterizeWith(java.util.Map, org.aspectj.weaver.World);
    Code:
       0: new           #20                 // class org/aspectj/weaver/patterns/NotPointcut
       3: dup
       4: aload_0
       5: getfield      #2                  // Field body:Lorg/aspectj/weaver/patterns/Pointcut;
       8: aload_1
       9: aload_2
      10: invokevirtual #33                 // Method org/aspectj/weaver/patterns/Pointcut.parameterizeWith:(Ljava/util/Map;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/patterns/Pointcut;
      13: invokespecial #9                  // Method "<init>":(Lorg/aspectj/weaver/patterns/Pointcut;)V
      16: astore_3
      17: aload_3
      18: aload_0
      19: invokevirtual #32                 // Method org/aspectj/weaver/patterns/Pointcut.copyLocationFrom:(Lorg/aspectj/weaver/patterns/PatternNode;)V
      22: aload_3
      23: areturn

  public java.lang.Object accept(org.aspectj.weaver.patterns.PatternNodeVisitor, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #34,  3           // InterfaceMethod org/aspectj/weaver/patterns/PatternNodeVisitor.visit:(Lorg/aspectj/weaver/patterns/NotPointcut;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public java.lang.Object traverse(org.aspectj.weaver.patterns.PatternNodeVisitor, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #35                 // Method accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
       6: astore_3
       7: aload_0
       8: getfield      #2                  // Field body:Lorg/aspectj/weaver/patterns/Pointcut;
      11: aload_1
      12: aload_3
      13: invokevirtual #36                 // Method org/aspectj/weaver/patterns/Pointcut.traverse:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: aload_3
      18: areturn
}
