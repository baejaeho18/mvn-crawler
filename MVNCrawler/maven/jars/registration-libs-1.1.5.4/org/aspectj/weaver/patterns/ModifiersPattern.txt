Compiled from "ModifiersPattern.java"
public class org.aspectj.weaver.patterns.ModifiersPattern extends org.aspectj.weaver.patterns.PatternNode {
  private int requiredModifiers;

  private int forbiddenModifiers;

  public static final org.aspectj.weaver.patterns.ModifiersPattern ANY;

  private static java.util.Map<java.lang.String, java.lang.Integer> modifierFlags;

  public org.aspectj.weaver.patterns.ModifiersPattern(int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/aspectj/weaver/patterns/PatternNode."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field requiredModifiers:I
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field forbiddenModifiers:I
      14: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getstatic     #4                  // Field ANY:Lorg/aspectj/weaver/patterns/ModifiersPattern;
       4: if_acmpne     10
       7: ldc           #5                  // String
       9: areturn
      10: aload_0
      11: getfield      #2                  // Field requiredModifiers:I
      14: invokestatic  #6                  // Method java/lang/reflect/Modifier.toString:(I)Ljava/lang/String;
      17: astore_1
      18: aload_0
      19: getfield      #3                  // Field forbiddenModifiers:I
      22: ifne          27
      25: aload_1
      26: areturn
      27: new           #7                  // class java/lang/StringBuilder
      30: dup
      31: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      34: aload_1
      35: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #10                 // String  !
      40: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: getfield      #3                  // Field forbiddenModifiers:I
      47: invokestatic  #6                  // Method java/lang/reflect/Modifier.toString:(I)Ljava/lang/String;
      50: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #12                 // class org/aspectj/weaver/patterns/ModifiersPattern
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #12                 // class org/aspectj/weaver/patterns/ModifiersPattern
      13: astore_2
      14: aload_2
      15: getfield      #2                  // Field requiredModifiers:I
      18: aload_0
      19: getfield      #2                  // Field requiredModifiers:I
      22: if_icmpne     40
      25: aload_2
      26: getfield      #3                  // Field forbiddenModifiers:I
      29: aload_0
      30: getfield      #3                  // Field forbiddenModifiers:I
      33: if_icmpne     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: istore_1
       3: bipush        37
       5: iload_1
       6: imul
       7: aload_0
       8: getfield      #2                  // Field requiredModifiers:I
      11: iadd
      12: istore_1
      13: bipush        37
      15: iload_1
      16: imul
      17: aload_0
      18: getfield      #3                  // Field forbiddenModifiers:I
      21: iadd
      22: istore_1
      23: iload_1
      24: ireturn

  public boolean matches(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #2                  // Field requiredModifiers:I
       5: iand
       6: aload_0
       7: getfield      #2                  // Field requiredModifiers:I
      10: if_icmpne     26
      13: iload_1
      14: aload_0
      15: getfield      #3                  // Field forbiddenModifiers:I
      18: iand
      19: ifne          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public static org.aspectj.weaver.patterns.ModifiersPattern read(org.aspectj.weaver.VersionedDataInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method org/aspectj/weaver/VersionedDataInputStream.readShort:()S
       4: istore_1
       5: aload_0
       6: invokevirtual #13                 // Method org/aspectj/weaver/VersionedDataInputStream.readShort:()S
       9: istore_2
      10: iload_1
      11: ifne          22
      14: iload_2
      15: ifne          22
      18: getstatic     #4                  // Field ANY:Lorg/aspectj/weaver/patterns/ModifiersPattern;
      21: areturn
      22: new           #12                 // class org/aspectj/weaver/patterns/ModifiersPattern
      25: dup
      26: iload_1
      27: iload_2
      28: invokespecial #14                 // Method "<init>":(II)V
      31: areturn

  public void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field requiredModifiers:I
       5: invokevirtual #15                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeShort:(I)V
       8: aload_1
       9: aload_0
      10: getfield      #3                  // Field forbiddenModifiers:I
      13: invokevirtual #15                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeShort:(I)V
      16: return

  public static int getModifierFlag(java.lang.String);
    Code:
       0: getstatic     #16                 // Field modifierFlags:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #18                 // class java/lang/Integer
      12: astore_1
      13: aload_1
      14: ifnonnull     19
      17: iconst_m1
      18: ireturn
      19: aload_1
      20: invokevirtual #19                 // Method java/lang/Integer.intValue:()I
      23: ireturn

  public java.lang.Object accept(org.aspectj.weaver.patterns.PatternNodeVisitor, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #20,  3           // InterfaceMethod org/aspectj/weaver/patterns/PatternNodeVisitor.visit:(Lorg/aspectj/weaver/patterns/ModifiersPattern;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  static {};
    Code:
       0: new           #12                 // class org/aspectj/weaver/patterns/ModifiersPattern
       3: dup
       4: iconst_0
       5: iconst_0
       6: invokespecial #14                 // Method "<init>":(II)V
       9: putstatic     #4                  // Field ANY:Lorg/aspectj/weaver/patterns/ModifiersPattern;
      12: aconst_null
      13: putstatic     #16                 // Field modifierFlags:Ljava/util/Map;
      16: new           #21                 // class java/util/HashMap
      19: dup
      20: invokespecial #22                 // Method java/util/HashMap."<init>":()V
      23: putstatic     #16                 // Field modifierFlags:Ljava/util/Map;
      26: iconst_1
      27: istore_0
      28: iload_0
      29: sipush        2048
      32: if_icmpgt     65
      35: iload_0
      36: invokestatic  #6                  // Method java/lang/reflect/Modifier.toString:(I)Ljava/lang/String;
      39: astore_1
      40: getstatic     #16                 // Field modifierFlags:Ljava/util/Map;
      43: aload_1
      44: new           #18                 // class java/lang/Integer
      47: dup
      48: iload_0
      49: invokespecial #24                 // Method java/lang/Integer."<init>":(I)V
      52: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: iload_0
      59: iconst_1
      60: ishl
      61: istore_0
      62: goto          28
      65: getstatic     #16                 // Field modifierFlags:Ljava/util/Map;
      68: ldc           #26                 // String synthetic
      70: new           #18                 // class java/lang/Integer
      73: dup
      74: sipush        4096
      77: invokespecial #24                 // Method java/lang/Integer."<init>":(I)V
      80: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      85: pop
      86: return
}
