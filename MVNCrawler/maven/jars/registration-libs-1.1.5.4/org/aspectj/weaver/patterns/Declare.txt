Compiled from "Declare.java"
public abstract class org.aspectj.weaver.patterns.Declare extends org.aspectj.weaver.patterns.PatternNode {
  public static final byte ERROR_OR_WARNING;

  public static final byte PARENTS;

  public static final byte SOFT;

  public static final byte DOMINATES;

  public static final byte ANNOTATION;

  public static final byte PARENTSMIXIN;

  public static final byte TYPE_ERROR_OR_WARNING;

  private org.aspectj.weaver.ResolvedType declaringType;

  public org.aspectj.weaver.patterns.Declare();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/aspectj/weaver/patterns/PatternNode."<init>":()V
       4: return

  public static org.aspectj.weaver.patterns.Declare read(org.aspectj.weaver.VersionedDataInputStream, org.aspectj.weaver.ISourceContext) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method org/aspectj/weaver/VersionedDataInputStream.readByte:()B
       4: istore_2
       5: iload_2
       6: tableswitch   { // 1 to 7
                     1: 48
                     2: 60
                     3: 66
                     4: 54
                     5: 72
                     6: 78
                     7: 84
               default: 90
          }
      48: aload_0
      49: aload_1
      50: invokestatic  #3                  // Method org/aspectj/weaver/patterns/DeclareErrorOrWarning.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/Declare;
      53: areturn
      54: aload_0
      55: aload_1
      56: invokestatic  #4                  // Method org/aspectj/weaver/patterns/DeclarePrecedence.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/Declare;
      59: areturn
      60: aload_0
      61: aload_1
      62: invokestatic  #5                  // Method org/aspectj/weaver/patterns/DeclareParents.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/Declare;
      65: areturn
      66: aload_0
      67: aload_1
      68: invokestatic  #6                  // Method org/aspectj/weaver/patterns/DeclareSoft.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/Declare;
      71: areturn
      72: aload_0
      73: aload_1
      74: invokestatic  #7                  // Method org/aspectj/weaver/patterns/DeclareAnnotation.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/Declare;
      77: areturn
      78: aload_0
      79: aload_1
      80: invokestatic  #8                  // Method org/aspectj/weaver/patterns/DeclareParentsMixin.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/Declare;
      83: areturn
      84: aload_0
      85: aload_1
      86: invokestatic  #9                  // Method org/aspectj/weaver/patterns/DeclareTypeErrorOrWarning.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/Declare;
      89: areturn
      90: new           #10                 // class java/lang/RuntimeException
      93: dup
      94: ldc           #11                 // String unimplemented
      96: invokespecial #12                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      99: athrow

  public abstract void resolve(org.aspectj.weaver.patterns.IScope);

  public abstract org.aspectj.weaver.patterns.Declare parameterizeWith(java.util.Map<java.lang.String, org.aspectj.weaver.UnresolvedType>, org.aspectj.weaver.World);

  public abstract boolean isAdviceLike();

  public abstract java.lang.String getNameSuffix();

  public void setDeclaringType(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field declaringType:Lorg/aspectj/weaver/ResolvedType;
       5: return

  public org.aspectj.weaver.ResolvedType getDeclaringType();
    Code:
       0: aload_0
       1: getfield      #13                 // Field declaringType:Lorg/aspectj/weaver/ResolvedType;
       4: areturn
}
