Compiled from "HasMemberTypePatternFinder.java"
public class org.aspectj.weaver.patterns.HasMemberTypePatternFinder extends org.aspectj.weaver.patterns.AbstractPatternNodeVisitor {
  private boolean hasMemberTypePattern;

  public org.aspectj.weaver.patterns.HasMemberTypePatternFinder(org.aspectj.weaver.patterns.TypePattern);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/aspectj/weaver/patterns/AbstractPatternNodeVisitor."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field hasMemberTypePattern:Z
       9: aload_1
      10: aload_0
      11: aconst_null
      12: invokevirtual #3                  // Method org/aspectj/weaver/patterns/TypePattern.traverse:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: return

  public java.lang.Object visit(org.aspectj.weaver.patterns.HasMemberTypePattern, java.lang.Object);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field hasMemberTypePattern:Z
       5: aconst_null
       6: areturn

  public boolean hasMemberTypePattern();
    Code:
       0: aload_0
       1: getfield      #2                  // Field hasMemberTypePattern:Z
       4: ireturn
}
