Compiled from "ThrowsPattern.java"
public class org.aspectj.weaver.patterns.ThrowsPattern extends org.aspectj.weaver.patterns.PatternNode {
  private org.aspectj.weaver.patterns.TypePatternList required;

  private org.aspectj.weaver.patterns.TypePatternList forbidden;

  public static final org.aspectj.weaver.patterns.ThrowsPattern ANY;

  public org.aspectj.weaver.patterns.ThrowsPattern(org.aspectj.weaver.patterns.TypePatternList, org.aspectj.weaver.patterns.TypePatternList);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/aspectj/weaver/patterns/PatternNode."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field required:Lorg/aspectj/weaver/patterns/TypePatternList;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field forbidden:Lorg/aspectj/weaver/patterns/TypePatternList;
      14: return

  public org.aspectj.weaver.patterns.TypePatternList getRequired();
    Code:
       0: aload_0
       1: getfield      #2                  // Field required:Lorg/aspectj/weaver/patterns/TypePatternList;
       4: areturn

  public org.aspectj.weaver.patterns.TypePatternList getForbidden();
    Code:
       0: aload_0
       1: getfield      #3                  // Field forbidden:Lorg/aspectj/weaver/patterns/TypePatternList;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getstatic     #4                  // Field ANY:Lorg/aspectj/weaver/patterns/ThrowsPattern;
       4: if_acmpne     10
       7: ldc           #5                  // String
       9: areturn
      10: new           #6                  // class java/lang/StringBuilder
      13: dup
      14: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #8                  // String throws
      19: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #2                  // Field required:Lorg/aspectj/weaver/patterns/TypePatternList;
      26: invokevirtual #10                 // Method org/aspectj/weaver/patterns/TypePatternList.toString:()Ljava/lang/String;
      29: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: astore_1
      36: aload_0
      37: getfield      #3                  // Field forbidden:Lorg/aspectj/weaver/patterns/TypePatternList;
      40: invokevirtual #12                 // Method org/aspectj/weaver/patterns/TypePatternList.size:()I
      43: ifle          81
      46: new           #6                  // class java/lang/StringBuilder
      49: dup
      50: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      53: aload_1
      54: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc           #13                 // String  !(
      59: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: getfield      #3                  // Field forbidden:Lorg/aspectj/weaver/patterns/TypePatternList;
      66: invokevirtual #10                 // Method org/aspectj/weaver/patterns/TypePatternList.toString:()Ljava/lang/String;
      69: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: ldc           #14                 // String )
      74: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: astore_1
      81: aload_1
      82: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #15                 // class org/aspectj/weaver/patterns/ThrowsPattern
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #15                 // class org/aspectj/weaver/patterns/ThrowsPattern
      13: astore_2
      14: aload_2
      15: getfield      #2                  // Field required:Lorg/aspectj/weaver/patterns/TypePatternList;
      18: aload_0
      19: getfield      #2                  // Field required:Lorg/aspectj/weaver/patterns/TypePatternList;
      22: invokevirtual #16                 // Method org/aspectj/weaver/patterns/TypePatternList.equals:(Ljava/lang/Object;)Z
      25: ifeq          46
      28: aload_2
      29: getfield      #3                  // Field forbidden:Lorg/aspectj/weaver/patterns/TypePatternList;
      32: aload_0
      33: getfield      #3                  // Field forbidden:Lorg/aspectj/weaver/patterns/TypePatternList;
      36: invokevirtual #16                 // Method org/aspectj/weaver/patterns/TypePatternList.equals:(Ljava/lang/Object;)Z
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: istore_3
      48: iload_3
      49: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: istore_1
       3: bipush        37
       5: iload_1
       6: imul
       7: aload_0
       8: getfield      #2                  // Field required:Lorg/aspectj/weaver/patterns/TypePatternList;
      11: invokevirtual #17                 // Method org/aspectj/weaver/patterns/TypePatternList.hashCode:()I
      14: iadd
      15: istore_1
      16: bipush        37
      18: iload_1
      19: imul
      20: aload_0
      21: getfield      #3                  // Field forbidden:Lorg/aspectj/weaver/patterns/TypePatternList;
      24: invokevirtual #17                 // Method org/aspectj/weaver/patterns/TypePatternList.hashCode:()I
      27: iadd
      28: istore_1
      29: iload_1
      30: ireturn

  public org.aspectj.weaver.patterns.ThrowsPattern resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings);
    Code:
       0: aload_0
       1: getstatic     #4                  // Field ANY:Lorg/aspectj/weaver/patterns/ThrowsPattern;
       4: if_acmpne     9
       7: aload_0
       8: areturn
       9: aload_0
      10: aload_0
      11: getfield      #2                  // Field required:Lorg/aspectj/weaver/patterns/TypePatternList;
      14: aload_1
      15: aload_2
      16: iconst_0
      17: iconst_0
      18: invokevirtual #18                 // Method org/aspectj/weaver/patterns/TypePatternList.resolveBindings:(Lorg/aspectj/weaver/patterns/IScope;Lorg/aspectj/weaver/patterns/Bindings;ZZ)Lorg/aspectj/weaver/patterns/TypePatternList;
      21: putfield      #2                  // Field required:Lorg/aspectj/weaver/patterns/TypePatternList;
      24: aload_0
      25: aload_0
      26: getfield      #3                  // Field forbidden:Lorg/aspectj/weaver/patterns/TypePatternList;
      29: aload_1
      30: aload_2
      31: iconst_0
      32: iconst_0
      33: invokevirtual #18                 // Method org/aspectj/weaver/patterns/TypePatternList.resolveBindings:(Lorg/aspectj/weaver/patterns/IScope;Lorg/aspectj/weaver/patterns/Bindings;ZZ)Lorg/aspectj/weaver/patterns/TypePatternList;
      36: putfield      #3                  // Field forbidden:Lorg/aspectj/weaver/patterns/TypePatternList;
      39: aload_0
      40: areturn

  public org.aspectj.weaver.patterns.ThrowsPattern parameterizeWith(java.util.Map<java.lang.String, org.aspectj.weaver.UnresolvedType>, org.aspectj.weaver.World);
    Code:
       0: new           #15                 // class org/aspectj/weaver/patterns/ThrowsPattern
       3: dup
       4: aload_0
       5: getfield      #2                  // Field required:Lorg/aspectj/weaver/patterns/TypePatternList;
       8: aload_1
       9: aload_2
      10: invokevirtual #19                 // Method org/aspectj/weaver/patterns/TypePatternList.parameterizeWith:(Ljava/util/Map;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/patterns/TypePatternList;
      13: aload_0
      14: getfield      #3                  // Field forbidden:Lorg/aspectj/weaver/patterns/TypePatternList;
      17: aload_1
      18: aload_2
      19: invokevirtual #19                 // Method org/aspectj/weaver/patterns/TypePatternList.parameterizeWith:(Ljava/util/Map;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/patterns/TypePatternList;
      22: invokespecial #20                 // Method "<init>":(Lorg/aspectj/weaver/patterns/TypePatternList;Lorg/aspectj/weaver/patterns/TypePatternList;)V
      25: astore_3
      26: aload_3
      27: aload_0
      28: invokevirtual #21                 // Method copyLocationFrom:(Lorg/aspectj/weaver/patterns/PatternNode;)V
      31: aload_3
      32: areturn

  public boolean matches(org.aspectj.weaver.UnresolvedType[], org.aspectj.weaver.World);
    Code:
       0: aload_0
       1: getstatic     #4                  // Field ANY:Lorg/aspectj/weaver/patterns/ThrowsPattern;
       4: if_acmpne     9
       7: iconst_1
       8: ireturn
       9: aload_2
      10: aload_1
      11: invokevirtual #22                 // Method org/aspectj/weaver/World.resolve:([Lorg/aspectj/weaver/UnresolvedType;)[Lorg/aspectj/weaver/ResolvedType;
      14: astore_3
      15: iconst_0
      16: istore        4
      18: aload_0
      19: getfield      #2                  // Field required:Lorg/aspectj/weaver/patterns/TypePatternList;
      22: invokevirtual #12                 // Method org/aspectj/weaver/patterns/TypePatternList.size:()I
      25: istore        5
      27: iload         4
      29: iload         5
      31: if_icmpge     59
      34: aload_0
      35: aload_0
      36: getfield      #2                  // Field required:Lorg/aspectj/weaver/patterns/TypePatternList;
      39: iload         4
      41: invokevirtual #23                 // Method org/aspectj/weaver/patterns/TypePatternList.get:(I)Lorg/aspectj/weaver/patterns/TypePattern;
      44: aload_3
      45: invokespecial #24                 // Method matchesAny:(Lorg/aspectj/weaver/patterns/TypePattern;[Lorg/aspectj/weaver/ResolvedType;)Z
      48: ifne          53
      51: iconst_0
      52: ireturn
      53: iinc          4, 1
      56: goto          27
      59: iconst_0
      60: istore        4
      62: aload_0
      63: getfield      #3                  // Field forbidden:Lorg/aspectj/weaver/patterns/TypePatternList;
      66: invokevirtual #12                 // Method org/aspectj/weaver/patterns/TypePatternList.size:()I
      69: istore        5
      71: iload         4
      73: iload         5
      75: if_icmpge     103
      78: aload_0
      79: aload_0
      80: getfield      #3                  // Field forbidden:Lorg/aspectj/weaver/patterns/TypePatternList;
      83: iload         4
      85: invokevirtual #23                 // Method org/aspectj/weaver/patterns/TypePatternList.get:(I)Lorg/aspectj/weaver/patterns/TypePattern;
      88: aload_3
      89: invokespecial #24                 // Method matchesAny:(Lorg/aspectj/weaver/patterns/TypePattern;[Lorg/aspectj/weaver/ResolvedType;)Z
      92: ifeq          97
      95: iconst_0
      96: ireturn
      97: iinc          4, 1
     100: goto          71
     103: iconst_1
     104: ireturn

  private boolean matchesAny(org.aspectj.weaver.patterns.TypePattern, org.aspectj.weaver.ResolvedType[]);
    Code:
       0: aload_2
       1: arraylength
       2: iconst_1
       3: isub
       4: istore_3
       5: iload_3
       6: iflt          27
       9: aload_1
      10: aload_2
      11: iload_3
      12: aaload
      13: invokevirtual #25                 // Method org/aspectj/weaver/patterns/TypePattern.matchesStatically:(Lorg/aspectj/weaver/ResolvedType;)Z
      16: ifeq          21
      19: iconst_1
      20: ireturn
      21: iinc          3, -1
      24: goto          5
      27: iconst_0
      28: ireturn

  public static org.aspectj.weaver.patterns.ThrowsPattern read(org.aspectj.weaver.VersionedDataInputStream, org.aspectj.weaver.ISourceContext) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #26                 // Method org/aspectj/weaver/patterns/TypePatternList.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/TypePatternList;
       5: astore_2
       6: aload_0
       7: aload_1
       8: invokestatic  #26                 // Method org/aspectj/weaver/patterns/TypePatternList.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/TypePatternList;
      11: astore_3
      12: aload_2
      13: invokevirtual #12                 // Method org/aspectj/weaver/patterns/TypePatternList.size:()I
      16: ifne          30
      19: aload_3
      20: invokevirtual #12                 // Method org/aspectj/weaver/patterns/TypePatternList.size:()I
      23: ifne          30
      26: getstatic     #4                  // Field ANY:Lorg/aspectj/weaver/patterns/ThrowsPattern;
      29: areturn
      30: new           #15                 // class org/aspectj/weaver/patterns/ThrowsPattern
      33: dup
      34: aload_2
      35: aload_3
      36: invokespecial #20                 // Method "<init>":(Lorg/aspectj/weaver/patterns/TypePatternList;Lorg/aspectj/weaver/patterns/TypePatternList;)V
      39: astore        4
      41: aload         4
      43: areturn

  public void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field required:Lorg/aspectj/weaver/patterns/TypePatternList;
       4: aload_1
       5: invokevirtual #27                 // Method org/aspectj/weaver/patterns/TypePatternList.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
       8: aload_0
       9: getfield      #3                  // Field forbidden:Lorg/aspectj/weaver/patterns/TypePatternList;
      12: aload_1
      13: invokevirtual #27                 // Method org/aspectj/weaver/patterns/TypePatternList.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      16: return

  public java.lang.Object accept(org.aspectj.weaver.patterns.PatternNodeVisitor, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #28,  3           // InterfaceMethod org/aspectj/weaver/patterns/PatternNodeVisitor.visit:(Lorg/aspectj/weaver/patterns/ThrowsPattern;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public java.lang.Object traverse(org.aspectj.weaver.patterns.PatternNodeVisitor, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #29                 // Method accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
       6: astore_3
       7: aload_0
       8: getfield      #3                  // Field forbidden:Lorg/aspectj/weaver/patterns/TypePatternList;
      11: aload_1
      12: aload_2
      13: invokevirtual #30                 // Method org/aspectj/weaver/patterns/TypePatternList.traverse:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: aload_0
      18: getfield      #2                  // Field required:Lorg/aspectj/weaver/patterns/TypePatternList;
      21: aload_1
      22: aload_2
      23: invokevirtual #30                 // Method org/aspectj/weaver/patterns/TypePatternList.traverse:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: aload_3
      28: areturn

  static {};
    Code:
       0: new           #15                 // class org/aspectj/weaver/patterns/ThrowsPattern
       3: dup
       4: getstatic     #31                 // Field org/aspectj/weaver/patterns/TypePatternList.EMPTY:Lorg/aspectj/weaver/patterns/TypePatternList;
       7: getstatic     #31                 // Field org/aspectj/weaver/patterns/TypePatternList.EMPTY:Lorg/aspectj/weaver/patterns/TypePatternList;
      10: invokespecial #20                 // Method "<init>":(Lorg/aspectj/weaver/patterns/TypePatternList;Lorg/aspectj/weaver/patterns/TypePatternList;)V
      13: putstatic     #4                  // Field ANY:Lorg/aspectj/weaver/patterns/ThrowsPattern;
      16: return
}
