Compiled from "HandlerPointcut.java"
public class org.aspectj.weaver.patterns.HandlerPointcut extends org.aspectj.weaver.patterns.Pointcut {
  org.aspectj.weaver.patterns.TypePattern exceptionType;

  private static final int MATCH_KINDS;

  public org.aspectj.weaver.patterns.HandlerPointcut(org.aspectj.weaver.patterns.TypePattern);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/aspectj/weaver/patterns/Pointcut."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field exceptionType:Lorg/aspectj/weaver/patterns/TypePattern;
       9: aload_0
      10: bipush        13
      12: putfield      #4                  // Field pointcutKind:B
      15: return

  public int couldMatchKinds();
    Code:
       0: getstatic     #5                  // Field MATCH_KINDS:I
       3: ireturn

  public org.aspectj.util.FuzzyBoolean fastMatch(org.aspectj.weaver.patterns.FastMatchInfo);
    Code:
       0: getstatic     #6                  // Field org/aspectj/util/FuzzyBoolean.MAYBE:Lorg/aspectj/util/FuzzyBoolean;
       3: areturn

  protected org.aspectj.util.FuzzyBoolean matchInternal(org.aspectj.weaver.Shadow);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method org/aspectj/weaver/Shadow.getKind:()Lorg/aspectj/weaver/Shadow$Kind;
       4: getstatic     #8                  // Field org/aspectj/weaver/Shadow.ExceptionHandler:Lorg/aspectj/weaver/Shadow$Kind;
       7: if_acmpeq     14
      10: getstatic     #9                  // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
      13: areturn
      14: aload_0
      15: getfield      #2                  // Field exceptionType:Lorg/aspectj/weaver/patterns/TypePattern;
      18: aload_1
      19: invokevirtual #10                 // Method org/aspectj/weaver/Shadow.getIWorld:()Lorg/aspectj/weaver/World;
      22: invokevirtual #11                 // Method org/aspectj/weaver/patterns/TypePattern.resolve:(Lorg/aspectj/weaver/World;)V
      25: aload_0
      26: getfield      #2                  // Field exceptionType:Lorg/aspectj/weaver/patterns/TypePattern;
      29: aload_1
      30: invokevirtual #12                 // Method org/aspectj/weaver/Shadow.getSignature:()Lorg/aspectj/weaver/Member;
      33: invokeinterface #13,  1           // InterfaceMethod org/aspectj/weaver/Member.getParameterTypes:()[Lorg/aspectj/weaver/UnresolvedType;
      38: iconst_0
      39: aaload
      40: aload_1
      41: invokevirtual #10                 // Method org/aspectj/weaver/Shadow.getIWorld:()Lorg/aspectj/weaver/World;
      44: invokevirtual #14                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      47: getstatic     #15                 // Field org/aspectj/weaver/patterns/TypePattern.STATIC:Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;
      50: invokevirtual #16                 // Method org/aspectj/weaver/patterns/TypePattern.matches:(Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;)Lorg/aspectj/util/FuzzyBoolean;
      53: areturn

  public org.aspectj.weaver.patterns.Pointcut parameterizeWith(java.util.Map, org.aspectj.weaver.World);
    Code:
       0: new           #17                 // class org/aspectj/weaver/patterns/HandlerPointcut
       3: dup
       4: aload_0
       5: getfield      #2                  // Field exceptionType:Lorg/aspectj/weaver/patterns/TypePattern;
       8: aload_1
       9: aload_2
      10: invokevirtual #18                 // Method org/aspectj/weaver/patterns/TypePattern.parameterizeWith:(Ljava/util/Map;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/patterns/TypePattern;
      13: invokespecial #19                 // Method "<init>":(Lorg/aspectj/weaver/patterns/TypePattern;)V
      16: astore_3
      17: aload_3
      18: aload_0
      19: invokevirtual #20                 // Method copyLocationFrom:(Lorg/aspectj/weaver/patterns/PatternNode;)V
      22: aload_3
      23: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #17                 // class org/aspectj/weaver/patterns/HandlerPointcut
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #17                 // class org/aspectj/weaver/patterns/HandlerPointcut
      13: astore_2
      14: aload_2
      15: getfield      #2                  // Field exceptionType:Lorg/aspectj/weaver/patterns/TypePattern;
      18: aload_0
      19: getfield      #2                  // Field exceptionType:Lorg/aspectj/weaver/patterns/TypePattern;
      22: invokevirtual #21                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      25: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: istore_1
       3: bipush        37
       5: iload_1
       6: imul
       7: aload_0
       8: getfield      #2                  // Field exceptionType:Lorg/aspectj/weaver/patterns/TypePattern;
      11: invokevirtual #22                 // Method java/lang/Object.hashCode:()I
      14: iadd
      15: istore_1
      16: iload_1
      17: ireturn

  public java.lang.String toString();
    Code:
       0: new           #23                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #25                 // String handler(
      11: invokevirtual #26                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #2                  // Field exceptionType:Lorg/aspectj/weaver/patterns/TypePattern;
      20: invokevirtual #27                 // Method java/lang/Object.toString:()Ljava/lang/String;
      23: invokevirtual #26                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      26: pop
      27: aload_1
      28: ldc           #28                 // String )
      30: invokevirtual #26                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      33: pop
      34: aload_1
      35: invokevirtual #29                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      38: areturn

  public void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: bipush        13
       3: invokevirtual #30                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeByte:(I)V
       6: aload_0
       7: getfield      #2                  // Field exceptionType:Lorg/aspectj/weaver/patterns/TypePattern;
      10: aload_1
      11: invokevirtual #31                 // Method org/aspectj/weaver/patterns/TypePattern.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      14: aload_0
      15: aload_1
      16: invokevirtual #32                 // Method writeLocation:(Ljava/io/DataOutputStream;)V
      19: return

  public static org.aspectj.weaver.patterns.Pointcut read(org.aspectj.weaver.VersionedDataInputStream, org.aspectj.weaver.ISourceContext) throws java.io.IOException;
    Code:
       0: new           #17                 // class org/aspectj/weaver/patterns/HandlerPointcut
       3: dup
       4: aload_0
       5: aload_1
       6: invokestatic  #33                 // Method org/aspectj/weaver/patterns/TypePattern.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/TypePattern;
       9: invokespecial #19                 // Method "<init>":(Lorg/aspectj/weaver/patterns/TypePattern;)V
      12: astore_2
      13: aload_2
      14: aload_1
      15: aload_0
      16: invokevirtual #34                 // Method readLocation:(Lorg/aspectj/weaver/ISourceContext;Ljava/io/DataInputStream;)V
      19: aload_2
      20: areturn

  public void resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field exceptionType:Lorg/aspectj/weaver/patterns/TypePattern;
       5: aload_1
       6: aload_2
       7: iconst_0
       8: iconst_0
       9: invokevirtual #35                 // Method org/aspectj/weaver/patterns/TypePattern.resolveBindings:(Lorg/aspectj/weaver/patterns/IScope;Lorg/aspectj/weaver/patterns/Bindings;ZZ)Lorg/aspectj/weaver/patterns/TypePattern;
      12: putfield      #2                  // Field exceptionType:Lorg/aspectj/weaver/patterns/TypePattern;
      15: iconst_0
      16: istore_3
      17: aload_0
      18: getfield      #2                  // Field exceptionType:Lorg/aspectj/weaver/patterns/TypePattern;
      21: invokevirtual #36                 // Method org/aspectj/weaver/patterns/TypePattern.getTypeParameters:()Lorg/aspectj/weaver/patterns/TypePatternList;
      24: invokevirtual #37                 // Method org/aspectj/weaver/patterns/TypePatternList.size:()I
      27: ifle          32
      30: iconst_1
      31: istore_3
      32: aload_0
      33: getfield      #2                  // Field exceptionType:Lorg/aspectj/weaver/patterns/TypePattern;
      36: invokevirtual #38                 // Method org/aspectj/weaver/patterns/TypePattern.getExactType:()Lorg/aspectj/weaver/UnresolvedType;
      39: astore        4
      41: aload         4
      43: ifnull        56
      46: aload         4
      48: invokevirtual #39                 // Method org/aspectj/weaver/UnresolvedType.isParameterizedType:()Z
      51: ifeq          56
      54: iconst_1
      55: istore_3
      56: iload_3
      57: ifeq          78
      60: aload_1
      61: ldc           #41                 // String noParameterizedTypePatternInHandler
      63: invokestatic  #42                 // Method org/aspectj/weaver/WeaverMessages.format:(Ljava/lang/String;)Ljava/lang/String;
      66: aload_0
      67: invokevirtual #43                 // Method getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
      70: invokestatic  #44                 // Method org/aspectj/bridge/MessageUtil.error:(Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;)Lorg/aspectj/bridge/IMessage;
      73: invokeinterface #45,  2           // InterfaceMethod org/aspectj/weaver/patterns/IScope.message:(Lorg/aspectj/bridge/IMessage;)V
      78: return

  protected org.aspectj.weaver.ast.Test findResidueInternal(org.aspectj.weaver.Shadow, org.aspectj.weaver.patterns.ExposedState);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #46                 // Method match:(Lorg/aspectj/weaver/Shadow;)Lorg/aspectj/util/FuzzyBoolean;
       5: invokevirtual #47                 // Method org/aspectj/util/FuzzyBoolean.alwaysTrue:()Z
       8: ifeq          17
      11: getstatic     #48                 // Field org/aspectj/weaver/ast/Literal.TRUE:Lorg/aspectj/weaver/ast/Literal;
      14: goto          20
      17: getstatic     #49                 // Field org/aspectj/weaver/ast/Literal.FALSE:Lorg/aspectj/weaver/ast/Literal;
      20: areturn

  public org.aspectj.weaver.patterns.Pointcut concretize1(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.ResolvedType, org.aspectj.weaver.IntMap);
    Code:
       0: new           #17                 // class org/aspectj/weaver/patterns/HandlerPointcut
       3: dup
       4: aload_0
       5: getfield      #2                  // Field exceptionType:Lorg/aspectj/weaver/patterns/TypePattern;
       8: invokespecial #19                 // Method "<init>":(Lorg/aspectj/weaver/patterns/TypePattern;)V
      11: astore        4
      13: aload         4
      15: aload_0
      16: invokevirtual #50                 // Method org/aspectj/weaver/patterns/Pointcut.copyLocationFrom:(Lorg/aspectj/weaver/patterns/PatternNode;)V
      19: aload         4
      21: areturn

  public java.lang.Object accept(org.aspectj.weaver.patterns.PatternNodeVisitor, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #51,  3           // InterfaceMethod org/aspectj/weaver/patterns/PatternNodeVisitor.visit:(Lorg/aspectj/weaver/patterns/HandlerPointcut;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  static {};
    Code:
       0: getstatic     #8                  // Field org/aspectj/weaver/Shadow.ExceptionHandler:Lorg/aspectj/weaver/Shadow$Kind;
       3: getfield      #52                 // Field org/aspectj/weaver/Shadow$Kind.bit:I
       6: putstatic     #5                  // Field MATCH_KINDS:I
       9: return
}
