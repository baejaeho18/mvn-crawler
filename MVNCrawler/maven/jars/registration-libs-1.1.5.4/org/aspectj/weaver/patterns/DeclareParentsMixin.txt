Compiled from "DeclareParentsMixin.java"
public class org.aspectj.weaver.patterns.DeclareParentsMixin extends org.aspectj.weaver.patterns.DeclareParents {
  private int bitflags;

  public org.aspectj.weaver.patterns.DeclareParentsMixin(org.aspectj.weaver.patterns.TypePattern, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #1                  // Method org/aspectj/weaver/patterns/DeclareParents."<init>":(Lorg/aspectj/weaver/patterns/TypePattern;Ljava/util/List;Z)V
       7: aload_0
       8: iconst_0
       9: putfield      #2                  // Field bitflags:I
      12: return

  public org.aspectj.weaver.patterns.DeclareParentsMixin(org.aspectj.weaver.patterns.TypePattern, org.aspectj.weaver.patterns.TypePatternList);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #3                  // Method org/aspectj/weaver/patterns/DeclareParents."<init>":(Lorg/aspectj/weaver/patterns/TypePattern;Lorg/aspectj/weaver/patterns/TypePatternList;Z)V
       7: aload_0
       8: iconst_0
       9: putfield      #2                  // Field bitflags:I
      12: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #4                  // class org/aspectj/weaver/patterns/DeclareParentsMixin
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #4                  // class org/aspectj/weaver/patterns/DeclareParentsMixin
      13: astore_2
      14: aload_2
      15: getfield      #5                  // Field child:Lorg/aspectj/weaver/patterns/TypePattern;
      18: aload_0
      19: getfield      #5                  // Field child:Lorg/aspectj/weaver/patterns/TypePattern;
      22: invokevirtual #6                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      25: ifeq          57
      28: aload_2
      29: getfield      #7                  // Field parents:Lorg/aspectj/weaver/patterns/TypePatternList;
      32: aload_0
      33: getfield      #7                  // Field parents:Lorg/aspectj/weaver/patterns/TypePatternList;
      36: invokevirtual #8                  // Method org/aspectj/weaver/patterns/TypePatternList.equals:(Ljava/lang/Object;)Z
      39: ifeq          57
      42: aload_2
      43: getfield      #2                  // Field bitflags:I
      46: aload_0
      47: getfield      #2                  // Field bitflags:I
      50: if_icmpne     57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: ireturn

  public int hashCode();
    Code:
       0: bipush        23
       2: istore_1
       3: bipush        37
       5: iload_1
       6: imul
       7: aload_0
       8: getfield      #5                  // Field child:Lorg/aspectj/weaver/patterns/TypePattern;
      11: invokevirtual #9                  // Method java/lang/Object.hashCode:()I
      14: iadd
      15: istore_1
      16: bipush        37
      18: iload_1
      19: imul
      20: aload_0
      21: getfield      #7                  // Field parents:Lorg/aspectj/weaver/patterns/TypePatternList;
      24: invokevirtual #10                 // Method org/aspectj/weaver/patterns/TypePatternList.hashCode:()I
      27: iadd
      28: istore_1
      29: bipush        37
      31: iload_1
      32: imul
      33: aload_0
      34: getfield      #2                  // Field bitflags:I
      37: iadd
      38: istore_1
      39: iload_1
      40: ireturn

  public void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: bipush        6
       3: invokevirtual #12                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeByte:(I)V
       6: aload_0
       7: getfield      #5                  // Field child:Lorg/aspectj/weaver/patterns/TypePattern;
      10: aload_1
      11: invokevirtual #13                 // Method org/aspectj/weaver/patterns/TypePattern.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      14: aload_0
      15: getfield      #7                  // Field parents:Lorg/aspectj/weaver/patterns/TypePatternList;
      18: aload_1
      19: invokevirtual #14                 // Method org/aspectj/weaver/patterns/TypePatternList.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      22: aload_0
      23: aload_1
      24: invokevirtual #15                 // Method writeLocation:(Ljava/io/DataOutputStream;)V
      27: aload_1
      28: aload_0
      29: getfield      #2                  // Field bitflags:I
      32: invokevirtual #16                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeInt:(I)V
      35: return

  public static org.aspectj.weaver.patterns.Declare read(org.aspectj.weaver.VersionedDataInputStream, org.aspectj.weaver.ISourceContext) throws java.io.IOException;
    Code:
       0: new           #4                  // class org/aspectj/weaver/patterns/DeclareParentsMixin
       3: dup
       4: aload_0
       5: aload_1
       6: invokestatic  #17                 // Method org/aspectj/weaver/patterns/TypePattern.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/TypePattern;
       9: aload_0
      10: aload_1
      11: invokestatic  #18                 // Method org/aspectj/weaver/patterns/TypePatternList.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/TypePatternList;
      14: invokespecial #19                 // Method "<init>":(Lorg/aspectj/weaver/patterns/TypePattern;Lorg/aspectj/weaver/patterns/TypePatternList;)V
      17: astore_2
      18: aload_2
      19: aload_1
      20: aload_0
      21: invokevirtual #20                 // Method readLocation:(Lorg/aspectj/weaver/ISourceContext;Ljava/io/DataInputStream;)V
      24: aload_2
      25: aload_0
      26: invokevirtual #21                 // Method org/aspectj/weaver/VersionedDataInputStream.readInt:()I
      29: putfield      #2                  // Field bitflags:I
      32: aload_2
      33: areturn

  public java.lang.String toString();
    Code:
       0: new           #22                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #23                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #24                 // String declare parents mixin:
      11: invokevirtual #25                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #5                  // Field child:Lorg/aspectj/weaver/patterns/TypePattern;
      20: invokevirtual #26                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      23: pop
      24: aload_1
      25: ldc           #27                 // String  implements
      27: invokevirtual #25                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      30: pop
      31: aload_1
      32: aload_0
      33: getfield      #7                  // Field parents:Lorg/aspectj/weaver/patterns/TypePatternList;
      36: invokevirtual #26                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      39: pop
      40: aload_1
      41: ldc           #28                 // String ;
      43: invokevirtual #25                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      46: pop
      47: aload_1
      48: ldc           #29                 // String bits=0x
      50: invokevirtual #25                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      53: aload_0
      54: getfield      #2                  // Field bitflags:I
      57: invokestatic  #30                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      60: invokevirtual #25                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      63: pop
      64: aload_1
      65: invokevirtual #31                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      68: areturn

  public boolean isMixin();
    Code:
       0: iconst_1
       1: ireturn
}
