Compiled from "HasMemberTypePattern.java"
public class org.aspectj.weaver.patterns.HasMemberTypePattern extends org.aspectj.weaver.patterns.TypePattern {
  private org.aspectj.weaver.patterns.SignaturePattern signaturePattern;

  private static final java.lang.String declareAtPrefix;

  public org.aspectj.weaver.patterns.HasMemberTypePattern(org.aspectj.weaver.patterns.SignaturePattern);
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_0
       3: invokespecial #1                  // Method org/aspectj/weaver/patterns/TypePattern."<init>":(ZZ)V
       6: aload_0
       7: aload_1
       8: putfield      #2                  // Field signaturePattern:Lorg/aspectj/weaver/patterns/SignaturePattern;
      11: return

  protected boolean matchesExactly(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: getfield      #2                  // Field signaturePattern:Lorg/aspectj/weaver/patterns/SignaturePattern;
       4: invokevirtual #3                  // Method org/aspectj/weaver/patterns/SignaturePattern.getKind:()Lorg/aspectj/weaver/MemberKind;
       7: getstatic     #4                  // Field org/aspectj/weaver/Member.FIELD:Lorg/aspectj/weaver/MemberKind;
      10: if_acmpne     19
      13: aload_0
      14: aload_1
      15: invokespecial #5                  // Method hasField:(Lorg/aspectj/weaver/ResolvedType;)Z
      18: ireturn
      19: aload_0
      20: aload_1
      21: invokevirtual #6                  // Method hasMethod:(Lorg/aspectj/weaver/ResolvedType;)Z
      24: ireturn

  public org.aspectj.weaver.patterns.ISignaturePattern getSignaturePattern();
    Code:
       0: aload_0
       1: getfield      #2                  // Field signaturePattern:Lorg/aspectj/weaver/patterns/SignaturePattern;
       4: areturn

  private boolean hasField(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method org/aspectj/weaver/ResolvedType.getWorld:()Lorg/aspectj/weaver/World;
       4: astore_2
       5: aload_1
       6: invokevirtual #8                  // Method org/aspectj/weaver/ResolvedType.getFields:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          101
      19: aload_3
      20: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #11                 // class org/aspectj/weaver/Member
      28: astore        4
      30: aload         4
      32: invokeinterface #12,  1           // InterfaceMethod org/aspectj/weaver/Member.getName:()Ljava/lang/String;
      37: ldc           #14                 // String ajc$declare_at
      39: invokevirtual #15                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      42: ifeq          48
      45: goto          10
      48: aload_0
      49: getfield      #2                  // Field signaturePattern:Lorg/aspectj/weaver/patterns/SignaturePattern;
      52: aload         4
      54: aload_1
      55: invokevirtual #7                  // Method org/aspectj/weaver/ResolvedType.getWorld:()Lorg/aspectj/weaver/World;
      58: iconst_0
      59: invokevirtual #16                 // Method org/aspectj/weaver/patterns/SignaturePattern.matches:(Lorg/aspectj/weaver/Member;Lorg/aspectj/weaver/World;Z)Z
      62: ifeq          98
      65: aload         4
      67: invokeinterface #17,  1           // InterfaceMethod org/aspectj/weaver/Member.getDeclaringType:()Lorg/aspectj/weaver/UnresolvedType;
      72: aload_2
      73: invokevirtual #18                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      76: aload_1
      77: if_acmpeq     96
      80: aload         4
      82: invokeinterface #19,  1           // InterfaceMethod org/aspectj/weaver/Member.getModifiers:()I
      87: invokestatic  #20                 // Method java/lang/reflect/Modifier.isPrivate:(I)Z
      90: ifeq          96
      93: goto          10
      96: iconst_1
      97: ireturn
      98: goto          10
     101: iconst_0
     102: ireturn

  protected boolean hasMethod(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method org/aspectj/weaver/ResolvedType.getWorld:()Lorg/aspectj/weaver/World;
       4: astore_2
       5: aload_1
       6: iconst_1
       7: iconst_1
       8: invokevirtual #21                 // Method org/aspectj/weaver/ResolvedType.getMethods:(ZZ)Ljava/util/Iterator;
      11: astore_3
      12: aload_3
      13: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          103
      21: aload_3
      22: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #11                 // class org/aspectj/weaver/Member
      30: astore        4
      32: aload         4
      34: invokeinterface #12,  1           // InterfaceMethod org/aspectj/weaver/Member.getName:()Ljava/lang/String;
      39: ldc           #14                 // String ajc$declare_at
      41: invokevirtual #15                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      44: ifeq          50
      47: goto          12
      50: aload_0
      51: getfield      #2                  // Field signaturePattern:Lorg/aspectj/weaver/patterns/SignaturePattern;
      54: aload         4
      56: aload_1
      57: invokevirtual #7                  // Method org/aspectj/weaver/ResolvedType.getWorld:()Lorg/aspectj/weaver/World;
      60: iconst_0
      61: invokevirtual #16                 // Method org/aspectj/weaver/patterns/SignaturePattern.matches:(Lorg/aspectj/weaver/Member;Lorg/aspectj/weaver/World;Z)Z
      64: ifeq          100
      67: aload         4
      69: invokeinterface #17,  1           // InterfaceMethod org/aspectj/weaver/Member.getDeclaringType:()Lorg/aspectj/weaver/UnresolvedType;
      74: aload_2
      75: invokevirtual #18                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      78: aload_1
      79: if_acmpeq     98
      82: aload         4
      84: invokeinterface #19,  1           // InterfaceMethod org/aspectj/weaver/Member.getModifiers:()I
      89: invokestatic  #20                 // Method java/lang/reflect/Modifier.isPrivate:(I)Z
      92: ifeq          98
      95: goto          12
      98: iconst_1
      99: ireturn
     100: goto          12
     103: aload_1
     104: invokevirtual #22                 // Method org/aspectj/weaver/ResolvedType.getInterTypeMungersIncludingSupers:()Ljava/util/List;
     107: astore_3
     108: aload_3
     109: invokeinterface #23,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     114: astore        4
     116: aload         4
     118: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     123: ifeq          183
     126: aload         4
     128: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     133: checkcast     #24                 // class org/aspectj/weaver/ConcreteTypeMunger
     136: astore        5
     138: aload         5
     140: invokevirtual #25                 // Method org/aspectj/weaver/ConcreteTypeMunger.getSignature:()Lorg/aspectj/weaver/ResolvedMember;
     143: astore        6
     145: aload_0
     146: getfield      #2                  // Field signaturePattern:Lorg/aspectj/weaver/patterns/SignaturePattern;
     149: aload         6
     151: aload_1
     152: invokevirtual #7                  // Method org/aspectj/weaver/ResolvedType.getWorld:()Lorg/aspectj/weaver/World;
     155: iconst_0
     156: invokevirtual #16                 // Method org/aspectj/weaver/patterns/SignaturePattern.matches:(Lorg/aspectj/weaver/Member;Lorg/aspectj/weaver/World;Z)Z
     159: ifeq          180
     162: aload         6
     164: invokeinterface #19,  1           // InterfaceMethod org/aspectj/weaver/Member.getModifiers:()I
     169: invokestatic  #26                 // Method java/lang/reflect/Modifier.isPublic:(I)Z
     172: ifne          178
     175: goto          116
     178: iconst_1
     179: ireturn
     180: goto          116
     183: iconst_0
     184: ireturn

  protected boolean matchesExactly(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method matchesExactly:(Lorg/aspectj/weaver/ResolvedType;)Z
       5: ireturn

  public org.aspectj.util.FuzzyBoolean matchesInstanceof(org.aspectj.weaver.ResolvedType);
    Code:
       0: new           #28                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #29                 // String hasmethod/field do not support instanceof matching
       6: invokespecial #30                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.aspectj.weaver.patterns.TypePattern parameterizeWith(java.util.Map, org.aspectj.weaver.World);
    Code:
       0: new           #13                 // class org/aspectj/weaver/patterns/HasMemberTypePattern
       3: dup
       4: aload_0
       5: getfield      #2                  // Field signaturePattern:Lorg/aspectj/weaver/patterns/SignaturePattern;
       8: aload_1
       9: aload_2
      10: invokevirtual #31                 // Method org/aspectj/weaver/patterns/SignaturePattern.parameterizeWith:(Ljava/util/Map;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/patterns/SignaturePattern;
      13: invokespecial #32                 // Method "<init>":(Lorg/aspectj/weaver/patterns/SignaturePattern;)V
      16: astore_3
      17: aload_3
      18: aload_0
      19: invokevirtual #33                 // Method copyLocationFrom:(Lorg/aspectj/weaver/patterns/PatternNode;)V
      22: aload_3
      23: areturn

  public org.aspectj.weaver.patterns.TypePattern resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings, boolean, boolean);
    Code:
       0: aload_1
       1: invokeinterface #34,  1           // InterfaceMethod org/aspectj/weaver/patterns/IScope.getWorld:()Lorg/aspectj/weaver/World;
       6: invokevirtual #35                 // Method org/aspectj/weaver/World.isHasMemberSupportEnabled:()Z
       9: ifne          35
      12: ldc           #37                 // String hasMemberNotEnabled
      14: aload_0
      15: invokevirtual #38                 // Method toString:()Ljava/lang/String;
      18: invokestatic  #39                 // Method org/aspectj/weaver/WeaverMessages.format:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
      21: astore        5
      23: aload_1
      24: getstatic     #40                 // Field org/aspectj/bridge/IMessage.ERROR:Lorg/aspectj/bridge/IMessage$Kind;
      27: aload_0
      28: aload         5
      30: invokeinterface #41,  4           // InterfaceMethod org/aspectj/weaver/patterns/IScope.message:(Lorg/aspectj/bridge/IMessage$Kind;Lorg/aspectj/weaver/IHasPosition;Ljava/lang/String;)V
      35: aload_0
      36: getfield      #2                  // Field signaturePattern:Lorg/aspectj/weaver/patterns/SignaturePattern;
      39: aload_1
      40: aload_2
      41: invokevirtual #42                 // Method org/aspectj/weaver/patterns/SignaturePattern.resolveBindings:(Lorg/aspectj/weaver/patterns/IScope;Lorg/aspectj/weaver/patterns/Bindings;)Lorg/aspectj/weaver/patterns/SignaturePattern;
      44: pop
      45: aload_0
      46: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #13                 // class org/aspectj/weaver/patterns/HasMemberTypePattern
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_1
      11: if_acmpne     16
      14: iconst_1
      15: ireturn
      16: aload_0
      17: getfield      #2                  // Field signaturePattern:Lorg/aspectj/weaver/patterns/SignaturePattern;
      20: aload_1
      21: checkcast     #13                 // class org/aspectj/weaver/patterns/HasMemberTypePattern
      24: getfield      #2                  // Field signaturePattern:Lorg/aspectj/weaver/patterns/SignaturePattern;
      27: invokevirtual #43                 // Method org/aspectj/weaver/patterns/SignaturePattern.equals:(Ljava/lang/Object;)Z
      30: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field signaturePattern:Lorg/aspectj/weaver/patterns/SignaturePattern;
       4: invokevirtual #44                 // Method org/aspectj/weaver/patterns/SignaturePattern.hashCode:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: new           #45                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #46                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #2                  // Field signaturePattern:Lorg/aspectj/weaver/patterns/SignaturePattern;
      12: invokevirtual #3                  // Method org/aspectj/weaver/patterns/SignaturePattern.getKind:()Lorg/aspectj/weaver/MemberKind;
      15: getstatic     #4                  // Field org/aspectj/weaver/Member.FIELD:Lorg/aspectj/weaver/MemberKind;
      18: if_acmpne     31
      21: aload_1
      22: ldc           #47                 // String hasfield(
      24: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      27: pop
      28: goto          38
      31: aload_1
      32: ldc           #49                 // String hasmethod(
      34: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      37: pop
      38: aload_1
      39: aload_0
      40: getfield      #2                  // Field signaturePattern:Lorg/aspectj/weaver/patterns/SignaturePattern;
      43: invokevirtual #50                 // Method org/aspectj/weaver/patterns/SignaturePattern.toString:()Ljava/lang/String;
      46: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      49: pop
      50: aload_1
      51: ldc           #51                 // String )
      53: invokevirtual #48                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      56: pop
      57: aload_1
      58: invokevirtual #52                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      61: areturn

  public void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: bipush        11
       3: invokevirtual #54                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeByte:(I)V
       6: aload_0
       7: getfield      #2                  // Field signaturePattern:Lorg/aspectj/weaver/patterns/SignaturePattern;
      10: aload_1
      11: invokevirtual #55                 // Method org/aspectj/weaver/patterns/SignaturePattern.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      14: aload_0
      15: aload_1
      16: invokevirtual #56                 // Method writeLocation:(Ljava/io/DataOutputStream;)V
      19: return

  public static org.aspectj.weaver.patterns.TypePattern read(org.aspectj.weaver.VersionedDataInputStream, org.aspectj.weaver.ISourceContext) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #57                 // Method org/aspectj/weaver/patterns/SignaturePattern.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/SignaturePattern;
       5: astore_2
       6: new           #13                 // class org/aspectj/weaver/patterns/HasMemberTypePattern
       9: dup
      10: aload_2
      11: invokespecial #32                 // Method "<init>":(Lorg/aspectj/weaver/patterns/SignaturePattern;)V
      14: astore_3
      15: aload_3
      16: aload_1
      17: aload_0
      18: invokevirtual #58                 // Method readLocation:(Lorg/aspectj/weaver/ISourceContext;Ljava/io/DataInputStream;)V
      21: aload_3
      22: areturn

  public java.lang.Object accept(org.aspectj.weaver.patterns.PatternNodeVisitor, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #59,  3           // InterfaceMethod org/aspectj/weaver/patterns/PatternNodeVisitor.visit:(Lorg/aspectj/weaver/patterns/HasMemberTypePattern;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn
}
