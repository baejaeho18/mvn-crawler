Compiled from "NotSignaturePattern.java"
public class org.aspectj.weaver.patterns.NotSignaturePattern extends org.aspectj.weaver.patterns.AbstractSignaturePattern {
  private org.aspectj.weaver.patterns.ISignaturePattern negatedSp;

  public org.aspectj.weaver.patterns.NotSignaturePattern(org.aspectj.weaver.patterns.ISignaturePattern);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/aspectj/weaver/patterns/AbstractSignaturePattern."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field negatedSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
       9: return

  public boolean couldEverMatch(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: getfield      #2                  // Field negatedSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
       4: invokeinterface #3,  1            // InterfaceMethod org/aspectj/weaver/patterns/ISignaturePattern.getExactDeclaringTypes:()Ljava/util/List;
       9: invokeinterface #4,  1            // InterfaceMethod java/util/List.size:()I
      14: ifne          19
      17: iconst_1
      18: ireturn
      19: aload_0
      20: getfield      #2                  // Field negatedSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
      23: aload_1
      24: invokeinterface #5,  2            // InterfaceMethod org/aspectj/weaver/patterns/ISignaturePattern.couldEverMatch:(Lorg/aspectj/weaver/ResolvedType;)Z
      29: ifne          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  public java.util.List<org.aspectj.weaver.patterns.ExactTypePattern> getExactDeclaringTypes();
    Code:
       0: aload_0
       1: getfield      #2                  // Field negatedSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
       4: invokeinterface #3,  1            // InterfaceMethod org/aspectj/weaver/patterns/ISignaturePattern.getExactDeclaringTypes:()Ljava/util/List;
       9: areturn

  public boolean isMatchOnAnyName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field negatedSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
       4: invokeinterface #6,  1            // InterfaceMethod org/aspectj/weaver/patterns/ISignaturePattern.isMatchOnAnyName:()Z
       9: ireturn

  public boolean isStarAnnotation();
    Code:
       0: aload_0
       1: getfield      #2                  // Field negatedSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
       4: invokeinterface #7,  1            // InterfaceMethod org/aspectj/weaver/patterns/ISignaturePattern.isStarAnnotation:()Z
       9: ireturn

  public boolean matches(org.aspectj.weaver.Member, org.aspectj.weaver.World, boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field negatedSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokeinterface #8,  4            // InterfaceMethod org/aspectj/weaver/patterns/ISignaturePattern.matches:(Lorg/aspectj/weaver/Member;Lorg/aspectj/weaver/World;Z)Z
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public org.aspectj.weaver.patterns.ISignaturePattern parameterizeWith(java.util.Map<java.lang.String, org.aspectj.weaver.UnresolvedType>, org.aspectj.weaver.World);
    Code:
       0: new           #9                  // class org/aspectj/weaver/patterns/NotSignaturePattern
       3: dup
       4: aload_0
       5: getfield      #2                  // Field negatedSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
       8: aload_1
       9: aload_2
      10: invokeinterface #10,  3           // InterfaceMethod org/aspectj/weaver/patterns/ISignaturePattern.parameterizeWith:(Ljava/util/Map;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/patterns/ISignaturePattern;
      15: invokespecial #11                 // Method "<init>":(Lorg/aspectj/weaver/patterns/ISignaturePattern;)V
      18: areturn

  public org.aspectj.weaver.patterns.ISignaturePattern resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings);
    Code:
       0: aload_0
       1: getfield      #2                  // Field negatedSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
       4: aload_1
       5: aload_2
       6: invokeinterface #12,  3           // InterfaceMethod org/aspectj/weaver/patterns/ISignaturePattern.resolveBindings:(Lorg/aspectj/weaver/patterns/IScope;Lorg/aspectj/weaver/patterns/Bindings;)Lorg/aspectj/weaver/patterns/ISignaturePattern;
      11: pop
      12: aload_0
      13: areturn

  public static org.aspectj.weaver.patterns.ISignaturePattern readNotSignaturePattern(org.aspectj.weaver.VersionedDataInputStream, org.aspectj.weaver.ISourceContext) throws java.io.IOException;
    Code:
       0: new           #9                  // class org/aspectj/weaver/patterns/NotSignaturePattern
       3: dup
       4: aload_0
       5: aload_1
       6: invokestatic  #13                 // Method readCompoundSignaturePattern:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/ISignaturePattern;
       9: invokespecial #11                 // Method "<init>":(Lorg/aspectj/weaver/patterns/ISignaturePattern;)V
      12: astore_2
      13: aload_0
      14: invokevirtual #14                 // Method org/aspectj/weaver/VersionedDataInputStream.readInt:()I
      17: pop
      18: aload_0
      19: invokevirtual #14                 // Method org/aspectj/weaver/VersionedDataInputStream.readInt:()I
      22: pop
      23: aload_2
      24: areturn

  public org.aspectj.weaver.patterns.ISignaturePattern getNegated();
    Code:
       0: aload_0
       1: getfield      #2                  // Field negatedSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #17                 // String !
      11: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: getfield      #2                  // Field negatedSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
      18: invokevirtual #19                 // Method java/lang/Object.toString:()Ljava/lang/String;
      21: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: pop
      25: aload_1
      26: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn
}
