Compiled from "AnyAnnotationTypePattern.java"
public class org.aspectj.weaver.patterns.AnyAnnotationTypePattern extends org.aspectj.weaver.patterns.AnnotationTypePattern {
  public org.aspectj.weaver.patterns.AnyAnnotationTypePattern();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/aspectj/weaver/patterns/AnnotationTypePattern."<init>":()V
       4: return

  public org.aspectj.util.FuzzyBoolean fastMatches(org.aspectj.weaver.AnnotatedElement);
    Code:
       0: getstatic     #2                  // Field org/aspectj/util/FuzzyBoolean.YES:Lorg/aspectj/util/FuzzyBoolean;
       3: areturn

  public org.aspectj.util.FuzzyBoolean matches(org.aspectj.weaver.AnnotatedElement);
    Code:
       0: getstatic     #2                  // Field org/aspectj/util/FuzzyBoolean.YES:Lorg/aspectj/util/FuzzyBoolean;
       3: areturn

  public org.aspectj.util.FuzzyBoolean matches(org.aspectj.weaver.AnnotatedElement, org.aspectj.weaver.ResolvedType[]);
    Code:
       0: getstatic     #2                  // Field org/aspectj/util/FuzzyBoolean.YES:Lorg/aspectj/util/FuzzyBoolean;
       3: areturn

  public void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: bipush        7
       3: invokevirtual #4                  // Method org/aspectj/weaver/CompressingDataOutputStream.writeByte:(I)V
       6: return

  public void resolve(org.aspectj.weaver.World);
    Code:
       0: return

  public java.lang.String toString();
    Code:
       0: ldc           #5                  // String @ANY
       2: areturn

  public java.lang.Object accept(org.aspectj.weaver.patterns.PatternNodeVisitor, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #6,  3            // InterfaceMethod org/aspectj/weaver/patterns/PatternNodeVisitor.visit:(Lorg/aspectj/weaver/patterns/AnyAnnotationTypePattern;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public boolean isAny();
    Code:
       0: iconst_1
       1: ireturn

  public org.aspectj.weaver.patterns.AnnotationTypePattern parameterizeWith(java.util.Map, org.aspectj.weaver.World);
    Code:
       0: aload_0
       1: areturn

  public void setForParameterAnnotationMatch();
    Code:
       0: return
}
