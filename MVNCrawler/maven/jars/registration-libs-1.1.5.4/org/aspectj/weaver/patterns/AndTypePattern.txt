Compiled from "AndTypePattern.java"
public class org.aspectj.weaver.patterns.AndTypePattern extends org.aspectj.weaver.patterns.TypePattern {
  private org.aspectj.weaver.patterns.TypePattern left;

  private org.aspectj.weaver.patterns.TypePattern right;

  public org.aspectj.weaver.patterns.AndTypePattern(org.aspectj.weaver.patterns.TypePattern, org.aspectj.weaver.patterns.TypePattern);
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_0
       3: invokespecial #1                  // Method org/aspectj/weaver/patterns/TypePattern."<init>":(ZZ)V
       6: aload_0
       7: aload_1
       8: putfield      #2                  // Field left:Lorg/aspectj/weaver/patterns/TypePattern;
      11: aload_0
      12: aload_2
      13: putfield      #3                  // Field right:Lorg/aspectj/weaver/patterns/TypePattern;
      16: aload_0
      17: aload_1
      18: invokevirtual #4                  // Method org/aspectj/weaver/patterns/TypePattern.getSourceContext:()Lorg/aspectj/weaver/ISourceContext;
      21: aload_1
      22: invokevirtual #5                  // Method org/aspectj/weaver/patterns/TypePattern.getStart:()I
      25: aload_2
      26: invokevirtual #6                  // Method org/aspectj/weaver/patterns/TypePattern.getEnd:()I
      29: invokevirtual #7                  // Method setLocation:(Lorg/aspectj/weaver/ISourceContext;II)V
      32: return

  protected boolean couldEverMatchSameTypesAs(org.aspectj.weaver.patterns.TypePattern);
    Code:
       0: iconst_1
       1: ireturn

  public org.aspectj.util.FuzzyBoolean matchesInstanceof(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: getfield      #2                  // Field left:Lorg/aspectj/weaver/patterns/TypePattern;
       4: aload_1
       5: invokevirtual #8                  // Method org/aspectj/weaver/patterns/TypePattern.matchesInstanceof:(Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/util/FuzzyBoolean;
       8: aload_0
       9: getfield      #3                  // Field right:Lorg/aspectj/weaver/patterns/TypePattern;
      12: aload_1
      13: invokevirtual #8                  // Method org/aspectj/weaver/patterns/TypePattern.matchesInstanceof:(Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/util/FuzzyBoolean;
      16: invokevirtual #9                  // Method org/aspectj/util/FuzzyBoolean.and:(Lorg/aspectj/util/FuzzyBoolean;)Lorg/aspectj/util/FuzzyBoolean;
      19: areturn

  protected boolean matchesExactly(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: getfield      #2                  // Field left:Lorg/aspectj/weaver/patterns/TypePattern;
       4: aload_1
       5: invokevirtual #10                 // Method org/aspectj/weaver/patterns/TypePattern.matchesExactly:(Lorg/aspectj/weaver/ResolvedType;)Z
       8: ifeq          26
      11: aload_0
      12: getfield      #3                  // Field right:Lorg/aspectj/weaver/patterns/TypePattern;
      15: aload_1
      16: invokevirtual #10                 // Method org/aspectj/weaver/patterns/TypePattern.matchesExactly:(Lorg/aspectj/weaver/ResolvedType;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  protected boolean matchesExactly(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: getfield      #2                  // Field left:Lorg/aspectj/weaver/patterns/TypePattern;
       4: aload_1
       5: aload_2
       6: invokevirtual #11                 // Method org/aspectj/weaver/patterns/TypePattern.matchesExactly:(Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/ResolvedType;)Z
       9: ifeq          28
      12: aload_0
      13: getfield      #3                  // Field right:Lorg/aspectj/weaver/patterns/TypePattern;
      16: aload_1
      17: aload_2
      18: invokevirtual #11                 // Method org/aspectj/weaver/patterns/TypePattern.matchesExactly:(Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/ResolvedType;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public boolean matchesStatically(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: getfield      #2                  // Field left:Lorg/aspectj/weaver/patterns/TypePattern;
       4: aload_1
       5: invokevirtual #12                 // Method org/aspectj/weaver/patterns/TypePattern.matchesStatically:(Lorg/aspectj/weaver/ResolvedType;)Z
       8: ifeq          26
      11: aload_0
      12: getfield      #3                  // Field right:Lorg/aspectj/weaver/patterns/TypePattern;
      15: aload_1
      16: invokevirtual #12                 // Method org/aspectj/weaver/patterns/TypePattern.matchesStatically:(Lorg/aspectj/weaver/ResolvedType;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public void setIsVarArgs(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field isVarArgs:Z
       5: aload_0
       6: getfield      #2                  // Field left:Lorg/aspectj/weaver/patterns/TypePattern;
       9: iload_1
      10: invokevirtual #14                 // Method org/aspectj/weaver/patterns/TypePattern.setIsVarArgs:(Z)V
      13: aload_0
      14: getfield      #3                  // Field right:Lorg/aspectj/weaver/patterns/TypePattern;
      17: iload_1
      18: invokevirtual #14                 // Method org/aspectj/weaver/patterns/TypePattern.setIsVarArgs:(Z)V
      21: return

  public void setAnnotationTypePattern(org.aspectj.weaver.patterns.AnnotationTypePattern);
    Code:
       0: aload_1
       1: getstatic     #15                 // Field org/aspectj/weaver/patterns/AnnotationTypePattern.ANY:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       4: if_acmpne     8
       7: return
       8: aload_0
       9: getfield      #2                  // Field left:Lorg/aspectj/weaver/patterns/TypePattern;
      12: getfield      #16                 // Field org/aspectj/weaver/patterns/TypePattern.annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      15: getstatic     #15                 // Field org/aspectj/weaver/patterns/AnnotationTypePattern.ANY:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      18: if_acmpne     32
      21: aload_0
      22: getfield      #2                  // Field left:Lorg/aspectj/weaver/patterns/TypePattern;
      25: aload_1
      26: invokevirtual #17                 // Method org/aspectj/weaver/patterns/TypePattern.setAnnotationTypePattern:(Lorg/aspectj/weaver/patterns/AnnotationTypePattern;)V
      29: goto          54
      32: aload_0
      33: getfield      #2                  // Field left:Lorg/aspectj/weaver/patterns/TypePattern;
      36: new           #18                 // class org/aspectj/weaver/patterns/AndAnnotationTypePattern
      39: dup
      40: aload_0
      41: getfield      #2                  // Field left:Lorg/aspectj/weaver/patterns/TypePattern;
      44: getfield      #16                 // Field org/aspectj/weaver/patterns/TypePattern.annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      47: aload_1
      48: invokespecial #19                 // Method org/aspectj/weaver/patterns/AndAnnotationTypePattern."<init>":(Lorg/aspectj/weaver/patterns/AnnotationTypePattern;Lorg/aspectj/weaver/patterns/AnnotationTypePattern;)V
      51: invokevirtual #17                 // Method org/aspectj/weaver/patterns/TypePattern.setAnnotationTypePattern:(Lorg/aspectj/weaver/patterns/AnnotationTypePattern;)V
      54: aload_0
      55: getfield      #3                  // Field right:Lorg/aspectj/weaver/patterns/TypePattern;
      58: getfield      #16                 // Field org/aspectj/weaver/patterns/TypePattern.annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      61: getstatic     #15                 // Field org/aspectj/weaver/patterns/AnnotationTypePattern.ANY:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      64: if_acmpne     78
      67: aload_0
      68: getfield      #3                  // Field right:Lorg/aspectj/weaver/patterns/TypePattern;
      71: aload_1
      72: invokevirtual #17                 // Method org/aspectj/weaver/patterns/TypePattern.setAnnotationTypePattern:(Lorg/aspectj/weaver/patterns/AnnotationTypePattern;)V
      75: goto          100
      78: aload_0
      79: getfield      #3                  // Field right:Lorg/aspectj/weaver/patterns/TypePattern;
      82: new           #18                 // class org/aspectj/weaver/patterns/AndAnnotationTypePattern
      85: dup
      86: aload_0
      87: getfield      #3                  // Field right:Lorg/aspectj/weaver/patterns/TypePattern;
      90: getfield      #16                 // Field org/aspectj/weaver/patterns/TypePattern.annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      93: aload_1
      94: invokespecial #19                 // Method org/aspectj/weaver/patterns/AndAnnotationTypePattern."<init>":(Lorg/aspectj/weaver/patterns/AnnotationTypePattern;Lorg/aspectj/weaver/patterns/AnnotationTypePattern;)V
      97: invokevirtual #17                 // Method org/aspectj/weaver/patterns/TypePattern.setAnnotationTypePattern:(Lorg/aspectj/weaver/patterns/AnnotationTypePattern;)V
     100: return

  public void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: bipush        8
       3: invokevirtual #21                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeByte:(I)V
       6: aload_0
       7: getfield      #2                  // Field left:Lorg/aspectj/weaver/patterns/TypePattern;
      10: aload_1
      11: invokevirtual #22                 // Method org/aspectj/weaver/patterns/TypePattern.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      14: aload_0
      15: getfield      #3                  // Field right:Lorg/aspectj/weaver/patterns/TypePattern;
      18: aload_1
      19: invokevirtual #22                 // Method org/aspectj/weaver/patterns/TypePattern.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      22: aload_0
      23: aload_1
      24: invokevirtual #23                 // Method writeLocation:(Ljava/io/DataOutputStream;)V
      27: return

  public static org.aspectj.weaver.patterns.TypePattern read(org.aspectj.weaver.VersionedDataInputStream, org.aspectj.weaver.ISourceContext) throws java.io.IOException;
    Code:
       0: new           #24                 // class org/aspectj/weaver/patterns/AndTypePattern
       3: dup
       4: aload_0
       5: aload_1
       6: invokestatic  #25                 // Method org/aspectj/weaver/patterns/TypePattern.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/TypePattern;
       9: aload_0
      10: aload_1
      11: invokestatic  #25                 // Method org/aspectj/weaver/patterns/TypePattern.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/TypePattern;
      14: invokespecial #26                 // Method "<init>":(Lorg/aspectj/weaver/patterns/TypePattern;Lorg/aspectj/weaver/patterns/TypePattern;)V
      17: astore_2
      18: aload_2
      19: aload_1
      20: aload_0
      21: invokevirtual #27                 // Method readLocation:(Lorg/aspectj/weaver/ISourceContext;Ljava/io/DataInputStream;)V
      24: aload_2
      25: getfield      #2                  // Field left:Lorg/aspectj/weaver/patterns/TypePattern;
      28: getfield      #28                 // Field org/aspectj/weaver/patterns/TypePattern.isVarArgs:Z
      31: ifeq          49
      34: aload_2
      35: getfield      #3                  // Field right:Lorg/aspectj/weaver/patterns/TypePattern;
      38: getfield      #28                 // Field org/aspectj/weaver/patterns/TypePattern.isVarArgs:Z
      41: ifeq          49
      44: aload_2
      45: iconst_1
      46: putfield      #13                 // Field isVarArgs:Z
      49: aload_2
      50: areturn

  public org.aspectj.weaver.patterns.TypePattern resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings, boolean, boolean);
    Code:
       0: iload         4
       2: ifeq          11
       5: aload_0
       6: aload_1
       7: invokevirtual #29                 // Method notExactType:(Lorg/aspectj/weaver/patterns/IScope;)Lorg/aspectj/weaver/patterns/TypePattern;
      10: areturn
      11: aload_0
      12: aload_0
      13: getfield      #2                  // Field left:Lorg/aspectj/weaver/patterns/TypePattern;
      16: aload_1
      17: aload_2
      18: iconst_0
      19: iconst_0
      20: invokevirtual #30                 // Method org/aspectj/weaver/patterns/TypePattern.resolveBindings:(Lorg/aspectj/weaver/patterns/IScope;Lorg/aspectj/weaver/patterns/Bindings;ZZ)Lorg/aspectj/weaver/patterns/TypePattern;
      23: putfield      #2                  // Field left:Lorg/aspectj/weaver/patterns/TypePattern;
      26: aload_0
      27: aload_0
      28: getfield      #3                  // Field right:Lorg/aspectj/weaver/patterns/TypePattern;
      31: aload_1
      32: aload_2
      33: iconst_0
      34: iconst_0
      35: invokevirtual #30                 // Method org/aspectj/weaver/patterns/TypePattern.resolveBindings:(Lorg/aspectj/weaver/patterns/IScope;Lorg/aspectj/weaver/patterns/Bindings;ZZ)Lorg/aspectj/weaver/patterns/TypePattern;
      38: putfield      #3                  // Field right:Lorg/aspectj/weaver/patterns/TypePattern;
      41: aload_0
      42: areturn

  public org.aspectj.weaver.patterns.TypePattern parameterizeWith(java.util.Map, org.aspectj.weaver.World);
    Code:
       0: aload_0
       1: getfield      #2                  // Field left:Lorg/aspectj/weaver/patterns/TypePattern;
       4: aload_1
       5: aload_2
       6: invokevirtual #31                 // Method org/aspectj/weaver/patterns/TypePattern.parameterizeWith:(Ljava/util/Map;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/patterns/TypePattern;
       9: astore_3
      10: aload_0
      11: getfield      #3                  // Field right:Lorg/aspectj/weaver/patterns/TypePattern;
      14: aload_1
      15: aload_2
      16: invokevirtual #31                 // Method org/aspectj/weaver/patterns/TypePattern.parameterizeWith:(Ljava/util/Map;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/patterns/TypePattern;
      19: astore        4
      21: new           #24                 // class org/aspectj/weaver/patterns/AndTypePattern
      24: dup
      25: aload_3
      26: aload         4
      28: invokespecial #26                 // Method "<init>":(Lorg/aspectj/weaver/patterns/TypePattern;Lorg/aspectj/weaver/patterns/TypePattern;)V
      31: astore        5
      33: aload         5
      35: aload_0
      36: invokevirtual #32                 // Method copyLocationFrom:(Lorg/aspectj/weaver/patterns/PatternNode;)V
      39: aload         5
      41: areturn

  public java.lang.String toString();
    Code:
       0: new           #33                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #34                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #35                 // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      12: getstatic     #15                 // Field org/aspectj/weaver/patterns/AnnotationTypePattern.ANY:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      15: if_acmpeq     44
      18: aload_1
      19: bipush        40
      21: invokevirtual #36                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      24: pop
      25: aload_1
      26: aload_0
      27: getfield      #35                 // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      30: invokevirtual #37                 // Method java/lang/Object.toString:()Ljava/lang/String;
      33: invokevirtual #38                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      36: pop
      37: aload_1
      38: bipush        32
      40: invokevirtual #36                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      43: pop
      44: aload_1
      45: bipush        40
      47: invokevirtual #36                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      50: pop
      51: aload_1
      52: aload_0
      53: getfield      #2                  // Field left:Lorg/aspectj/weaver/patterns/TypePattern;
      56: invokevirtual #37                 // Method java/lang/Object.toString:()Ljava/lang/String;
      59: invokevirtual #38                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      62: pop
      63: aload_1
      64: ldc           #39                 // String  &&
      66: invokevirtual #38                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      69: pop
      70: aload_1
      71: aload_0
      72: getfield      #3                  // Field right:Lorg/aspectj/weaver/patterns/TypePattern;
      75: invokevirtual #37                 // Method java/lang/Object.toString:()Ljava/lang/String;
      78: invokevirtual #38                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      81: pop
      82: aload_1
      83: bipush        41
      85: invokevirtual #36                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      88: pop
      89: aload_0
      90: getfield      #35                 // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      93: getstatic     #15                 // Field org/aspectj/weaver/patterns/AnnotationTypePattern.ANY:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      96: if_acmpeq     106
      99: aload_1
     100: bipush        41
     102: invokevirtual #36                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     105: pop
     106: aload_1
     107: invokevirtual #40                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     110: areturn

  public org.aspectj.weaver.patterns.TypePattern getLeft();
    Code:
       0: aload_0
       1: getfield      #2                  // Field left:Lorg/aspectj/weaver/patterns/TypePattern;
       4: areturn

  public org.aspectj.weaver.patterns.TypePattern getRight();
    Code:
       0: aload_0
       1: getfield      #3                  // Field right:Lorg/aspectj/weaver/patterns/TypePattern;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #24                 // class org/aspectj/weaver/patterns/AndTypePattern
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #24                 // class org/aspectj/weaver/patterns/AndTypePattern
      13: astore_2
      14: aload_0
      15: getfield      #2                  // Field left:Lorg/aspectj/weaver/patterns/TypePattern;
      18: aload_2
      19: getfield      #2                  // Field left:Lorg/aspectj/weaver/patterns/TypePattern;
      22: invokevirtual #41                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      25: ifeq          46
      28: aload_0
      29: getfield      #3                  // Field right:Lorg/aspectj/weaver/patterns/TypePattern;
      32: aload_2
      33: getfield      #3                  // Field right:Lorg/aspectj/weaver/patterns/TypePattern;
      36: invokevirtual #41                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  public boolean isStarAnnotation();
    Code:
       0: aload_0
       1: getfield      #2                  // Field left:Lorg/aspectj/weaver/patterns/TypePattern;
       4: invokevirtual #42                 // Method org/aspectj/weaver/patterns/TypePattern.isStarAnnotation:()Z
       7: ifeq          24
      10: aload_0
      11: getfield      #3                  // Field right:Lorg/aspectj/weaver/patterns/TypePattern;
      14: invokevirtual #42                 // Method org/aspectj/weaver/patterns/TypePattern.isStarAnnotation:()Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: istore_1
       3: iload_1
       4: bipush        37
       6: aload_0
       7: getfield      #2                  // Field left:Lorg/aspectj/weaver/patterns/TypePattern;
      10: invokevirtual #43                 // Method java/lang/Object.hashCode:()I
      13: imul
      14: iadd
      15: istore_1
      16: iload_1
      17: bipush        37
      19: aload_0
      20: getfield      #3                  // Field right:Lorg/aspectj/weaver/patterns/TypePattern;
      23: invokevirtual #43                 // Method java/lang/Object.hashCode:()I
      26: imul
      27: iadd
      28: istore_1
      29: iload_1
      30: ireturn

  public java.lang.Object accept(org.aspectj.weaver.patterns.PatternNodeVisitor, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #44,  3           // InterfaceMethod org/aspectj/weaver/patterns/PatternNodeVisitor.visit:(Lorg/aspectj/weaver/patterns/AndTypePattern;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public java.lang.Object traverse(org.aspectj.weaver.patterns.PatternNodeVisitor, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #45                 // Method accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
       6: astore_3
       7: aload_0
       8: getfield      #2                  // Field left:Lorg/aspectj/weaver/patterns/TypePattern;
      11: aload_1
      12: aload_3
      13: invokevirtual #46                 // Method org/aspectj/weaver/patterns/TypePattern.traverse:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: aload_0
      18: getfield      #3                  // Field right:Lorg/aspectj/weaver/patterns/TypePattern;
      21: aload_1
      22: aload_3
      23: invokevirtual #46                 // Method org/aspectj/weaver/patterns/TypePattern.traverse:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: aload_3
      28: areturn
}
