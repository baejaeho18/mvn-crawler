Compiled from "TypeVariablePattern.java"
public class org.aspectj.weaver.patterns.TypeVariablePattern extends org.aspectj.weaver.patterns.PatternNode {
  private static final java.lang.String anything;

  private java.lang.String name;

  private org.aspectj.weaver.patterns.TypePattern upperBound;

  private org.aspectj.weaver.patterns.TypePattern[] interfaceBounds;

  private org.aspectj.weaver.patterns.TypePattern lowerBound;

  public org.aspectj.weaver.patterns.TypeVariablePattern(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/aspectj/weaver/patterns/PatternNode."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: aload_0
      10: new           #3                  // class org/aspectj/weaver/patterns/ExactTypePattern
      13: dup
      14: getstatic     #4                  // Field org/aspectj/weaver/UnresolvedType.OBJECT:Lorg/aspectj/weaver/UnresolvedType;
      17: iconst_0
      18: iconst_0
      19: invokespecial #5                  // Method org/aspectj/weaver/patterns/ExactTypePattern."<init>":(Lorg/aspectj/weaver/UnresolvedType;ZZ)V
      22: putfield      #6                  // Field upperBound:Lorg/aspectj/weaver/patterns/TypePattern;
      25: aload_0
      26: aconst_null
      27: putfield      #7                  // Field lowerBound:Lorg/aspectj/weaver/patterns/TypePattern;
      30: aload_0
      31: aconst_null
      32: putfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
      35: return

  public org.aspectj.weaver.patterns.TypeVariablePattern(java.lang.String, org.aspectj.weaver.patterns.TypePattern);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/aspectj/weaver/patterns/PatternNode."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #6                  // Field upperBound:Lorg/aspectj/weaver/patterns/TypePattern;
      14: aload_0
      15: aconst_null
      16: putfield      #7                  // Field lowerBound:Lorg/aspectj/weaver/patterns/TypePattern;
      19: aload_0
      20: aconst_null
      21: putfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
      24: return

  public org.aspectj.weaver.patterns.TypeVariablePattern(java.lang.String, org.aspectj.weaver.patterns.TypePattern, org.aspectj.weaver.patterns.TypePattern[], org.aspectj.weaver.patterns.TypePattern);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/aspectj/weaver/patterns/PatternNode."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #6                  // Field upperBound:Lorg/aspectj/weaver/patterns/TypePattern;
      14: aload_0
      15: getfield      #6                  // Field upperBound:Lorg/aspectj/weaver/patterns/TypePattern;
      18: ifnonnull     37
      21: aload_0
      22: new           #3                  // class org/aspectj/weaver/patterns/ExactTypePattern
      25: dup
      26: getstatic     #4                  // Field org/aspectj/weaver/UnresolvedType.OBJECT:Lorg/aspectj/weaver/UnresolvedType;
      29: iconst_0
      30: iconst_0
      31: invokespecial #5                  // Method org/aspectj/weaver/patterns/ExactTypePattern."<init>":(Lorg/aspectj/weaver/UnresolvedType;ZZ)V
      34: putfield      #6                  // Field upperBound:Lorg/aspectj/weaver/patterns/TypePattern;
      37: aload_0
      38: aload_3
      39: putfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
      42: aload_0
      43: aload         4
      45: putfield      #7                  // Field lowerBound:Lorg/aspectj/weaver/patterns/TypePattern;
      48: return

  public java.lang.Object accept(org.aspectj.weaver.patterns.PatternNodeVisitor, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #9,  3            // InterfaceMethod org/aspectj/weaver/patterns/PatternNodeVisitor.visit:(Lorg/aspectj/weaver/patterns/TypeVariablePattern;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  public boolean isAnythingPattern();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: ldc           #11                 // String ?
       6: invokevirtual #12                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ireturn

  public org.aspectj.weaver.patterns.TypePattern getRawTypePattern();
    Code:
       0: aload_0
       1: getfield      #6                  // Field upperBound:Lorg/aspectj/weaver/patterns/TypePattern;
       4: areturn

  public org.aspectj.weaver.patterns.TypePattern getUpperBound();
    Code:
       0: aload_0
       1: getfield      #6                  // Field upperBound:Lorg/aspectj/weaver/patterns/TypePattern;
       4: areturn

  public boolean hasLowerBound();
    Code:
       0: aload_0
       1: getfield      #7                  // Field lowerBound:Lorg/aspectj/weaver/patterns/TypePattern;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public org.aspectj.weaver.patterns.TypePattern getLowerBound();
    Code:
       0: aload_0
       1: getfield      #7                  // Field lowerBound:Lorg/aspectj/weaver/patterns/TypePattern;
       4: areturn

  public boolean hasAdditionalInterfaceBounds();
    Code:
       0: aload_0
       1: getfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public org.aspectj.weaver.patterns.TypePattern[] getAdditionalInterfaceBounds();
    Code:
       0: aload_0
       1: getfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
       4: ifnull        12
       7: aload_0
       8: getfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
      11: areturn
      12: iconst_0
      13: anewarray     #13                 // class org/aspectj/weaver/patterns/TypePattern
      16: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #10                 // class org/aspectj/weaver/patterns/TypeVariablePattern
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #10                 // class org/aspectj/weaver/patterns/TypeVariablePattern
      13: astore_2
      14: aload_0
      15: getfield      #2                  // Field name:Ljava/lang/String;
      18: aload_2
      19: getfield      #2                  // Field name:Ljava/lang/String;
      22: invokevirtual #12                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      25: ifne          30
      28: iconst_0
      29: ireturn
      30: aload_0
      31: getfield      #6                  // Field upperBound:Lorg/aspectj/weaver/patterns/TypePattern;
      34: aload_2
      35: getfield      #6                  // Field upperBound:Lorg/aspectj/weaver/patterns/TypePattern;
      38: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      41: ifne          46
      44: iconst_0
      45: ireturn
      46: aload_0
      47: getfield      #7                  // Field lowerBound:Lorg/aspectj/weaver/patterns/TypePattern;
      50: ifnull        78
      53: aload_2
      54: getfield      #7                  // Field lowerBound:Lorg/aspectj/weaver/patterns/TypePattern;
      57: ifnonnull     62
      60: iconst_0
      61: ireturn
      62: aload_0
      63: getfield      #7                  // Field lowerBound:Lorg/aspectj/weaver/patterns/TypePattern;
      66: aload_2
      67: getfield      #7                  // Field lowerBound:Lorg/aspectj/weaver/patterns/TypePattern;
      70: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      73: ifne          87
      76: iconst_0
      77: ireturn
      78: aload_2
      79: getfield      #7                  // Field lowerBound:Lorg/aspectj/weaver/patterns/TypePattern;
      82: ifnull        87
      85: iconst_0
      86: ireturn
      87: aload_0
      88: getfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
      91: ifnull        158
      94: aload_2
      95: getfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
      98: ifnonnull     103
     101: iconst_0
     102: ireturn
     103: aload_0
     104: getfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
     107: arraylength
     108: aload_2
     109: getfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
     112: arraylength
     113: if_icmpeq     118
     116: iconst_0
     117: ireturn
     118: iconst_0
     119: istore_3
     120: iload_3
     121: aload_0
     122: getfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
     125: arraylength
     126: if_icmpge     155
     129: aload_0
     130: getfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
     133: iload_3
     134: aaload
     135: aload_2
     136: getfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
     139: iload_3
     140: aaload
     141: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     144: ifne          149
     147: iconst_0
     148: ireturn
     149: iinc          3, 1
     152: goto          120
     155: goto          167
     158: aload_2
     159: getfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
     162: ifnull        167
     165: iconst_0
     166: ireturn
     167: iconst_1
     168: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: bipush        37
       4: aload_0
       5: getfield      #2                  // Field name:Ljava/lang/String;
       8: invokevirtual #15                 // Method java/lang/String.hashCode:()I
      11: imul
      12: iadd
      13: istore_1
      14: iload_1
      15: bipush        37
      17: imul
      18: aload_0
      19: getfield      #6                  // Field upperBound:Lorg/aspectj/weaver/patterns/TypePattern;
      22: invokevirtual #16                 // Method java/lang/Object.hashCode:()I
      25: iadd
      26: istore_1
      27: aload_0
      28: getfield      #7                  // Field lowerBound:Lorg/aspectj/weaver/patterns/TypePattern;
      31: ifnull        47
      34: iload_1
      35: bipush        37
      37: imul
      38: aload_0
      39: getfield      #7                  // Field lowerBound:Lorg/aspectj/weaver/patterns/TypePattern;
      42: invokevirtual #16                 // Method java/lang/Object.hashCode:()I
      45: iadd
      46: istore_1
      47: aload_0
      48: getfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
      51: ifnull        86
      54: iconst_0
      55: istore_2
      56: iload_2
      57: aload_0
      58: getfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
      61: arraylength
      62: if_icmpge     86
      65: bipush        37
      67: iload_1
      68: imul
      69: aload_0
      70: getfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
      73: iload_2
      74: aaload
      75: invokevirtual #16                 // Method java/lang/Object.hashCode:()I
      78: iadd
      79: istore_1
      80: iinc          2, 1
      83: goto          56
      86: iload_1
      87: ireturn

  public java.lang.String toString();
    Code:
       0: new           #17                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #18                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field name:Ljava/lang/String;
      13: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      16: pop
      17: aload_1
      18: aload_0
      19: invokespecial #20                 // Method getExtendsClause:()Ljava/lang/String;
      22: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      25: pop
      26: aload_0
      27: getfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
      30: ifnull        87
      33: aload_1
      34: ldc           #21                 // String  &
      36: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      39: pop
      40: iconst_0
      41: istore_2
      42: iload_2
      43: aload_0
      44: getfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
      47: arraylength
      48: if_icmpge     87
      51: aload_1
      52: aload_0
      53: getfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
      56: iload_2
      57: aaload
      58: invokevirtual #22                 // Method java/lang/Object.toString:()Ljava/lang/String;
      61: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      64: pop
      65: iload_2
      66: aload_0
      67: getfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
      70: arraylength
      71: if_icmpge     81
      74: aload_1
      75: ldc           #23                 // String ,
      77: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      80: pop
      81: iinc          2, 1
      84: goto          42
      87: aload_0
      88: getfield      #7                  // Field lowerBound:Lorg/aspectj/weaver/patterns/TypePattern;
      91: ifnull        113
      94: aload_1
      95: ldc           #24                 // String  super
      97: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     100: pop
     101: aload_1
     102: aload_0
     103: getfield      #7                  // Field lowerBound:Lorg/aspectj/weaver/patterns/TypePattern;
     106: invokevirtual #22                 // Method java/lang/Object.toString:()Ljava/lang/String;
     109: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     112: pop
     113: aload_1
     114: invokevirtual #25                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     117: areturn

  private java.lang.String getExtendsClause();
    Code:
       0: aload_0
       1: getfield      #6                  // Field upperBound:Lorg/aspectj/weaver/patterns/TypePattern;
       4: instanceof    #3                  // class org/aspectj/weaver/patterns/ExactTypePattern
       7: ifeq          31
      10: aload_0
      11: getfield      #6                  // Field upperBound:Lorg/aspectj/weaver/patterns/TypePattern;
      14: checkcast     #3                  // class org/aspectj/weaver/patterns/ExactTypePattern
      17: astore_1
      18: aload_1
      19: getfield      #26                 // Field org/aspectj/weaver/patterns/ExactTypePattern.type:Lorg/aspectj/weaver/UnresolvedType;
      22: getstatic     #4                  // Field org/aspectj/weaver/UnresolvedType.OBJECT:Lorg/aspectj/weaver/UnresolvedType;
      25: if_acmpne     31
      28: ldc           #27                 // String
      30: areturn
      31: new           #28                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #30                 // String  extends
      40: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: getfield      #6                  // Field upperBound:Lorg/aspectj/weaver/patterns/TypePattern;
      47: invokevirtual #22                 // Method java/lang/Object.toString:()Ljava/lang/String;
      50: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: areturn

  public void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field name:Ljava/lang/String;
       5: invokevirtual #33                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeUTF:(Ljava/lang/String;)V
       8: aload_0
       9: getfield      #6                  // Field upperBound:Lorg/aspectj/weaver/patterns/TypePattern;
      12: aload_1
      13: invokevirtual #34                 // Method org/aspectj/weaver/patterns/TypePattern.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      16: aload_0
      17: getfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
      20: ifnonnull     31
      23: aload_1
      24: iconst_0
      25: invokevirtual #35                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeInt:(I)V
      28: goto          67
      31: aload_1
      32: aload_0
      33: getfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
      36: arraylength
      37: invokevirtual #35                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeInt:(I)V
      40: iconst_0
      41: istore_2
      42: iload_2
      43: aload_0
      44: getfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
      47: arraylength
      48: if_icmpge     67
      51: aload_0
      52: getfield      #8                  // Field interfaceBounds:[Lorg/aspectj/weaver/patterns/TypePattern;
      55: iload_2
      56: aaload
      57: aload_1
      58: invokevirtual #34                 // Method org/aspectj/weaver/patterns/TypePattern.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      61: iinc          2, 1
      64: goto          42
      67: aload_1
      68: aload_0
      69: invokevirtual #36                 // Method hasLowerBound:()Z
      72: invokevirtual #37                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeBoolean:(Z)V
      75: aload_0
      76: invokevirtual #36                 // Method hasLowerBound:()Z
      79: ifeq          90
      82: aload_0
      83: getfield      #7                  // Field lowerBound:Lorg/aspectj/weaver/patterns/TypePattern;
      86: aload_1
      87: invokevirtual #34                 // Method org/aspectj/weaver/patterns/TypePattern.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      90: aload_0
      91: aload_1
      92: invokevirtual #38                 // Method writeLocation:(Ljava/io/DataOutputStream;)V
      95: return

  public static org.aspectj.weaver.patterns.TypeVariablePattern read(org.aspectj.weaver.VersionedDataInputStream, org.aspectj.weaver.ISourceContext) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokevirtual #39                 // Method org/aspectj/weaver/VersionedDataInputStream.readUTF:()Ljava/lang/String;
       6: astore_3
       7: aload_0
       8: aload_1
       9: invokestatic  #40                 // Method org/aspectj/weaver/patterns/TypePattern.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/TypePattern;
      12: astore        4
      14: aconst_null
      15: astore        5
      17: aload_0
      18: invokevirtual #41                 // Method org/aspectj/weaver/VersionedDataInputStream.readInt:()I
      21: istore        6
      23: iload         6
      25: ifle          62
      28: iload         6
      30: anewarray     #13                 // class org/aspectj/weaver/patterns/TypePattern
      33: astore        5
      35: iconst_0
      36: istore        7
      38: iload         7
      40: aload         5
      42: arraylength
      43: if_icmpge     62
      46: aload         5
      48: iload         7
      50: aload_0
      51: aload_1
      52: invokestatic  #40                 // Method org/aspectj/weaver/patterns/TypePattern.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/TypePattern;
      55: aastore
      56: iinc          7, 1
      59: goto          38
      62: aload_0
      63: invokevirtual #42                 // Method org/aspectj/weaver/VersionedDataInputStream.readBoolean:()Z
      66: istore        7
      68: aconst_null
      69: astore        8
      71: iload         7
      73: ifeq          83
      76: aload_0
      77: aload_1
      78: invokestatic  #40                 // Method org/aspectj/weaver/patterns/TypePattern.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/TypePattern;
      81: astore        8
      83: new           #10                 // class org/aspectj/weaver/patterns/TypeVariablePattern
      86: dup
      87: aload_3
      88: aload         4
      90: aload         5
      92: aload         8
      94: invokespecial #43                 // Method "<init>":(Ljava/lang/String;Lorg/aspectj/weaver/patterns/TypePattern;[Lorg/aspectj/weaver/patterns/TypePattern;Lorg/aspectj/weaver/patterns/TypePattern;)V
      97: astore_2
      98: aload_2
      99: aload_1
     100: aload_0
     101: invokevirtual #44                 // Method readLocation:(Lorg/aspectj/weaver/ISourceContext;Ljava/io/DataInputStream;)V
     104: aload_2
     105: areturn
}
