Compiled from "TypePatternList.java"
public class org.aspectj.weaver.patterns.TypePatternList extends org.aspectj.weaver.patterns.PatternNode {
  private org.aspectj.weaver.patterns.TypePattern[] typePatterns;

  int ellipsisCount;

  public static final org.aspectj.weaver.patterns.TypePatternList EMPTY;

  public static final org.aspectj.weaver.patterns.TypePatternList ANY;

  public org.aspectj.weaver.patterns.TypePatternList();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/aspectj/weaver/patterns/PatternNode."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field ellipsisCount:I
       9: aload_0
      10: iconst_0
      11: anewarray     #3                  // class org/aspectj/weaver/patterns/TypePattern
      14: putfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      17: aload_0
      18: iconst_0
      19: putfield      #2                  // Field ellipsisCount:I
      22: return

  public org.aspectj.weaver.patterns.TypePatternList(org.aspectj.weaver.patterns.TypePattern[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/aspectj/weaver/patterns/PatternNode."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field ellipsisCount:I
       9: aload_0
      10: aload_1
      11: putfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      14: iconst_0
      15: istore_2
      16: iload_2
      17: aload_1
      18: arraylength
      19: if_icmpge     47
      22: aload_1
      23: iload_2
      24: aaload
      25: getstatic     #5                  // Field org/aspectj/weaver/patterns/TypePattern.ELLIPSIS:Lorg/aspectj/weaver/patterns/TypePattern;
      28: if_acmpne     41
      31: aload_0
      32: dup
      33: getfield      #2                  // Field ellipsisCount:I
      36: iconst_1
      37: iadd
      38: putfield      #2                  // Field ellipsisCount:I
      41: iinc          2, 1
      44: goto          16
      47: return

  public org.aspectj.weaver.patterns.TypePatternList(java.util.List<org.aspectj.weaver.patterns.TypePattern>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokeinterface #6,  1            // InterfaceMethod java/util/List.size:()I
       8: anewarray     #3                  // class org/aspectj/weaver/patterns/TypePattern
      11: invokeinterface #7,  2            // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      16: checkcast     #8                  // class "[Lorg/aspectj/weaver/patterns/TypePattern;"
      19: checkcast     #8                  // class "[Lorg/aspectj/weaver/patterns/TypePattern;"
      22: invokespecial #9                  // Method "<init>":([Lorg/aspectj/weaver/patterns/TypePattern;)V
      25: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
       4: arraylength
       5: ireturn

  public org.aspectj.weaver.patterns.TypePattern get(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
       4: iload_1
       5: aaload
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #10                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #12                 // String (
      11: invokevirtual #13                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      14: pop
      15: iconst_0
      16: istore_2
      17: aload_0
      18: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      21: arraylength
      22: istore_3
      23: iload_2
      24: iload_3
      25: if_icmpge     81
      28: aload_0
      29: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      32: iload_2
      33: aaload
      34: astore        4
      36: iload_2
      37: ifle          47
      40: aload_1
      41: ldc           #14                 // String ,
      43: invokevirtual #13                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      46: pop
      47: aload         4
      49: getstatic     #5                  // Field org/aspectj/weaver/patterns/TypePattern.ELLIPSIS:Lorg/aspectj/weaver/patterns/TypePattern;
      52: if_acmpne     65
      55: aload_1
      56: ldc           #15                 // String ..
      58: invokevirtual #13                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      61: pop
      62: goto          75
      65: aload_1
      66: aload         4
      68: invokevirtual #16                 // Method java/lang/Object.toString:()Ljava/lang/String;
      71: invokevirtual #13                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      74: pop
      75: iinc          2, 1
      78: goto          23
      81: aload_1
      82: ldc           #17                 // String )
      84: invokevirtual #13                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      87: pop
      88: aload_1
      89: invokevirtual #18                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      92: areturn

  public boolean canMatchSignatureWithNParameters(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ellipsisCount:I
       4: ifne          21
       7: iload_1
       8: aload_0
       9: invokevirtual #19                 // Method size:()I
      12: if_icmpne     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn
      21: aload_0
      22: invokevirtual #19                 // Method size:()I
      25: aload_0
      26: getfield      #2                  // Field ellipsisCount:I
      29: isub
      30: iload_1
      31: if_icmpgt     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn

  public org.aspectj.util.FuzzyBoolean matches(org.aspectj.weaver.ResolvedType[], org.aspectj.weaver.patterns.TypePattern$MatchKind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: checkcast     #20                 // class "[[Lorg/aspectj/weaver/ResolvedType;"
       7: invokevirtual #21                 // Method matches:([Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;[[Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/util/FuzzyBoolean;
      10: areturn

  public org.aspectj.util.FuzzyBoolean matches(org.aspectj.weaver.ResolvedType[], org.aspectj.weaver.patterns.TypePattern$MatchKind, org.aspectj.weaver.ResolvedType[][]);
    Code:
       0: aload_1
       1: arraylength
       2: istore        4
       4: aload_0
       5: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
       8: arraylength
       9: istore        5
      11: iconst_0
      12: istore        6
      14: iconst_0
      15: istore        7
      17: aload_0
      18: getfield      #2                  // Field ellipsisCount:I
      21: ifne          139
      24: iload         4
      26: iload         5
      28: if_icmpeq     35
      31: getstatic     #22                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
      34: areturn
      35: getstatic     #23                 // Field org/aspectj/util/FuzzyBoolean.YES:Lorg/aspectj/util/FuzzyBoolean;
      38: astore        8
      40: iload         7
      42: iload         5
      44: if_icmpge     136
      47: aload_1
      48: iload         6
      50: aaload
      51: astore        9
      53: aconst_null
      54: astore        10
      56: aload_3
      57: ifnull        69
      60: aload         9
      62: aload_3
      63: iload         6
      65: aaload
      66: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
      69: aload_0
      70: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      73: iload         7
      75: aaload
      76: aload         9
      78: aload_2
      79: invokevirtual #25                 // Method org/aspectj/weaver/patterns/TypePattern.matches:(Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;)Lorg/aspectj/util/FuzzyBoolean;
      82: astore        10
      84: aload         9
      86: aconst_null
      87: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
      90: goto          104
      93: astore        11
      95: aload         9
      97: aconst_null
      98: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
     101: aload         11
     103: athrow
     104: iinc          7, 1
     107: iinc          6, 1
     110: aload         10
     112: getstatic     #22                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
     115: if_acmpne     121
     118: aload         10
     120: areturn
     121: aload         10
     123: getstatic     #26                 // Field org/aspectj/util/FuzzyBoolean.MAYBE:Lorg/aspectj/util/FuzzyBoolean;
     126: if_acmpne     133
     129: aload         10
     131: astore        8
     133: goto          40
     136: aload         8
     138: areturn
     139: aload_0
     140: getfield      #2                  // Field ellipsisCount:I
     143: iconst_1
     144: if_icmpne     289
     147: iload         4
     149: iload         5
     151: iconst_1
     152: isub
     153: if_icmpge     160
     156: getstatic     #22                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
     159: areturn
     160: getstatic     #23                 // Field org/aspectj/util/FuzzyBoolean.YES:Lorg/aspectj/util/FuzzyBoolean;
     163: astore        8
     165: iload         7
     167: iload         5
     169: if_icmpge     286
     172: aload_0
     173: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
     176: iload         7
     178: iinc          7, 1
     181: aaload
     182: astore        9
     184: aload         9
     186: getstatic     #5                  // Field org/aspectj/weaver/patterns/TypePattern.ELLIPSIS:Lorg/aspectj/weaver/patterns/TypePattern;
     189: if_acmpne     205
     192: iload         4
     194: iload         5
     196: iload         7
     198: isub
     199: isub
     200: istore        6
     202: goto          283
     205: aload_1
     206: iload         6
     208: aaload
     209: astore        10
     211: aconst_null
     212: astore        11
     214: aload_3
     215: ifnull        227
     218: aload         10
     220: aload_3
     221: iload         6
     223: aaload
     224: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
     227: aload         9
     229: aload         10
     231: aload_2
     232: invokevirtual #25                 // Method org/aspectj/weaver/patterns/TypePattern.matches:(Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;)Lorg/aspectj/util/FuzzyBoolean;
     235: astore        11
     237: aload         10
     239: aconst_null
     240: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
     243: goto          257
     246: astore        12
     248: aload         10
     250: aconst_null
     251: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
     254: aload         12
     256: athrow
     257: iinc          6, 1
     260: aload         11
     262: getstatic     #22                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
     265: if_acmpne     271
     268: aload         11
     270: areturn
     271: aload         11
     273: getstatic     #26                 // Field org/aspectj/util/FuzzyBoolean.MAYBE:Lorg/aspectj/util/FuzzyBoolean;
     276: if_acmpne     283
     279: aload         11
     281: astore        8
     283: goto          165
     286: aload         8
     288: areturn
     289: aload_0
     290: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
     293: aload_1
     294: iconst_0
     295: iconst_0
     296: iload         5
     298: aload_0
     299: getfield      #2                  // Field ellipsisCount:I
     302: isub
     303: iload         4
     305: aload_0
     306: getfield      #2                  // Field ellipsisCount:I
     309: aload_2
     310: aload_3
     311: invokestatic  #27                 // Method outOfStar:([Lorg/aspectj/weaver/patterns/TypePattern;[Lorg/aspectj/weaver/ResolvedType;IIIIILorg/aspectj/weaver/patterns/TypePattern$MatchKind;[[Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/util/FuzzyBoolean;
     314: astore        8
     316: aload         8
     318: areturn
    Exception table:
       from    to  target type
          56    84    93   any
          93    95    93   any
         214   237   246   any
         246   248   246   any

  private static org.aspectj.util.FuzzyBoolean outOfStar(org.aspectj.weaver.patterns.TypePattern[], org.aspectj.weaver.ResolvedType[], int, int, int, int, int, org.aspectj.weaver.patterns.TypePattern$MatchKind, org.aspectj.weaver.ResolvedType[][]);
    Code:
       0: iload         4
       2: iload         5
       4: if_icmple     11
       7: getstatic     #22                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
      10: areturn
      11: getstatic     #23                 // Field org/aspectj/util/FuzzyBoolean.YES:Lorg/aspectj/util/FuzzyBoolean;
      14: astore        9
      16: iload         5
      18: ifne          24
      21: aload         9
      23: areturn
      24: iload         4
      26: ifne          41
      29: iload         6
      31: ifle          37
      34: aload         9
      36: areturn
      37: getstatic     #22                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
      40: areturn
      41: aload_0
      42: iload_2
      43: aaload
      44: getstatic     #5                  // Field org/aspectj/weaver/patterns/TypePattern.ELLIPSIS:Lorg/aspectj/weaver/patterns/TypePattern;
      47: if_acmpne     72
      50: aload_0
      51: aload_1
      52: iload_2
      53: iconst_1
      54: iadd
      55: iload_3
      56: iload         4
      58: iload         5
      60: iload         6
      62: iconst_1
      63: isub
      64: aload         7
      66: aload         8
      68: invokestatic  #28                 // Method inStar:([Lorg/aspectj/weaver/patterns/TypePattern;[Lorg/aspectj/weaver/ResolvedType;IIIIILorg/aspectj/weaver/patterns/TypePattern$MatchKind;[[Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/util/FuzzyBoolean;
      71: areturn
      72: aconst_null
      73: astore        10
      75: aload         8
      77: ifnull        90
      80: aload_1
      81: iload_3
      82: aaload
      83: aload         8
      85: iload_3
      86: aaload
      87: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
      90: aload_0
      91: iload_2
      92: aaload
      93: aload_1
      94: iload_3
      95: aaload
      96: aload         7
      98: invokevirtual #25                 // Method org/aspectj/weaver/patterns/TypePattern.matches:(Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;)Lorg/aspectj/util/FuzzyBoolean;
     101: astore        10
     103: aload_1
     104: iload_3
     105: aaload
     106: aconst_null
     107: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
     110: goto          125
     113: astore        11
     115: aload_1
     116: iload_3
     117: aaload
     118: aconst_null
     119: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
     122: aload         11
     124: athrow
     125: aload         10
     127: getstatic     #22                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
     130: if_acmpne     136
     133: aload         10
     135: areturn
     136: aload         10
     138: getstatic     #26                 // Field org/aspectj/util/FuzzyBoolean.MAYBE:Lorg/aspectj/util/FuzzyBoolean;
     141: if_acmpne     148
     144: aload         10
     146: astore        9
     148: iinc          2, 1
     151: iinc          3, 1
     154: iinc          4, -1
     157: iinc          5, -1
     160: goto          16
    Exception table:
       from    to  target type
          75   103   113   any
         113   115   113   any

  private static org.aspectj.util.FuzzyBoolean inStar(org.aspectj.weaver.patterns.TypePattern[], org.aspectj.weaver.ResolvedType[], int, int, int, int, int, org.aspectj.weaver.patterns.TypePattern$MatchKind, org.aspectj.weaver.ResolvedType[][]);
    Code:
       0: aload_0
       1: iload_2
       2: aaload
       3: astore        9
       5: aload         9
       7: getstatic     #5                  // Field org/aspectj/weaver/patterns/TypePattern.ELLIPSIS:Lorg/aspectj/weaver/patterns/TypePattern;
      10: if_acmpne     27
      13: iinc          6, -1
      16: aload_0
      17: iinc          2, 1
      20: iload_2
      21: aaload
      22: astore        9
      24: goto          5
      27: iload         4
      29: iload         5
      31: if_icmple     38
      34: getstatic     #22                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
      37: areturn
      38: aconst_null
      39: astore        10
      41: aload         8
      43: ifnull        56
      46: aload_1
      47: iload_3
      48: aaload
      49: aload         8
      51: iload_3
      52: aaload
      53: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
      56: aload         9
      58: aload_1
      59: iload_3
      60: aaload
      61: aload         7
      63: invokevirtual #25                 // Method org/aspectj/weaver/patterns/TypePattern.matches:(Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;)Lorg/aspectj/util/FuzzyBoolean;
      66: astore        10
      68: aload_1
      69: iload_3
      70: aaload
      71: aconst_null
      72: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
      75: goto          90
      78: astore        11
      80: aload_1
      81: iload_3
      82: aaload
      83: aconst_null
      84: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
      87: aload         11
      89: athrow
      90: aload         10
      92: invokevirtual #29                 // Method org/aspectj/util/FuzzyBoolean.maybeTrue:()Z
      95: ifeq          141
      98: aload_0
      99: aload_1
     100: iload_2
     101: iconst_1
     102: iadd
     103: iload_3
     104: iconst_1
     105: iadd
     106: iload         4
     108: iconst_1
     109: isub
     110: iload         5
     112: iconst_1
     113: isub
     114: iload         6
     116: aload         7
     118: aload         8
     120: invokestatic  #27                 // Method outOfStar:([Lorg/aspectj/weaver/patterns/TypePattern;[Lorg/aspectj/weaver/ResolvedType;IIIIILorg/aspectj/weaver/patterns/TypePattern$MatchKind;[[Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/util/FuzzyBoolean;
     123: astore        11
     125: aload         11
     127: invokevirtual #29                 // Method org/aspectj/util/FuzzyBoolean.maybeTrue:()Z
     130: ifeq          141
     133: aload         10
     135: aload         11
     137: invokevirtual #30                 // Method org/aspectj/util/FuzzyBoolean.and:(Lorg/aspectj/util/FuzzyBoolean;)Lorg/aspectj/util/FuzzyBoolean;
     140: areturn
     141: iinc          3, 1
     144: iinc          5, -1
     147: goto          27
    Exception table:
       from    to  target type
          41    68    78   any
          78    80    78   any

  public org.aspectj.util.FuzzyBoolean matches(org.aspectj.weaver.ResolvableTypeList, org.aspectj.weaver.patterns.TypePattern$MatchKind, org.aspectj.weaver.ResolvedType[][]);
    Code:
       0: aload_1
       1: getfield      #31                 // Field org/aspectj/weaver/ResolvableTypeList.length:I
       4: istore        4
       6: aload_0
       7: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      10: arraylength
      11: istore        5
      13: iconst_0
      14: istore        6
      16: iconst_0
      17: istore        7
      19: aload_0
      20: getfield      #2                  // Field ellipsisCount:I
      23: ifne          143
      26: iload         4
      28: iload         5
      30: if_icmpeq     37
      33: getstatic     #22                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
      36: areturn
      37: getstatic     #23                 // Field org/aspectj/util/FuzzyBoolean.YES:Lorg/aspectj/util/FuzzyBoolean;
      40: astore        8
      42: iload         7
      44: iload         5
      46: if_icmpge     140
      49: aload_1
      50: iload         6
      52: invokevirtual #32                 // Method org/aspectj/weaver/ResolvableTypeList.getResolved:(I)Lorg/aspectj/weaver/ResolvedType;
      55: astore        9
      57: aconst_null
      58: astore        10
      60: aload_3
      61: ifnull        73
      64: aload         9
      66: aload_3
      67: iload         6
      69: aaload
      70: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
      73: aload_0
      74: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      77: iload         7
      79: aaload
      80: aload         9
      82: aload_2
      83: invokevirtual #25                 // Method org/aspectj/weaver/patterns/TypePattern.matches:(Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;)Lorg/aspectj/util/FuzzyBoolean;
      86: astore        10
      88: aload         9
      90: aconst_null
      91: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
      94: goto          108
      97: astore        11
      99: aload         9
     101: aconst_null
     102: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
     105: aload         11
     107: athrow
     108: iinc          7, 1
     111: iinc          6, 1
     114: aload         10
     116: getstatic     #22                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
     119: if_acmpne     125
     122: aload         10
     124: areturn
     125: aload         10
     127: getstatic     #26                 // Field org/aspectj/util/FuzzyBoolean.MAYBE:Lorg/aspectj/util/FuzzyBoolean;
     130: if_acmpne     137
     133: aload         10
     135: astore        8
     137: goto          42
     140: aload         8
     142: areturn
     143: aload_0
     144: getfield      #2                  // Field ellipsisCount:I
     147: iconst_1
     148: if_icmpne     295
     151: iload         4
     153: iload         5
     155: iconst_1
     156: isub
     157: if_icmpge     164
     160: getstatic     #22                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
     163: areturn
     164: getstatic     #23                 // Field org/aspectj/util/FuzzyBoolean.YES:Lorg/aspectj/util/FuzzyBoolean;
     167: astore        8
     169: iload         7
     171: iload         5
     173: if_icmpge     292
     176: aload_0
     177: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
     180: iload         7
     182: iinc          7, 1
     185: aaload
     186: astore        9
     188: aload         9
     190: getstatic     #5                  // Field org/aspectj/weaver/patterns/TypePattern.ELLIPSIS:Lorg/aspectj/weaver/patterns/TypePattern;
     193: if_acmpne     209
     196: iload         4
     198: iload         5
     200: iload         7
     202: isub
     203: isub
     204: istore        6
     206: goto          289
     209: aload_1
     210: iload         6
     212: invokevirtual #32                 // Method org/aspectj/weaver/ResolvableTypeList.getResolved:(I)Lorg/aspectj/weaver/ResolvedType;
     215: astore        10
     217: aconst_null
     218: astore        11
     220: aload_3
     221: ifnull        233
     224: aload         10
     226: aload_3
     227: iload         6
     229: aaload
     230: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
     233: aload         9
     235: aload         10
     237: aload_2
     238: invokevirtual #25                 // Method org/aspectj/weaver/patterns/TypePattern.matches:(Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;)Lorg/aspectj/util/FuzzyBoolean;
     241: astore        11
     243: aload         10
     245: aconst_null
     246: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
     249: goto          263
     252: astore        12
     254: aload         10
     256: aconst_null
     257: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
     260: aload         12
     262: athrow
     263: iinc          6, 1
     266: aload         11
     268: getstatic     #22                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
     271: if_acmpne     277
     274: aload         11
     276: areturn
     277: aload         11
     279: getstatic     #26                 // Field org/aspectj/util/FuzzyBoolean.MAYBE:Lorg/aspectj/util/FuzzyBoolean;
     282: if_acmpne     289
     285: aload         11
     287: astore        8
     289: goto          169
     292: aload         8
     294: areturn
     295: aload_0
     296: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
     299: aload_1
     300: iconst_0
     301: iconst_0
     302: iload         5
     304: aload_0
     305: getfield      #2                  // Field ellipsisCount:I
     308: isub
     309: iload         4
     311: aload_0
     312: getfield      #2                  // Field ellipsisCount:I
     315: aload_2
     316: aload_3
     317: invokestatic  #33                 // Method outOfStar:([Lorg/aspectj/weaver/patterns/TypePattern;Lorg/aspectj/weaver/ResolvableTypeList;IIIIILorg/aspectj/weaver/patterns/TypePattern$MatchKind;[[Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/util/FuzzyBoolean;
     320: astore        8
     322: aload         8
     324: areturn
    Exception table:
       from    to  target type
          60    88    97   any
          97    99    97   any
         220   243   252   any
         252   254   252   any

  private static org.aspectj.util.FuzzyBoolean outOfStar(org.aspectj.weaver.patterns.TypePattern[], org.aspectj.weaver.ResolvableTypeList, int, int, int, int, int, org.aspectj.weaver.patterns.TypePattern$MatchKind, org.aspectj.weaver.ResolvedType[][]);
    Code:
       0: iload         4
       2: iload         5
       4: if_icmple     11
       7: getstatic     #22                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
      10: areturn
      11: getstatic     #23                 // Field org/aspectj/util/FuzzyBoolean.YES:Lorg/aspectj/util/FuzzyBoolean;
      14: astore        9
      16: iload         5
      18: ifne          24
      21: aload         9
      23: areturn
      24: iload         4
      26: ifne          41
      29: iload         6
      31: ifle          37
      34: aload         9
      36: areturn
      37: getstatic     #22                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
      40: areturn
      41: aload_0
      42: iload_2
      43: aaload
      44: getstatic     #5                  // Field org/aspectj/weaver/patterns/TypePattern.ELLIPSIS:Lorg/aspectj/weaver/patterns/TypePattern;
      47: if_acmpne     72
      50: aload_0
      51: aload_1
      52: iload_2
      53: iconst_1
      54: iadd
      55: iload_3
      56: iload         4
      58: iload         5
      60: iload         6
      62: iconst_1
      63: isub
      64: aload         7
      66: aload         8
      68: invokestatic  #34                 // Method inStar:([Lorg/aspectj/weaver/patterns/TypePattern;Lorg/aspectj/weaver/ResolvableTypeList;IIIIILorg/aspectj/weaver/patterns/TypePattern$MatchKind;[[Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/util/FuzzyBoolean;
      71: areturn
      72: aconst_null
      73: astore        10
      75: aload_1
      76: iload_3
      77: invokevirtual #32                 // Method org/aspectj/weaver/ResolvableTypeList.getResolved:(I)Lorg/aspectj/weaver/ResolvedType;
      80: astore        11
      82: aload         8
      84: ifnull        96
      87: aload         11
      89: aload         8
      91: iload_3
      92: aaload
      93: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
      96: aload_0
      97: iload_2
      98: aaload
      99: aload         11
     101: aload         7
     103: invokevirtual #25                 // Method org/aspectj/weaver/patterns/TypePattern.matches:(Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;)Lorg/aspectj/util/FuzzyBoolean;
     106: astore        10
     108: aload         11
     110: aconst_null
     111: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
     114: goto          128
     117: astore        12
     119: aload         11
     121: aconst_null
     122: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
     125: aload         12
     127: athrow
     128: aload         10
     130: getstatic     #22                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
     133: if_acmpne     139
     136: aload         10
     138: areturn
     139: aload         10
     141: getstatic     #26                 // Field org/aspectj/util/FuzzyBoolean.MAYBE:Lorg/aspectj/util/FuzzyBoolean;
     144: if_acmpne     151
     147: aload         10
     149: astore        9
     151: iinc          2, 1
     154: iinc          3, 1
     157: iinc          4, -1
     160: iinc          5, -1
     163: goto          16
    Exception table:
       from    to  target type
          82   108   117   any
         117   119   117   any

  private static org.aspectj.util.FuzzyBoolean inStar(org.aspectj.weaver.patterns.TypePattern[], org.aspectj.weaver.ResolvableTypeList, int, int, int, int, int, org.aspectj.weaver.patterns.TypePattern$MatchKind, org.aspectj.weaver.ResolvedType[][]);
    Code:
       0: aload_0
       1: iload_2
       2: aaload
       3: astore        9
       5: aload         9
       7: getstatic     #5                  // Field org/aspectj/weaver/patterns/TypePattern.ELLIPSIS:Lorg/aspectj/weaver/patterns/TypePattern;
      10: if_acmpne     27
      13: iinc          6, -1
      16: aload_0
      17: iinc          2, 1
      20: iload_2
      21: aaload
      22: astore        9
      24: goto          5
      27: iload         4
      29: iload         5
      31: if_icmple     38
      34: getstatic     #22                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
      37: areturn
      38: aload_1
      39: iload_3
      40: invokevirtual #32                 // Method org/aspectj/weaver/ResolvableTypeList.getResolved:(I)Lorg/aspectj/weaver/ResolvedType;
      43: astore        10
      45: aconst_null
      46: astore        11
      48: aload         8
      50: ifnull        62
      53: aload         10
      55: aload         8
      57: iload_3
      58: aaload
      59: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
      62: aload         9
      64: aload         10
      66: aload         7
      68: invokevirtual #25                 // Method org/aspectj/weaver/patterns/TypePattern.matches:(Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;)Lorg/aspectj/util/FuzzyBoolean;
      71: astore        11
      73: aload         10
      75: aconst_null
      76: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
      79: goto          93
      82: astore        12
      84: aload         10
      86: aconst_null
      87: putfield      #24                 // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
      90: aload         12
      92: athrow
      93: aload         11
      95: invokevirtual #29                 // Method org/aspectj/util/FuzzyBoolean.maybeTrue:()Z
      98: ifeq          144
     101: aload_0
     102: aload_1
     103: iload_2
     104: iconst_1
     105: iadd
     106: iload_3
     107: iconst_1
     108: iadd
     109: iload         4
     111: iconst_1
     112: isub
     113: iload         5
     115: iconst_1
     116: isub
     117: iload         6
     119: aload         7
     121: aload         8
     123: invokestatic  #33                 // Method outOfStar:([Lorg/aspectj/weaver/patterns/TypePattern;Lorg/aspectj/weaver/ResolvableTypeList;IIIIILorg/aspectj/weaver/patterns/TypePattern$MatchKind;[[Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/util/FuzzyBoolean;
     126: astore        12
     128: aload         12
     130: invokevirtual #29                 // Method org/aspectj/util/FuzzyBoolean.maybeTrue:()Z
     133: ifeq          144
     136: aload         11
     138: aload         12
     140: invokevirtual #30                 // Method org/aspectj/util/FuzzyBoolean.and:(Lorg/aspectj/util/FuzzyBoolean;)Lorg/aspectj/util/FuzzyBoolean;
     143: areturn
     144: iinc          3, 1
     147: iinc          5, -1
     150: goto          27
    Exception table:
       from    to  target type
          48    73    82   any
          82    84    82   any

  public org.aspectj.weaver.patterns.TypePatternList parameterizeWith(java.util.Map<java.lang.String, org.aspectj.weaver.UnresolvedType>, org.aspectj.weaver.World);
    Code:
       0: aload_0
       1: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
       4: arraylength
       5: anewarray     #3                  // class org/aspectj/weaver/patterns/TypePattern
       8: astore_3
       9: iconst_0
      10: istore        4
      12: iload         4
      14: aload_3
      15: arraylength
      16: if_icmpge     41
      19: aload_3
      20: iload         4
      22: aload_0
      23: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      26: iload         4
      28: aaload
      29: aload_1
      30: aload_2
      31: invokevirtual #35                 // Method org/aspectj/weaver/patterns/TypePattern.parameterizeWith:(Ljava/util/Map;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/patterns/TypePattern;
      34: aastore
      35: iinc          4, 1
      38: goto          12
      41: new           #36                 // class org/aspectj/weaver/patterns/TypePatternList
      44: dup
      45: aload_3
      46: invokespecial #9                  // Method "<init>":([Lorg/aspectj/weaver/patterns/TypePattern;)V
      49: areturn

  public org.aspectj.weaver.patterns.TypePatternList resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings, boolean, boolean);
    Code:
       0: iconst_0
       1: istore        5
       3: iload         5
       5: aload_0
       6: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
       9: arraylength
      10: if_icmpge     55
      13: aload_0
      14: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      17: iload         5
      19: aaload
      20: astore        6
      22: aload         6
      24: ifnull        49
      27: aload_0
      28: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      31: iload         5
      33: aload_0
      34: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      37: iload         5
      39: aaload
      40: aload_1
      41: aload_2
      42: iload_3
      43: iload         4
      45: invokevirtual #37                 // Method org/aspectj/weaver/patterns/TypePattern.resolveBindings:(Lorg/aspectj/weaver/patterns/IScope;Lorg/aspectj/weaver/patterns/Bindings;ZZ)Lorg/aspectj/weaver/patterns/TypePattern;
      48: aastore
      49: iinc          5, 1
      52: goto          3
      55: aload_0
      56: areturn

  public org.aspectj.weaver.patterns.TypePatternList resolveReferences(org.aspectj.weaver.IntMap);
    Code:
       0: aload_0
       1: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
       4: arraylength
       5: istore_2
       6: iload_2
       7: anewarray     #3                  // class org/aspectj/weaver/patterns/TypePattern
      10: astore_3
      11: iconst_0
      12: istore        4
      14: iload         4
      16: iload_2
      17: if_icmpge     41
      20: aload_3
      21: iload         4
      23: aload_0
      24: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      27: iload         4
      29: aaload
      30: aload_1
      31: invokevirtual #38                 // Method org/aspectj/weaver/patterns/TypePattern.remapAdviceFormals:(Lorg/aspectj/weaver/IntMap;)Lorg/aspectj/weaver/patterns/TypePattern;
      34: aastore
      35: iinc          4, 1
      38: goto          14
      41: new           #36                 // class org/aspectj/weaver/patterns/TypePatternList
      44: dup
      45: aload_3
      46: invokespecial #9                  // Method "<init>":([Lorg/aspectj/weaver/patterns/TypePattern;)V
      49: areturn

  public void postRead(org.aspectj.weaver.ResolvedType);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
       7: arraylength
       8: if_icmpge     29
      11: aload_0
      12: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      15: iload_2
      16: aaload
      17: astore_3
      18: aload_3
      19: aload_1
      20: invokevirtual #39                 // Method org/aspectj/weaver/patterns/TypePattern.postRead:(Lorg/aspectj/weaver/ResolvedType;)V
      23: iinc          2, 1
      26: goto          2
      29: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #36                 // class org/aspectj/weaver/patterns/TypePatternList
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #36                 // class org/aspectj/weaver/patterns/TypePatternList
      13: astore_2
      14: aload_2
      15: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      18: arraylength
      19: istore_3
      20: iload_3
      21: aload_0
      22: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      25: arraylength
      26: if_icmpeq     31
      29: iconst_0
      30: ireturn
      31: iconst_0
      32: istore        4
      34: iload         4
      36: iload_3
      37: if_icmpge     68
      40: aload_0
      41: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      44: iload         4
      46: aaload
      47: aload_2
      48: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      51: iload         4
      53: aaload
      54: invokevirtual #40                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      57: ifne          62
      60: iconst_0
      61: ireturn
      62: iinc          4, 1
      65: goto          34
      68: iconst_1
      69: ireturn

  public int hashCode();
    Code:
       0: bipush        41
       2: istore_1
       3: iconst_0
       4: istore_2
       5: aload_0
       6: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
       9: arraylength
      10: istore_3
      11: iload_2
      12: iload_3
      13: if_icmpge     37
      16: bipush        37
      18: iload_1
      19: imul
      20: aload_0
      21: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      24: iload_2
      25: aaload
      26: invokevirtual #41                 // Method java/lang/Object.hashCode:()I
      29: iadd
      30: istore_1
      31: iinc          2, 1
      34: goto          11
      37: iload_1
      38: ireturn

  public static org.aspectj.weaver.patterns.TypePatternList read(org.aspectj.weaver.VersionedDataInputStream, org.aspectj.weaver.ISourceContext) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method org/aspectj/weaver/VersionedDataInputStream.readShort:()S
       4: istore_2
       5: iload_2
       6: anewarray     #3                  // class org/aspectj/weaver/patterns/TypePattern
       9: astore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_2
      16: if_icmpge     34
      19: aload_3
      20: iload         4
      22: aload_0
      23: aload_1
      24: invokestatic  #43                 // Method org/aspectj/weaver/patterns/TypePattern.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/TypePattern;
      27: aastore
      28: iinc          4, 1
      31: goto          13
      34: new           #36                 // class org/aspectj/weaver/patterns/TypePatternList
      37: dup
      38: aload_3
      39: invokespecial #9                  // Method "<init>":([Lorg/aspectj/weaver/patterns/TypePattern;)V
      42: astore        4
      44: aload_0
      45: invokevirtual #44                 // Method org/aspectj/weaver/VersionedDataInputStream.isAtLeast169:()Z
      48: ifne          58
      51: aload         4
      53: aload_1
      54: aload_0
      55: invokevirtual #45                 // Method readLocation:(Lorg/aspectj/weaver/ISourceContext;Ljava/io/DataInputStream;)V
      58: aload         4
      60: areturn

  public int getEnd();
    Code:
       0: new           #46                 // class java/lang/IllegalStateException
       3: dup
       4: invokespecial #47                 // Method java/lang/IllegalStateException."<init>":()V
       7: athrow

  public org.aspectj.weaver.ISourceContext getSourceContext();
    Code:
       0: new           #46                 // class java/lang/IllegalStateException
       3: dup
       4: invokespecial #47                 // Method java/lang/IllegalStateException."<init>":()V
       7: athrow

  public org.aspectj.bridge.ISourceLocation getSourceLocation();
    Code:
       0: new           #46                 // class java/lang/IllegalStateException
       3: dup
       4: invokespecial #47                 // Method java/lang/IllegalStateException."<init>":()V
       7: athrow

  public int getStart();
    Code:
       0: new           #46                 // class java/lang/IllegalStateException
       3: dup
       4: invokespecial #47                 // Method java/lang/IllegalStateException."<init>":()V
       7: athrow

  public void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
       5: arraylength
       6: invokevirtual #48                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeShort:(I)V
       9: iconst_0
      10: istore_2
      11: iload_2
      12: aload_0
      13: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      16: arraylength
      17: if_icmpge     36
      20: aload_0
      21: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      24: iload_2
      25: aaload
      26: aload_1
      27: invokevirtual #49                 // Method org/aspectj/weaver/patterns/TypePattern.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      30: iinc          2, 1
      33: goto          11
      36: return

  public org.aspectj.weaver.patterns.TypePattern[] getTypePatterns();
    Code:
       0: aload_0
       1: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
       4: areturn

  public java.util.List<org.aspectj.weaver.UnresolvedType> getExactTypes();
    Code:
       0: new           #50                 // class java/util/ArrayList
       3: dup
       4: invokespecial #51                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_0
      12: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      15: arraylength
      16: if_icmpge     50
      19: aload_0
      20: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      23: iload_2
      24: aaload
      25: invokevirtual #52                 // Method org/aspectj/weaver/patterns/TypePattern.getExactType:()Lorg/aspectj/weaver/UnresolvedType;
      28: astore_3
      29: aload_3
      30: invokestatic  #53                 // Method org/aspectj/weaver/ResolvedType.isMissing:(Lorg/aspectj/weaver/UnresolvedType;)Z
      33: ifne          44
      36: aload_1
      37: aload_3
      38: invokeinterface #54,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      43: pop
      44: iinc          2, 1
      47: goto          10
      50: aload_1
      51: areturn

  public java.lang.Object accept(org.aspectj.weaver.patterns.PatternNodeVisitor, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #55,  3           // InterfaceMethod org/aspectj/weaver/patterns/PatternNodeVisitor.visit:(Lorg/aspectj/weaver/patterns/TypePatternList;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public java.lang.Object traverse(org.aspectj.weaver.patterns.PatternNodeVisitor, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #56                 // Method accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
       6: astore_3
       7: iconst_0
       8: istore        4
      10: iload         4
      12: aload_0
      13: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      16: arraylength
      17: if_icmpge     39
      20: aload_0
      21: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      24: iload         4
      26: aaload
      27: aload_1
      28: aload_3
      29: invokevirtual #57                 // Method org/aspectj/weaver/patterns/TypePattern.traverse:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: iinc          4, 1
      36: goto          10
      39: aload_3
      40: areturn

  public boolean areAllExactWithNoSubtypesAllowed();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
       7: arraylength
       8: if_icmpge     47
      11: aload_0
      12: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      15: iload_1
      16: aaload
      17: astore_2
      18: aload_2
      19: instanceof    #58                 // class org/aspectj/weaver/patterns/ExactTypePattern
      22: ifne          27
      25: iconst_0
      26: ireturn
      27: aload_2
      28: checkcast     #58                 // class org/aspectj/weaver/patterns/ExactTypePattern
      31: astore_3
      32: aload_3
      33: invokevirtual #59                 // Method org/aspectj/weaver/patterns/ExactTypePattern.isIncludeSubtypes:()Z
      36: ifeq          41
      39: iconst_0
      40: ireturn
      41: iinc          1, 1
      44: goto          2
      47: iconst_1
      48: ireturn

  public java.lang.String[] maybeGetCleanNames();
    Code:
       0: aload_0
       1: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
       4: arraylength
       5: anewarray     #60                 // class java/lang/String
       8: astore_1
       9: iconst_0
      10: istore_2
      11: iload_2
      12: aload_0
      13: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      16: arraylength
      17: if_icmpge     55
      20: aload_0
      21: getfield      #4                  // Field typePatterns:[Lorg/aspectj/weaver/patterns/TypePattern;
      24: iload_2
      25: aaload
      26: astore_3
      27: aload_3
      28: instanceof    #58                 // class org/aspectj/weaver/patterns/ExactTypePattern
      31: ifne          36
      34: aconst_null
      35: areturn
      36: aload_1
      37: iload_2
      38: aload_3
      39: checkcast     #58                 // class org/aspectj/weaver/patterns/ExactTypePattern
      42: invokevirtual #61                 // Method org/aspectj/weaver/patterns/ExactTypePattern.getExactType:()Lorg/aspectj/weaver/UnresolvedType;
      45: invokevirtual #62                 // Method org/aspectj/weaver/UnresolvedType.getName:()Ljava/lang/String;
      48: aastore
      49: iinc          2, 1
      52: goto          11
      55: aload_1
      56: areturn

  static {};
    Code:
       0: new           #36                 // class org/aspectj/weaver/patterns/TypePatternList
       3: dup
       4: iconst_0
       5: anewarray     #3                  // class org/aspectj/weaver/patterns/TypePattern
       8: invokespecial #9                  // Method "<init>":([Lorg/aspectj/weaver/patterns/TypePattern;)V
      11: putstatic     #63                 // Field EMPTY:Lorg/aspectj/weaver/patterns/TypePatternList;
      14: new           #36                 // class org/aspectj/weaver/patterns/TypePatternList
      17: dup
      18: iconst_1
      19: anewarray     #3                  // class org/aspectj/weaver/patterns/TypePattern
      22: dup
      23: iconst_0
      24: new           #64                 // class org/aspectj/weaver/patterns/EllipsisTypePattern
      27: dup
      28: invokespecial #65                 // Method org/aspectj/weaver/patterns/EllipsisTypePattern."<init>":()V
      31: aastore
      32: invokespecial #9                  // Method "<init>":([Lorg/aspectj/weaver/patterns/TypePattern;)V
      35: putstatic     #66                 // Field ANY:Lorg/aspectj/weaver/patterns/TypePatternList;
      38: return
}
