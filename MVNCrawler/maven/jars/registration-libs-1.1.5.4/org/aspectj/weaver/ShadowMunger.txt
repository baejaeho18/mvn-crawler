Compiled from "ShadowMunger.java"
public abstract class org.aspectj.weaver.ShadowMunger implements org.aspectj.util.PartialOrder$PartialComparable,org.aspectj.weaver.IHasPosition {
  public static final org.aspectj.weaver.ShadowMunger[] NONE;

  private static int VERSION_1;

  protected static final int ShadowMungerAdvice;

  protected static final int ShadowMungerDeow;

  public java.lang.String handle;

  private int shadowMungerKind;

  protected int start;

  protected int end;

  protected org.aspectj.weaver.ISourceContext sourceContext;

  private org.aspectj.bridge.ISourceLocation sourceLocation;

  private org.aspectj.bridge.ISourceLocation binarySourceLocation;

  private java.io.File binaryFile;

  private org.aspectj.weaver.ResolvedType declaringType;

  private boolean isBinary;

  private boolean checkedIsBinary;

  protected org.aspectj.weaver.patterns.Pointcut pointcut;

  protected org.aspectj.weaver.ShadowMunger();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field handle:Ljava/lang/String;
       9: return

  public org.aspectj.weaver.ShadowMunger(org.aspectj.weaver.patterns.Pointcut, int, int, org.aspectj.weaver.ISourceContext, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field handle:Ljava/lang/String;
       9: aload_0
      10: iload         5
      12: putfield      #3                  // Field shadowMungerKind:I
      15: aload_0
      16: aload_1
      17: putfield      #4                  // Field pointcut:Lorg/aspectj/weaver/patterns/Pointcut;
      20: aload_0
      21: iload_2
      22: putfield      #5                  // Field start:I
      25: aload_0
      26: iload_3
      27: putfield      #6                  // Field end:I
      30: aload_0
      31: aload         4
      33: putfield      #7                  // Field sourceContext:Lorg/aspectj/weaver/ISourceContext;
      36: return

  public boolean match(org.aspectj.weaver.Shadow, org.aspectj.weaver.World);
    Code:
       0: aload_2
       1: invokevirtual #8                  // Method org/aspectj/weaver/World.isXmlConfigured:()Z
       4: ifeq          223
       7: aload_2
       8: aload_0
       9: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/ResolvedType;
      12: invokevirtual #10                 // Method org/aspectj/weaver/World.isAspectIncluded:(Lorg/aspectj/weaver/ResolvedType;)Z
      15: ifeq          223
      18: aload_2
      19: aload_0
      20: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/ResolvedType;
      23: invokevirtual #11                 // Method org/aspectj/weaver/World.getAspectScope:(Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/weaver/patterns/TypePattern;
      26: astore_3
      27: aload_3
      28: ifnull        223
      31: aload_2
      32: invokevirtual #12                 // Method org/aspectj/weaver/World.getExclusionMap:()Ljava/util/Map;
      35: aload_0
      36: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/ResolvedType;
      39: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #14                 // class java/util/Set
      47: astore        4
      49: aload_1
      50: invokevirtual #15                 // Method org/aspectj/weaver/Shadow.getEnclosingType:()Lorg/aspectj/weaver/UnresolvedType;
      53: aload_2
      54: invokevirtual #16                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      57: astore        5
      59: aload         4
      61: ifnull        78
      64: aload         4
      66: aload         5
      68: invokeinterface #17,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      73: ifeq          78
      76: iconst_0
      77: ireturn
      78: aload_3
      79: aload         5
      81: getstatic     #18                 // Field org/aspectj/weaver/patterns/TypePattern.STATIC:Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;
      84: invokevirtual #19                 // Method org/aspectj/weaver/patterns/TypePattern.matches:(Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;)Lorg/aspectj/util/FuzzyBoolean;
      87: invokevirtual #20                 // Method org/aspectj/util/FuzzyBoolean.alwaysTrue:()Z
      90: istore        6
      92: iload         6
      94: ifne          223
      97: aload_2
      98: invokevirtual #21                 // Method org/aspectj/weaver/World.getMessageHandler:()Lorg/aspectj/bridge/IMessageHandler;
     101: getstatic     #22                 // Field org/aspectj/bridge/IMessage.INFO:Lorg/aspectj/bridge/IMessage$Kind;
     104: invokeinterface #23,  2           // InterfaceMethod org/aspectj/bridge/IMessageHandler.isIgnoring:(Lorg/aspectj/bridge/IMessage$Kind;)Z
     109: ifne          168
     112: aload_2
     113: invokevirtual #21                 // Method org/aspectj/weaver/World.getMessageHandler:()Lorg/aspectj/bridge/IMessageHandler;
     116: new           #24                 // class java/lang/StringBuilder
     119: dup
     120: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     123: ldc           #26                 // String Type \'
     125: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: aload         5
     130: invokevirtual #28                 // Method org/aspectj/weaver/ResolvedType.getName:()Ljava/lang/String;
     133: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: ldc           #29                 // String \' not woven by aspect \'
     138: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: aload_0
     142: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/ResolvedType;
     145: invokevirtual #28                 // Method org/aspectj/weaver/ResolvedType.getName:()Ljava/lang/String;
     148: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: ldc           #30                 // String \' due to scope exclusion in XML definition
     153: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     159: invokestatic  #32                 // Method org/aspectj/bridge/MessageUtil.info:(Ljava/lang/String;)Lorg/aspectj/bridge/IMessage;
     162: invokeinterface #33,  2           // InterfaceMethod org/aspectj/bridge/IMessageHandler.handleMessage:(Lorg/aspectj/bridge/IMessage;)Z
     167: pop
     168: aload         4
     170: ifnonnull     211
     173: new           #34                 // class java/util/HashSet
     176: dup
     177: invokespecial #35                 // Method java/util/HashSet."<init>":()V
     180: astore        4
     182: aload         4
     184: aload         5
     186: invokeinterface #36,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     191: pop
     192: aload_2
     193: invokevirtual #12                 // Method org/aspectj/weaver/World.getExclusionMap:()Ljava/util/Map;
     196: aload_0
     197: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/ResolvedType;
     200: aload         4
     202: invokeinterface #37,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     207: pop
     208: goto          221
     211: aload         4
     213: aload         5
     215: invokeinterface #36,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     220: pop
     221: iconst_0
     222: ireturn
     223: aload_2
     224: invokevirtual #38                 // Method org/aspectj/weaver/World.areInfoMessagesEnabled:()Z
     227: ifeq          274
     230: aload_2
     231: invokevirtual #39                 // Method org/aspectj/weaver/World.isTimingEnabled:()Z
     234: ifeq          274
     237: invokestatic  #40                 // Method java/lang/System.nanoTime:()J
     240: lstore_3
     241: aload_0
     242: getfield      #4                  // Field pointcut:Lorg/aspectj/weaver/patterns/Pointcut;
     245: aload_1
     246: invokevirtual #41                 // Method org/aspectj/weaver/patterns/Pointcut.match:(Lorg/aspectj/weaver/Shadow;)Lorg/aspectj/util/FuzzyBoolean;
     249: astore        5
     251: invokestatic  #40                 // Method java/lang/System.nanoTime:()J
     254: lstore        6
     256: aload_2
     257: aload_0
     258: getfield      #4                  // Field pointcut:Lorg/aspectj/weaver/patterns/Pointcut;
     261: lload         6
     263: lload_3
     264: lsub
     265: invokevirtual #42                 // Method org/aspectj/weaver/World.record:(Lorg/aspectj/weaver/patterns/Pointcut;J)V
     268: aload         5
     270: invokevirtual #43                 // Method org/aspectj/util/FuzzyBoolean.maybeTrue:()Z
     273: ireturn
     274: aload_0
     275: getfield      #4                  // Field pointcut:Lorg/aspectj/weaver/patterns/Pointcut;
     278: aload_1
     279: invokevirtual #41                 // Method org/aspectj/weaver/patterns/Pointcut.match:(Lorg/aspectj/weaver/Shadow;)Lorg/aspectj/util/FuzzyBoolean;
     282: astore_3
     283: aload_3
     284: invokevirtual #43                 // Method org/aspectj/util/FuzzyBoolean.maybeTrue:()Z
     287: ireturn

  public int fallbackCompareTo(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method java/lang/Object.toString:()Ljava/lang/String;
       4: aload_0
       5: invokevirtual #44                 // Method java/lang/Object.toString:()Ljava/lang/String;
       8: invokevirtual #45                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      11: ireturn

  public int getEnd();
    Code:
       0: aload_0
       1: getfield      #6                  // Field end:I
       4: ireturn

  public int getStart();
    Code:
       0: aload_0
       1: getfield      #5                  // Field start:I
       4: ireturn

  public org.aspectj.bridge.ISourceLocation getSourceLocation();
    Code:
       0: aload_0
       1: getfield      #46                 // Field sourceLocation:Lorg/aspectj/bridge/ISourceLocation;
       4: ifnonnull     28
       7: aload_0
       8: getfield      #7                  // Field sourceContext:Lorg/aspectj/weaver/ISourceContext;
      11: ifnull        28
      14: aload_0
      15: aload_0
      16: getfield      #7                  // Field sourceContext:Lorg/aspectj/weaver/ISourceContext;
      19: aload_0
      20: invokeinterface #47,  2           // InterfaceMethod org/aspectj/weaver/ISourceContext.makeSourceLocation:(Lorg/aspectj/weaver/IHasPosition;)Lorg/aspectj/bridge/ISourceLocation;
      25: putfield      #46                 // Field sourceLocation:Lorg/aspectj/bridge/ISourceLocation;
      28: aload_0
      29: invokevirtual #48                 // Method isBinary:()Z
      32: ifeq          59
      35: aload_0
      36: getfield      #49                 // Field binarySourceLocation:Lorg/aspectj/bridge/ISourceLocation;
      39: ifnonnull     54
      42: aload_0
      43: aload_0
      44: aload_0
      45: getfield      #46                 // Field sourceLocation:Lorg/aspectj/bridge/ISourceLocation;
      48: invokevirtual #50                 // Method getBinarySourceLocation:(Lorg/aspectj/bridge/ISourceLocation;)Lorg/aspectj/bridge/ISourceLocation;
      51: putfield      #49                 // Field binarySourceLocation:Lorg/aspectj/bridge/ISourceLocation;
      54: aload_0
      55: getfield      #49                 // Field binarySourceLocation:Lorg/aspectj/bridge/ISourceLocation;
      58: areturn
      59: aload_0
      60: getfield      #46                 // Field sourceLocation:Lorg/aspectj/bridge/ISourceLocation;
      63: areturn

  public org.aspectj.weaver.patterns.Pointcut getPointcut();
    Code:
       0: aload_0
       1: getfield      #4                  // Field pointcut:Lorg/aspectj/weaver/patterns/Pointcut;
       4: areturn

  public void setPointcut(org.aspectj.weaver.patterns.Pointcut);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field pointcut:Lorg/aspectj/weaver/patterns/Pointcut;
       5: return

  public void setDeclaringType(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field declaringType:Lorg/aspectj/weaver/ResolvedType;
       5: return

  public org.aspectj.weaver.ResolvedType getDeclaringType();
    Code:
       0: aload_0
       1: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/ResolvedType;
       4: areturn

  public abstract org.aspectj.weaver.ResolvedType getConcreteAspect();

  public org.aspectj.bridge.ISourceLocation getBinarySourceLocation(org.aspectj.bridge.ISourceLocation);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aconst_null
       7: astore_2
       8: aload_0
       9: invokevirtual #51                 // Method getDeclaringType:()Lorg/aspectj/weaver/ResolvedType;
      12: instanceof    #52                 // class org/aspectj/weaver/ReferenceType
      15: ifeq          62
      18: aload_0
      19: invokevirtual #51                 // Method getDeclaringType:()Lorg/aspectj/weaver/ResolvedType;
      22: checkcast     #52                 // class org/aspectj/weaver/ReferenceType
      25: invokevirtual #53                 // Method org/aspectj/weaver/ReferenceType.getDelegate:()Lorg/aspectj/weaver/ReferenceTypeDelegate;
      28: invokeinterface #54,  1           // InterfaceMethod org/aspectj/weaver/ReferenceTypeDelegate.getSourcefilename:()Ljava/lang/String;
      33: astore_3
      34: aload_3
      35: bipush        47
      37: invokevirtual #55                 // Method java/lang/String.lastIndexOf:(I)I
      40: istore        4
      42: iload         4
      44: iconst_m1
      45: if_icmpeq     60
      48: aload_3
      49: iload         4
      51: iconst_1
      52: iadd
      53: invokevirtual #56                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      56: astore_2
      57: goto          62
      60: aload_3
      61: astore_2
      62: new           #57                 // class org/aspectj/bridge/SourceLocation
      65: dup
      66: aload_0
      67: invokespecial #58                 // Method getBinaryFile:()Ljava/io/File;
      70: aload_1
      71: invokeinterface #59,  1           // InterfaceMethod org/aspectj/bridge/ISourceLocation.getLine:()I
      76: aload_1
      77: invokeinterface #60,  1           // InterfaceMethod org/aspectj/bridge/ISourceLocation.getEndLine:()I
      82: aload_1
      83: invokeinterface #61,  1           // InterfaceMethod org/aspectj/bridge/ISourceLocation.getColumn:()I
      88: ifne          96
      91: ldc           #63                 // int -2147483647
      93: goto          102
      96: aload_1
      97: invokeinterface #61,  1           // InterfaceMethod org/aspectj/bridge/ISourceLocation.getColumn:()I
     102: aload_1
     103: invokeinterface #64,  1           // InterfaceMethod org/aspectj/bridge/ISourceLocation.getContext:()Ljava/lang/String;
     108: aload_2
     109: invokespecial #65                 // Method org/aspectj/bridge/SourceLocation."<init>":(Ljava/io/File;IIILjava/lang/String;Ljava/lang/String;)V
     112: astore_3
     113: aload_3
     114: areturn

  private java.io.File getBinaryFile();
    Code:
       0: aload_0
       1: getfield      #66                 // Field binaryFile:Ljava/io/File;
       4: ifnonnull     177
       7: aload_0
       8: invokevirtual #51                 // Method getDeclaringType:()Lorg/aspectj/weaver/ResolvedType;
      11: invokevirtual #67                 // Method org/aspectj/weaver/ResolvedType.getBinaryPath:()Ljava/lang/String;
      14: astore_1
      15: aload_1
      16: ifnonnull     30
      19: ldc           #68                 // String classpath
      21: astore_1
      22: aload_0
      23: invokevirtual #51                 // Method getDeclaringType:()Lorg/aspectj/weaver/ResolvedType;
      26: aload_1
      27: invokevirtual #69                 // Method org/aspectj/weaver/ResolvedType.setBinaryPath:(Ljava/lang/String;)V
      30: aload_1
      31: ldc           #70                 // String !
      33: invokevirtual #71                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      36: iconst_m1
      37: if_icmpne     165
      40: aload_0
      41: invokevirtual #51                 // Method getDeclaringType:()Lorg/aspectj/weaver/ResolvedType;
      44: invokevirtual #72                 // Method org/aspectj/weaver/ResolvedType.getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
      47: invokeinterface #73,  1           // InterfaceMethod org/aspectj/bridge/ISourceLocation.getSourceFile:()Ljava/io/File;
      52: astore_2
      53: aload_2
      54: invokevirtual #74                 // Method java/io/File.getPath:()Ljava/lang/String;
      57: bipush        46
      59: invokevirtual #55                 // Method java/lang/String.lastIndexOf:(I)I
      62: istore_3
      63: aconst_null
      64: astore        4
      66: iload_3
      67: iconst_m1
      68: if_icmpeq     103
      71: new           #24                 // class java/lang/StringBuilder
      74: dup
      75: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      78: aload_2
      79: invokevirtual #74                 // Method java/io/File.getPath:()Ljava/lang/String;
      82: iconst_0
      83: iload_3
      84: invokevirtual #75                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      87: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: ldc           #76                 // String .class
      92: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: astore        4
     100: goto          127
     103: new           #24                 // class java/lang/StringBuilder
     106: dup
     107: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     110: aload_2
     111: invokevirtual #74                 // Method java/io/File.getPath:()Ljava/lang/String;
     114: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: ldc           #76                 // String .class
     119: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     125: astore        4
     127: aload_0
     128: new           #77                 // class java/io/File
     131: dup
     132: new           #24                 // class java/lang/StringBuilder
     135: dup
     136: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     139: aload_1
     140: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: ldc           #70                 // String !
     145: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: aload         4
     150: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     156: invokespecial #78                 // Method java/io/File."<init>":(Ljava/lang/String;)V
     159: putfield      #66                 // Field binaryFile:Ljava/io/File;
     162: goto          177
     165: aload_0
     166: new           #77                 // class java/io/File
     169: dup
     170: aload_1
     171: invokespecial #78                 // Method java/io/File."<init>":(Ljava/lang/String;)V
     174: putfield      #66                 // Field binaryFile:Ljava/io/File;
     177: aload_0
     178: getfield      #66                 // Field binaryFile:Ljava/io/File;
     181: areturn

  public boolean isBinary();
    Code:
       0: aload_0
       1: getfield      #79                 // Field checkedIsBinary:Z
       4: ifne          37
       7: aload_0
       8: invokevirtual #51                 // Method getDeclaringType:()Lorg/aspectj/weaver/ResolvedType;
      11: astore_1
      12: aload_1
      13: ifnull        32
      16: aload_0
      17: aload_1
      18: invokevirtual #67                 // Method org/aspectj/weaver/ResolvedType.getBinaryPath:()Ljava/lang/String;
      21: ifnonnull     28
      24: iconst_0
      25: goto          29
      28: iconst_1
      29: putfield      #80                 // Field isBinary:Z
      32: aload_0
      33: iconst_1
      34: putfield      #79                 // Field checkedIsBinary:Z
      37: aload_0
      38: getfield      #80                 // Field isBinary:Z
      41: ireturn

  public abstract org.aspectj.weaver.ShadowMunger concretize(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.World, org.aspectj.weaver.patterns.PerClause);

  public abstract void specializeOn(org.aspectj.weaver.Shadow);

  public abstract boolean implementOn(org.aspectj.weaver.Shadow);

  public abstract org.aspectj.weaver.ShadowMunger parameterizeWith(org.aspectj.weaver.ResolvedType, java.util.Map<java.lang.String, org.aspectj.weaver.UnresolvedType>);

  public abstract java.util.Collection<org.aspectj.weaver.ResolvedType> getThrownExceptions();

  public abstract boolean mustCheckExceptions();

  public void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #81                 // Field VERSION_1:I
       4: invokevirtual #82                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeInt:(I)V
       7: aload_1
       8: aload_0
       9: getfield      #3                  // Field shadowMungerKind:I
      12: invokevirtual #82                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeInt:(I)V
      15: aload_1
      16: aload_0
      17: getfield      #5                  // Field start:I
      20: invokevirtual #82                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeInt:(I)V
      23: aload_1
      24: aload_0
      25: getfield      #6                  // Field end:I
      28: invokevirtual #82                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeInt:(I)V
      31: aload_1
      32: aload_0
      33: getfield      #7                  // Field sourceContext:Lorg/aspectj/weaver/ISourceContext;
      36: invokestatic  #83                 // Method org/aspectj/weaver/PersistenceSupport.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;Lorg/aspectj/weaver/ISourceContext;)V
      39: aload_1
      40: aload_0
      41: getfield      #46                 // Field sourceLocation:Lorg/aspectj/bridge/ISourceLocation;
      44: invokestatic  #84                 // Method org/aspectj/weaver/PersistenceSupport.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;Ljava/io/Serializable;)V
      47: aload_1
      48: aload_0
      49: getfield      #49                 // Field binarySourceLocation:Lorg/aspectj/bridge/ISourceLocation;
      52: invokestatic  #84                 // Method org/aspectj/weaver/PersistenceSupport.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;Ljava/io/Serializable;)V
      55: aload_1
      56: aload_0
      57: getfield      #66                 // Field binaryFile:Ljava/io/File;
      60: invokestatic  #84                 // Method org/aspectj/weaver/PersistenceSupport.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;Ljava/io/Serializable;)V
      63: aload_0
      64: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/ResolvedType;
      67: aload_1
      68: invokevirtual #85                 // Method org/aspectj/weaver/ResolvedType.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      71: aload_1
      72: aload_0
      73: getfield      #80                 // Field isBinary:Z
      76: invokevirtual #86                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeBoolean:(Z)V
      79: aload_1
      80: aload_0
      81: getfield      #79                 // Field checkedIsBinary:Z
      84: invokevirtual #86                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeBoolean:(Z)V
      87: aload_0
      88: getfield      #4                  // Field pointcut:Lorg/aspectj/weaver/patterns/Pointcut;
      91: aload_1
      92: invokevirtual #87                 // Method org/aspectj/weaver/patterns/Pointcut.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      95: return

  static {};
    Code:
       0: iconst_0
       1: anewarray     #88                 // class org/aspectj/weaver/ShadowMunger
       4: putstatic     #89                 // Field NONE:[Lorg/aspectj/weaver/ShadowMunger;
       7: iconst_1
       8: putstatic     #81                 // Field VERSION_1:I
      11: return
}
