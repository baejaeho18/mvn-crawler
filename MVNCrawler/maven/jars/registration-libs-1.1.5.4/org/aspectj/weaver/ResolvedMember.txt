Compiled from "ResolvedMember.java"
public interface org.aspectj.weaver.ResolvedMember extends org.aspectj.weaver.Member,org.aspectj.weaver.AnnotatedElement,org.aspectj.weaver.TypeVariableDeclaringElement {
  public static final org.aspectj.weaver.ResolvedMember[] NONE;

  public abstract int getModifiers(org.aspectj.weaver.World);

  public abstract int getModifiers();

  public abstract org.aspectj.weaver.UnresolvedType[] getExceptions(org.aspectj.weaver.World);

  public abstract org.aspectj.weaver.UnresolvedType[] getExceptions();

  public abstract org.aspectj.weaver.ShadowMunger getAssociatedShadowMunger();

  public abstract boolean isAjSynthetic();

  public abstract boolean isCompatibleWith(org.aspectj.weaver.Member);

  public abstract boolean hasAnnotation(org.aspectj.weaver.UnresolvedType);

  public abstract org.aspectj.weaver.AnnotationAJ[] getAnnotations();

  public abstract org.aspectj.weaver.ResolvedType[] getAnnotationTypes();

  public abstract void setAnnotationTypes(org.aspectj.weaver.ResolvedType[]);

  public abstract void addAnnotation(org.aspectj.weaver.AnnotationAJ);

  public abstract boolean isBridgeMethod();

  public abstract boolean isVarargsMethod();

  public abstract boolean isSynthetic();

  public abstract void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;

  public abstract org.aspectj.weaver.ISourceContext getSourceContext(org.aspectj.weaver.World);

  public abstract java.lang.String[] getParameterNames();

  public abstract void setParameterNames(java.lang.String[]);

  public abstract org.aspectj.weaver.AnnotationAJ[][] getParameterAnnotations();

  public abstract org.aspectj.weaver.ResolvedType[][] getParameterAnnotationTypes();

  public abstract java.lang.String getAnnotationDefaultValue();

  public abstract java.lang.String getParameterSignatureErased();

  public abstract java.lang.String getSignatureErased();

  public abstract java.lang.String[] getParameterNames(org.aspectj.weaver.World);

  public abstract org.aspectj.weaver.AjAttribute$EffectiveSignatureAttribute getEffectiveSignature();

  public abstract org.aspectj.bridge.ISourceLocation getSourceLocation();

  public abstract int getStart();

  public abstract int getEnd();

  public abstract org.aspectj.weaver.ISourceContext getSourceContext();

  public abstract void setPosition(int, int);

  public abstract void setSourceContext(org.aspectj.weaver.ISourceContext);

  public abstract boolean isAbstract();

  public abstract boolean isPublic();

  public abstract boolean isDefault();

  public abstract boolean isVisible(org.aspectj.weaver.ResolvedType);

  public abstract void setCheckedExceptions(org.aspectj.weaver.UnresolvedType[]);

  public abstract void setAnnotatedElsewhere(boolean);

  public abstract boolean isAnnotatedElsewhere();

  public abstract java.lang.String toGenericString();

  public abstract java.lang.String toDebugString();

  public abstract boolean hasBackingGenericMember();

  public abstract org.aspectj.weaver.ResolvedMember getBackingGenericMember();

  public abstract org.aspectj.weaver.UnresolvedType getGenericReturnType();

  public abstract org.aspectj.weaver.UnresolvedType[] getGenericParameterTypes();

  public abstract boolean equalsApartFromDeclaringType(java.lang.Object);

  public abstract org.aspectj.weaver.ResolvedMemberImpl parameterizedWith(org.aspectj.weaver.UnresolvedType[], org.aspectj.weaver.ResolvedType, boolean);

  public abstract org.aspectj.weaver.ResolvedMemberImpl parameterizedWith(org.aspectj.weaver.UnresolvedType[], org.aspectj.weaver.ResolvedType, boolean, java.util.List<java.lang.String>);

  public abstract void setTypeVariables(org.aspectj.weaver.TypeVariable[]);

  public abstract org.aspectj.weaver.TypeVariable[] getTypeVariables();

  public abstract boolean matches(org.aspectj.weaver.ResolvedMember, boolean);

  public abstract void evictWeavingState();

  public abstract org.aspectj.weaver.ResolvedMember parameterizedWith(java.util.Map<java.lang.String, org.aspectj.weaver.UnresolvedType>, org.aspectj.weaver.World);

  public abstract boolean isDefaultConstructor();

  public abstract void setAnnotations(org.aspectj.weaver.AnnotationAJ[]);

  static {};
    Code:
       0: iconst_0
       1: anewarray     #1                  // class org/aspectj/weaver/ResolvedMember
       4: putstatic     #2                  // Field NONE:[Lorg/aspectj/weaver/ResolvedMember;
       7: return
}
