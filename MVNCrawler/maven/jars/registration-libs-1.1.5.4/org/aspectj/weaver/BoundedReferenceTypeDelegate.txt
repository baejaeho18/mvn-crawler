Compiled from "BoundedReferenceTypeDelegate.java"
class org.aspectj.weaver.BoundedReferenceTypeDelegate extends org.aspectj.weaver.AbstractReferenceTypeDelegate {
  public org.aspectj.weaver.BoundedReferenceTypeDelegate(org.aspectj.weaver.ReferenceType);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method org/aspectj/weaver/AbstractReferenceTypeDelegate."<init>":(Lorg/aspectj/weaver/ReferenceType;Z)V
       6: return

  public boolean isAspect();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #3                  // Method org/aspectj/weaver/ReferenceType.isAspect:()Z
       7: ireturn

  public boolean isAnnotationStyleAspect();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #4                  // Method org/aspectj/weaver/ReferenceType.isAnnotationStyleAspect:()Z
       7: ireturn

  public boolean isInterface();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #5                  // Method org/aspectj/weaver/ReferenceType.isInterface:()Z
       7: ireturn

  public boolean isEnum();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #6                  // Method org/aspectj/weaver/ReferenceType.isEnum:()Z
       7: ireturn

  public boolean isAnnotation();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #7                  // Method org/aspectj/weaver/ReferenceType.isAnnotation:()Z
       7: ireturn

  public boolean isAnnotationWithRuntimeRetention();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #8                  // Method org/aspectj/weaver/ReferenceType.isAnnotationWithRuntimeRetention:()Z
       7: ireturn

  public boolean isAnonymous();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #9                  // Method org/aspectj/weaver/ReferenceType.isAnonymous:()Z
       7: ireturn

  public boolean isNested();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #10                 // Method org/aspectj/weaver/ReferenceType.isNested:()Z
       7: ireturn

  public org.aspectj.weaver.ResolvedType getOuterClass();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #11                 // Method org/aspectj/weaver/ReferenceType.getOuterClass:()Lorg/aspectj/weaver/ResolvedType;
       7: areturn

  public java.lang.String getRetentionPolicy();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #12                 // Method org/aspectj/weaver/ReferenceType.getRetentionPolicy:()Ljava/lang/String;
       7: areturn

  public boolean canAnnotationTargetType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #13                 // Method org/aspectj/weaver/ReferenceType.canAnnotationTargetType:()Z
       7: ireturn

  public org.aspectj.weaver.AnnotationTargetKind[] getAnnotationTargetKinds();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #14                 // Method org/aspectj/weaver/ReferenceType.getAnnotationTargetKinds:()[Lorg/aspectj/weaver/AnnotationTargetKind;
       7: areturn

  public boolean isGeneric();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #15                 // Method org/aspectj/weaver/ReferenceType.isGenericType:()Z
       7: ireturn

  public java.lang.String getDeclaredGenericSignature();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #16                 // Method org/aspectj/weaver/ReferenceType.getDeclaredGenericSignature:()Ljava/lang/String;
       7: areturn

  public boolean hasAnnotation(org.aspectj.weaver.UnresolvedType);
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: aload_1
       5: invokevirtual #17                 // Method org/aspectj/weaver/ReferenceType.hasAnnotation:(Lorg/aspectj/weaver/UnresolvedType;)Z
       8: ireturn

  public org.aspectj.weaver.AnnotationAJ[] getAnnotations();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #18                 // Method org/aspectj/weaver/ReferenceType.getAnnotations:()[Lorg/aspectj/weaver/AnnotationAJ;
       7: areturn

  public boolean hasAnnotations();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #19                 // Method org/aspectj/weaver/ReferenceType.hasAnnotations:()Z
       7: ireturn

  public org.aspectj.weaver.ResolvedType[] getAnnotationTypes();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #20                 // Method org/aspectj/weaver/ReferenceType.getAnnotationTypes:()[Lorg/aspectj/weaver/ResolvedType;
       7: areturn

  public org.aspectj.weaver.ResolvedMember[] getDeclaredFields();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #21                 // Method org/aspectj/weaver/ReferenceType.getDeclaredFields:()[Lorg/aspectj/weaver/ResolvedMember;
       7: areturn

  public org.aspectj.weaver.ResolvedType[] getDeclaredInterfaces();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #22                 // Method org/aspectj/weaver/ReferenceType.getDeclaredInterfaces:()[Lorg/aspectj/weaver/ResolvedType;
       7: areturn

  public org.aspectj.weaver.ResolvedMember[] getDeclaredMethods();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #23                 // Method org/aspectj/weaver/ReferenceType.getDeclaredMethods:()[Lorg/aspectj/weaver/ResolvedMember;
       7: areturn

  public org.aspectj.weaver.ResolvedMember[] getDeclaredPointcuts();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #24                 // Method org/aspectj/weaver/ReferenceType.getDeclaredPointcuts:()[Lorg/aspectj/weaver/ResolvedMember;
       7: areturn

  public org.aspectj.weaver.patterns.PerClause getPerClause();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #25                 // Method org/aspectj/weaver/ReferenceType.getPerClause:()Lorg/aspectj/weaver/patterns/PerClause;
       7: areturn

  public java.util.Collection<org.aspectj.weaver.patterns.Declare> getDeclares();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #26                 // Method org/aspectj/weaver/ReferenceType.getDeclares:()Ljava/util/Collection;
       7: areturn

  public java.util.Collection<org.aspectj.weaver.ConcreteTypeMunger> getTypeMungers();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #27                 // Method org/aspectj/weaver/ReferenceType.getTypeMungers:()Ljava/util/Collection;
       7: areturn

  public java.util.Collection<org.aspectj.weaver.ResolvedMember> getPrivilegedAccesses();
    Code:
       0: invokestatic  #28                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       3: areturn

  public int getModifiers();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #29                 // Method org/aspectj/weaver/ReferenceType.getModifiers:()I
       7: ireturn

  public org.aspectj.weaver.ResolvedType getSuperclass();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #30                 // Method org/aspectj/weaver/ReferenceType.getSuperclass:()Lorg/aspectj/weaver/ResolvedType;
       7: areturn

  public org.aspectj.weaver.WeaverStateInfo getWeaverState();
    Code:
       0: aconst_null
       1: areturn

  public org.aspectj.weaver.TypeVariable[] getTypeVariables();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolvedTypeX:Lorg/aspectj/weaver/ReferenceType;
       4: invokevirtual #31                 // Method org/aspectj/weaver/ReferenceType.getTypeVariables:()[Lorg/aspectj/weaver/TypeVariable;
       7: areturn
}
