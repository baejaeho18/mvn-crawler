Compiled from "ReferenceTypeDelegate.java"
public interface org.aspectj.weaver.ReferenceTypeDelegate {
  public abstract boolean isAspect();

  public abstract boolean isAnnotationStyleAspect();

  public abstract boolean isInterface();

  public abstract boolean isEnum();

  public abstract boolean isAnnotation();

  public abstract java.lang.String getRetentionPolicy();

  public abstract boolean canAnnotationTargetType();

  public abstract org.aspectj.weaver.AnnotationTargetKind[] getAnnotationTargetKinds();

  public abstract boolean isAnnotationWithRuntimeRetention();

  public abstract boolean isClass();

  public abstract boolean isGeneric();

  public abstract boolean isAnonymous();

  public abstract boolean isNested();

  public abstract boolean hasAnnotation(org.aspectj.weaver.UnresolvedType);

  public abstract org.aspectj.weaver.AnnotationAJ[] getAnnotations();

  public abstract org.aspectj.weaver.ResolvedType[] getAnnotationTypes();

  public abstract org.aspectj.weaver.ResolvedMember[] getDeclaredFields();

  public abstract org.aspectj.weaver.ResolvedType[] getDeclaredInterfaces();

  public abstract org.aspectj.weaver.ResolvedMember[] getDeclaredMethods();

  public abstract org.aspectj.weaver.ResolvedMember[] getDeclaredPointcuts();

  public abstract org.aspectj.weaver.TypeVariable[] getTypeVariables();

  public abstract int getModifiers();

  public abstract org.aspectj.weaver.patterns.PerClause getPerClause();

  public abstract java.util.Collection<org.aspectj.weaver.patterns.Declare> getDeclares();

  public abstract java.util.Collection<org.aspectj.weaver.ConcreteTypeMunger> getTypeMungers();

  public abstract java.util.Collection<org.aspectj.weaver.ResolvedMember> getPrivilegedAccesses();

  public abstract org.aspectj.weaver.ResolvedType getSuperclass();

  public abstract org.aspectj.weaver.WeaverStateInfo getWeaverState();

  public abstract org.aspectj.weaver.ReferenceType getResolvedTypeX();

  public abstract boolean isExposedToWeaver();

  public abstract boolean doesNotExposeShadowMungers();

  public abstract org.aspectj.weaver.ISourceContext getSourceContext();

  public abstract java.lang.String getSourcefilename();

  public abstract java.lang.String getDeclaredGenericSignature();

  public abstract org.aspectj.weaver.ResolvedType getOuterClass();

  public abstract boolean copySourceContext();

  public abstract boolean isCacheable();

  public abstract int getCompilerVersion();

  public abstract void ensureConsistent();

  public abstract boolean isWeavable();

  public abstract boolean hasBeenWoven();

  public abstract boolean hasAnnotations();
}
