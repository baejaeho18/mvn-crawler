Compiled from "PointcutDesignatorHandlerBasedPointcut.java"
public class org.aspectj.weaver.internal.tools.PointcutDesignatorHandlerBasedPointcut extends org.aspectj.weaver.patterns.Pointcut {
  private final org.aspectj.weaver.tools.ContextBasedMatcher matcher;

  private final org.aspectj.weaver.World world;

  public org.aspectj.weaver.internal.tools.PointcutDesignatorHandlerBasedPointcut(org.aspectj.weaver.tools.ContextBasedMatcher, org.aspectj.weaver.World);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/aspectj/weaver/patterns/Pointcut."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field matcher:Lorg/aspectj/weaver/tools/ContextBasedMatcher;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field world:Lorg/aspectj/weaver/World;
      14: return

  public byte getPointcutKind();
    Code:
       0: bipush        22
       2: ireturn

  public org.aspectj.util.FuzzyBoolean fastMatch(org.aspectj.weaver.patterns.FastMatchInfo);
    Code:
       0: aload_1
       1: instanceof    #5                  // class org/aspectj/weaver/reflect/ReflectionFastMatchInfo
       4: ifeq          123
       7: aload_0
       8: getfield      #3                  // Field world:Lorg/aspectj/weaver/World;
      11: instanceof    #6                  // class org/aspectj/weaver/reflect/ReflectionWorld
      14: ifne          27
      17: new           #7                  // class java/lang/IllegalStateException
      20: dup
      21: ldc           #8                  // String Can only match user-extension pcds with a ReflectionWorld
      23: invokespecial #9                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aconst_null
      28: astore_2
      29: aload_1
      30: invokevirtual #10                 // Method org/aspectj/weaver/patterns/FastMatchInfo.getType:()Lorg/aspectj/weaver/ResolvedType;
      33: invokevirtual #11                 // Method org/aspectj/weaver/ResolvedType.getName:()Ljava/lang/String;
      36: iconst_0
      37: aload_0
      38: getfield      #3                  // Field world:Lorg/aspectj/weaver/World;
      41: checkcast     #6                  // class org/aspectj/weaver/reflect/ReflectionWorld
      44: invokevirtual #12                 // Method org/aspectj/weaver/reflect/ReflectionWorld.getClassLoader:()Ljava/lang/ClassLoader;
      47: invokestatic  #13                 // Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
      50: astore_2
      51: goto          94
      54: astore_3
      55: aload_1
      56: invokevirtual #10                 // Method org/aspectj/weaver/patterns/FastMatchInfo.getType:()Lorg/aspectj/weaver/ResolvedType;
      59: instanceof    #15                 // class org/aspectj/weaver/ReferenceType
      62: ifeq          94
      65: aload_1
      66: invokevirtual #10                 // Method org/aspectj/weaver/patterns/FastMatchInfo.getType:()Lorg/aspectj/weaver/ResolvedType;
      69: checkcast     #15                 // class org/aspectj/weaver/ReferenceType
      72: invokevirtual #16                 // Method org/aspectj/weaver/ReferenceType.getDelegate:()Lorg/aspectj/weaver/ReferenceTypeDelegate;
      75: astore        4
      77: aload         4
      79: instanceof    #17                 // class org/aspectj/weaver/reflect/ReflectionBasedReferenceTypeDelegate
      82: ifeq          94
      85: aload         4
      87: checkcast     #17                 // class org/aspectj/weaver/reflect/ReflectionBasedReferenceTypeDelegate
      90: invokevirtual #18                 // Method org/aspectj/weaver/reflect/ReflectionBasedReferenceTypeDelegate.getClazz:()Ljava/lang/Class;
      93: astore_2
      94: aload_2
      95: ifnonnull     102
      98: getstatic     #19                 // Field org/aspectj/util/FuzzyBoolean.MAYBE:Lorg/aspectj/util/FuzzyBoolean;
     101: areturn
     102: aload_0
     103: getfield      #2                  // Field matcher:Lorg/aspectj/weaver/tools/ContextBasedMatcher;
     106: aload_2
     107: aload_1
     108: checkcast     #5                  // class org/aspectj/weaver/reflect/ReflectionFastMatchInfo
     111: invokevirtual #20                 // Method org/aspectj/weaver/reflect/ReflectionFastMatchInfo.getMatchingContext:()Lorg/aspectj/weaver/tools/MatchingContext;
     114: invokeinterface #21,  3           // InterfaceMethod org/aspectj/weaver/tools/ContextBasedMatcher.couldMatchJoinPointsInType:(Ljava/lang/Class;Lorg/aspectj/weaver/tools/MatchingContext;)Z
     119: invokestatic  #22                 // Method org/aspectj/util/FuzzyBoolean.fromBoolean:(Z)Lorg/aspectj/util/FuzzyBoolean;
     122: areturn
     123: new           #7                  // class java/lang/IllegalStateException
     126: dup
     127: ldc           #23                 // String Can only match user-extension pcds against Reflection FastMatchInfo objects
     129: invokespecial #9                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     132: athrow
    Exception table:
       from    to  target type
          29    51    54   Class java/lang/ClassNotFoundException

  public int couldMatchKinds();
    Code:
       0: getstatic     #24                 // Field org/aspectj/weaver/Shadow.ALL_SHADOW_KINDS_BITS:I
       3: ireturn

  protected org.aspectj.util.FuzzyBoolean matchInternal(org.aspectj.weaver.Shadow);
    Code:
       0: aload_1
       1: instanceof    #25                 // class org/aspectj/weaver/reflect/ReflectionShadow
       4: ifeq          59
       7: aload_1
       8: checkcast     #25                 // class org/aspectj/weaver/reflect/ReflectionShadow
      11: invokevirtual #26                 // Method org/aspectj/weaver/reflect/ReflectionShadow.getMatchingContext:()Lorg/aspectj/weaver/tools/MatchingContext;
      14: astore_2
      15: aload_0
      16: getfield      #2                  // Field matcher:Lorg/aspectj/weaver/tools/ContextBasedMatcher;
      19: aload_2
      20: invokeinterface #27,  2           // InterfaceMethod org/aspectj/weaver/tools/ContextBasedMatcher.matchesStatically:(Lorg/aspectj/weaver/tools/MatchingContext;)Lorg/aspectj/weaver/tools/FuzzyBoolean;
      25: astore_3
      26: aload_3
      27: getstatic     #28                 // Field org/aspectj/weaver/tools/FuzzyBoolean.MAYBE:Lorg/aspectj/weaver/tools/FuzzyBoolean;
      30: if_acmpne     37
      33: getstatic     #19                 // Field org/aspectj/util/FuzzyBoolean.MAYBE:Lorg/aspectj/util/FuzzyBoolean;
      36: areturn
      37: aload_3
      38: getstatic     #29                 // Field org/aspectj/weaver/tools/FuzzyBoolean.YES:Lorg/aspectj/weaver/tools/FuzzyBoolean;
      41: if_acmpne     48
      44: getstatic     #30                 // Field org/aspectj/util/FuzzyBoolean.YES:Lorg/aspectj/util/FuzzyBoolean;
      47: areturn
      48: aload_3
      49: getstatic     #31                 // Field org/aspectj/weaver/tools/FuzzyBoolean.NO:Lorg/aspectj/weaver/tools/FuzzyBoolean;
      52: if_acmpne     59
      55: getstatic     #32                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
      58: areturn
      59: new           #7                  // class java/lang/IllegalStateException
      62: dup
      63: ldc           #33                 // String Can only match user-extension pcds against Reflection shadows (not BCEL)
      65: invokespecial #9                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      68: athrow

  protected void resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings);
    Code:
       0: return

  protected org.aspectj.weaver.patterns.Pointcut concretize1(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.ResolvedType, org.aspectj.weaver.IntMap);
    Code:
       0: aload_0
       1: areturn

  protected org.aspectj.weaver.ast.Test findResidueInternal(org.aspectj.weaver.Shadow, org.aspectj.weaver.patterns.ExposedState);
    Code:
       0: aload_0
       1: getfield      #2                  // Field matcher:Lorg/aspectj/weaver/tools/ContextBasedMatcher;
       4: invokeinterface #34,  1           // InterfaceMethod org/aspectj/weaver/tools/ContextBasedMatcher.mayNeedDynamicTest:()Z
       9: ifne          16
      12: getstatic     #35                 // Field org/aspectj/weaver/ast/Literal.TRUE:Lorg/aspectj/weaver/ast/Literal;
      15: areturn
      16: aload_0
      17: aload_1
      18: invokevirtual #36                 // Method matchInternal:(Lorg/aspectj/weaver/Shadow;)Lorg/aspectj/util/FuzzyBoolean;
      21: pop
      22: new           #37                 // class org/aspectj/weaver/internal/tools/MatchingContextBasedTest
      25: dup
      26: aload_0
      27: getfield      #2                  // Field matcher:Lorg/aspectj/weaver/tools/ContextBasedMatcher;
      30: invokespecial #38                 // Method org/aspectj/weaver/internal/tools/MatchingContextBasedTest."<init>":(Lorg/aspectj/weaver/tools/ContextBasedMatcher;)V
      33: areturn

  public org.aspectj.weaver.patterns.Pointcut parameterizeWith(java.util.Map, org.aspectj.weaver.World);
    Code:
       0: aload_0
       1: areturn

  public void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;
    Code:
       0: new           #39                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #40                 // String can\'t write custom pointcut designator expressions to stream
       6: invokespecial #41                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.Object accept(org.aspectj.weaver.patterns.PatternNodeVisitor, java.lang.Object);
    Code:
       0: aload_2
       1: areturn
}
