Compiled from "ArrayReferenceType.java"
public class org.aspectj.weaver.ArrayReferenceType extends org.aspectj.weaver.ReferenceType {
  private final org.aspectj.weaver.ResolvedType componentType;

  public org.aspectj.weaver.ArrayReferenceType(java.lang.String, java.lang.String, org.aspectj.weaver.World, org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method org/aspectj/weaver/ReferenceType."<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/aspectj/weaver/World;)V
       7: aload_0
       8: aload         4
      10: putfield      #2                  // Field componentType:Lorg/aspectj/weaver/ResolvedType;
      13: return

  public final org.aspectj.weaver.ResolvedMember[] getDeclaredFields();
    Code:
       0: getstatic     #3                  // Field org/aspectj/weaver/ResolvedMember.NONE:[Lorg/aspectj/weaver/ResolvedMember;
       3: areturn

  public final org.aspectj.weaver.ResolvedMember[] getDeclaredMethods();
    Code:
       0: getstatic     #3                  // Field org/aspectj/weaver/ResolvedMember.NONE:[Lorg/aspectj/weaver/ResolvedMember;
       3: areturn

  public final org.aspectj.weaver.ResolvedType[] getDeclaredInterfaces();
    Code:
       0: iconst_2
       1: anewarray     #4                  // class org/aspectj/weaver/ResolvedType
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #5                  // Field world:Lorg/aspectj/weaver/World;
      10: getstatic     #6                  // Field CLONEABLE:Lorg/aspectj/weaver/UnresolvedType;
      13: invokevirtual #7                  // Method org/aspectj/weaver/World.getCoreType:(Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/ResolvedType;
      16: aastore
      17: dup
      18: iconst_1
      19: aload_0
      20: getfield      #5                  // Field world:Lorg/aspectj/weaver/World;
      23: getstatic     #8                  // Field SERIALIZABLE:Lorg/aspectj/weaver/UnresolvedType;
      26: invokevirtual #7                  // Method org/aspectj/weaver/World.getCoreType:(Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/ResolvedType;
      29: aastore
      30: areturn

  public org.aspectj.weaver.AnnotationAJ getAnnotationOfType(org.aspectj.weaver.UnresolvedType);
    Code:
       0: aconst_null
       1: areturn

  public org.aspectj.weaver.AnnotationAJ[] getAnnotations();
    Code:
       0: getstatic     #9                  // Field org/aspectj/weaver/AnnotationAJ.EMPTY_ARRAY:[Lorg/aspectj/weaver/AnnotationAJ;
       3: areturn

  public org.aspectj.weaver.ResolvedType[] getAnnotationTypes();
    Code:
       0: getstatic     #10                 // Field org/aspectj/weaver/ResolvedType.NONE:[Lorg/aspectj/weaver/ResolvedType;
       3: areturn

  public final org.aspectj.weaver.ResolvedMember[] getDeclaredPointcuts();
    Code:
       0: getstatic     #3                  // Field org/aspectj/weaver/ResolvedMember.NONE:[Lorg/aspectj/weaver/ResolvedMember;
       3: areturn

  public boolean hasAnnotation(org.aspectj.weaver.UnresolvedType);
    Code:
       0: iconst_0
       1: ireturn

  public final org.aspectj.weaver.ResolvedType getSuperclass();
    Code:
       0: aload_0
       1: getfield      #5                  // Field world:Lorg/aspectj/weaver/World;
       4: getstatic     #11                 // Field OBJECT:Lorg/aspectj/weaver/UnresolvedType;
       7: invokevirtual #7                  // Method org/aspectj/weaver/World.getCoreType:(Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/ResolvedType;
      10: areturn

  public final boolean isAssignableFrom(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method org/aspectj/weaver/ResolvedType.isArray:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: invokevirtual #13                 // Method org/aspectj/weaver/ResolvedType.getComponentType:()Lorg/aspectj/weaver/UnresolvedType;
      13: invokevirtual #14                 // Method org/aspectj/weaver/UnresolvedType.isPrimitiveType:()Z
      16: ifeq          25
      19: aload_1
      20: aload_0
      21: invokevirtual #15                 // Method org/aspectj/weaver/ResolvedType.equals:(Ljava/lang/Object;)Z
      24: ireturn
      25: aload_0
      26: invokevirtual #16                 // Method getComponentType:()Lorg/aspectj/weaver/UnresolvedType;
      29: aload_0
      30: getfield      #5                  // Field world:Lorg/aspectj/weaver/World;
      33: invokevirtual #17                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      36: aload_1
      37: invokevirtual #13                 // Method org/aspectj/weaver/ResolvedType.getComponentType:()Lorg/aspectj/weaver/UnresolvedType;
      40: aload_0
      41: getfield      #5                  // Field world:Lorg/aspectj/weaver/World;
      44: invokevirtual #17                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      47: invokevirtual #18                 // Method org/aspectj/weaver/ResolvedType.isAssignableFrom:(Lorg/aspectj/weaver/ResolvedType;)Z
      50: ireturn

  public boolean isAssignableFrom(org.aspectj.weaver.ResolvedType, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method isAssignableFrom:(Lorg/aspectj/weaver/ResolvedType;)Z
       5: ireturn

  public final boolean isCoerceableFrom(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_1
       1: getstatic     #20                 // Field org/aspectj/weaver/UnresolvedType.OBJECT:Lorg/aspectj/weaver/UnresolvedType;
       4: invokevirtual #15                 // Method org/aspectj/weaver/ResolvedType.equals:(Ljava/lang/Object;)Z
       7: ifne          30
      10: aload_1
      11: getstatic     #21                 // Field org/aspectj/weaver/UnresolvedType.SERIALIZABLE:Lorg/aspectj/weaver/UnresolvedType;
      14: invokevirtual #15                 // Method org/aspectj/weaver/ResolvedType.equals:(Ljava/lang/Object;)Z
      17: ifne          30
      20: aload_1
      21: getstatic     #22                 // Field org/aspectj/weaver/UnresolvedType.CLONEABLE:Lorg/aspectj/weaver/UnresolvedType;
      24: invokevirtual #15                 // Method org/aspectj/weaver/ResolvedType.equals:(Ljava/lang/Object;)Z
      27: ifeq          32
      30: iconst_1
      31: ireturn
      32: aload_1
      33: invokevirtual #12                 // Method org/aspectj/weaver/ResolvedType.isArray:()Z
      36: ifne          41
      39: iconst_0
      40: ireturn
      41: aload_1
      42: invokevirtual #13                 // Method org/aspectj/weaver/ResolvedType.getComponentType:()Lorg/aspectj/weaver/UnresolvedType;
      45: invokevirtual #14                 // Method org/aspectj/weaver/UnresolvedType.isPrimitiveType:()Z
      48: ifeq          57
      51: aload_1
      52: aload_0
      53: invokevirtual #15                 // Method org/aspectj/weaver/ResolvedType.equals:(Ljava/lang/Object;)Z
      56: ireturn
      57: aload_0
      58: invokevirtual #16                 // Method getComponentType:()Lorg/aspectj/weaver/UnresolvedType;
      61: aload_0
      62: getfield      #5                  // Field world:Lorg/aspectj/weaver/World;
      65: invokevirtual #17                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      68: aload_1
      69: invokevirtual #13                 // Method org/aspectj/weaver/ResolvedType.getComponentType:()Lorg/aspectj/weaver/UnresolvedType;
      72: aload_0
      73: getfield      #5                  // Field world:Lorg/aspectj/weaver/World;
      76: invokevirtual #17                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      79: invokevirtual #23                 // Method org/aspectj/weaver/ResolvedType.isCoerceableFrom:(Lorg/aspectj/weaver/ResolvedType;)Z
      82: ireturn

  public final int getModifiers();
    Code:
       0: bipush        7
       2: istore_1
       3: aload_0
       4: getfield      #2                  // Field componentType:Lorg/aspectj/weaver/ResolvedType;
       7: invokevirtual #25                 // Method org/aspectj/weaver/ResolvedType.getModifiers:()I
      10: iload_1
      11: iand
      12: bipush        16
      14: ior
      15: ireturn

  public org.aspectj.weaver.UnresolvedType getComponentType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field componentType:Lorg/aspectj/weaver/ResolvedType;
       4: areturn

  public org.aspectj.weaver.ResolvedType getResolvedComponentType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field componentType:Lorg/aspectj/weaver/ResolvedType;
       4: areturn

  public org.aspectj.weaver.ISourceContext getSourceContext();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method getResolvedComponentType:()Lorg/aspectj/weaver/ResolvedType;
       4: invokevirtual #27                 // Method org/aspectj/weaver/ResolvedType.getSourceContext:()Lorg/aspectj/weaver/ISourceContext;
       7: areturn

  public org.aspectj.weaver.TypeVariable[] getTypeVariables();
    Code:
       0: aload_0
       1: getfield      #28                 // Field typeVariables:[Lorg/aspectj/weaver/TypeVariable;
       4: ifnonnull     59
       7: aload_0
       8: getfield      #2                  // Field componentType:Lorg/aspectj/weaver/ResolvedType;
      11: invokevirtual #29                 // Method org/aspectj/weaver/ResolvedType.getTypeVariables:()[Lorg/aspectj/weaver/TypeVariable;
      14: ifnull        59
      17: aload_0
      18: aload_0
      19: getfield      #2                  // Field componentType:Lorg/aspectj/weaver/ResolvedType;
      22: invokevirtual #29                 // Method org/aspectj/weaver/ResolvedType.getTypeVariables:()[Lorg/aspectj/weaver/TypeVariable;
      25: putfield      #28                 // Field typeVariables:[Lorg/aspectj/weaver/TypeVariable;
      28: iconst_0
      29: istore_1
      30: iload_1
      31: aload_0
      32: getfield      #28                 // Field typeVariables:[Lorg/aspectj/weaver/TypeVariable;
      35: arraylength
      36: if_icmpge     59
      39: aload_0
      40: getfield      #28                 // Field typeVariables:[Lorg/aspectj/weaver/TypeVariable;
      43: iload_1
      44: aaload
      45: aload_0
      46: getfield      #5                  // Field world:Lorg/aspectj/weaver/World;
      49: invokevirtual #30                 // Method org/aspectj/weaver/TypeVariable.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/TypeVariable;
      52: pop
      53: iinc          1, 1
      56: goto          30
      59: aload_0
      60: getfield      #28                 // Field typeVariables:[Lorg/aspectj/weaver/TypeVariable;
      63: areturn

  public boolean isAnnotation();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isAnonymous();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isAnnotationStyleAspect();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isAspect();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isPrimitiveType();
    Code:
       0: aload_0
       1: getfield      #31                 // Field typeKind:Lorg/aspectj/weaver/UnresolvedType$TypeKind;
       4: getstatic     #32                 // Field org/aspectj/weaver/UnresolvedType$TypeKind.PRIMITIVE:Lorg/aspectj/weaver/UnresolvedType$TypeKind;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isSimpleType();
    Code:
       0: aload_0
       1: getfield      #31                 // Field typeKind:Lorg/aspectj/weaver/UnresolvedType$TypeKind;
       4: getstatic     #33                 // Field org/aspectj/weaver/UnresolvedType$TypeKind.SIMPLE:Lorg/aspectj/weaver/UnresolvedType$TypeKind;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isRawType();
    Code:
       0: aload_0
       1: getfield      #31                 // Field typeKind:Lorg/aspectj/weaver/UnresolvedType$TypeKind;
       4: getstatic     #34                 // Field org/aspectj/weaver/UnresolvedType$TypeKind.RAW:Lorg/aspectj/weaver/UnresolvedType$TypeKind;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isGenericType();
    Code:
       0: aload_0
       1: getfield      #31                 // Field typeKind:Lorg/aspectj/weaver/UnresolvedType$TypeKind;
       4: getstatic     #35                 // Field org/aspectj/weaver/UnresolvedType$TypeKind.GENERIC:Lorg/aspectj/weaver/UnresolvedType$TypeKind;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isParameterizedType();
    Code:
       0: aload_0
       1: getfield      #31                 // Field typeKind:Lorg/aspectj/weaver/UnresolvedType$TypeKind;
       4: getstatic     #36                 // Field org/aspectj/weaver/UnresolvedType$TypeKind.PARAMETERIZED:Lorg/aspectj/weaver/UnresolvedType$TypeKind;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isTypeVariableReference();
    Code:
       0: aload_0
       1: getfield      #31                 // Field typeKind:Lorg/aspectj/weaver/UnresolvedType$TypeKind;
       4: getstatic     #37                 // Field org/aspectj/weaver/UnresolvedType$TypeKind.TYPE_VARIABLE:Lorg/aspectj/weaver/UnresolvedType$TypeKind;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isGenericWildcard();
    Code:
       0: aload_0
       1: getfield      #31                 // Field typeKind:Lorg/aspectj/weaver/UnresolvedType$TypeKind;
       4: getstatic     #38                 // Field org/aspectj/weaver/UnresolvedType$TypeKind.WILDCARD:Lorg/aspectj/weaver/UnresolvedType$TypeKind;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isEnum();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isNested();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isClass();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isExposedToWeaver();
    Code:
       0: iconst_0
       1: ireturn

  public boolean canAnnotationTargetType();
    Code:
       0: iconst_0
       1: ireturn

  public org.aspectj.weaver.AnnotationTargetKind[] getAnnotationTargetKinds();
    Code:
       0: aconst_null
       1: areturn

  public boolean isAnnotationWithRuntimeRetention();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isPrimitiveArray();
    Code:
       0: aload_0
       1: getfield      #2                  // Field componentType:Lorg/aspectj/weaver/ResolvedType;
       4: invokevirtual #39                 // Method org/aspectj/weaver/ResolvedType.isPrimitiveType:()Z
       7: ifeq          12
      10: iconst_1
      11: ireturn
      12: aload_0
      13: getfield      #2                  // Field componentType:Lorg/aspectj/weaver/ResolvedType;
      16: invokevirtual #12                 // Method org/aspectj/weaver/ResolvedType.isArray:()Z
      19: ifeq          30
      22: aload_0
      23: getfield      #2                  // Field componentType:Lorg/aspectj/weaver/ResolvedType;
      26: invokevirtual #40                 // Method org/aspectj/weaver/ResolvedType.isPrimitiveArray:()Z
      29: ireturn
      30: iconst_0
      31: ireturn
}
