Compiled from "World.java"
public abstract class org.aspectj.weaver.World implements org.aspectj.weaver.Dump$INode {
  private org.aspectj.bridge.IMessageHandler messageHandler;

  private org.aspectj.weaver.ICrossReferenceHandler xrefHandler;

  private org.aspectj.weaver.TypeVariableDeclaringElement typeVariableLookupScope;

  protected org.aspectj.weaver.World$TypeMap typeMap;

  private java.util.Set<org.aspectj.weaver.tools.PointcutDesignatorHandler> pointcutDesignators;

  public static boolean createInjarHierarchy;

  private final org.aspectj.weaver.World$AspectPrecedenceCalculator precedenceCalculator;

  private final org.aspectj.weaver.CrosscuttingMembersSet crosscuttingMembersSet;

  private org.aspectj.util.IStructureModel model;

  private org.aspectj.weaver.Lint lint;

  private boolean XnoInline;

  private boolean XlazyTjp;

  private boolean XhasMember;

  private boolean Xpinpoint;

  private boolean behaveInJava5Way;

  private boolean timing;

  private boolean timingPeriodically;

  private boolean incrementalCompileCouldFollow;

  private java.lang.String targetAspectjRuntimeLevel;

  private boolean optionalJoinpoint_ArrayConstruction;

  private boolean optionalJoinpoint_Synchronization;

  private boolean addSerialVerUID;

  private java.util.Properties extraConfiguration;

  private boolean checkedAdvancedConfiguration;

  private boolean synchronizationPointcutsInUse;

  private boolean runMinimalMemory;

  private boolean transientTjpFields;

  private boolean runMinimalMemorySet;

  private boolean shouldPipelineCompilation;

  private boolean shouldGenerateStackMaps;

  protected boolean bcelRepositoryCaching;

  private boolean fastMethodPacking;

  private int itdVersion;

  private boolean minimalModel;

  private boolean useFinal;

  private boolean targettingRuntime1_6_10;

  private boolean completeBinaryTypes;

  private boolean overWeaving;

  private static boolean systemPropertyOverWeaving;

  public boolean forDEBUG_structuralChangesCode;

  public boolean forDEBUG_bridgingCode;

  public boolean optimizedMatching;

  public boolean generateNewLvts;

  protected long timersPerJoinpoint;

  protected long timersPerType;

  public int infoMessagesEnabled;

  private static org.aspectj.weaver.tools.Trace trace;

  private boolean errorThreshold;

  private boolean warningThreshold;

  private java.util.List<java.lang.RuntimeException> dumpState_cantFindTypeExceptions;

  public final org.aspectj.weaver.ResolvedType$Primitive BYTE;

  public final org.aspectj.weaver.ResolvedType$Primitive CHAR;

  public final org.aspectj.weaver.ResolvedType$Primitive DOUBLE;

  public final org.aspectj.weaver.ResolvedType$Primitive FLOAT;

  public final org.aspectj.weaver.ResolvedType$Primitive INT;

  public final org.aspectj.weaver.ResolvedType$Primitive LONG;

  public final org.aspectj.weaver.ResolvedType$Primitive SHORT;

  public final org.aspectj.weaver.ResolvedType$Primitive BOOLEAN;

  public final org.aspectj.weaver.ResolvedType$Primitive VOID;

  private java.lang.Object buildingTypeLock;

  private org.aspectj.weaver.BoundedReferenceType wildcard;

  private boolean allLintIgnored;

  public static final java.lang.String xsetAVOID_FINAL;

  public static final java.lang.String xsetWEAVE_JAVA_PACKAGES;

  public static final java.lang.String xsetWEAVE_JAVAX_PACKAGES;

  public static final java.lang.String xsetCAPTURE_ALL_CONTEXT;

  public static final java.lang.String xsetRUN_MINIMAL_MEMORY;

  public static final java.lang.String xsetDEBUG_STRUCTURAL_CHANGES_CODE;

  public static final java.lang.String xsetDEBUG_BRIDGING;

  public static final java.lang.String xsetTRANSIENT_TJP_FIELDS;

  public static final java.lang.String xsetBCEL_REPOSITORY_CACHING;

  public static final java.lang.String xsetPIPELINE_COMPILATION;

  public static final java.lang.String xsetGENERATE_STACKMAPS;

  public static final java.lang.String xsetPIPELINE_COMPILATION_DEFAULT;

  public static final java.lang.String xsetCOMPLETE_BINARY_TYPES;

  public static final java.lang.String xsetCOMPLETE_BINARY_TYPES_DEFAULT;

  public static final java.lang.String xsetTYPE_DEMOTION;

  public static final java.lang.String xsetTYPE_DEMOTION_DEBUG;

  public static final java.lang.String xsetTYPE_REFS;

  public static final java.lang.String xsetBCEL_REPOSITORY_CACHING_DEFAULT;

  public static final java.lang.String xsetFAST_PACK_METHODS;

  public static final java.lang.String xsetOVERWEAVING;

  public static final java.lang.String xsetOPTIMIZED_MATCHING;

  public static final java.lang.String xsetTIMERS_PER_JOINPOINT;

  public static final java.lang.String xsetTIMERS_PER_FASTMATCH_CALL;

  public static final java.lang.String xsetITD_VERSION;

  public static final java.lang.String xsetITD_VERSION_ORIGINAL;

  public static final java.lang.String xsetITD_VERSION_2NDGEN;

  public static final java.lang.String xsetITD_VERSION_DEFAULT;

  public static final java.lang.String xsetMINIMAL_MODEL;

  public static final java.lang.String xsetTARGETING_RUNTIME_1610;

  public static final java.lang.String xsetGENERATE_NEW_LVTS;

  private final java.util.Map<java.lang.Class<?>, org.aspectj.weaver.TypeVariable[]> workInProgress1;

  private java.util.Map<org.aspectj.weaver.ResolvedType, java.util.Set<org.aspectj.weaver.ResolvedType>> exclusionMap;

  private org.aspectj.weaver.World$TimeCollector timeCollector;

  protected org.aspectj.weaver.World();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #4                  // Field org/aspectj/bridge/IMessageHandler.SYSTEM_ERR:Lorg/aspectj/bridge/IMessageHandler;
       8: putfield      #5                  // Field messageHandler:Lorg/aspectj/bridge/IMessageHandler;
      11: aload_0
      12: aconst_null
      13: putfield      #6                  // Field xrefHandler:Lorg/aspectj/weaver/ICrossReferenceHandler;
      16: aload_0
      17: new           #7                  // class org/aspectj/weaver/World$TypeMap
      20: dup
      21: aload_0
      22: invokespecial #8                  // Method org/aspectj/weaver/World$TypeMap."<init>":(Lorg/aspectj/weaver/World;)V
      25: putfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
      28: aload_0
      29: new           #10                 // class org/aspectj/weaver/CrosscuttingMembersSet
      32: dup
      33: aload_0
      34: invokespecial #11                 // Method org/aspectj/weaver/CrosscuttingMembersSet."<init>":(Lorg/aspectj/weaver/World;)V
      37: putfield      #12                 // Field crosscuttingMembersSet:Lorg/aspectj/weaver/CrosscuttingMembersSet;
      40: aload_0
      41: aconst_null
      42: putfield      #13                 // Field model:Lorg/aspectj/util/IStructureModel;
      45: aload_0
      46: new           #14                 // class org/aspectj/weaver/Lint
      49: dup
      50: aload_0
      51: invokespecial #15                 // Method org/aspectj/weaver/Lint."<init>":(Lorg/aspectj/weaver/World;)V
      54: putfield      #16                 // Field lint:Lorg/aspectj/weaver/Lint;
      57: aload_0
      58: iconst_0
      59: putfield      #17                 // Field XhasMember:Z
      62: aload_0
      63: iconst_0
      64: putfield      #18                 // Field Xpinpoint:Z
      67: aload_0
      68: iconst_0
      69: putfield      #19                 // Field behaveInJava5Way:Z
      72: aload_0
      73: iconst_0
      74: putfield      #20                 // Field timing:Z
      77: aload_0
      78: iconst_1
      79: putfield      #2                  // Field timingPeriodically:Z
      82: aload_0
      83: iconst_0
      84: putfield      #21                 // Field incrementalCompileCouldFollow:Z
      87: aload_0
      88: ldc           #23                 // String 1.5
      90: putfield      #24                 // Field targetAspectjRuntimeLevel:Ljava/lang/String;
      93: aload_0
      94: iconst_0
      95: putfield      #25                 // Field optionalJoinpoint_ArrayConstruction:Z
      98: aload_0
      99: iconst_0
     100: putfield      #26                 // Field optionalJoinpoint_Synchronization:Z
     103: aload_0
     104: iconst_0
     105: putfield      #27                 // Field addSerialVerUID:Z
     108: aload_0
     109: aconst_null
     110: putfield      #28                 // Field extraConfiguration:Ljava/util/Properties;
     113: aload_0
     114: iconst_0
     115: putfield      #29                 // Field checkedAdvancedConfiguration:Z
     118: aload_0
     119: iconst_0
     120: putfield      #30                 // Field synchronizationPointcutsInUse:Z
     123: aload_0
     124: iconst_0
     125: putfield      #31                 // Field runMinimalMemory:Z
     128: aload_0
     129: iconst_0
     130: putfield      #32                 // Field transientTjpFields:Z
     133: aload_0
     134: iconst_0
     135: putfield      #33                 // Field runMinimalMemorySet:Z
     138: aload_0
     139: iconst_1
     140: putfield      #34                 // Field shouldPipelineCompilation:Z
     143: aload_0
     144: iconst_0
     145: putfield      #35                 // Field shouldGenerateStackMaps:Z
     148: aload_0
     149: ldc           #36                 // String true
     151: ldc           #36                 // String true
     153: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     156: putfield      #38                 // Field bcelRepositoryCaching:Z
     159: aload_0
     160: iconst_0
     161: putfield      #39                 // Field fastMethodPacking:Z
     164: aload_0
     165: iconst_2
     166: putfield      #40                 // Field itdVersion:I
     169: aload_0
     170: iconst_1
     171: putfield      #41                 // Field minimalModel:Z
     174: aload_0
     175: iconst_1
     176: putfield      #42                 // Field useFinal:Z
     179: aload_0
     180: iconst_0
     181: putfield      #43                 // Field targettingRuntime1_6_10:Z
     184: aload_0
     185: iconst_0
     186: putfield      #44                 // Field completeBinaryTypes:Z
     189: aload_0
     190: iconst_0
     191: putfield      #45                 // Field overWeaving:Z
     194: aload_0
     195: iconst_0
     196: putfield      #46                 // Field forDEBUG_structuralChangesCode:Z
     199: aload_0
     200: iconst_0
     201: putfield      #47                 // Field forDEBUG_bridgingCode:Z
     204: aload_0
     205: iconst_1
     206: putfield      #48                 // Field optimizedMatching:Z
     209: aload_0
     210: iconst_1
     211: putfield      #49                 // Field generateNewLvts:Z
     214: aload_0
     215: ldc2_w        #50                 // long 25000l
     218: putfield      #52                 // Field timersPerJoinpoint:J
     221: aload_0
     222: ldc2_w        #53                 // long 250l
     225: putfield      #55                 // Field timersPerType:J
     228: aload_0
     229: iconst_0
     230: putfield      #56                 // Field infoMessagesEnabled:I
     233: aload_0
     234: aconst_null
     235: putfield      #57                 // Field dumpState_cantFindTypeExceptions:Ljava/util/List;
     238: aload_0
     239: new           #58                 // class org/aspectj/weaver/ResolvedType$Primitive
     242: dup
     243: ldc           #59                 // String B
     245: iconst_1
     246: iconst_0
     247: invokespecial #60                 // Method org/aspectj/weaver/ResolvedType$Primitive."<init>":(Ljava/lang/String;II)V
     250: putfield      #61                 // Field BYTE:Lorg/aspectj/weaver/ResolvedType$Primitive;
     253: aload_0
     254: new           #58                 // class org/aspectj/weaver/ResolvedType$Primitive
     257: dup
     258: ldc           #62                 // String C
     260: iconst_1
     261: iconst_1
     262: invokespecial #60                 // Method org/aspectj/weaver/ResolvedType$Primitive."<init>":(Ljava/lang/String;II)V
     265: putfield      #63                 // Field CHAR:Lorg/aspectj/weaver/ResolvedType$Primitive;
     268: aload_0
     269: new           #58                 // class org/aspectj/weaver/ResolvedType$Primitive
     272: dup
     273: ldc           #64                 // String D
     275: iconst_2
     276: iconst_2
     277: invokespecial #60                 // Method org/aspectj/weaver/ResolvedType$Primitive."<init>":(Ljava/lang/String;II)V
     280: putfield      #65                 // Field DOUBLE:Lorg/aspectj/weaver/ResolvedType$Primitive;
     283: aload_0
     284: new           #58                 // class org/aspectj/weaver/ResolvedType$Primitive
     287: dup
     288: ldc           #66                 // String F
     290: iconst_1
     291: iconst_3
     292: invokespecial #60                 // Method org/aspectj/weaver/ResolvedType$Primitive."<init>":(Ljava/lang/String;II)V
     295: putfield      #67                 // Field FLOAT:Lorg/aspectj/weaver/ResolvedType$Primitive;
     298: aload_0
     299: new           #58                 // class org/aspectj/weaver/ResolvedType$Primitive
     302: dup
     303: ldc           #68                 // String I
     305: iconst_1
     306: iconst_4
     307: invokespecial #60                 // Method org/aspectj/weaver/ResolvedType$Primitive."<init>":(Ljava/lang/String;II)V
     310: putfield      #69                 // Field INT:Lorg/aspectj/weaver/ResolvedType$Primitive;
     313: aload_0
     314: new           #58                 // class org/aspectj/weaver/ResolvedType$Primitive
     317: dup
     318: ldc           #70                 // String J
     320: iconst_2
     321: iconst_5
     322: invokespecial #60                 // Method org/aspectj/weaver/ResolvedType$Primitive."<init>":(Ljava/lang/String;II)V
     325: putfield      #71                 // Field LONG:Lorg/aspectj/weaver/ResolvedType$Primitive;
     328: aload_0
     329: new           #58                 // class org/aspectj/weaver/ResolvedType$Primitive
     332: dup
     333: ldc           #72                 // String S
     335: iconst_1
     336: bipush        6
     338: invokespecial #60                 // Method org/aspectj/weaver/ResolvedType$Primitive."<init>":(Ljava/lang/String;II)V
     341: putfield      #73                 // Field SHORT:Lorg/aspectj/weaver/ResolvedType$Primitive;
     344: aload_0
     345: new           #58                 // class org/aspectj/weaver/ResolvedType$Primitive
     348: dup
     349: ldc           #74                 // String Z
     351: iconst_1
     352: bipush        7
     354: invokespecial #60                 // Method org/aspectj/weaver/ResolvedType$Primitive."<init>":(Ljava/lang/String;II)V
     357: putfield      #75                 // Field BOOLEAN:Lorg/aspectj/weaver/ResolvedType$Primitive;
     360: aload_0
     361: new           #58                 // class org/aspectj/weaver/ResolvedType$Primitive
     364: dup
     365: ldc           #76                 // String V
     367: iconst_0
     368: bipush        8
     370: invokespecial #60                 // Method org/aspectj/weaver/ResolvedType$Primitive."<init>":(Ljava/lang/String;II)V
     373: putfield      #77                 // Field VOID:Lorg/aspectj/weaver/ResolvedType$Primitive;
     376: aload_0
     377: new           #78                 // class java/lang/Object
     380: dup
     381: invokespecial #3                  // Method java/lang/Object."<init>":()V
     384: putfield      #79                 // Field buildingTypeLock:Ljava/lang/Object;
     387: aload_0
     388: iconst_0
     389: putfield      #80                 // Field allLintIgnored:Z
     392: aload_0
     393: new           #81                 // class java/util/HashMap
     396: dup
     397: invokespecial #82                 // Method java/util/HashMap."<init>":()V
     400: putfield      #83                 // Field workInProgress1:Ljava/util/Map;
     403: aload_0
     404: new           #81                 // class java/util/HashMap
     407: dup
     408: invokespecial #82                 // Method java/util/HashMap."<init>":()V
     411: putfield      #84                 // Field exclusionMap:Ljava/util/Map;
     414: aload_0
     415: aconst_null
     416: putfield      #85                 // Field timeCollector:Lorg/aspectj/weaver/World$TimeCollector;
     419: aload_0
     420: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
     423: ldc           #59                 // String B
     425: aload_0
     426: getfield      #61                 // Field BYTE:Lorg/aspectj/weaver/ResolvedType$Primitive;
     429: invokevirtual #86                 // Method org/aspectj/weaver/World$TypeMap.put:(Ljava/lang/String;Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/weaver/ResolvedType;
     432: pop
     433: aload_0
     434: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
     437: ldc           #72                 // String S
     439: aload_0
     440: getfield      #73                 // Field SHORT:Lorg/aspectj/weaver/ResolvedType$Primitive;
     443: invokevirtual #86                 // Method org/aspectj/weaver/World$TypeMap.put:(Ljava/lang/String;Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/weaver/ResolvedType;
     446: pop
     447: aload_0
     448: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
     451: ldc           #68                 // String I
     453: aload_0
     454: getfield      #69                 // Field INT:Lorg/aspectj/weaver/ResolvedType$Primitive;
     457: invokevirtual #86                 // Method org/aspectj/weaver/World$TypeMap.put:(Ljava/lang/String;Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/weaver/ResolvedType;
     460: pop
     461: aload_0
     462: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
     465: ldc           #70                 // String J
     467: aload_0
     468: getfield      #71                 // Field LONG:Lorg/aspectj/weaver/ResolvedType$Primitive;
     471: invokevirtual #86                 // Method org/aspectj/weaver/World$TypeMap.put:(Ljava/lang/String;Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/weaver/ResolvedType;
     474: pop
     475: aload_0
     476: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
     479: ldc           #66                 // String F
     481: aload_0
     482: getfield      #67                 // Field FLOAT:Lorg/aspectj/weaver/ResolvedType$Primitive;
     485: invokevirtual #86                 // Method org/aspectj/weaver/World$TypeMap.put:(Ljava/lang/String;Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/weaver/ResolvedType;
     488: pop
     489: aload_0
     490: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
     493: ldc           #64                 // String D
     495: aload_0
     496: getfield      #65                 // Field DOUBLE:Lorg/aspectj/weaver/ResolvedType$Primitive;
     499: invokevirtual #86                 // Method org/aspectj/weaver/World$TypeMap.put:(Ljava/lang/String;Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/weaver/ResolvedType;
     502: pop
     503: aload_0
     504: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
     507: ldc           #62                 // String C
     509: aload_0
     510: getfield      #63                 // Field CHAR:Lorg/aspectj/weaver/ResolvedType$Primitive;
     513: invokevirtual #86                 // Method org/aspectj/weaver/World$TypeMap.put:(Ljava/lang/String;Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/weaver/ResolvedType;
     516: pop
     517: aload_0
     518: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
     521: ldc           #74                 // String Z
     523: aload_0
     524: getfield      #75                 // Field BOOLEAN:Lorg/aspectj/weaver/ResolvedType$Primitive;
     527: invokevirtual #86                 // Method org/aspectj/weaver/World$TypeMap.put:(Ljava/lang/String;Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/weaver/ResolvedType;
     530: pop
     531: aload_0
     532: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
     535: ldc           #76                 // String V
     537: aload_0
     538: getfield      #77                 // Field VOID:Lorg/aspectj/weaver/ResolvedType$Primitive;
     541: invokevirtual #86                 // Method org/aspectj/weaver/World$TypeMap.put:(Ljava/lang/String;Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/weaver/ResolvedType;
     544: pop
     545: aload_0
     546: new           #87                 // class org/aspectj/weaver/World$AspectPrecedenceCalculator
     549: dup
     550: aload_0
     551: invokespecial #88                 // Method org/aspectj/weaver/World$AspectPrecedenceCalculator."<init>":(Lorg/aspectj/weaver/World;)V
     554: putfield      #89                 // Field precedenceCalculator:Lorg/aspectj/weaver/World$AspectPrecedenceCalculator;
     557: return

  public void accept(org.aspectj.weaver.Dump$IVisitor);
    Code:
       0: aload_1
       1: ldc           #90                 // String Shadow mungers:
       3: invokeinterface #91,  2           // InterfaceMethod org/aspectj/weaver/Dump$IVisitor.visitObject:(Ljava/lang/Object;)V
       8: aload_1
       9: aload_0
      10: getfield      #12                 // Field crosscuttingMembersSet:Lorg/aspectj/weaver/CrosscuttingMembersSet;
      13: invokevirtual #92                 // Method org/aspectj/weaver/CrosscuttingMembersSet.getShadowMungers:()Ljava/util/List;
      16: invokeinterface #93,  2           // InterfaceMethod org/aspectj/weaver/Dump$IVisitor.visitList:(Ljava/util/List;)V
      21: aload_1
      22: ldc           #94                 // String Type mungers:
      24: invokeinterface #91,  2           // InterfaceMethod org/aspectj/weaver/Dump$IVisitor.visitObject:(Ljava/lang/Object;)V
      29: aload_1
      30: aload_0
      31: getfield      #12                 // Field crosscuttingMembersSet:Lorg/aspectj/weaver/CrosscuttingMembersSet;
      34: invokevirtual #95                 // Method org/aspectj/weaver/CrosscuttingMembersSet.getTypeMungers:()Ljava/util/List;
      37: invokeinterface #93,  2           // InterfaceMethod org/aspectj/weaver/Dump$IVisitor.visitList:(Ljava/util/List;)V
      42: aload_1
      43: ldc           #96                 // String Late Type mungers:
      45: invokeinterface #91,  2           // InterfaceMethod org/aspectj/weaver/Dump$IVisitor.visitObject:(Ljava/lang/Object;)V
      50: aload_1
      51: aload_0
      52: getfield      #12                 // Field crosscuttingMembersSet:Lorg/aspectj/weaver/CrosscuttingMembersSet;
      55: invokevirtual #97                 // Method org/aspectj/weaver/CrosscuttingMembersSet.getLateTypeMungers:()Ljava/util/List;
      58: invokeinterface #93,  2           // InterfaceMethod org/aspectj/weaver/Dump$IVisitor.visitList:(Ljava/util/List;)V
      63: aload_0
      64: getfield      #57                 // Field dumpState_cantFindTypeExceptions:Ljava/util/List;
      67: ifnull        93
      70: aload_1
      71: ldc           #98                 // String Cant find type problems:
      73: invokeinterface #91,  2           // InterfaceMethod org/aspectj/weaver/Dump$IVisitor.visitObject:(Ljava/lang/Object;)V
      78: aload_1
      79: aload_0
      80: getfield      #57                 // Field dumpState_cantFindTypeExceptions:Ljava/util/List;
      83: invokeinterface #93,  2           // InterfaceMethod org/aspectj/weaver/Dump$IVisitor.visitList:(Ljava/util/List;)V
      88: aload_0
      89: aconst_null
      90: putfield      #57                 // Field dumpState_cantFindTypeExceptions:Ljava/util/List;
      93: return

  public org.aspectj.weaver.ResolvedType resolve(org.aspectj.weaver.UnresolvedType);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #99                 // Method resolve:(Lorg/aspectj/weaver/UnresolvedType;Z)Lorg/aspectj/weaver/ResolvedType;
       6: areturn

  public org.aspectj.weaver.ResolvedType resolve(org.aspectj.weaver.UnresolvedType, org.aspectj.bridge.ISourceLocation);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #99                 // Method resolve:(Lorg/aspectj/weaver/UnresolvedType;Z)Lorg/aspectj/weaver/ResolvedType;
       6: astore_3
       7: aload_1
       8: invokestatic  #100                // Method org/aspectj/weaver/ResolvedType.isMissing:(Lorg/aspectj/weaver/UnresolvedType;)Z
      11: ifeq          34
      14: aload_0
      15: invokevirtual #101                // Method getLint:()Lorg/aspectj/weaver/Lint;
      18: getfield      #102                // Field org/aspectj/weaver/Lint.cantFindType:Lorg/aspectj/weaver/Lint$Kind;
      21: ldc           #104                // String cantFindType
      23: aload_1
      24: invokevirtual #105                // Method org/aspectj/weaver/UnresolvedType.getName:()Ljava/lang/String;
      27: invokestatic  #106                // Method org/aspectj/weaver/WeaverMessages.format:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
      30: aload_2
      31: invokevirtual #107                // Method org/aspectj/weaver/Lint$Kind.signal:(Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;)V
      34: aload_3
      35: areturn

  public org.aspectj.weaver.ResolvedType[] resolve(org.aspectj.weaver.UnresolvedType[]);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #108                // Field org/aspectj/weaver/ResolvedType.NONE:[Lorg/aspectj/weaver/ResolvedType;
       7: areturn
       8: aload_1
       9: arraylength
      10: anewarray     #109                // class org/aspectj/weaver/ResolvedType
      13: astore_2
      14: iconst_0
      15: istore_3
      16: iload_3
      17: aload_1
      18: arraylength
      19: if_icmpge     38
      22: aload_2
      23: iload_3
      24: aload_0
      25: aload_1
      26: iload_3
      27: aaload
      28: invokevirtual #110                // Method resolve:(Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/ResolvedType;
      31: aastore
      32: iinc          3, 1
      35: goto          16
      38: aload_2
      39: areturn

  public org.aspectj.weaver.ResolvedType resolve(org.aspectj.weaver.UnresolvedType, boolean);
    Code:
       0: aload_1
       1: instanceof    #109                // class org/aspectj/weaver/ResolvedType
       4: ifeq          37
       7: aload_1
       8: checkcast     #109                // class org/aspectj/weaver/ResolvedType
      11: astore_3
      12: aload_0
      13: aload_3
      14: invokevirtual #111                // Method resolve:(Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/weaver/ResolvedType;
      17: astore_3
      18: aload_3
      19: invokevirtual #112                // Method org/aspectj/weaver/ResolvedType.isTypeVariableReference:()Z
      22: ifeq          35
      25: aload_3
      26: checkcast     #113                // class org/aspectj/weaver/TypeVariableReferenceType
      29: invokevirtual #114                // Method org/aspectj/weaver/TypeVariableReferenceType.isTypeVariableResolved:()Z
      32: ifeq          37
      35: aload_3
      36: areturn
      37: aload_1
      38: invokevirtual #115                // Method org/aspectj/weaver/UnresolvedType.isTypeVariableReference:()Z
      41: ifeq          50
      44: aload_1
      45: aload_0
      46: invokevirtual #116                // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      49: areturn
      50: aload_1
      51: invokevirtual #117                // Method org/aspectj/weaver/UnresolvedType.getSignature:()Ljava/lang/String;
      54: astore_3
      55: aload_0
      56: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
      59: aload_3
      60: invokevirtual #118                // Method org/aspectj/weaver/World$TypeMap.get:(Ljava/lang/String;)Lorg/aspectj/weaver/ResolvedType;
      63: astore        4
      65: aload         4
      67: ifnull        79
      70: aload         4
      72: aload_0
      73: putfield      #119                // Field org/aspectj/weaver/ResolvedType.world:Lorg/aspectj/weaver/World;
      76: aload         4
      78: areturn
      79: aload_3
      80: ldc           #120                // String ?
      82: invokevirtual #121                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      85: ifne          97
      88: aload_3
      89: ldc           #122                // String *
      91: invokevirtual #121                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      94: ifeq          118
      97: aload_0
      98: invokespecial #123                // Method getWildcard:()Lorg/aspectj/weaver/BoundedReferenceType;
     101: astore        5
     103: aload_0
     104: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
     107: ldc           #120                // String ?
     109: aload         5
     111: invokevirtual #86                 // Method org/aspectj/weaver/World$TypeMap.put:(Ljava/lang/String;Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/weaver/ResolvedType;
     114: pop
     115: aload         5
     117: areturn
     118: aload_0
     119: getfield      #79                 // Field buildingTypeLock:Ljava/lang/Object;
     122: dup
     123: astore        5
     125: monitorenter
     126: aload_1
     127: invokevirtual #124                // Method org/aspectj/weaver/UnresolvedType.isArray:()Z
     130: ifeq          183
     133: aload_0
     134: aload_1
     135: invokevirtual #125                // Method org/aspectj/weaver/UnresolvedType.getComponentType:()Lorg/aspectj/weaver/UnresolvedType;
     138: iload_2
     139: invokevirtual #99                 // Method resolve:(Lorg/aspectj/weaver/UnresolvedType;Z)Lorg/aspectj/weaver/ResolvedType;
     142: astore        6
     144: new           #126                // class org/aspectj/weaver/ArrayReferenceType
     147: dup
     148: aload_3
     149: new           #127                // class java/lang/StringBuilder
     152: dup
     153: invokespecial #128                // Method java/lang/StringBuilder."<init>":()V
     156: ldc           #129                // String [
     158: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: aload         6
     163: invokevirtual #131                // Method org/aspectj/weaver/ResolvedType.getErasureSignature:()Ljava/lang/String;
     166: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: invokevirtual #132                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     172: aload_0
     173: aload         6
     175: invokespecial #133                // Method org/aspectj/weaver/ArrayReferenceType."<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/aspectj/weaver/World;Lorg/aspectj/weaver/ResolvedType;)V
     178: astore        4
     180: goto          223
     183: aload_0
     184: aload_1
     185: iload_2
     186: invokespecial #134                // Method resolveToReferenceType:(Lorg/aspectj/weaver/UnresolvedType;Z)Lorg/aspectj/weaver/ResolvedType;
     189: astore        4
     191: iload_2
     192: ifne          210
     195: aload         4
     197: invokevirtual #135                // Method org/aspectj/weaver/ResolvedType.isMissing:()Z
     200: ifeq          210
     203: aload_0
     204: aload_1
     205: invokespecial #136                // Method handleRequiredMissingTypeDuringResolution:(Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/ResolvedType;
     208: astore        4
     210: aload_0
     211: getfield      #44                 // Field completeBinaryTypes:Z
     214: ifeq          223
     217: aload_0
     218: aload         4
     220: invokevirtual #137                // Method completeBinaryType:(Lorg/aspectj/weaver/ResolvedType;)V
     223: aload         5
     225: monitorexit
     226: goto          237
     229: astore        7
     231: aload         5
     233: monitorexit
     234: aload         7
     236: athrow
     237: aload_0
     238: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
     241: aload_3
     242: invokevirtual #118                // Method org/aspectj/weaver/World$TypeMap.get:(Ljava/lang/String;)Lorg/aspectj/weaver/ResolvedType;
     245: astore        5
     247: aload         5
     249: ifnonnull     282
     252: aload         4
     254: invokevirtual #135                // Method org/aspectj/weaver/ResolvedType.isMissing:()Z
     257: ifne          282
     260: aload_0
     261: aload         4
     263: invokespecial #138                // Method ensureRawTypeIfNecessary:(Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/weaver/ResolvedType;
     266: astore        4
     268: aload_0
     269: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
     272: aload_3
     273: aload         4
     275: invokevirtual #86                 // Method org/aspectj/weaver/World$TypeMap.put:(Ljava/lang/String;Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/weaver/ResolvedType;
     278: pop
     279: aload         4
     281: areturn
     282: aload         5
     284: ifnonnull     290
     287: aload         4
     289: areturn
     290: aload         5
     292: areturn
    Exception table:
       from    to  target type
         126   226   229   any
         229   234   229   any

  private org.aspectj.weaver.BoundedReferenceType getWildcard();
    Code:
       0: aload_0
       1: getfield      #139                // Field wildcard:Lorg/aspectj/weaver/BoundedReferenceType;
       4: ifnonnull     19
       7: aload_0
       8: new           #140                // class org/aspectj/weaver/BoundedReferenceType
      11: dup
      12: aload_0
      13: invokespecial #141                // Method org/aspectj/weaver/BoundedReferenceType."<init>":(Lorg/aspectj/weaver/World;)V
      16: putfield      #139                // Field wildcard:Lorg/aspectj/weaver/BoundedReferenceType;
      19: aload_0
      20: getfield      #139                // Field wildcard:Lorg/aspectj/weaver/BoundedReferenceType;
      23: areturn

  protected void completeBinaryType(org.aspectj.weaver.ResolvedType);
    Code:
       0: return

  public boolean isLocallyDefined(java.lang.String);
    Code:
       0: iconst_0
       1: ireturn

  private org.aspectj.weaver.ResolvedType handleRequiredMissingTypeDuringResolution(org.aspectj.weaver.UnresolvedType);
    Code:
       0: aload_0
       1: getfield      #57                 // Field dumpState_cantFindTypeExceptions:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #142                // class java/util/ArrayList
      11: dup
      12: invokespecial #143                // Method java/util/ArrayList."<init>":()V
      15: putfield      #57                 // Field dumpState_cantFindTypeExceptions:Ljava/util/List;
      18: aload_0
      19: getfield      #57                 // Field dumpState_cantFindTypeExceptions:Ljava/util/List;
      22: invokeinterface #144,  1          // InterfaceMethod java/util/List.size:()I
      27: bipush        100
      29: if_icmpge     71
      32: aload_0
      33: getfield      #57                 // Field dumpState_cantFindTypeExceptions:Ljava/util/List;
      36: new           #145                // class java/lang/RuntimeException
      39: dup
      40: new           #127                // class java/lang/StringBuilder
      43: dup
      44: invokespecial #128                // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #146                // String Can\'t find type
      49: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_1
      53: invokevirtual #105                // Method org/aspectj/weaver/UnresolvedType.getName:()Ljava/lang/String;
      56: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #132                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokespecial #147                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      65: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      70: pop
      71: new           #149                // class org/aspectj/weaver/MissingResolvedTypeWithKnownSignature
      74: dup
      75: aload_1
      76: invokevirtual #117                // Method org/aspectj/weaver/UnresolvedType.getSignature:()Ljava/lang/String;
      79: aload_0
      80: invokespecial #150                // Method org/aspectj/weaver/MissingResolvedTypeWithKnownSignature."<init>":(Ljava/lang/String;Lorg/aspectj/weaver/World;)V
      83: areturn

  public org.aspectj.weaver.ResolvedType resolve(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_1
       1: invokevirtual #112                // Method org/aspectj/weaver/ResolvedType.isTypeVariableReference:()Z
       4: ifeq          9
       7: aload_1
       8: areturn
       9: aload_0
      10: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
      13: aload_1
      14: invokevirtual #151                // Method org/aspectj/weaver/ResolvedType.getSignature:()Ljava/lang/String;
      17: invokevirtual #118                // Method org/aspectj/weaver/World$TypeMap.get:(Ljava/lang/String;)Lorg/aspectj/weaver/ResolvedType;
      20: astore_2
      21: aload_2
      22: ifnonnull     46
      25: aload_0
      26: aload_1
      27: invokespecial #138                // Method ensureRawTypeIfNecessary:(Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/weaver/ResolvedType;
      30: astore_2
      31: aload_0
      32: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
      35: aload_1
      36: invokevirtual #151                // Method org/aspectj/weaver/ResolvedType.getSignature:()Ljava/lang/String;
      39: aload_2
      40: invokevirtual #86                 // Method org/aspectj/weaver/World$TypeMap.put:(Ljava/lang/String;Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/weaver/ResolvedType;
      43: pop
      44: aload_1
      45: astore_2
      46: aload_2
      47: aload_0
      48: putfield      #119                // Field org/aspectj/weaver/ResolvedType.world:Lorg/aspectj/weaver/World;
      51: aload_2
      52: areturn

  private org.aspectj.weaver.ResolvedType ensureRawTypeIfNecessary(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: invokevirtual #152                // Method isInJava5Mode:()Z
       4: ifeq          14
       7: aload_1
       8: invokevirtual #153                // Method org/aspectj/weaver/ResolvedType.isRawType:()Z
      11: ifeq          16
      14: aload_1
      15: areturn
      16: aload_1
      17: instanceof    #154                // class org/aspectj/weaver/ReferenceType
      20: ifeq          83
      23: aload_1
      24: checkcast     #154                // class org/aspectj/weaver/ReferenceType
      27: invokevirtual #155                // Method org/aspectj/weaver/ReferenceType.getDelegate:()Lorg/aspectj/weaver/ReferenceTypeDelegate;
      30: ifnull        83
      33: aload_1
      34: invokevirtual #156                // Method org/aspectj/weaver/ResolvedType.isGenericType:()Z
      37: ifeq          83
      40: new           #154                // class org/aspectj/weaver/ReferenceType
      43: dup
      44: aload_1
      45: invokevirtual #151                // Method org/aspectj/weaver/ResolvedType.getSignature:()Ljava/lang/String;
      48: aload_0
      49: invokespecial #157                // Method org/aspectj/weaver/ReferenceType."<init>":(Ljava/lang/String;Lorg/aspectj/weaver/World;)V
      52: astore_2
      53: aload_2
      54: getstatic     #158                // Field org/aspectj/weaver/UnresolvedType$TypeKind.RAW:Lorg/aspectj/weaver/UnresolvedType$TypeKind;
      57: putfield      #159                // Field org/aspectj/weaver/ReferenceType.typeKind:Lorg/aspectj/weaver/UnresolvedType$TypeKind;
      60: aload_1
      61: checkcast     #154                // class org/aspectj/weaver/ReferenceType
      64: invokevirtual #155                // Method org/aspectj/weaver/ReferenceType.getDelegate:()Lorg/aspectj/weaver/ReferenceTypeDelegate;
      67: astore_3
      68: aload_2
      69: aload_3
      70: invokevirtual #160                // Method org/aspectj/weaver/ReferenceType.setDelegate:(Lorg/aspectj/weaver/ReferenceTypeDelegate;)V
      73: aload_2
      74: aload_1
      75: checkcast     #154                // class org/aspectj/weaver/ReferenceType
      78: invokevirtual #161                // Method org/aspectj/weaver/ReferenceType.setGenericType:(Lorg/aspectj/weaver/ReferenceType;)V
      81: aload_2
      82: areturn
      83: aload_1
      84: areturn

  public org.aspectj.weaver.ResolvedType resolve(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #162                // Method org/aspectj/weaver/UnresolvedType.forName:(Ljava/lang/String;)Lorg/aspectj/weaver/UnresolvedType;
       5: invokevirtual #110                // Method resolve:(Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/ResolvedType;
       8: astore_2
       9: aload_2
      10: areturn

  public org.aspectj.weaver.ReferenceType resolveToReferenceType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #163                // Method resolve:(Ljava/lang/String;)Lorg/aspectj/weaver/ResolvedType;
       5: checkcast     #154                // class org/aspectj/weaver/ReferenceType
       8: areturn

  public org.aspectj.weaver.ResolvedType resolve(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #162                // Method org/aspectj/weaver/UnresolvedType.forName:(Ljava/lang/String;)Lorg/aspectj/weaver/UnresolvedType;
       5: iload_2
       6: invokevirtual #99                 // Method resolve:(Lorg/aspectj/weaver/UnresolvedType;Z)Lorg/aspectj/weaver/ResolvedType;
       9: areturn

  private final org.aspectj.weaver.ResolvedType resolveToReferenceType(org.aspectj.weaver.UnresolvedType, boolean);
    Code:
       0: aload_1
       1: invokevirtual #164                // Method org/aspectj/weaver/UnresolvedType.isParameterizedType:()Z
       4: ifeq          44
       7: aload_0
       8: aload_1
       9: iload_2
      10: invokevirtual #165                // Method resolveGenericTypeFor:(Lorg/aspectj/weaver/UnresolvedType;Z)Lorg/aspectj/weaver/ResolvedType;
      13: astore_3
      14: aload_3
      15: invokevirtual #135                // Method org/aspectj/weaver/ResolvedType.isMissing:()Z
      18: ifeq          23
      21: aload_3
      22: areturn
      23: aload_3
      24: checkcast     #154                // class org/aspectj/weaver/ReferenceType
      27: astore        4
      29: aload         4
      31: aload_1
      32: getfield      #166                // Field org/aspectj/weaver/UnresolvedType.typeParameters:[Lorg/aspectj/weaver/UnresolvedType;
      35: aload_0
      36: invokestatic  #167                // Method org/aspectj/weaver/TypeFactory.createParameterizedType:(Lorg/aspectj/weaver/ResolvedType;[Lorg/aspectj/weaver/UnresolvedType;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ReferenceType;
      39: astore        5
      41: aload         5
      43: areturn
      44: aload_1
      45: invokevirtual #168                // Method org/aspectj/weaver/UnresolvedType.isGenericType:()Z
      48: ifeq          76
      51: aload_0
      52: aload_1
      53: iconst_0
      54: invokevirtual #165                // Method resolveGenericTypeFor:(Lorg/aspectj/weaver/UnresolvedType;Z)Lorg/aspectj/weaver/ResolvedType;
      57: astore_3
      58: aload_3
      59: checkcast     #154                // class org/aspectj/weaver/ReferenceType
      62: astore        4
      64: aload_3
      65: invokevirtual #135                // Method org/aspectj/weaver/ResolvedType.isMissing:()Z
      68: ifeq          73
      71: aload_3
      72: areturn
      73: aload         4
      75: areturn
      76: aload_1
      77: invokevirtual #169                // Method org/aspectj/weaver/UnresolvedType.isGenericWildcard:()Z
      80: ifeq          92
      83: aload_0
      84: aload_1
      85: checkcast     #170                // class org/aspectj/weaver/WildcardedUnresolvedType
      88: invokespecial #171                // Method resolveGenericWildcardFor:(Lorg/aspectj/weaver/WildcardedUnresolvedType;)Lorg/aspectj/weaver/ReferenceType;
      91: areturn
      92: aload_1
      93: invokevirtual #172                // Method org/aspectj/weaver/UnresolvedType.getErasureSignature:()Ljava/lang/String;
      96: astore_3
      97: new           #154                // class org/aspectj/weaver/ReferenceType
     100: dup
     101: aload_3
     102: aload_0
     103: invokespecial #157                // Method org/aspectj/weaver/ReferenceType."<init>":(Ljava/lang/String;Lorg/aspectj/weaver/World;)V
     106: astore        4
     108: aload_1
     109: invokevirtual #173                // Method org/aspectj/weaver/UnresolvedType.needsModifiableDelegate:()Z
     112: ifeq          121
     115: aload         4
     117: iconst_1
     118: invokevirtual #174                // Method org/aspectj/weaver/ReferenceType.setNeedsModifiableDelegate:(Z)V
     121: aload_0
     122: aload         4
     124: invokevirtual #175                // Method resolveDelegate:(Lorg/aspectj/weaver/ReferenceType;)Lorg/aspectj/weaver/ReferenceTypeDelegate;
     127: astore        5
     129: aload         5
     131: ifnonnull     148
     134: new           #149                // class org/aspectj/weaver/MissingResolvedTypeWithKnownSignature
     137: dup
     138: aload_1
     139: invokevirtual #117                // Method org/aspectj/weaver/UnresolvedType.getSignature:()Ljava/lang/String;
     142: aload_3
     143: aload_0
     144: invokespecial #176                // Method org/aspectj/weaver/MissingResolvedTypeWithKnownSignature."<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/aspectj/weaver/World;)V
     147: areturn
     148: aload         5
     150: invokeinterface #177,  1          // InterfaceMethod org/aspectj/weaver/ReferenceTypeDelegate.isGeneric:()Z
     155: ifeq          246
     158: aload_0
     159: getfield      #19                 // Field behaveInJava5Way:Z
     162: ifeq          246
     165: aload         4
     167: getstatic     #158                // Field org/aspectj/weaver/UnresolvedType$TypeKind.RAW:Lorg/aspectj/weaver/UnresolvedType$TypeKind;
     170: putfield      #159                // Field org/aspectj/weaver/ReferenceType.typeKind:Lorg/aspectj/weaver/UnresolvedType$TypeKind;
     173: aload         4
     175: invokevirtual #178                // Method org/aspectj/weaver/ReferenceType.hasNewInterfaces:()Z
     178: ifeq          212
     181: new           #179                // class java/lang/IllegalStateException
     184: dup
     185: new           #127                // class java/lang/StringBuilder
     188: dup
     189: invokespecial #128                // Method java/lang/StringBuilder."<init>":()V
     192: ldc           #180                // String Simple type promoted forced to raw, but it had new interfaces/superclass.  Type is
     194: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: aload         4
     199: invokevirtual #181                // Method org/aspectj/weaver/ReferenceType.getName:()Ljava/lang/String;
     202: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     205: invokevirtual #132                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     208: invokespecial #182                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     211: athrow
     212: aload_0
     213: aload         5
     215: aload         4
     217: invokespecial #183                // Method makeGenericTypeFrom:(Lorg/aspectj/weaver/ReferenceTypeDelegate;Lorg/aspectj/weaver/ReferenceType;)Lorg/aspectj/weaver/ReferenceType;
     220: astore        6
     222: aload         4
     224: aload         5
     226: invokevirtual #160                // Method org/aspectj/weaver/ReferenceType.setDelegate:(Lorg/aspectj/weaver/ReferenceTypeDelegate;)V
     229: aload         6
     231: aload         5
     233: invokevirtual #160                // Method org/aspectj/weaver/ReferenceType.setDelegate:(Lorg/aspectj/weaver/ReferenceTypeDelegate;)V
     236: aload         4
     238: aload         6
     240: invokevirtual #161                // Method org/aspectj/weaver/ReferenceType.setGenericType:(Lorg/aspectj/weaver/ReferenceType;)V
     243: aload         4
     245: areturn
     246: aload         4
     248: aload         5
     250: invokevirtual #160                // Method org/aspectj/weaver/ReferenceType.setDelegate:(Lorg/aspectj/weaver/ReferenceTypeDelegate;)V
     253: aload         4
     255: areturn

  public org.aspectj.weaver.ResolvedType resolveGenericTypeFor(org.aspectj.weaver.UnresolvedType, boolean);
    Code:
       0: aload_1
       1: invokevirtual #184                // Method org/aspectj/weaver/UnresolvedType.getRawType:()Lorg/aspectj/weaver/UnresolvedType;
       4: invokevirtual #117                // Method org/aspectj/weaver/UnresolvedType.getSignature:()Ljava/lang/String;
       7: astore_3
       8: aload_0
       9: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
      12: aload_3
      13: invokevirtual #118                // Method org/aspectj/weaver/World$TypeMap.get:(Ljava/lang/String;)Lorg/aspectj/weaver/ResolvedType;
      16: astore        4
      18: aload         4
      20: ifnonnull     45
      23: aload_0
      24: aload_3
      25: invokestatic  #185                // Method org/aspectj/weaver/UnresolvedType.forSignature:(Ljava/lang/String;)Lorg/aspectj/weaver/UnresolvedType;
      28: iload_2
      29: invokevirtual #99                 // Method resolve:(Lorg/aspectj/weaver/UnresolvedType;Z)Lorg/aspectj/weaver/ResolvedType;
      32: astore        4
      34: aload_0
      35: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
      38: aload_3
      39: aload         4
      41: invokevirtual #86                 // Method org/aspectj/weaver/World$TypeMap.put:(Ljava/lang/String;Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/weaver/ResolvedType;
      44: pop
      45: aload         4
      47: invokevirtual #135                // Method org/aspectj/weaver/ResolvedType.isMissing:()Z
      50: ifeq          56
      53: aload         4
      55: areturn
      56: aload         4
      58: invokevirtual #186                // Method org/aspectj/weaver/ResolvedType.getGenericType:()Lorg/aspectj/weaver/ReferenceType;
      61: astore        5
      63: aload         4
      65: invokevirtual #187                // Method org/aspectj/weaver/ResolvedType.isSimpleType:()Z
      68: ifeq          95
      71: aload_1
      72: getfield      #166                // Field org/aspectj/weaver/UnresolvedType.typeParameters:[Lorg/aspectj/weaver/UnresolvedType;
      75: ifnull        86
      78: aload_1
      79: getfield      #166                // Field org/aspectj/weaver/UnresolvedType.typeParameters:[Lorg/aspectj/weaver/UnresolvedType;
      82: arraylength
      83: ifne          95
      86: aload         4
      88: aload_0
      89: putfield      #119                // Field org/aspectj/weaver/ResolvedType.world:Lorg/aspectj/weaver/World;
      92: aload         4
      94: areturn
      95: aload         5
      97: ifnull        109
     100: aload         5
     102: aload_0
     103: putfield      #119                // Field org/aspectj/weaver/ResolvedType.world:Lorg/aspectj/weaver/World;
     106: aload         5
     108: areturn
     109: aload_0
     110: aload         4
     112: checkcast     #154                // class org/aspectj/weaver/ReferenceType
     115: invokevirtual #175                // Method resolveDelegate:(Lorg/aspectj/weaver/ReferenceType;)Lorg/aspectj/weaver/ReferenceTypeDelegate;
     118: astore        6
     120: aload_0
     121: aload         6
     123: aload         4
     125: checkcast     #154                // class org/aspectj/weaver/ReferenceType
     128: invokespecial #183                // Method makeGenericTypeFrom:(Lorg/aspectj/weaver/ReferenceTypeDelegate;Lorg/aspectj/weaver/ReferenceType;)Lorg/aspectj/weaver/ReferenceType;
     131: astore        7
     133: aload         4
     135: checkcast     #154                // class org/aspectj/weaver/ReferenceType
     138: aload         7
     140: invokevirtual #161                // Method org/aspectj/weaver/ReferenceType.setGenericType:(Lorg/aspectj/weaver/ReferenceType;)V
     143: aload         7
     145: aload         6
     147: invokevirtual #160                // Method org/aspectj/weaver/ReferenceType.setDelegate:(Lorg/aspectj/weaver/ReferenceTypeDelegate;)V
     150: aload         4
     152: checkcast     #154                // class org/aspectj/weaver/ReferenceType
     155: aload         6
     157: invokevirtual #160                // Method org/aspectj/weaver/ReferenceType.setDelegate:(Lorg/aspectj/weaver/ReferenceTypeDelegate;)V
     160: aload         7
     162: areturn

  private org.aspectj.weaver.ReferenceType makeGenericTypeFrom(org.aspectj.weaver.ReferenceTypeDelegate, org.aspectj.weaver.ReferenceType);
    Code:
       0: aload_1
       1: invokeinterface #188,  1          // InterfaceMethod org/aspectj/weaver/ReferenceTypeDelegate.getDeclaredGenericSignature:()Ljava/lang/String;
       6: astore_3
       7: aload_3
       8: ifnull        33
      11: new           #154                // class org/aspectj/weaver/ReferenceType
      14: dup
      15: aload_2
      16: invokevirtual #189                // Method org/aspectj/weaver/ReferenceType.getSignature:()Ljava/lang/String;
      19: aload_1
      20: invokeinterface #188,  1          // InterfaceMethod org/aspectj/weaver/ReferenceTypeDelegate.getDeclaredGenericSignature:()Ljava/lang/String;
      25: invokestatic  #190                // Method org/aspectj/weaver/UnresolvedType.forGenericTypeSignature:(Ljava/lang/String;Ljava/lang/String;)Lorg/aspectj/weaver/UnresolvedType;
      28: aload_0
      29: invokespecial #191                // Method org/aspectj/weaver/ReferenceType."<init>":(Lorg/aspectj/weaver/UnresolvedType;Lorg/aspectj/weaver/World;)V
      32: areturn
      33: new           #154                // class org/aspectj/weaver/ReferenceType
      36: dup
      37: aload_2
      38: invokevirtual #189                // Method org/aspectj/weaver/ReferenceType.getSignature:()Ljava/lang/String;
      41: aload_1
      42: invokeinterface #192,  1          // InterfaceMethod org/aspectj/weaver/ReferenceTypeDelegate.getTypeVariables:()[Lorg/aspectj/weaver/TypeVariable;
      47: invokestatic  #193                // Method org/aspectj/weaver/UnresolvedType.forGenericTypeVariables:(Ljava/lang/String;[Lorg/aspectj/weaver/TypeVariable;)Lorg/aspectj/weaver/UnresolvedType;
      50: aload_0
      51: invokespecial #191                // Method org/aspectj/weaver/ReferenceType."<init>":(Lorg/aspectj/weaver/UnresolvedType;Lorg/aspectj/weaver/World;)V
      54: areturn

  private org.aspectj.weaver.ReferenceType resolveGenericWildcardFor(org.aspectj.weaver.WildcardedUnresolvedType);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: invokevirtual #194                // Method org/aspectj/weaver/WildcardedUnresolvedType.isExtends:()Z
       6: ifeq          47
       9: aload_0
      10: aload_1
      11: invokevirtual #195                // Method org/aspectj/weaver/WildcardedUnresolvedType.getUpperBound:()Lorg/aspectj/weaver/UnresolvedType;
      14: invokevirtual #110                // Method resolve:(Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/ResolvedType;
      17: astore_3
      18: aload_3
      19: invokevirtual #135                // Method org/aspectj/weaver/ResolvedType.isMissing:()Z
      22: ifeq          30
      25: aload_0
      26: invokespecial #123                // Method getWildcard:()Lorg/aspectj/weaver/BoundedReferenceType;
      29: areturn
      30: new           #140                // class org/aspectj/weaver/BoundedReferenceType
      33: dup
      34: aload_3
      35: checkcast     #154                // class org/aspectj/weaver/ReferenceType
      38: iconst_1
      39: aload_0
      40: invokespecial #196                // Method org/aspectj/weaver/BoundedReferenceType."<init>":(Lorg/aspectj/weaver/ReferenceType;ZLorg/aspectj/weaver/World;)V
      43: astore_2
      44: goto          97
      47: aload_1
      48: invokevirtual #197                // Method org/aspectj/weaver/WildcardedUnresolvedType.isSuper:()Z
      51: ifeq          92
      54: aload_0
      55: aload_1
      56: invokevirtual #198                // Method org/aspectj/weaver/WildcardedUnresolvedType.getLowerBound:()Lorg/aspectj/weaver/UnresolvedType;
      59: invokevirtual #110                // Method resolve:(Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/ResolvedType;
      62: astore_3
      63: aload_3
      64: invokevirtual #135                // Method org/aspectj/weaver/ResolvedType.isMissing:()Z
      67: ifeq          75
      70: aload_0
      71: invokespecial #123                // Method getWildcard:()Lorg/aspectj/weaver/BoundedReferenceType;
      74: areturn
      75: new           #140                // class org/aspectj/weaver/BoundedReferenceType
      78: dup
      79: aload_3
      80: checkcast     #154                // class org/aspectj/weaver/ReferenceType
      83: iconst_0
      84: aload_0
      85: invokespecial #196                // Method org/aspectj/weaver/BoundedReferenceType."<init>":(Lorg/aspectj/weaver/ReferenceType;ZLorg/aspectj/weaver/World;)V
      88: astore_2
      89: goto          97
      92: aload_0
      93: invokespecial #123                // Method getWildcard:()Lorg/aspectj/weaver/BoundedReferenceType;
      96: astore_2
      97: aload_2
      98: areturn

  protected abstract org.aspectj.weaver.ReferenceTypeDelegate resolveDelegate(org.aspectj.weaver.ReferenceType);

  public org.aspectj.weaver.ResolvedType getCoreType(org.aspectj.weaver.UnresolvedType);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #99                 // Method resolve:(Lorg/aspectj/weaver/UnresolvedType;Z)Lorg/aspectj/weaver/ResolvedType;
       6: astore_2
       7: aload_2
       8: invokevirtual #135                // Method org/aspectj/weaver/ResolvedType.isMissing:()Z
      11: ifeq          31
      14: aload_0
      15: getfield      #5                  // Field messageHandler:Lorg/aspectj/bridge/IMessageHandler;
      18: ldc           #199                // String cantFindCoreType
      20: aload_1
      21: invokevirtual #105                // Method org/aspectj/weaver/UnresolvedType.getName:()Ljava/lang/String;
      24: invokestatic  #106                // Method org/aspectj/weaver/WeaverMessages.format:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
      27: invokestatic  #200                // Method org/aspectj/bridge/MessageUtil.error:(Lorg/aspectj/bridge/IMessageHandler;Ljava/lang/String;)Z
      30: pop
      31: aload_2
      32: areturn

  public org.aspectj.weaver.ReferenceType lookupOrCreateName(org.aspectj.weaver.UnresolvedType);
    Code:
       0: aload_1
       1: invokevirtual #117                // Method org/aspectj/weaver/UnresolvedType.getSignature:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #201                // Method lookupBySignature:(Ljava/lang/String;)Lorg/aspectj/weaver/ReferenceType;
      10: astore_3
      11: aload_3
      12: ifnonnull     31
      15: aload_1
      16: aload_0
      17: invokestatic  #202                // Method org/aspectj/weaver/ReferenceType.fromTypeX:(Lorg/aspectj/weaver/UnresolvedType;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ReferenceType;
      20: astore_3
      21: aload_0
      22: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
      25: aload_2
      26: aload_3
      27: invokevirtual #86                 // Method org/aspectj/weaver/World$TypeMap.put:(Ljava/lang/String;Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/weaver/ResolvedType;
      30: pop
      31: aload_3
      32: areturn

  public org.aspectj.weaver.ReferenceType lookupBySignature(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
       4: aload_1
       5: invokevirtual #118                // Method org/aspectj/weaver/World$TypeMap.get:(Ljava/lang/String;)Lorg/aspectj/weaver/ResolvedType;
       8: checkcast     #154                // class org/aspectj/weaver/ReferenceType
      11: areturn

  public org.aspectj.weaver.ResolvedMember resolve(org.aspectj.weaver.Member);
    Code:
       0: aload_1
       1: invokeinterface #203,  1          // InterfaceMethod org/aspectj/weaver/Member.getDeclaringType:()Lorg/aspectj/weaver/UnresolvedType;
       6: aload_0
       7: invokevirtual #116                // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      10: astore_2
      11: aload_2
      12: invokevirtual #153                // Method org/aspectj/weaver/ResolvedType.isRawType:()Z
      15: ifeq          23
      18: aload_2
      19: invokevirtual #186                // Method org/aspectj/weaver/ResolvedType.getGenericType:()Lorg/aspectj/weaver/ReferenceType;
      22: astore_2
      23: aload_1
      24: invokeinterface #204,  1          // InterfaceMethod org/aspectj/weaver/Member.getKind:()Lorg/aspectj/weaver/MemberKind;
      29: getstatic     #205                // Field org/aspectj/weaver/Member.FIELD:Lorg/aspectj/weaver/MemberKind;
      32: if_acmpne     44
      35: aload_2
      36: aload_1
      37: invokevirtual #206                // Method org/aspectj/weaver/ResolvedType.lookupField:(Lorg/aspectj/weaver/Member;)Lorg/aspectj/weaver/ResolvedMember;
      40: astore_3
      41: goto          50
      44: aload_2
      45: aload_1
      46: invokevirtual #207                // Method org/aspectj/weaver/ResolvedType.lookupMethod:(Lorg/aspectj/weaver/Member;)Lorg/aspectj/weaver/ResolvedMember;
      49: astore_3
      50: aload_3
      51: ifnull        56
      54: aload_3
      55: areturn
      56: aload_2
      57: aload_1
      58: invokevirtual #208                // Method org/aspectj/weaver/ResolvedType.lookupSyntheticMember:(Lorg/aspectj/weaver/Member;)Lorg/aspectj/weaver/ResolvedMember;
      61: areturn

  public void setAllLintIgnored();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #80                 // Field allLintIgnored:Z
       5: return

  public boolean areAllLintIgnored();
    Code:
       0: aload_0
       1: getfield      #80                 // Field allLintIgnored:Z
       4: ireturn

  public abstract org.aspectj.weaver.IWeavingSupport getWeavingSupport();

  public final org.aspectj.weaver.Advice createAdviceMunger(org.aspectj.weaver.AdviceKind, org.aspectj.weaver.patterns.Pointcut, org.aspectj.weaver.Member, int, org.aspectj.weaver.IHasSourceLocation, org.aspectj.weaver.ResolvedType);
    Code:
       0: new           #209                // class org/aspectj/weaver/AjAttribute$AdviceAttribute
       3: dup
       4: aload_1
       5: aload_2
       6: iload         4
       8: aload         5
      10: invokeinterface #210,  1          // InterfaceMethod org/aspectj/weaver/IHasSourceLocation.getStart:()I
      15: aload         5
      17: invokeinterface #211,  1          // InterfaceMethod org/aspectj/weaver/IHasSourceLocation.getEnd:()I
      22: aload         5
      24: invokeinterface #212,  1          // InterfaceMethod org/aspectj/weaver/IHasSourceLocation.getSourceContext:()Lorg/aspectj/weaver/ISourceContext;
      29: invokespecial #213                // Method org/aspectj/weaver/AjAttribute$AdviceAttribute."<init>":(Lorg/aspectj/weaver/AdviceKind;Lorg/aspectj/weaver/patterns/Pointcut;IIILorg/aspectj/weaver/ISourceContext;)V
      32: astore        7
      34: aload_0
      35: invokevirtual #214                // Method getWeavingSupport:()Lorg/aspectj/weaver/IWeavingSupport;
      38: aload         7
      40: aload_2
      41: aload_3
      42: aload         6
      44: invokeinterface #215,  5          // InterfaceMethod org/aspectj/weaver/IWeavingSupport.createAdviceMunger:(Lorg/aspectj/weaver/AjAttribute$AdviceAttribute;Lorg/aspectj/weaver/patterns/Pointcut;Lorg/aspectj/weaver/Member;Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/weaver/Advice;
      49: areturn

  public int compareByPrecedence(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: getfield      #89                 // Field precedenceCalculator:Lorg/aspectj/weaver/World$AspectPrecedenceCalculator;
       4: aload_1
       5: aload_2
       6: invokevirtual #216                // Method org/aspectj/weaver/World$AspectPrecedenceCalculator.compareByPrecedence:(Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/ResolvedType;)I
       9: ireturn

  public java.lang.Integer getPrecedenceIfAny(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: getfield      #89                 // Field precedenceCalculator:Lorg/aspectj/weaver/World$AspectPrecedenceCalculator;
       4: aload_1
       5: aload_2
       6: invokevirtual #217                // Method org/aspectj/weaver/World$AspectPrecedenceCalculator.getPrecedenceIfAny:(Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/ResolvedType;)Ljava/lang/Integer;
       9: areturn

  public int compareByPrecedenceAndHierarchy(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: getfield      #89                 // Field precedenceCalculator:Lorg/aspectj/weaver/World$AspectPrecedenceCalculator;
       4: aload_1
       5: aload_2
       6: invokevirtual #218                // Method org/aspectj/weaver/World$AspectPrecedenceCalculator.compareByPrecedenceAndHierarchy:(Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/ResolvedType;)I
       9: ireturn

  public org.aspectj.bridge.IMessageHandler getMessageHandler();
    Code:
       0: aload_0
       1: getfield      #5                  // Field messageHandler:Lorg/aspectj/bridge/IMessageHandler;
       4: areturn

  public void setMessageHandler(org.aspectj.bridge.IMessageHandler);
    Code:
       0: aload_0
       1: invokevirtual #219                // Method isInPinpointMode:()Z
       4: ifeq          22
       7: aload_0
       8: new           #220                // class org/aspectj/bridge/context/PinpointingMessageHandler
      11: dup
      12: aload_1
      13: invokespecial #221                // Method org/aspectj/bridge/context/PinpointingMessageHandler."<init>":(Lorg/aspectj/bridge/IMessageHandler;)V
      16: putfield      #5                  // Field messageHandler:Lorg/aspectj/bridge/IMessageHandler;
      19: goto          27
      22: aload_0
      23: aload_1
      24: putfield      #5                  // Field messageHandler:Lorg/aspectj/bridge/IMessageHandler;
      27: return

  public void showMessage(org.aspectj.bridge.IMessage$Kind, java.lang.String, org.aspectj.bridge.ISourceLocation, org.aspectj.bridge.ISourceLocation);
    Code:
       0: aload_3
       1: ifnull        55
       4: aload_0
       5: getfield      #5                  // Field messageHandler:Lorg/aspectj/bridge/IMessageHandler;
       8: new           #222                // class org/aspectj/bridge/Message
      11: dup
      12: aload_2
      13: aload_1
      14: aconst_null
      15: aload_3
      16: invokespecial #223                // Method org/aspectj/bridge/Message."<init>":(Ljava/lang/String;Lorg/aspectj/bridge/IMessage$Kind;Ljava/lang/Throwable;Lorg/aspectj/bridge/ISourceLocation;)V
      19: invokeinterface #224,  2          // InterfaceMethod org/aspectj/bridge/IMessageHandler.handleMessage:(Lorg/aspectj/bridge/IMessage;)Z
      24: pop
      25: aload         4
      27: ifnull        77
      30: aload_0
      31: getfield      #5                  // Field messageHandler:Lorg/aspectj/bridge/IMessageHandler;
      34: new           #222                // class org/aspectj/bridge/Message
      37: dup
      38: aload_2
      39: aload_1
      40: aconst_null
      41: aload         4
      43: invokespecial #223                // Method org/aspectj/bridge/Message."<init>":(Ljava/lang/String;Lorg/aspectj/bridge/IMessage$Kind;Ljava/lang/Throwable;Lorg/aspectj/bridge/ISourceLocation;)V
      46: invokeinterface #224,  2          // InterfaceMethod org/aspectj/bridge/IMessageHandler.handleMessage:(Lorg/aspectj/bridge/IMessage;)Z
      51: pop
      52: goto          77
      55: aload_0
      56: getfield      #5                  // Field messageHandler:Lorg/aspectj/bridge/IMessageHandler;
      59: new           #222                // class org/aspectj/bridge/Message
      62: dup
      63: aload_2
      64: aload_1
      65: aconst_null
      66: aload         4
      68: invokespecial #223                // Method org/aspectj/bridge/Message."<init>":(Ljava/lang/String;Lorg/aspectj/bridge/IMessage$Kind;Ljava/lang/Throwable;Lorg/aspectj/bridge/ISourceLocation;)V
      71: invokeinterface #224,  2          // InterfaceMethod org/aspectj/bridge/IMessageHandler.handleMessage:(Lorg/aspectj/bridge/IMessage;)Z
      76: pop
      77: return

  public void setCrossReferenceHandler(org.aspectj.weaver.ICrossReferenceHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field xrefHandler:Lorg/aspectj/weaver/ICrossReferenceHandler;
       5: return

  public org.aspectj.weaver.ICrossReferenceHandler getCrossReferenceHandler();
    Code:
       0: aload_0
       1: getfield      #6                  // Field xrefHandler:Lorg/aspectj/weaver/ICrossReferenceHandler;
       4: areturn

  public void setTypeVariableLookupScope(org.aspectj.weaver.TypeVariableDeclaringElement);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #225                // Field typeVariableLookupScope:Lorg/aspectj/weaver/TypeVariableDeclaringElement;
       5: return

  public org.aspectj.weaver.TypeVariableDeclaringElement getTypeVariableLookupScope();
    Code:
       0: aload_0
       1: getfield      #225                // Field typeVariableLookupScope:Lorg/aspectj/weaver/TypeVariableDeclaringElement;
       4: areturn

  public java.util.List<org.aspectj.weaver.patterns.DeclareParents> getDeclareParents();
    Code:
       0: aload_0
       1: getfield      #12                 // Field crosscuttingMembersSet:Lorg/aspectj/weaver/CrosscuttingMembersSet;
       4: invokevirtual #226                // Method org/aspectj/weaver/CrosscuttingMembersSet.getDeclareParents:()Ljava/util/List;
       7: areturn

  public java.util.List<org.aspectj.weaver.patterns.DeclareAnnotation> getDeclareAnnotationOnTypes();
    Code:
       0: aload_0
       1: getfield      #12                 // Field crosscuttingMembersSet:Lorg/aspectj/weaver/CrosscuttingMembersSet;
       4: invokevirtual #227                // Method org/aspectj/weaver/CrosscuttingMembersSet.getDeclareAnnotationOnTypes:()Ljava/util/List;
       7: areturn

  public java.util.List<org.aspectj.weaver.patterns.DeclareAnnotation> getDeclareAnnotationOnFields();
    Code:
       0: aload_0
       1: getfield      #12                 // Field crosscuttingMembersSet:Lorg/aspectj/weaver/CrosscuttingMembersSet;
       4: invokevirtual #228                // Method org/aspectj/weaver/CrosscuttingMembersSet.getDeclareAnnotationOnFields:()Ljava/util/List;
       7: areturn

  public java.util.List<org.aspectj.weaver.patterns.DeclareAnnotation> getDeclareAnnotationOnMethods();
    Code:
       0: aload_0
       1: getfield      #12                 // Field crosscuttingMembersSet:Lorg/aspectj/weaver/CrosscuttingMembersSet;
       4: invokevirtual #229                // Method org/aspectj/weaver/CrosscuttingMembersSet.getDeclareAnnotationOnMethods:()Ljava/util/List;
       7: areturn

  public java.util.List<org.aspectj.weaver.patterns.DeclareTypeErrorOrWarning> getDeclareTypeEows();
    Code:
       0: aload_0
       1: getfield      #12                 // Field crosscuttingMembersSet:Lorg/aspectj/weaver/CrosscuttingMembersSet;
       4: invokevirtual #230                // Method org/aspectj/weaver/CrosscuttingMembersSet.getDeclareTypeEows:()Ljava/util/List;
       7: areturn

  public java.util.List<org.aspectj.weaver.patterns.DeclareSoft> getDeclareSoft();
    Code:
       0: aload_0
       1: getfield      #12                 // Field crosscuttingMembersSet:Lorg/aspectj/weaver/CrosscuttingMembersSet;
       4: invokevirtual #231                // Method org/aspectj/weaver/CrosscuttingMembersSet.getDeclareSofts:()Ljava/util/List;
       7: areturn

  public org.aspectj.weaver.CrosscuttingMembersSet getCrosscuttingMembersSet();
    Code:
       0: aload_0
       1: getfield      #12                 // Field crosscuttingMembersSet:Lorg/aspectj/weaver/CrosscuttingMembersSet;
       4: areturn

  public org.aspectj.util.IStructureModel getModel();
    Code:
       0: aload_0
       1: getfield      #13                 // Field model:Lorg/aspectj/util/IStructureModel;
       4: areturn

  public void setModel(org.aspectj.util.IStructureModel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field model:Lorg/aspectj/util/IStructureModel;
       5: return

  public org.aspectj.weaver.Lint getLint();
    Code:
       0: aload_0
       1: getfield      #16                 // Field lint:Lorg/aspectj/weaver/Lint;
       4: areturn

  public void setLint(org.aspectj.weaver.Lint);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field lint:Lorg/aspectj/weaver/Lint;
       5: return

  public boolean isXnoInline();
    Code:
       0: aload_0
       1: getfield      #232                // Field XnoInline:Z
       4: ireturn

  public void setXnoInline(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #232                // Field XnoInline:Z
       5: return

  public boolean isXlazyTjp();
    Code:
       0: aload_0
       1: getfield      #233                // Field XlazyTjp:Z
       4: ireturn

  public void setXlazyTjp(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #233                // Field XlazyTjp:Z
       5: return

  public boolean isHasMemberSupportEnabled();
    Code:
       0: aload_0
       1: getfield      #17                 // Field XhasMember:Z
       4: ireturn

  public void setXHasMemberSupportEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field XhasMember:Z
       5: return

  public boolean isInPinpointMode();
    Code:
       0: aload_0
       1: getfield      #18                 // Field Xpinpoint:Z
       4: ireturn

  public void setPinpointMode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field Xpinpoint:Z
       5: return

  public boolean useFinal();
    Code:
       0: aload_0
       1: getfield      #42                 // Field useFinal:Z
       4: ireturn

  public boolean isMinimalModel();
    Code:
       0: aload_0
       1: invokevirtual #234                // Method ensureAdvancedConfigurationProcessed:()V
       4: aload_0
       5: getfield      #41                 // Field minimalModel:Z
       8: ireturn

  public boolean isTargettingRuntime1_6_10();
    Code:
       0: aload_0
       1: invokevirtual #234                // Method ensureAdvancedConfigurationProcessed:()V
       4: aload_0
       5: getfield      #43                 // Field targettingRuntime1_6_10:Z
       8: ireturn

  public void setBehaveInJava5Way(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field behaveInJava5Way:Z
       5: return

  public void setTiming(boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field timing:Z
       5: aload_0
       6: iload_2
       7: putfield      #2                  // Field timingPeriodically:Z
      10: return

  public void setErrorAndWarningThreshold(boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #235                // Field errorThreshold:Z
       5: aload_0
       6: iload_2
       7: putfield      #236                // Field warningThreshold:Z
      10: return

  public boolean isIgnoringUnusedDeclaredThrownException();
    Code:
       0: aload_0
       1: getfield      #235                // Field errorThreshold:Z
       4: ifne          14
       7: aload_0
       8: getfield      #236                // Field warningThreshold:Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public void performExtraConfiguration(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: new           #237                // class java/util/Properties
       9: dup
      10: invokespecial #238                // Method java/util/Properties."<init>":()V
      13: putfield      #28                 // Field extraConfiguration:Ljava/util/Properties;
      16: iconst_m1
      17: istore_2
      18: aload_1
      19: ldc           #239                // String ,
      21: invokevirtual #240                // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      24: dup
      25: istore_2
      26: iconst_m1
      27: if_icmpeq     93
      30: aload_1
      31: iconst_0
      32: iload_2
      33: invokevirtual #241                // Method java/lang/String.substring:(II)Ljava/lang/String;
      36: astore_3
      37: aload_3
      38: ldc           #242                // String =
      40: invokevirtual #240                // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      43: istore        4
      45: iload         4
      47: iconst_m1
      48: if_icmpeq     82
      51: aload_3
      52: iconst_0
      53: iload         4
      55: invokevirtual #241                // Method java/lang/String.substring:(II)Ljava/lang/String;
      58: astore        5
      60: aload_3
      61: iload         4
      63: iconst_1
      64: iadd
      65: invokevirtual #243                // Method java/lang/String.substring:(I)Ljava/lang/String;
      68: astore        6
      70: aload_0
      71: getfield      #28                 // Field extraConfiguration:Ljava/util/Properties;
      74: aload         5
      76: aload         6
      78: invokevirtual #244                // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      81: pop
      82: aload_1
      83: iload_2
      84: iconst_1
      85: iadd
      86: invokevirtual #243                // Method java/lang/String.substring:(I)Ljava/lang/String;
      89: astore_1
      90: goto          18
      93: aload_1
      94: invokevirtual #245                // Method java/lang/String.length:()I
      97: ifle          141
     100: aload_1
     101: ldc           #242                // String =
     103: invokevirtual #240                // Method java/lang/String.indexOf:(Ljava/lang/String;)I
     106: istore_3
     107: iload_3
     108: iconst_m1
     109: if_icmpeq     141
     112: aload_1
     113: iconst_0
     114: iload_3
     115: invokevirtual #241                // Method java/lang/String.substring:(II)Ljava/lang/String;
     118: astore        4
     120: aload_1
     121: iload_3
     122: iconst_1
     123: iadd
     124: invokevirtual #243                // Method java/lang/String.substring:(I)Ljava/lang/String;
     127: astore        5
     129: aload_0
     130: getfield      #28                 // Field extraConfiguration:Ljava/util/Properties;
     133: aload         4
     135: aload         5
     137: invokevirtual #244                // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     140: pop
     141: aload_0
     142: invokevirtual #234                // Method ensureAdvancedConfigurationProcessed:()V
     145: return

  public boolean areInfoMessagesEnabled();
    Code:
       0: aload_0
       1: getfield      #56                 // Field infoMessagesEnabled:I
       4: ifne          31
       7: aload_0
       8: aload_0
       9: getfield      #5                  // Field messageHandler:Lorg/aspectj/bridge/IMessageHandler;
      12: getstatic     #246                // Field org/aspectj/bridge/IMessage.INFO:Lorg/aspectj/bridge/IMessage$Kind;
      15: invokeinterface #247,  2          // InterfaceMethod org/aspectj/bridge/IMessageHandler.isIgnoring:(Lorg/aspectj/bridge/IMessage$Kind;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_2
      28: putfield      #56                 // Field infoMessagesEnabled:I
      31: aload_0
      32: getfield      #56                 // Field infoMessagesEnabled:I
      35: iconst_2
      36: if_icmpne     43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  public java.util.Properties getExtraConfiguration();
    Code:
       0: aload_0
       1: getfield      #28                 // Field extraConfiguration:Ljava/util/Properties;
       4: areturn

  public boolean isInJava5Mode();
    Code:
       0: aload_0
       1: getfield      #19                 // Field behaveInJava5Way:Z
       4: ireturn

  public boolean isTimingEnabled();
    Code:
       0: aload_0
       1: getfield      #20                 // Field timing:Z
       4: ireturn

  public void setTargetAspectjRuntimeLevel(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field targetAspectjRuntimeLevel:Ljava/lang/String;
       5: return

  public void setOptionalJoinpoints(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: ldc           #248                // String arrayconstruction
       8: invokevirtual #240                // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      11: iconst_m1
      12: if_icmpeq     20
      15: aload_0
      16: iconst_1
      17: putfield      #25                 // Field optionalJoinpoint_ArrayConstruction:Z
      20: aload_1
      21: ldc           #249                // String synchronization
      23: invokevirtual #240                // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      26: iconst_m1
      27: if_icmpeq     35
      30: aload_0
      31: iconst_1
      32: putfield      #26                 // Field optionalJoinpoint_Synchronization:Z
      35: return

  public boolean isJoinpointArrayConstructionEnabled();
    Code:
       0: aload_0
       1: getfield      #25                 // Field optionalJoinpoint_ArrayConstruction:Z
       4: ireturn

  public boolean isJoinpointSynchronizationEnabled();
    Code:
       0: aload_0
       1: getfield      #26                 // Field optionalJoinpoint_Synchronization:Z
       4: ireturn

  public java.lang.String getTargetAspectjRuntimeLevel();
    Code:
       0: aload_0
       1: getfield      #24                 // Field targetAspectjRuntimeLevel:Ljava/lang/String;
       4: areturn

  public boolean isTargettingAspectJRuntime12();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #152                // Method isInJava5Mode:()Z
       6: ifne          14
       9: iconst_1
      10: istore_1
      11: goto          24
      14: aload_0
      15: invokevirtual #250                // Method getTargetAspectjRuntimeLevel:()Ljava/lang/String;
      18: ldc           #251                // String 1.2
      20: invokevirtual #121                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      23: istore_1
      24: iload_1
      25: ireturn

  public void validateType(org.aspectj.weaver.UnresolvedType);
    Code:
       0: return

  public boolean isDemotionActive();
    Code:
       0: iconst_1
       1: ireturn

  public org.aspectj.weaver.TypeVariable[] getTypeVariablesCurrentlyBeingProcessed(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #83                 // Field workInProgress1:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #252,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #253                // class "[Lorg/aspectj/weaver/TypeVariable;"
      13: areturn

  public void recordTypeVariablesCurrentlyBeingProcessed(java.lang.Class<?>, org.aspectj.weaver.TypeVariable[]);
    Code:
       0: aload_0
       1: getfield      #83                 // Field workInProgress1:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #254,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public void forgetTypeVariablesCurrentlyBeingProcessed(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #83                 // Field workInProgress1:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #255,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public void setAddSerialVerUID(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #27                 // Field addSerialVerUID:Z
       5: return

  public boolean isAddSerialVerUID();
    Code:
       0: aload_0
       1: getfield      #27                 // Field addSerialVerUID:Z
       4: ireturn

  public void flush();
    Code:
       0: aload_0
       1: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
       4: getfield      #256                // Field org/aspectj/weaver/World$TypeMap.expendableMap:Ljava/util/Map;
       7: invokeinterface #257,  1          // InterfaceMethod java/util/Map.clear:()V
      12: return

  public void ensureAdvancedConfigurationProcessed();
    Code:
       0: aload_0
       1: getfield      #29                 // Field checkedAdvancedConfiguration:Z
       4: ifne          855
       7: aload_0
       8: invokevirtual #258                // Method getExtraConfiguration:()Ljava/util/Properties;
      11: astore_1
      12: aload_1
      13: ifnull        750
      16: aload_1
      17: ldc_w         #259                // String bcelRepositoryCaching
      20: ldc           #36                 // String true
      22: invokevirtual #260                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      25: astore_2
      26: aload_0
      27: aload_2
      28: ldc           #36                 // String true
      30: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      33: putfield      #38                 // Field bcelRepositoryCaching:Z
      36: aload_0
      37: getfield      #38                 // Field bcelRepositoryCaching:Z
      40: ifne          59
      43: aload_0
      44: invokevirtual #261                // Method getMessageHandler:()Lorg/aspectj/bridge/IMessageHandler;
      47: ldc_w         #262                // String [bcelRepositoryCaching=false] AspectJ will not use a bcel cache for class information
      50: invokestatic  #263                // Method org/aspectj/bridge/MessageUtil.info:(Ljava/lang/String;)Lorg/aspectj/bridge/IMessage;
      53: invokeinterface #224,  2          // InterfaceMethod org/aspectj/bridge/IMessageHandler.handleMessage:(Lorg/aspectj/bridge/IMessage;)Z
      58: pop
      59: aload_1
      60: ldc_w         #264                // String itdVersion
      63: ldc_w         #265                // String 2
      66: invokevirtual #260                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      69: astore_2
      70: aload_2
      71: ldc_w         #266                // String 1
      74: invokevirtual #121                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      77: ifeq          85
      80: aload_0
      81: iconst_1
      82: putfield      #40                 // Field itdVersion:I
      85: aload_1
      86: ldc_w         #267                // String avoidFinal
      89: ldc_w         #268                // String false
      92: invokevirtual #260                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      95: astore_2
      96: aload_2
      97: ldc           #36                 // String true
      99: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     102: ifeq          110
     105: aload_0
     106: iconst_0
     107: putfield      #42                 // Field useFinal:Z
     110: aload_1
     111: ldc_w         #269                // String minimalModel
     114: ldc           #36                 // String true
     116: invokevirtual #260                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     119: astore_2
     120: aload_2
     121: ldc_w         #268                // String false
     124: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     127: ifeq          135
     130: aload_0
     131: iconst_0
     132: putfield      #41                 // Field minimalModel:Z
     135: aload_1
     136: ldc_w         #270                // String targetRuntime1_6_10
     139: ldc_w         #268                // String false
     142: invokevirtual #260                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     145: astore_2
     146: aload_2
     147: ldc           #36                 // String true
     149: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     152: ifeq          160
     155: aload_0
     156: iconst_1
     157: putfield      #43                 // Field targettingRuntime1_6_10:Z
     160: aload_1
     161: ldc_w         #271                // String fastPackMethods
     164: ldc           #36                 // String true
     166: invokevirtual #260                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     169: astore_2
     170: aload_0
     171: aload_2
     172: ldc           #36                 // String true
     174: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     177: putfield      #39                 // Field fastMethodPacking:Z
     180: aload_1
     181: ldc_w         #272                // String pipelineCompilation
     184: ldc           #36                 // String true
     186: invokevirtual #260                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     189: astore_2
     190: aload_0
     191: aload_2
     192: ldc           #36                 // String true
     194: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     197: putfield      #34                 // Field shouldPipelineCompilation:Z
     200: aload_1
     201: ldc_w         #273                // String generateStackMaps
     204: ldc_w         #268                // String false
     207: invokevirtual #260                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     210: astore_2
     211: aload_0
     212: aload_2
     213: ldc           #36                 // String true
     215: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     218: putfield      #35                 // Field shouldGenerateStackMaps:Z
     221: aload_1
     222: ldc_w         #274                // String completeBinaryTypes
     225: ldc_w         #268                // String false
     228: invokevirtual #260                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     231: astore_2
     232: aload_0
     233: aload_2
     234: ldc           #36                 // String true
     236: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     239: putfield      #44                 // Field completeBinaryTypes:Z
     242: aload_0
     243: getfield      #44                 // Field completeBinaryTypes:Z
     246: ifeq          265
     249: aload_0
     250: invokevirtual #261                // Method getMessageHandler:()Lorg/aspectj/bridge/IMessageHandler;
     253: ldc_w         #275                // String [completeBinaryTypes=true] Completion of binary types activated
     256: invokestatic  #263                // Method org/aspectj/bridge/MessageUtil.info:(Ljava/lang/String;)Lorg/aspectj/bridge/IMessage;
     259: invokeinterface #224,  2          // InterfaceMethod org/aspectj/bridge/IMessageHandler.handleMessage:(Lorg/aspectj/bridge/IMessage;)Z
     264: pop
     265: aload_1
     266: ldc_w         #276                // String typeDemotion
     269: invokevirtual #277                // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     272: astore_2
     273: aload_2
     274: ifnull        351
     277: aload_0
     278: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
     281: invokestatic  #278                // Method org/aspectj/weaver/World$TypeMap.access$000:(Lorg/aspectj/weaver/World$TypeMap;)Z
     284: istore_3
     285: iload_3
     286: ifeq          320
     289: aload_2
     290: ldc_w         #268                // String false
     293: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     296: ifeq          320
     299: getstatic     #279                // Field java/lang/System.out:Ljava/io/PrintStream;
     302: ldc_w         #280                // String typeDemotion=false: type demotion switched OFF
     305: invokevirtual #281                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     308: aload_0
     309: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
     312: iconst_0
     313: invokestatic  #282                // Method org/aspectj/weaver/World$TypeMap.access$002:(Lorg/aspectj/weaver/World$TypeMap;Z)Z
     316: pop
     317: goto          351
     320: iload_3
     321: ifne          351
     324: aload_2
     325: ldc           #36                 // String true
     327: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     330: ifeq          351
     333: getstatic     #279                // Field java/lang/System.out:Ljava/io/PrintStream;
     336: ldc_w         #283                // String typeDemotion=true: type demotion switched ON
     339: invokevirtual #281                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     342: aload_0
     343: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
     346: iconst_1
     347: invokestatic  #282                // Method org/aspectj/weaver/World$TypeMap.access$002:(Lorg/aspectj/weaver/World$TypeMap;Z)Z
     350: pop
     351: aload_1
     352: ldc_w         #284                // String overWeaving
     355: ldc_w         #268                // String false
     358: invokevirtual #260                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     361: astore_2
     362: aload_2
     363: ldc           #36                 // String true
     365: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     368: ifeq          376
     371: aload_0
     372: iconst_1
     373: putfield      #45                 // Field overWeaving:Z
     376: aload_1
     377: ldc_w         #285                // String typeDemotionDebug
     380: ldc_w         #268                // String false
     383: invokevirtual #260                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     386: astore_2
     387: aload_2
     388: ldc           #36                 // String true
     390: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     393: ifeq          405
     396: aload_0
     397: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
     400: iconst_1
     401: invokestatic  #286                // Method org/aspectj/weaver/World$TypeMap.access$102:(Lorg/aspectj/weaver/World$TypeMap;Z)Z
     404: pop
     405: aload_1
     406: ldc_w         #287                // String useWeakTypeRefs
     409: ldc           #36                 // String true
     411: invokevirtual #260                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     414: astore_2
     415: aload_2
     416: ldc_w         #268                // String false
     419: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     422: ifeq          433
     425: aload_0
     426: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
     429: iconst_2
     430: putfield      #288                // Field org/aspectj/weaver/World$TypeMap.policy:I
     433: aload_0
     434: aload_1
     435: ldc_w         #289                // String runMinimalMemory
     438: invokevirtual #277                // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     441: ifnull        448
     444: iconst_1
     445: goto          449
     448: iconst_0
     449: putfield      #33                 // Field runMinimalMemorySet:Z
     452: aload_1
     453: ldc_w         #289                // String runMinimalMemory
     456: ldc_w         #268                // String false
     459: invokevirtual #260                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     462: astore_2
     463: aload_0
     464: aload_2
     465: ldc           #36                 // String true
     467: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     470: putfield      #31                 // Field runMinimalMemory:Z
     473: aload_1
     474: ldc_w         #290                // String debugStructuralChangesCode
     477: ldc_w         #268                // String false
     480: invokevirtual #260                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     483: astore_2
     484: aload_0
     485: aload_2
     486: ldc           #36                 // String true
     488: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     491: putfield      #46                 // Field forDEBUG_structuralChangesCode:Z
     494: aload_1
     495: ldc_w         #291                // String makeTjpFieldsTransient
     498: ldc_w         #268                // String false
     501: invokevirtual #260                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     504: astore_2
     505: aload_0
     506: aload_2
     507: ldc           #36                 // String true
     509: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     512: putfield      #32                 // Field transientTjpFields:Z
     515: aload_1
     516: ldc_w         #292                // String debugBridging
     519: ldc_w         #268                // String false
     522: invokevirtual #260                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     525: astore_2
     526: aload_0
     527: aload_2
     528: ldc           #36                 // String true
     530: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     533: putfield      #47                 // Field forDEBUG_bridgingCode:Z
     536: aload_1
     537: ldc_w         #293                // String generateNewLocalVariableTables
     540: ldc           #36                 // String true
     542: invokevirtual #260                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     545: astore_2
     546: aload_0
     547: aload_2
     548: ldc           #36                 // String true
     550: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     553: putfield      #49                 // Field generateNewLvts:Z
     556: aload_0
     557: getfield      #49                 // Field generateNewLvts:Z
     560: ifne          579
     563: aload_0
     564: invokevirtual #261                // Method getMessageHandler:()Lorg/aspectj/bridge/IMessageHandler;
     567: ldc_w         #294                // String [generateNewLvts=false] for methods without an incoming local variable table, do not generate one
     570: invokestatic  #263                // Method org/aspectj/bridge/MessageUtil.info:(Ljava/lang/String;)Lorg/aspectj/bridge/IMessage;
     573: invokeinterface #224,  2          // InterfaceMethod org/aspectj/bridge/IMessageHandler.handleMessage:(Lorg/aspectj/bridge/IMessage;)Z
     578: pop
     579: aload_1
     580: ldc_w         #295                // String optimizedMatching
     583: ldc           #36                 // String true
     585: invokevirtual #260                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     588: astore_2
     589: aload_0
     590: aload_2
     591: ldc           #36                 // String true
     593: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     596: putfield      #48                 // Field optimizedMatching:Z
     599: aload_0
     600: getfield      #48                 // Field optimizedMatching:Z
     603: ifne          622
     606: aload_0
     607: invokevirtual #261                // Method getMessageHandler:()Lorg/aspectj/bridge/IMessageHandler;
     610: ldc_w         #296                // String [optimizedMatching=false] optimized matching turned off
     613: invokestatic  #263                // Method org/aspectj/bridge/MessageUtil.info:(Ljava/lang/String;)Lorg/aspectj/bridge/IMessage;
     616: invokeinterface #224,  2          // InterfaceMethod org/aspectj/bridge/IMessageHandler.handleMessage:(Lorg/aspectj/bridge/IMessage;)Z
     621: pop
     622: aload_1
     623: ldc_w         #297                // String timersPerJoinpoint
     626: ldc_w         #298                // String 25000
     629: invokevirtual #260                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     632: astore_2
     633: aload_0
     634: aload_2
     635: invokestatic  #299                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     638: i2l
     639: putfield      #52                 // Field timersPerJoinpoint:J
     642: goto          686
     645: astore_3
     646: aload_0
     647: invokevirtual #261                // Method getMessageHandler:()Lorg/aspectj/bridge/IMessageHandler;
     650: new           #127                // class java/lang/StringBuilder
     653: dup
     654: invokespecial #128                // Method java/lang/StringBuilder."<init>":()V
     657: ldc_w         #301                // String unable to process timersPerJoinpoint value of
     660: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     663: aload_2
     664: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     667: invokevirtual #132                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     670: invokestatic  #302                // Method org/aspectj/bridge/MessageUtil.error:(Ljava/lang/String;)Lorg/aspectj/bridge/IMessage;
     673: invokeinterface #224,  2          // InterfaceMethod org/aspectj/bridge/IMessageHandler.handleMessage:(Lorg/aspectj/bridge/IMessage;)Z
     678: pop
     679: aload_0
     680: ldc2_w        #50                 // long 25000l
     683: putfield      #52                 // Field timersPerJoinpoint:J
     686: aload_1
     687: ldc_w         #303                // String timersPerFastMatchCall
     690: ldc_w         #304                // String 250
     693: invokevirtual #260                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     696: astore_2
     697: aload_0
     698: aload_2
     699: invokestatic  #299                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     702: i2l
     703: putfield      #55                 // Field timersPerType:J
     706: goto          750
     709: astore_3
     710: aload_0
     711: invokevirtual #261                // Method getMessageHandler:()Lorg/aspectj/bridge/IMessageHandler;
     714: new           #127                // class java/lang/StringBuilder
     717: dup
     718: invokespecial #128                // Method java/lang/StringBuilder."<init>":()V
     721: ldc_w         #305                // String unable to process timersPerType value of
     724: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     727: aload_2
     728: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     731: invokevirtual #132                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     734: invokestatic  #302                // Method org/aspectj/bridge/MessageUtil.error:(Ljava/lang/String;)Lorg/aspectj/bridge/IMessage;
     737: invokeinterface #224,  2          // InterfaceMethod org/aspectj/bridge/IMessageHandler.handleMessage:(Lorg/aspectj/bridge/IMessage;)Z
     742: pop
     743: aload_0
     744: ldc2_w        #53                 // long 250l
     747: putfield      #55                 // Field timersPerType:J
     750: getstatic     #306                // Field systemPropertyOverWeaving:Z
     753: ifeq          761
     756: aload_0
     757: iconst_1
     758: putfield      #45                 // Field overWeaving:Z
     761: aconst_null
     762: astore_2
     763: ldc_w         #307                // String aspectj.typeDemotion
     766: ldc_w         #268                // String false
     769: invokestatic  #308                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     772: astore_2
     773: aload_2
     774: ldc           #36                 // String true
     776: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     779: ifeq          800
     782: getstatic     #279                // Field java/lang/System.out:Ljava/io/PrintStream;
     785: ldc_w         #309                // String ASPECTJ: aspectj.typeDemotion=true: type demotion switched ON
     788: invokevirtual #281                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     791: aload_0
     792: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
     795: iconst_1
     796: invokestatic  #282                // Method org/aspectj/weaver/World$TypeMap.access$002:(Lorg/aspectj/weaver/World$TypeMap;Z)Z
     799: pop
     800: ldc_w         #310                // String aspectj.minimalModel
     803: ldc_w         #268                // String false
     806: invokestatic  #308                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     809: astore_2
     810: aload_2
     811: ldc           #36                 // String true
     813: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     816: ifeq          833
     819: getstatic     #279                // Field java/lang/System.out:Ljava/io/PrintStream;
     822: ldc_w         #311                // String ASPECTJ: aspectj.minimalModel=true: minimal model switched ON
     825: invokevirtual #281                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     828: aload_0
     829: iconst_1
     830: putfield      #41                 // Field minimalModel:Z
     833: goto          850
     836: astore_2
     837: getstatic     #313                // Field java/lang/System.err:Ljava/io/PrintStream;
     840: ldc_w         #314                // String ASPECTJ: Unable to read system properties
     843: invokevirtual #281                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     846: aload_2
     847: invokevirtual #315                // Method java/lang/Throwable.printStackTrace:()V
     850: aload_0
     851: iconst_1
     852: putfield      #29                 // Field checkedAdvancedConfiguration:Z
     855: return
    Exception table:
       from    to  target type
         633   642   645   Class java/lang/Exception
         697   706   709   Class java/lang/Exception
         750   833   836   Class java/lang/Throwable

  public boolean isRunMinimalMemory();
    Code:
       0: aload_0
       1: invokevirtual #234                // Method ensureAdvancedConfigurationProcessed:()V
       4: aload_0
       5: getfield      #31                 // Field runMinimalMemory:Z
       8: ireturn

  public boolean isTransientTjpFields();
    Code:
       0: aload_0
       1: invokevirtual #234                // Method ensureAdvancedConfigurationProcessed:()V
       4: aload_0
       5: getfield      #32                 // Field transientTjpFields:Z
       8: ireturn

  public boolean isRunMinimalMemorySet();
    Code:
       0: aload_0
       1: invokevirtual #234                // Method ensureAdvancedConfigurationProcessed:()V
       4: aload_0
       5: getfield      #33                 // Field runMinimalMemorySet:Z
       8: ireturn

  public boolean shouldFastPackMethods();
    Code:
       0: aload_0
       1: invokevirtual #234                // Method ensureAdvancedConfigurationProcessed:()V
       4: aload_0
       5: getfield      #39                 // Field fastMethodPacking:Z
       8: ireturn

  public boolean shouldPipelineCompilation();
    Code:
       0: aload_0
       1: invokevirtual #234                // Method ensureAdvancedConfigurationProcessed:()V
       4: aload_0
       5: getfield      #34                 // Field shouldPipelineCompilation:Z
       8: ireturn

  public boolean shouldGenerateStackMaps();
    Code:
       0: aload_0
       1: invokevirtual #234                // Method ensureAdvancedConfigurationProcessed:()V
       4: aload_0
       5: getfield      #35                 // Field shouldGenerateStackMaps:Z
       8: ireturn

  public void setIncrementalCompileCouldFollow(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field incrementalCompileCouldFollow:Z
       5: return

  public boolean couldIncrementalCompileFollow();
    Code:
       0: aload_0
       1: getfield      #21                 // Field incrementalCompileCouldFollow:Z
       4: ireturn

  public void setSynchronizationPointcutsInUse();
    Code:
       0: getstatic     #316                // Field trace:Lorg/aspectj/weaver/tools/Trace;
       3: invokeinterface #317,  1          // InterfaceMethod org/aspectj/weaver/tools/Trace.isTraceEnabled:()Z
       8: ifeq          23
      11: getstatic     #316                // Field trace:Lorg/aspectj/weaver/tools/Trace;
      14: ldc_w         #318                // String setSynchronizationPointcutsInUse
      17: aload_0
      18: invokeinterface #319,  3          // InterfaceMethod org/aspectj/weaver/tools/Trace.enter:(Ljava/lang/String;Ljava/lang/Object;)V
      23: aload_0
      24: iconst_1
      25: putfield      #30                 // Field synchronizationPointcutsInUse:Z
      28: getstatic     #316                // Field trace:Lorg/aspectj/weaver/tools/Trace;
      31: invokeinterface #317,  1          // InterfaceMethod org/aspectj/weaver/tools/Trace.isTraceEnabled:()Z
      36: ifeq          50
      39: getstatic     #316                // Field trace:Lorg/aspectj/weaver/tools/Trace;
      42: ldc_w         #318                // String setSynchronizationPointcutsInUse
      45: invokeinterface #320,  2          // InterfaceMethod org/aspectj/weaver/tools/Trace.exit:(Ljava/lang/String;)V
      50: return

  public boolean areSynchronizationPointcutsInUse();
    Code:
       0: aload_0
       1: getfield      #30                 // Field synchronizationPointcutsInUse:Z
       4: ireturn

  public void registerPointcutHandler(org.aspectj.weaver.tools.PointcutDesignatorHandler);
    Code:
       0: aload_0
       1: getfield      #321                // Field pointcutDesignators:Ljava/util/Set;
       4: ifnonnull     18
       7: aload_0
       8: new           #322                // class java/util/HashSet
      11: dup
      12: invokespecial #323                // Method java/util/HashSet."<init>":()V
      15: putfield      #321                // Field pointcutDesignators:Ljava/util/Set;
      18: aload_0
      19: getfield      #321                // Field pointcutDesignators:Ljava/util/Set;
      22: aload_1
      23: invokeinterface #324,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      28: pop
      29: return

  public java.util.Set<org.aspectj.weaver.tools.PointcutDesignatorHandler> getRegisteredPointcutHandlers();
    Code:
       0: aload_0
       1: getfield      #321                // Field pointcutDesignators:Ljava/util/Set;
       4: ifnonnull     11
       7: invokestatic  #325                // Method java/util/Collections.emptySet:()Ljava/util/Set;
      10: areturn
      11: aload_0
      12: getfield      #321                // Field pointcutDesignators:Ljava/util/Set;
      15: areturn

  public void reportMatch(org.aspectj.weaver.ShadowMunger, org.aspectj.weaver.Shadow);
    Code:
       0: return

  public boolean isOverWeaving();
    Code:
       0: aload_0
       1: getfield      #45                 // Field overWeaving:Z
       4: ireturn

  public void reportCheckerMatch(org.aspectj.weaver.Checker, org.aspectj.weaver.Shadow);
    Code:
       0: return

  public boolean isXmlConfigured();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isAspectIncluded(org.aspectj.weaver.ResolvedType);
    Code:
       0: iconst_1
       1: ireturn

  public boolean hasUnsatisfiedDependency(org.aspectj.weaver.ResolvedType);
    Code:
       0: iconst_0
       1: ireturn

  public org.aspectj.weaver.patterns.TypePattern getAspectScope(org.aspectj.weaver.ResolvedType);
    Code:
       0: aconst_null
       1: areturn

  public java.util.Map<java.lang.String, org.aspectj.weaver.ResolvedType> getFixed();
    Code:
       0: aload_0
       1: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
       4: getfield      #326                // Field org/aspectj/weaver/World$TypeMap.tMap:Ljava/util/Map;
       7: areturn

  public java.util.Map<java.lang.String, java.lang.ref.Reference<org.aspectj.weaver.ResolvedType>> getExpendable();
    Code:
       0: aload_0
       1: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
       4: getfield      #256                // Field org/aspectj/weaver/World$TypeMap.expendableMap:Ljava/util/Map;
       7: areturn

  public void demote();
    Code:
       0: aload_0
       1: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
       4: invokevirtual #327                // Method org/aspectj/weaver/World$TypeMap.demote:()I
       7: pop
       8: return

  protected boolean isExpendable(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_1
       1: getstatic     #328                // Field org/aspectj/weaver/UnresolvedType.OBJECT:Lorg/aspectj/weaver/UnresolvedType;
       4: invokevirtual #329                // Method org/aspectj/weaver/ResolvedType.equals:(Ljava/lang/Object;)Z
       7: ifne          35
      10: aload_1
      11: invokevirtual #330                // Method org/aspectj/weaver/ResolvedType.isExposedToWeaver:()Z
      14: ifne          35
      17: aload_1
      18: invokevirtual #331                // Method org/aspectj/weaver/ResolvedType.isPrimitiveType:()Z
      21: ifne          35
      24: aload_1
      25: invokevirtual #332                // Method org/aspectj/weaver/ResolvedType.isPrimitiveArray:()Z
      28: ifne          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  public java.util.Map<org.aspectj.weaver.ResolvedType, java.util.Set<org.aspectj.weaver.ResolvedType>> getExclusionMap();
    Code:
       0: aload_0
       1: getfield      #84                 // Field exclusionMap:Ljava/util/Map;
       4: areturn

  public void record(org.aspectj.weaver.patterns.Pointcut, long);
    Code:
       0: aload_0
       1: getfield      #85                 // Field timeCollector:Lorg/aspectj/weaver/World$TimeCollector;
       4: ifnonnull     23
       7: aload_0
       8: invokevirtual #234                // Method ensureAdvancedConfigurationProcessed:()V
      11: aload_0
      12: new           #333                // class org/aspectj/weaver/World$TimeCollector
      15: dup
      16: aload_0
      17: invokespecial #334                // Method org/aspectj/weaver/World$TimeCollector."<init>":(Lorg/aspectj/weaver/World;)V
      20: putfield      #85                 // Field timeCollector:Lorg/aspectj/weaver/World$TimeCollector;
      23: aload_0
      24: getfield      #85                 // Field timeCollector:Lorg/aspectj/weaver/World$TimeCollector;
      27: aload_1
      28: lload_2
      29: invokevirtual #335                // Method org/aspectj/weaver/World$TimeCollector.record:(Lorg/aspectj/weaver/patterns/Pointcut;J)V
      32: return

  public void recordFastMatch(org.aspectj.weaver.patterns.Pointcut, long);
    Code:
       0: aload_0
       1: getfield      #85                 // Field timeCollector:Lorg/aspectj/weaver/World$TimeCollector;
       4: ifnonnull     23
       7: aload_0
       8: invokevirtual #234                // Method ensureAdvancedConfigurationProcessed:()V
      11: aload_0
      12: new           #333                // class org/aspectj/weaver/World$TimeCollector
      15: dup
      16: aload_0
      17: invokespecial #334                // Method org/aspectj/weaver/World$TimeCollector."<init>":(Lorg/aspectj/weaver/World;)V
      20: putfield      #85                 // Field timeCollector:Lorg/aspectj/weaver/World$TimeCollector;
      23: aload_0
      24: getfield      #85                 // Field timeCollector:Lorg/aspectj/weaver/World$TimeCollector;
      27: aload_1
      28: lload_2
      29: invokevirtual #336                // Method org/aspectj/weaver/World$TimeCollector.recordFastMatch:(Lorg/aspectj/weaver/patterns/Pointcut;J)V
      32: return

  public void reportTimers();
    Code:
       0: aload_0
       1: getfield      #85                 // Field timeCollector:Lorg/aspectj/weaver/World$TimeCollector;
       4: ifnull        33
       7: aload_0
       8: getfield      #2                  // Field timingPeriodically:Z
      11: ifne          33
      14: aload_0
      15: getfield      #85                 // Field timeCollector:Lorg/aspectj/weaver/World$TimeCollector;
      18: invokevirtual #337                // Method org/aspectj/weaver/World$TimeCollector.report:()V
      21: aload_0
      22: new           #333                // class org/aspectj/weaver/World$TimeCollector
      25: dup
      26: aload_0
      27: invokespecial #334                // Method org/aspectj/weaver/World$TimeCollector."<init>":(Lorg/aspectj/weaver/World;)V
      30: putfield      #85                 // Field timeCollector:Lorg/aspectj/weaver/World$TimeCollector;
      33: return

  public org.aspectj.weaver.World$TypeMap getTypeMap();
    Code:
       0: aload_0
       1: getfield      #9                  // Field typeMap:Lorg/aspectj/weaver/World$TypeMap;
       4: areturn

  public static void reset();
    Code:
       0: return

  public int getItdVersion();
    Code:
       0: aload_0
       1: getfield      #40                 // Field itdVersion:I
       4: ireturn

  public abstract boolean isLoadtimeWeaving();

  public void classWriteEvent(char[][]);
    Code:
       0: return

  static boolean access$200(org.aspectj.weaver.World);
    Code:
       0: aload_0
       1: getfield      #2                  // Field timingPeriodically:Z
       4: ireturn

  static {};
    Code:
       0: iconst_1
       1: putstatic     #338                // Field createInjarHierarchy:Z
       4: iconst_0
       5: putstatic     #306                // Field systemPropertyOverWeaving:Z
       8: invokestatic  #339                // Method org/aspectj/weaver/tools/TraceFactory.getTraceFactory:()Lorg/aspectj/weaver/tools/TraceFactory;
      11: ldc           #1                  // class org/aspectj/weaver/World
      13: invokevirtual #340                // Method org/aspectj/weaver/tools/TraceFactory.getTrace:(Ljava/lang/Class;)Lorg/aspectj/weaver/tools/Trace;
      16: putstatic     #316                // Field trace:Lorg/aspectj/weaver/tools/Trace;
      19: ldc_w         #341                // String aspectj.overweaving
      22: ldc_w         #268                // String false
      25: invokestatic  #308                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      28: astore_0
      29: aload_0
      30: ldc           #36                 // String true
      32: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      35: ifeq          51
      38: getstatic     #279                // Field java/lang/System.out:Ljava/io/PrintStream;
      41: ldc_w         #342                // String ASPECTJ: aspectj.overweaving=true: overweaving switched ON
      44: invokevirtual #281                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      47: iconst_1
      48: putstatic     #306                // Field systemPropertyOverWeaving:Z
      51: goto          68
      54: astore_0
      55: getstatic     #313                // Field java/lang/System.err:Ljava/io/PrintStream;
      58: ldc_w         #314                // String ASPECTJ: Unable to read system properties
      61: invokevirtual #281                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      64: aload_0
      65: invokevirtual #315                // Method java/lang/Throwable.printStackTrace:()V
      68: return
    Exception table:
       from    to  target type
          19    51    54   Class java/lang/Throwable
}
