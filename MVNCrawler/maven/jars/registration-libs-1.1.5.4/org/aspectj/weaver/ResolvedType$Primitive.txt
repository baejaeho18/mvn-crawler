Compiled from "ResolvedType.java"
class org.aspectj.weaver.ResolvedType$Primitive extends org.aspectj.weaver.ResolvedType {
  private final int size;

  private final int index;

  private static final boolean[][] assignTable;

  private static final boolean[][] noConvertTable;

  org.aspectj.weaver.ResolvedType$Primitive(java.lang.String, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method org/aspectj/weaver/ResolvedType."<init>":(Ljava/lang/String;Lorg/aspectj/weaver/World;)V
       6: aload_0
       7: iload_2
       8: putfield      #2                  // Field size:I
      11: aload_0
      12: iload_3
      13: putfield      #3                  // Field index:I
      16: aload_0
      17: getstatic     #4                  // Field org/aspectj/weaver/UnresolvedType$TypeKind.PRIMITIVE:Lorg/aspectj/weaver/UnresolvedType$TypeKind;
      20: putfield      #5                  // Field typeKind:Lorg/aspectj/weaver/UnresolvedType$TypeKind;
      23: return

  public final int getSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field size:I
       4: ireturn

  public final int getModifiers();
    Code:
       0: bipush        17
       2: ireturn

  public final boolean isPrimitiveType();
    Code:
       0: iconst_1
       1: ireturn

  public boolean hasAnnotation(org.aspectj.weaver.UnresolvedType);
    Code:
       0: iconst_0
       1: ireturn

  public final boolean isAssignableFrom(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method org/aspectj/weaver/ResolvedType.isPrimitiveType:()Z
       4: ifne          52
       7: aload_0
       8: getfield      #8                  // Field world:Lorg/aspectj/weaver/World;
      11: invokevirtual #9                  // Method org/aspectj/weaver/World.isInJava5Mode:()Z
      14: ifne          19
      17: iconst_0
      18: ireturn
      19: getstatic     #10                 // Field validBoxing:Ljava/util/Set;
      22: new           #11                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      29: aload_0
      30: invokevirtual #13                 // Method getSignature:()Ljava/lang/String;
      33: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_1
      37: invokevirtual #15                 // Method org/aspectj/weaver/ResolvedType.getSignature:()Ljava/lang/String;
      40: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokeinterface #17,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      51: ireturn
      52: getstatic     #18                 // Field assignTable:[[Z
      55: aload_1
      56: checkcast     #19                 // class org/aspectj/weaver/ResolvedType$Primitive
      59: getfield      #3                  // Field index:I
      62: aaload
      63: aload_0
      64: getfield      #3                  // Field index:I
      67: baload
      68: ireturn

  public final boolean isAssignableFrom(org.aspectj.weaver.ResolvedType, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method isAssignableFrom:(Lorg/aspectj/weaver/ResolvedType;)Z
       5: ireturn

  public final boolean isCoerceableFrom(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: invokevirtual #7                  // Method org/aspectj/weaver/ResolvedType.isPrimitiveType:()Z
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: getfield      #3                  // Field index:I
      20: bipush        6
      22: if_icmpgt     37
      25: aload_1
      26: checkcast     #19                 // class org/aspectj/weaver/ResolvedType$Primitive
      29: getfield      #3                  // Field index:I
      32: bipush        6
      34: if_icmple     39
      37: iconst_0
      38: ireturn
      39: iconst_1
      40: ireturn

  public org.aspectj.weaver.ResolvedType resolve(org.aspectj.weaver.World);
    Code:
       0: aload_0
       1: getfield      #8                  // Field world:Lorg/aspectj/weaver/World;
       4: aload_1
       5: if_acmpeq     16
       8: new           #21                 // class java/lang/IllegalStateException
      11: dup
      12: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":()V
      15: athrow
      16: aload_0
      17: aload_1
      18: putfield      #8                  // Field world:Lorg/aspectj/weaver/World;
      21: aload_0
      22: aload_1
      23: invokespecial #23                 // Method org/aspectj/weaver/ResolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      26: areturn

  public final boolean needsNoConversionFrom(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method org/aspectj/weaver/ResolvedType.isPrimitiveType:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: getstatic     #24                 // Field noConvertTable:[[Z
      12: aload_1
      13: checkcast     #19                 // class org/aspectj/weaver/ResolvedType$Primitive
      16: getfield      #3                  // Field index:I
      19: aaload
      20: aload_0
      21: getfield      #3                  // Field index:I
      24: baload
      25: ireturn

  public final org.aspectj.weaver.ResolvedMember[] getDeclaredFields();
    Code:
       0: getstatic     #25                 // Field org/aspectj/weaver/ResolvedMember.NONE:[Lorg/aspectj/weaver/ResolvedMember;
       3: areturn

  public final org.aspectj.weaver.ResolvedMember[] getDeclaredMethods();
    Code:
       0: getstatic     #25                 // Field org/aspectj/weaver/ResolvedMember.NONE:[Lorg/aspectj/weaver/ResolvedMember;
       3: areturn

  public final org.aspectj.weaver.ResolvedType[] getDeclaredInterfaces();
    Code:
       0: getstatic     #26                 // Field org/aspectj/weaver/ResolvedType.NONE:[Lorg/aspectj/weaver/ResolvedType;
       3: areturn

  public final org.aspectj.weaver.ResolvedMember[] getDeclaredPointcuts();
    Code:
       0: getstatic     #25                 // Field org/aspectj/weaver/ResolvedMember.NONE:[Lorg/aspectj/weaver/ResolvedMember;
       3: areturn

  public final org.aspectj.weaver.ResolvedType getSuperclass();
    Code:
       0: aconst_null
       1: areturn

  public org.aspectj.weaver.ISourceContext getSourceContext();
    Code:
       0: aconst_null
       1: areturn

  public org.aspectj.weaver.UnresolvedType getRawType();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method org/aspectj/weaver/ResolvedType.getRawType:()Lorg/aspectj/weaver/ResolvedType;
       4: areturn

  static {};
    Code:
       0: bipush        9
       2: anewarray     #28                 // class "[Z"
       5: dup
       6: iconst_0
       7: bipush        9
       9: newarray       boolean
      11: dup
      12: iconst_0
      13: iconst_1
      14: bastore
      15: dup
      16: iconst_1
      17: iconst_1
      18: bastore
      19: dup
      20: iconst_2
      21: iconst_1
      22: bastore
      23: dup
      24: iconst_3
      25: iconst_1
      26: bastore
      27: dup
      28: iconst_4
      29: iconst_1
      30: bastore
      31: dup
      32: iconst_5
      33: iconst_1
      34: bastore
      35: dup
      36: bipush        6
      38: iconst_1
      39: bastore
      40: dup
      41: bipush        7
      43: iconst_0
      44: bastore
      45: dup
      46: bipush        8
      48: iconst_0
      49: bastore
      50: aastore
      51: dup
      52: iconst_1
      53: bipush        9
      55: newarray       boolean
      57: dup
      58: iconst_0
      59: iconst_0
      60: bastore
      61: dup
      62: iconst_1
      63: iconst_1
      64: bastore
      65: dup
      66: iconst_2
      67: iconst_1
      68: bastore
      69: dup
      70: iconst_3
      71: iconst_1
      72: bastore
      73: dup
      74: iconst_4
      75: iconst_1
      76: bastore
      77: dup
      78: iconst_5
      79: iconst_1
      80: bastore
      81: dup
      82: bipush        6
      84: iconst_0
      85: bastore
      86: dup
      87: bipush        7
      89: iconst_0
      90: bastore
      91: dup
      92: bipush        8
      94: iconst_0
      95: bastore
      96: aastore
      97: dup
      98: iconst_2
      99: bipush        9
     101: newarray       boolean
     103: dup
     104: iconst_0
     105: iconst_0
     106: bastore
     107: dup
     108: iconst_1
     109: iconst_0
     110: bastore
     111: dup
     112: iconst_2
     113: iconst_1
     114: bastore
     115: dup
     116: iconst_3
     117: iconst_0
     118: bastore
     119: dup
     120: iconst_4
     121: iconst_0
     122: bastore
     123: dup
     124: iconst_5
     125: iconst_0
     126: bastore
     127: dup
     128: bipush        6
     130: iconst_0
     131: bastore
     132: dup
     133: bipush        7
     135: iconst_0
     136: bastore
     137: dup
     138: bipush        8
     140: iconst_0
     141: bastore
     142: aastore
     143: dup
     144: iconst_3
     145: bipush        9
     147: newarray       boolean
     149: dup
     150: iconst_0
     151: iconst_0
     152: bastore
     153: dup
     154: iconst_1
     155: iconst_0
     156: bastore
     157: dup
     158: iconst_2
     159: iconst_1
     160: bastore
     161: dup
     162: iconst_3
     163: iconst_1
     164: bastore
     165: dup
     166: iconst_4
     167: iconst_0
     168: bastore
     169: dup
     170: iconst_5
     171: iconst_0
     172: bastore
     173: dup
     174: bipush        6
     176: iconst_0
     177: bastore
     178: dup
     179: bipush        7
     181: iconst_0
     182: bastore
     183: dup
     184: bipush        8
     186: iconst_0
     187: bastore
     188: aastore
     189: dup
     190: iconst_4
     191: bipush        9
     193: newarray       boolean
     195: dup
     196: iconst_0
     197: iconst_0
     198: bastore
     199: dup
     200: iconst_1
     201: iconst_0
     202: bastore
     203: dup
     204: iconst_2
     205: iconst_1
     206: bastore
     207: dup
     208: iconst_3
     209: iconst_1
     210: bastore
     211: dup
     212: iconst_4
     213: iconst_1
     214: bastore
     215: dup
     216: iconst_5
     217: iconst_1
     218: bastore
     219: dup
     220: bipush        6
     222: iconst_0
     223: bastore
     224: dup
     225: bipush        7
     227: iconst_0
     228: bastore
     229: dup
     230: bipush        8
     232: iconst_0
     233: bastore
     234: aastore
     235: dup
     236: iconst_5
     237: bipush        9
     239: newarray       boolean
     241: dup
     242: iconst_0
     243: iconst_0
     244: bastore
     245: dup
     246: iconst_1
     247: iconst_0
     248: bastore
     249: dup
     250: iconst_2
     251: iconst_1
     252: bastore
     253: dup
     254: iconst_3
     255: iconst_1
     256: bastore
     257: dup
     258: iconst_4
     259: iconst_0
     260: bastore
     261: dup
     262: iconst_5
     263: iconst_1
     264: bastore
     265: dup
     266: bipush        6
     268: iconst_0
     269: bastore
     270: dup
     271: bipush        7
     273: iconst_0
     274: bastore
     275: dup
     276: bipush        8
     278: iconst_0
     279: bastore
     280: aastore
     281: dup
     282: bipush        6
     284: bipush        9
     286: newarray       boolean
     288: dup
     289: iconst_0
     290: iconst_0
     291: bastore
     292: dup
     293: iconst_1
     294: iconst_0
     295: bastore
     296: dup
     297: iconst_2
     298: iconst_1
     299: bastore
     300: dup
     301: iconst_3
     302: iconst_1
     303: bastore
     304: dup
     305: iconst_4
     306: iconst_1
     307: bastore
     308: dup
     309: iconst_5
     310: iconst_1
     311: bastore
     312: dup
     313: bipush        6
     315: iconst_1
     316: bastore
     317: dup
     318: bipush        7
     320: iconst_0
     321: bastore
     322: dup
     323: bipush        8
     325: iconst_0
     326: bastore
     327: aastore
     328: dup
     329: bipush        7
     331: bipush        9
     333: newarray       boolean
     335: dup
     336: iconst_0
     337: iconst_0
     338: bastore
     339: dup
     340: iconst_1
     341: iconst_0
     342: bastore
     343: dup
     344: iconst_2
     345: iconst_0
     346: bastore
     347: dup
     348: iconst_3
     349: iconst_0
     350: bastore
     351: dup
     352: iconst_4
     353: iconst_0
     354: bastore
     355: dup
     356: iconst_5
     357: iconst_0
     358: bastore
     359: dup
     360: bipush        6
     362: iconst_0
     363: bastore
     364: dup
     365: bipush        7
     367: iconst_1
     368: bastore
     369: dup
     370: bipush        8
     372: iconst_0
     373: bastore
     374: aastore
     375: dup
     376: bipush        8
     378: bipush        9
     380: newarray       boolean
     382: dup
     383: iconst_0
     384: iconst_0
     385: bastore
     386: dup
     387: iconst_1
     388: iconst_0
     389: bastore
     390: dup
     391: iconst_2
     392: iconst_0
     393: bastore
     394: dup
     395: iconst_3
     396: iconst_0
     397: bastore
     398: dup
     399: iconst_4
     400: iconst_0
     401: bastore
     402: dup
     403: iconst_5
     404: iconst_0
     405: bastore
     406: dup
     407: bipush        6
     409: iconst_0
     410: bastore
     411: dup
     412: bipush        7
     414: iconst_0
     415: bastore
     416: dup
     417: bipush        8
     419: iconst_1
     420: bastore
     421: aastore
     422: putstatic     #18                 // Field assignTable:[[Z
     425: bipush        9
     427: anewarray     #28                 // class "[Z"
     430: dup
     431: iconst_0
     432: bipush        9
     434: newarray       boolean
     436: dup
     437: iconst_0
     438: iconst_1
     439: bastore
     440: dup
     441: iconst_1
     442: iconst_1
     443: bastore
     444: dup
     445: iconst_2
     446: iconst_0
     447: bastore
     448: dup
     449: iconst_3
     450: iconst_0
     451: bastore
     452: dup
     453: iconst_4
     454: iconst_1
     455: bastore
     456: dup
     457: iconst_5
     458: iconst_0
     459: bastore
     460: dup
     461: bipush        6
     463: iconst_1
     464: bastore
     465: dup
     466: bipush        7
     468: iconst_0
     469: bastore
     470: dup
     471: bipush        8
     473: iconst_0
     474: bastore
     475: aastore
     476: dup
     477: iconst_1
     478: bipush        9
     480: newarray       boolean
     482: dup
     483: iconst_0
     484: iconst_0
     485: bastore
     486: dup
     487: iconst_1
     488: iconst_1
     489: bastore
     490: dup
     491: iconst_2
     492: iconst_0
     493: bastore
     494: dup
     495: iconst_3
     496: iconst_0
     497: bastore
     498: dup
     499: iconst_4
     500: iconst_1
     501: bastore
     502: dup
     503: iconst_5
     504: iconst_0
     505: bastore
     506: dup
     507: bipush        6
     509: iconst_0
     510: bastore
     511: dup
     512: bipush        7
     514: iconst_0
     515: bastore
     516: dup
     517: bipush        8
     519: iconst_0
     520: bastore
     521: aastore
     522: dup
     523: iconst_2
     524: bipush        9
     526: newarray       boolean
     528: dup
     529: iconst_0
     530: iconst_0
     531: bastore
     532: dup
     533: iconst_1
     534: iconst_0
     535: bastore
     536: dup
     537: iconst_2
     538: iconst_1
     539: bastore
     540: dup
     541: iconst_3
     542: iconst_0
     543: bastore
     544: dup
     545: iconst_4
     546: iconst_0
     547: bastore
     548: dup
     549: iconst_5
     550: iconst_0
     551: bastore
     552: dup
     553: bipush        6
     555: iconst_0
     556: bastore
     557: dup
     558: bipush        7
     560: iconst_0
     561: bastore
     562: dup
     563: bipush        8
     565: iconst_0
     566: bastore
     567: aastore
     568: dup
     569: iconst_3
     570: bipush        9
     572: newarray       boolean
     574: dup
     575: iconst_0
     576: iconst_0
     577: bastore
     578: dup
     579: iconst_1
     580: iconst_0
     581: bastore
     582: dup
     583: iconst_2
     584: iconst_0
     585: bastore
     586: dup
     587: iconst_3
     588: iconst_1
     589: bastore
     590: dup
     591: iconst_4
     592: iconst_0
     593: bastore
     594: dup
     595: iconst_5
     596: iconst_0
     597: bastore
     598: dup
     599: bipush        6
     601: iconst_0
     602: bastore
     603: dup
     604: bipush        7
     606: iconst_0
     607: bastore
     608: dup
     609: bipush        8
     611: iconst_0
     612: bastore
     613: aastore
     614: dup
     615: iconst_4
     616: bipush        9
     618: newarray       boolean
     620: dup
     621: iconst_0
     622: iconst_0
     623: bastore
     624: dup
     625: iconst_1
     626: iconst_0
     627: bastore
     628: dup
     629: iconst_2
     630: iconst_0
     631: bastore
     632: dup
     633: iconst_3
     634: iconst_0
     635: bastore
     636: dup
     637: iconst_4
     638: iconst_1
     639: bastore
     640: dup
     641: iconst_5
     642: iconst_0
     643: bastore
     644: dup
     645: bipush        6
     647: iconst_0
     648: bastore
     649: dup
     650: bipush        7
     652: iconst_0
     653: bastore
     654: dup
     655: bipush        8
     657: iconst_0
     658: bastore
     659: aastore
     660: dup
     661: iconst_5
     662: bipush        9
     664: newarray       boolean
     666: dup
     667: iconst_0
     668: iconst_0
     669: bastore
     670: dup
     671: iconst_1
     672: iconst_0
     673: bastore
     674: dup
     675: iconst_2
     676: iconst_0
     677: bastore
     678: dup
     679: iconst_3
     680: iconst_0
     681: bastore
     682: dup
     683: iconst_4
     684: iconst_0
     685: bastore
     686: dup
     687: iconst_5
     688: iconst_1
     689: bastore
     690: dup
     691: bipush        6
     693: iconst_0
     694: bastore
     695: dup
     696: bipush        7
     698: iconst_0
     699: bastore
     700: dup
     701: bipush        8
     703: iconst_0
     704: bastore
     705: aastore
     706: dup
     707: bipush        6
     709: bipush        9
     711: newarray       boolean
     713: dup
     714: iconst_0
     715: iconst_0
     716: bastore
     717: dup
     718: iconst_1
     719: iconst_0
     720: bastore
     721: dup
     722: iconst_2
     723: iconst_0
     724: bastore
     725: dup
     726: iconst_3
     727: iconst_0
     728: bastore
     729: dup
     730: iconst_4
     731: iconst_1
     732: bastore
     733: dup
     734: iconst_5
     735: iconst_0
     736: bastore
     737: dup
     738: bipush        6
     740: iconst_1
     741: bastore
     742: dup
     743: bipush        7
     745: iconst_0
     746: bastore
     747: dup
     748: bipush        8
     750: iconst_0
     751: bastore
     752: aastore
     753: dup
     754: bipush        7
     756: bipush        9
     758: newarray       boolean
     760: dup
     761: iconst_0
     762: iconst_0
     763: bastore
     764: dup
     765: iconst_1
     766: iconst_0
     767: bastore
     768: dup
     769: iconst_2
     770: iconst_0
     771: bastore
     772: dup
     773: iconst_3
     774: iconst_0
     775: bastore
     776: dup
     777: iconst_4
     778: iconst_0
     779: bastore
     780: dup
     781: iconst_5
     782: iconst_0
     783: bastore
     784: dup
     785: bipush        6
     787: iconst_0
     788: bastore
     789: dup
     790: bipush        7
     792: iconst_1
     793: bastore
     794: dup
     795: bipush        8
     797: iconst_0
     798: bastore
     799: aastore
     800: dup
     801: bipush        8
     803: bipush        9
     805: newarray       boolean
     807: dup
     808: iconst_0
     809: iconst_0
     810: bastore
     811: dup
     812: iconst_1
     813: iconst_0
     814: bastore
     815: dup
     816: iconst_2
     817: iconst_0
     818: bastore
     819: dup
     820: iconst_3
     821: iconst_0
     822: bastore
     823: dup
     824: iconst_4
     825: iconst_0
     826: bastore
     827: dup
     828: iconst_5
     829: iconst_0
     830: bastore
     831: dup
     832: bipush        6
     834: iconst_0
     835: bastore
     836: dup
     837: bipush        7
     839: iconst_0
     840: bastore
     841: dup
     842: bipush        8
     844: iconst_1
     845: bastore
     846: aastore
     847: putstatic     #24                 // Field noConvertTable:[[Z
     850: return
}
