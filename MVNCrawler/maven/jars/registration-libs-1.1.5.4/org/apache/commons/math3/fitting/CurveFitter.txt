Compiled from "CurveFitter.java"
public class org.apache.commons.math3.fitting.CurveFitter<T extends org.apache.commons.math3.analysis.ParametricUnivariateFunction> {
  private final org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer optimizer;

  private final java.util.List<org.apache.commons.math3.fitting.WeightedObservedPoint> observations;

  public org.apache.commons.math3.fitting.CurveFitter(org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field optimizer:Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;
       9: aload_0
      10: new           #4                  // class java/util/ArrayList
      13: dup
      14: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      17: putfield      #1                  // Field observations:Ljava/util/List;
      20: return

  public void addObservedPoint(double, double);
    Code:
       0: aload_0
       1: dconst_1
       2: dload_1
       3: dload_3
       4: invokevirtual #6                  // Method addObservedPoint:(DDD)V
       7: return

  public void addObservedPoint(double, double, double);
    Code:
       0: aload_0
       1: getfield      #1                  // Field observations:Ljava/util/List;
       4: new           #7                  // class org/apache/commons/math3/fitting/WeightedObservedPoint
       7: dup
       8: dload_1
       9: dload_3
      10: dload         5
      12: invokespecial #8                  // Method org/apache/commons/math3/fitting/WeightedObservedPoint."<init>":(DDD)V
      15: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      20: pop
      21: return

  public void addObservedPoint(org.apache.commons.math3.fitting.WeightedObservedPoint);
    Code:
       0: aload_0
       1: getfield      #1                  // Field observations:Ljava/util/List;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public org.apache.commons.math3.fitting.WeightedObservedPoint[] getObservations();
    Code:
       0: aload_0
       1: getfield      #1                  // Field observations:Ljava/util/List;
       4: aload_0
       5: getfield      #1                  // Field observations:Ljava/util/List;
       8: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      13: anewarray     #7                  // class org/apache/commons/math3/fitting/WeightedObservedPoint
      16: invokeinterface #11,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      21: checkcast     #12                 // class "[Lorg/apache/commons/math3/fitting/WeightedObservedPoint;"
      24: areturn

  public void clearObservations();
    Code:
       0: aload_0
       1: getfield      #1                  // Field observations:Ljava/util/List;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/List.clear:()V
       9: return

  public double[] fit(T, double[]);
    Code:
       0: aload_0
       1: ldc           #14                 // int 2147483647
       3: aload_1
       4: aload_2
       5: invokevirtual #15                 // Method fit:(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D
       8: areturn

  public double[] fit(int, T, double[]);
    Code:
       0: aload_0
       1: getfield      #1                  // Field observations:Ljava/util/List;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
       9: newarray       double
      11: astore        4
      13: aload_0
      14: getfield      #1                  // Field observations:Ljava/util/List;
      17: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      22: newarray       double
      24: astore        5
      26: iconst_0
      27: istore        6
      29: aload_0
      30: getfield      #1                  // Field observations:Ljava/util/List;
      33: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      38: astore        7
      40: aload         7
      42: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          88
      50: aload         7
      52: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #7                  // class org/apache/commons/math3/fitting/WeightedObservedPoint
      60: astore        8
      62: aload         4
      64: iload         6
      66: aload         8
      68: invokevirtual #19                 // Method org/apache/commons/math3/fitting/WeightedObservedPoint.getY:()D
      71: dastore
      72: aload         5
      74: iload         6
      76: aload         8
      78: invokevirtual #20                 // Method org/apache/commons/math3/fitting/WeightedObservedPoint.getWeight:()D
      81: dastore
      82: iinc          6, 1
      85: goto          40
      88: new           #21                 // class org/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction
      91: dup
      92: aload_0
      93: aload_2
      94: invokespecial #22                 // Method org/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction."<init>":(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V
      97: astore        7
      99: aload_0
     100: getfield      #3                  // Field optimizer:Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;
     103: bipush        6
     105: anewarray     #23                 // class org/apache/commons/math3/optim/OptimizationData
     108: dup
     109: iconst_0
     110: new           #24                 // class org/apache/commons/math3/optim/MaxEval
     113: dup
     114: iload_1
     115: invokespecial #25                 // Method org/apache/commons/math3/optim/MaxEval."<init>":(I)V
     118: aastore
     119: dup
     120: iconst_1
     121: aload         7
     123: invokevirtual #26                 // Method org/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction.getModelFunction:()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction;
     126: aastore
     127: dup
     128: iconst_2
     129: aload         7
     131: invokevirtual #27                 // Method org/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction.getModelFunctionJacobian:()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian;
     134: aastore
     135: dup
     136: iconst_3
     137: new           #28                 // class org/apache/commons/math3/optim/nonlinear/vector/Target
     140: dup
     141: aload         4
     143: invokespecial #29                 // Method org/apache/commons/math3/optim/nonlinear/vector/Target."<init>":([D)V
     146: aastore
     147: dup
     148: iconst_4
     149: new           #30                 // class org/apache/commons/math3/optim/nonlinear/vector/Weight
     152: dup
     153: aload         5
     155: invokespecial #31                 // Method org/apache/commons/math3/optim/nonlinear/vector/Weight."<init>":([D)V
     158: aastore
     159: dup
     160: iconst_5
     161: new           #32                 // class org/apache/commons/math3/optim/InitialGuess
     164: dup
     165: aload_3
     166: invokespecial #33                 // Method org/apache/commons/math3/optim/InitialGuess."<init>":([D)V
     169: aastore
     170: invokevirtual #34                 // Method org/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer.optimize:([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;
     173: astore        8
     175: aload         8
     177: invokevirtual #35                 // Method org/apache/commons/math3/optim/PointVectorValuePair.getPointRef:()[D
     180: areturn

  static java.util.List access$000(org.apache.commons.math3.fitting.CurveFitter);
    Code:
       0: aload_0
       1: getfield      #1                  // Field observations:Ljava/util/List;
       4: areturn
}
