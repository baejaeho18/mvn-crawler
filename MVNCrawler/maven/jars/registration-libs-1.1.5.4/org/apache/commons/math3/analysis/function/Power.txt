Compiled from "Power.java"
public class org.apache.commons.math3.analysis.function.Power implements org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction,org.apache.commons.math3.analysis.DifferentiableUnivariateFunction {
  private final double p;

  public org.apache.commons.math3.analysis.function.Power(double);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: dload_1
       6: putfield      #2                  // Field p:D
       9: return

  public double value(double);
    Code:
       0: dload_1
       1: aload_0
       2: getfield      #2                  // Field p:D
       5: invokestatic  #3                  // Method org/apache/commons/math3/util/FastMath.pow:(DD)D
       8: dreturn

  public org.apache.commons.math3.analysis.UnivariateFunction derivative();
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method org/apache/commons/math3/analysis/FunctionUtils.toDifferentiableUnivariateFunction:(Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;)Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
       4: invokeinterface #5,  1            // InterfaceMethod org/apache/commons/math3/analysis/DifferentiableUnivariateFunction.derivative:()Lorg/apache/commons/math3/analysis/UnivariateFunction;
       9: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field p:D
       5: invokevirtual #6                  // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.pow:(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
       8: areturn
}
