Compiled from "IterationManager.java"
public class org.apache.commons.math3.util.IterationManager {
  private org.apache.commons.math3.util.IntegerSequence$Incrementor iterations;

  private final java.util.Collection<org.apache.commons.math3.util.IterationListener> listeners;

  public org.apache.commons.math3.util.IterationManager(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/commons/math3/util/IntegerSequence$Incrementor.create:()Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
       8: iload_1
       9: invokevirtual #3                  // Method org/apache/commons/math3/util/IntegerSequence$Incrementor.withMaximalCount:(I)Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
      12: putfield      #4                  // Field iterations:Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/CopyOnWriteArrayList
      19: dup
      20: invokespecial #6                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      23: putfield      #7                  // Field listeners:Ljava/util/Collection;
      26: return

  public org.apache.commons.math3.util.IterationManager(int, org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback);
    Code:
       0: aload_0
       1: iload_1
       2: new           #8                  // class org/apache/commons/math3/util/IterationManager$1
       5: dup
       6: aload_2
       7: invokespecial #9                  // Method org/apache/commons/math3/util/IterationManager$1."<init>":(Lorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V
      10: invokespecial #10                 // Method "<init>":(ILorg/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback;)V
      13: return

  public org.apache.commons.math3.util.IterationManager(int, org.apache.commons.math3.util.IntegerSequence$Incrementor$MaxCountExceededCallback);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/commons/math3/util/IntegerSequence$Incrementor.create:()Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
       8: iload_1
       9: invokevirtual #3                  // Method org/apache/commons/math3/util/IntegerSequence$Incrementor.withMaximalCount:(I)Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
      12: aload_2
      13: invokevirtual #11                 // Method org/apache/commons/math3/util/IntegerSequence$Incrementor.withCallback:(Lorg/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback;)Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
      16: putfield      #4                  // Field iterations:Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
      19: aload_0
      20: new           #5                  // class java/util/concurrent/CopyOnWriteArrayList
      23: dup
      24: invokespecial #6                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      27: putfield      #7                  // Field listeners:Ljava/util/Collection;
      30: return

  public void addIterationListener(org.apache.commons.math3.util.IterationListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listeners:Ljava/util/Collection;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void fireInitializationEvent(org.apache.commons.math3.util.IterationEvent);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listeners:Ljava/util/Collection;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_2
      20: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #16                 // class org/apache/commons/math3/util/IterationListener
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokeinterface #17,  2           // InterfaceMethod org/apache/commons/math3/util/IterationListener.initializationPerformed:(Lorg/apache/commons/math3/util/IterationEvent;)V
      36: goto          10
      39: return

  public void fireIterationPerformedEvent(org.apache.commons.math3.util.IterationEvent);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listeners:Ljava/util/Collection;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_2
      20: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #16                 // class org/apache/commons/math3/util/IterationListener
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/math3/util/IterationListener.iterationPerformed:(Lorg/apache/commons/math3/util/IterationEvent;)V
      36: goto          10
      39: return

  public void fireIterationStartedEvent(org.apache.commons.math3.util.IterationEvent);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listeners:Ljava/util/Collection;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_2
      20: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #16                 // class org/apache/commons/math3/util/IterationListener
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokeinterface #19,  2           // InterfaceMethod org/apache/commons/math3/util/IterationListener.iterationStarted:(Lorg/apache/commons/math3/util/IterationEvent;)V
      36: goto          10
      39: return

  public void fireTerminationEvent(org.apache.commons.math3.util.IterationEvent);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listeners:Ljava/util/Collection;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_2
      20: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #16                 // class org/apache/commons/math3/util/IterationListener
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokeinterface #20,  2           // InterfaceMethod org/apache/commons/math3/util/IterationListener.terminationPerformed:(Lorg/apache/commons/math3/util/IterationEvent;)V
      36: goto          10
      39: return

  public int getIterations();
    Code:
       0: aload_0
       1: getfield      #4                  // Field iterations:Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
       4: invokevirtual #21                 // Method org/apache/commons/math3/util/IntegerSequence$Incrementor.getCount:()I
       7: ireturn

  public int getMaxIterations();
    Code:
       0: aload_0
       1: getfield      #4                  // Field iterations:Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
       4: invokevirtual #22                 // Method org/apache/commons/math3/util/IntegerSequence$Incrementor.getMaximalCount:()I
       7: ireturn

  public void incrementIterationCount() throws org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field iterations:Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
       4: invokevirtual #23                 // Method org/apache/commons/math3/util/IntegerSequence$Incrementor.increment:()V
       7: return

  public void removeIterationListener(org.apache.commons.math3.util.IterationListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listeners:Ljava/util/Collection;
       4: aload_1
       5: invokeinterface #24,  2           // InterfaceMethod java/util/Collection.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void resetIterationCount();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field iterations:Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
       5: iconst_0
       6: invokevirtual #25                 // Method org/apache/commons/math3/util/IntegerSequence$Incrementor.withStart:(I)Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
       9: putfield      #4                  // Field iterations:Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
      12: return
}
