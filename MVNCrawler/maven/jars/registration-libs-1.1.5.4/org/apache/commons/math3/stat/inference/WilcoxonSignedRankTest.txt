Compiled from "WilcoxonSignedRankTest.java"
public class org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest {
  private org.apache.commons.math3.stat.ranking.NaturalRanking naturalRanking;

  public org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/commons/math3/stat/ranking/NaturalRanking
       8: dup
       9: getstatic     #3                  // Field org/apache/commons/math3/stat/ranking/NaNStrategy.FIXED:Lorg/apache/commons/math3/stat/ranking/NaNStrategy;
      12: getstatic     #4                  // Field org/apache/commons/math3/stat/ranking/TiesStrategy.AVERAGE:Lorg/apache/commons/math3/stat/ranking/TiesStrategy;
      15: invokespecial #5                  // Method org/apache/commons/math3/stat/ranking/NaturalRanking."<init>":(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/stat/ranking/TiesStrategy;)V
      18: putfield      #6                  // Field naturalRanking:Lorg/apache/commons/math3/stat/ranking/NaturalRanking;
      21: return

  public org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest(org.apache.commons.math3.stat.ranking.NaNStrategy, org.apache.commons.math3.stat.ranking.TiesStrategy);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/commons/math3/stat/ranking/NaturalRanking
       8: dup
       9: aload_1
      10: aload_2
      11: invokespecial #5                  // Method org/apache/commons/math3/stat/ranking/NaturalRanking."<init>":(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/stat/ranking/TiesStrategy;)V
      14: putfield      #6                  // Field naturalRanking:Lorg/apache/commons/math3/stat/ranking/NaturalRanking;
      17: return

  private void ensureDataConformance(double[], double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_2
       5: ifnonnull     16
       8: new           #7                  // class org/apache/commons/math3/exception/NullArgumentException
      11: dup
      12: invokespecial #8                  // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      15: athrow
      16: aload_1
      17: arraylength
      18: ifeq          26
      21: aload_2
      22: arraylength
      23: ifne          34
      26: new           #9                  // class org/apache/commons/math3/exception/NoDataException
      29: dup
      30: invokespecial #10                 // Method org/apache/commons/math3/exception/NoDataException."<init>":()V
      33: athrow
      34: aload_2
      35: arraylength
      36: aload_1
      37: arraylength
      38: if_icmpeq     53
      41: new           #11                 // class org/apache/commons/math3/exception/DimensionMismatchException
      44: dup
      45: aload_2
      46: arraylength
      47: aload_1
      48: arraylength
      49: invokespecial #12                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      52: athrow
      53: return

  private double[] calculateDifferences(double[], double[]);
    Code:
       0: aload_1
       1: arraylength
       2: newarray       double
       4: astore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: aload_1
      11: arraylength
      12: if_icmpge     34
      15: aload_3
      16: iload         4
      18: aload_2
      19: iload         4
      21: daload
      22: aload_1
      23: iload         4
      25: daload
      26: dsub
      27: dastore
      28: iinc          4, 1
      31: goto          8
      34: aload_3
      35: areturn

  private double[] calculateAbsoluteDifferences(double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #7                  // class org/apache/commons/math3/exception/NullArgumentException
       7: dup
       8: invokespecial #8                  // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      11: athrow
      12: aload_1
      13: arraylength
      14: ifne          25
      17: new           #9                  // class org/apache/commons/math3/exception/NoDataException
      20: dup
      21: invokespecial #10                 // Method org/apache/commons/math3/exception/NoDataException."<init>":()V
      24: athrow
      25: aload_1
      26: arraylength
      27: newarray       double
      29: astore_2
      30: iconst_0
      31: istore_3
      32: iload_3
      33: aload_1
      34: arraylength
      35: if_icmpge     53
      38: aload_2
      39: iload_3
      40: aload_1
      41: iload_3
      42: daload
      43: invokestatic  #13                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      46: dastore
      47: iinc          3, 1
      50: goto          32
      53: aload_2
      54: areturn

  public double wilcoxonSignedRank(double[], double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #14                 // Method ensureDataConformance:([D[D)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokespecial #15                 // Method calculateDifferences:([D[D)[D
      12: astore_3
      13: aload_0
      14: aload_3
      15: invokespecial #16                 // Method calculateAbsoluteDifferences:([D)[D
      18: astore        4
      20: aload_0
      21: getfield      #6                  // Field naturalRanking:Lorg/apache/commons/math3/stat/ranking/NaturalRanking;
      24: aload         4
      26: invokevirtual #17                 // Method org/apache/commons/math3/stat/ranking/NaturalRanking.rank:([D)[D
      29: astore        5
      31: dconst_0
      32: dstore        6
      34: iconst_0
      35: istore        8
      37: iload         8
      39: aload_3
      40: arraylength
      41: if_icmpge     69
      44: aload_3
      45: iload         8
      47: daload
      48: dconst_0
      49: dcmpl
      50: ifle          63
      53: dload         6
      55: aload         5
      57: iload         8
      59: daload
      60: dadd
      61: dstore        6
      63: iinc          8, 1
      66: goto          37
      69: aload_1
      70: arraylength
      71: istore        8
      73: iload         8
      75: iload         8
      77: iconst_1
      78: iadd
      79: imul
      80: i2d
      81: ldc2_w        #18                 // double 2.0d
      84: ddiv
      85: dload         6
      87: dsub
      88: dstore        9
      90: dload         6
      92: dload         9
      94: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.max:(DD)D
      97: dreturn

  private double calculateExactPValue(double, int);
    Code:
       0: iconst_1
       1: iload_3
       2: ishl
       3: istore        4
       5: iconst_0
       6: istore        5
       8: iconst_0
       9: istore        6
      11: iload         6
      13: iload         4
      15: if_icmpge     73
      18: iconst_0
      19: istore        7
      21: iconst_0
      22: istore        8
      24: iload         8
      26: iload_3
      27: if_icmpge     56
      30: iload         6
      32: iload         8
      34: ishr
      35: iconst_1
      36: iand
      37: iconst_1
      38: if_icmpne     50
      41: iload         7
      43: iload         8
      45: iconst_1
      46: iadd
      47: iadd
      48: istore        7
      50: iinc          8, 1
      53: goto          24
      56: iload         7
      58: i2d
      59: dload_1
      60: dcmpl
      61: iflt          67
      64: iinc          5, 1
      67: iinc          6, 1
      70: goto          11
      73: ldc2_w        #18                 // double 2.0d
      76: iload         5
      78: i2d
      79: dmul
      80: iload         4
      82: i2d
      83: ddiv
      84: dreturn

  private double calculateAsymptoticPValue(double, int);
    Code:
       0: iload_3
       1: iload_3
       2: iconst_1
       3: iadd
       4: imul
       5: i2d
       6: ldc2_w        #21                 // double 4.0d
       9: ddiv
      10: dstore        4
      12: dload         4
      14: iconst_2
      15: iload_3
      16: imul
      17: iconst_1
      18: iadd
      19: i2d
      20: ldc2_w        #23                 // double 6.0d
      23: ddiv
      24: dmul
      25: dstore        6
      27: dload_1
      28: dload         4
      30: dsub
      31: ldc2_w        #25                 // double 0.5d
      34: dsub
      35: dload         6
      37: invokestatic  #27                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      40: ddiv
      41: dstore        8
      43: new           #28                 // class org/apache/commons/math3/distribution/NormalDistribution
      46: dup
      47: aconst_null
      48: dconst_0
      49: dconst_1
      50: invokespecial #29                 // Method org/apache/commons/math3/distribution/NormalDistribution."<init>":(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
      53: astore        10
      55: ldc2_w        #18                 // double 2.0d
      58: aload         10
      60: dload         8
      62: invokevirtual #30                 // Method org/apache/commons/math3/distribution/NormalDistribution.cumulativeProbability:(D)D
      65: dmul
      66: dreturn

  public double wilcoxonSignedRankTest(double[], double[], boolean) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NumberIsTooLargeException, org.apache.commons.math3.exception.ConvergenceException, org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #14                 // Method ensureDataConformance:([D[D)V
       6: aload_1
       7: arraylength
       8: istore        4
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokevirtual #31                 // Method wilcoxonSignedRank:([D[D)D
      16: dstore        5
      18: iload_3
      19: ifeq          48
      22: iload         4
      24: bipush        30
      26: if_icmple     48
      29: new           #32                 // class org/apache/commons/math3/exception/NumberIsTooLargeException
      32: dup
      33: iload         4
      35: invokestatic  #33                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: bipush        30
      40: invokestatic  #33                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      43: iconst_1
      44: invokespecial #34                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
      47: athrow
      48: iload_3
      49: ifeq          61
      52: aload_0
      53: dload         5
      55: iload         4
      57: invokespecial #35                 // Method calculateExactPValue:(DI)D
      60: dreturn
      61: iload         4
      63: iload         4
      65: iconst_1
      66: iadd
      67: imul
      68: i2d
      69: ldc2_w        #18                 // double 2.0d
      72: ddiv
      73: dload         5
      75: dsub
      76: dstore        7
      78: aload_0
      79: dload         7
      81: iload         4
      83: invokespecial #36                 // Method calculateAsymptoticPValue:(DI)D
      86: dreturn
}
