Compiled from "BoundaryProjection.java"
public class org.apache.commons.math3.geometry.partitioning.BoundaryProjection<S extends org.apache.commons.math3.geometry.Space> {
  private final org.apache.commons.math3.geometry.Point<S> original;

  private final org.apache.commons.math3.geometry.Point<S> projected;

  private final double offset;

  public org.apache.commons.math3.geometry.partitioning.BoundaryProjection(org.apache.commons.math3.geometry.Point<S>, org.apache.commons.math3.geometry.Point<S>, double);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field original:Lorg/apache/commons/math3/geometry/Point;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field projected:Lorg/apache/commons/math3/geometry/Point;
      14: aload_0
      15: dload_3
      16: putfield      #4                  // Field offset:D
      19: return

  public org.apache.commons.math3.geometry.Point<S> getOriginal();
    Code:
       0: aload_0
       1: getfield      #2                  // Field original:Lorg/apache/commons/math3/geometry/Point;
       4: areturn

  public org.apache.commons.math3.geometry.Point<S> getProjected();
    Code:
       0: aload_0
       1: getfield      #3                  // Field projected:Lorg/apache/commons/math3/geometry/Point;
       4: areturn

  public double getOffset();
    Code:
       0: aload_0
       1: getfield      #4                  // Field offset:D
       4: dreturn
}
