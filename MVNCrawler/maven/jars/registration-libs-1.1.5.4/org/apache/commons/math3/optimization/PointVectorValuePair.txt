Compiled from "PointVectorValuePair.java"
public class org.apache.commons.math3.optimization.PointVectorValuePair extends org.apache.commons.math3.util.Pair<double[], double[]> implements java.io.Serializable {
  private static final long serialVersionUID;

  public org.apache.commons.math3.optimization.PointVectorValuePair(double[], double[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #1                  // Method "<init>":([D[DZ)V
       7: return

  public org.apache.commons.math3.optimization.PointVectorValuePair(double[], double[], boolean);
    Code:
       0: aload_0
       1: iload_3
       2: ifeq          23
       5: aload_1
       6: ifnonnull     13
       9: aconst_null
      10: goto          24
      13: aload_1
      14: invokevirtual #2                  // Method "[D".clone:()Ljava/lang/Object;
      17: checkcast     #3                  // class "[D"
      20: goto          24
      23: aload_1
      24: iload_3
      25: ifeq          46
      28: aload_2
      29: ifnonnull     36
      32: aconst_null
      33: goto          47
      36: aload_2
      37: invokevirtual #4                  // Method "[D".clone:()Ljava/lang/Object;
      40: checkcast     #3                  // class "[D"
      43: goto          47
      46: aload_2
      47: invokespecial #5                  // Method org/apache/commons/math3/util/Pair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      50: return

  public double[] getPoint();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getKey:()Ljava/lang/Object;
       4: checkcast     #3                  // class "[D"
       7: astore_1
       8: aload_1
       9: ifnonnull     16
      12: aconst_null
      13: goto          23
      16: aload_1
      17: invokevirtual #7                  // Method "[D".clone:()Ljava/lang/Object;
      20: checkcast     #3                  // class "[D"
      23: areturn

  public double[] getPointRef();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getKey:()Ljava/lang/Object;
       4: checkcast     #3                  // class "[D"
       7: areturn

  public double[] getValue();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method org/apache/commons/math3/util/Pair.getValue:()Ljava/lang/Object;
       4: checkcast     #3                  // class "[D"
       7: astore_1
       8: aload_1
       9: ifnonnull     16
      12: aconst_null
      13: goto          23
      16: aload_1
      17: invokevirtual #9                  // Method "[D".clone:()Ljava/lang/Object;
      20: checkcast     #3                  // class "[D"
      23: areturn

  public double[] getValueRef();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method org/apache/commons/math3/util/Pair.getValue:()Ljava/lang/Object;
       4: checkcast     #3                  // class "[D"
       7: areturn

  private java.lang.Object writeReplace();
    Code:
       0: new           #10                 // class org/apache/commons/math3/optimization/PointVectorValuePair$DataTransferObject
       3: dup
       4: aload_0
       5: invokevirtual #6                  // Method getKey:()Ljava/lang/Object;
       8: checkcast     #3                  // class "[D"
      11: aload_0
      12: invokevirtual #11                 // Method getValue:()[D
      15: invokespecial #12                 // Method org/apache/commons/math3/optimization/PointVectorValuePair$DataTransferObject."<init>":([D[D)V
      18: areturn

  public java.lang.Object getValue();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getValue:()[D
       4: areturn
}
