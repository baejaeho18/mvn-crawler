Compiled from "AkimaSplineInterpolator.java"
public class org.apache.commons.math3.analysis.interpolation.AkimaSplineInterpolator implements org.apache.commons.math3.analysis.interpolation.UnivariateInterpolator {
  private static final int MINIMUM_NUMBER_POINTS;

  public org.apache.commons.math3.analysis.interpolation.AkimaSplineInterpolator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction interpolate(double[], double[]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.NonMonotonicSequenceException;
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_2
       5: ifnonnull     16
       8: new           #2                  // class org/apache/commons/math3/exception/NullArgumentException
      11: dup
      12: invokespecial #3                  // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      15: athrow
      16: aload_1
      17: arraylength
      18: aload_2
      19: arraylength
      20: if_icmpeq     35
      23: new           #4                  // class org/apache/commons/math3/exception/DimensionMismatchException
      26: dup
      27: aload_1
      28: arraylength
      29: aload_2
      30: arraylength
      31: invokespecial #5                  // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      34: athrow
      35: aload_1
      36: arraylength
      37: iconst_5
      38: if_icmpge     62
      41: new           #6                  // class org/apache/commons/math3/exception/NumberIsTooSmallException
      44: dup
      45: getstatic     #7                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.NUMBER_OF_POINTS:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      48: aload_1
      49: arraylength
      50: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      53: iconst_5
      54: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      57: iconst_1
      58: invokespecial #9                  // Method org/apache/commons/math3/exception/NumberIsTooSmallException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      61: athrow
      62: aload_1
      63: invokestatic  #10                 // Method org/apache/commons/math3/util/MathArrays.checkOrder:([D)V
      66: aload_1
      67: arraylength
      68: iconst_1
      69: isub
      70: istore_3
      71: iload_3
      72: newarray       double
      74: astore        4
      76: iload_3
      77: newarray       double
      79: astore        5
      81: iconst_0
      82: istore        6
      84: iload         6
      86: aload         4
      88: arraylength
      89: if_icmpge     126
      92: aload         4
      94: iload         6
      96: aload_2
      97: iload         6
      99: iconst_1
     100: iadd
     101: daload
     102: aload_2
     103: iload         6
     105: daload
     106: dsub
     107: aload_1
     108: iload         6
     110: iconst_1
     111: iadd
     112: daload
     113: aload_1
     114: iload         6
     116: daload
     117: dsub
     118: ddiv
     119: dastore
     120: iinc          6, 1
     123: goto          84
     126: iconst_1
     127: istore        6
     129: iload         6
     131: aload         5
     133: arraylength
     134: if_icmpge     164
     137: aload         5
     139: iload         6
     141: aload         4
     143: iload         6
     145: daload
     146: aload         4
     148: iload         6
     150: iconst_1
     151: isub
     152: daload
     153: dsub
     154: invokestatic  #11                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
     157: dastore
     158: iinc          6, 1
     161: goto          129
     164: aload_1
     165: arraylength
     166: newarray       double
     168: astore        6
     170: iconst_2
     171: istore        7
     173: iload         7
     175: aload         6
     177: arraylength
     178: iconst_2
     179: isub
     180: if_icmpge     316
     183: aload         5
     185: iload         7
     187: iconst_1
     188: iadd
     189: daload
     190: dstore        8
     192: aload         5
     194: iload         7
     196: iconst_1
     197: isub
     198: daload
     199: dstore        10
     201: dload         8
     203: dconst_0
     204: invokestatic  #12                 // Method org/apache/commons/math3/util/Precision.equals:(DD)Z
     207: ifeq          280
     210: dload         10
     212: dconst_0
     213: invokestatic  #12                 // Method org/apache/commons/math3/util/Precision.equals:(DD)Z
     216: ifeq          280
     219: aload_1
     220: iload         7
     222: daload
     223: dstore        12
     225: aload_1
     226: iload         7
     228: iconst_1
     229: iadd
     230: daload
     231: dstore        14
     233: aload_1
     234: iload         7
     236: iconst_1
     237: isub
     238: daload
     239: dstore        16
     241: aload         6
     243: iload         7
     245: dload         14
     247: dload         12
     249: dsub
     250: aload         4
     252: iload         7
     254: iconst_1
     255: isub
     256: daload
     257: dmul
     258: dload         12
     260: dload         16
     262: dsub
     263: aload         4
     265: iload         7
     267: daload
     268: dmul
     269: dadd
     270: dload         14
     272: dload         16
     274: dsub
     275: ddiv
     276: dastore
     277: goto          310
     280: aload         6
     282: iload         7
     284: dload         8
     286: aload         4
     288: iload         7
     290: iconst_1
     291: isub
     292: daload
     293: dmul
     294: dload         10
     296: aload         4
     298: iload         7
     300: daload
     301: dmul
     302: dadd
     303: dload         8
     305: dload         10
     307: dadd
     308: ddiv
     309: dastore
     310: iinc          7, 1
     313: goto          173
     316: aload         6
     318: iconst_0
     319: aload_0
     320: aload_1
     321: aload_2
     322: iconst_0
     323: iconst_0
     324: iconst_1
     325: iconst_2
     326: invokespecial #13                 // Method differentiateThreePoint:([D[DIIII)D
     329: dastore
     330: aload         6
     332: iconst_1
     333: aload_0
     334: aload_1
     335: aload_2
     336: iconst_1
     337: iconst_0
     338: iconst_1
     339: iconst_2
     340: invokespecial #13                 // Method differentiateThreePoint:([D[DIIII)D
     343: dastore
     344: aload         6
     346: aload_1
     347: arraylength
     348: iconst_2
     349: isub
     350: aload_0
     351: aload_1
     352: aload_2
     353: aload_1
     354: arraylength
     355: iconst_2
     356: isub
     357: aload_1
     358: arraylength
     359: iconst_3
     360: isub
     361: aload_1
     362: arraylength
     363: iconst_2
     364: isub
     365: aload_1
     366: arraylength
     367: iconst_1
     368: isub
     369: invokespecial #13                 // Method differentiateThreePoint:([D[DIIII)D
     372: dastore
     373: aload         6
     375: aload_1
     376: arraylength
     377: iconst_1
     378: isub
     379: aload_0
     380: aload_1
     381: aload_2
     382: aload_1
     383: arraylength
     384: iconst_1
     385: isub
     386: aload_1
     387: arraylength
     388: iconst_3
     389: isub
     390: aload_1
     391: arraylength
     392: iconst_2
     393: isub
     394: aload_1
     395: arraylength
     396: iconst_1
     397: isub
     398: invokespecial #13                 // Method differentiateThreePoint:([D[DIIII)D
     401: dastore
     402: aload_0
     403: aload_1
     404: aload_2
     405: aload         6
     407: invokespecial #14                 // Method interpolateHermiteSorted:([D[D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction;
     410: areturn

  private double differentiateThreePoint(double[], double[], int, int, int, int);
    Code:
       0: aload_2
       1: iload         4
       3: daload
       4: dstore        7
       6: aload_2
       7: iload         5
       9: daload
      10: dstore        9
      12: aload_2
      13: iload         6
      15: daload
      16: dstore        11
      18: aload_1
      19: iload_3
      20: daload
      21: aload_1
      22: iload         4
      24: daload
      25: dsub
      26: dstore        13
      28: aload_1
      29: iload         5
      31: daload
      32: aload_1
      33: iload         4
      35: daload
      36: dsub
      37: dstore        15
      39: aload_1
      40: iload         6
      42: daload
      43: aload_1
      44: iload         4
      46: daload
      47: dsub
      48: dstore        17
      50: dload         11
      52: dload         7
      54: dsub
      55: dload         17
      57: dload         15
      59: ddiv
      60: dload         9
      62: dload         7
      64: dsub
      65: dmul
      66: dsub
      67: dload         17
      69: dload         17
      71: dmul
      72: dload         15
      74: dload         17
      76: dmul
      77: dsub
      78: ddiv
      79: dstore        19
      81: dload         9
      83: dload         7
      85: dsub
      86: dload         19
      88: dload         15
      90: dmul
      91: dload         15
      93: dmul
      94: dsub
      95: dload         15
      97: ddiv
      98: dstore        21
     100: ldc2_w        #15                 // double 2.0d
     103: dload         19
     105: dmul
     106: dload         13
     108: dmul
     109: dload         21
     111: dadd
     112: dreturn

  private org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction interpolateHermiteSorted(double[], double[], double[]);
    Code:
       0: aload_1
       1: arraylength
       2: aload_2
       3: arraylength
       4: if_icmpeq     19
       7: new           #4                  // class org/apache/commons/math3/exception/DimensionMismatchException
      10: dup
      11: aload_1
      12: arraylength
      13: aload_2
      14: arraylength
      15: invokespecial #5                  // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      18: athrow
      19: aload_1
      20: arraylength
      21: aload_3
      22: arraylength
      23: if_icmpeq     38
      26: new           #4                  // class org/apache/commons/math3/exception/DimensionMismatchException
      29: dup
      30: aload_1
      31: arraylength
      32: aload_3
      33: arraylength
      34: invokespecial #5                  // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      37: athrow
      38: iconst_2
      39: istore        4
      41: aload_1
      42: arraylength
      43: iconst_2
      44: if_icmpge     68
      47: new           #6                  // class org/apache/commons/math3/exception/NumberIsTooSmallException
      50: dup
      51: getstatic     #7                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.NUMBER_OF_POINTS:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      54: aload_1
      55: arraylength
      56: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      59: iconst_2
      60: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      63: iconst_1
      64: invokespecial #9                  // Method org/apache/commons/math3/exception/NumberIsTooSmallException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      67: athrow
      68: aload_1
      69: arraylength
      70: iconst_1
      71: isub
      72: istore        5
      74: iload         5
      76: anewarray     #17                 // class org/apache/commons/math3/analysis/polynomials/PolynomialFunction
      79: astore        6
      81: iconst_4
      82: newarray       double
      84: astore        7
      86: iconst_0
      87: istore        8
      89: iload         8
      91: aload         6
      93: arraylength
      94: if_icmpge     233
      97: aload_1
      98: iload         8
     100: iconst_1
     101: iadd
     102: daload
     103: aload_1
     104: iload         8
     106: daload
     107: dsub
     108: dstore        9
     110: dload         9
     112: dload         9
     114: dmul
     115: dstore        11
     117: aload_2
     118: iload         8
     120: daload
     121: dstore        13
     123: aload_2
     124: iload         8
     126: iconst_1
     127: iadd
     128: daload
     129: dstore        15
     131: aload_3
     132: iload         8
     134: daload
     135: dstore        17
     137: aload_3
     138: iload         8
     140: iconst_1
     141: iadd
     142: daload
     143: dstore        19
     145: aload         7
     147: iconst_0
     148: dload         13
     150: dastore
     151: aload         7
     153: iconst_1
     154: aload_3
     155: iload         8
     157: daload
     158: dastore
     159: aload         7
     161: iconst_2
     162: ldc2_w        #18                 // double 3.0d
     165: dload         15
     167: dload         13
     169: dsub
     170: dmul
     171: dload         9
     173: ddiv
     174: ldc2_w        #15                 // double 2.0d
     177: dload         17
     179: dmul
     180: dsub
     181: dload         19
     183: dsub
     184: dload         9
     186: ddiv
     187: dastore
     188: aload         7
     190: iconst_3
     191: ldc2_w        #15                 // double 2.0d
     194: dload         13
     196: dload         15
     198: dsub
     199: dmul
     200: dload         9
     202: ddiv
     203: dload         17
     205: dadd
     206: dload         19
     208: dadd
     209: dload         11
     211: ddiv
     212: dastore
     213: aload         6
     215: iload         8
     217: new           #17                 // class org/apache/commons/math3/analysis/polynomials/PolynomialFunction
     220: dup
     221: aload         7
     223: invokespecial #20                 // Method org/apache/commons/math3/analysis/polynomials/PolynomialFunction."<init>":([D)V
     226: aastore
     227: iinc          8, 1
     230: goto          89
     233: new           #21                 // class org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction
     236: dup
     237: aload_1
     238: aload         6
     240: invokespecial #22                 // Method org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction."<init>":([D[Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;)V
     243: areturn

  public org.apache.commons.math3.analysis.UnivariateFunction interpolate(double[], double[]) throws org.apache.commons.math3.exception.MathIllegalArgumentException, org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #23                 // Method interpolate:([D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction;
       6: areturn
}
