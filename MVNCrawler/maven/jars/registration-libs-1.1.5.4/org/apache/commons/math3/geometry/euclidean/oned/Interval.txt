Compiled from "Interval.java"
public class org.apache.commons.math3.geometry.euclidean.oned.Interval {
  private final double lower;

  private final double upper;

  public org.apache.commons.math3.geometry.euclidean.oned.Interval(double, double);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: dload_3
       5: dload_1
       6: dcmpg
       7: ifge          30
      10: new           #2                  // class org/apache/commons/math3/exception/NumberIsTooSmallException
      13: dup
      14: getstatic     #3                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.ENDPOINTS_NOT_AN_INTERVAL:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      17: dload_3
      18: invokestatic  #4                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      21: dload_1
      22: invokestatic  #4                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      25: iconst_1
      26: invokespecial #5                  // Method org/apache/commons/math3/exception/NumberIsTooSmallException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      29: athrow
      30: aload_0
      31: dload_1
      32: putfield      #6                  // Field lower:D
      35: aload_0
      36: dload_3
      37: putfield      #7                  // Field upper:D
      40: return

  public double getInf();
    Code:
       0: aload_0
       1: getfield      #6                  // Field lower:D
       4: dreturn

  public double getLower();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getInf:()D
       4: dreturn

  public double getSup();
    Code:
       0: aload_0
       1: getfield      #7                  // Field upper:D
       4: dreturn

  public double getUpper();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getSup:()D
       4: dreturn

  public double getSize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field upper:D
       4: aload_0
       5: getfield      #6                  // Field lower:D
       8: dsub
       9: dreturn

  public double getLength();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getSize:()D
       4: dreturn

  public double getBarycenter();
    Code:
       0: ldc2_w        #11                 // double 0.5d
       3: aload_0
       4: getfield      #6                  // Field lower:D
       7: aload_0
       8: getfield      #7                  // Field upper:D
      11: dadd
      12: dmul
      13: dreturn

  public double getMidPoint();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getBarycenter:()D
       4: dreturn

  public org.apache.commons.math3.geometry.partitioning.Region$Location checkPoint(double, double);
    Code:
       0: dload_1
       1: aload_0
       2: getfield      #6                  // Field lower:D
       5: dload_3
       6: dsub
       7: dcmpg
       8: iflt          22
      11: dload_1
      12: aload_0
      13: getfield      #7                  // Field upper:D
      16: dload_3
      17: dadd
      18: dcmpl
      19: ifle          26
      22: getstatic     #14                 // Field org/apache/commons/math3/geometry/partitioning/Region$Location.OUTSIDE:Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      25: areturn
      26: dload_1
      27: aload_0
      28: getfield      #6                  // Field lower:D
      31: dload_3
      32: dadd
      33: dcmpl
      34: ifle          52
      37: dload_1
      38: aload_0
      39: getfield      #7                  // Field upper:D
      42: dload_3
      43: dsub
      44: dcmpg
      45: ifge          52
      48: getstatic     #15                 // Field org/apache/commons/math3/geometry/partitioning/Region$Location.INSIDE:Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      51: areturn
      52: getstatic     #16                 // Field org/apache/commons/math3/geometry/partitioning/Region$Location.BOUNDARY:Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
      55: areturn
}
