Compiled from "SimpleRegression.java"
public class org.apache.commons.math3.stat.regression.SimpleRegression implements java.io.Serializable,org.apache.commons.math3.stat.regression.UpdatingMultipleLinearRegression {
  private static final long serialVersionUID;

  private double sumX;

  private double sumXX;

  private double sumY;

  private double sumYY;

  private double sumXY;

  private long n;

  private double xbar;

  private double ybar;

  private final boolean hasIntercept;

  public org.apache.commons.math3.stat.regression.SimpleRegression();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #1                  // Method "<init>":(Z)V
       5: return

  public org.apache.commons.math3.stat.regression.SimpleRegression(boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: dconst_0
       6: putfield      #3                  // Field sumX:D
       9: aload_0
      10: dconst_0
      11: putfield      #4                  // Field sumXX:D
      14: aload_0
      15: dconst_0
      16: putfield      #5                  // Field sumY:D
      19: aload_0
      20: dconst_0
      21: putfield      #6                  // Field sumYY:D
      24: aload_0
      25: dconst_0
      26: putfield      #7                  // Field sumXY:D
      29: aload_0
      30: lconst_0
      31: putfield      #8                  // Field n:J
      34: aload_0
      35: dconst_0
      36: putfield      #9                  // Field xbar:D
      39: aload_0
      40: dconst_0
      41: putfield      #10                 // Field ybar:D
      44: aload_0
      45: iload_1
      46: putfield      #11                 // Field hasIntercept:Z
      49: return

  public void addData(double, double);
    Code:
       0: aload_0
       1: getfield      #8                  // Field n:J
       4: lconst_0
       5: lcmp
       6: ifne          22
       9: aload_0
      10: dload_1
      11: putfield      #9                  // Field xbar:D
      14: aload_0
      15: dload_3
      16: putfield      #10                 // Field ybar:D
      19: goto          148
      22: aload_0
      23: getfield      #11                 // Field hasIntercept:Z
      26: ifeq          148
      29: dconst_1
      30: aload_0
      31: getfield      #8                  // Field n:J
      34: l2d
      35: dadd
      36: dstore        5
      38: aload_0
      39: getfield      #8                  // Field n:J
      42: l2d
      43: dconst_1
      44: aload_0
      45: getfield      #8                  // Field n:J
      48: l2d
      49: dadd
      50: ddiv
      51: dstore        7
      53: dload_1
      54: aload_0
      55: getfield      #9                  // Field xbar:D
      58: dsub
      59: dstore        9
      61: dload_3
      62: aload_0
      63: getfield      #10                 // Field ybar:D
      66: dsub
      67: dstore        11
      69: aload_0
      70: dup
      71: getfield      #4                  // Field sumXX:D
      74: dload         9
      76: dload         9
      78: dmul
      79: dload         7
      81: dmul
      82: dadd
      83: putfield      #4                  // Field sumXX:D
      86: aload_0
      87: dup
      88: getfield      #6                  // Field sumYY:D
      91: dload         11
      93: dload         11
      95: dmul
      96: dload         7
      98: dmul
      99: dadd
     100: putfield      #6                  // Field sumYY:D
     103: aload_0
     104: dup
     105: getfield      #7                  // Field sumXY:D
     108: dload         9
     110: dload         11
     112: dmul
     113: dload         7
     115: dmul
     116: dadd
     117: putfield      #7                  // Field sumXY:D
     120: aload_0
     121: dup
     122: getfield      #9                  // Field xbar:D
     125: dload         9
     127: dload         5
     129: ddiv
     130: dadd
     131: putfield      #9                  // Field xbar:D
     134: aload_0
     135: dup
     136: getfield      #10                 // Field ybar:D
     139: dload         11
     141: dload         5
     143: ddiv
     144: dadd
     145: putfield      #10                 // Field ybar:D
     148: aload_0
     149: getfield      #11                 // Field hasIntercept:Z
     152: ifne          191
     155: aload_0
     156: dup
     157: getfield      #4                  // Field sumXX:D
     160: dload_1
     161: dload_1
     162: dmul
     163: dadd
     164: putfield      #4                  // Field sumXX:D
     167: aload_0
     168: dup
     169: getfield      #6                  // Field sumYY:D
     172: dload_3
     173: dload_3
     174: dmul
     175: dadd
     176: putfield      #6                  // Field sumYY:D
     179: aload_0
     180: dup
     181: getfield      #7                  // Field sumXY:D
     184: dload_1
     185: dload_3
     186: dmul
     187: dadd
     188: putfield      #7                  // Field sumXY:D
     191: aload_0
     192: dup
     193: getfield      #3                  // Field sumX:D
     196: dload_1
     197: dadd
     198: putfield      #3                  // Field sumX:D
     201: aload_0
     202: dup
     203: getfield      #5                  // Field sumY:D
     206: dload_3
     207: dadd
     208: putfield      #5                  // Field sumY:D
     211: aload_0
     212: dup
     213: getfield      #8                  // Field n:J
     216: lconst_1
     217: ladd
     218: putfield      #8                  // Field n:J
     221: return

  public void append(org.apache.commons.math3.stat.regression.SimpleRegression);
    Code:
       0: aload_0
       1: getfield      #8                  // Field n:J
       4: lconst_0
       5: lcmp
       6: ifne          52
       9: aload_0
      10: aload_1
      11: getfield      #9                  // Field xbar:D
      14: putfield      #9                  // Field xbar:D
      17: aload_0
      18: aload_1
      19: getfield      #10                 // Field ybar:D
      22: putfield      #10                 // Field ybar:D
      25: aload_0
      26: aload_1
      27: getfield      #4                  // Field sumXX:D
      30: putfield      #4                  // Field sumXX:D
      33: aload_0
      34: aload_1
      35: getfield      #6                  // Field sumYY:D
      38: putfield      #6                  // Field sumYY:D
      41: aload_0
      42: aload_1
      43: getfield      #7                  // Field sumXY:D
      46: putfield      #7                  // Field sumXY:D
      49: goto          255
      52: aload_0
      53: getfield      #11                 // Field hasIntercept:Z
      56: ifeq          216
      59: aload_1
      60: getfield      #8                  // Field n:J
      63: l2d
      64: aload_1
      65: getfield      #8                  // Field n:J
      68: aload_0
      69: getfield      #8                  // Field n:J
      72: ladd
      73: l2d
      74: ddiv
      75: dstore_2
      76: aload_0
      77: getfield      #8                  // Field n:J
      80: aload_1
      81: getfield      #8                  // Field n:J
      84: lmul
      85: l2d
      86: aload_1
      87: getfield      #8                  // Field n:J
      90: aload_0
      91: getfield      #8                  // Field n:J
      94: ladd
      95: l2d
      96: ddiv
      97: dstore        4
      99: aload_1
     100: getfield      #9                  // Field xbar:D
     103: aload_0
     104: getfield      #9                  // Field xbar:D
     107: dsub
     108: dstore        6
     110: aload_1
     111: getfield      #10                 // Field ybar:D
     114: aload_0
     115: getfield      #10                 // Field ybar:D
     118: dsub
     119: dstore        8
     121: aload_0
     122: dup
     123: getfield      #4                  // Field sumXX:D
     126: aload_1
     127: getfield      #4                  // Field sumXX:D
     130: dload         6
     132: dload         6
     134: dmul
     135: dload         4
     137: dmul
     138: dadd
     139: dadd
     140: putfield      #4                  // Field sumXX:D
     143: aload_0
     144: dup
     145: getfield      #6                  // Field sumYY:D
     148: aload_1
     149: getfield      #6                  // Field sumYY:D
     152: dload         8
     154: dload         8
     156: dmul
     157: dload         4
     159: dmul
     160: dadd
     161: dadd
     162: putfield      #6                  // Field sumYY:D
     165: aload_0
     166: dup
     167: getfield      #7                  // Field sumXY:D
     170: aload_1
     171: getfield      #7                  // Field sumXY:D
     174: dload         6
     176: dload         8
     178: dmul
     179: dload         4
     181: dmul
     182: dadd
     183: dadd
     184: putfield      #7                  // Field sumXY:D
     187: aload_0
     188: dup
     189: getfield      #9                  // Field xbar:D
     192: dload         6
     194: dload_2
     195: dmul
     196: dadd
     197: putfield      #9                  // Field xbar:D
     200: aload_0
     201: dup
     202: getfield      #10                 // Field ybar:D
     205: dload         8
     207: dload_2
     208: dmul
     209: dadd
     210: putfield      #10                 // Field ybar:D
     213: goto          255
     216: aload_0
     217: dup
     218: getfield      #4                  // Field sumXX:D
     221: aload_1
     222: getfield      #4                  // Field sumXX:D
     225: dadd
     226: putfield      #4                  // Field sumXX:D
     229: aload_0
     230: dup
     231: getfield      #6                  // Field sumYY:D
     234: aload_1
     235: getfield      #6                  // Field sumYY:D
     238: dadd
     239: putfield      #6                  // Field sumYY:D
     242: aload_0
     243: dup
     244: getfield      #7                  // Field sumXY:D
     247: aload_1
     248: getfield      #7                  // Field sumXY:D
     251: dadd
     252: putfield      #7                  // Field sumXY:D
     255: aload_0
     256: dup
     257: getfield      #3                  // Field sumX:D
     260: aload_1
     261: getfield      #3                  // Field sumX:D
     264: dadd
     265: putfield      #3                  // Field sumX:D
     268: aload_0
     269: dup
     270: getfield      #5                  // Field sumY:D
     273: aload_1
     274: getfield      #5                  // Field sumY:D
     277: dadd
     278: putfield      #5                  // Field sumY:D
     281: aload_0
     282: dup
     283: getfield      #8                  // Field n:J
     286: aload_1
     287: getfield      #8                  // Field n:J
     290: ladd
     291: putfield      #8                  // Field n:J
     294: return

  public void removeData(double, double);
    Code:
       0: aload_0
       1: getfield      #8                  // Field n:J
       4: lconst_0
       5: lcmp
       6: ifle          239
       9: aload_0
      10: getfield      #11                 // Field hasIntercept:Z
      13: ifeq          138
      16: aload_0
      17: getfield      #8                  // Field n:J
      20: l2d
      21: dconst_1
      22: dsub
      23: dstore        5
      25: aload_0
      26: getfield      #8                  // Field n:J
      29: l2d
      30: aload_0
      31: getfield      #8                  // Field n:J
      34: l2d
      35: dconst_1
      36: dsub
      37: ddiv
      38: dstore        7
      40: dload_1
      41: aload_0
      42: getfield      #9                  // Field xbar:D
      45: dsub
      46: dstore        9
      48: dload_3
      49: aload_0
      50: getfield      #10                 // Field ybar:D
      53: dsub
      54: dstore        11
      56: aload_0
      57: dup
      58: getfield      #4                  // Field sumXX:D
      61: dload         9
      63: dload         9
      65: dmul
      66: dload         7
      68: dmul
      69: dsub
      70: putfield      #4                  // Field sumXX:D
      73: aload_0
      74: dup
      75: getfield      #6                  // Field sumYY:D
      78: dload         11
      80: dload         11
      82: dmul
      83: dload         7
      85: dmul
      86: dsub
      87: putfield      #6                  // Field sumYY:D
      90: aload_0
      91: dup
      92: getfield      #7                  // Field sumXY:D
      95: dload         9
      97: dload         11
      99: dmul
     100: dload         7
     102: dmul
     103: dsub
     104: putfield      #7                  // Field sumXY:D
     107: aload_0
     108: dup
     109: getfield      #9                  // Field xbar:D
     112: dload         9
     114: dload         5
     116: ddiv
     117: dsub
     118: putfield      #9                  // Field xbar:D
     121: aload_0
     122: dup
     123: getfield      #10                 // Field ybar:D
     126: dload         11
     128: dload         5
     130: ddiv
     131: dsub
     132: putfield      #10                 // Field ybar:D
     135: goto          209
     138: aload_0
     139: getfield      #8                  // Field n:J
     142: l2d
     143: dconst_1
     144: dsub
     145: dstore        5
     147: aload_0
     148: dup
     149: getfield      #4                  // Field sumXX:D
     152: dload_1
     153: dload_1
     154: dmul
     155: dsub
     156: putfield      #4                  // Field sumXX:D
     159: aload_0
     160: dup
     161: getfield      #6                  // Field sumYY:D
     164: dload_3
     165: dload_3
     166: dmul
     167: dsub
     168: putfield      #6                  // Field sumYY:D
     171: aload_0
     172: dup
     173: getfield      #7                  // Field sumXY:D
     176: dload_1
     177: dload_3
     178: dmul
     179: dsub
     180: putfield      #7                  // Field sumXY:D
     183: aload_0
     184: dup
     185: getfield      #9                  // Field xbar:D
     188: dload_1
     189: dload         5
     191: ddiv
     192: dsub
     193: putfield      #9                  // Field xbar:D
     196: aload_0
     197: dup
     198: getfield      #10                 // Field ybar:D
     201: dload_3
     202: dload         5
     204: ddiv
     205: dsub
     206: putfield      #10                 // Field ybar:D
     209: aload_0
     210: dup
     211: getfield      #3                  // Field sumX:D
     214: dload_1
     215: dsub
     216: putfield      #3                  // Field sumX:D
     219: aload_0
     220: dup
     221: getfield      #5                  // Field sumY:D
     224: dload_3
     225: dsub
     226: putfield      #5                  // Field sumY:D
     229: aload_0
     230: dup
     231: getfield      #8                  // Field n:J
     234: lconst_1
     235: lsub
     236: putfield      #8                  // Field n:J
     239: return

  public void addData(double[][]) throws org.apache.commons.math3.stat.regression.ModelSpecificationException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_1
       4: arraylength
       5: if_icmpge     68
       8: aload_1
       9: iload_2
      10: aaload
      11: arraylength
      12: iconst_2
      13: if_icmpge     48
      16: new           #12                 // class org/apache/commons/math3/stat/regression/ModelSpecificationException
      19: dup
      20: getstatic     #13                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INVALID_REGRESSION_OBSERVATION:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      23: iconst_2
      24: anewarray     #14                 // class java/lang/Object
      27: dup
      28: iconst_0
      29: aload_1
      30: iload_2
      31: aaload
      32: arraylength
      33: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: aastore
      37: dup
      38: iconst_1
      39: iconst_2
      40: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      43: aastore
      44: invokespecial #16                 // Method org/apache/commons/math3/stat/regression/ModelSpecificationException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      47: athrow
      48: aload_0
      49: aload_1
      50: iload_2
      51: aaload
      52: iconst_0
      53: daload
      54: aload_1
      55: iload_2
      56: aaload
      57: iconst_1
      58: daload
      59: invokevirtual #17                 // Method addData:(DD)V
      62: iinc          2, 1
      65: goto          2
      68: return

  public void addObservation(double[], double) throws org.apache.commons.math3.stat.regression.ModelSpecificationException;
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_1
       5: arraylength
       6: ifne          47
       9: new           #12                 // class org/apache/commons/math3/stat/regression/ModelSpecificationException
      12: dup
      13: getstatic     #13                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INVALID_REGRESSION_OBSERVATION:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      16: iconst_2
      17: anewarray     #14                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_1
      23: ifnull        31
      26: aload_1
      27: arraylength
      28: goto          32
      31: iconst_0
      32: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      35: aastore
      36: dup
      37: iconst_1
      38: iconst_1
      39: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      42: aastore
      43: invokespecial #16                 // Method org/apache/commons/math3/stat/regression/ModelSpecificationException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      46: athrow
      47: aload_0
      48: aload_1
      49: iconst_0
      50: daload
      51: dload_2
      52: invokevirtual #17                 // Method addData:(DD)V
      55: return

  public void addObservations(double[][], double[]) throws org.apache.commons.math3.stat.regression.ModelSpecificationException;
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_2
       5: ifnull        15
       8: aload_1
       9: arraylength
      10: aload_2
      11: arraylength
      12: if_icmpeq     62
      15: new           #12                 // class org/apache/commons/math3/stat/regression/ModelSpecificationException
      18: dup
      19: getstatic     #18                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      22: iconst_2
      23: anewarray     #14                 // class java/lang/Object
      26: dup
      27: iconst_0
      28: aload_1
      29: ifnonnull     36
      32: iconst_0
      33: goto          38
      36: aload_1
      37: arraylength
      38: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      41: aastore
      42: dup
      43: iconst_1
      44: aload_2
      45: ifnonnull     52
      48: iconst_0
      49: goto          54
      52: aload_2
      53: arraylength
      54: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      57: aastore
      58: invokespecial #16                 // Method org/apache/commons/math3/stat/regression/ModelSpecificationException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      61: athrow
      62: iconst_1
      63: istore_3
      64: iconst_0
      65: istore        4
      67: iload         4
      69: aload_1
      70: arraylength
      71: if_icmpge     97
      74: aload_1
      75: iload         4
      77: aaload
      78: ifnull        89
      81: aload_1
      82: iload         4
      84: aaload
      85: arraylength
      86: ifne          91
      89: iconst_0
      90: istore_3
      91: iinc          4, 1
      94: goto          67
      97: iload_3
      98: ifne          130
     101: new           #12                 // class org/apache/commons/math3/stat/regression/ModelSpecificationException
     104: dup
     105: getstatic     #19                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.NOT_ENOUGH_DATA_FOR_NUMBER_OF_PREDICTORS:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
     108: iconst_2
     109: anewarray     #14                 // class java/lang/Object
     112: dup
     113: iconst_0
     114: iconst_0
     115: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     118: aastore
     119: dup
     120: iconst_1
     121: iconst_1
     122: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     125: aastore
     126: invokespecial #16                 // Method org/apache/commons/math3/stat/regression/ModelSpecificationException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
     129: athrow
     130: iconst_0
     131: istore        4
     133: iload         4
     135: aload_1
     136: arraylength
     137: if_icmpge     160
     140: aload_0
     141: aload_1
     142: iload         4
     144: aaload
     145: iconst_0
     146: daload
     147: aload_2
     148: iload         4
     150: daload
     151: invokevirtual #17                 // Method addData:(DD)V
     154: iinc          4, 1
     157: goto          133
     160: return

  public void removeData(double[][]);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_1
       4: arraylength
       5: if_icmpge     37
       8: aload_0
       9: getfield      #8                  // Field n:J
      12: lconst_0
      13: lcmp
      14: ifle          37
      17: aload_0
      18: aload_1
      19: iload_2
      20: aaload
      21: iconst_0
      22: daload
      23: aload_1
      24: iload_2
      25: aaload
      26: iconst_1
      27: daload
      28: invokevirtual #20                 // Method removeData:(DD)V
      31: iinc          2, 1
      34: goto          2
      37: return

  public void clear();
    Code:
       0: aload_0
       1: dconst_0
       2: putfield      #3                  // Field sumX:D
       5: aload_0
       6: dconst_0
       7: putfield      #4                  // Field sumXX:D
      10: aload_0
      11: dconst_0
      12: putfield      #5                  // Field sumY:D
      15: aload_0
      16: dconst_0
      17: putfield      #6                  // Field sumYY:D
      20: aload_0
      21: dconst_0
      22: putfield      #7                  // Field sumXY:D
      25: aload_0
      26: lconst_0
      27: putfield      #8                  // Field n:J
      30: return

  public long getN();
    Code:
       0: aload_0
       1: getfield      #8                  // Field n:J
       4: lreturn

  public double predict(double);
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getSlope:()D
       4: dstore_3
       5: aload_0
       6: getfield      #11                 // Field hasIntercept:Z
       9: ifeq          22
      12: aload_0
      13: dload_3
      14: invokespecial #22                 // Method getIntercept:(D)D
      17: dload_3
      18: dload_1
      19: dmul
      20: dadd
      21: dreturn
      22: dload_3
      23: dload_1
      24: dmul
      25: dreturn

  public double getIntercept();
    Code:
       0: aload_0
       1: getfield      #11                 // Field hasIntercept:Z
       4: ifeq          18
       7: aload_0
       8: aload_0
       9: invokevirtual #21                 // Method getSlope:()D
      12: invokespecial #22                 // Method getIntercept:(D)D
      15: goto          19
      18: dconst_0
      19: dreturn

  public boolean hasIntercept();
    Code:
       0: aload_0
       1: getfield      #11                 // Field hasIntercept:Z
       4: ireturn

  public double getSlope();
    Code:
       0: aload_0
       1: getfield      #8                  // Field n:J
       4: ldc2_w        #23                 // long 2l
       7: lcmp
       8: ifge          15
      11: ldc2_w        #25                 // double NaNd
      14: dreturn
      15: aload_0
      16: getfield      #4                  // Field sumXX:D
      19: invokestatic  #27                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      22: ldc2_w        #28                 // double 4.9E-323d
      25: dcmpg
      26: ifge          33
      29: ldc2_w        #25                 // double NaNd
      32: dreturn
      33: aload_0
      34: getfield      #7                  // Field sumXY:D
      37: aload_0
      38: getfield      #4                  // Field sumXX:D
      41: ddiv
      42: dreturn

  public double getSumSquaredErrors();
    Code:
       0: dconst_0
       1: aload_0
       2: getfield      #6                  // Field sumYY:D
       5: aload_0
       6: getfield      #7                  // Field sumXY:D
       9: aload_0
      10: getfield      #7                  // Field sumXY:D
      13: dmul
      14: aload_0
      15: getfield      #4                  // Field sumXX:D
      18: ddiv
      19: dsub
      20: invokestatic  #30                 // Method org/apache/commons/math3/util/FastMath.max:(DD)D
      23: dreturn

  public double getTotalSumSquares();
    Code:
       0: aload_0
       1: getfield      #8                  // Field n:J
       4: ldc2_w        #23                 // long 2l
       7: lcmp
       8: ifge          15
      11: ldc2_w        #25                 // double NaNd
      14: dreturn
      15: aload_0
      16: getfield      #6                  // Field sumYY:D
      19: dreturn

  public double getXSumSquares();
    Code:
       0: aload_0
       1: getfield      #8                  // Field n:J
       4: ldc2_w        #23                 // long 2l
       7: lcmp
       8: ifge          15
      11: ldc2_w        #25                 // double NaNd
      14: dreturn
      15: aload_0
      16: getfield      #4                  // Field sumXX:D
      19: dreturn

  public double getSumOfCrossProducts();
    Code:
       0: aload_0
       1: getfield      #7                  // Field sumXY:D
       4: dreturn

  public double getRegressionSumSquares();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #21                 // Method getSlope:()D
       5: invokespecial #31                 // Method getRegressionSumSquares:(D)D
       8: dreturn

  public double getMeanSquareError();
    Code:
       0: aload_0
       1: getfield      #8                  // Field n:J
       4: ldc2_w        #32                 // long 3l
       7: lcmp
       8: ifge          15
      11: ldc2_w        #25                 // double NaNd
      14: dreturn
      15: aload_0
      16: getfield      #11                 // Field hasIntercept:Z
      19: ifeq          39
      22: aload_0
      23: invokevirtual #34                 // Method getSumSquaredErrors:()D
      26: aload_0
      27: getfield      #8                  // Field n:J
      30: ldc2_w        #23                 // long 2l
      33: lsub
      34: l2d
      35: ddiv
      36: goto          51
      39: aload_0
      40: invokevirtual #34                 // Method getSumSquaredErrors:()D
      43: aload_0
      44: getfield      #8                  // Field n:J
      47: lconst_1
      48: lsub
      49: l2d
      50: ddiv
      51: dreturn

  public double getR();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getSlope:()D
       4: dstore_1
       5: aload_0
       6: invokevirtual #35                 // Method getRSquare:()D
       9: invokestatic  #36                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      12: dstore_3
      13: dload_1
      14: dconst_0
      15: dcmpg
      16: ifge          22
      19: dload_3
      20: dneg
      21: dstore_3
      22: dload_3
      23: dreturn

  public double getRSquare();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getTotalSumSquares:()D
       4: dstore_1
       5: dload_1
       6: aload_0
       7: invokevirtual #34                 // Method getSumSquaredErrors:()D
      10: dsub
      11: dload_1
      12: ddiv
      13: dreturn

  public double getInterceptStdErr();
    Code:
       0: aload_0
       1: getfield      #11                 // Field hasIntercept:Z
       4: ifne          11
       7: ldc2_w        #25                 // double NaNd
      10: dreturn
      11: aload_0
      12: invokevirtual #38                 // Method getMeanSquareError:()D
      15: dconst_1
      16: aload_0
      17: getfield      #8                  // Field n:J
      20: l2d
      21: ddiv
      22: aload_0
      23: getfield      #9                  // Field xbar:D
      26: aload_0
      27: getfield      #9                  // Field xbar:D
      30: dmul
      31: aload_0
      32: getfield      #4                  // Field sumXX:D
      35: ddiv
      36: dadd
      37: dmul
      38: invokestatic  #36                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      41: dreturn

  public double getSlopeStdErr();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getMeanSquareError:()D
       4: aload_0
       5: getfield      #4                  // Field sumXX:D
       8: ddiv
       9: invokestatic  #36                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      12: dreturn

  public double getSlopeConfidenceInterval() throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: ldc2_w        #39                 // double 0.05d
       4: invokevirtual #41                 // Method getSlopeConfidenceInterval:(D)D
       7: dreturn

  public double getSlopeConfidenceInterval(double) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field n:J
       4: ldc2_w        #32                 // long 3l
       7: lcmp
       8: ifge          15
      11: ldc2_w        #25                 // double NaNd
      14: dreturn
      15: dload_1
      16: dconst_1
      17: dcmpl
      18: ifge          27
      21: dload_1
      22: dconst_0
      23: dcmpg
      24: ifgt          50
      27: new           #42                 // class org/apache/commons/math3/exception/OutOfRangeException
      30: dup
      31: getstatic     #43                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.SIGNIFICANCE_LEVEL:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      34: dload_1
      35: invokestatic  #44                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      38: iconst_0
      39: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      42: iconst_1
      43: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      46: invokespecial #45                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      49: athrow
      50: new           #46                 // class org/apache/commons/math3/distribution/TDistribution
      53: dup
      54: aload_0
      55: getfield      #8                  // Field n:J
      58: ldc2_w        #23                 // long 2l
      61: lsub
      62: l2d
      63: invokespecial #47                 // Method org/apache/commons/math3/distribution/TDistribution."<init>":(D)V
      66: astore_3
      67: aload_0
      68: invokevirtual #48                 // Method getSlopeStdErr:()D
      71: aload_3
      72: dconst_1
      73: dload_1
      74: ldc2_w        #49                 // double 2.0d
      77: ddiv
      78: dsub
      79: invokevirtual #51                 // Method org/apache/commons/math3/distribution/TDistribution.inverseCumulativeProbability:(D)D
      82: dmul
      83: dreturn

  public double getSignificance();
    Code:
       0: aload_0
       1: getfield      #8                  // Field n:J
       4: ldc2_w        #32                 // long 3l
       7: lcmp
       8: ifge          15
      11: ldc2_w        #25                 // double NaNd
      14: dreturn
      15: new           #46                 // class org/apache/commons/math3/distribution/TDistribution
      18: dup
      19: aload_0
      20: getfield      #8                  // Field n:J
      23: ldc2_w        #23                 // long 2l
      26: lsub
      27: l2d
      28: invokespecial #47                 // Method org/apache/commons/math3/distribution/TDistribution."<init>":(D)V
      31: astore_1
      32: ldc2_w        #49                 // double 2.0d
      35: dconst_1
      36: aload_1
      37: aload_0
      38: invokevirtual #21                 // Method getSlope:()D
      41: invokestatic  #27                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      44: aload_0
      45: invokevirtual #48                 // Method getSlopeStdErr:()D
      48: ddiv
      49: invokevirtual #52                 // Method org/apache/commons/math3/distribution/TDistribution.cumulativeProbability:(D)D
      52: dsub
      53: dmul
      54: dreturn

  private double getIntercept(double);
    Code:
       0: aload_0
       1: getfield      #11                 // Field hasIntercept:Z
       4: ifeq          25
       7: aload_0
       8: getfield      #5                  // Field sumY:D
      11: dload_1
      12: aload_0
      13: getfield      #3                  // Field sumX:D
      16: dmul
      17: dsub
      18: aload_0
      19: getfield      #8                  // Field n:J
      22: l2d
      23: ddiv
      24: dreturn
      25: dconst_0
      26: dreturn

  private double getRegressionSumSquares(double);
    Code:
       0: dload_1
       1: dload_1
       2: dmul
       3: aload_0
       4: getfield      #4                  // Field sumXX:D
       7: dmul
       8: dreturn

  public org.apache.commons.math3.stat.regression.RegressionResults regress() throws org.apache.commons.math3.stat.regression.ModelSpecificationException, org.apache.commons.math3.exception.NoDataException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field hasIntercept:Z
       4: ifeq          271
       7: aload_0
       8: getfield      #8                  // Field n:J
      11: ldc2_w        #32                 // long 3l
      14: lcmp
      15: ifge          29
      18: new           #53                 // class org/apache/commons/math3/exception/NoDataException
      21: dup
      22: getstatic     #54                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.NOT_ENOUGH_DATA_REGRESSION:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      25: invokespecial #55                 // Method org/apache/commons/math3/exception/NoDataException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;)V
      28: athrow
      29: aload_0
      30: getfield      #4                  // Field sumXX:D
      33: invokestatic  #27                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      36: getstatic     #56                 // Field org/apache/commons/math3/util/Precision.SAFE_MIN:D
      39: dcmpl
      40: ifle          180
      43: iconst_2
      44: newarray       double
      46: dup
      47: iconst_0
      48: aload_0
      49: invokevirtual #57                 // Method getIntercept:()D
      52: dastore
      53: dup
      54: iconst_1
      55: aload_0
      56: invokevirtual #21                 // Method getSlope:()D
      59: dastore
      60: astore_1
      61: aload_0
      62: invokevirtual #38                 // Method getMeanSquareError:()D
      65: dstore_2
      66: aload_0
      67: getfield      #6                  // Field sumYY:D
      70: aload_0
      71: getfield      #5                  // Field sumY:D
      74: aload_0
      75: getfield      #5                  // Field sumY:D
      78: dmul
      79: aload_0
      80: getfield      #8                  // Field n:J
      83: l2d
      84: ddiv
      85: dadd
      86: dstore        4
      88: iconst_3
      89: newarray       double
      91: dup
      92: iconst_0
      93: dload_2
      94: aload_0
      95: getfield      #9                  // Field xbar:D
      98: aload_0
      99: getfield      #9                  // Field xbar:D
     102: dmul
     103: aload_0
     104: getfield      #4                  // Field sumXX:D
     107: ddiv
     108: dconst_1
     109: aload_0
     110: getfield      #8                  // Field n:J
     113: l2d
     114: ddiv
     115: dadd
     116: dmul
     117: dastore
     118: dup
     119: iconst_1
     120: aload_0
     121: getfield      #9                  // Field xbar:D
     124: dneg
     125: dload_2
     126: dmul
     127: aload_0
     128: getfield      #4                  // Field sumXX:D
     131: ddiv
     132: dastore
     133: dup
     134: iconst_2
     135: dload_2
     136: aload_0
     137: getfield      #4                  // Field sumXX:D
     140: ddiv
     141: dastore
     142: astore        6
     144: new           #58                 // class org/apache/commons/math3/stat/regression/RegressionResults
     147: dup
     148: aload_1
     149: iconst_1
     150: anewarray     #59                 // class "[D"
     153: dup
     154: iconst_0
     155: aload         6
     157: aastore
     158: iconst_1
     159: aload_0
     160: getfield      #8                  // Field n:J
     163: iconst_2
     164: aload_0
     165: getfield      #5                  // Field sumY:D
     168: dload         4
     170: aload_0
     171: invokevirtual #34                 // Method getSumSquaredErrors:()D
     174: iconst_1
     175: iconst_0
     176: invokespecial #60                 // Method org/apache/commons/math3/stat/regression/RegressionResults."<init>":([D[[DZJIDDDZZ)V
     179: areturn
     180: iconst_2
     181: newarray       double
     183: dup
     184: iconst_0
     185: aload_0
     186: getfield      #5                  // Field sumY:D
     189: aload_0
     190: getfield      #8                  // Field n:J
     193: l2d
     194: ddiv
     195: dastore
     196: dup
     197: iconst_1
     198: ldc2_w        #25                 // double NaNd
     201: dastore
     202: astore_1
     203: iconst_3
     204: newarray       double
     206: dup
     207: iconst_0
     208: aload_0
     209: getfield      #10                 // Field ybar:D
     212: aload_0
     213: getfield      #8                  // Field n:J
     216: l2d
     217: dconst_1
     218: dsub
     219: ddiv
     220: dastore
     221: dup
     222: iconst_1
     223: ldc2_w        #25                 // double NaNd
     226: dastore
     227: dup
     228: iconst_2
     229: ldc2_w        #25                 // double NaNd
     232: dastore
     233: astore_2
     234: new           #58                 // class org/apache/commons/math3/stat/regression/RegressionResults
     237: dup
     238: aload_1
     239: iconst_1
     240: anewarray     #59                 // class "[D"
     243: dup
     244: iconst_0
     245: aload_2
     246: aastore
     247: iconst_1
     248: aload_0
     249: getfield      #8                  // Field n:J
     252: iconst_1
     253: aload_0
     254: getfield      #5                  // Field sumY:D
     257: aload_0
     258: getfield      #6                  // Field sumYY:D
     261: aload_0
     262: invokevirtual #34                 // Method getSumSquaredErrors:()D
     265: iconst_1
     266: iconst_0
     267: invokespecial #60                 // Method org/apache/commons/math3/stat/regression/RegressionResults."<init>":([D[[DZJIDDDZZ)V
     270: areturn
     271: aload_0
     272: getfield      #8                  // Field n:J
     275: ldc2_w        #23                 // long 2l
     278: lcmp
     279: ifge          293
     282: new           #53                 // class org/apache/commons/math3/exception/NoDataException
     285: dup
     286: getstatic     #54                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.NOT_ENOUGH_DATA_REGRESSION:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
     289: invokespecial #55                 // Method org/apache/commons/math3/exception/NoDataException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;)V
     292: athrow
     293: aload_0
     294: getfield      #4                  // Field sumXX:D
     297: invokestatic  #61                 // Method java/lang/Double.isNaN:(D)Z
     300: ifne          372
     303: iconst_1
     304: newarray       double
     306: dup
     307: iconst_0
     308: aload_0
     309: invokevirtual #38                 // Method getMeanSquareError:()D
     312: aload_0
     313: getfield      #4                  // Field sumXX:D
     316: ddiv
     317: dastore
     318: astore_1
     319: iconst_1
     320: newarray       double
     322: dup
     323: iconst_0
     324: aload_0
     325: getfield      #7                  // Field sumXY:D
     328: aload_0
     329: getfield      #4                  // Field sumXX:D
     332: ddiv
     333: dastore
     334: astore_2
     335: new           #58                 // class org/apache/commons/math3/stat/regression/RegressionResults
     338: dup
     339: aload_2
     340: iconst_1
     341: anewarray     #59                 // class "[D"
     344: dup
     345: iconst_0
     346: aload_1
     347: aastore
     348: iconst_1
     349: aload_0
     350: getfield      #8                  // Field n:J
     353: iconst_1
     354: aload_0
     355: getfield      #5                  // Field sumY:D
     358: aload_0
     359: getfield      #6                  // Field sumYY:D
     362: aload_0
     363: invokevirtual #34                 // Method getSumSquaredErrors:()D
     366: iconst_0
     367: iconst_0
     368: invokespecial #60                 // Method org/apache/commons/math3/stat/regression/RegressionResults."<init>":([D[[DZJIDDDZZ)V
     371: areturn
     372: iconst_1
     373: newarray       double
     375: dup
     376: iconst_0
     377: ldc2_w        #25                 // double NaNd
     380: dastore
     381: astore_1
     382: iconst_1
     383: newarray       double
     385: dup
     386: iconst_0
     387: ldc2_w        #25                 // double NaNd
     390: dastore
     391: astore_2
     392: new           #58                 // class org/apache/commons/math3/stat/regression/RegressionResults
     395: dup
     396: aload_2
     397: iconst_1
     398: anewarray     #59                 // class "[D"
     401: dup
     402: iconst_0
     403: aload_1
     404: aastore
     405: iconst_1
     406: aload_0
     407: getfield      #8                  // Field n:J
     410: iconst_1
     411: ldc2_w        #25                 // double NaNd
     414: ldc2_w        #25                 // double NaNd
     417: ldc2_w        #25                 // double NaNd
     420: iconst_0
     421: iconst_0
     422: invokespecial #60                 // Method org/apache/commons/math3/stat/regression/RegressionResults."<init>":([D[[DZJIDDDZZ)V
     425: areturn

  public org.apache.commons.math3.stat.regression.RegressionResults regress(int[]) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_1
       5: arraylength
       6: ifne          24
       9: new           #62                 // class org/apache/commons/math3/exception/MathIllegalArgumentException
      12: dup
      13: getstatic     #63                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      16: iconst_0
      17: anewarray     #14                 // class java/lang/Object
      20: invokespecial #64                 // Method org/apache/commons/math3/exception/MathIllegalArgumentException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      23: athrow
      24: aload_1
      25: arraylength
      26: iconst_2
      27: if_icmpgt     43
      30: aload_1
      31: arraylength
      32: iconst_1
      33: if_icmple     82
      36: aload_0
      37: getfield      #11                 // Field hasIntercept:Z
      40: ifne          82
      43: new           #12                 // class org/apache/commons/math3/stat/regression/ModelSpecificationException
      46: dup
      47: getstatic     #65                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.ARRAY_SIZE_EXCEEDS_MAX_VARIABLES:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      50: iconst_1
      51: anewarray     #14                 // class java/lang/Object
      54: dup
      55: iconst_0
      56: aload_1
      57: arraylength
      58: iconst_1
      59: if_icmple     73
      62: aload_0
      63: getfield      #11                 // Field hasIntercept:Z
      66: ifne          73
      69: iconst_1
      70: goto          74
      73: iconst_2
      74: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      77: aastore
      78: invokespecial #16                 // Method org/apache/commons/math3/stat/regression/ModelSpecificationException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      81: athrow
      82: aload_0
      83: getfield      #11                 // Field hasIntercept:Z
      86: ifeq          530
      89: aload_1
      90: arraylength
      91: iconst_2
      92: if_icmpne     179
      95: aload_1
      96: iconst_0
      97: iaload
      98: iconst_1
      99: if_icmpne     117
     102: new           #12                 // class org/apache/commons/math3/stat/regression/ModelSpecificationException
     105: dup
     106: getstatic     #66                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.NOT_INCREASING_SEQUENCE:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
     109: iconst_0
     110: anewarray     #14                 // class java/lang/Object
     113: invokespecial #16                 // Method org/apache/commons/math3/stat/regression/ModelSpecificationException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
     116: athrow
     117: aload_1
     118: iconst_0
     119: iaload
     120: ifeq          145
     123: new           #42                 // class org/apache/commons/math3/exception/OutOfRangeException
     126: dup
     127: aload_1
     128: iconst_0
     129: iaload
     130: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     133: iconst_0
     134: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     137: iconst_1
     138: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     141: invokespecial #67                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
     144: athrow
     145: aload_1
     146: iconst_1
     147: iaload
     148: iconst_1
     149: if_icmpeq     174
     152: new           #42                 // class org/apache/commons/math3/exception/OutOfRangeException
     155: dup
     156: aload_1
     157: iconst_0
     158: iaload
     159: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     162: iconst_0
     163: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     166: iconst_1
     167: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     170: invokespecial #67                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
     173: athrow
     174: aload_0
     175: invokevirtual #68                 // Method regress:()Lorg/apache/commons/math3/stat/regression/RegressionResults;
     178: areturn
     179: aload_1
     180: iconst_0
     181: iaload
     182: iconst_1
     183: if_icmpeq     214
     186: aload_1
     187: iconst_0
     188: iaload
     189: ifeq          214
     192: new           #42                 // class org/apache/commons/math3/exception/OutOfRangeException
     195: dup
     196: aload_1
     197: iconst_0
     198: iaload
     199: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     202: iconst_0
     203: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     206: iconst_1
     207: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     210: invokespecial #67                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
     213: athrow
     214: aload_0
     215: getfield      #5                  // Field sumY:D
     218: aload_0
     219: getfield      #5                  // Field sumY:D
     222: dmul
     223: aload_0
     224: getfield      #8                  // Field n:J
     227: l2d
     228: ddiv
     229: dstore_2
     230: aload_0
     231: getfield      #6                  // Field sumYY:D
     234: dload_2
     235: dadd
     236: dstore        4
     238: aload_1
     239: iconst_0
     240: iaload
     241: ifne          320
     244: iconst_1
     245: newarray       double
     247: dup
     248: iconst_0
     249: aload_0
     250: getfield      #6                  // Field sumYY:D
     253: aload_0
     254: getfield      #8                  // Field n:J
     257: lconst_1
     258: lsub
     259: aload_0
     260: getfield      #8                  // Field n:J
     263: lmul
     264: l2d
     265: ddiv
     266: dastore
     267: astore        6
     269: iconst_1
     270: newarray       double
     272: dup
     273: iconst_0
     274: aload_0
     275: getfield      #10                 // Field ybar:D
     278: dastore
     279: astore        7
     281: new           #58                 // class org/apache/commons/math3/stat/regression/RegressionResults
     284: dup
     285: aload         7
     287: iconst_1
     288: anewarray     #59                 // class "[D"
     291: dup
     292: iconst_0
     293: aload         6
     295: aastore
     296: iconst_1
     297: aload_0
     298: getfield      #8                  // Field n:J
     301: iconst_1
     302: aload_0
     303: getfield      #5                  // Field sumY:D
     306: dload         4
     308: dload_2
     309: dadd
     310: aload_0
     311: getfield      #6                  // Field sumYY:D
     314: iconst_1
     315: iconst_0
     316: invokespecial #60                 // Method org/apache/commons/math3/stat/regression/RegressionResults."<init>":([D[[DZJIDDDZZ)V
     319: areturn
     320: aload_1
     321: iconst_0
     322: iaload
     323: iconst_1
     324: if_icmpne     527
     327: aload_0
     328: getfield      #4                  // Field sumXX:D
     331: aload_0
     332: getfield      #3                  // Field sumX:D
     335: aload_0
     336: getfield      #3                  // Field sumX:D
     339: dmul
     340: aload_0
     341: getfield      #8                  // Field n:J
     344: l2d
     345: ddiv
     346: dadd
     347: dstore        6
     349: aload_0
     350: getfield      #7                  // Field sumXY:D
     353: aload_0
     354: getfield      #3                  // Field sumX:D
     357: aload_0
     358: getfield      #5                  // Field sumY:D
     361: dmul
     362: aload_0
     363: getfield      #8                  // Field n:J
     366: l2d
     367: ddiv
     368: dadd
     369: dstore        8
     371: dconst_0
     372: dload         4
     374: dload         8
     376: dload         8
     378: dmul
     379: dload         6
     381: ddiv
     382: dsub
     383: invokestatic  #30                 // Method org/apache/commons/math3/util/FastMath.max:(DD)D
     386: dstore        10
     388: dload         10
     390: aload_0
     391: getfield      #8                  // Field n:J
     394: lconst_1
     395: lsub
     396: l2d
     397: ddiv
     398: dstore        12
     400: dload         6
     402: invokestatic  #61                 // Method java/lang/Double.isNaN:(D)Z
     405: ifne          469
     408: iconst_1
     409: newarray       double
     411: dup
     412: iconst_0
     413: dload         12
     415: dload         6
     417: ddiv
     418: dastore
     419: astore        14
     421: iconst_1
     422: newarray       double
     424: dup
     425: iconst_0
     426: dload         8
     428: dload         6
     430: ddiv
     431: dastore
     432: astore        15
     434: new           #58                 // class org/apache/commons/math3/stat/regression/RegressionResults
     437: dup
     438: aload         15
     440: iconst_1
     441: anewarray     #59                 // class "[D"
     444: dup
     445: iconst_0
     446: aload         14
     448: aastore
     449: iconst_1
     450: aload_0
     451: getfield      #8                  // Field n:J
     454: iconst_1
     455: aload_0
     456: getfield      #5                  // Field sumY:D
     459: dload         4
     461: dload         10
     463: iconst_0
     464: iconst_0
     465: invokespecial #60                 // Method org/apache/commons/math3/stat/regression/RegressionResults."<init>":([D[[DZJIDDDZZ)V
     468: areturn
     469: iconst_1
     470: newarray       double
     472: dup
     473: iconst_0
     474: ldc2_w        #25                 // double NaNd
     477: dastore
     478: astore        14
     480: iconst_1
     481: newarray       double
     483: dup
     484: iconst_0
     485: ldc2_w        #25                 // double NaNd
     488: dastore
     489: astore        15
     491: new           #58                 // class org/apache/commons/math3/stat/regression/RegressionResults
     494: dup
     495: aload         15
     497: iconst_1
     498: anewarray     #59                 // class "[D"
     501: dup
     502: iconst_0
     503: aload         14
     505: aastore
     506: iconst_1
     507: aload_0
     508: getfield      #8                  // Field n:J
     511: iconst_1
     512: ldc2_w        #25                 // double NaNd
     515: ldc2_w        #25                 // double NaNd
     518: ldc2_w        #25                 // double NaNd
     521: iconst_0
     522: iconst_0
     523: invokespecial #60                 // Method org/apache/commons/math3/stat/regression/RegressionResults."<init>":([D[[DZJIDDDZZ)V
     526: areturn
     527: goto          563
     530: aload_1
     531: iconst_0
     532: iaload
     533: ifeq          558
     536: new           #42                 // class org/apache/commons/math3/exception/OutOfRangeException
     539: dup
     540: aload_1
     541: iconst_0
     542: iaload
     543: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     546: iconst_0
     547: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     550: iconst_0
     551: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     554: invokespecial #67                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
     557: athrow
     558: aload_0
     559: invokevirtual #68                 // Method regress:()Lorg/apache/commons/math3/stat/regression/RegressionResults;
     562: areturn
     563: aconst_null
     564: areturn
}
