Compiled from "LevyDistribution.java"
public class org.apache.commons.math3.distribution.LevyDistribution extends org.apache.commons.math3.distribution.AbstractRealDistribution {
  private static final long serialVersionUID;

  private final double mu;

  private final double c;

  private final double halfC;

  public org.apache.commons.math3.distribution.LevyDistribution(double, double);
    Code:
       0: aload_0
       1: new           #1                  // class org/apache/commons/math3/random/Well19937c
       4: dup
       5: invokespecial #2                  // Method org/apache/commons/math3/random/Well19937c."<init>":()V
       8: dload_1
       9: dload_3
      10: invokespecial #3                  // Method "<init>":(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
      13: return

  public org.apache.commons.math3.distribution.LevyDistribution(org.apache.commons.math3.random.RandomGenerator, double, double);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method org/apache/commons/math3/distribution/AbstractRealDistribution."<init>":(Lorg/apache/commons/math3/random/RandomGenerator;)V
       5: aload_0
       6: dload_2
       7: putfield      #5                  // Field mu:D
      10: aload_0
      11: dload         4
      13: putfield      #6                  // Field c:D
      16: aload_0
      17: ldc2_w        #7                  // double 0.5d
      20: dload         4
      22: dmul
      23: putfield      #9                  // Field halfC:D
      26: return

  public double density(double);
    Code:
       0: dload_1
       1: aload_0
       2: getfield      #5                  // Field mu:D
       5: dcmpg
       6: ifge          13
       9: ldc2_w        #10                 // double NaNd
      12: dreturn
      13: dload_1
      14: aload_0
      15: getfield      #5                  // Field mu:D
      18: dsub
      19: dstore_3
      20: aload_0
      21: getfield      #9                  // Field halfC:D
      24: dload_3
      25: ddiv
      26: dstore        5
      28: dload         5
      30: ldc2_w        #12                 // double 3.141592653589793d
      33: ddiv
      34: invokestatic  #14                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      37: dload         5
      39: dneg
      40: invokestatic  #15                 // Method org/apache/commons/math3/util/FastMath.exp:(D)D
      43: dmul
      44: dload_3
      45: ddiv
      46: dreturn

  public double logDensity(double);
    Code:
       0: dload_1
       1: aload_0
       2: getfield      #5                  // Field mu:D
       5: dcmpg
       6: ifge          13
       9: ldc2_w        #10                 // double NaNd
      12: dreturn
      13: dload_1
      14: aload_0
      15: getfield      #5                  // Field mu:D
      18: dsub
      19: dstore_3
      20: aload_0
      21: getfield      #9                  // Field halfC:D
      24: dload_3
      25: ddiv
      26: dstore        5
      28: ldc2_w        #7                  // double 0.5d
      31: dload         5
      33: ldc2_w        #12                 // double 3.141592653589793d
      36: ddiv
      37: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.log:(D)D
      40: dmul
      41: dload         5
      43: dsub
      44: dload_3
      45: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.log:(D)D
      48: dsub
      49: dreturn

  public double cumulativeProbability(double);
    Code:
       0: dload_1
       1: aload_0
       2: getfield      #5                  // Field mu:D
       5: dcmpg
       6: ifge          13
       9: ldc2_w        #10                 // double NaNd
      12: dreturn
      13: aload_0
      14: getfield      #9                  // Field halfC:D
      17: dload_1
      18: aload_0
      19: getfield      #5                  // Field mu:D
      22: dsub
      23: ddiv
      24: invokestatic  #14                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      27: invokestatic  #17                 // Method org/apache/commons/math3/special/Erf.erfc:(D)D
      30: dreturn

  public double inverseCumulativeProbability(double) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: dload_1
       1: dconst_0
       2: dcmpg
       3: iflt          12
       6: dload_1
       7: dconst_1
       8: dcmpl
       9: ifle          32
      12: new           #18                 // class org/apache/commons/math3/exception/OutOfRangeException
      15: dup
      16: dload_1
      17: invokestatic  #19                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      20: iconst_0
      21: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      24: iconst_1
      25: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: invokespecial #21                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      31: athrow
      32: dload_1
      33: invokestatic  #22                 // Method org/apache/commons/math3/special/Erf.erfcInv:(D)D
      36: dstore_3
      37: aload_0
      38: getfield      #5                  // Field mu:D
      41: aload_0
      42: getfield      #9                  // Field halfC:D
      45: dload_3
      46: dload_3
      47: dmul
      48: ddiv
      49: dadd
      50: dreturn

  public double getScale();
    Code:
       0: aload_0
       1: getfield      #6                  // Field c:D
       4: dreturn

  public double getLocation();
    Code:
       0: aload_0
       1: getfield      #5                  // Field mu:D
       4: dreturn

  public double getNumericalMean();
    Code:
       0: ldc2_w        #23                 // double Infinityd
       3: dreturn

  public double getNumericalVariance();
    Code:
       0: ldc2_w        #23                 // double Infinityd
       3: dreturn

  public double getSupportLowerBound();
    Code:
       0: aload_0
       1: getfield      #5                  // Field mu:D
       4: dreturn

  public double getSupportUpperBound();
    Code:
       0: ldc2_w        #23                 // double Infinityd
       3: dreturn

  public boolean isSupportLowerBoundInclusive();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isSupportUpperBoundInclusive();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isSupportConnected();
    Code:
       0: iconst_1
       1: ireturn
}
