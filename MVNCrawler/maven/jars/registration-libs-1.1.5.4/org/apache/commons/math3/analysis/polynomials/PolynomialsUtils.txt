Compiled from "PolynomialsUtils.java"
public class org.apache.commons.math3.analysis.polynomials.PolynomialsUtils {
  private static final java.util.List<org.apache.commons.math3.fraction.BigFraction> CHEBYSHEV_COEFFICIENTS;

  private static final java.util.List<org.apache.commons.math3.fraction.BigFraction> HERMITE_COEFFICIENTS;

  private static final java.util.List<org.apache.commons.math3.fraction.BigFraction> LAGUERRE_COEFFICIENTS;

  private static final java.util.List<org.apache.commons.math3.fraction.BigFraction> LEGENDRE_COEFFICIENTS;

  private static final java.util.Map<org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey, java.util.List<org.apache.commons.math3.fraction.BigFraction>> JACOBI_COEFFICIENTS;

  private org.apache.commons.math3.analysis.polynomials.PolynomialsUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.apache.commons.math3.analysis.polynomials.PolynomialFunction createChebyshevPolynomial(int);
    Code:
       0: iload_0
       1: getstatic     #2                  // Field CHEBYSHEV_COEFFICIENTS:Ljava/util/List;
       4: new           #3                  // class org/apache/commons/math3/analysis/polynomials/PolynomialsUtils$1
       7: dup
       8: invokespecial #4                  // Method org/apache/commons/math3/analysis/polynomials/PolynomialsUtils$1."<init>":()V
      11: invokestatic  #5                  // Method buildPolynomial:(ILjava/util/List;Lorg/apache/commons/math3/analysis/polynomials/PolynomialsUtils$RecurrenceCoefficientsGenerator;)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
      14: areturn

  public static org.apache.commons.math3.analysis.polynomials.PolynomialFunction createHermitePolynomial(int);
    Code:
       0: iload_0
       1: getstatic     #6                  // Field HERMITE_COEFFICIENTS:Ljava/util/List;
       4: new           #7                  // class org/apache/commons/math3/analysis/polynomials/PolynomialsUtils$2
       7: dup
       8: invokespecial #8                  // Method org/apache/commons/math3/analysis/polynomials/PolynomialsUtils$2."<init>":()V
      11: invokestatic  #5                  // Method buildPolynomial:(ILjava/util/List;Lorg/apache/commons/math3/analysis/polynomials/PolynomialsUtils$RecurrenceCoefficientsGenerator;)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
      14: areturn

  public static org.apache.commons.math3.analysis.polynomials.PolynomialFunction createLaguerrePolynomial(int);
    Code:
       0: iload_0
       1: getstatic     #9                  // Field LAGUERRE_COEFFICIENTS:Ljava/util/List;
       4: new           #10                 // class org/apache/commons/math3/analysis/polynomials/PolynomialsUtils$3
       7: dup
       8: invokespecial #11                 // Method org/apache/commons/math3/analysis/polynomials/PolynomialsUtils$3."<init>":()V
      11: invokestatic  #5                  // Method buildPolynomial:(ILjava/util/List;Lorg/apache/commons/math3/analysis/polynomials/PolynomialsUtils$RecurrenceCoefficientsGenerator;)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
      14: areturn

  public static org.apache.commons.math3.analysis.polynomials.PolynomialFunction createLegendrePolynomial(int);
    Code:
       0: iload_0
       1: getstatic     #12                 // Field LEGENDRE_COEFFICIENTS:Ljava/util/List;
       4: new           #13                 // class org/apache/commons/math3/analysis/polynomials/PolynomialsUtils$4
       7: dup
       8: invokespecial #14                 // Method org/apache/commons/math3/analysis/polynomials/PolynomialsUtils$4."<init>":()V
      11: invokestatic  #5                  // Method buildPolynomial:(ILjava/util/List;Lorg/apache/commons/math3/analysis/polynomials/PolynomialsUtils$RecurrenceCoefficientsGenerator;)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
      14: areturn

  public static org.apache.commons.math3.analysis.polynomials.PolynomialFunction createJacobiPolynomial(int, int, int);
    Code:
       0: new           #15                 // class org/apache/commons/math3/analysis/polynomials/PolynomialsUtils$JacobiKey
       3: dup
       4: iload_1
       5: iload_2
       6: invokespecial #16                 // Method org/apache/commons/math3/analysis/polynomials/PolynomialsUtils$JacobiKey."<init>":(II)V
       9: astore_3
      10: getstatic     #17                 // Field JACOBI_COEFFICIENTS:Ljava/util/Map;
      13: aload_3
      14: invokeinterface #18,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      19: ifne          94
      22: new           #19                 // class java/util/ArrayList
      25: dup
      26: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
      29: astore        4
      31: getstatic     #17                 // Field JACOBI_COEFFICIENTS:Ljava/util/Map;
      34: aload_3
      35: aload         4
      37: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: aload         4
      45: getstatic     #22                 // Field org/apache/commons/math3/fraction/BigFraction.ONE:Lorg/apache/commons/math3/fraction/BigFraction;
      48: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: aload         4
      56: new           #24                 // class org/apache/commons/math3/fraction/BigFraction
      59: dup
      60: iload_1
      61: iload_2
      62: isub
      63: iconst_2
      64: invokespecial #25                 // Method org/apache/commons/math3/fraction/BigFraction."<init>":(II)V
      67: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      72: pop
      73: aload         4
      75: new           #24                 // class org/apache/commons/math3/fraction/BigFraction
      78: dup
      79: iconst_2
      80: iload_1
      81: iadd
      82: iload_2
      83: iadd
      84: iconst_2
      85: invokespecial #25                 // Method org/apache/commons/math3/fraction/BigFraction."<init>":(II)V
      88: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      93: pop
      94: iload_0
      95: getstatic     #17                 // Field JACOBI_COEFFICIENTS:Ljava/util/Map;
      98: aload_3
      99: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     104: checkcast     #27                 // class java/util/List
     107: new           #28                 // class org/apache/commons/math3/analysis/polynomials/PolynomialsUtils$5
     110: dup
     111: iload_1
     112: iload_2
     113: invokespecial #29                 // Method org/apache/commons/math3/analysis/polynomials/PolynomialsUtils$5."<init>":(II)V
     116: invokestatic  #5                  // Method buildPolynomial:(ILjava/util/List;Lorg/apache/commons/math3/analysis/polynomials/PolynomialsUtils$RecurrenceCoefficientsGenerator;)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
     119: areturn

  public static double[] shift(double[], double);
    Code:
       0: aload_0
       1: arraylength
       2: istore_3
       3: iload_3
       4: newarray       double
       6: astore        4
       8: iload_3
       9: iload_3
      10: multianewarray #30,  2            // class "[[I"
      14: astore        5
      16: iconst_0
      17: istore        6
      19: iload         6
      21: iload_3
      22: if_icmpge     63
      25: iconst_0
      26: istore        7
      28: iload         7
      30: iload         6
      32: if_icmpgt     57
      35: aload         5
      37: iload         6
      39: aaload
      40: iload         7
      42: iload         6
      44: iload         7
      46: invokestatic  #31                 // Method org/apache/commons/math3/util/CombinatoricsUtils.binomialCoefficient:(II)J
      49: l2i
      50: iastore
      51: iinc          7, 1
      54: goto          28
      57: iinc          6, 1
      60: goto          19
      63: iconst_0
      64: istore        6
      66: iload         6
      68: iload_3
      69: if_icmpge     96
      72: aload         4
      74: iconst_0
      75: dup2
      76: daload
      77: aload_0
      78: iload         6
      80: daload
      81: dload_1
      82: iload         6
      84: invokestatic  #32                 // Method org/apache/commons/math3/util/FastMath.pow:(DI)D
      87: dmul
      88: dadd
      89: dastore
      90: iinc          6, 1
      93: goto          66
      96: iload_3
      97: iconst_1
      98: isub
      99: istore        6
     101: iconst_0
     102: istore        7
     104: iload         7
     106: iload         6
     108: if_icmpge     175
     111: iload         7
     113: istore        8
     115: iload         8
     117: iload         6
     119: if_icmpge     169
     122: aload         4
     124: iload         7
     126: iconst_1
     127: iadd
     128: dup2
     129: daload
     130: aload         5
     132: iload         8
     134: iconst_1
     135: iadd
     136: aaload
     137: iload         8
     139: iload         7
     141: isub
     142: iaload
     143: i2d
     144: aload_0
     145: iload         8
     147: iconst_1
     148: iadd
     149: daload
     150: dmul
     151: dload_1
     152: iload         8
     154: iload         7
     156: isub
     157: invokestatic  #32                 // Method org/apache/commons/math3/util/FastMath.pow:(DI)D
     160: dmul
     161: dadd
     162: dastore
     163: iinc          8, 1
     166: goto          115
     169: iinc          7, 1
     172: goto          104
     175: aload         4
     177: areturn

  private static org.apache.commons.math3.analysis.polynomials.PolynomialFunction buildPolynomial(int, java.util.List<org.apache.commons.math3.fraction.BigFraction>, org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$RecurrenceCoefficientsGenerator);
    Code:
       0: aload_1
       1: dup
       2: astore_3
       3: monitorenter
       4: iconst_2
       5: aload_1
       6: invokeinterface #33,  1           // InterfaceMethod java/util/List.size:()I
      11: imul
      12: i2d
      13: invokestatic  #34                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      16: invokestatic  #35                 // Method org/apache/commons/math3/util/FastMath.floor:(D)D
      19: d2i
      20: iconst_1
      21: isub
      22: istore        4
      24: iload_0
      25: iload         4
      27: if_icmple     38
      30: iload_0
      31: iload         4
      33: aload_2
      34: aload_1
      35: invokestatic  #36                 // Method computeUpToDegree:(IILorg/apache/commons/math3/analysis/polynomials/PolynomialsUtils$RecurrenceCoefficientsGenerator;Ljava/util/List;)V
      38: aload_3
      39: monitorexit
      40: goto          50
      43: astore        5
      45: aload_3
      46: monitorexit
      47: aload         5
      49: athrow
      50: iload_0
      51: iload_0
      52: iconst_1
      53: iadd
      54: imul
      55: iconst_2
      56: idiv
      57: istore_3
      58: iload_0
      59: iconst_1
      60: iadd
      61: newarray       double
      63: astore        4
      65: iconst_0
      66: istore        5
      68: iload         5
      70: iload_0
      71: if_icmpgt     101
      74: aload         4
      76: iload         5
      78: aload_1
      79: iload_3
      80: iload         5
      82: iadd
      83: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      88: checkcast     #24                 // class org/apache/commons/math3/fraction/BigFraction
      91: invokevirtual #38                 // Method org/apache/commons/math3/fraction/BigFraction.doubleValue:()D
      94: dastore
      95: iinc          5, 1
      98: goto          68
     101: new           #39                 // class org/apache/commons/math3/analysis/polynomials/PolynomialFunction
     104: dup
     105: aload         4
     107: invokespecial #40                 // Method org/apache/commons/math3/analysis/polynomials/PolynomialFunction."<init>":([D)V
     110: areturn
    Exception table:
       from    to  target type
           4    40    43   any
          43    47    43   any

  private static void computeUpToDegree(int, int, org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$RecurrenceCoefficientsGenerator, java.util.List<org.apache.commons.math3.fraction.BigFraction>);
    Code:
       0: iload_1
       1: iconst_1
       2: isub
       3: iload_1
       4: imul
       5: iconst_2
       6: idiv
       7: istore        4
       9: iload_1
      10: istore        5
      12: iload         5
      14: iload_0
      15: if_icmpge     255
      18: iload         4
      20: istore        6
      22: iload         4
      24: iload         5
      26: iadd
      27: istore        4
      29: aload_2
      30: iload         5
      32: invokeinterface #41,  2           // InterfaceMethod org/apache/commons/math3/analysis/polynomials/PolynomialsUtils$RecurrenceCoefficientsGenerator.generate:(I)[Lorg/apache/commons/math3/fraction/BigFraction;
      37: astore        7
      39: aload_3
      40: iload         4
      42: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      47: checkcast     #24                 // class org/apache/commons/math3/fraction/BigFraction
      50: astore        8
      52: aload_3
      53: iload         6
      55: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      60: checkcast     #24                 // class org/apache/commons/math3/fraction/BigFraction
      63: astore        9
      65: aload_3
      66: aload         8
      68: aload         7
      70: iconst_0
      71: aaload
      72: invokevirtual #42                 // Method org/apache/commons/math3/fraction/BigFraction.multiply:(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;
      75: aload         9
      77: aload         7
      79: iconst_2
      80: aaload
      81: invokevirtual #42                 // Method org/apache/commons/math3/fraction/BigFraction.multiply:(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;
      84: invokevirtual #43                 // Method org/apache/commons/math3/fraction/BigFraction.subtract:(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;
      87: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      92: pop
      93: iconst_1
      94: istore        10
      96: iload         10
      98: iload         5
     100: if_icmpge     185
     103: aload         8
     105: astore        11
     107: aload_3
     108: iload         4
     110: iload         10
     112: iadd
     113: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     118: checkcast     #24                 // class org/apache/commons/math3/fraction/BigFraction
     121: astore        8
     123: aload_3
     124: iload         6
     126: iload         10
     128: iadd
     129: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     134: checkcast     #24                 // class org/apache/commons/math3/fraction/BigFraction
     137: astore        9
     139: aload_3
     140: aload         8
     142: aload         7
     144: iconst_0
     145: aaload
     146: invokevirtual #42                 // Method org/apache/commons/math3/fraction/BigFraction.multiply:(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;
     149: aload         11
     151: aload         7
     153: iconst_1
     154: aaload
     155: invokevirtual #42                 // Method org/apache/commons/math3/fraction/BigFraction.multiply:(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;
     158: invokevirtual #44                 // Method org/apache/commons/math3/fraction/BigFraction.add:(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;
     161: aload         9
     163: aload         7
     165: iconst_2
     166: aaload
     167: invokevirtual #42                 // Method org/apache/commons/math3/fraction/BigFraction.multiply:(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;
     170: invokevirtual #43                 // Method org/apache/commons/math3/fraction/BigFraction.subtract:(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;
     173: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     178: pop
     179: iinc          10, 1
     182: goto          96
     185: aload         8
     187: astore        10
     189: aload_3
     190: iload         4
     192: iload         5
     194: iadd
     195: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     200: checkcast     #24                 // class org/apache/commons/math3/fraction/BigFraction
     203: astore        8
     205: aload_3
     206: aload         8
     208: aload         7
     210: iconst_0
     211: aaload
     212: invokevirtual #42                 // Method org/apache/commons/math3/fraction/BigFraction.multiply:(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;
     215: aload         10
     217: aload         7
     219: iconst_1
     220: aaload
     221: invokevirtual #42                 // Method org/apache/commons/math3/fraction/BigFraction.multiply:(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;
     224: invokevirtual #44                 // Method org/apache/commons/math3/fraction/BigFraction.add:(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;
     227: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     232: pop
     233: aload_3
     234: aload         8
     236: aload         7
     238: iconst_1
     239: aaload
     240: invokevirtual #42                 // Method org/apache/commons/math3/fraction/BigFraction.multiply:(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;
     243: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     248: pop
     249: iinc          5, 1
     252: goto          12
     255: return

  static {};
    Code:
       0: new           #19                 // class java/util/ArrayList
       3: dup
       4: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
       7: putstatic     #2                  // Field CHEBYSHEV_COEFFICIENTS:Ljava/util/List;
      10: getstatic     #2                  // Field CHEBYSHEV_COEFFICIENTS:Ljava/util/List;
      13: getstatic     #22                 // Field org/apache/commons/math3/fraction/BigFraction.ONE:Lorg/apache/commons/math3/fraction/BigFraction;
      16: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: getstatic     #2                  // Field CHEBYSHEV_COEFFICIENTS:Ljava/util/List;
      25: getstatic     #45                 // Field org/apache/commons/math3/fraction/BigFraction.ZERO:Lorg/apache/commons/math3/fraction/BigFraction;
      28: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      33: pop
      34: getstatic     #2                  // Field CHEBYSHEV_COEFFICIENTS:Ljava/util/List;
      37: getstatic     #22                 // Field org/apache/commons/math3/fraction/BigFraction.ONE:Lorg/apache/commons/math3/fraction/BigFraction;
      40: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      45: pop
      46: new           #19                 // class java/util/ArrayList
      49: dup
      50: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
      53: putstatic     #6                  // Field HERMITE_COEFFICIENTS:Ljava/util/List;
      56: getstatic     #6                  // Field HERMITE_COEFFICIENTS:Ljava/util/List;
      59: getstatic     #22                 // Field org/apache/commons/math3/fraction/BigFraction.ONE:Lorg/apache/commons/math3/fraction/BigFraction;
      62: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      67: pop
      68: getstatic     #6                  // Field HERMITE_COEFFICIENTS:Ljava/util/List;
      71: getstatic     #45                 // Field org/apache/commons/math3/fraction/BigFraction.ZERO:Lorg/apache/commons/math3/fraction/BigFraction;
      74: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      79: pop
      80: getstatic     #6                  // Field HERMITE_COEFFICIENTS:Ljava/util/List;
      83: getstatic     #46                 // Field org/apache/commons/math3/fraction/BigFraction.TWO:Lorg/apache/commons/math3/fraction/BigFraction;
      86: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      91: pop
      92: new           #19                 // class java/util/ArrayList
      95: dup
      96: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
      99: putstatic     #9                  // Field LAGUERRE_COEFFICIENTS:Ljava/util/List;
     102: getstatic     #9                  // Field LAGUERRE_COEFFICIENTS:Ljava/util/List;
     105: getstatic     #22                 // Field org/apache/commons/math3/fraction/BigFraction.ONE:Lorg/apache/commons/math3/fraction/BigFraction;
     108: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     113: pop
     114: getstatic     #9                  // Field LAGUERRE_COEFFICIENTS:Ljava/util/List;
     117: getstatic     #22                 // Field org/apache/commons/math3/fraction/BigFraction.ONE:Lorg/apache/commons/math3/fraction/BigFraction;
     120: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     125: pop
     126: getstatic     #9                  // Field LAGUERRE_COEFFICIENTS:Ljava/util/List;
     129: getstatic     #47                 // Field org/apache/commons/math3/fraction/BigFraction.MINUS_ONE:Lorg/apache/commons/math3/fraction/BigFraction;
     132: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     137: pop
     138: new           #19                 // class java/util/ArrayList
     141: dup
     142: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
     145: putstatic     #12                 // Field LEGENDRE_COEFFICIENTS:Ljava/util/List;
     148: getstatic     #12                 // Field LEGENDRE_COEFFICIENTS:Ljava/util/List;
     151: getstatic     #22                 // Field org/apache/commons/math3/fraction/BigFraction.ONE:Lorg/apache/commons/math3/fraction/BigFraction;
     154: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     159: pop
     160: getstatic     #12                 // Field LEGENDRE_COEFFICIENTS:Ljava/util/List;
     163: getstatic     #45                 // Field org/apache/commons/math3/fraction/BigFraction.ZERO:Lorg/apache/commons/math3/fraction/BigFraction;
     166: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     171: pop
     172: getstatic     #12                 // Field LEGENDRE_COEFFICIENTS:Ljava/util/List;
     175: getstatic     #22                 // Field org/apache/commons/math3/fraction/BigFraction.ONE:Lorg/apache/commons/math3/fraction/BigFraction;
     178: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     183: pop
     184: new           #48                 // class java/util/HashMap
     187: dup
     188: invokespecial #49                 // Method java/util/HashMap."<init>":()V
     191: putstatic     #17                 // Field JACOBI_COEFFICIENTS:Ljava/util/Map;
     194: return
}
