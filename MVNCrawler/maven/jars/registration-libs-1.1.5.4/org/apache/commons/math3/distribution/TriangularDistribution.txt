Compiled from "TriangularDistribution.java"
public class org.apache.commons.math3.distribution.TriangularDistribution extends org.apache.commons.math3.distribution.AbstractRealDistribution {
  private static final long serialVersionUID;

  private final double a;

  private final double b;

  private final double c;

  private final double solverAbsoluteAccuracy;

  public org.apache.commons.math3.distribution.TriangularDistribution(double, double, double) throws org.apache.commons.math3.exception.NumberIsTooLargeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: new           #1                  // class org/apache/commons/math3/random/Well19937c
       4: dup
       5: invokespecial #2                  // Method org/apache/commons/math3/random/Well19937c."<init>":()V
       8: dload_1
       9: dload_3
      10: dload         5
      12: invokespecial #3                  // Method "<init>":(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
      15: return

  public org.apache.commons.math3.distribution.TriangularDistribution(org.apache.commons.math3.random.RandomGenerator, double, double, double) throws org.apache.commons.math3.exception.NumberIsTooLargeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method org/apache/commons/math3/distribution/AbstractRealDistribution."<init>":(Lorg/apache/commons/math3/random/RandomGenerator;)V
       5: dload_2
       6: dload         6
       8: dcmpl
       9: iflt          33
      12: new           #5                  // class org/apache/commons/math3/exception/NumberIsTooLargeException
      15: dup
      16: getstatic     #6                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      19: dload_2
      20: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      23: dload         6
      25: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      28: iconst_0
      29: invokespecial #8                  // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      32: athrow
      33: dload         4
      35: dload_2
      36: dcmpg
      37: ifge          61
      40: new           #9                  // class org/apache/commons/math3/exception/NumberIsTooSmallException
      43: dup
      44: getstatic     #10                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.NUMBER_TOO_SMALL:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      47: dload         4
      49: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      52: dload_2
      53: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      56: iconst_1
      57: invokespecial #11                 // Method org/apache/commons/math3/exception/NumberIsTooSmallException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      60: athrow
      61: dload         4
      63: dload         6
      65: dcmpl
      66: ifle          91
      69: new           #5                  // class org/apache/commons/math3/exception/NumberIsTooLargeException
      72: dup
      73: getstatic     #12                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.NUMBER_TOO_LARGE:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      76: dload         4
      78: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      81: dload         6
      83: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      86: iconst_1
      87: invokespecial #8                  // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      90: athrow
      91: aload_0
      92: dload_2
      93: putfield      #13                 // Field a:D
      96: aload_0
      97: dload         4
      99: putfield      #14                 // Field c:D
     102: aload_0
     103: dload         6
     105: putfield      #15                 // Field b:D
     108: aload_0
     109: dload_2
     110: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.ulp:(D)D
     113: dload         6
     115: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.ulp:(D)D
     118: invokestatic  #17                 // Method org/apache/commons/math3/util/FastMath.max:(DD)D
     121: putfield      #18                 // Field solverAbsoluteAccuracy:D
     124: return

  public double getMode();
    Code:
       0: aload_0
       1: getfield      #14                 // Field c:D
       4: dreturn

  protected double getSolverAbsoluteAccuracy();
    Code:
       0: aload_0
       1: getfield      #18                 // Field solverAbsoluteAccuracy:D
       4: dreturn

  public double density(double);
    Code:
       0: dload_1
       1: aload_0
       2: getfield      #13                 // Field a:D
       5: dcmpg
       6: ifge          11
       9: dconst_0
      10: dreturn
      11: aload_0
      12: getfield      #13                 // Field a:D
      15: dload_1
      16: dcmpg
      17: ifgt          66
      20: dload_1
      21: aload_0
      22: getfield      #14                 // Field c:D
      25: dcmpg
      26: ifge          66
      29: ldc2_w        #19                 // double 2.0d
      32: dload_1
      33: aload_0
      34: getfield      #13                 // Field a:D
      37: dsub
      38: dmul
      39: dstore_3
      40: aload_0
      41: getfield      #15                 // Field b:D
      44: aload_0
      45: getfield      #13                 // Field a:D
      48: dsub
      49: aload_0
      50: getfield      #14                 // Field c:D
      53: aload_0
      54: getfield      #13                 // Field a:D
      57: dsub
      58: dmul
      59: dstore        5
      61: dload_3
      62: dload         5
      64: ddiv
      65: dreturn
      66: dload_1
      67: aload_0
      68: getfield      #14                 // Field c:D
      71: dcmpl
      72: ifne          89
      75: ldc2_w        #19                 // double 2.0d
      78: aload_0
      79: getfield      #15                 // Field b:D
      82: aload_0
      83: getfield      #13                 // Field a:D
      86: dsub
      87: ddiv
      88: dreturn
      89: aload_0
      90: getfield      #14                 // Field c:D
      93: dload_1
      94: dcmpg
      95: ifge          144
      98: dload_1
      99: aload_0
     100: getfield      #15                 // Field b:D
     103: dcmpg
     104: ifgt          144
     107: ldc2_w        #19                 // double 2.0d
     110: aload_0
     111: getfield      #15                 // Field b:D
     114: dload_1
     115: dsub
     116: dmul
     117: dstore_3
     118: aload_0
     119: getfield      #15                 // Field b:D
     122: aload_0
     123: getfield      #13                 // Field a:D
     126: dsub
     127: aload_0
     128: getfield      #15                 // Field b:D
     131: aload_0
     132: getfield      #14                 // Field c:D
     135: dsub
     136: dmul
     137: dstore        5
     139: dload_3
     140: dload         5
     142: ddiv
     143: dreturn
     144: dconst_0
     145: dreturn

  public double cumulativeProbability(double);
    Code:
       0: dload_1
       1: aload_0
       2: getfield      #13                 // Field a:D
       5: dcmpg
       6: ifge          11
       9: dconst_0
      10: dreturn
      11: aload_0
      12: getfield      #13                 // Field a:D
      15: dload_1
      16: dcmpg
      17: ifgt          69
      20: dload_1
      21: aload_0
      22: getfield      #14                 // Field c:D
      25: dcmpg
      26: ifge          69
      29: dload_1
      30: aload_0
      31: getfield      #13                 // Field a:D
      34: dsub
      35: dload_1
      36: aload_0
      37: getfield      #13                 // Field a:D
      40: dsub
      41: dmul
      42: dstore_3
      43: aload_0
      44: getfield      #15                 // Field b:D
      47: aload_0
      48: getfield      #13                 // Field a:D
      51: dsub
      52: aload_0
      53: getfield      #14                 // Field c:D
      56: aload_0
      57: getfield      #13                 // Field a:D
      60: dsub
      61: dmul
      62: dstore        5
      64: dload_3
      65: dload         5
      67: ddiv
      68: dreturn
      69: dload_1
      70: aload_0
      71: getfield      #14                 // Field c:D
      74: dcmpl
      75: ifne          98
      78: aload_0
      79: getfield      #14                 // Field c:D
      82: aload_0
      83: getfield      #13                 // Field a:D
      86: dsub
      87: aload_0
      88: getfield      #15                 // Field b:D
      91: aload_0
      92: getfield      #13                 // Field a:D
      95: dsub
      96: ddiv
      97: dreturn
      98: aload_0
      99: getfield      #14                 // Field c:D
     102: dload_1
     103: dcmpg
     104: ifge          158
     107: dload_1
     108: aload_0
     109: getfield      #15                 // Field b:D
     112: dcmpg
     113: ifgt          158
     116: aload_0
     117: getfield      #15                 // Field b:D
     120: dload_1
     121: dsub
     122: aload_0
     123: getfield      #15                 // Field b:D
     126: dload_1
     127: dsub
     128: dmul
     129: dstore_3
     130: aload_0
     131: getfield      #15                 // Field b:D
     134: aload_0
     135: getfield      #13                 // Field a:D
     138: dsub
     139: aload_0
     140: getfield      #15                 // Field b:D
     143: aload_0
     144: getfield      #14                 // Field c:D
     147: dsub
     148: dmul
     149: dstore        5
     151: dconst_1
     152: dload_3
     153: dload         5
     155: ddiv
     156: dsub
     157: dreturn
     158: dconst_1
     159: dreturn

  public double getNumericalMean();
    Code:
       0: aload_0
       1: getfield      #13                 // Field a:D
       4: aload_0
       5: getfield      #15                 // Field b:D
       8: dadd
       9: aload_0
      10: getfield      #14                 // Field c:D
      13: dadd
      14: ldc2_w        #21                 // double 3.0d
      17: ddiv
      18: dreturn

  public double getNumericalVariance();
    Code:
       0: aload_0
       1: getfield      #13                 // Field a:D
       4: aload_0
       5: getfield      #13                 // Field a:D
       8: dmul
       9: aload_0
      10: getfield      #15                 // Field b:D
      13: aload_0
      14: getfield      #15                 // Field b:D
      17: dmul
      18: dadd
      19: aload_0
      20: getfield      #14                 // Field c:D
      23: aload_0
      24: getfield      #14                 // Field c:D
      27: dmul
      28: dadd
      29: aload_0
      30: getfield      #13                 // Field a:D
      33: aload_0
      34: getfield      #15                 // Field b:D
      37: dmul
      38: dsub
      39: aload_0
      40: getfield      #13                 // Field a:D
      43: aload_0
      44: getfield      #14                 // Field c:D
      47: dmul
      48: dsub
      49: aload_0
      50: getfield      #15                 // Field b:D
      53: aload_0
      54: getfield      #14                 // Field c:D
      57: dmul
      58: dsub
      59: ldc2_w        #23                 // double 18.0d
      62: ddiv
      63: dreturn

  public double getSupportLowerBound();
    Code:
       0: aload_0
       1: getfield      #13                 // Field a:D
       4: dreturn

  public double getSupportUpperBound();
    Code:
       0: aload_0
       1: getfield      #15                 // Field b:D
       4: dreturn

  public boolean isSupportLowerBoundInclusive();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isSupportUpperBoundInclusive();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isSupportConnected();
    Code:
       0: iconst_1
       1: ireturn

  public double inverseCumulativeProbability(double) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: dload_1
       1: dconst_0
       2: dcmpg
       3: iflt          12
       6: dload_1
       7: dconst_1
       8: dcmpl
       9: ifle          32
      12: new           #25                 // class org/apache/commons/math3/exception/OutOfRangeException
      15: dup
      16: dload_1
      17: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      20: iconst_0
      21: invokestatic  #26                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      24: iconst_1
      25: invokestatic  #26                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: invokespecial #27                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      31: athrow
      32: dload_1
      33: dconst_0
      34: dcmpl
      35: ifne          43
      38: aload_0
      39: getfield      #13                 // Field a:D
      42: dreturn
      43: dload_1
      44: dconst_1
      45: dcmpl
      46: ifne          54
      49: aload_0
      50: getfield      #15                 // Field b:D
      53: dreturn
      54: dload_1
      55: aload_0
      56: getfield      #14                 // Field c:D
      59: aload_0
      60: getfield      #13                 // Field a:D
      63: dsub
      64: aload_0
      65: getfield      #15                 // Field b:D
      68: aload_0
      69: getfield      #13                 // Field a:D
      72: dsub
      73: ddiv
      74: dcmpg
      75: ifge          108
      78: aload_0
      79: getfield      #13                 // Field a:D
      82: dload_1
      83: aload_0
      84: getfield      #15                 // Field b:D
      87: aload_0
      88: getfield      #13                 // Field a:D
      91: dsub
      92: dmul
      93: aload_0
      94: getfield      #14                 // Field c:D
      97: aload_0
      98: getfield      #13                 // Field a:D
     101: dsub
     102: dmul
     103: invokestatic  #28                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
     106: dadd
     107: dreturn
     108: aload_0
     109: getfield      #15                 // Field b:D
     112: dconst_1
     113: dload_1
     114: dsub
     115: aload_0
     116: getfield      #15                 // Field b:D
     119: aload_0
     120: getfield      #13                 // Field a:D
     123: dsub
     124: dmul
     125: aload_0
     126: getfield      #15                 // Field b:D
     129: aload_0
     130: getfield      #14                 // Field c:D
     133: dsub
     134: dmul
     135: invokestatic  #28                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
     138: dsub
     139: dreturn
}
