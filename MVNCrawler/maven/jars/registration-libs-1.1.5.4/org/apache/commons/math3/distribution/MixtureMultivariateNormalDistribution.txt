Compiled from "MixtureMultivariateNormalDistribution.java"
public class org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution extends org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution<org.apache.commons.math3.distribution.MultivariateNormalDistribution> {
  public org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution(double[], double[][], double[][][]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1                  // Method createComponents:([D[[D[[[D)Ljava/util/List;
       7: invokespecial #2                  // Method org/apache/commons/math3/distribution/MixtureMultivariateRealDistribution."<init>":(Ljava/util/List;)V
      10: return

  public org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution(java.util.List<org.apache.commons.math3.util.Pair<java.lang.Double, org.apache.commons.math3.distribution.MultivariateNormalDistribution>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/apache/commons/math3/distribution/MixtureMultivariateRealDistribution."<init>":(Ljava/util/List;)V
       5: return

  public org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution(org.apache.commons.math3.random.RandomGenerator, java.util.List<org.apache.commons.math3.util.Pair<java.lang.Double, org.apache.commons.math3.distribution.MultivariateNormalDistribution>>) throws org.apache.commons.math3.exception.NotPositiveException, org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #3                  // Method org/apache/commons/math3/distribution/MixtureMultivariateRealDistribution."<init>":(Lorg/apache/commons/math3/random/RandomGenerator;Ljava/util/List;)V
       6: return

  private static java.util.List<org.apache.commons.math3.util.Pair<java.lang.Double, org.apache.commons.math3.distribution.MultivariateNormalDistribution>> createComponents(double[], double[][], double[][][]);
    Code:
       0: new           #4                  // class java/util/ArrayList
       3: dup
       4: aload_0
       5: arraylength
       6: invokespecial #5                  // Method java/util/ArrayList."<init>":(I)V
       9: astore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: aload_0
      16: arraylength
      17: if_icmpge     66
      20: new           #6                  // class org/apache/commons/math3/distribution/MultivariateNormalDistribution
      23: dup
      24: aload_1
      25: iload         4
      27: aaload
      28: aload_2
      29: iload         4
      31: aaload
      32: invokespecial #7                  // Method org/apache/commons/math3/distribution/MultivariateNormalDistribution."<init>":([D[[D)V
      35: astore        5
      37: aload_3
      38: new           #8                  // class org/apache/commons/math3/util/Pair
      41: dup
      42: aload_0
      43: iload         4
      45: daload
      46: invokestatic  #9                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      49: aload         5
      51: invokespecial #10                 // Method org/apache/commons/math3/util/Pair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      54: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      59: pop
      60: iinc          4, 1
      63: goto          13
      66: aload_3
      67: areturn
}
