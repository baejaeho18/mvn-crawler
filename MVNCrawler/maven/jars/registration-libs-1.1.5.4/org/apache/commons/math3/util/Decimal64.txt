Compiled from "Decimal64.java"
public class org.apache.commons.math3.util.Decimal64 extends java.lang.Number implements org.apache.commons.math3.RealFieldElement<org.apache.commons.math3.util.Decimal64>, java.lang.Comparable<org.apache.commons.math3.util.Decimal64> {
  public static final org.apache.commons.math3.util.Decimal64 ZERO;

  public static final org.apache.commons.math3.util.Decimal64 ONE;

  public static final org.apache.commons.math3.util.Decimal64 NEGATIVE_INFINITY;

  public static final org.apache.commons.math3.util.Decimal64 POSITIVE_INFINITY;

  public static final org.apache.commons.math3.util.Decimal64 NAN;

  private static final long serialVersionUID;

  private final double value;

  public org.apache.commons.math3.util.Decimal64(double);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Number."<init>":()V
       4: aload_0
       5: dload_1
       6: putfield      #2                  // Field value:D
       9: return

  public org.apache.commons.math3.Field<org.apache.commons.math3.util.Decimal64> getField();
    Code:
       0: invokestatic  #3                  // Method org/apache/commons/math3/util/Decimal64Field.getInstance:()Lorg/apache/commons/math3/util/Decimal64Field;
       3: areturn

  public org.apache.commons.math3.util.Decimal64 add(org.apache.commons.math3.util.Decimal64);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: aload_1
       9: getfield      #2                  // Field value:D
      12: dadd
      13: invokespecial #5                  // Method "<init>":(D)V
      16: areturn

  public org.apache.commons.math3.util.Decimal64 subtract(org.apache.commons.math3.util.Decimal64);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: aload_1
       9: getfield      #2                  // Field value:D
      12: dsub
      13: invokespecial #5                  // Method "<init>":(D)V
      16: areturn

  public org.apache.commons.math3.util.Decimal64 negate();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: dneg
       9: invokespecial #5                  // Method "<init>":(D)V
      12: areturn

  public org.apache.commons.math3.util.Decimal64 multiply(org.apache.commons.math3.util.Decimal64);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: aload_1
       9: getfield      #2                  // Field value:D
      12: dmul
      13: invokespecial #5                  // Method "<init>":(D)V
      16: areturn

  public org.apache.commons.math3.util.Decimal64 multiply(int);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: iload_1
       5: i2d
       6: aload_0
       7: getfield      #2                  // Field value:D
      10: dmul
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 divide(org.apache.commons.math3.util.Decimal64);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: aload_1
       9: getfield      #2                  // Field value:D
      12: ddiv
      13: invokespecial #5                  // Method "<init>":(D)V
      16: areturn

  public org.apache.commons.math3.util.Decimal64 reciprocal();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: dconst_1
       5: aload_0
       6: getfield      #2                  // Field value:D
       9: ddiv
      10: invokespecial #5                  // Method "<init>":(D)V
      13: areturn

  public byte byteValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: d2i
       5: i2b
       6: ireturn

  public short shortValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: d2i
       5: i2s
       6: ireturn

  public int intValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: d2i
       5: ireturn

  public long longValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: d2l
       5: lreturn

  public float floatValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: d2f
       5: freturn

  public double doubleValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: dreturn

  public int compareTo(org.apache.commons.math3.util.Decimal64);
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: aload_1
       5: getfield      #2                  // Field value:D
       8: invokestatic  #6                  // Method java/lang/Double.compare:(DD)I
      11: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #4                  // class org/apache/commons/math3/util/Decimal64
       4: ifeq          36
       7: aload_1
       8: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
      11: astore_2
      12: aload_0
      13: getfield      #2                  // Field value:D
      16: invokestatic  #7                  // Method java/lang/Double.doubleToLongBits:(D)J
      19: aload_2
      20: getfield      #2                  // Field value:D
      23: invokestatic  #7                  // Method java/lang/Double.doubleToLongBits:(D)J
      26: lcmp
      27: ifne          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn
      36: iconst_0
      37: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: invokestatic  #7                  // Method java/lang/Double.doubleToLongBits:(D)J
       7: lstore_1
       8: lload_1
       9: lload_1
      10: bipush        32
      12: lushr
      13: lxor
      14: l2i
      15: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: invokestatic  #8                  // Method java/lang/Double.toString:(D)Ljava/lang/String;
       7: areturn

  public boolean isInfinite();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: invokestatic  #9                  // Method java/lang/Double.isInfinite:(D)Z
       7: ireturn

  public boolean isNaN();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: invokestatic  #10                 // Method java/lang/Double.isNaN:(D)Z
       7: ireturn

  public double getReal();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: dreturn

  public org.apache.commons.math3.util.Decimal64 add(double);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: dload_1
       9: dadd
      10: invokespecial #5                  // Method "<init>":(D)V
      13: areturn

  public org.apache.commons.math3.util.Decimal64 subtract(double);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: dload_1
       9: dsub
      10: invokespecial #5                  // Method "<init>":(D)V
      13: areturn

  public org.apache.commons.math3.util.Decimal64 multiply(double);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: dload_1
       9: dmul
      10: invokespecial #5                  // Method "<init>":(D)V
      13: areturn

  public org.apache.commons.math3.util.Decimal64 divide(double);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: dload_1
       9: ddiv
      10: invokespecial #5                  // Method "<init>":(D)V
      13: areturn

  public org.apache.commons.math3.util.Decimal64 remainder(double);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: dload_1
       9: invokestatic  #11                 // Method org/apache/commons/math3/util/FastMath.IEEEremainder:(DD)D
      12: invokespecial #5                  // Method "<init>":(D)V
      15: areturn

  public org.apache.commons.math3.util.Decimal64 remainder(org.apache.commons.math3.util.Decimal64);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: aload_1
       9: getfield      #2                  // Field value:D
      12: invokestatic  #11                 // Method org/apache/commons/math3/util/FastMath.IEEEremainder:(DD)D
      15: invokespecial #5                  // Method "<init>":(D)V
      18: areturn

  public org.apache.commons.math3.util.Decimal64 abs();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #12                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 ceil();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #13                 // Method org/apache/commons/math3/util/FastMath.ceil:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 floor();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #14                 // Method org/apache/commons/math3/util/FastMath.floor:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 rint();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #15                 // Method org/apache/commons/math3/util/FastMath.rint:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public long round();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: invokestatic  #16                 // Method org/apache/commons/math3/util/FastMath.round:(D)J
       7: lreturn

  public org.apache.commons.math3.util.Decimal64 signum();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #17                 // Method org/apache/commons/math3/util/FastMath.signum:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 copySign(org.apache.commons.math3.util.Decimal64);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: aload_1
       9: getfield      #2                  // Field value:D
      12: invokestatic  #18                 // Method org/apache/commons/math3/util/FastMath.copySign:(DD)D
      15: invokespecial #5                  // Method "<init>":(D)V
      18: areturn

  public org.apache.commons.math3.util.Decimal64 copySign(double);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: dload_1
       9: invokestatic  #18                 // Method org/apache/commons/math3/util/FastMath.copySign:(DD)D
      12: invokespecial #5                  // Method "<init>":(D)V
      15: areturn

  public org.apache.commons.math3.util.Decimal64 scalb(int);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: iload_1
       9: invokestatic  #19                 // Method org/apache/commons/math3/util/FastMath.scalb:(DI)D
      12: invokespecial #5                  // Method "<init>":(D)V
      15: areturn

  public org.apache.commons.math3.util.Decimal64 hypot(org.apache.commons.math3.util.Decimal64);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: aload_1
       9: getfield      #2                  // Field value:D
      12: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.hypot:(DD)D
      15: invokespecial #5                  // Method "<init>":(D)V
      18: areturn

  public org.apache.commons.math3.util.Decimal64 sqrt();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #21                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 cbrt();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #22                 // Method org/apache/commons/math3/util/FastMath.cbrt:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 rootN(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:D
       4: dconst_0
       5: dcmpg
       6: ifge          30
       9: new           #4                  // class org/apache/commons/math3/util/Decimal64
      12: dup
      13: aload_0
      14: getfield      #2                  // Field value:D
      17: dneg
      18: dconst_1
      19: iload_1
      20: i2d
      21: ddiv
      22: invokestatic  #23                 // Method org/apache/commons/math3/util/FastMath.pow:(DD)D
      25: dneg
      26: invokespecial #5                  // Method "<init>":(D)V
      29: areturn
      30: new           #4                  // class org/apache/commons/math3/util/Decimal64
      33: dup
      34: aload_0
      35: getfield      #2                  // Field value:D
      38: dconst_1
      39: iload_1
      40: i2d
      41: ddiv
      42: invokestatic  #23                 // Method org/apache/commons/math3/util/FastMath.pow:(DD)D
      45: invokespecial #5                  // Method "<init>":(D)V
      48: areturn

  public org.apache.commons.math3.util.Decimal64 pow(double);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: dload_1
       9: invokestatic  #23                 // Method org/apache/commons/math3/util/FastMath.pow:(DD)D
      12: invokespecial #5                  // Method "<init>":(D)V
      15: areturn

  public org.apache.commons.math3.util.Decimal64 pow(int);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: iload_1
       9: invokestatic  #24                 // Method org/apache/commons/math3/util/FastMath.pow:(DI)D
      12: invokespecial #5                  // Method "<init>":(D)V
      15: areturn

  public org.apache.commons.math3.util.Decimal64 pow(org.apache.commons.math3.util.Decimal64);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: aload_1
       9: getfield      #2                  // Field value:D
      12: invokestatic  #23                 // Method org/apache/commons/math3/util/FastMath.pow:(DD)D
      15: invokespecial #5                  // Method "<init>":(D)V
      18: areturn

  public org.apache.commons.math3.util.Decimal64 exp();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #25                 // Method org/apache/commons/math3/util/FastMath.exp:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 expm1();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #26                 // Method org/apache/commons/math3/util/FastMath.expm1:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 log();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #27                 // Method org/apache/commons/math3/util/FastMath.log:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 log1p();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #28                 // Method org/apache/commons/math3/util/FastMath.log1p:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 log10();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #29                 // Method org/apache/commons/math3/util/FastMath.log10:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 cos();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #30                 // Method org/apache/commons/math3/util/FastMath.cos:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 sin();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #31                 // Method org/apache/commons/math3/util/FastMath.sin:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 tan();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #32                 // Method org/apache/commons/math3/util/FastMath.tan:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 acos();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #33                 // Method org/apache/commons/math3/util/FastMath.acos:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 asin();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #34                 // Method org/apache/commons/math3/util/FastMath.asin:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 atan();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #35                 // Method org/apache/commons/math3/util/FastMath.atan:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 atan2(org.apache.commons.math3.util.Decimal64);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: aload_1
       9: getfield      #2                  // Field value:D
      12: invokestatic  #36                 // Method org/apache/commons/math3/util/FastMath.atan2:(DD)D
      15: invokespecial #5                  // Method "<init>":(D)V
      18: areturn

  public org.apache.commons.math3.util.Decimal64 cosh();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #37                 // Method org/apache/commons/math3/util/FastMath.cosh:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 sinh();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #38                 // Method org/apache/commons/math3/util/FastMath.sinh:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 tanh();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #39                 // Method org/apache/commons/math3/util/FastMath.tanh:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 acosh();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #40                 // Method org/apache/commons/math3/util/FastMath.acosh:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 asinh();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #41                 // Method org/apache/commons/math3/util/FastMath.asinh:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 atanh();
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:D
       8: invokestatic  #42                 // Method org/apache/commons/math3/util/FastMath.atanh:(D)D
      11: invokespecial #5                  // Method "<init>":(D)V
      14: areturn

  public org.apache.commons.math3.util.Decimal64 linearCombination(org.apache.commons.math3.util.Decimal64[], org.apache.commons.math3.util.Decimal64[]) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_1
       1: arraylength
       2: aload_2
       3: arraylength
       4: if_icmpeq     19
       7: new           #43                 // class org/apache/commons/math3/exception/DimensionMismatchException
      10: dup
      11: aload_1
      12: arraylength
      13: aload_2
      14: arraylength
      15: invokespecial #44                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      18: athrow
      19: aload_1
      20: arraylength
      21: newarray       double
      23: astore_3
      24: aload_2
      25: arraylength
      26: newarray       double
      28: astore        4
      30: iconst_0
      31: istore        5
      33: iload         5
      35: aload_1
      36: arraylength
      37: if_icmpge     69
      40: aload_3
      41: iload         5
      43: aload_1
      44: iload         5
      46: aaload
      47: getfield      #2                  // Field value:D
      50: dastore
      51: aload         4
      53: iload         5
      55: aload_2
      56: iload         5
      58: aaload
      59: getfield      #2                  // Field value:D
      62: dastore
      63: iinc          5, 1
      66: goto          33
      69: new           #4                  // class org/apache/commons/math3/util/Decimal64
      72: dup
      73: aload_3
      74: aload         4
      76: invokestatic  #45                 // Method org/apache/commons/math3/util/MathArrays.linearCombination:([D[D)D
      79: invokespecial #5                  // Method "<init>":(D)V
      82: areturn

  public org.apache.commons.math3.util.Decimal64 linearCombination(double[], org.apache.commons.math3.util.Decimal64[]) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_1
       1: arraylength
       2: aload_2
       3: arraylength
       4: if_icmpeq     19
       7: new           #43                 // class org/apache/commons/math3/exception/DimensionMismatchException
      10: dup
      11: aload_1
      12: arraylength
      13: aload_2
      14: arraylength
      15: invokespecial #44                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      18: athrow
      19: aload_2
      20: arraylength
      21: newarray       double
      23: astore_3
      24: iconst_0
      25: istore        4
      27: iload         4
      29: aload_1
      30: arraylength
      31: if_icmpge     51
      34: aload_3
      35: iload         4
      37: aload_2
      38: iload         4
      40: aaload
      41: getfield      #2                  // Field value:D
      44: dastore
      45: iinc          4, 1
      48: goto          27
      51: new           #4                  // class org/apache/commons/math3/util/Decimal64
      54: dup
      55: aload_1
      56: aload_3
      57: invokestatic  #45                 // Method org/apache/commons/math3/util/MathArrays.linearCombination:([D[D)D
      60: invokespecial #5                  // Method "<init>":(D)V
      63: areturn

  public org.apache.commons.math3.util.Decimal64 linearCombination(org.apache.commons.math3.util.Decimal64, org.apache.commons.math3.util.Decimal64, org.apache.commons.math3.util.Decimal64, org.apache.commons.math3.util.Decimal64);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_1
       5: getfield      #2                  // Field value:D
       8: aload_2
       9: getfield      #2                  // Field value:D
      12: aload_3
      13: getfield      #2                  // Field value:D
      16: aload         4
      18: getfield      #2                  // Field value:D
      21: invokestatic  #46                 // Method org/apache/commons/math3/util/MathArrays.linearCombination:(DDDD)D
      24: invokespecial #5                  // Method "<init>":(D)V
      27: areturn

  public org.apache.commons.math3.util.Decimal64 linearCombination(double, org.apache.commons.math3.util.Decimal64, double, org.apache.commons.math3.util.Decimal64);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: dload_1
       5: aload_3
       6: getfield      #2                  // Field value:D
       9: dload         4
      11: aload         6
      13: getfield      #2                  // Field value:D
      16: invokestatic  #46                 // Method org/apache/commons/math3/util/MathArrays.linearCombination:(DDDD)D
      19: invokespecial #5                  // Method "<init>":(D)V
      22: areturn

  public org.apache.commons.math3.util.Decimal64 linearCombination(org.apache.commons.math3.util.Decimal64, org.apache.commons.math3.util.Decimal64, org.apache.commons.math3.util.Decimal64, org.apache.commons.math3.util.Decimal64, org.apache.commons.math3.util.Decimal64, org.apache.commons.math3.util.Decimal64);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_1
       5: getfield      #2                  // Field value:D
       8: aload_2
       9: getfield      #2                  // Field value:D
      12: aload_3
      13: getfield      #2                  // Field value:D
      16: aload         4
      18: getfield      #2                  // Field value:D
      21: aload         5
      23: getfield      #2                  // Field value:D
      26: aload         6
      28: getfield      #2                  // Field value:D
      31: invokestatic  #47                 // Method org/apache/commons/math3/util/MathArrays.linearCombination:(DDDDDD)D
      34: invokespecial #5                  // Method "<init>":(D)V
      37: areturn

  public org.apache.commons.math3.util.Decimal64 linearCombination(double, org.apache.commons.math3.util.Decimal64, double, org.apache.commons.math3.util.Decimal64, double, org.apache.commons.math3.util.Decimal64);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: dload_1
       5: aload_3
       6: getfield      #2                  // Field value:D
       9: dload         4
      11: aload         6
      13: getfield      #2                  // Field value:D
      16: dload         7
      18: aload         9
      20: getfield      #2                  // Field value:D
      23: invokestatic  #47                 // Method org/apache/commons/math3/util/MathArrays.linearCombination:(DDDDDD)D
      26: invokespecial #5                  // Method "<init>":(D)V
      29: areturn

  public org.apache.commons.math3.util.Decimal64 linearCombination(org.apache.commons.math3.util.Decimal64, org.apache.commons.math3.util.Decimal64, org.apache.commons.math3.util.Decimal64, org.apache.commons.math3.util.Decimal64, org.apache.commons.math3.util.Decimal64, org.apache.commons.math3.util.Decimal64, org.apache.commons.math3.util.Decimal64, org.apache.commons.math3.util.Decimal64);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: aload_1
       5: getfield      #2                  // Field value:D
       8: aload_2
       9: getfield      #2                  // Field value:D
      12: aload_3
      13: getfield      #2                  // Field value:D
      16: aload         4
      18: getfield      #2                  // Field value:D
      21: aload         5
      23: getfield      #2                  // Field value:D
      26: aload         6
      28: getfield      #2                  // Field value:D
      31: aload         7
      33: getfield      #2                  // Field value:D
      36: aload         8
      38: getfield      #2                  // Field value:D
      41: invokestatic  #48                 // Method org/apache/commons/math3/util/MathArrays.linearCombination:(DDDDDDDD)D
      44: invokespecial #5                  // Method "<init>":(D)V
      47: areturn

  public org.apache.commons.math3.util.Decimal64 linearCombination(double, org.apache.commons.math3.util.Decimal64, double, org.apache.commons.math3.util.Decimal64, double, org.apache.commons.math3.util.Decimal64, double, org.apache.commons.math3.util.Decimal64);
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: dload_1
       5: aload_3
       6: getfield      #2                  // Field value:D
       9: dload         4
      11: aload         6
      13: getfield      #2                  // Field value:D
      16: dload         7
      18: aload         9
      20: getfield      #2                  // Field value:D
      23: dload         10
      25: aload         12
      27: getfield      #2                  // Field value:D
      30: invokestatic  #48                 // Method org/apache/commons/math3/util/MathArrays.linearCombination:(DDDDDDDD)D
      33: invokespecial #5                  // Method "<init>":(D)V
      36: areturn

  public java.lang.Object linearCombination(double, java.lang.Object, double, java.lang.Object, double, java.lang.Object, double, java.lang.Object);
    Code:
       0: aload_0
       1: dload_1
       2: aload_3
       3: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
       6: dload         4
       8: aload         6
      10: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
      13: dload         7
      15: aload         9
      17: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
      20: dload         10
      22: aload         12
      24: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
      27: invokevirtual #49                 // Method linearCombination:(DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
      30: areturn

  public java.lang.Object linearCombination(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
       5: aload_2
       6: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
       9: aload_3
      10: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
      13: aload         4
      15: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
      18: aload         5
      20: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
      23: aload         6
      25: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
      28: aload         7
      30: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
      33: aload         8
      35: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
      38: invokevirtual #50                 // Method linearCombination:(Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
      41: areturn

  public java.lang.Object linearCombination(double, java.lang.Object, double, java.lang.Object, double, java.lang.Object);
    Code:
       0: aload_0
       1: dload_1
       2: aload_3
       3: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
       6: dload         4
       8: aload         6
      10: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
      13: dload         7
      15: aload         9
      17: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
      20: invokevirtual #51                 // Method linearCombination:(DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
      23: areturn

  public java.lang.Object linearCombination(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
       5: aload_2
       6: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
       9: aload_3
      10: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
      13: aload         4
      15: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
      18: aload         5
      20: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
      23: aload         6
      25: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
      28: invokevirtual #52                 // Method linearCombination:(Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
      31: areturn

  public java.lang.Object linearCombination(double, java.lang.Object, double, java.lang.Object);
    Code:
       0: aload_0
       1: dload_1
       2: aload_3
       3: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
       6: dload         4
       8: aload         6
      10: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
      13: invokevirtual #53                 // Method linearCombination:(DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
      16: areturn

  public java.lang.Object linearCombination(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
       5: aload_2
       6: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
       9: aload_3
      10: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
      13: aload         4
      15: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
      18: invokevirtual #54                 // Method linearCombination:(Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
      21: areturn

  public java.lang.Object linearCombination(double[], java.lang.Object[]) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #55                 // class "[Lorg/apache/commons/math3/util/Decimal64;"
       6: invokevirtual #56                 // Method linearCombination:([D[Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
       9: areturn

  public java.lang.Object linearCombination(java.lang.Object[], java.lang.Object[]) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #55                 // class "[Lorg/apache/commons/math3/util/Decimal64;"
       5: aload_2
       6: checkcast     #55                 // class "[Lorg/apache/commons/math3/util/Decimal64;"
       9: invokevirtual #57                 // Method linearCombination:([Lorg/apache/commons/math3/util/Decimal64;[Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
      12: areturn

  public java.lang.Object atanh();
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method atanh:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object asinh();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method asinh:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object acosh();
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method acosh:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object tanh();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method tanh:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object sinh();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method sinh:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object cosh();
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method cosh:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object atan2(java.lang.Object) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
       5: invokevirtual #64                 // Method atan2:(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
       8: areturn

  public java.lang.Object atan();
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method atan:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object asin();
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method asin:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object acos();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method acos:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object tan();
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method tan:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object sin();
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method sin:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object cos();
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method cos:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object log1p();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method log1p:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object log();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method log:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object expm1();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method expm1:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object exp();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method exp:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object pow(java.lang.Object) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
       5: invokevirtual #75                 // Method pow:(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
       8: areturn

  public java.lang.Object pow(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #76                 // Method pow:(I)Lorg/apache/commons/math3/util/Decimal64;
       5: areturn

  public java.lang.Object pow(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #77                 // Method pow:(D)Lorg/apache/commons/math3/util/Decimal64;
       5: areturn

  public java.lang.Object rootN(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #78                 // Method rootN:(I)Lorg/apache/commons/math3/util/Decimal64;
       5: areturn

  public java.lang.Object cbrt();
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method cbrt:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object sqrt();
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method sqrt:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object reciprocal();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method reciprocal:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object hypot(java.lang.Object) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
       5: invokevirtual #82                 // Method hypot:(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
       8: areturn

  public java.lang.Object scalb(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #83                 // Method scalb:(I)Lorg/apache/commons/math3/util/Decimal64;
       5: areturn

  public java.lang.Object copySign(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #84                 // Method copySign:(D)Lorg/apache/commons/math3/util/Decimal64;
       5: areturn

  public java.lang.Object copySign(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
       5: invokevirtual #85                 // Method copySign:(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
       8: areturn

  public java.lang.Object signum();
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method signum:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object rint();
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method rint:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object floor();
    Code:
       0: aload_0
       1: invokevirtual #88                 // Method floor:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object ceil();
    Code:
       0: aload_0
       1: invokevirtual #89                 // Method ceil:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object abs();
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method abs:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object remainder(java.lang.Object) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
       5: invokevirtual #91                 // Method remainder:(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
       8: areturn

  public java.lang.Object remainder(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #92                 // Method remainder:(D)Lorg/apache/commons/math3/util/Decimal64;
       5: areturn

  public java.lang.Object divide(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #93                 // Method divide:(D)Lorg/apache/commons/math3/util/Decimal64;
       5: areturn

  public java.lang.Object multiply(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #94                 // Method multiply:(D)Lorg/apache/commons/math3/util/Decimal64;
       5: areturn

  public java.lang.Object subtract(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #95                 // Method subtract:(D)Lorg/apache/commons/math3/util/Decimal64;
       5: areturn

  public java.lang.Object add(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #96                 // Method add:(D)Lorg/apache/commons/math3/util/Decimal64;
       5: areturn

  public java.lang.Object divide(java.lang.Object) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
       5: invokevirtual #97                 // Method divide:(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
       8: areturn

  public java.lang.Object multiply(java.lang.Object) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
       5: invokevirtual #98                 // Method multiply:(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
       8: areturn

  public java.lang.Object multiply(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #99                 // Method multiply:(I)Lorg/apache/commons/math3/util/Decimal64;
       5: areturn

  public java.lang.Object negate();
    Code:
       0: aload_0
       1: invokevirtual #100                // Method negate:()Lorg/apache/commons/math3/util/Decimal64;
       4: areturn

  public java.lang.Object subtract(java.lang.Object) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
       5: invokevirtual #101                // Method subtract:(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
       8: areturn

  public java.lang.Object add(java.lang.Object) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
       5: invokevirtual #102                // Method add:(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
       8: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #4                  // class org/apache/commons/math3/util/Decimal64
       5: invokevirtual #103                // Method compareTo:(Lorg/apache/commons/math3/util/Decimal64;)I
       8: ireturn

  static {};
    Code:
       0: new           #4                  // class org/apache/commons/math3/util/Decimal64
       3: dup
       4: dconst_0
       5: invokespecial #5                  // Method "<init>":(D)V
       8: putstatic     #104                // Field ZERO:Lorg/apache/commons/math3/util/Decimal64;
      11: new           #4                  // class org/apache/commons/math3/util/Decimal64
      14: dup
      15: dconst_1
      16: invokespecial #5                  // Method "<init>":(D)V
      19: putstatic     #105                // Field ONE:Lorg/apache/commons/math3/util/Decimal64;
      22: new           #4                  // class org/apache/commons/math3/util/Decimal64
      25: dup
      26: ldc2_w        #106                // double -Infinityd
      29: invokespecial #5                  // Method "<init>":(D)V
      32: putstatic     #108                // Field NEGATIVE_INFINITY:Lorg/apache/commons/math3/util/Decimal64;
      35: new           #4                  // class org/apache/commons/math3/util/Decimal64
      38: dup
      39: ldc2_w        #109                // double Infinityd
      42: invokespecial #5                  // Method "<init>":(D)V
      45: putstatic     #111                // Field POSITIVE_INFINITY:Lorg/apache/commons/math3/util/Decimal64;
      48: new           #4                  // class org/apache/commons/math3/util/Decimal64
      51: dup
      52: ldc2_w        #112                // double NaNd
      55: invokespecial #5                  // Method "<init>":(D)V
      58: putstatic     #114                // Field NAN:Lorg/apache/commons/math3/util/Decimal64;
      61: return
}
