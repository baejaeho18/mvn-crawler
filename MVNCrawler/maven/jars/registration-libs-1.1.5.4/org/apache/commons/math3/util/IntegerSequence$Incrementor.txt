Compiled from "IntegerSequence.java"
public class org.apache.commons.math3.util.IntegerSequence$Incrementor implements java.util.Iterator<java.lang.Integer> {
  private static final org.apache.commons.math3.util.IntegerSequence$Incrementor$MaxCountExceededCallback CALLBACK;

  private final int init;

  private final int maximalCount;

  private final int increment;

  private final org.apache.commons.math3.util.IntegerSequence$Incrementor$MaxCountExceededCallback maxCountCallback;

  private int count;

  private org.apache.commons.math3.util.IntegerSequence$Incrementor(int, int, int, org.apache.commons.math3.util.IntegerSequence$Incrementor$MaxCountExceededCallback) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field count:I
       9: aload         4
      11: ifnonnull     22
      14: new           #3                  // class org/apache/commons/math3/exception/NullArgumentException
      17: dup
      18: invokespecial #4                  // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      21: athrow
      22: aload_0
      23: iload_1
      24: putfield      #5                  // Field init:I
      27: aload_0
      28: iload_2
      29: putfield      #6                  // Field maximalCount:I
      32: aload_0
      33: iload_3
      34: putfield      #7                  // Field increment:I
      37: aload_0
      38: aload         4
      40: putfield      #8                  // Field maxCountCallback:Lorg/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback;
      43: aload_0
      44: iload_1
      45: putfield      #2                  // Field count:I
      48: return

  public static org.apache.commons.math3.util.IntegerSequence$Incrementor create();
    Code:
       0: new           #9                  // class org/apache/commons/math3/util/IntegerSequence$Incrementor
       3: dup
       4: iconst_0
       5: iconst_0
       6: iconst_1
       7: getstatic     #10                 // Field CALLBACK:Lorg/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback;
      10: invokespecial #11                 // Method "<init>":(IIILorg/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback;)V
      13: areturn

  public org.apache.commons.math3.util.IntegerSequence$Incrementor withStart(int);
    Code:
       0: new           #9                  // class org/apache/commons/math3/util/IntegerSequence$Incrementor
       3: dup
       4: iload_1
       5: aload_0
       6: getfield      #6                  // Field maximalCount:I
       9: aload_0
      10: getfield      #7                  // Field increment:I
      13: aload_0
      14: getfield      #8                  // Field maxCountCallback:Lorg/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback;
      17: invokespecial #11                 // Method "<init>":(IIILorg/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback;)V
      20: areturn

  public org.apache.commons.math3.util.IntegerSequence$Incrementor withMaximalCount(int);
    Code:
       0: new           #9                  // class org/apache/commons/math3/util/IntegerSequence$Incrementor
       3: dup
       4: aload_0
       5: getfield      #5                  // Field init:I
       8: iload_1
       9: aload_0
      10: getfield      #7                  // Field increment:I
      13: aload_0
      14: getfield      #8                  // Field maxCountCallback:Lorg/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback;
      17: invokespecial #11                 // Method "<init>":(IIILorg/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback;)V
      20: areturn

  public org.apache.commons.math3.util.IntegerSequence$Incrementor withIncrement(int);
    Code:
       0: iload_1
       1: ifne          12
       4: new           #12                 // class org/apache/commons/math3/exception/ZeroException
       7: dup
       8: invokespecial #13                 // Method org/apache/commons/math3/exception/ZeroException."<init>":()V
      11: athrow
      12: new           #9                  // class org/apache/commons/math3/util/IntegerSequence$Incrementor
      15: dup
      16: aload_0
      17: getfield      #5                  // Field init:I
      20: aload_0
      21: getfield      #6                  // Field maximalCount:I
      24: iload_1
      25: aload_0
      26: getfield      #8                  // Field maxCountCallback:Lorg/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback;
      29: invokespecial #11                 // Method "<init>":(IIILorg/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback;)V
      32: areturn

  public org.apache.commons.math3.util.IntegerSequence$Incrementor withCallback(org.apache.commons.math3.util.IntegerSequence$Incrementor$MaxCountExceededCallback);
    Code:
       0: new           #9                  // class org/apache/commons/math3/util/IntegerSequence$Incrementor
       3: dup
       4: aload_0
       5: getfield      #5                  // Field init:I
       8: aload_0
       9: getfield      #6                  // Field maximalCount:I
      12: aload_0
      13: getfield      #7                  // Field increment:I
      16: aload_1
      17: invokespecial #11                 // Method "<init>":(IIILorg/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback;)V
      20: areturn

  public int getMaximalCount();
    Code:
       0: aload_0
       1: getfield      #6                  // Field maximalCount:I
       4: ireturn

  public int getCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field count:I
       4: ireturn

  public boolean canIncrement();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #14                 // Method canIncrement:(I)Z
       5: ireturn

  public boolean canIncrement(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field count:I
       4: iload_1
       5: aload_0
       6: getfield      #7                  // Field increment:I
       9: imul
      10: iadd
      11: istore_2
      12: aload_0
      13: getfield      #7                  // Field increment:I
      16: ifge          35
      19: iload_2
      20: aload_0
      21: getfield      #6                  // Field maximalCount:I
      24: if_icmple     31
      27: iconst_1
      28: goto          48
      31: iconst_0
      32: goto          48
      35: iload_2
      36: aload_0
      37: getfield      #6                  // Field maximalCount:I
      40: if_icmpge     47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn

  public void increment(int) throws org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: iload_1
       1: ifgt          16
       4: new           #15                 // class org/apache/commons/math3/exception/NotStrictlyPositiveException
       7: dup
       8: iload_1
       9: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: invokespecial #17                 // Method org/apache/commons/math3/exception/NotStrictlyPositiveException."<init>":(Ljava/lang/Number;)V
      15: athrow
      16: aload_0
      17: iconst_0
      18: invokevirtual #14                 // Method canIncrement:(I)Z
      21: ifne          37
      24: aload_0
      25: getfield      #8                  // Field maxCountCallback:Lorg/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback;
      28: aload_0
      29: getfield      #6                  // Field maximalCount:I
      32: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback.trigger:(I)V
      37: aload_0
      38: dup
      39: getfield      #2                  // Field count:I
      42: iload_1
      43: aload_0
      44: getfield      #7                  // Field increment:I
      47: imul
      48: iadd
      49: putfield      #2                  // Field count:I
      52: return

  public void increment() throws org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #19                 // Method increment:(I)V
       5: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #14                 // Method canIncrement:(I)Z
       5: ireturn

  public java.lang.Integer next();
    Code:
       0: aload_0
       1: getfield      #2                  // Field count:I
       4: istore_1
       5: aload_0
       6: invokevirtual #20                 // Method increment:()V
       9: iload_1
      10: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: areturn

  public void remove();
    Code:
       0: new           #21                 // class org/apache/commons/math3/exception/MathUnsupportedOperationException
       3: dup
       4: invokespecial #22                 // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method next:()Ljava/lang/Integer;
       4: areturn

  static {};
    Code:
       0: new           #24                 // class org/apache/commons/math3/util/IntegerSequence$Incrementor$1
       3: dup
       4: invokespecial #25                 // Method org/apache/commons/math3/util/IntegerSequence$Incrementor$1."<init>":()V
       7: putstatic     #10                 // Field CALLBACK:Lorg/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback;
      10: return
}
