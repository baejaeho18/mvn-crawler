Compiled from "Incrementor.java"
public class org.apache.commons.math3.util.Incrementor {
  private int maximalCount;

  private int count;

  private final org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback maxCountCallback;

  public org.apache.commons.math3.util.Incrementor();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method "<init>":(I)V
       5: return

  public org.apache.commons.math3.util.Incrementor(int);
    Code:
       0: aload_0
       1: iload_1
       2: new           #2                  // class org/apache/commons/math3/util/Incrementor$1
       5: dup
       6: invokespecial #3                  // Method org/apache/commons/math3/util/Incrementor$1."<init>":()V
       9: invokespecial #4                  // Method "<init>":(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V
      12: return

  public org.apache.commons.math3.util.Incrementor(int, org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #6                  // Field count:I
       9: aload_2
      10: ifnonnull     21
      13: new           #7                  // class org/apache/commons/math3/exception/NullArgumentException
      16: dup
      17: invokespecial #8                  // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: putfield      #9                  // Field maximalCount:I
      26: aload_0
      27: aload_2
      28: putfield      #10                 // Field maxCountCallback:Lorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;
      31: return

  public void setMaximalCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field maximalCount:I
       5: return

  public int getMaximalCount();
    Code:
       0: aload_0
       1: getfield      #9                  // Field maximalCount:I
       4: ireturn

  public int getCount();
    Code:
       0: aload_0
       1: getfield      #6                  // Field count:I
       4: ireturn

  public boolean canIncrement();
    Code:
       0: aload_0
       1: getfield      #6                  // Field count:I
       4: aload_0
       5: getfield      #9                  // Field maximalCount:I
       8: if_icmpge     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public void incrementCount(int) throws org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: iload_1
       4: if_icmpge     17
       7: aload_0
       8: invokevirtual #11                 // Method incrementCount:()V
      11: iinc          2, 1
      14: goto          2
      17: return

  public void incrementCount() throws org.apache.commons.math3.exception.MaxCountExceededException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #6                  // Field count:I
       5: iconst_1
       6: iadd
       7: dup_x1
       8: putfield      #6                  // Field count:I
      11: aload_0
      12: getfield      #9                  // Field maximalCount:I
      15: if_icmple     31
      18: aload_0
      19: getfield      #10                 // Field maxCountCallback:Lorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;
      22: aload_0
      23: getfield      #9                  // Field maximalCount:I
      26: invokeinterface #12,  2           // InterfaceMethod org/apache/commons/math3/util/Incrementor$MaxCountExceededCallback.trigger:(I)V
      31: return

  public void resetCount();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #6                  // Field count:I
       5: return

  public static org.apache.commons.math3.util.Incrementor wrap(org.apache.commons.math3.util.IntegerSequence$Incrementor);
    Code:
       0: new           #13                 // class org/apache/commons/math3/util/Incrementor$2
       3: dup
       4: aload_0
       5: invokespecial #14                 // Method org/apache/commons/math3/util/Incrementor$2."<init>":(Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;)V
       8: areturn
}
