Compiled from "MultiStartMultivariateOptimizer.java"
public class org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer extends org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer<org.apache.commons.math3.optim.PointValuePair> {
  private final org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer optimizer;

  private final java.util.List<org.apache.commons.math3.optim.PointValuePair> optima;

  public org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer(org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer, int, org.apache.commons.math3.random.RandomVectorGenerator) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokespecial #2                  // Method org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer."<init>":(Lorg/apache/commons/math3/optim/BaseMultivariateOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V
       7: aload_0
       8: new           #3                  // class java/util/ArrayList
      11: dup
      12: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      15: putfield      #5                  // Field optima:Ljava/util/List;
      18: aload_0
      19: aload_1
      20: putfield      #1                  // Field optimizer:Lorg/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer;
      23: return

  public org.apache.commons.math3.optim.PointValuePair[] getOptima();
    Code:
       0: aload_0
       1: getfield      #5                  // Field optima:Ljava/util/List;
       4: aload_0
       5: invokespecial #6                  // Method getPairComparator:()Ljava/util/Comparator;
       8: invokestatic  #7                  // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      11: aload_0
      12: getfield      #5                  // Field optima:Ljava/util/List;
      15: iconst_0
      16: anewarray     #8                  // class org/apache/commons/math3/optim/PointValuePair
      19: invokeinterface #9,  2            // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      24: checkcast     #10                 // class "[Lorg/apache/commons/math3/optim/PointValuePair;"
      27: areturn

  protected void store(org.apache.commons.math3.optim.PointValuePair);
    Code:
       0: aload_0
       1: getfield      #5                  // Field optima:Ljava/util/List;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  protected void clear();
    Code:
       0: aload_0
       1: getfield      #5                  // Field optima:Ljava/util/List;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/List.clear:()V
       9: return

  private java.util.Comparator<org.apache.commons.math3.optim.PointValuePair> getPairComparator();
    Code:
       0: new           #13                 // class org/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizer$1
       3: dup
       4: aload_0
       5: invokespecial #14                 // Method org/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizer$1."<init>":(Lorg/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizer;)V
       8: areturn

  protected void store(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #8                  // class org/apache/commons/math3/optim/PointValuePair
       5: invokevirtual #15                 // Method store:(Lorg/apache/commons/math3/optim/PointValuePair;)V
       8: return

  public java.lang.Object[] getOptima();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method getOptima:()[Lorg/apache/commons/math3/optim/PointValuePair;
       4: areturn

  static org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer access$000(org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer);
    Code:
       0: aload_0
       1: getfield      #1                  // Field optimizer:Lorg/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer;
       4: areturn
}
