Compiled from "SimplexOptimizer.java"
public class org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer extends org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer {
  private org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex simplex;

  public org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer(org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointValuePair>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer."<init>":(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
       5: return

  public org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer(double, double);
    Code:
       0: aload_0
       1: new           #2                  // class org/apache/commons/math3/optim/SimpleValueChecker
       4: dup
       5: dload_1
       6: dload_3
       7: invokespecial #3                  // Method org/apache/commons/math3/optim/SimpleValueChecker."<init>":(DD)V
      10: invokespecial #4                  // Method "<init>":(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
      13: return

  public org.apache.commons.math3.optim.PointValuePair optimize(org.apache.commons.math3.optim.OptimizationData...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer.optimize:([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;
       5: areturn

  protected org.apache.commons.math3.optim.PointValuePair doOptimize();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkParameters:()V
       4: new           #7                  // class org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer$1
       7: dup
       8: aload_0
       9: invokespecial #8                  // Method org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer$1."<init>":(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer;)V
      12: astore_1
      13: aload_0
      14: invokevirtual #9                  // Method getGoalType:()Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;
      17: getstatic     #10                 // Field org/apache/commons/math3/optim/nonlinear/scalar/GoalType.MINIMIZE:Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;
      20: if_acmpne     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: istore_2
      29: new           #11                 // class org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer$2
      32: dup
      33: aload_0
      34: iload_2
      35: invokespecial #12                 // Method org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer$2."<init>":(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer;Z)V
      38: astore_3
      39: aload_0
      40: getfield      #13                 // Field simplex:Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex;
      43: aload_0
      44: invokevirtual #14                 // Method getStartPoint:()[D
      47: invokevirtual #15                 // Method org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.build:([D)V
      50: aload_0
      51: getfield      #13                 // Field simplex:Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex;
      54: aload_1
      55: aload_3
      56: invokevirtual #16                 // Method org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.evaluate:(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V
      59: aconst_null
      60: astore        4
      62: iconst_0
      63: istore        5
      65: aload_0
      66: invokevirtual #17                 // Method getConvergenceChecker:()Lorg/apache/commons/math3/optim/ConvergenceChecker;
      69: astore        6
      71: aload_0
      72: invokevirtual #18                 // Method getIterations:()I
      75: ifle          158
      78: iconst_1
      79: istore        7
      81: iconst_0
      82: istore        8
      84: iload         8
      86: aload_0
      87: getfield      #13                 // Field simplex:Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex;
      90: invokevirtual #19                 // Method org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.getSize:()I
      93: if_icmpge     144
      96: aload         4
      98: iload         8
     100: aaload
     101: astore        9
     103: iload         7
     105: ifeq          135
     108: aload         6
     110: iload         5
     112: aload         9
     114: aload_0
     115: getfield      #13                 // Field simplex:Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex;
     118: iload         8
     120: invokevirtual #20                 // Method org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.getPoint:(I)Lorg/apache/commons/math3/optim/PointValuePair;
     123: invokeinterface #21,  4           // InterfaceMethod org/apache/commons/math3/optim/ConvergenceChecker.converged:(ILjava/lang/Object;Ljava/lang/Object;)Z
     128: ifeq          135
     131: iconst_1
     132: goto          136
     135: iconst_0
     136: istore        7
     138: iinc          8, 1
     141: goto          84
     144: iload         7
     146: ifeq          158
     149: aload_0
     150: getfield      #13                 // Field simplex:Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex;
     153: iconst_0
     154: invokevirtual #20                 // Method org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.getPoint:(I)Lorg/apache/commons/math3/optim/PointValuePair;
     157: areturn
     158: aload_0
     159: getfield      #13                 // Field simplex:Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex;
     162: invokevirtual #22                 // Method org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.getPoints:()[Lorg/apache/commons/math3/optim/PointValuePair;
     165: astore        4
     167: aload_0
     168: getfield      #13                 // Field simplex:Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex;
     171: aload_1
     172: aload_3
     173: invokevirtual #23                 // Method org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.iterate:(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V
     176: aload_0
     177: invokevirtual #24                 // Method incrementIterationCount:()V
     180: goto          71

  protected void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method org/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer.parseOptimizationData:([Lorg/apache/commons/math3/optim/OptimizationData;)V
       5: aload_1
       6: astore_2
       7: aload_2
       8: arraylength
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_3
      16: if_icmpge     51
      19: aload_2
      20: iload         4
      22: aaload
      23: astore        5
      25: aload         5
      27: instanceof    #26                 // class org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex
      30: ifeq          45
      33: aload_0
      34: aload         5
      36: checkcast     #26                 // class org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex
      39: putfield      #13                 // Field simplex:Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex;
      42: goto          51
      45: iinc          4, 1
      48: goto          13
      51: return

  private void checkParameters();
    Code:
       0: aload_0
       1: getfield      #13                 // Field simplex:Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex;
       4: ifnonnull     15
       7: new           #27                 // class org/apache/commons/math3/exception/NullArgumentException
      10: dup
      11: invokespecial #28                 // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      14: athrow
      15: aload_0
      16: invokevirtual #29                 // Method getLowerBound:()[D
      19: ifnonnull     29
      22: aload_0
      23: invokevirtual #30                 // Method getUpperBound:()[D
      26: ifnull        44
      29: new           #31                 // class org/apache/commons/math3/exception/MathUnsupportedOperationException
      32: dup
      33: getstatic     #32                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.CONSTRAINT:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      36: iconst_0
      37: anewarray     #33                 // class java/lang/Object
      40: invokespecial #34                 // Method org/apache/commons/math3/exception/MathUnsupportedOperationException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      43: athrow
      44: return

  public java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #35                 // Method optimize:([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;
       5: areturn

  protected java.lang.Object doOptimize();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method doOptimize:()Lorg/apache/commons/math3/optim/PointValuePair;
       4: areturn
}
