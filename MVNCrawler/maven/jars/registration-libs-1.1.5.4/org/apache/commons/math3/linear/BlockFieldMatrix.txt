Compiled from "BlockFieldMatrix.java"
public class org.apache.commons.math3.linear.BlockFieldMatrix<T extends org.apache.commons.math3.FieldElement<T>> extends org.apache.commons.math3.linear.AbstractFieldMatrix<T> implements java.io.Serializable {
  public static final int BLOCK_SIZE;

  private static final long serialVersionUID;

  private final T[][] blocks;

  private final int rows;

  private final int columns;

  private final int blockRows;

  private final int blockColumns;

  public org.apache.commons.math3.linear.BlockFieldMatrix(org.apache.commons.math3.Field<T>, int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #1                  // Method org/apache/commons/math3/linear/AbstractFieldMatrix."<init>":(Lorg/apache/commons/math3/Field;II)V
       7: aload_0
       8: iload_2
       9: putfield      #2                  // Field rows:I
      12: aload_0
      13: iload_3
      14: putfield      #3                  // Field columns:I
      17: aload_0
      18: iload_2
      19: bipush        36
      21: iadd
      22: iconst_1
      23: isub
      24: bipush        36
      26: idiv
      27: putfield      #4                  // Field blockRows:I
      30: aload_0
      31: iload_3
      32: bipush        36
      34: iadd
      35: iconst_1
      36: isub
      37: bipush        36
      39: idiv
      40: putfield      #5                  // Field blockColumns:I
      43: aload_0
      44: aload_1
      45: iload_2
      46: iload_3
      47: invokestatic  #6                  // Method createBlocksLayout:(Lorg/apache/commons/math3/Field;II)[[Lorg/apache/commons/math3/FieldElement;
      50: putfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      53: return

  public org.apache.commons.math3.linear.BlockFieldMatrix(T[][]) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: arraylength
       3: aload_1
       4: iconst_0
       5: aaload
       6: arraylength
       7: aload_1
       8: invokestatic  #8                  // Method toBlocksLayout:([[Lorg/apache/commons/math3/FieldElement;)[[Lorg/apache/commons/math3/FieldElement;
      11: iconst_0
      12: invokespecial #9                  // Method "<init>":(II[[Lorg/apache/commons/math3/FieldElement;Z)V
      15: return

  public org.apache.commons.math3.linear.BlockFieldMatrix(int, int, T[][], boolean) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: aload_0
       1: aload_3
       2: invokestatic  #10                 // Method extractField:([[Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/Field;
       5: iload_1
       6: iload_2
       7: invokespecial #1                  // Method org/apache/commons/math3/linear/AbstractFieldMatrix."<init>":(Lorg/apache/commons/math3/Field;II)V
      10: aload_0
      11: iload_1
      12: putfield      #2                  // Field rows:I
      15: aload_0
      16: iload_2
      17: putfield      #3                  // Field columns:I
      20: aload_0
      21: iload_1
      22: bipush        36
      24: iadd
      25: iconst_1
      26: isub
      27: bipush        36
      29: idiv
      30: putfield      #4                  // Field blockRows:I
      33: aload_0
      34: iload_2
      35: bipush        36
      37: iadd
      38: iconst_1
      39: isub
      40: bipush        36
      42: idiv
      43: putfield      #5                  // Field blockColumns:I
      46: iload         4
      48: ifeq          78
      51: aload_0
      52: aload_0
      53: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
      56: aload_0
      57: getfield      #4                  // Field blockRows:I
      60: aload_0
      61: getfield      #5                  // Field blockColumns:I
      64: imul
      65: iconst_m1
      66: invokestatic  #12                 // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;
      69: checkcast     #13                 // class "[[Lorg/apache/commons/math3/FieldElement;"
      72: putfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      75: goto          83
      78: aload_0
      79: aload_3
      80: putfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      83: iconst_0
      84: istore        5
      86: iconst_0
      87: istore        6
      89: iload         6
      91: aload_0
      92: getfield      #4                  // Field blockRows:I
      95: if_icmpge     194
      98: aload_0
      99: iload         6
     101: invokespecial #14                 // Method blockHeight:(I)I
     104: istore        7
     106: iconst_0
     107: istore        8
     109: iload         8
     111: aload_0
     112: getfield      #5                  // Field blockColumns:I
     115: if_icmpge     188
     118: aload_3
     119: iload         5
     121: aaload
     122: arraylength
     123: iload         7
     125: aload_0
     126: iload         8
     128: invokespecial #15                 // Method blockWidth:(I)I
     131: imul
     132: if_icmpeq     157
     135: new           #16                 // class org/apache/commons/math3/exception/DimensionMismatchException
     138: dup
     139: aload_3
     140: iload         5
     142: aaload
     143: arraylength
     144: iload         7
     146: aload_0
     147: iload         8
     149: invokespecial #15                 // Method blockWidth:(I)I
     152: imul
     153: invokespecial #17                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
     156: athrow
     157: iload         4
     159: ifeq          179
     162: aload_0
     163: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     166: iload         5
     168: aload_3
     169: iload         5
     171: aaload
     172: invokevirtual #18                 // Method "[Lorg/apache/commons/math3/FieldElement;".clone:()Ljava/lang/Object;
     175: checkcast     #19                 // class "[Lorg/apache/commons/math3/FieldElement;"
     178: aastore
     179: iinc          8, 1
     182: iinc          5, 1
     185: goto          109
     188: iinc          6, 1
     191: goto          89
     194: return

  public static <T extends org.apache.commons.math3.FieldElement<T>> T[][] toBlocksLayout(T[][]) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: arraylength
       2: istore_1
       3: aload_0
       4: iconst_0
       5: aaload
       6: arraylength
       7: istore_2
       8: iload_1
       9: bipush        36
      11: iadd
      12: iconst_1
      13: isub
      14: bipush        36
      16: idiv
      17: istore_3
      18: iload_2
      19: bipush        36
      21: iadd
      22: iconst_1
      23: isub
      24: bipush        36
      26: idiv
      27: istore        4
      29: iconst_0
      30: istore        5
      32: iload         5
      34: aload_0
      35: arraylength
      36: if_icmpge     69
      39: aload_0
      40: iload         5
      42: aaload
      43: arraylength
      44: istore        6
      46: iload         6
      48: iload_2
      49: if_icmpeq     63
      52: new           #16                 // class org/apache/commons/math3/exception/DimensionMismatchException
      55: dup
      56: iload_2
      57: iload         6
      59: invokespecial #17                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      62: athrow
      63: iinc          5, 1
      66: goto          32
      69: aload_0
      70: invokestatic  #10                 // Method extractField:([[Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/Field;
      73: astore        5
      75: aload         5
      77: iload_3
      78: iload         4
      80: imul
      81: iconst_m1
      82: invokestatic  #12                 // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;
      85: checkcast     #13                 // class "[[Lorg/apache/commons/math3/FieldElement;"
      88: astore        6
      90: iconst_0
      91: istore        7
      93: iconst_0
      94: istore        8
      96: iload         8
      98: iload_3
      99: if_icmpge     241
     102: iload         8
     104: bipush        36
     106: imul
     107: istore        9
     109: iload         9
     111: bipush        36
     113: iadd
     114: iload_1
     115: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     118: istore        10
     120: iload         10
     122: iload         9
     124: isub
     125: istore        11
     127: iconst_0
     128: istore        12
     130: iload         12
     132: iload         4
     134: if_icmpge     235
     137: iload         12
     139: bipush        36
     141: imul
     142: istore        13
     144: iload         13
     146: bipush        36
     148: iadd
     149: iload_2
     150: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     153: istore        14
     155: iload         14
     157: iload         13
     159: isub
     160: istore        15
     162: aload         5
     164: iload         11
     166: iload         15
     168: imul
     169: invokestatic  #21                 // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
     172: checkcast     #19                 // class "[Lorg/apache/commons/math3/FieldElement;"
     175: astore        16
     177: aload         6
     179: iload         7
     181: aload         16
     183: aastore
     184: iconst_0
     185: istore        17
     187: iload         9
     189: istore        18
     191: iload         18
     193: iload         10
     195: if_icmpge     226
     198: aload_0
     199: iload         18
     201: aaload
     202: iload         13
     204: aload         16
     206: iload         17
     208: iload         15
     210: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     213: iload         17
     215: iload         15
     217: iadd
     218: istore        17
     220: iinc          18, 1
     223: goto          191
     226: iinc          7, 1
     229: iinc          12, 1
     232: goto          130
     235: iinc          8, 1
     238: goto          96
     241: aload         6
     243: areturn

  public static <T extends org.apache.commons.math3.FieldElement<T>> T[][] createBlocksLayout(org.apache.commons.math3.Field<T>, int, int);
    Code:
       0: iload_1
       1: bipush        36
       3: iadd
       4: iconst_1
       5: isub
       6: bipush        36
       8: idiv
       9: istore_3
      10: iload_2
      11: bipush        36
      13: iadd
      14: iconst_1
      15: isub
      16: bipush        36
      18: idiv
      19: istore        4
      21: aload_0
      22: iload_3
      23: iload         4
      25: imul
      26: iconst_m1
      27: invokestatic  #12                 // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;
      30: checkcast     #13                 // class "[[Lorg/apache/commons/math3/FieldElement;"
      33: astore        5
      35: iconst_0
      36: istore        6
      38: iconst_0
      39: istore        7
      41: iload         7
      43: iload_3
      44: if_icmpge     139
      47: iload         7
      49: bipush        36
      51: imul
      52: istore        8
      54: iload         8
      56: bipush        36
      58: iadd
      59: iload_1
      60: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      63: istore        9
      65: iload         9
      67: iload         8
      69: isub
      70: istore        10
      72: iconst_0
      73: istore        11
      75: iload         11
      77: iload         4
      79: if_icmpge     133
      82: iload         11
      84: bipush        36
      86: imul
      87: istore        12
      89: iload         12
      91: bipush        36
      93: iadd
      94: iload_2
      95: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      98: istore        13
     100: iload         13
     102: iload         12
     104: isub
     105: istore        14
     107: aload         5
     109: iload         6
     111: aload_0
     112: iload         10
     114: iload         14
     116: imul
     117: invokestatic  #21                 // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
     120: checkcast     #19                 // class "[Lorg/apache/commons/math3/FieldElement;"
     123: aastore
     124: iinc          6, 1
     127: iinc          11, 1
     130: goto          75
     133: iinc          7, 1
     136: goto          41
     139: aload         5
     141: areturn

  public org.apache.commons.math3.linear.FieldMatrix<T> createMatrix(int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;
    Code:
       0: new           #23                 // class org/apache/commons/math3/linear/BlockFieldMatrix
       3: dup
       4: aload_0
       5: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
       8: iload_1
       9: iload_2
      10: invokespecial #24                 // Method "<init>":(Lorg/apache/commons/math3/Field;II)V
      13: areturn

  public org.apache.commons.math3.linear.FieldMatrix<T> copy();
    Code:
       0: new           #23                 // class org/apache/commons/math3/linear/BlockFieldMatrix
       3: dup
       4: aload_0
       5: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
       8: aload_0
       9: getfield      #2                  // Field rows:I
      12: aload_0
      13: getfield      #3                  // Field columns:I
      16: invokespecial #24                 // Method "<init>":(Lorg/apache/commons/math3/Field;II)V
      19: astore_1
      20: iconst_0
      21: istore_2
      22: iload_2
      23: aload_0
      24: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      27: arraylength
      28: if_icmpge     61
      31: aload_0
      32: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      35: iload_2
      36: aaload
      37: iconst_0
      38: aload_1
      39: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      42: iload_2
      43: aaload
      44: iconst_0
      45: aload_0
      46: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      49: iload_2
      50: aaload
      51: arraylength
      52: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      55: iinc          2, 1
      58: goto          22
      61: aload_1
      62: areturn

  public org.apache.commons.math3.linear.FieldMatrix<T> add(org.apache.commons.math3.linear.FieldMatrix<T>) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #23                 // class org/apache/commons/math3/linear/BlockFieldMatrix
       5: invokevirtual #25                 // Method add:(Lorg/apache/commons/math3/linear/BlockFieldMatrix;)Lorg/apache/commons/math3/linear/BlockFieldMatrix;
       8: areturn
       9: astore_2
      10: aload_0
      11: aload_1
      12: invokevirtual #27                 // Method checkAdditionCompatible:(Lorg/apache/commons/math3/linear/FieldMatrix;)V
      15: new           #23                 // class org/apache/commons/math3/linear/BlockFieldMatrix
      18: dup
      19: aload_0
      20: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
      23: aload_0
      24: getfield      #2                  // Field rows:I
      27: aload_0
      28: getfield      #3                  // Field columns:I
      31: invokespecial #24                 // Method "<init>":(Lorg/apache/commons/math3/Field;II)V
      34: astore_3
      35: iconst_0
      36: istore        4
      38: iconst_0
      39: istore        5
      41: iload         5
      43: aload_3
      44: getfield      #4                  // Field blockRows:I
      47: if_icmpge     205
      50: iconst_0
      51: istore        6
      53: iload         6
      55: aload_3
      56: getfield      #5                  // Field blockColumns:I
      59: if_icmpge     199
      62: aload_3
      63: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      66: iload         4
      68: aaload
      69: astore        7
      71: aload_0
      72: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      75: iload         4
      77: aaload
      78: astore        8
      80: iload         5
      82: bipush        36
      84: imul
      85: istore        9
      87: iload         9
      89: bipush        36
      91: iadd
      92: aload_0
      93: getfield      #2                  // Field rows:I
      96: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      99: istore        10
     101: iload         6
     103: bipush        36
     105: imul
     106: istore        11
     108: iload         11
     110: bipush        36
     112: iadd
     113: aload_0
     114: getfield      #3                  // Field columns:I
     117: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     120: istore        12
     122: iconst_0
     123: istore        13
     125: iload         9
     127: istore        14
     129: iload         14
     131: iload         10
     133: if_icmpge     190
     136: iload         11
     138: istore        15
     140: iload         15
     142: iload         12
     144: if_icmpge     184
     147: aload         7
     149: iload         13
     151: aload         8
     153: iload         13
     155: aaload
     156: aload_1
     157: iload         14
     159: iload         15
     161: invokeinterface #28,  3           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrix.getEntry:(II)Lorg/apache/commons/math3/FieldElement;
     166: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     171: checkcast     #30                 // class org/apache/commons/math3/FieldElement
     174: aastore
     175: iinc          13, 1
     178: iinc          15, 1
     181: goto          140
     184: iinc          14, 1
     187: goto          129
     190: iinc          4, 1
     193: iinc          6, 1
     196: goto          53
     199: iinc          5, 1
     202: goto          41
     205: aload_3
     206: areturn
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassCastException

  public org.apache.commons.math3.linear.BlockFieldMatrix<T> add(org.apache.commons.math3.linear.BlockFieldMatrix<T>) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method checkAdditionCompatible:(Lorg/apache/commons/math3/linear/FieldMatrix;)V
       5: new           #23                 // class org/apache/commons/math3/linear/BlockFieldMatrix
       8: dup
       9: aload_0
      10: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
      13: aload_0
      14: getfield      #2                  // Field rows:I
      17: aload_0
      18: getfield      #3                  // Field columns:I
      21: invokespecial #24                 // Method "<init>":(Lorg/apache/commons/math3/Field;II)V
      24: astore_2
      25: iconst_0
      26: istore_3
      27: iload_3
      28: aload_2
      29: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      32: arraylength
      33: if_icmpge     106
      36: aload_2
      37: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      40: iload_3
      41: aaload
      42: astore        4
      44: aload_0
      45: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      48: iload_3
      49: aaload
      50: astore        5
      52: aload_1
      53: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      56: iload_3
      57: aaload
      58: astore        6
      60: iconst_0
      61: istore        7
      63: iload         7
      65: aload         4
      67: arraylength
      68: if_icmpge     100
      71: aload         4
      73: iload         7
      75: aload         5
      77: iload         7
      79: aaload
      80: aload         6
      82: iload         7
      84: aaload
      85: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      90: checkcast     #30                 // class org/apache/commons/math3/FieldElement
      93: aastore
      94: iinc          7, 1
      97: goto          63
     100: iinc          3, 1
     103: goto          27
     106: aload_2
     107: areturn

  public org.apache.commons.math3.linear.FieldMatrix<T> subtract(org.apache.commons.math3.linear.FieldMatrix<T>) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #23                 // class org/apache/commons/math3/linear/BlockFieldMatrix
       5: invokevirtual #31                 // Method subtract:(Lorg/apache/commons/math3/linear/BlockFieldMatrix;)Lorg/apache/commons/math3/linear/BlockFieldMatrix;
       8: areturn
       9: astore_2
      10: aload_0
      11: aload_1
      12: invokevirtual #32                 // Method checkSubtractionCompatible:(Lorg/apache/commons/math3/linear/FieldMatrix;)V
      15: new           #23                 // class org/apache/commons/math3/linear/BlockFieldMatrix
      18: dup
      19: aload_0
      20: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
      23: aload_0
      24: getfield      #2                  // Field rows:I
      27: aload_0
      28: getfield      #3                  // Field columns:I
      31: invokespecial #24                 // Method "<init>":(Lorg/apache/commons/math3/Field;II)V
      34: astore_3
      35: iconst_0
      36: istore        4
      38: iconst_0
      39: istore        5
      41: iload         5
      43: aload_3
      44: getfield      #4                  // Field blockRows:I
      47: if_icmpge     205
      50: iconst_0
      51: istore        6
      53: iload         6
      55: aload_3
      56: getfield      #5                  // Field blockColumns:I
      59: if_icmpge     199
      62: aload_3
      63: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      66: iload         4
      68: aaload
      69: astore        7
      71: aload_0
      72: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      75: iload         4
      77: aaload
      78: astore        8
      80: iload         5
      82: bipush        36
      84: imul
      85: istore        9
      87: iload         9
      89: bipush        36
      91: iadd
      92: aload_0
      93: getfield      #2                  // Field rows:I
      96: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      99: istore        10
     101: iload         6
     103: bipush        36
     105: imul
     106: istore        11
     108: iload         11
     110: bipush        36
     112: iadd
     113: aload_0
     114: getfield      #3                  // Field columns:I
     117: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     120: istore        12
     122: iconst_0
     123: istore        13
     125: iload         9
     127: istore        14
     129: iload         14
     131: iload         10
     133: if_icmpge     190
     136: iload         11
     138: istore        15
     140: iload         15
     142: iload         12
     144: if_icmpge     184
     147: aload         7
     149: iload         13
     151: aload         8
     153: iload         13
     155: aaload
     156: aload_1
     157: iload         14
     159: iload         15
     161: invokeinterface #28,  3           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrix.getEntry:(II)Lorg/apache/commons/math3/FieldElement;
     166: invokeinterface #33,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.subtract:(Ljava/lang/Object;)Ljava/lang/Object;
     171: checkcast     #30                 // class org/apache/commons/math3/FieldElement
     174: aastore
     175: iinc          13, 1
     178: iinc          15, 1
     181: goto          140
     184: iinc          14, 1
     187: goto          129
     190: iinc          4, 1
     193: iinc          6, 1
     196: goto          53
     199: iinc          5, 1
     202: goto          41
     205: aload_3
     206: areturn
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassCastException

  public org.apache.commons.math3.linear.BlockFieldMatrix<T> subtract(org.apache.commons.math3.linear.BlockFieldMatrix<T>) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method checkSubtractionCompatible:(Lorg/apache/commons/math3/linear/FieldMatrix;)V
       5: new           #23                 // class org/apache/commons/math3/linear/BlockFieldMatrix
       8: dup
       9: aload_0
      10: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
      13: aload_0
      14: getfield      #2                  // Field rows:I
      17: aload_0
      18: getfield      #3                  // Field columns:I
      21: invokespecial #24                 // Method "<init>":(Lorg/apache/commons/math3/Field;II)V
      24: astore_2
      25: iconst_0
      26: istore_3
      27: iload_3
      28: aload_2
      29: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      32: arraylength
      33: if_icmpge     106
      36: aload_2
      37: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      40: iload_3
      41: aaload
      42: astore        4
      44: aload_0
      45: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      48: iload_3
      49: aaload
      50: astore        5
      52: aload_1
      53: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      56: iload_3
      57: aaload
      58: astore        6
      60: iconst_0
      61: istore        7
      63: iload         7
      65: aload         4
      67: arraylength
      68: if_icmpge     100
      71: aload         4
      73: iload         7
      75: aload         5
      77: iload         7
      79: aaload
      80: aload         6
      82: iload         7
      84: aaload
      85: invokeinterface #33,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.subtract:(Ljava/lang/Object;)Ljava/lang/Object;
      90: checkcast     #30                 // class org/apache/commons/math3/FieldElement
      93: aastore
      94: iinc          7, 1
      97: goto          63
     100: iinc          3, 1
     103: goto          27
     106: aload_2
     107: areturn

  public org.apache.commons.math3.linear.FieldMatrix<T> scalarAdd(T);
    Code:
       0: new           #23                 // class org/apache/commons/math3/linear/BlockFieldMatrix
       3: dup
       4: aload_0
       5: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
       8: aload_0
       9: getfield      #2                  // Field rows:I
      12: aload_0
      13: getfield      #3                  // Field columns:I
      16: invokespecial #24                 // Method "<init>":(Lorg/apache/commons/math3/Field;II)V
      19: astore_2
      20: iconst_0
      21: istore_3
      22: iload_3
      23: aload_2
      24: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      27: arraylength
      28: if_icmpge     89
      31: aload_2
      32: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      35: iload_3
      36: aaload
      37: astore        4
      39: aload_0
      40: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      43: iload_3
      44: aaload
      45: astore        5
      47: iconst_0
      48: istore        6
      50: iload         6
      52: aload         4
      54: arraylength
      55: if_icmpge     83
      58: aload         4
      60: iload         6
      62: aload         5
      64: iload         6
      66: aaload
      67: aload_1
      68: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      73: checkcast     #30                 // class org/apache/commons/math3/FieldElement
      76: aastore
      77: iinc          6, 1
      80: goto          50
      83: iinc          3, 1
      86: goto          22
      89: aload_2
      90: areturn

  public org.apache.commons.math3.linear.FieldMatrix<T> scalarMultiply(T);
    Code:
       0: new           #23                 // class org/apache/commons/math3/linear/BlockFieldMatrix
       3: dup
       4: aload_0
       5: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
       8: aload_0
       9: getfield      #2                  // Field rows:I
      12: aload_0
      13: getfield      #3                  // Field columns:I
      16: invokespecial #24                 // Method "<init>":(Lorg/apache/commons/math3/Field;II)V
      19: astore_2
      20: iconst_0
      21: istore_3
      22: iload_3
      23: aload_2
      24: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      27: arraylength
      28: if_icmpge     89
      31: aload_2
      32: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      35: iload_3
      36: aaload
      37: astore        4
      39: aload_0
      40: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      43: iload_3
      44: aaload
      45: astore        5
      47: iconst_0
      48: istore        6
      50: iload         6
      52: aload         4
      54: arraylength
      55: if_icmpge     83
      58: aload         4
      60: iload         6
      62: aload         5
      64: iload         6
      66: aaload
      67: aload_1
      68: invokeinterface #34,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      73: checkcast     #30                 // class org/apache/commons/math3/FieldElement
      76: aastore
      77: iinc          6, 1
      80: goto          50
      83: iinc          3, 1
      86: goto          22
      89: aload_2
      90: areturn

  public org.apache.commons.math3.linear.FieldMatrix<T> multiply(org.apache.commons.math3.linear.FieldMatrix<T>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #23                 // class org/apache/commons/math3/linear/BlockFieldMatrix
       5: invokevirtual #35                 // Method multiply:(Lorg/apache/commons/math3/linear/BlockFieldMatrix;)Lorg/apache/commons/math3/linear/BlockFieldMatrix;
       8: areturn
       9: astore_2
      10: aload_0
      11: aload_1
      12: invokevirtual #36                 // Method checkMultiplicationCompatible:(Lorg/apache/commons/math3/linear/FieldMatrix;)V
      15: new           #23                 // class org/apache/commons/math3/linear/BlockFieldMatrix
      18: dup
      19: aload_0
      20: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
      23: aload_0
      24: getfield      #2                  // Field rows:I
      27: aload_1
      28: invokeinterface #37,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrix.getColumnDimension:()I
      33: invokespecial #24                 // Method "<init>":(Lorg/apache/commons/math3/Field;II)V
      36: astore_3
      37: aload_0
      38: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
      41: invokeinterface #38,  1           // InterfaceMethod org/apache/commons/math3/Field.getZero:()Ljava/lang/Object;
      46: checkcast     #30                 // class org/apache/commons/math3/FieldElement
      49: astore        4
      51: iconst_0
      52: istore        5
      54: iconst_0
      55: istore        6
      57: iload         6
      59: aload_3
      60: getfield      #4                  // Field blockRows:I
      63: if_icmpge     333
      66: iload         6
      68: bipush        36
      70: imul
      71: istore        7
      73: iload         7
      75: bipush        36
      77: iadd
      78: aload_0
      79: getfield      #2                  // Field rows:I
      82: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      85: istore        8
      87: iconst_0
      88: istore        9
      90: iload         9
      92: aload_3
      93: getfield      #5                  // Field blockColumns:I
      96: if_icmpge     327
      99: iload         9
     101: bipush        36
     103: imul
     104: istore        10
     106: iload         10
     108: bipush        36
     110: iadd
     111: aload_1
     112: invokeinterface #37,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrix.getColumnDimension:()I
     117: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     120: istore        11
     122: aload_3
     123: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     126: iload         5
     128: aaload
     129: astore        12
     131: iconst_0
     132: istore        13
     134: iload         13
     136: aload_0
     137: getfield      #5                  // Field blockColumns:I
     140: if_icmpge     318
     143: aload_0
     144: iload         13
     146: invokespecial #15                 // Method blockWidth:(I)I
     149: istore        14
     151: aload_0
     152: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     155: iload         6
     157: aload_0
     158: getfield      #5                  // Field blockColumns:I
     161: imul
     162: iload         13
     164: iadd
     165: aaload
     166: astore        15
     168: iload         13
     170: bipush        36
     172: imul
     173: istore        16
     175: iconst_0
     176: istore        17
     178: iload         7
     180: istore        18
     182: iload         18
     184: iload         8
     186: if_icmpge     312
     189: iload         18
     191: iload         7
     193: isub
     194: iload         14
     196: imul
     197: istore        19
     199: iload         19
     201: iload         14
     203: iadd
     204: istore        20
     206: iload         10
     208: istore        21
     210: iload         21
     212: iload         11
     214: if_icmpge     306
     217: aload         4
     219: astore        22
     221: iload         16
     223: istore        23
     225: iload         19
     227: istore        24
     229: iload         24
     231: iload         20
     233: if_icmpge     277
     236: aload         22
     238: aload         15
     240: iload         24
     242: aaload
     243: aload_1
     244: iload         23
     246: iload         21
     248: invokeinterface #28,  3           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrix.getEntry:(II)Lorg/apache/commons/math3/FieldElement;
     253: invokeinterface #34,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
     258: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     263: checkcast     #30                 // class org/apache/commons/math3/FieldElement
     266: astore        22
     268: iinc          23, 1
     271: iinc          24, 1
     274: goto          229
     277: aload         12
     279: iload         17
     281: aload         12
     283: iload         17
     285: aaload
     286: aload         22
     288: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     293: checkcast     #30                 // class org/apache/commons/math3/FieldElement
     296: aastore
     297: iinc          17, 1
     300: iinc          21, 1
     303: goto          210
     306: iinc          18, 1
     309: goto          182
     312: iinc          13, 1
     315: goto          134
     318: iinc          5, 1
     321: iinc          9, 1
     324: goto          90
     327: iinc          6, 1
     330: goto          57
     333: aload_3
     334: areturn
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassCastException

  public org.apache.commons.math3.linear.BlockFieldMatrix<T> multiply(org.apache.commons.math3.linear.BlockFieldMatrix<T>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method checkMultiplicationCompatible:(Lorg/apache/commons/math3/linear/FieldMatrix;)V
       5: new           #23                 // class org/apache/commons/math3/linear/BlockFieldMatrix
       8: dup
       9: aload_0
      10: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
      13: aload_0
      14: getfield      #2                  // Field rows:I
      17: aload_1
      18: getfield      #3                  // Field columns:I
      21: invokespecial #24                 // Method "<init>":(Lorg/apache/commons/math3/Field;II)V
      24: astore_2
      25: aload_0
      26: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
      29: invokeinterface #38,  1           // InterfaceMethod org/apache/commons/math3/Field.getZero:()Ljava/lang/Object;
      34: checkcast     #30                 // class org/apache/commons/math3/FieldElement
      37: astore_3
      38: iconst_0
      39: istore        4
      41: iconst_0
      42: istore        5
      44: iload         5
      46: aload_2
      47: getfield      #4                  // Field blockRows:I
      50: if_icmpge     466
      53: iload         5
      55: bipush        36
      57: imul
      58: istore        6
      60: iload         6
      62: bipush        36
      64: iadd
      65: aload_0
      66: getfield      #2                  // Field rows:I
      69: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      72: istore        7
      74: iconst_0
      75: istore        8
      77: iload         8
      79: aload_2
      80: getfield      #5                  // Field blockColumns:I
      83: if_icmpge     460
      86: aload_2
      87: iload         8
      89: invokespecial #15                 // Method blockWidth:(I)I
      92: istore        9
      94: iload         9
      96: iload         9
      98: iadd
      99: istore        10
     101: iload         10
     103: iload         9
     105: iadd
     106: istore        11
     108: iload         11
     110: iload         9
     112: iadd
     113: istore        12
     115: aload_2
     116: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     119: iload         4
     121: aaload
     122: astore        13
     124: iconst_0
     125: istore        14
     127: iload         14
     129: aload_0
     130: getfield      #5                  // Field blockColumns:I
     133: if_icmpge     451
     136: aload_0
     137: iload         14
     139: invokespecial #15                 // Method blockWidth:(I)I
     142: istore        15
     144: aload_0
     145: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     148: iload         5
     150: aload_0
     151: getfield      #5                  // Field blockColumns:I
     154: imul
     155: iload         14
     157: iadd
     158: aaload
     159: astore        16
     161: aload_1
     162: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     165: iload         14
     167: aload_1
     168: getfield      #5                  // Field blockColumns:I
     171: imul
     172: iload         8
     174: iadd
     175: aaload
     176: astore        17
     178: iconst_0
     179: istore        18
     181: iload         6
     183: istore        19
     185: iload         19
     187: iload         7
     189: if_icmpge     445
     192: iload         19
     194: iload         6
     196: isub
     197: iload         15
     199: imul
     200: istore        20
     202: iload         20
     204: iload         15
     206: iadd
     207: istore        21
     209: iconst_0
     210: istore        22
     212: iload         22
     214: iload         9
     216: if_icmpge     439
     219: aload_3
     220: astore        23
     222: iload         20
     224: istore        24
     226: iload         22
     228: istore        25
     230: iload         24
     232: iload         21
     234: iconst_3
     235: isub
     236: if_icmpge     363
     239: aload         23
     241: aload         16
     243: iload         24
     245: aaload
     246: aload         17
     248: iload         25
     250: aaload
     251: invokeinterface #34,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
     256: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     261: checkcast     #30                 // class org/apache/commons/math3/FieldElement
     264: aload         16
     266: iload         24
     268: iconst_1
     269: iadd
     270: aaload
     271: aload         17
     273: iload         25
     275: iload         9
     277: iadd
     278: aaload
     279: invokeinterface #34,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
     284: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     289: checkcast     #30                 // class org/apache/commons/math3/FieldElement
     292: aload         16
     294: iload         24
     296: iconst_2
     297: iadd
     298: aaload
     299: aload         17
     301: iload         25
     303: iload         10
     305: iadd
     306: aaload
     307: invokeinterface #34,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
     312: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     317: checkcast     #30                 // class org/apache/commons/math3/FieldElement
     320: aload         16
     322: iload         24
     324: iconst_3
     325: iadd
     326: aaload
     327: aload         17
     329: iload         25
     331: iload         11
     333: iadd
     334: aaload
     335: invokeinterface #34,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
     340: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     345: checkcast     #30                 // class org/apache/commons/math3/FieldElement
     348: astore        23
     350: iinc          24, 4
     353: iload         25
     355: iload         12
     357: iadd
     358: istore        25
     360: goto          230
     363: iload         24
     365: iload         21
     367: if_icmpge     410
     370: aload         23
     372: aload         16
     374: iload         24
     376: iinc          24, 1
     379: aaload
     380: aload         17
     382: iload         25
     384: aaload
     385: invokeinterface #34,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
     390: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     395: checkcast     #30                 // class org/apache/commons/math3/FieldElement
     398: astore        23
     400: iload         25
     402: iload         9
     404: iadd
     405: istore        25
     407: goto          363
     410: aload         13
     412: iload         18
     414: aload         13
     416: iload         18
     418: aaload
     419: aload         23
     421: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     426: checkcast     #30                 // class org/apache/commons/math3/FieldElement
     429: aastore
     430: iinc          18, 1
     433: iinc          22, 1
     436: goto          212
     439: iinc          19, 1
     442: goto          185
     445: iinc          14, 1
     448: goto          127
     451: iinc          4, 1
     454: iinc          8, 1
     457: goto          77
     460: iinc          5, 1
     463: goto          44
     466: aload_2
     467: areturn

  public T[][] getData();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
       4: aload_0
       5: invokevirtual #39                 // Method getRowDimension:()I
       8: aload_0
       9: invokevirtual #40                 // Method getColumnDimension:()I
      12: invokestatic  #12                 // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;
      15: checkcast     #13                 // class "[[Lorg/apache/commons/math3/FieldElement;"
      18: astore_1
      19: aload_0
      20: getfield      #3                  // Field columns:I
      23: aload_0
      24: getfield      #5                  // Field blockColumns:I
      27: iconst_1
      28: isub
      29: bipush        36
      31: imul
      32: isub
      33: istore_2
      34: iconst_0
      35: istore_3
      36: iload_3
      37: aload_0
      38: getfield      #4                  // Field blockRows:I
      41: if_icmpge     180
      44: iload_3
      45: bipush        36
      47: imul
      48: istore        4
      50: iload         4
      52: bipush        36
      54: iadd
      55: aload_0
      56: getfield      #2                  // Field rows:I
      59: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      62: istore        5
      64: iconst_0
      65: istore        6
      67: iconst_0
      68: istore        7
      70: iload         4
      72: istore        8
      74: iload         8
      76: iload         5
      78: if_icmpge     174
      81: aload_1
      82: iload         8
      84: aaload
      85: astore        9
      87: iload_3
      88: aload_0
      89: getfield      #5                  // Field blockColumns:I
      92: imul
      93: istore        10
      95: iconst_0
      96: istore        11
      98: iconst_0
      99: istore        12
     101: iload         12
     103: aload_0
     104: getfield      #5                  // Field blockColumns:I
     107: iconst_1
     108: isub
     109: if_icmpge     142
     112: aload_0
     113: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     116: iload         10
     118: iinc          10, 1
     121: aaload
     122: iload         6
     124: aload         9
     126: iload         11
     128: bipush        36
     130: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     133: iinc          11, 36
     136: iinc          12, 1
     139: goto          101
     142: aload_0
     143: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     146: iload         10
     148: aaload
     149: iload         7
     151: aload         9
     153: iload         11
     155: iload_2
     156: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     159: iinc          6, 36
     162: iload         7
     164: iload_2
     165: iadd
     166: istore        7
     168: iinc          8, 1
     171: goto          74
     174: iinc          3, 1
     177: goto          36
     180: aload_1
     181: areturn

  public org.apache.commons.math3.linear.FieldMatrix<T> getSubMatrix(int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: invokevirtual #41                 // Method checkSubMatrixIndex:(IIII)V
       9: new           #23                 // class org/apache/commons/math3/linear/BlockFieldMatrix
      12: dup
      13: aload_0
      14: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
      17: iload_2
      18: iload_1
      19: isub
      20: iconst_1
      21: iadd
      22: iload         4
      24: iload_3
      25: isub
      26: iconst_1
      27: iadd
      28: invokespecial #24                 // Method "<init>":(Lorg/apache/commons/math3/Field;II)V
      31: astore        5
      33: iload_1
      34: bipush        36
      36: idiv
      37: istore        6
      39: iload_1
      40: bipush        36
      42: irem
      43: istore        7
      45: iload_3
      46: bipush        36
      48: idiv
      49: istore        8
      51: iload_3
      52: bipush        36
      54: irem
      55: istore        9
      57: iload         6
      59: istore        10
      61: iconst_0
      62: istore        11
      64: iload         11
      66: aload         5
      68: getfield      #4                  // Field blockRows:I
      71: if_icmpge     534
      74: aload         5
      76: iload         11
      78: invokespecial #14                 // Method blockHeight:(I)I
      81: istore        12
      83: iload         8
      85: istore        13
      87: iconst_0
      88: istore        14
      90: iload         14
      92: aload         5
      94: getfield      #5                  // Field blockColumns:I
      97: if_icmpge     525
     100: aload         5
     102: iload         14
     104: invokespecial #15                 // Method blockWidth:(I)I
     107: istore        15
     109: iload         11
     111: aload         5
     113: getfield      #5                  // Field blockColumns:I
     116: imul
     117: iload         14
     119: iadd
     120: istore        16
     122: aload         5
     124: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     127: iload         16
     129: aaload
     130: astore        17
     132: iload         10
     134: aload_0
     135: getfield      #5                  // Field blockColumns:I
     138: imul
     139: iload         13
     141: iadd
     142: istore        18
     144: aload_0
     145: iload         13
     147: invokespecial #15                 // Method blockWidth:(I)I
     150: istore        19
     152: iload         12
     154: iload         7
     156: iadd
     157: bipush        36
     159: isub
     160: istore        20
     162: iload         15
     164: iload         9
     166: iadd
     167: bipush        36
     169: isub
     170: istore        21
     172: iload         20
     174: ifle          400
     177: iload         21
     179: ifle          329
     182: aload_0
     183: iload         13
     185: iconst_1
     186: iadd
     187: invokespecial #15                 // Method blockWidth:(I)I
     190: istore        22
     192: aload_0
     193: aload_0
     194: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     197: iload         18
     199: aaload
     200: iload         19
     202: iload         7
     204: bipush        36
     206: iload         9
     208: bipush        36
     210: aload         17
     212: iload         15
     214: iconst_0
     215: iconst_0
     216: invokespecial #42                 // Method copyBlockPart:([Lorg/apache/commons/math3/FieldElement;IIIII[Lorg/apache/commons/math3/FieldElement;III)V
     219: aload_0
     220: aload_0
     221: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     224: iload         18
     226: iconst_1
     227: iadd
     228: aaload
     229: iload         22
     231: iload         7
     233: bipush        36
     235: iconst_0
     236: iload         21
     238: aload         17
     240: iload         15
     242: iconst_0
     243: iload         15
     245: iload         21
     247: isub
     248: invokespecial #42                 // Method copyBlockPart:([Lorg/apache/commons/math3/FieldElement;IIIII[Lorg/apache/commons/math3/FieldElement;III)V
     251: aload_0
     252: aload_0
     253: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     256: iload         18
     258: aload_0
     259: getfield      #5                  // Field blockColumns:I
     262: iadd
     263: aaload
     264: iload         19
     266: iconst_0
     267: iload         20
     269: iload         9
     271: bipush        36
     273: aload         17
     275: iload         15
     277: iload         12
     279: iload         20
     281: isub
     282: iconst_0
     283: invokespecial #42                 // Method copyBlockPart:([Lorg/apache/commons/math3/FieldElement;IIIII[Lorg/apache/commons/math3/FieldElement;III)V
     286: aload_0
     287: aload_0
     288: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     291: iload         18
     293: aload_0
     294: getfield      #5                  // Field blockColumns:I
     297: iadd
     298: iconst_1
     299: iadd
     300: aaload
     301: iload         22
     303: iconst_0
     304: iload         20
     306: iconst_0
     307: iload         21
     309: aload         17
     311: iload         15
     313: iload         12
     315: iload         20
     317: isub
     318: iload         15
     320: iload         21
     322: isub
     323: invokespecial #42                 // Method copyBlockPart:([Lorg/apache/commons/math3/FieldElement;IIIII[Lorg/apache/commons/math3/FieldElement;III)V
     326: goto          516
     329: aload_0
     330: aload_0
     331: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     334: iload         18
     336: aaload
     337: iload         19
     339: iload         7
     341: bipush        36
     343: iload         9
     345: iload         15
     347: iload         9
     349: iadd
     350: aload         17
     352: iload         15
     354: iconst_0
     355: iconst_0
     356: invokespecial #42                 // Method copyBlockPart:([Lorg/apache/commons/math3/FieldElement;IIIII[Lorg/apache/commons/math3/FieldElement;III)V
     359: aload_0
     360: aload_0
     361: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     364: iload         18
     366: aload_0
     367: getfield      #5                  // Field blockColumns:I
     370: iadd
     371: aaload
     372: iload         19
     374: iconst_0
     375: iload         20
     377: iload         9
     379: iload         15
     381: iload         9
     383: iadd
     384: aload         17
     386: iload         15
     388: iload         12
     390: iload         20
     392: isub
     393: iconst_0
     394: invokespecial #42                 // Method copyBlockPart:([Lorg/apache/commons/math3/FieldElement;IIIII[Lorg/apache/commons/math3/FieldElement;III)V
     397: goto          516
     400: iload         21
     402: ifle          483
     405: aload_0
     406: iload         13
     408: iconst_1
     409: iadd
     410: invokespecial #15                 // Method blockWidth:(I)I
     413: istore        22
     415: aload_0
     416: aload_0
     417: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     420: iload         18
     422: aaload
     423: iload         19
     425: iload         7
     427: iload         12
     429: iload         7
     431: iadd
     432: iload         9
     434: bipush        36
     436: aload         17
     438: iload         15
     440: iconst_0
     441: iconst_0
     442: invokespecial #42                 // Method copyBlockPart:([Lorg/apache/commons/math3/FieldElement;IIIII[Lorg/apache/commons/math3/FieldElement;III)V
     445: aload_0
     446: aload_0
     447: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     450: iload         18
     452: iconst_1
     453: iadd
     454: aaload
     455: iload         22
     457: iload         7
     459: iload         12
     461: iload         7
     463: iadd
     464: iconst_0
     465: iload         21
     467: aload         17
     469: iload         15
     471: iconst_0
     472: iload         15
     474: iload         21
     476: isub
     477: invokespecial #42                 // Method copyBlockPart:([Lorg/apache/commons/math3/FieldElement;IIIII[Lorg/apache/commons/math3/FieldElement;III)V
     480: goto          516
     483: aload_0
     484: aload_0
     485: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     488: iload         18
     490: aaload
     491: iload         19
     493: iload         7
     495: iload         12
     497: iload         7
     499: iadd
     500: iload         9
     502: iload         15
     504: iload         9
     506: iadd
     507: aload         17
     509: iload         15
     511: iconst_0
     512: iconst_0
     513: invokespecial #42                 // Method copyBlockPart:([Lorg/apache/commons/math3/FieldElement;IIIII[Lorg/apache/commons/math3/FieldElement;III)V
     516: iinc          13, 1
     519: iinc          14, 1
     522: goto          90
     525: iinc          10, 1
     528: iinc          11, 1
     531: goto          64
     534: aload         5
     536: areturn

  private void copyBlockPart(T[], int, int, int, int, int, T[], int, int, int);
    Code:
       0: iload         6
       2: iload         5
       4: isub
       5: istore        11
       7: iload_3
       8: iload_2
       9: imul
      10: iload         5
      12: iadd
      13: istore        12
      15: iload         9
      17: iload         8
      19: imul
      20: iload         10
      22: iadd
      23: istore        13
      25: iload_3
      26: istore        14
      28: iload         14
      30: iload         4
      32: if_icmpge     66
      35: aload_1
      36: iload         12
      38: aload         7
      40: iload         13
      42: iload         11
      44: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      47: iload         12
      49: iload_2
      50: iadd
      51: istore        12
      53: iload         13
      55: iload         8
      57: iadd
      58: istore        13
      60: iinc          14, 1
      63: goto          28
      66: return

  public void setSubMatrix(T[][], int, int) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_1
       1: invokestatic  #43                 // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       4: aload_1
       5: iconst_0
       6: aaload
       7: arraylength
       8: istore        4
      10: iload         4
      12: ifne          26
      15: new           #44                 // class org/apache/commons/math3/exception/NoDataException
      18: dup
      19: getstatic     #45                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.AT_LEAST_ONE_COLUMN:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      22: invokespecial #46                 // Method org/apache/commons/math3/exception/NoDataException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;)V
      25: athrow
      26: iload_2
      27: aload_1
      28: arraylength
      29: iadd
      30: iconst_1
      31: isub
      32: istore        5
      34: iload_3
      35: iload         4
      37: iadd
      38: iconst_1
      39: isub
      40: istore        6
      42: aload_0
      43: iload_2
      44: iload         5
      46: iload_3
      47: iload         6
      49: invokevirtual #41                 // Method checkSubMatrixIndex:(IIII)V
      52: aload_1
      53: astore        7
      55: aload         7
      57: arraylength
      58: istore        8
      60: iconst_0
      61: istore        9
      63: iload         9
      65: iload         8
      67: if_icmpge     104
      70: aload         7
      72: iload         9
      74: aaload
      75: astore        10
      77: aload         10
      79: arraylength
      80: iload         4
      82: if_icmpeq     98
      85: new           #16                 // class org/apache/commons/math3/exception/DimensionMismatchException
      88: dup
      89: iload         4
      91: aload         10
      93: arraylength
      94: invokespecial #17                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      97: athrow
      98: iinc          9, 1
     101: goto          63
     104: iload_2
     105: bipush        36
     107: idiv
     108: istore        7
     110: iload         5
     112: bipush        36
     114: iadd
     115: bipush        36
     117: idiv
     118: istore        8
     120: iload_3
     121: bipush        36
     123: idiv
     124: istore        9
     126: iload         6
     128: bipush        36
     130: iadd
     131: bipush        36
     133: idiv
     134: istore        10
     136: iload         7
     138: istore        11
     140: iload         11
     142: iload         8
     144: if_icmpge     316
     147: aload_0
     148: iload         11
     150: invokespecial #14                 // Method blockHeight:(I)I
     153: istore        12
     155: iload         11
     157: bipush        36
     159: imul
     160: istore        13
     162: iload_2
     163: iload         13
     165: invokestatic  #47                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
     168: istore        14
     170: iload         5
     172: iconst_1
     173: iadd
     174: iload         13
     176: iload         12
     178: iadd
     179: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     182: istore        15
     184: iload         9
     186: istore        16
     188: iload         16
     190: iload         10
     192: if_icmpge     310
     195: aload_0
     196: iload         16
     198: invokespecial #15                 // Method blockWidth:(I)I
     201: istore        17
     203: iload         16
     205: bipush        36
     207: imul
     208: istore        18
     210: iload_3
     211: iload         18
     213: invokestatic  #47                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
     216: istore        19
     218: iload         6
     220: iconst_1
     221: iadd
     222: iload         18
     224: iload         17
     226: iadd
     227: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     230: istore        20
     232: iload         20
     234: iload         19
     236: isub
     237: istore        21
     239: aload_0
     240: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     243: iload         11
     245: aload_0
     246: getfield      #5                  // Field blockColumns:I
     249: imul
     250: iload         16
     252: iadd
     253: aaload
     254: astore        22
     256: iload         14
     258: istore        23
     260: iload         23
     262: iload         15
     264: if_icmpge     304
     267: aload_1
     268: iload         23
     270: iload_2
     271: isub
     272: aaload
     273: iload         19
     275: iload_3
     276: isub
     277: aload         22
     279: iload         23
     281: iload         13
     283: isub
     284: iload         17
     286: imul
     287: iload         19
     289: iload         18
     291: isub
     292: iadd
     293: iload         21
     295: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     298: iinc          23, 1
     301: goto          260
     304: iinc          16, 1
     307: goto          188
     310: iinc          11, 1
     313: goto          140
     316: return

  public org.apache.commons.math3.linear.FieldMatrix<T> getRowMatrix(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #48                 // Method checkRowIndex:(I)V
       5: new           #23                 // class org/apache/commons/math3/linear/BlockFieldMatrix
       8: dup
       9: aload_0
      10: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
      13: iconst_1
      14: aload_0
      15: getfield      #3                  // Field columns:I
      18: invokespecial #24                 // Method "<init>":(Lorg/apache/commons/math3/Field;II)V
      21: astore_2
      22: iload_1
      23: bipush        36
      25: idiv
      26: istore_3
      27: iload_1
      28: iload_3
      29: bipush        36
      31: imul
      32: isub
      33: istore        4
      35: iconst_0
      36: istore        5
      38: iconst_0
      39: istore        6
      41: aload_2
      42: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      45: iload         5
      47: aaload
      48: astore        7
      50: iconst_0
      51: istore        8
      53: iload         8
      55: aload_0
      56: getfield      #5                  // Field blockColumns:I
      59: if_icmpge     186
      62: aload_0
      63: iload         8
      65: invokespecial #15                 // Method blockWidth:(I)I
      68: istore        9
      70: aload_0
      71: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      74: iload_3
      75: aload_0
      76: getfield      #5                  // Field blockColumns:I
      79: imul
      80: iload         8
      82: iadd
      83: aaload
      84: astore        10
      86: aload         7
      88: arraylength
      89: iload         6
      91: isub
      92: istore        11
      94: iload         9
      96: iload         11
      98: if_icmple     157
     101: aload         10
     103: iload         4
     105: iload         9
     107: imul
     108: aload         7
     110: iload         6
     112: iload         11
     114: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     117: aload_2
     118: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     121: iinc          5, 1
     124: iload         5
     126: aaload
     127: astore        7
     129: aload         10
     131: iload         4
     133: iload         9
     135: imul
     136: aload         7
     138: iconst_0
     139: iload         9
     141: iload         11
     143: isub
     144: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     147: iload         9
     149: iload         11
     151: isub
     152: istore        6
     154: goto          180
     157: aload         10
     159: iload         4
     161: iload         9
     163: imul
     164: aload         7
     166: iload         6
     168: iload         9
     170: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     173: iload         6
     175: iload         9
     177: iadd
     178: istore        6
     180: iinc          8, 1
     183: goto          53
     186: aload_2
     187: areturn

  public void setRowMatrix(int, org.apache.commons.math3.linear.FieldMatrix<T>) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #23                 // class org/apache/commons/math3/linear/BlockFieldMatrix
       6: invokevirtual #49                 // Method setRowMatrix:(ILorg/apache/commons/math3/linear/BlockFieldMatrix;)V
       9: goto          19
      12: astore_3
      13: aload_0
      14: iload_1
      15: aload_2
      16: invokespecial #50                 // Method org/apache/commons/math3/linear/AbstractFieldMatrix.setRowMatrix:(ILorg/apache/commons/math3/linear/FieldMatrix;)V
      19: return
    Exception table:
       from    to  target type
           0     9    12   Class java/lang/ClassCastException

  public void setRowMatrix(int, org.apache.commons.math3.linear.BlockFieldMatrix<T>) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #48                 // Method checkRowIndex:(I)V
       5: aload_0
       6: invokevirtual #40                 // Method getColumnDimension:()I
       9: istore_3
      10: aload_2
      11: invokevirtual #39                 // Method getRowDimension:()I
      14: iconst_1
      15: if_icmpne     26
      18: aload_2
      19: invokevirtual #40                 // Method getColumnDimension:()I
      22: iload_3
      23: if_icmpeq     44
      26: new           #51                 // class org/apache/commons/math3/linear/MatrixDimensionMismatchException
      29: dup
      30: aload_2
      31: invokevirtual #39                 // Method getRowDimension:()I
      34: aload_2
      35: invokevirtual #40                 // Method getColumnDimension:()I
      38: iconst_1
      39: iload_3
      40: invokespecial #52                 // Method org/apache/commons/math3/linear/MatrixDimensionMismatchException."<init>":(IIII)V
      43: athrow
      44: iload_1
      45: bipush        36
      47: idiv
      48: istore        4
      50: iload_1
      51: iload         4
      53: bipush        36
      55: imul
      56: isub
      57: istore        5
      59: iconst_0
      60: istore        6
      62: iconst_0
      63: istore        7
      65: aload_2
      66: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      69: iload         6
      71: aaload
      72: astore        8
      74: iconst_0
      75: istore        9
      77: iload         9
      79: aload_0
      80: getfield      #5                  // Field blockColumns:I
      83: if_icmpge     211
      86: aload_0
      87: iload         9
      89: invokespecial #15                 // Method blockWidth:(I)I
      92: istore        10
      94: aload_0
      95: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      98: iload         4
     100: aload_0
     101: getfield      #5                  // Field blockColumns:I
     104: imul
     105: iload         9
     107: iadd
     108: aaload
     109: astore        11
     111: aload         8
     113: arraylength
     114: iload         7
     116: isub
     117: istore        12
     119: iload         10
     121: iload         12
     123: if_icmple     182
     126: aload         8
     128: iload         7
     130: aload         11
     132: iload         5
     134: iload         10
     136: imul
     137: iload         12
     139: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     142: aload_2
     143: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     146: iinc          6, 1
     149: iload         6
     151: aaload
     152: astore        8
     154: aload         8
     156: iconst_0
     157: aload         11
     159: iload         5
     161: iload         10
     163: imul
     164: iload         10
     166: iload         12
     168: isub
     169: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     172: iload         10
     174: iload         12
     176: isub
     177: istore        7
     179: goto          205
     182: aload         8
     184: iload         7
     186: aload         11
     188: iload         5
     190: iload         10
     192: imul
     193: iload         10
     195: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     198: iload         7
     200: iload         10
     202: iadd
     203: istore        7
     205: iinc          9, 1
     208: goto          77
     211: return

  public org.apache.commons.math3.linear.FieldMatrix<T> getColumnMatrix(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #53                 // Method checkColumnIndex:(I)V
       5: new           #23                 // class org/apache/commons/math3/linear/BlockFieldMatrix
       8: dup
       9: aload_0
      10: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
      13: aload_0
      14: getfield      #2                  // Field rows:I
      17: iconst_1
      18: invokespecial #24                 // Method "<init>":(Lorg/apache/commons/math3/Field;II)V
      21: astore_2
      22: iload_1
      23: bipush        36
      25: idiv
      26: istore_3
      27: iload_1
      28: iload_3
      29: bipush        36
      31: imul
      32: isub
      33: istore        4
      35: aload_0
      36: iload_3
      37: invokespecial #15                 // Method blockWidth:(I)I
      40: istore        5
      42: iconst_0
      43: istore        6
      45: iconst_0
      46: istore        7
      48: aload_2
      49: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      52: iload         6
      54: aaload
      55: astore        8
      57: iconst_0
      58: istore        9
      60: iload         9
      62: aload_0
      63: getfield      #4                  // Field blockRows:I
      66: if_icmpge     157
      69: aload_0
      70: iload         9
      72: invokespecial #14                 // Method blockHeight:(I)I
      75: istore        10
      77: aload_0
      78: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      81: iload         9
      83: aload_0
      84: getfield      #5                  // Field blockColumns:I
      87: imul
      88: iload_3
      89: iadd
      90: aaload
      91: astore        11
      93: iconst_0
      94: istore        12
      96: iload         12
      98: iload         10
     100: if_icmpge     151
     103: iload         7
     105: aload         8
     107: arraylength
     108: if_icmplt     126
     111: aload_2
     112: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     115: iinc          6, 1
     118: iload         6
     120: aaload
     121: astore        8
     123: iconst_0
     124: istore        7
     126: aload         8
     128: iload         7
     130: iinc          7, 1
     133: aload         11
     135: iload         12
     137: iload         5
     139: imul
     140: iload         4
     142: iadd
     143: aaload
     144: aastore
     145: iinc          12, 1
     148: goto          96
     151: iinc          9, 1
     154: goto          60
     157: aload_2
     158: areturn

  public void setColumnMatrix(int, org.apache.commons.math3.linear.FieldMatrix<T>) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #23                 // class org/apache/commons/math3/linear/BlockFieldMatrix
       6: invokevirtual #54                 // Method setColumnMatrix:(ILorg/apache/commons/math3/linear/BlockFieldMatrix;)V
       9: goto          19
      12: astore_3
      13: aload_0
      14: iload_1
      15: aload_2
      16: invokespecial #55                 // Method org/apache/commons/math3/linear/AbstractFieldMatrix.setColumnMatrix:(ILorg/apache/commons/math3/linear/FieldMatrix;)V
      19: return
    Exception table:
       from    to  target type
           0     9    12   Class java/lang/ClassCastException

  void setColumnMatrix(int, org.apache.commons.math3.linear.BlockFieldMatrix<T>) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #53                 // Method checkColumnIndex:(I)V
       5: aload_0
       6: invokevirtual #39                 // Method getRowDimension:()I
       9: istore_3
      10: aload_2
      11: invokevirtual #39                 // Method getRowDimension:()I
      14: iload_3
      15: if_icmpne     26
      18: aload_2
      19: invokevirtual #40                 // Method getColumnDimension:()I
      22: iconst_1
      23: if_icmpeq     44
      26: new           #51                 // class org/apache/commons/math3/linear/MatrixDimensionMismatchException
      29: dup
      30: aload_2
      31: invokevirtual #39                 // Method getRowDimension:()I
      34: aload_2
      35: invokevirtual #40                 // Method getColumnDimension:()I
      38: iload_3
      39: iconst_1
      40: invokespecial #52                 // Method org/apache/commons/math3/linear/MatrixDimensionMismatchException."<init>":(IIII)V
      43: athrow
      44: iload_1
      45: bipush        36
      47: idiv
      48: istore        4
      50: iload_1
      51: iload         4
      53: bipush        36
      55: imul
      56: isub
      57: istore        5
      59: aload_0
      60: iload         4
      62: invokespecial #15                 // Method blockWidth:(I)I
      65: istore        6
      67: iconst_0
      68: istore        7
      70: iconst_0
      71: istore        8
      73: aload_2
      74: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      77: iload         7
      79: aaload
      80: astore        9
      82: iconst_0
      83: istore        10
      85: iload         10
      87: aload_0
      88: getfield      #4                  // Field blockRows:I
      91: if_icmpge     183
      94: aload_0
      95: iload         10
      97: invokespecial #14                 // Method blockHeight:(I)I
     100: istore        11
     102: aload_0
     103: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     106: iload         10
     108: aload_0
     109: getfield      #5                  // Field blockColumns:I
     112: imul
     113: iload         4
     115: iadd
     116: aaload
     117: astore        12
     119: iconst_0
     120: istore        13
     122: iload         13
     124: iload         11
     126: if_icmpge     177
     129: iload         8
     131: aload         9
     133: arraylength
     134: if_icmplt     152
     137: aload_2
     138: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     141: iinc          7, 1
     144: iload         7
     146: aaload
     147: astore        9
     149: iconst_0
     150: istore        8
     152: aload         12
     154: iload         13
     156: iload         6
     158: imul
     159: iload         5
     161: iadd
     162: aload         9
     164: iload         8
     166: iinc          8, 1
     169: aaload
     170: aastore
     171: iinc          13, 1
     174: goto          122
     177: iinc          10, 1
     180: goto          85
     183: return

  public org.apache.commons.math3.linear.FieldVector<T> getRowVector(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #48                 // Method checkRowIndex:(I)V
       5: aload_0
       6: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
       9: aload_0
      10: getfield      #3                  // Field columns:I
      13: invokestatic  #21                 // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      16: checkcast     #19                 // class "[Lorg/apache/commons/math3/FieldElement;"
      19: astore_2
      20: iload_1
      21: bipush        36
      23: idiv
      24: istore_3
      25: iload_1
      26: iload_3
      27: bipush        36
      29: imul
      30: isub
      31: istore        4
      33: iconst_0
      34: istore        5
      36: iconst_0
      37: istore        6
      39: iload         6
      41: aload_0
      42: getfield      #5                  // Field blockColumns:I
      45: if_icmpge     100
      48: aload_0
      49: iload         6
      51: invokespecial #15                 // Method blockWidth:(I)I
      54: istore        7
      56: aload_0
      57: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      60: iload_3
      61: aload_0
      62: getfield      #5                  // Field blockColumns:I
      65: imul
      66: iload         6
      68: iadd
      69: aaload
      70: astore        8
      72: aload         8
      74: iload         4
      76: iload         7
      78: imul
      79: aload_2
      80: iload         5
      82: iload         7
      84: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      87: iload         5
      89: iload         7
      91: iadd
      92: istore        5
      94: iinc          6, 1
      97: goto          39
     100: new           #56                 // class org/apache/commons/math3/linear/ArrayFieldVector
     103: dup
     104: aload_0
     105: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
     108: aload_2
     109: iconst_0
     110: invokespecial #57                 // Method org/apache/commons/math3/linear/ArrayFieldVector."<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
     113: areturn

  public void setRowVector(int, org.apache.commons.math3.linear.FieldVector<T>) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #56                 // class org/apache/commons/math3/linear/ArrayFieldVector
       6: invokevirtual #58                 // Method org/apache/commons/math3/linear/ArrayFieldVector.getDataRef:()[Lorg/apache/commons/math3/FieldElement;
       9: invokevirtual #59                 // Method setRow:(I[Lorg/apache/commons/math3/FieldElement;)V
      12: goto          22
      15: astore_3
      16: aload_0
      17: iload_1
      18: aload_2
      19: invokespecial #60                 // Method org/apache/commons/math3/linear/AbstractFieldMatrix.setRowVector:(ILorg/apache/commons/math3/linear/FieldVector;)V
      22: return
    Exception table:
       from    to  target type
           0    12    15   Class java/lang/ClassCastException

  public org.apache.commons.math3.linear.FieldVector<T> getColumnVector(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #53                 // Method checkColumnIndex:(I)V
       5: aload_0
       6: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
       9: aload_0
      10: getfield      #2                  // Field rows:I
      13: invokestatic  #21                 // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      16: checkcast     #19                 // class "[Lorg/apache/commons/math3/FieldElement;"
      19: astore_2
      20: iload_1
      21: bipush        36
      23: idiv
      24: istore_3
      25: iload_1
      26: iload_3
      27: bipush        36
      29: imul
      30: isub
      31: istore        4
      33: aload_0
      34: iload_3
      35: invokespecial #15                 // Method blockWidth:(I)I
      38: istore        5
      40: iconst_0
      41: istore        6
      43: iconst_0
      44: istore        7
      46: iload         7
      48: aload_0
      49: getfield      #4                  // Field blockRows:I
      52: if_icmpge     119
      55: aload_0
      56: iload         7
      58: invokespecial #14                 // Method blockHeight:(I)I
      61: istore        8
      63: aload_0
      64: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      67: iload         7
      69: aload_0
      70: getfield      #5                  // Field blockColumns:I
      73: imul
      74: iload_3
      75: iadd
      76: aaload
      77: astore        9
      79: iconst_0
      80: istore        10
      82: iload         10
      84: iload         8
      86: if_icmpge     113
      89: aload_2
      90: iload         6
      92: iinc          6, 1
      95: aload         9
      97: iload         10
      99: iload         5
     101: imul
     102: iload         4
     104: iadd
     105: aaload
     106: aastore
     107: iinc          10, 1
     110: goto          82
     113: iinc          7, 1
     116: goto          46
     119: new           #56                 // class org/apache/commons/math3/linear/ArrayFieldVector
     122: dup
     123: aload_0
     124: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
     127: aload_2
     128: iconst_0
     129: invokespecial #57                 // Method org/apache/commons/math3/linear/ArrayFieldVector."<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
     132: areturn

  public void setColumnVector(int, org.apache.commons.math3.linear.FieldVector<T>) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #56                 // class org/apache/commons/math3/linear/ArrayFieldVector
       6: invokevirtual #58                 // Method org/apache/commons/math3/linear/ArrayFieldVector.getDataRef:()[Lorg/apache/commons/math3/FieldElement;
       9: invokevirtual #61                 // Method setColumn:(I[Lorg/apache/commons/math3/FieldElement;)V
      12: goto          22
      15: astore_3
      16: aload_0
      17: iload_1
      18: aload_2
      19: invokespecial #62                 // Method org/apache/commons/math3/linear/AbstractFieldMatrix.setColumnVector:(ILorg/apache/commons/math3/linear/FieldVector;)V
      22: return
    Exception table:
       from    to  target type
           0    12    15   Class java/lang/ClassCastException

  public T[] getRow(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #48                 // Method checkRowIndex:(I)V
       5: aload_0
       6: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
       9: aload_0
      10: getfield      #3                  // Field columns:I
      13: invokestatic  #21                 // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      16: checkcast     #19                 // class "[Lorg/apache/commons/math3/FieldElement;"
      19: astore_2
      20: iload_1
      21: bipush        36
      23: idiv
      24: istore_3
      25: iload_1
      26: iload_3
      27: bipush        36
      29: imul
      30: isub
      31: istore        4
      33: iconst_0
      34: istore        5
      36: iconst_0
      37: istore        6
      39: iload         6
      41: aload_0
      42: getfield      #5                  // Field blockColumns:I
      45: if_icmpge     100
      48: aload_0
      49: iload         6
      51: invokespecial #15                 // Method blockWidth:(I)I
      54: istore        7
      56: aload_0
      57: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      60: iload_3
      61: aload_0
      62: getfield      #5                  // Field blockColumns:I
      65: imul
      66: iload         6
      68: iadd
      69: aaload
      70: astore        8
      72: aload         8
      74: iload         4
      76: iload         7
      78: imul
      79: aload_2
      80: iload         5
      82: iload         7
      84: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      87: iload         5
      89: iload         7
      91: iadd
      92: istore        5
      94: iinc          6, 1
      97: goto          39
     100: aload_2
     101: areturn

  public void setRow(int, T[]) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.linear.MatrixDimensionMismatchException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #48                 // Method checkRowIndex:(I)V
       5: aload_0
       6: invokevirtual #40                 // Method getColumnDimension:()I
       9: istore_3
      10: aload_2
      11: arraylength
      12: iload_3
      13: if_icmpeq     29
      16: new           #51                 // class org/apache/commons/math3/linear/MatrixDimensionMismatchException
      19: dup
      20: iconst_1
      21: aload_2
      22: arraylength
      23: iconst_1
      24: iload_3
      25: invokespecial #52                 // Method org/apache/commons/math3/linear/MatrixDimensionMismatchException."<init>":(IIII)V
      28: athrow
      29: iload_1
      30: bipush        36
      32: idiv
      33: istore        4
      35: iload_1
      36: iload         4
      38: bipush        36
      40: imul
      41: isub
      42: istore        5
      44: iconst_0
      45: istore        6
      47: iconst_0
      48: istore        7
      50: iload         7
      52: aload_0
      53: getfield      #5                  // Field blockColumns:I
      56: if_icmpge     112
      59: aload_0
      60: iload         7
      62: invokespecial #15                 // Method blockWidth:(I)I
      65: istore        8
      67: aload_0
      68: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      71: iload         4
      73: aload_0
      74: getfield      #5                  // Field blockColumns:I
      77: imul
      78: iload         7
      80: iadd
      81: aaload
      82: astore        9
      84: aload_2
      85: iload         6
      87: aload         9
      89: iload         5
      91: iload         8
      93: imul
      94: iload         8
      96: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      99: iload         6
     101: iload         8
     103: iadd
     104: istore        6
     106: iinc          7, 1
     109: goto          50
     112: return

  public T[] getColumn(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #53                 // Method checkColumnIndex:(I)V
       5: aload_0
       6: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
       9: aload_0
      10: getfield      #2                  // Field rows:I
      13: invokestatic  #21                 // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      16: checkcast     #19                 // class "[Lorg/apache/commons/math3/FieldElement;"
      19: astore_2
      20: iload_1
      21: bipush        36
      23: idiv
      24: istore_3
      25: iload_1
      26: iload_3
      27: bipush        36
      29: imul
      30: isub
      31: istore        4
      33: aload_0
      34: iload_3
      35: invokespecial #15                 // Method blockWidth:(I)I
      38: istore        5
      40: iconst_0
      41: istore        6
      43: iconst_0
      44: istore        7
      46: iload         7
      48: aload_0
      49: getfield      #4                  // Field blockRows:I
      52: if_icmpge     119
      55: aload_0
      56: iload         7
      58: invokespecial #14                 // Method blockHeight:(I)I
      61: istore        8
      63: aload_0
      64: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      67: iload         7
      69: aload_0
      70: getfield      #5                  // Field blockColumns:I
      73: imul
      74: iload_3
      75: iadd
      76: aaload
      77: astore        9
      79: iconst_0
      80: istore        10
      82: iload         10
      84: iload         8
      86: if_icmpge     113
      89: aload_2
      90: iload         6
      92: iinc          6, 1
      95: aload         9
      97: iload         10
      99: iload         5
     101: imul
     102: iload         4
     104: iadd
     105: aaload
     106: aastore
     107: iinc          10, 1
     110: goto          82
     113: iinc          7, 1
     116: goto          46
     119: aload_2
     120: areturn

  public void setColumn(int, T[]) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #53                 // Method checkColumnIndex:(I)V
       5: aload_0
       6: invokevirtual #39                 // Method getRowDimension:()I
       9: istore_3
      10: aload_2
      11: arraylength
      12: iload_3
      13: if_icmpeq     29
      16: new           #51                 // class org/apache/commons/math3/linear/MatrixDimensionMismatchException
      19: dup
      20: aload_2
      21: arraylength
      22: iconst_1
      23: iload_3
      24: iconst_1
      25: invokespecial #52                 // Method org/apache/commons/math3/linear/MatrixDimensionMismatchException."<init>":(IIII)V
      28: athrow
      29: iload_1
      30: bipush        36
      32: idiv
      33: istore        4
      35: iload_1
      36: iload         4
      38: bipush        36
      40: imul
      41: isub
      42: istore        5
      44: aload_0
      45: iload         4
      47: invokespecial #15                 // Method blockWidth:(I)I
      50: istore        6
      52: iconst_0
      53: istore        7
      55: iconst_0
      56: istore        8
      58: iload         8
      60: aload_0
      61: getfield      #4                  // Field blockRows:I
      64: if_icmpge     132
      67: aload_0
      68: iload         8
      70: invokespecial #14                 // Method blockHeight:(I)I
      73: istore        9
      75: aload_0
      76: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      79: iload         8
      81: aload_0
      82: getfield      #5                  // Field blockColumns:I
      85: imul
      86: iload         4
      88: iadd
      89: aaload
      90: astore        10
      92: iconst_0
      93: istore        11
      95: iload         11
      97: iload         9
      99: if_icmpge     126
     102: aload         10
     104: iload         11
     106: iload         6
     108: imul
     109: iload         5
     111: iadd
     112: aload_2
     113: iload         7
     115: iinc          7, 1
     118: aaload
     119: aastore
     120: iinc          11, 1
     123: goto          95
     126: iinc          8, 1
     129: goto          58
     132: return

  public T getEntry(int, int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #48                 // Method checkRowIndex:(I)V
       5: aload_0
       6: iload_2
       7: invokevirtual #53                 // Method checkColumnIndex:(I)V
      10: iload_1
      11: bipush        36
      13: idiv
      14: istore_3
      15: iload_2
      16: bipush        36
      18: idiv
      19: istore        4
      21: iload_1
      22: iload_3
      23: bipush        36
      25: imul
      26: isub
      27: aload_0
      28: iload         4
      30: invokespecial #15                 // Method blockWidth:(I)I
      33: imul
      34: iload_2
      35: iload         4
      37: bipush        36
      39: imul
      40: isub
      41: iadd
      42: istore        5
      44: aload_0
      45: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      48: iload_3
      49: aload_0
      50: getfield      #5                  // Field blockColumns:I
      53: imul
      54: iload         4
      56: iadd
      57: aaload
      58: iload         5
      60: aaload
      61: areturn

  public void setEntry(int, int, T) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #48                 // Method checkRowIndex:(I)V
       5: aload_0
       6: iload_2
       7: invokevirtual #53                 // Method checkColumnIndex:(I)V
      10: iload_1
      11: bipush        36
      13: idiv
      14: istore        4
      16: iload_2
      17: bipush        36
      19: idiv
      20: istore        5
      22: iload_1
      23: iload         4
      25: bipush        36
      27: imul
      28: isub
      29: aload_0
      30: iload         5
      32: invokespecial #15                 // Method blockWidth:(I)I
      35: imul
      36: iload_2
      37: iload         5
      39: bipush        36
      41: imul
      42: isub
      43: iadd
      44: istore        6
      46: aload_0
      47: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      50: iload         4
      52: aload_0
      53: getfield      #5                  // Field blockColumns:I
      56: imul
      57: iload         5
      59: iadd
      60: aaload
      61: iload         6
      63: aload_3
      64: aastore
      65: return

  public void addToEntry(int, int, T) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #48                 // Method checkRowIndex:(I)V
       5: aload_0
       6: iload_2
       7: invokevirtual #53                 // Method checkColumnIndex:(I)V
      10: iload_1
      11: bipush        36
      13: idiv
      14: istore        4
      16: iload_2
      17: bipush        36
      19: idiv
      20: istore        5
      22: iload_1
      23: iload         4
      25: bipush        36
      27: imul
      28: isub
      29: aload_0
      30: iload         5
      32: invokespecial #15                 // Method blockWidth:(I)I
      35: imul
      36: iload_2
      37: iload         5
      39: bipush        36
      41: imul
      42: isub
      43: iadd
      44: istore        6
      46: aload_0
      47: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      50: iload         4
      52: aload_0
      53: getfield      #5                  // Field blockColumns:I
      56: imul
      57: iload         5
      59: iadd
      60: aaload
      61: astore        7
      63: aload         7
      65: iload         6
      67: aload         7
      69: iload         6
      71: aaload
      72: aload_3
      73: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      78: checkcast     #30                 // class org/apache/commons/math3/FieldElement
      81: aastore
      82: return

  public void multiplyEntry(int, int, T) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #48                 // Method checkRowIndex:(I)V
       5: aload_0
       6: iload_2
       7: invokevirtual #53                 // Method checkColumnIndex:(I)V
      10: iload_1
      11: bipush        36
      13: idiv
      14: istore        4
      16: iload_2
      17: bipush        36
      19: idiv
      20: istore        5
      22: iload_1
      23: iload         4
      25: bipush        36
      27: imul
      28: isub
      29: aload_0
      30: iload         5
      32: invokespecial #15                 // Method blockWidth:(I)I
      35: imul
      36: iload_2
      37: iload         5
      39: bipush        36
      41: imul
      42: isub
      43: iadd
      44: istore        6
      46: aload_0
      47: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      50: iload         4
      52: aload_0
      53: getfield      #5                  // Field blockColumns:I
      56: imul
      57: iload         5
      59: iadd
      60: aaload
      61: astore        7
      63: aload         7
      65: iload         6
      67: aload         7
      69: iload         6
      71: aaload
      72: aload_3
      73: invokeinterface #34,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      78: checkcast     #30                 // class org/apache/commons/math3/FieldElement
      81: aastore
      82: return

  public org.apache.commons.math3.linear.FieldMatrix<T> transpose();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method getRowDimension:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #40                 // Method getColumnDimension:()I
       9: istore_2
      10: new           #23                 // class org/apache/commons/math3/linear/BlockFieldMatrix
      13: dup
      14: aload_0
      15: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
      18: iload_2
      19: iload_1
      20: invokespecial #24                 // Method "<init>":(Lorg/apache/commons/math3/Field;II)V
      23: astore_3
      24: iconst_0
      25: istore        4
      27: iconst_0
      28: istore        5
      30: iload         5
      32: aload_0
      33: getfield      #5                  // Field blockColumns:I
      36: if_icmpge     205
      39: iconst_0
      40: istore        6
      42: iload         6
      44: aload_0
      45: getfield      #4                  // Field blockRows:I
      48: if_icmpge     199
      51: aload_3
      52: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      55: iload         4
      57: aaload
      58: astore        7
      60: aload_0
      61: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      64: iload         6
      66: aload_0
      67: getfield      #5                  // Field blockColumns:I
      70: imul
      71: iload         5
      73: iadd
      74: aaload
      75: astore        8
      77: iload         5
      79: bipush        36
      81: imul
      82: istore        9
      84: iload         9
      86: bipush        36
      88: iadd
      89: aload_0
      90: getfield      #3                  // Field columns:I
      93: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      96: istore        10
      98: iload         6
     100: bipush        36
     102: imul
     103: istore        11
     105: iload         11
     107: bipush        36
     109: iadd
     110: aload_0
     111: getfield      #2                  // Field rows:I
     114: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     117: istore        12
     119: iconst_0
     120: istore        13
     122: iload         9
     124: istore        14
     126: iload         14
     128: iload         10
     130: if_icmpge     190
     133: iload         10
     135: iload         9
     137: isub
     138: istore        15
     140: iload         14
     142: iload         9
     144: isub
     145: istore        16
     147: iload         11
     149: istore        17
     151: iload         17
     153: iload         12
     155: if_icmpge     184
     158: aload         7
     160: iload         13
     162: aload         8
     164: iload         16
     166: aaload
     167: aastore
     168: iinc          13, 1
     171: iload         16
     173: iload         15
     175: iadd
     176: istore        16
     178: iinc          17, 1
     181: goto          151
     184: iinc          14, 1
     187: goto          126
     190: iinc          4, 1
     193: iinc          6, 1
     196: goto          42
     199: iinc          5, 1
     202: goto          30
     205: aload_3
     206: areturn

  public int getRowDimension();
    Code:
       0: aload_0
       1: getfield      #2                  // Field rows:I
       4: ireturn

  public int getColumnDimension();
    Code:
       0: aload_0
       1: getfield      #3                  // Field columns:I
       4: ireturn

  public T[] operate(T[]) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_1
       1: arraylength
       2: aload_0
       3: getfield      #3                  // Field columns:I
       6: if_icmpeq     23
       9: new           #16                 // class org/apache/commons/math3/exception/DimensionMismatchException
      12: dup
      13: aload_1
      14: arraylength
      15: aload_0
      16: getfield      #3                  // Field columns:I
      19: invokespecial #17                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      22: athrow
      23: aload_0
      24: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
      27: aload_0
      28: getfield      #2                  // Field rows:I
      31: invokestatic  #21                 // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      34: checkcast     #19                 // class "[Lorg/apache/commons/math3/FieldElement;"
      37: astore_2
      38: aload_0
      39: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
      42: invokeinterface #38,  1           // InterfaceMethod org/apache/commons/math3/Field.getZero:()Ljava/lang/Object;
      47: checkcast     #30                 // class org/apache/commons/math3/FieldElement
      50: astore_3
      51: iconst_0
      52: istore        4
      54: iload         4
      56: aload_0
      57: getfield      #4                  // Field blockRows:I
      60: if_icmpge     355
      63: iload         4
      65: bipush        36
      67: imul
      68: istore        5
      70: iload         5
      72: bipush        36
      74: iadd
      75: aload_0
      76: getfield      #2                  // Field rows:I
      79: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      82: istore        6
      84: iconst_0
      85: istore        7
      87: iload         7
      89: aload_0
      90: getfield      #5                  // Field blockColumns:I
      93: if_icmpge     349
      96: aload_0
      97: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     100: iload         4
     102: aload_0
     103: getfield      #5                  // Field blockColumns:I
     106: imul
     107: iload         7
     109: iadd
     110: aaload
     111: astore        8
     113: iload         7
     115: bipush        36
     117: imul
     118: istore        9
     120: iload         9
     122: bipush        36
     124: iadd
     125: aload_0
     126: getfield      #3                  // Field columns:I
     129: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     132: istore        10
     134: iconst_0
     135: istore        11
     137: iload         5
     139: istore        12
     141: iload         12
     143: iload         6
     145: if_icmpge     343
     148: aload_3
     149: astore        13
     151: iload         9
     153: istore        14
     155: iload         14
     157: iload         10
     159: iconst_3
     160: isub
     161: if_icmpge     277
     164: aload         13
     166: aload         8
     168: iload         11
     170: aaload
     171: aload_1
     172: iload         14
     174: aaload
     175: invokeinterface #34,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
     180: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     185: checkcast     #30                 // class org/apache/commons/math3/FieldElement
     188: aload         8
     190: iload         11
     192: iconst_1
     193: iadd
     194: aaload
     195: aload_1
     196: iload         14
     198: iconst_1
     199: iadd
     200: aaload
     201: invokeinterface #34,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
     206: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     211: checkcast     #30                 // class org/apache/commons/math3/FieldElement
     214: aload         8
     216: iload         11
     218: iconst_2
     219: iadd
     220: aaload
     221: aload_1
     222: iload         14
     224: iconst_2
     225: iadd
     226: aaload
     227: invokeinterface #34,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
     232: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     237: checkcast     #30                 // class org/apache/commons/math3/FieldElement
     240: aload         8
     242: iload         11
     244: iconst_3
     245: iadd
     246: aaload
     247: aload_1
     248: iload         14
     250: iconst_3
     251: iadd
     252: aaload
     253: invokeinterface #34,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
     258: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     263: checkcast     #30                 // class org/apache/commons/math3/FieldElement
     266: astore        13
     268: iinc          11, 4
     271: iinc          14, 4
     274: goto          155
     277: iload         14
     279: iload         10
     281: if_icmpge     319
     284: aload         13
     286: aload         8
     288: iload         11
     290: iinc          11, 1
     293: aaload
     294: aload_1
     295: iload         14
     297: iinc          14, 1
     300: aaload
     301: invokeinterface #34,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
     306: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     311: checkcast     #30                 // class org/apache/commons/math3/FieldElement
     314: astore        13
     316: goto          277
     319: aload_2
     320: iload         12
     322: aload_2
     323: iload         12
     325: aaload
     326: aload         13
     328: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     333: checkcast     #30                 // class org/apache/commons/math3/FieldElement
     336: aastore
     337: iinc          12, 1
     340: goto          141
     343: iinc          7, 1
     346: goto          87
     349: iinc          4, 1
     352: goto          54
     355: aload_2
     356: areturn

  public T[] preMultiply(T[]) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_1
       1: arraylength
       2: aload_0
       3: getfield      #2                  // Field rows:I
       6: if_icmpeq     23
       9: new           #16                 // class org/apache/commons/math3/exception/DimensionMismatchException
      12: dup
      13: aload_1
      14: arraylength
      15: aload_0
      16: getfield      #2                  // Field rows:I
      19: invokespecial #17                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      22: athrow
      23: aload_0
      24: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
      27: aload_0
      28: getfield      #3                  // Field columns:I
      31: invokestatic  #21                 // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      34: checkcast     #19                 // class "[Lorg/apache/commons/math3/FieldElement;"
      37: astore_2
      38: aload_0
      39: invokevirtual #11                 // Method getField:()Lorg/apache/commons/math3/Field;
      42: invokeinterface #38,  1           // InterfaceMethod org/apache/commons/math3/Field.getZero:()Ljava/lang/Object;
      47: checkcast     #30                 // class org/apache/commons/math3/FieldElement
      50: astore_3
      51: iconst_0
      52: istore        4
      54: iload         4
      56: aload_0
      57: getfield      #5                  // Field blockColumns:I
      60: if_icmpge     399
      63: aload_0
      64: iload         4
      66: invokespecial #15                 // Method blockWidth:(I)I
      69: istore        5
      71: iload         5
      73: iload         5
      75: iadd
      76: istore        6
      78: iload         6
      80: iload         5
      82: iadd
      83: istore        7
      85: iload         7
      87: iload         5
      89: iadd
      90: istore        8
      92: iload         4
      94: bipush        36
      96: imul
      97: istore        9
      99: iload         9
     101: bipush        36
     103: iadd
     104: aload_0
     105: getfield      #3                  // Field columns:I
     108: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     111: istore        10
     113: iconst_0
     114: istore        11
     116: iload         11
     118: aload_0
     119: getfield      #4                  // Field blockRows:I
     122: if_icmpge     393
     125: aload_0
     126: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     129: iload         11
     131: aload_0
     132: getfield      #5                  // Field blockColumns:I
     135: imul
     136: iload         4
     138: iadd
     139: aaload
     140: astore        12
     142: iload         11
     144: bipush        36
     146: imul
     147: istore        13
     149: iload         13
     151: bipush        36
     153: iadd
     154: aload_0
     155: getfield      #2                  // Field rows:I
     158: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     161: istore        14
     163: iload         9
     165: istore        15
     167: iload         15
     169: iload         10
     171: if_icmpge     387
     174: iload         15
     176: iload         9
     178: isub
     179: istore        16
     181: aload_3
     182: astore        17
     184: iload         13
     186: istore        18
     188: iload         18
     190: iload         14
     192: iconst_3
     193: isub
     194: if_icmpge     317
     197: aload         17
     199: aload         12
     201: iload         16
     203: aaload
     204: aload_1
     205: iload         18
     207: aaload
     208: invokeinterface #34,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
     213: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     218: checkcast     #30                 // class org/apache/commons/math3/FieldElement
     221: aload         12
     223: iload         16
     225: iload         5
     227: iadd
     228: aaload
     229: aload_1
     230: iload         18
     232: iconst_1
     233: iadd
     234: aaload
     235: invokeinterface #34,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
     240: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     245: checkcast     #30                 // class org/apache/commons/math3/FieldElement
     248: aload         12
     250: iload         16
     252: iload         6
     254: iadd
     255: aaload
     256: aload_1
     257: iload         18
     259: iconst_2
     260: iadd
     261: aaload
     262: invokeinterface #34,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
     267: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     272: checkcast     #30                 // class org/apache/commons/math3/FieldElement
     275: aload         12
     277: iload         16
     279: iload         7
     281: iadd
     282: aaload
     283: aload_1
     284: iload         18
     286: iconst_3
     287: iadd
     288: aaload
     289: invokeinterface #34,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
     294: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     299: checkcast     #30                 // class org/apache/commons/math3/FieldElement
     302: astore        17
     304: iload         16
     306: iload         8
     308: iadd
     309: istore        16
     311: iinc          18, 4
     314: goto          188
     317: iload         18
     319: iload         14
     321: if_icmpge     363
     324: aload         17
     326: aload         12
     328: iload         16
     330: aaload
     331: aload_1
     332: iload         18
     334: iinc          18, 1
     337: aaload
     338: invokeinterface #34,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
     343: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     348: checkcast     #30                 // class org/apache/commons/math3/FieldElement
     351: astore        17
     353: iload         16
     355: iload         5
     357: iadd
     358: istore        16
     360: goto          317
     363: aload_2
     364: iload         15
     366: aload_2
     367: iload         15
     369: aaload
     370: aload         17
     372: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
     377: checkcast     #30                 // class org/apache/commons/math3/FieldElement
     380: aastore
     381: iinc          15, 1
     384: goto          167
     387: iinc          11, 1
     390: goto          116
     393: iinc          4, 1
     396: goto          54
     399: aload_2
     400: areturn

  public T walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field rows:I
       5: aload_0
       6: getfield      #3                  // Field columns:I
       9: iconst_0
      10: aload_0
      11: getfield      #2                  // Field rows:I
      14: iconst_1
      15: isub
      16: iconst_0
      17: aload_0
      18: getfield      #3                  // Field columns:I
      21: iconst_1
      22: isub
      23: invokeinterface #63,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.start:(IIIIII)V
      28: iconst_0
      29: istore_2
      30: iload_2
      31: aload_0
      32: getfield      #4                  // Field blockRows:I
      35: if_icmpge     190
      38: iload_2
      39: bipush        36
      41: imul
      42: istore_3
      43: iload_3
      44: bipush        36
      46: iadd
      47: aload_0
      48: getfield      #2                  // Field rows:I
      51: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      54: istore        4
      56: iload_3
      57: istore        5
      59: iload         5
      61: iload         4
      63: if_icmpge     184
      66: iconst_0
      67: istore        6
      69: iload         6
      71: aload_0
      72: getfield      #5                  // Field blockColumns:I
      75: if_icmpge     178
      78: aload_0
      79: iload         6
      81: invokespecial #15                 // Method blockWidth:(I)I
      84: istore        7
      86: iload         6
      88: bipush        36
      90: imul
      91: istore        8
      93: iload         8
      95: bipush        36
      97: iadd
      98: aload_0
      99: getfield      #3                  // Field columns:I
     102: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     105: istore        9
     107: aload_0
     108: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     111: iload_2
     112: aload_0
     113: getfield      #5                  // Field blockColumns:I
     116: imul
     117: iload         6
     119: iadd
     120: aaload
     121: astore        10
     123: iload         5
     125: iload_3
     126: isub
     127: iload         7
     129: imul
     130: istore        11
     132: iload         8
     134: istore        12
     136: iload         12
     138: iload         9
     140: if_icmpge     172
     143: aload         10
     145: iload         11
     147: aload_1
     148: iload         5
     150: iload         12
     152: aload         10
     154: iload         11
     156: aaload
     157: invokeinterface #64,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
     162: aastore
     163: iinc          11, 1
     166: iinc          12, 1
     169: goto          136
     172: iinc          6, 1
     175: goto          69
     178: iinc          5, 1
     181: goto          59
     184: iinc          2, 1
     187: goto          30
     190: aload_1
     191: invokeinterface #65,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
     196: areturn

  public T walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field rows:I
       5: aload_0
       6: getfield      #3                  // Field columns:I
       9: iconst_0
      10: aload_0
      11: getfield      #2                  // Field rows:I
      14: iconst_1
      15: isub
      16: iconst_0
      17: aload_0
      18: getfield      #3                  // Field columns:I
      21: iconst_1
      22: isub
      23: invokeinterface #66,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.start:(IIIIII)V
      28: iconst_0
      29: istore_2
      30: iload_2
      31: aload_0
      32: getfield      #4                  // Field blockRows:I
      35: if_icmpge     185
      38: iload_2
      39: bipush        36
      41: imul
      42: istore_3
      43: iload_3
      44: bipush        36
      46: iadd
      47: aload_0
      48: getfield      #2                  // Field rows:I
      51: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      54: istore        4
      56: iload_3
      57: istore        5
      59: iload         5
      61: iload         4
      63: if_icmpge     179
      66: iconst_0
      67: istore        6
      69: iload         6
      71: aload_0
      72: getfield      #5                  // Field blockColumns:I
      75: if_icmpge     173
      78: aload_0
      79: iload         6
      81: invokespecial #15                 // Method blockWidth:(I)I
      84: istore        7
      86: iload         6
      88: bipush        36
      90: imul
      91: istore        8
      93: iload         8
      95: bipush        36
      97: iadd
      98: aload_0
      99: getfield      #3                  // Field columns:I
     102: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     105: istore        9
     107: aload_0
     108: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     111: iload_2
     112: aload_0
     113: getfield      #5                  // Field blockColumns:I
     116: imul
     117: iload         6
     119: iadd
     120: aaload
     121: astore        10
     123: iload         5
     125: iload_3
     126: isub
     127: iload         7
     129: imul
     130: istore        11
     132: iload         8
     134: istore        12
     136: iload         12
     138: iload         9
     140: if_icmpge     167
     143: aload_1
     144: iload         5
     146: iload         12
     148: aload         10
     150: iload         11
     152: aaload
     153: invokeinterface #67,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)V
     158: iinc          11, 1
     161: iinc          12, 1
     164: goto          136
     167: iinc          6, 1
     170: goto          69
     173: iinc          5, 1
     176: goto          59
     179: iinc          2, 1
     182: goto          30
     185: aload_1
     186: invokeinterface #68,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
     191: areturn

  public T walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: iload         4
       5: iload         5
       7: invokevirtual #41                 // Method checkSubMatrixIndex:(IIII)V
      10: aload_1
      11: aload_0
      12: getfield      #2                  // Field rows:I
      15: aload_0
      16: getfield      #3                  // Field columns:I
      19: iload_2
      20: iload_3
      21: iload         4
      23: iload         5
      25: invokeinterface #63,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.start:(IIIIII)V
      30: iload_2
      31: bipush        36
      33: idiv
      34: istore        6
      36: iload         6
      38: iconst_1
      39: iload_3
      40: bipush        36
      42: idiv
      43: iadd
      44: if_icmpge     238
      47: iload         6
      49: bipush        36
      51: imul
      52: istore        7
      54: iload_2
      55: iload         7
      57: invokestatic  #47                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
      60: istore        8
      62: iload         6
      64: iconst_1
      65: iadd
      66: bipush        36
      68: imul
      69: iconst_1
      70: iload_3
      71: iadd
      72: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      75: istore        9
      77: iload         8
      79: istore        10
      81: iload         10
      83: iload         9
      85: if_icmpge     232
      88: iload         4
      90: bipush        36
      92: idiv
      93: istore        11
      95: iload         11
      97: iconst_1
      98: iload         5
     100: bipush        36
     102: idiv
     103: iadd
     104: if_icmpge     226
     107: aload_0
     108: iload         11
     110: invokespecial #15                 // Method blockWidth:(I)I
     113: istore        12
     115: iload         11
     117: bipush        36
     119: imul
     120: istore        13
     122: iload         4
     124: iload         13
     126: invokestatic  #47                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
     129: istore        14
     131: iload         11
     133: iconst_1
     134: iadd
     135: bipush        36
     137: imul
     138: iconst_1
     139: iload         5
     141: iadd
     142: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     145: istore        15
     147: aload_0
     148: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     151: iload         6
     153: aload_0
     154: getfield      #5                  // Field blockColumns:I
     157: imul
     158: iload         11
     160: iadd
     161: aaload
     162: astore        16
     164: iload         10
     166: iload         7
     168: isub
     169: iload         12
     171: imul
     172: iload         14
     174: iadd
     175: iload         13
     177: isub
     178: istore        17
     180: iload         14
     182: istore        18
     184: iload         18
     186: iload         15
     188: if_icmpge     220
     191: aload         16
     193: iload         17
     195: aload_1
     196: iload         10
     198: iload         18
     200: aload         16
     202: iload         17
     204: aaload
     205: invokeinterface #64,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
     210: aastore
     211: iinc          17, 1
     214: iinc          18, 1
     217: goto          184
     220: iinc          11, 1
     223: goto          95
     226: iinc          10, 1
     229: goto          81
     232: iinc          6, 1
     235: goto          36
     238: aload_1
     239: invokeinterface #65,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
     244: areturn

  public T walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: iload         4
       5: iload         5
       7: invokevirtual #41                 // Method checkSubMatrixIndex:(IIII)V
      10: aload_1
      11: aload_0
      12: getfield      #2                  // Field rows:I
      15: aload_0
      16: getfield      #3                  // Field columns:I
      19: iload_2
      20: iload_3
      21: iload         4
      23: iload         5
      25: invokeinterface #66,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.start:(IIIIII)V
      30: iload_2
      31: bipush        36
      33: idiv
      34: istore        6
      36: iload         6
      38: iconst_1
      39: iload_3
      40: bipush        36
      42: idiv
      43: iadd
      44: if_icmpge     233
      47: iload         6
      49: bipush        36
      51: imul
      52: istore        7
      54: iload_2
      55: iload         7
      57: invokestatic  #47                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
      60: istore        8
      62: iload         6
      64: iconst_1
      65: iadd
      66: bipush        36
      68: imul
      69: iconst_1
      70: iload_3
      71: iadd
      72: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      75: istore        9
      77: iload         8
      79: istore        10
      81: iload         10
      83: iload         9
      85: if_icmpge     227
      88: iload         4
      90: bipush        36
      92: idiv
      93: istore        11
      95: iload         11
      97: iconst_1
      98: iload         5
     100: bipush        36
     102: idiv
     103: iadd
     104: if_icmpge     221
     107: aload_0
     108: iload         11
     110: invokespecial #15                 // Method blockWidth:(I)I
     113: istore        12
     115: iload         11
     117: bipush        36
     119: imul
     120: istore        13
     122: iload         4
     124: iload         13
     126: invokestatic  #47                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
     129: istore        14
     131: iload         11
     133: iconst_1
     134: iadd
     135: bipush        36
     137: imul
     138: iconst_1
     139: iload         5
     141: iadd
     142: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     145: istore        15
     147: aload_0
     148: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     151: iload         6
     153: aload_0
     154: getfield      #5                  // Field blockColumns:I
     157: imul
     158: iload         11
     160: iadd
     161: aaload
     162: astore        16
     164: iload         10
     166: iload         7
     168: isub
     169: iload         12
     171: imul
     172: iload         14
     174: iadd
     175: iload         13
     177: isub
     178: istore        17
     180: iload         14
     182: istore        18
     184: iload         18
     186: iload         15
     188: if_icmpge     215
     191: aload_1
     192: iload         10
     194: iload         18
     196: aload         16
     198: iload         17
     200: aaload
     201: invokeinterface #67,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)V
     206: iinc          17, 1
     209: iinc          18, 1
     212: goto          184
     215: iinc          11, 1
     218: goto          95
     221: iinc          10, 1
     224: goto          81
     227: iinc          6, 1
     230: goto          36
     233: aload_1
     234: invokeinterface #68,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
     239: areturn

  public T walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field rows:I
       5: aload_0
       6: getfield      #3                  // Field columns:I
       9: iconst_0
      10: aload_0
      11: getfield      #2                  // Field rows:I
      14: iconst_1
      15: isub
      16: iconst_0
      17: aload_0
      18: getfield      #3                  // Field columns:I
      21: iconst_1
      22: isub
      23: invokeinterface #63,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.start:(IIIIII)V
      28: iconst_0
      29: istore_2
      30: iconst_0
      31: istore_3
      32: iload_3
      33: aload_0
      34: getfield      #4                  // Field blockRows:I
      37: if_icmpge     176
      40: iload_3
      41: bipush        36
      43: imul
      44: istore        4
      46: iload         4
      48: bipush        36
      50: iadd
      51: aload_0
      52: getfield      #2                  // Field rows:I
      55: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      58: istore        5
      60: iconst_0
      61: istore        6
      63: iload         6
      65: aload_0
      66: getfield      #5                  // Field blockColumns:I
      69: if_icmpge     170
      72: iload         6
      74: bipush        36
      76: imul
      77: istore        7
      79: iload         7
      81: bipush        36
      83: iadd
      84: aload_0
      85: getfield      #3                  // Field columns:I
      88: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      91: istore        8
      93: aload_0
      94: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      97: iload_2
      98: aaload
      99: astore        9
     101: iconst_0
     102: istore        10
     104: iload         4
     106: istore        11
     108: iload         11
     110: iload         5
     112: if_icmpge     161
     115: iload         7
     117: istore        12
     119: iload         12
     121: iload         8
     123: if_icmpge     155
     126: aload         9
     128: iload         10
     130: aload_1
     131: iload         11
     133: iload         12
     135: aload         9
     137: iload         10
     139: aaload
     140: invokeinterface #64,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
     145: aastore
     146: iinc          10, 1
     149: iinc          12, 1
     152: goto          119
     155: iinc          11, 1
     158: goto          108
     161: iinc          2, 1
     164: iinc          6, 1
     167: goto          63
     170: iinc          3, 1
     173: goto          32
     176: aload_1
     177: invokeinterface #65,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
     182: areturn

  public T walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field rows:I
       5: aload_0
       6: getfield      #3                  // Field columns:I
       9: iconst_0
      10: aload_0
      11: getfield      #2                  // Field rows:I
      14: iconst_1
      15: isub
      16: iconst_0
      17: aload_0
      18: getfield      #3                  // Field columns:I
      21: iconst_1
      22: isub
      23: invokeinterface #66,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.start:(IIIIII)V
      28: iconst_0
      29: istore_2
      30: iconst_0
      31: istore_3
      32: iload_3
      33: aload_0
      34: getfield      #4                  // Field blockRows:I
      37: if_icmpge     171
      40: iload_3
      41: bipush        36
      43: imul
      44: istore        4
      46: iload         4
      48: bipush        36
      50: iadd
      51: aload_0
      52: getfield      #2                  // Field rows:I
      55: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      58: istore        5
      60: iconst_0
      61: istore        6
      63: iload         6
      65: aload_0
      66: getfield      #5                  // Field blockColumns:I
      69: if_icmpge     165
      72: iload         6
      74: bipush        36
      76: imul
      77: istore        7
      79: iload         7
      81: bipush        36
      83: iadd
      84: aload_0
      85: getfield      #3                  // Field columns:I
      88: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      91: istore        8
      93: aload_0
      94: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
      97: iload_2
      98: aaload
      99: astore        9
     101: iconst_0
     102: istore        10
     104: iload         4
     106: istore        11
     108: iload         11
     110: iload         5
     112: if_icmpge     156
     115: iload         7
     117: istore        12
     119: iload         12
     121: iload         8
     123: if_icmpge     150
     126: aload_1
     127: iload         11
     129: iload         12
     131: aload         9
     133: iload         10
     135: aaload
     136: invokeinterface #67,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)V
     141: iinc          10, 1
     144: iinc          12, 1
     147: goto          119
     150: iinc          11, 1
     153: goto          108
     156: iinc          2, 1
     159: iinc          6, 1
     162: goto          63
     165: iinc          3, 1
     168: goto          32
     171: aload_1
     172: invokeinterface #68,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
     177: areturn

  public T walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: iload         4
       5: iload         5
       7: invokevirtual #41                 // Method checkSubMatrixIndex:(IIII)V
      10: aload_1
      11: aload_0
      12: getfield      #2                  // Field rows:I
      15: aload_0
      16: getfield      #3                  // Field columns:I
      19: iload_2
      20: iload_3
      21: iload         4
      23: iload         5
      25: invokeinterface #63,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.start:(IIIIII)V
      30: iload_2
      31: bipush        36
      33: idiv
      34: istore        6
      36: iload         6
      38: iconst_1
      39: iload_3
      40: bipush        36
      42: idiv
      43: iadd
      44: if_icmpge     238
      47: iload         6
      49: bipush        36
      51: imul
      52: istore        7
      54: iload_2
      55: iload         7
      57: invokestatic  #47                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
      60: istore        8
      62: iload         6
      64: iconst_1
      65: iadd
      66: bipush        36
      68: imul
      69: iconst_1
      70: iload_3
      71: iadd
      72: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      75: istore        9
      77: iload         4
      79: bipush        36
      81: idiv
      82: istore        10
      84: iload         10
      86: iconst_1
      87: iload         5
      89: bipush        36
      91: idiv
      92: iadd
      93: if_icmpge     232
      96: aload_0
      97: iload         10
      99: invokespecial #15                 // Method blockWidth:(I)I
     102: istore        11
     104: iload         10
     106: bipush        36
     108: imul
     109: istore        12
     111: iload         4
     113: iload         12
     115: invokestatic  #47                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
     118: istore        13
     120: iload         10
     122: iconst_1
     123: iadd
     124: bipush        36
     126: imul
     127: iconst_1
     128: iload         5
     130: iadd
     131: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     134: istore        14
     136: aload_0
     137: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     140: iload         6
     142: aload_0
     143: getfield      #5                  // Field blockColumns:I
     146: imul
     147: iload         10
     149: iadd
     150: aaload
     151: astore        15
     153: iload         8
     155: istore        16
     157: iload         16
     159: iload         9
     161: if_icmpge     226
     164: iload         16
     166: iload         7
     168: isub
     169: iload         11
     171: imul
     172: iload         13
     174: iadd
     175: iload         12
     177: isub
     178: istore        17
     180: iload         13
     182: istore        18
     184: iload         18
     186: iload         14
     188: if_icmpge     220
     191: aload         15
     193: iload         17
     195: aload_1
     196: iload         16
     198: iload         18
     200: aload         15
     202: iload         17
     204: aaload
     205: invokeinterface #64,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
     210: aastore
     211: iinc          17, 1
     214: iinc          18, 1
     217: goto          184
     220: iinc          16, 1
     223: goto          157
     226: iinc          10, 1
     229: goto          84
     232: iinc          6, 1
     235: goto          36
     238: aload_1
     239: invokeinterface #65,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixChangingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
     244: areturn

  public T walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: iload         4
       5: iload         5
       7: invokevirtual #41                 // Method checkSubMatrixIndex:(IIII)V
      10: aload_1
      11: aload_0
      12: getfield      #2                  // Field rows:I
      15: aload_0
      16: getfield      #3                  // Field columns:I
      19: iload_2
      20: iload_3
      21: iload         4
      23: iload         5
      25: invokeinterface #66,  7           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.start:(IIIIII)V
      30: iload_2
      31: bipush        36
      33: idiv
      34: istore        6
      36: iload         6
      38: iconst_1
      39: iload_3
      40: bipush        36
      42: idiv
      43: iadd
      44: if_icmpge     233
      47: iload         6
      49: bipush        36
      51: imul
      52: istore        7
      54: iload_2
      55: iload         7
      57: invokestatic  #47                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
      60: istore        8
      62: iload         6
      64: iconst_1
      65: iadd
      66: bipush        36
      68: imul
      69: iconst_1
      70: iload_3
      71: iadd
      72: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      75: istore        9
      77: iload         4
      79: bipush        36
      81: idiv
      82: istore        10
      84: iload         10
      86: iconst_1
      87: iload         5
      89: bipush        36
      91: idiv
      92: iadd
      93: if_icmpge     227
      96: aload_0
      97: iload         10
      99: invokespecial #15                 // Method blockWidth:(I)I
     102: istore        11
     104: iload         10
     106: bipush        36
     108: imul
     109: istore        12
     111: iload         4
     113: iload         12
     115: invokestatic  #47                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
     118: istore        13
     120: iload         10
     122: iconst_1
     123: iadd
     124: bipush        36
     126: imul
     127: iconst_1
     128: iload         5
     130: iadd
     131: invokestatic  #20                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
     134: istore        14
     136: aload_0
     137: getfield      #7                  // Field blocks:[[Lorg/apache/commons/math3/FieldElement;
     140: iload         6
     142: aload_0
     143: getfield      #5                  // Field blockColumns:I
     146: imul
     147: iload         10
     149: iadd
     150: aaload
     151: astore        15
     153: iload         8
     155: istore        16
     157: iload         16
     159: iload         9
     161: if_icmpge     221
     164: iload         16
     166: iload         7
     168: isub
     169: iload         11
     171: imul
     172: iload         13
     174: iadd
     175: iload         12
     177: isub
     178: istore        17
     180: iload         13
     182: istore        18
     184: iload         18
     186: iload         14
     188: if_icmpge     215
     191: aload_1
     192: iload         16
     194: iload         18
     196: aload         15
     198: iload         17
     200: aaload
     201: invokeinterface #67,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.visit:(IILorg/apache/commons/math3/FieldElement;)V
     206: iinc          17, 1
     209: iinc          18, 1
     212: goto          184
     215: iinc          16, 1
     218: goto          157
     221: iinc          10, 1
     224: goto          84
     227: iinc          6, 1
     230: goto          36
     233: aload_1
     234: invokeinterface #68,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
     239: areturn

  private int blockHeight(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #4                  // Field blockRows:I
       5: iconst_1
       6: isub
       7: if_icmpne     22
      10: aload_0
      11: getfield      #2                  // Field rows:I
      14: iload_1
      15: bipush        36
      17: imul
      18: isub
      19: goto          24
      22: bipush        36
      24: ireturn

  private int blockWidth(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #5                  // Field blockColumns:I
       5: iconst_1
       6: isub
       7: if_icmpne     22
      10: aload_0
      11: getfield      #3                  // Field columns:I
      14: iload_1
      15: bipush        36
      17: imul
      18: isub
      19: goto          24
      22: bipush        36
      24: ireturn
}
