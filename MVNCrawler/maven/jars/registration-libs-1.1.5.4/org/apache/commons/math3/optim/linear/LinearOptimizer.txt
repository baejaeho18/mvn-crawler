Compiled from "LinearOptimizer.java"
public abstract class org.apache.commons.math3.optim.linear.LinearOptimizer extends org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer {
  private org.apache.commons.math3.optim.linear.LinearObjectiveFunction function;

  private java.util.Collection<org.apache.commons.math3.optim.linear.LinearConstraint> linearConstraints;

  private boolean nonNegative;

  protected org.apache.commons.math3.optim.linear.LinearOptimizer();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method org/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer."<init>":(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
       5: return

  protected boolean isRestrictedToNonNegative();
    Code:
       0: aload_0
       1: getfield      #2                  // Field nonNegative:Z
       4: ireturn

  protected org.apache.commons.math3.optim.linear.LinearObjectiveFunction getFunction();
    Code:
       0: aload_0
       1: getfield      #3                  // Field function:Lorg/apache/commons/math3/optim/linear/LinearObjectiveFunction;
       4: areturn

  protected java.util.Collection<org.apache.commons.math3.optim.linear.LinearConstraint> getConstraints();
    Code:
       0: aload_0
       1: getfield      #4                  // Field linearConstraints:Ljava/util/Collection;
       4: invokestatic  #5                  // Method java/util/Collections.unmodifiableCollection:(Ljava/util/Collection;)Ljava/util/Collection;
       7: areturn

  public org.apache.commons.math3.optim.PointValuePair optimize(org.apache.commons.math3.optim.OptimizationData...) throws org.apache.commons.math3.exception.TooManyIterationsException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method org/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer.optimize:([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;
       5: areturn

  protected void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method org/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer.parseOptimizationData:([Lorg/apache/commons/math3/optim/OptimizationData;)V
       5: aload_1
       6: astore_2
       7: aload_2
       8: arraylength
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_3
      16: if_icmpge     97
      19: aload_2
      20: iload         4
      22: aaload
      23: astore        5
      25: aload         5
      27: instanceof    #8                  // class org/apache/commons/math3/optim/linear/LinearObjectiveFunction
      30: ifeq          45
      33: aload_0
      34: aload         5
      36: checkcast     #8                  // class org/apache/commons/math3/optim/linear/LinearObjectiveFunction
      39: putfield      #3                  // Field function:Lorg/apache/commons/math3/optim/linear/LinearObjectiveFunction;
      42: goto          91
      45: aload         5
      47: instanceof    #9                  // class org/apache/commons/math3/optim/linear/LinearConstraintSet
      50: ifeq          68
      53: aload_0
      54: aload         5
      56: checkcast     #9                  // class org/apache/commons/math3/optim/linear/LinearConstraintSet
      59: invokevirtual #10                 // Method org/apache/commons/math3/optim/linear/LinearConstraintSet.getConstraints:()Ljava/util/Collection;
      62: putfield      #4                  // Field linearConstraints:Ljava/util/Collection;
      65: goto          91
      68: aload         5
      70: instanceof    #11                 // class org/apache/commons/math3/optim/linear/NonNegativeConstraint
      73: ifeq          91
      76: aload_0
      77: aload         5
      79: checkcast     #11                 // class org/apache/commons/math3/optim/linear/NonNegativeConstraint
      82: invokevirtual #12                 // Method org/apache/commons/math3/optim/linear/NonNegativeConstraint.isRestrictedToNonNegative:()Z
      85: putfield      #2                  // Field nonNegative:Z
      88: goto          91
      91: iinc          4, 1
      94: goto          13
      97: return

  public java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method optimize:([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;
       5: areturn
}
