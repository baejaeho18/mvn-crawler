Compiled from "OpenIntToFieldHashMap.java"
public class org.apache.commons.math3.util.OpenIntToFieldHashMap<T extends org.apache.commons.math3.FieldElement<T>> implements java.io.Serializable {
  protected static final byte FREE;

  protected static final byte FULL;

  protected static final byte REMOVED;

  private static final long serialVersionUID;

  private static final float LOAD_FACTOR;

  private static final int DEFAULT_EXPECTED_SIZE;

  private static final int RESIZE_MULTIPLIER;

  private static final int PERTURB_SHIFT;

  private final org.apache.commons.math3.Field<T> field;

  private int[] keys;

  private T[] values;

  private byte[] states;

  private final T missingEntries;

  private int size;

  private int mask;

  private transient int count;

  public org.apache.commons.math3.util.OpenIntToFieldHashMap(org.apache.commons.math3.Field<T>);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        16
       4: aload_1
       5: invokeinterface #5,  1            // InterfaceMethod org/apache/commons/math3/Field.getZero:()Ljava/lang/Object;
      10: checkcast     #6                  // class org/apache/commons/math3/FieldElement
      13: invokespecial #7                  // Method "<init>":(Lorg/apache/commons/math3/Field;ILorg/apache/commons/math3/FieldElement;)V
      16: return

  public org.apache.commons.math3.util.OpenIntToFieldHashMap(org.apache.commons.math3.Field<T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        16
       4: aload_2
       5: invokespecial #7                  // Method "<init>":(Lorg/apache/commons/math3/Field;ILorg/apache/commons/math3/FieldElement;)V
       8: return

  public org.apache.commons.math3.util.OpenIntToFieldHashMap(org.apache.commons.math3.Field<T>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_1
       4: invokeinterface #5,  1            // InterfaceMethod org/apache/commons/math3/Field.getZero:()Ljava/lang/Object;
       9: checkcast     #6                  // class org/apache/commons/math3/FieldElement
      12: invokespecial #7                  // Method "<init>":(Lorg/apache/commons/math3/Field;ILorg/apache/commons/math3/FieldElement;)V
      15: return

  public org.apache.commons.math3.util.OpenIntToFieldHashMap(org.apache.commons.math3.Field<T>, int, T);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #9                  // Field field:Lorg/apache/commons/math3/Field;
       9: iload_2
      10: invokestatic  #10                 // Method computeCapacity:(I)I
      13: istore        4
      15: aload_0
      16: iload         4
      18: newarray       int
      20: putfield      #3                  // Field keys:[I
      23: aload_0
      24: aload_0
      25: iload         4
      27: invokespecial #11                 // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
      30: putfield      #2                  // Field values:[Lorg/apache/commons/math3/FieldElement;
      33: aload_0
      34: iload         4
      36: newarray       byte
      38: putfield      #1                  // Field states:[B
      41: aload_0
      42: aload_3
      43: putfield      #12                 // Field missingEntries:Lorg/apache/commons/math3/FieldElement;
      46: aload_0
      47: iload         4
      49: iconst_1
      50: isub
      51: putfield      #13                 // Field mask:I
      54: return

  public org.apache.commons.math3.util.OpenIntToFieldHashMap(org.apache.commons.math3.util.OpenIntToFieldHashMap<T>);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #9                  // Field field:Lorg/apache/commons/math3/Field;
       9: putfield      #9                  // Field field:Lorg/apache/commons/math3/Field;
      12: aload_1
      13: getfield      #3                  // Field keys:[I
      16: arraylength
      17: istore_2
      18: aload_0
      19: iload_2
      20: newarray       int
      22: putfield      #3                  // Field keys:[I
      25: aload_1
      26: getfield      #3                  // Field keys:[I
      29: iconst_0
      30: aload_0
      31: getfield      #3                  // Field keys:[I
      34: iconst_0
      35: iload_2
      36: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      39: aload_0
      40: aload_0
      41: iload_2
      42: invokespecial #11                 // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
      45: putfield      #2                  // Field values:[Lorg/apache/commons/math3/FieldElement;
      48: aload_1
      49: getfield      #2                  // Field values:[Lorg/apache/commons/math3/FieldElement;
      52: iconst_0
      53: aload_0
      54: getfield      #2                  // Field values:[Lorg/apache/commons/math3/FieldElement;
      57: iconst_0
      58: iload_2
      59: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      62: aload_0
      63: iload_2
      64: newarray       byte
      66: putfield      #1                  // Field states:[B
      69: aload_1
      70: getfield      #1                  // Field states:[B
      73: iconst_0
      74: aload_0
      75: getfield      #1                  // Field states:[B
      78: iconst_0
      79: iload_2
      80: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      83: aload_0
      84: aload_1
      85: getfield      #12                 // Field missingEntries:Lorg/apache/commons/math3/FieldElement;
      88: putfield      #12                 // Field missingEntries:Lorg/apache/commons/math3/FieldElement;
      91: aload_0
      92: aload_1
      93: getfield      #15                 // Field size:I
      96: putfield      #15                 // Field size:I
      99: aload_0
     100: aload_1
     101: getfield      #13                 // Field mask:I
     104: putfield      #13                 // Field mask:I
     107: aload_0
     108: aload_1
     109: getfield      #4                  // Field count:I
     112: putfield      #4                  // Field count:I
     115: return

  private static int computeCapacity(int);
    Code:
       0: iload_0
       1: ifne          6
       4: iconst_1
       5: ireturn
       6: iload_0
       7: i2f
       8: ldc           #16                 // float 0.5f
      10: fdiv
      11: f2d
      12: invokestatic  #17                 // Method org/apache/commons/math3/util/FastMath.ceil:(D)D
      15: d2i
      16: istore_1
      17: iload_1
      18: invokestatic  #18                 // Method java/lang/Integer.highestOneBit:(I)I
      21: istore_2
      22: iload_2
      23: iload_1
      24: if_icmpne     29
      27: iload_1
      28: ireturn
      29: iload_1
      30: invokestatic  #19                 // Method nextPowerOfTwo:(I)I
      33: ireturn

  private static int nextPowerOfTwo(int);
    Code:
       0: iload_0
       1: invokestatic  #18                 // Method java/lang/Integer.highestOneBit:(I)I
       4: iconst_1
       5: ishl
       6: ireturn

  public T get(int);
    Code:
       0: iload_1
       1: invokestatic  #20                 // Method hashOf:(I)I
       4: istore_2
       5: iload_2
       6: aload_0
       7: getfield      #13                 // Field mask:I
      10: iand
      11: istore_3
      12: aload_0
      13: iload_1
      14: iload_3
      15: invokespecial #21                 // Method containsKey:(II)Z
      18: ifeq          28
      21: aload_0
      22: getfield      #2                  // Field values:[Lorg/apache/commons/math3/FieldElement;
      25: iload_3
      26: aaload
      27: areturn
      28: aload_0
      29: getfield      #1                  // Field states:[B
      32: iload_3
      33: baload
      34: ifne          42
      37: aload_0
      38: getfield      #12                 // Field missingEntries:Lorg/apache/commons/math3/FieldElement;
      41: areturn
      42: iload_3
      43: istore        4
      45: iload_2
      46: invokestatic  #22                 // Method perturb:(I)I
      49: istore        5
      51: aload_0
      52: getfield      #1                  // Field states:[B
      55: iload_3
      56: baload
      57: ifeq          102
      60: iload         5
      62: iload         4
      64: invokestatic  #23                 // Method probe:(II)I
      67: istore        4
      69: iload         4
      71: aload_0
      72: getfield      #13                 // Field mask:I
      75: iand
      76: istore_3
      77: aload_0
      78: iload_1
      79: iload_3
      80: invokespecial #21                 // Method containsKey:(II)Z
      83: ifeq          93
      86: aload_0
      87: getfield      #2                  // Field values:[Lorg/apache/commons/math3/FieldElement;
      90: iload_3
      91: aaload
      92: areturn
      93: iload         5
      95: iconst_5
      96: ishr
      97: istore        5
      99: goto          51
     102: aload_0
     103: getfield      #12                 // Field missingEntries:Lorg/apache/commons/math3/FieldElement;
     106: areturn

  public boolean containsKey(int);
    Code:
       0: iload_1
       1: invokestatic  #20                 // Method hashOf:(I)I
       4: istore_2
       5: iload_2
       6: aload_0
       7: getfield      #13                 // Field mask:I
      10: iand
      11: istore_3
      12: aload_0
      13: iload_1
      14: iload_3
      15: invokespecial #21                 // Method containsKey:(II)Z
      18: ifeq          23
      21: iconst_1
      22: ireturn
      23: aload_0
      24: getfield      #1                  // Field states:[B
      27: iload_3
      28: baload
      29: ifne          34
      32: iconst_0
      33: ireturn
      34: iload_3
      35: istore        4
      37: iload_2
      38: invokestatic  #22                 // Method perturb:(I)I
      41: istore        5
      43: aload_0
      44: getfield      #1                  // Field states:[B
      47: iload_3
      48: baload
      49: ifeq          89
      52: iload         5
      54: iload         4
      56: invokestatic  #23                 // Method probe:(II)I
      59: istore        4
      61: iload         4
      63: aload_0
      64: getfield      #13                 // Field mask:I
      67: iand
      68: istore_3
      69: aload_0
      70: iload_1
      71: iload_3
      72: invokespecial #21                 // Method containsKey:(II)Z
      75: ifeq          80
      78: iconst_1
      79: ireturn
      80: iload         5
      82: iconst_5
      83: ishr
      84: istore        5
      86: goto          43
      89: iconst_0
      90: ireturn

  public org.apache.commons.math3.util.OpenIntToFieldHashMap<T>.Iterator iterator();
    Code:
       0: new           #24                 // class org/apache/commons/math3/util/OpenIntToFieldHashMap$Iterator
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #25                 // Method org/apache/commons/math3/util/OpenIntToFieldHashMap$Iterator."<init>":(Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;Lorg/apache/commons/math3/util/OpenIntToFieldHashMap$1;)V
       9: areturn

  private static int perturb(int);
    Code:
       0: iload_0
       1: ldc           #26                 // int 2147483647
       3: iand
       4: ireturn

  private int findInsertionIndex(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field keys:[I
       4: aload_0
       5: getfield      #1                  // Field states:[B
       8: iload_1
       9: aload_0
      10: getfield      #13                 // Field mask:I
      13: invokestatic  #27                 // Method findInsertionIndex:([I[BII)I
      16: ireturn

  private static int findInsertionIndex(int[], byte[], int, int);
    Code:
       0: iload_2
       1: invokestatic  #20                 // Method hashOf:(I)I
       4: istore        4
       6: iload         4
       8: iload_3
       9: iand
      10: istore        5
      12: aload_1
      13: iload         5
      15: baload
      16: ifne          22
      19: iload         5
      21: ireturn
      22: aload_1
      23: iload         5
      25: baload
      26: iconst_1
      27: if_icmpne     44
      30: aload_0
      31: iload         5
      33: iaload
      34: iload_2
      35: if_icmpne     44
      38: iload         5
      40: invokestatic  #28                 // Method changeIndexSign:(I)I
      43: ireturn
      44: iload         4
      46: invokestatic  #22                 // Method perturb:(I)I
      49: istore        6
      51: iload         5
      53: istore        7
      55: aload_1
      56: iload         5
      58: baload
      59: iconst_1
      60: if_icmpne     103
      63: iload         6
      65: iload         7
      67: invokestatic  #23                 // Method probe:(II)I
      70: istore        7
      72: iload         7
      74: iload_3
      75: iand
      76: istore        5
      78: iload         6
      80: iconst_5
      81: ishr
      82: istore        6
      84: aload_1
      85: iload         5
      87: baload
      88: iconst_1
      89: if_icmpne     103
      92: aload_0
      93: iload         5
      95: iaload
      96: iload_2
      97: if_icmpne     63
     100: goto          103
     103: aload_1
     104: iload         5
     106: baload
     107: ifne          113
     110: iload         5
     112: ireturn
     113: aload_1
     114: iload         5
     116: baload
     117: iconst_1
     118: if_icmpne     127
     121: iload         5
     123: invokestatic  #28                 // Method changeIndexSign:(I)I
     126: ireturn
     127: iload         5
     129: istore        8
     131: iload         6
     133: iload         7
     135: invokestatic  #23                 // Method probe:(II)I
     138: istore        7
     140: iload         7
     142: iload_3
     143: iand
     144: istore        5
     146: aload_1
     147: iload         5
     149: baload
     150: ifne          156
     153: iload         8
     155: ireturn
     156: aload_1
     157: iload         5
     159: baload
     160: iconst_1
     161: if_icmpne     178
     164: aload_0
     165: iload         5
     167: iaload
     168: iload_2
     169: if_icmpne     178
     172: iload         5
     174: invokestatic  #28                 // Method changeIndexSign:(I)I
     177: ireturn
     178: iload         6
     180: iconst_5
     181: ishr
     182: istore        6
     184: goto          131

  private static int probe(int, int);
    Code:
       0: iload_1
       1: iconst_2
       2: ishl
       3: iload_1
       4: iadd
       5: iload_0
       6: iadd
       7: iconst_1
       8: iadd
       9: ireturn

  private static int changeIndexSign(int);
    Code:
       0: iload_0
       1: ineg
       2: iconst_1
       3: isub
       4: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #15                 // Field size:I
       4: ireturn

  public T remove(int);
    Code:
       0: iload_1
       1: invokestatic  #20                 // Method hashOf:(I)I
       4: istore_2
       5: iload_2
       6: aload_0
       7: getfield      #13                 // Field mask:I
      10: iand
      11: istore_3
      12: aload_0
      13: iload_1
      14: iload_3
      15: invokespecial #21                 // Method containsKey:(II)Z
      18: ifeq          27
      21: aload_0
      22: iload_3
      23: invokespecial #29                 // Method doRemove:(I)Lorg/apache/commons/math3/FieldElement;
      26: areturn
      27: aload_0
      28: getfield      #1                  // Field states:[B
      31: iload_3
      32: baload
      33: ifne          41
      36: aload_0
      37: getfield      #12                 // Field missingEntries:Lorg/apache/commons/math3/FieldElement;
      40: areturn
      41: iload_3
      42: istore        4
      44: iload_2
      45: invokestatic  #22                 // Method perturb:(I)I
      48: istore        5
      50: aload_0
      51: getfield      #1                  // Field states:[B
      54: iload_3
      55: baload
      56: ifeq          100
      59: iload         5
      61: iload         4
      63: invokestatic  #23                 // Method probe:(II)I
      66: istore        4
      68: iload         4
      70: aload_0
      71: getfield      #13                 // Field mask:I
      74: iand
      75: istore_3
      76: aload_0
      77: iload_1
      78: iload_3
      79: invokespecial #21                 // Method containsKey:(II)Z
      82: ifeq          91
      85: aload_0
      86: iload_3
      87: invokespecial #29                 // Method doRemove:(I)Lorg/apache/commons/math3/FieldElement;
      90: areturn
      91: iload         5
      93: iconst_5
      94: ishr
      95: istore        5
      97: goto          50
     100: aload_0
     101: getfield      #12                 // Field missingEntries:Lorg/apache/commons/math3/FieldElement;
     104: areturn

  private boolean containsKey(int, int);
    Code:
       0: iload_1
       1: ifne          14
       4: aload_0
       5: getfield      #1                  // Field states:[B
       8: iload_2
       9: baload
      10: iconst_1
      11: if_icmpne     28
      14: aload_0
      15: getfield      #3                  // Field keys:[I
      18: iload_2
      19: iaload
      20: iload_1
      21: if_icmpne     28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  private T doRemove(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field keys:[I
       4: iload_1
       5: iconst_0
       6: iastore
       7: aload_0
       8: getfield      #1                  // Field states:[B
      11: iload_1
      12: iconst_2
      13: bastore
      14: aload_0
      15: getfield      #2                  // Field values:[Lorg/apache/commons/math3/FieldElement;
      18: iload_1
      19: aaload
      20: astore_2
      21: aload_0
      22: getfield      #2                  // Field values:[Lorg/apache/commons/math3/FieldElement;
      25: iload_1
      26: aload_0
      27: getfield      #12                 // Field missingEntries:Lorg/apache/commons/math3/FieldElement;
      30: aastore
      31: aload_0
      32: dup
      33: getfield      #15                 // Field size:I
      36: iconst_1
      37: isub
      38: putfield      #15                 // Field size:I
      41: aload_0
      42: dup
      43: getfield      #4                  // Field count:I
      46: iconst_1
      47: iadd
      48: putfield      #4                  // Field count:I
      51: aload_2
      52: areturn

  public T put(int, T);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #30                 // Method findInsertionIndex:(I)I
       5: istore_3
       6: aload_0
       7: getfield      #12                 // Field missingEntries:Lorg/apache/commons/math3/FieldElement;
      10: astore        4
      12: iconst_1
      13: istore        5
      15: iload_3
      16: ifge          35
      19: iload_3
      20: invokestatic  #28                 // Method changeIndexSign:(I)I
      23: istore_3
      24: aload_0
      25: getfield      #2                  // Field values:[Lorg/apache/commons/math3/FieldElement;
      28: iload_3
      29: aaload
      30: astore        4
      32: iconst_0
      33: istore        5
      35: aload_0
      36: getfield      #3                  // Field keys:[I
      39: iload_3
      40: iload_1
      41: iastore
      42: aload_0
      43: getfield      #1                  // Field states:[B
      46: iload_3
      47: iconst_1
      48: bastore
      49: aload_0
      50: getfield      #2                  // Field values:[Lorg/apache/commons/math3/FieldElement;
      53: iload_3
      54: aload_2
      55: aastore
      56: iload         5
      58: ifeq          92
      61: aload_0
      62: dup
      63: getfield      #15                 // Field size:I
      66: iconst_1
      67: iadd
      68: putfield      #15                 // Field size:I
      71: aload_0
      72: invokespecial #31                 // Method shouldGrowTable:()Z
      75: ifeq          82
      78: aload_0
      79: invokespecial #32                 // Method growTable:()V
      82: aload_0
      83: dup
      84: getfield      #4                  // Field count:I
      87: iconst_1
      88: iadd
      89: putfield      #4                  // Field count:I
      92: aload         4
      94: areturn

  private void growTable();
    Code:
       0: aload_0
       1: getfield      #1                  // Field states:[B
       4: arraylength
       5: istore_1
       6: aload_0
       7: getfield      #3                  // Field keys:[I
      10: astore_2
      11: aload_0
      12: getfield      #2                  // Field values:[Lorg/apache/commons/math3/FieldElement;
      15: astore_3
      16: aload_0
      17: getfield      #1                  // Field states:[B
      20: astore        4
      22: iconst_2
      23: iload_1
      24: imul
      25: istore        5
      27: iload         5
      29: newarray       int
      31: astore        6
      33: aload_0
      34: iload         5
      36: invokespecial #11                 // Method buildArray:(I)[Lorg/apache/commons/math3/FieldElement;
      39: astore        7
      41: iload         5
      43: newarray       byte
      45: astore        8
      47: iload         5
      49: iconst_1
      50: isub
      51: istore        9
      53: iconst_0
      54: istore        10
      56: iload         10
      58: iload_1
      59: if_icmpge     118
      62: aload         4
      64: iload         10
      66: baload
      67: iconst_1
      68: if_icmpne     112
      71: aload_2
      72: iload         10
      74: iaload
      75: istore        11
      77: aload         6
      79: aload         8
      81: iload         11
      83: iload         9
      85: invokestatic  #27                 // Method findInsertionIndex:([I[BII)I
      88: istore        12
      90: aload         6
      92: iload         12
      94: iload         11
      96: iastore
      97: aload         7
      99: iload         12
     101: aload_3
     102: iload         10
     104: aaload
     105: aastore
     106: aload         8
     108: iload         12
     110: iconst_1
     111: bastore
     112: iinc          10, 1
     115: goto          56
     118: aload_0
     119: iload         9
     121: putfield      #13                 // Field mask:I
     124: aload_0
     125: aload         6
     127: putfield      #3                  // Field keys:[I
     130: aload_0
     131: aload         7
     133: putfield      #2                  // Field values:[Lorg/apache/commons/math3/FieldElement;
     136: aload_0
     137: aload         8
     139: putfield      #1                  // Field states:[B
     142: return

  private boolean shouldGrowTable();
    Code:
       0: aload_0
       1: getfield      #15                 // Field size:I
       4: i2f
       5: aload_0
       6: getfield      #13                 // Field mask:I
       9: iconst_1
      10: iadd
      11: i2f
      12: ldc           #16                 // float 0.5f
      14: fmul
      15: fcmpl
      16: ifle          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  private static int hashOf(int);
    Code:
       0: iload_0
       1: iload_0
       2: bipush        20
       4: iushr
       5: iload_0
       6: bipush        12
       8: iushr
       9: ixor
      10: ixor
      11: istore_1
      12: iload_1
      13: iload_1
      14: bipush        7
      16: iushr
      17: ixor
      18: iload_1
      19: iconst_4
      20: iushr
      21: ixor
      22: ireturn

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #33                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: iconst_0
       6: putfield      #4                  // Field count:I
       9: return

  private T[] buildArray(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field field:Lorg/apache/commons/math3/Field;
       4: invokeinterface #34,  1           // InterfaceMethod org/apache/commons/math3/Field.getRuntimeClass:()Ljava/lang/Class;
       9: iload_1
      10: invokestatic  #35                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
      13: checkcast     #36                 // class "[Lorg/apache/commons/math3/FieldElement;"
      16: checkcast     #36                 // class "[Lorg/apache/commons/math3/FieldElement;"
      19: areturn

  static int access$100(org.apache.commons.math3.util.OpenIntToFieldHashMap);
    Code:
       0: aload_0
       1: getfield      #4                  // Field count:I
       4: ireturn

  static int[] access$200(org.apache.commons.math3.util.OpenIntToFieldHashMap);
    Code:
       0: aload_0
       1: getfield      #3                  // Field keys:[I
       4: areturn

  static org.apache.commons.math3.FieldElement[] access$300(org.apache.commons.math3.util.OpenIntToFieldHashMap);
    Code:
       0: aload_0
       1: getfield      #2                  // Field values:[Lorg/apache/commons/math3/FieldElement;
       4: areturn

  static byte[] access$400(org.apache.commons.math3.util.OpenIntToFieldHashMap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field states:[B
       4: areturn
}
