Compiled from "SimplexSolver.java"
public class org.apache.commons.math3.optimization.linear.SimplexSolver extends org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer {
  private static final double DEFAULT_EPSILON;

  private static final int DEFAULT_ULPS;

  private final double epsilon;

  private final int maxUlps;

  public org.apache.commons.math3.optimization.linear.SimplexSolver();
    Code:
       0: aload_0
       1: ldc2_w        #1                  // double 1.0E-6d
       4: bipush        10
       6: invokespecial #3                  // Method "<init>":(DI)V
       9: return

  public org.apache.commons.math3.optimization.linear.SimplexSolver(double, int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer."<init>":()V
       4: aload_0
       5: dload_1
       6: putfield      #5                  // Field epsilon:D
       9: aload_0
      10: iload_3
      11: putfield      #6                  // Field maxUlps:I
      14: return

  private java.lang.Integer getPivotColumn(org.apache.commons.math3.optimization.linear.SimplexTableau);
    Code:
       0: dconst_0
       1: dstore_2
       2: aconst_null
       3: astore        4
       5: aload_1
       6: invokevirtual #7                  // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getNumObjectiveFunctions:()I
       9: istore        5
      11: iload         5
      13: aload_1
      14: invokevirtual #8                  // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getWidth:()I
      17: iconst_1
      18: isub
      19: if_icmpge     54
      22: aload_1
      23: iconst_0
      24: iload         5
      26: invokevirtual #9                  // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getEntry:(II)D
      29: dstore        6
      31: dload         6
      33: dload_2
      34: dcmpg
      35: ifge          48
      38: dload         6
      40: dstore_2
      41: iload         5
      43: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      46: astore        4
      48: iinc          5, 1
      51: goto          11
      54: aload         4
      56: areturn

  private java.lang.Integer getPivotRow(org.apache.commons.math3.optimization.linear.SimplexTableau, int);
    Code:
       0: new           #11                 // class java/util/ArrayList
       3: dup
       4: invokespecial #12                 // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: ldc2_w        #13                 // double 1.7976931348623157E308d
      11: dstore        4
      13: aload_1
      14: invokevirtual #7                  // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getNumObjectiveFunctions:()I
      17: istore        6
      19: iload         6
      21: aload_1
      22: invokevirtual #15                 // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getHeight:()I
      25: if_icmpge     135
      28: aload_1
      29: iload         6
      31: aload_1
      32: invokevirtual #8                  // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getWidth:()I
      35: iconst_1
      36: isub
      37: invokevirtual #9                  // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getEntry:(II)D
      40: dstore        7
      42: aload_1
      43: iload         6
      45: iload_2
      46: invokevirtual #9                  // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getEntry:(II)D
      49: dstore        9
      51: dload         9
      53: dconst_0
      54: aload_0
      55: getfield      #6                  // Field maxUlps:I
      58: invokestatic  #16                 // Method org/apache/commons/math3/util/Precision.compareTo:(DDI)I
      61: ifle          129
      64: dload         7
      66: dload         9
      68: ddiv
      69: dstore        11
      71: dload         11
      73: dload         4
      75: invokestatic  #17                 // Method java/lang/Double.compare:(DD)I
      78: istore        13
      80: iload         13
      82: ifne          100
      85: aload_3
      86: iload         6
      88: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      91: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      96: pop
      97: goto          129
     100: iload         13
     102: ifge          129
     105: dload         11
     107: dstore        4
     109: new           #11                 // class java/util/ArrayList
     112: dup
     113: invokespecial #12                 // Method java/util/ArrayList."<init>":()V
     116: astore_3
     117: aload_3
     118: iload         6
     120: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     123: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     128: pop
     129: iinc          6, 1
     132: goto          19
     135: aload_3
     136: invokeinterface #19,  1           // InterfaceMethod java/util/List.size:()I
     141: ifne          146
     144: aconst_null
     145: areturn
     146: aload_3
     147: invokeinterface #19,  1           // InterfaceMethod java/util/List.size:()I
     152: iconst_1
     153: if_icmple     403
     156: aload_1
     157: invokevirtual #20                 // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getNumArtificialVariables:()I
     160: ifle          266
     163: aload_3
     164: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     169: astore        6
     171: aload         6
     173: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     178: ifeq          266
     181: aload         6
     183: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     188: checkcast     #24                 // class java/lang/Integer
     191: astore        7
     193: iconst_0
     194: istore        8
     196: iload         8
     198: aload_1
     199: invokevirtual #20                 // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getNumArtificialVariables:()I
     202: if_icmpge     263
     205: iload         8
     207: aload_1
     208: invokevirtual #25                 // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getArtificialVariableOffset:()I
     211: iadd
     212: istore        9
     214: aload_1
     215: aload         7
     217: invokevirtual #26                 // Method java/lang/Integer.intValue:()I
     220: iload         9
     222: invokevirtual #9                  // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getEntry:(II)D
     225: dstore        10
     227: dload         10
     229: dconst_1
     230: aload_0
     231: getfield      #6                  // Field maxUlps:I
     234: invokestatic  #27                 // Method org/apache/commons/math3/util/Precision.equals:(DDI)Z
     237: ifeq          257
     240: aload         7
     242: aload_1
     243: iload         9
     245: invokevirtual #28                 // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getBasicRow:(I)Ljava/lang/Integer;
     248: invokevirtual #29                 // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     251: ifeq          257
     254: aload         7
     256: areturn
     257: iinc          8, 1
     260: goto          196
     263: goto          171
     266: aload_0
     267: invokevirtual #30                 // Method getIterations:()I
     270: aload_0
     271: invokevirtual #31                 // Method getMaxIterations:()I
     274: iconst_2
     275: idiv
     276: if_icmpge     403
     279: aconst_null
     280: astore        6
     282: aload_1
     283: invokevirtual #8                  // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getWidth:()I
     286: istore        7
     288: aload_1
     289: invokevirtual #7                  // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getNumObjectiveFunctions:()I
     292: istore        8
     294: aload_1
     295: invokevirtual #8                  // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getWidth:()I
     298: iconst_1
     299: isub
     300: istore        9
     302: aload_3
     303: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     308: astore        10
     310: aload         10
     312: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     317: ifeq          400
     320: aload         10
     322: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     327: checkcast     #24                 // class java/lang/Integer
     330: astore        11
     332: iload         8
     334: istore        12
     336: iload         12
     338: iload         9
     340: if_icmpge     397
     343: aload         11
     345: aload         6
     347: invokevirtual #29                 // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     350: ifne          397
     353: aload_1
     354: iload         12
     356: invokevirtual #28                 // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getBasicRow:(I)Ljava/lang/Integer;
     359: astore        13
     361: aload         13
     363: ifnull        391
     366: aload         13
     368: aload         11
     370: invokevirtual #29                 // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     373: ifeq          391
     376: iload         12
     378: iload         7
     380: if_icmpge     391
     383: iload         12
     385: istore        7
     387: aload         11
     389: astore        6
     391: iinc          12, 1
     394: goto          336
     397: goto          310
     400: aload         6
     402: areturn
     403: aload_3
     404: iconst_0
     405: invokeinterface #32,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     410: checkcast     #24                 // class java/lang/Integer
     413: areturn

  protected void doIteration(org.apache.commons.math3.optimization.linear.SimplexTableau) throws org.apache.commons.math3.exception.MaxCountExceededException, org.apache.commons.math3.optimization.linear.UnboundedSolutionException;
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method incrementIterationsCounter:()V
       4: aload_0
       5: aload_1
       6: invokespecial #34                 // Method getPivotColumn:(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;)Ljava/lang/Integer;
       9: astore_2
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokevirtual #26                 // Method java/lang/Integer.intValue:()I
      16: invokespecial #35                 // Method getPivotRow:(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;I)Ljava/lang/Integer;
      19: astore_3
      20: aload_3
      21: ifnonnull     32
      24: new           #36                 // class org/apache/commons/math3/optimization/linear/UnboundedSolutionException
      27: dup
      28: invokespecial #37                 // Method org/apache/commons/math3/optimization/linear/UnboundedSolutionException."<init>":()V
      31: athrow
      32: aload_1
      33: aload_3
      34: invokevirtual #26                 // Method java/lang/Integer.intValue:()I
      37: aload_2
      38: invokevirtual #26                 // Method java/lang/Integer.intValue:()I
      41: invokevirtual #9                  // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getEntry:(II)D
      44: dstore        4
      46: aload_1
      47: aload_3
      48: invokevirtual #26                 // Method java/lang/Integer.intValue:()I
      51: dload         4
      53: invokevirtual #38                 // Method org/apache/commons/math3/optimization/linear/SimplexTableau.divideRow:(ID)V
      56: iconst_0
      57: istore        6
      59: iload         6
      61: aload_1
      62: invokevirtual #15                 // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getHeight:()I
      65: if_icmpge     107
      68: iload         6
      70: aload_3
      71: invokevirtual #26                 // Method java/lang/Integer.intValue:()I
      74: if_icmpeq     101
      77: aload_1
      78: iload         6
      80: aload_2
      81: invokevirtual #26                 // Method java/lang/Integer.intValue:()I
      84: invokevirtual #9                  // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getEntry:(II)D
      87: dstore        7
      89: aload_1
      90: iload         6
      92: aload_3
      93: invokevirtual #26                 // Method java/lang/Integer.intValue:()I
      96: dload         7
      98: invokevirtual #39                 // Method org/apache/commons/math3/optimization/linear/SimplexTableau.subtractRow:(IID)V
     101: iinc          6, 1
     104: goto          59
     107: return

  protected void solvePhase1(org.apache.commons.math3.optimization.linear.SimplexTableau) throws org.apache.commons.math3.exception.MaxCountExceededException, org.apache.commons.math3.optimization.linear.UnboundedSolutionException, org.apache.commons.math3.optimization.linear.NoFeasibleSolutionException;
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getNumArtificialVariables:()I
       4: ifne          8
       7: return
       8: aload_1
       9: invokevirtual #40                 // Method org/apache/commons/math3/optimization/linear/SimplexTableau.isOptimal:()Z
      12: ifne          23
      15: aload_0
      16: aload_1
      17: invokevirtual #41                 // Method doIteration:(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;)V
      20: goto          8
      23: aload_1
      24: iconst_0
      25: aload_1
      26: invokevirtual #42                 // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getRhsOffset:()I
      29: invokevirtual #9                  // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getEntry:(II)D
      32: dconst_0
      33: aload_0
      34: getfield      #5                  // Field epsilon:D
      37: invokestatic  #43                 // Method org/apache/commons/math3/util/Precision.equals:(DDD)Z
      40: ifne          51
      43: new           #44                 // class org/apache/commons/math3/optimization/linear/NoFeasibleSolutionException
      46: dup
      47: invokespecial #45                 // Method org/apache/commons/math3/optimization/linear/NoFeasibleSolutionException."<init>":()V
      50: athrow
      51: return

  public org.apache.commons.math3.optimization.PointValuePair doOptimize() throws org.apache.commons.math3.exception.MaxCountExceededException, org.apache.commons.math3.optimization.linear.UnboundedSolutionException, org.apache.commons.math3.optimization.linear.NoFeasibleSolutionException;
    Code:
       0: new           #46                 // class org/apache/commons/math3/optimization/linear/SimplexTableau
       3: dup
       4: aload_0
       5: invokevirtual #47                 // Method getFunction:()Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;
       8: aload_0
       9: invokevirtual #48                 // Method getConstraints:()Ljava/util/Collection;
      12: aload_0
      13: invokevirtual #49                 // Method getGoalType:()Lorg/apache/commons/math3/optimization/GoalType;
      16: aload_0
      17: invokevirtual #50                 // Method restrictToNonNegative:()Z
      20: aload_0
      21: getfield      #5                  // Field epsilon:D
      24: aload_0
      25: getfield      #6                  // Field maxUlps:I
      28: invokespecial #51                 // Method org/apache/commons/math3/optimization/linear/SimplexTableau."<init>":(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V
      31: astore_1
      32: aload_0
      33: aload_1
      34: invokevirtual #52                 // Method solvePhase1:(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;)V
      37: aload_1
      38: invokevirtual #53                 // Method org/apache/commons/math3/optimization/linear/SimplexTableau.dropPhase1Objective:()V
      41: aload_1
      42: invokevirtual #40                 // Method org/apache/commons/math3/optimization/linear/SimplexTableau.isOptimal:()Z
      45: ifne          56
      48: aload_0
      49: aload_1
      50: invokevirtual #41                 // Method doIteration:(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;)V
      53: goto          41
      56: aload_1
      57: invokevirtual #54                 // Method org/apache/commons/math3/optimization/linear/SimplexTableau.getSolution:()Lorg/apache/commons/math3/optimization/PointValuePair;
      60: areturn
}
