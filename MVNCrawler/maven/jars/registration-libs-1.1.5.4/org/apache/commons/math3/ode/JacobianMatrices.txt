Compiled from "JacobianMatrices.java"
public class org.apache.commons.math3.ode.JacobianMatrices {
  private org.apache.commons.math3.ode.ExpandableStatefulODE efode;

  private int index;

  private org.apache.commons.math3.ode.MainStateJacobianProvider jode;

  private org.apache.commons.math3.ode.ParameterizedODE pode;

  private int stateDim;

  private org.apache.commons.math3.ode.ParameterConfiguration[] selectedParameters;

  private java.util.List<org.apache.commons.math3.ode.ParameterJacobianProvider> jacobianProviders;

  private int paramDim;

  private boolean dirtyParameter;

  private double[] matricesData;

  public org.apache.commons.math3.ode.JacobianMatrices(org.apache.commons.math3.ode.FirstOrderDifferentialEquations, double[], java.lang.String...) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: new           #8                  // class org/apache/commons/math3/ode/JacobianMatrices$MainStateJacobianWrapper
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #9                  // Method org/apache/commons/math3/ode/JacobianMatrices$MainStateJacobianWrapper."<init>":(Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;[D)V
      10: aload_3
      11: invokespecial #10                 // Method "<init>":(Lorg/apache/commons/math3/ode/MainStateJacobianProvider;[Ljava/lang/String;)V
      14: return

  public org.apache.commons.math3.ode.JacobianMatrices(org.apache.commons.math3.ode.MainStateJacobianProvider, java.lang.String...);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #12                 // Field efode:Lorg/apache/commons/math3/ode/ExpandableStatefulODE;
       9: aload_0
      10: iconst_m1
      11: putfield      #13                 // Field index:I
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field jode:Lorg/apache/commons/math3/ode/MainStateJacobianProvider;
      19: aload_0
      20: aconst_null
      21: putfield      #3                  // Field pode:Lorg/apache/commons/math3/ode/ParameterizedODE;
      24: aload_0
      25: aload_1
      26: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/math3/ode/MainStateJacobianProvider.getDimension:()I
      31: putfield      #7                  // Field stateDim:I
      34: aload_2
      35: ifnonnull     51
      38: aload_0
      39: aconst_null
      40: putfield      #2                  // Field selectedParameters:[Lorg/apache/commons/math3/ode/ParameterConfiguration;
      43: aload_0
      44: iconst_0
      45: putfield      #6                  // Field paramDim:I
      48: goto          99
      51: aload_0
      52: aload_2
      53: arraylength
      54: anewarray     #15                 // class org/apache/commons/math3/ode/ParameterConfiguration
      57: putfield      #2                  // Field selectedParameters:[Lorg/apache/commons/math3/ode/ParameterConfiguration;
      60: iconst_0
      61: istore_3
      62: iload_3
      63: aload_2
      64: arraylength
      65: if_icmpge     93
      68: aload_0
      69: getfield      #2                  // Field selectedParameters:[Lorg/apache/commons/math3/ode/ParameterConfiguration;
      72: iload_3
      73: new           #15                 // class org/apache/commons/math3/ode/ParameterConfiguration
      76: dup
      77: aload_2
      78: iload_3
      79: aaload
      80: ldc2_w        #16                 // double NaNd
      83: invokespecial #18                 // Method org/apache/commons/math3/ode/ParameterConfiguration."<init>":(Ljava/lang/String;D)V
      86: aastore
      87: iinc          3, 1
      90: goto          62
      93: aload_0
      94: aload_2
      95: arraylength
      96: putfield      #6                  // Field paramDim:I
      99: aload_0
     100: iconst_0
     101: putfield      #5                  // Field dirtyParameter:Z
     104: aload_0
     105: new           #19                 // class java/util/ArrayList
     108: dup
     109: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
     112: putfield      #1                  // Field jacobianProviders:Ljava/util/List;
     115: aload_0
     116: aload_0
     117: getfield      #7                  // Field stateDim:I
     120: aload_0
     121: getfield      #6                  // Field paramDim:I
     124: iadd
     125: aload_0
     126: getfield      #7                  // Field stateDim:I
     129: imul
     130: newarray       double
     132: putfield      #21                 // Field matricesData:[D
     135: iconst_0
     136: istore_3
     137: iload_3
     138: aload_0
     139: getfield      #7                  // Field stateDim:I
     142: if_icmpge     165
     145: aload_0
     146: getfield      #21                 // Field matricesData:[D
     149: iload_3
     150: aload_0
     151: getfield      #7                  // Field stateDim:I
     154: iconst_1
     155: iadd
     156: imul
     157: dconst_1
     158: dastore
     159: iinc          3, 1
     162: goto          137
     165: return

  public void registerVariationalEquations(org.apache.commons.math3.ode.ExpandableStatefulODE) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.ode.JacobianMatrices$MismatchedEquations;
    Code:
       0: aload_0
       1: getfield      #4                  // Field jode:Lorg/apache/commons/math3/ode/MainStateJacobianProvider;
       4: instanceof    #8                  // class org/apache/commons/math3/ode/JacobianMatrices$MainStateJacobianWrapper
       7: ifeq          23
      10: aload_0
      11: getfield      #4                  // Field jode:Lorg/apache/commons/math3/ode/MainStateJacobianProvider;
      14: checkcast     #8                  // class org/apache/commons/math3/ode/JacobianMatrices$MainStateJacobianWrapper
      17: invokestatic  #22                 // Method org/apache/commons/math3/ode/JacobianMatrices$MainStateJacobianWrapper.access$000:(Lorg/apache/commons/math3/ode/JacobianMatrices$MainStateJacobianWrapper;)Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;
      20: goto          27
      23: aload_0
      24: getfield      #4                  // Field jode:Lorg/apache/commons/math3/ode/MainStateJacobianProvider;
      27: astore_2
      28: aload_1
      29: invokevirtual #23                 // Method org/apache/commons/math3/ode/ExpandableStatefulODE.getPrimary:()Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;
      32: aload_2
      33: if_acmpeq     44
      36: new           #24                 // class org/apache/commons/math3/ode/JacobianMatrices$MismatchedEquations
      39: dup
      40: invokespecial #25                 // Method org/apache/commons/math3/ode/JacobianMatrices$MismatchedEquations."<init>":()V
      43: athrow
      44: aload_0
      45: aload_1
      46: putfield      #12                 // Field efode:Lorg/apache/commons/math3/ode/ExpandableStatefulODE;
      49: aload_0
      50: aload_0
      51: getfield      #12                 // Field efode:Lorg/apache/commons/math3/ode/ExpandableStatefulODE;
      54: new           #26                 // class org/apache/commons/math3/ode/JacobianMatrices$JacobiansSecondaryEquations
      57: dup
      58: aload_0
      59: aconst_null
      60: invokespecial #27                 // Method org/apache/commons/math3/ode/JacobianMatrices$JacobiansSecondaryEquations."<init>":(Lorg/apache/commons/math3/ode/JacobianMatrices;Lorg/apache/commons/math3/ode/JacobianMatrices$1;)V
      63: invokevirtual #28                 // Method org/apache/commons/math3/ode/ExpandableStatefulODE.addSecondaryEquations:(Lorg/apache/commons/math3/ode/SecondaryEquations;)I
      66: putfield      #13                 // Field index:I
      69: aload_0
      70: getfield      #12                 // Field efode:Lorg/apache/commons/math3/ode/ExpandableStatefulODE;
      73: aload_0
      74: getfield      #13                 // Field index:I
      77: aload_0
      78: getfield      #21                 // Field matricesData:[D
      81: invokevirtual #29                 // Method org/apache/commons/math3/ode/ExpandableStatefulODE.setSecondaryState:(I[D)V
      84: return

  public void addParameterJacobianProvider(org.apache.commons.math3.ode.ParameterJacobianProvider);
    Code:
       0: aload_0
       1: getfield      #1                  // Field jacobianProviders:Ljava/util/List;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void setParameterizedODE(org.apache.commons.math3.ode.ParameterizedODE);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field pode:Lorg/apache/commons/math3/ode/ParameterizedODE;
       5: aload_0
       6: iconst_1
       7: putfield      #5                  // Field dirtyParameter:Z
      10: return

  public void setParameterStep(java.lang.String, double) throws org.apache.commons.math3.ode.UnknownParameterException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field selectedParameters:[Lorg/apache/commons/math3/ode/ParameterConfiguration;
       4: astore        4
       6: aload         4
       8: arraylength
       9: istore        5
      11: iconst_0
      12: istore        6
      14: iload         6
      16: iload         5
      18: if_icmpge     58
      21: aload         4
      23: iload         6
      25: aaload
      26: astore        7
      28: aload_1
      29: aload         7
      31: invokevirtual #31                 // Method org/apache/commons/math3/ode/ParameterConfiguration.getParameterName:()Ljava/lang/String;
      34: invokevirtual #32                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ifeq          52
      40: aload         7
      42: dload_2
      43: invokevirtual #33                 // Method org/apache/commons/math3/ode/ParameterConfiguration.setHP:(D)V
      46: aload_0
      47: iconst_1
      48: putfield      #5                  // Field dirtyParameter:Z
      51: return
      52: iinc          6, 1
      55: goto          14
      58: new           #34                 // class org/apache/commons/math3/ode/UnknownParameterException
      61: dup
      62: aload_1
      63: invokespecial #35                 // Method org/apache/commons/math3/ode/UnknownParameterException."<init>":(Ljava/lang/String;)V
      66: athrow

  public void setInitialMainStateJacobian(double[][]) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field stateDim:I
       5: aload_1
       6: invokespecial #36                 // Method checkDimension:(ILjava/lang/Object;)V
       9: aload_0
      10: aload_0
      11: getfield      #7                  // Field stateDim:I
      14: aload_1
      15: iconst_0
      16: aaload
      17: invokespecial #36                 // Method checkDimension:(ILjava/lang/Object;)V
      20: iconst_0
      21: istore_2
      22: aload_1
      23: astore_3
      24: aload_3
      25: arraylength
      26: istore        4
      28: iconst_0
      29: istore        5
      31: iload         5
      33: iload         4
      35: if_icmpge     72
      38: aload_3
      39: iload         5
      41: aaload
      42: astore        6
      44: aload         6
      46: iconst_0
      47: aload_0
      48: getfield      #21                 // Field matricesData:[D
      51: iload_2
      52: aload_0
      53: getfield      #7                  // Field stateDim:I
      56: invokestatic  #37                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      59: iload_2
      60: aload_0
      61: getfield      #7                  // Field stateDim:I
      64: iadd
      65: istore_2
      66: iinc          5, 1
      69: goto          31
      72: aload_0
      73: getfield      #12                 // Field efode:Lorg/apache/commons/math3/ode/ExpandableStatefulODE;
      76: ifnull        94
      79: aload_0
      80: getfield      #12                 // Field efode:Lorg/apache/commons/math3/ode/ExpandableStatefulODE;
      83: aload_0
      84: getfield      #13                 // Field index:I
      87: aload_0
      88: getfield      #21                 // Field matricesData:[D
      91: invokevirtual #29                 // Method org/apache/commons/math3/ode/ExpandableStatefulODE.setSecondaryState:(I[D)V
      94: return

  public void setInitialParameterJacobian(java.lang.String, double[]) throws org.apache.commons.math3.ode.UnknownParameterException, org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field stateDim:I
       5: aload_2
       6: invokespecial #36                 // Method checkDimension:(ILjava/lang/Object;)V
       9: aload_0
      10: getfield      #7                  // Field stateDim:I
      13: aload_0
      14: getfield      #7                  // Field stateDim:I
      17: imul
      18: istore_3
      19: aload_0
      20: getfield      #2                  // Field selectedParameters:[Lorg/apache/commons/math3/ode/ParameterConfiguration;
      23: astore        4
      25: aload         4
      27: arraylength
      28: istore        5
      30: iconst_0
      31: istore        6
      33: iload         6
      35: iload         5
      37: if_icmpge     109
      40: aload         4
      42: iload         6
      44: aaload
      45: astore        7
      47: aload_1
      48: aload         7
      50: invokevirtual #31                 // Method org/apache/commons/math3/ode/ParameterConfiguration.getParameterName:()Ljava/lang/String;
      53: invokevirtual #32                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      56: ifeq          96
      59: aload_2
      60: iconst_0
      61: aload_0
      62: getfield      #21                 // Field matricesData:[D
      65: iload_3
      66: aload_0
      67: getfield      #7                  // Field stateDim:I
      70: invokestatic  #37                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      73: aload_0
      74: getfield      #12                 // Field efode:Lorg/apache/commons/math3/ode/ExpandableStatefulODE;
      77: ifnull        95
      80: aload_0
      81: getfield      #12                 // Field efode:Lorg/apache/commons/math3/ode/ExpandableStatefulODE;
      84: aload_0
      85: getfield      #13                 // Field index:I
      88: aload_0
      89: getfield      #21                 // Field matricesData:[D
      92: invokevirtual #29                 // Method org/apache/commons/math3/ode/ExpandableStatefulODE.setSecondaryState:(I[D)V
      95: return
      96: iload_3
      97: aload_0
      98: getfield      #7                  // Field stateDim:I
     101: iadd
     102: istore_3
     103: iinc          6, 1
     106: goto          33
     109: new           #34                 // class org/apache/commons/math3/ode/UnknownParameterException
     112: dup
     113: aload_1
     114: invokespecial #35                 // Method org/apache/commons/math3/ode/UnknownParameterException."<init>":(Ljava/lang/String;)V
     117: athrow

  public void getCurrentMainSetJacobian(double[][]);
    Code:
       0: aload_0
       1: getfield      #12                 // Field efode:Lorg/apache/commons/math3/ode/ExpandableStatefulODE;
       4: aload_0
       5: getfield      #13                 // Field index:I
       8: invokevirtual #38                 // Method org/apache/commons/math3/ode/ExpandableStatefulODE.getSecondaryState:(I)[D
      11: astore_2
      12: iconst_0
      13: istore_3
      14: iconst_0
      15: istore        4
      17: iload         4
      19: aload_0
      20: getfield      #7                  // Field stateDim:I
      23: if_icmpge     53
      26: aload_2
      27: iload_3
      28: aload_1
      29: iload         4
      31: aaload
      32: iconst_0
      33: aload_0
      34: getfield      #7                  // Field stateDim:I
      37: invokestatic  #37                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      40: iload_3
      41: aload_0
      42: getfield      #7                  // Field stateDim:I
      45: iadd
      46: istore_3
      47: iinc          4, 1
      50: goto          17
      53: return

  public void getCurrentParameterJacobian(java.lang.String, double[]);
    Code:
       0: aload_0
       1: getfield      #12                 // Field efode:Lorg/apache/commons/math3/ode/ExpandableStatefulODE;
       4: aload_0
       5: getfield      #13                 // Field index:I
       8: invokevirtual #38                 // Method org/apache/commons/math3/ode/ExpandableStatefulODE.getSecondaryState:(I)[D
      11: astore_3
      12: aload_0
      13: getfield      #7                  // Field stateDim:I
      16: aload_0
      17: getfield      #7                  // Field stateDim:I
      20: imul
      21: istore        4
      23: aload_0
      24: getfield      #2                  // Field selectedParameters:[Lorg/apache/commons/math3/ode/ParameterConfiguration;
      27: astore        5
      29: aload         5
      31: arraylength
      32: istore        6
      34: iconst_0
      35: istore        7
      37: iload         7
      39: iload         6
      41: if_icmpge     91
      44: aload         5
      46: iload         7
      48: aaload
      49: astore        8
      51: aload         8
      53: invokevirtual #31                 // Method org/apache/commons/math3/ode/ParameterConfiguration.getParameterName:()Ljava/lang/String;
      56: aload_1
      57: invokevirtual #32                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      60: ifeq          76
      63: aload_3
      64: iload         4
      66: aload_2
      67: iconst_0
      68: aload_0
      69: getfield      #7                  // Field stateDim:I
      72: invokestatic  #37                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      75: return
      76: iload         4
      78: aload_0
      79: getfield      #7                  // Field stateDim:I
      82: iadd
      83: istore        4
      85: iinc          7, 1
      88: goto          37
      91: return

  private void checkDimension(int, java.lang.Object) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_2
       1: ifnonnull     8
       4: iconst_0
       5: goto          12
       8: aload_2
       9: invokestatic  #39                 // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
      12: istore_3
      13: iload_3
      14: iload_1
      15: if_icmpeq     28
      18: new           #40                 // class org/apache/commons/math3/exception/DimensionMismatchException
      21: dup
      22: iload_3
      23: iload_1
      24: invokespecial #41                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      27: athrow
      28: return

  static int access$200(org.apache.commons.math3.ode.JacobianMatrices);
    Code:
       0: aload_0
       1: getfield      #7                  // Field stateDim:I
       4: ireturn

  static int access$300(org.apache.commons.math3.ode.JacobianMatrices);
    Code:
       0: aload_0
       1: getfield      #6                  // Field paramDim:I
       4: ireturn

  static boolean access$400(org.apache.commons.math3.ode.JacobianMatrices);
    Code:
       0: aload_0
       1: getfield      #5                  // Field dirtyParameter:Z
       4: ireturn

  static org.apache.commons.math3.ode.MainStateJacobianProvider access$500(org.apache.commons.math3.ode.JacobianMatrices);
    Code:
       0: aload_0
       1: getfield      #4                  // Field jode:Lorg/apache/commons/math3/ode/MainStateJacobianProvider;
       4: areturn

  static org.apache.commons.math3.ode.ParameterizedODE access$600(org.apache.commons.math3.ode.JacobianMatrices);
    Code:
       0: aload_0
       1: getfield      #3                  // Field pode:Lorg/apache/commons/math3/ode/ParameterizedODE;
       4: areturn

  static org.apache.commons.math3.ode.ParameterConfiguration[] access$700(org.apache.commons.math3.ode.JacobianMatrices);
    Code:
       0: aload_0
       1: getfield      #2                  // Field selectedParameters:[Lorg/apache/commons/math3/ode/ParameterConfiguration;
       4: areturn

  static java.util.List access$800(org.apache.commons.math3.ode.JacobianMatrices);
    Code:
       0: aload_0
       1: getfield      #1                  // Field jacobianProviders:Ljava/util/List;
       4: areturn

  static boolean access$402(org.apache.commons.math3.ode.JacobianMatrices, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #5                  // Field dirtyParameter:Z
       6: ireturn
}
