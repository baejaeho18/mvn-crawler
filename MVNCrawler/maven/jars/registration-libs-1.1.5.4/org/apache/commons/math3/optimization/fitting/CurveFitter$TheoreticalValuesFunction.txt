Compiled from "CurveFitter.java"
class org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction implements org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction {
  private final org.apache.commons.math3.analysis.ParametricUnivariateFunction f;

  final org.apache.commons.math3.optimization.fitting.CurveFitter this$0;

  org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction(org.apache.commons.math3.optimization.fitting.CurveFitter, org.apache.commons.math3.analysis.ParametricUnivariateFunction);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/commons/math3/optimization/fitting/CurveFitter;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field f:Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;
      14: return

  public double[] value(double[]);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/commons/math3/optimization/fitting/CurveFitter;
       4: invokestatic  #4                  // Method org/apache/commons/math3/optimization/fitting/CurveFitter.access$000:(Lorg/apache/commons/math3/optimization/fitting/CurveFitter;)Ljava/util/List;
       7: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
      12: newarray       double
      14: astore_2
      15: iconst_0
      16: istore_3
      17: aload_0
      18: getfield      #1                  // Field this$0:Lorg/apache/commons/math3/optimization/fitting/CurveFitter;
      21: invokestatic  #4                  // Method org/apache/commons/math3/optimization/fitting/CurveFitter.access$000:(Lorg/apache/commons/math3/optimization/fitting/CurveFitter;)Ljava/util/List;
      24: invokeinterface #6,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      29: astore        4
      31: aload         4
      33: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          77
      41: aload         4
      43: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #9                  // class org/apache/commons/math3/optimization/fitting/WeightedObservedPoint
      51: astore        5
      53: aload_2
      54: iload_3
      55: iinc          3, 1
      58: aload_0
      59: getfield      #3                  // Field f:Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;
      62: aload         5
      64: invokevirtual #10                 // Method org/apache/commons/math3/optimization/fitting/WeightedObservedPoint.getX:()D
      67: aload_1
      68: invokeinterface #11,  4           // InterfaceMethod org/apache/commons/math3/analysis/ParametricUnivariateFunction.value:(D[D)D
      73: dastore
      74: goto          31
      77: aload_2
      78: areturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure[] value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]);
    Code:
       0: aload_1
       1: arraylength
       2: newarray       double
       4: astore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: aload_1
       9: arraylength
      10: if_icmpge     28
      13: aload_2
      14: iload_3
      15: aload_1
      16: iload_3
      17: aaload
      18: invokevirtual #12                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.getValue:()D
      21: dastore
      22: iinc          3, 1
      25: goto          7
      28: aload_0
      29: getfield      #1                  // Field this$0:Lorg/apache/commons/math3/optimization/fitting/CurveFitter;
      32: invokestatic  #4                  // Method org/apache/commons/math3/optimization/fitting/CurveFitter.access$000:(Lorg/apache/commons/math3/optimization/fitting/CurveFitter;)Ljava/util/List;
      35: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
      40: anewarray     #13                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
      43: astore_3
      44: iconst_0
      45: istore        4
      47: aload_0
      48: getfield      #1                  // Field this$0:Lorg/apache/commons/math3/optimization/fitting/CurveFitter;
      51: invokestatic  #4                  // Method org/apache/commons/math3/optimization/fitting/CurveFitter.access$000:(Lorg/apache/commons/math3/optimization/fitting/CurveFitter;)Ljava/util/List;
      54: invokeinterface #6,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      59: astore        5
      61: aload         5
      63: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      68: ifeq          158
      71: aload         5
      73: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      78: checkcast     #9                  // class org/apache/commons/math3/optimization/fitting/WeightedObservedPoint
      81: astore        6
      83: new           #13                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
      86: dup
      87: aload_1
      88: arraylength
      89: iconst_1
      90: aload_0
      91: getfield      #3                  // Field f:Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;
      94: aload         6
      96: invokevirtual #10                 // Method org/apache/commons/math3/optimization/fitting/WeightedObservedPoint.getX:()D
      99: aload_2
     100: invokeinterface #11,  4           // InterfaceMethod org/apache/commons/math3/analysis/ParametricUnivariateFunction.value:(D[D)D
     105: invokespecial #14                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure."<init>":(IID)V
     108: astore        7
     110: iconst_0
     111: istore        8
     113: iload         8
     115: aload_1
     116: arraylength
     117: if_icmpge     146
     120: aload         7
     122: new           #13                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
     125: dup
     126: aload_1
     127: arraylength
     128: iconst_1
     129: iload         8
     131: dconst_0
     132: invokespecial #15                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure."<init>":(IIID)V
     135: invokevirtual #16                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.add:(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
     138: astore        7
     140: iinc          8, 1
     143: goto          113
     146: aload_3
     147: iload         4
     149: iinc          4, 1
     152: aload         7
     154: aastore
     155: goto          61
     158: aload_3
     159: areturn
}
