Compiled from "AbstractOptimizationProblem.java"
public abstract class org.apache.commons.math3.optim.AbstractOptimizationProblem<PAIR> implements org.apache.commons.math3.optim.OptimizationProblem<PAIR> {
  private static final org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback MAX_EVAL_CALLBACK;

  private static final org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxIterCallback MAX_ITER_CALLBACK;

  private final int maxEvaluations;

  private final int maxIterations;

  private final org.apache.commons.math3.optim.ConvergenceChecker<PAIR> checker;

  protected org.apache.commons.math3.optim.AbstractOptimizationProblem(int, int, org.apache.commons.math3.optim.ConvergenceChecker<PAIR>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field maxEvaluations:I
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field maxIterations:I
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field checker:Lorg/apache/commons/math3/optim/ConvergenceChecker;
      19: return

  public org.apache.commons.math3.util.Incrementor getEvaluationCounter();
    Code:
       0: new           #5                  // class org/apache/commons/math3/util/Incrementor
       3: dup
       4: aload_0
       5: getfield      #2                  // Field maxEvaluations:I
       8: getstatic     #6                  // Field MAX_EVAL_CALLBACK:Lorg/apache/commons/math3/optim/AbstractOptimizationProblem$MaxEvalCallback;
      11: invokespecial #7                  // Method org/apache/commons/math3/util/Incrementor."<init>":(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V
      14: areturn

  public org.apache.commons.math3.util.Incrementor getIterationCounter();
    Code:
       0: new           #5                  // class org/apache/commons/math3/util/Incrementor
       3: dup
       4: aload_0
       5: getfield      #3                  // Field maxIterations:I
       8: getstatic     #8                  // Field MAX_ITER_CALLBACK:Lorg/apache/commons/math3/optim/AbstractOptimizationProblem$MaxIterCallback;
      11: invokespecial #7                  // Method org/apache/commons/math3/util/Incrementor."<init>":(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V
      14: areturn

  public org.apache.commons.math3.optim.ConvergenceChecker<PAIR> getConvergenceChecker();
    Code:
       0: aload_0
       1: getfield      #4                  // Field checker:Lorg/apache/commons/math3/optim/ConvergenceChecker;
       4: areturn

  static {};
    Code:
       0: new           #9                  // class org/apache/commons/math3/optim/AbstractOptimizationProblem$MaxEvalCallback
       3: dup
       4: aconst_null
       5: invokespecial #10                 // Method org/apache/commons/math3/optim/AbstractOptimizationProblem$MaxEvalCallback."<init>":(Lorg/apache/commons/math3/optim/AbstractOptimizationProblem$1;)V
       8: putstatic     #6                  // Field MAX_EVAL_CALLBACK:Lorg/apache/commons/math3/optim/AbstractOptimizationProblem$MaxEvalCallback;
      11: new           #11                 // class org/apache/commons/math3/optim/AbstractOptimizationProblem$MaxIterCallback
      14: dup
      15: aconst_null
      16: invokespecial #12                 // Method org/apache/commons/math3/optim/AbstractOptimizationProblem$MaxIterCallback."<init>":(Lorg/apache/commons/math3/optim/AbstractOptimizationProblem$1;)V
      19: putstatic     #8                  // Field MAX_ITER_CALLBACK:Lorg/apache/commons/math3/optim/AbstractOptimizationProblem$MaxIterCallback;
      22: return
}
