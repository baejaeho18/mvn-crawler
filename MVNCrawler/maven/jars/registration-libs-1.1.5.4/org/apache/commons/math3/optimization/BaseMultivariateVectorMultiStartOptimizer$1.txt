Compiled from "BaseMultivariateVectorMultiStartOptimizer.java"
class org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer$1 implements java.util.Comparator<org.apache.commons.math3.optimization.PointVectorValuePair> {
  final double[] val$target;

  final double[] val$weights;

  final org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer this$0;

  org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer$1(org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer, double[], double[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/commons/math3/optimization/BaseMultivariateVectorMultiStartOptimizer;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$target:[D
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$weights:[D
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public int compare(org.apache.commons.math3.optimization.PointVectorValuePair, org.apache.commons.math3.optimization.PointVectorValuePair);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: aload_2
       5: ifnonnull     12
       8: iconst_0
       9: goto          13
      12: iconst_1
      13: ireturn
      14: aload_2
      15: ifnonnull     20
      18: iconst_m1
      19: ireturn
      20: aload_0
      21: aload_1
      22: invokespecial #5                  // Method weightedResidual:(Lorg/apache/commons/math3/optimization/PointVectorValuePair;)D
      25: aload_0
      26: aload_2
      27: invokespecial #5                  // Method weightedResidual:(Lorg/apache/commons/math3/optimization/PointVectorValuePair;)D
      30: invokestatic  #6                  // Method java/lang/Double.compare:(DD)I
      33: ireturn

  private double weightedResidual(org.apache.commons.math3.optimization.PointVectorValuePair);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method org/apache/commons/math3/optimization/PointVectorValuePair.getValueRef:()[D
       4: astore_2
       5: dconst_0
       6: dstore_3
       7: iconst_0
       8: istore        5
      10: iload         5
      12: aload_2
      13: arraylength
      14: if_icmpge     53
      17: aload_2
      18: iload         5
      20: daload
      21: aload_0
      22: getfield      #2                  // Field val$target:[D
      25: iload         5
      27: daload
      28: dsub
      29: dstore        6
      31: dload_3
      32: aload_0
      33: getfield      #3                  // Field val$weights:[D
      36: iload         5
      38: daload
      39: dload         6
      41: dmul
      42: dload         6
      44: dmul
      45: dadd
      46: dstore_3
      47: iinc          5, 1
      50: goto          10
      53: dload_3
      54: dreturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #8                  // class org/apache/commons/math3/optimization/PointVectorValuePair
       5: aload_2
       6: checkcast     #8                  // class org/apache/commons/math3/optimization/PointVectorValuePair
       9: invokevirtual #9                  // Method compare:(Lorg/apache/commons/math3/optimization/PointVectorValuePair;Lorg/apache/commons/math3/optimization/PointVectorValuePair;)I
      12: ireturn
}
