Compiled from "SobolSequenceGenerator.java"
public class org.apache.commons.math3.random.SobolSequenceGenerator implements org.apache.commons.math3.random.RandomVectorGenerator {
  private static final int BITS;

  private static final double SCALE;

  private static final int MAX_DIMENSION;

  private static final java.lang.String RESOURCE_NAME;

  private static final java.lang.String FILE_CHARSET;

  private final int dimension;

  private int count;

  private final long[][] direction;

  private final long[] x;

  public org.apache.commons.math3.random.SobolSequenceGenerator(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field count:I
       9: iload_1
      10: iconst_1
      11: if_icmplt     21
      14: iload_1
      15: sipush        1000
      18: if_icmple     43
      21: new           #3                  // class org/apache/commons/math3/exception/OutOfRangeException
      24: dup
      25: iload_1
      26: invokestatic  #4                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: iconst_1
      30: invokestatic  #4                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: sipush        1000
      36: invokestatic  #4                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: invokespecial #5                  // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      42: athrow
      43: aload_0
      44: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      47: ldc           #7                  // String /assets/org/apache/commons/math3/random/new-joe-kuo-6.1000
      49: invokevirtual #8                  // Method java/lang/Class.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      52: astore_2
      53: aload_2
      54: ifnonnull     65
      57: new           #9                  // class org/apache/commons/math3/exception/MathInternalError
      60: dup
      61: invokespecial #10                 // Method org/apache/commons/math3/exception/MathInternalError."<init>":()V
      64: athrow
      65: aload_0
      66: iload_1
      67: putfield      #11                 // Field dimension:I
      70: aload_0
      71: iload_1
      72: bipush        53
      74: multianewarray #12,  2            // class "[[J"
      78: putfield      #13                 // Field direction:[[J
      81: aload_0
      82: iload_1
      83: newarray       long
      85: putfield      #14                 // Field x:[J
      88: aload_0
      89: aload_2
      90: invokespecial #15                 // Method initFromStream:(Ljava/io/InputStream;)I
      93: pop
      94: aload_2
      95: invokevirtual #16                 // Method java/io/InputStream.close:()V
      98: goto          137
     101: astore_3
     102: goto          137
     105: astore_3
     106: new           #9                  // class org/apache/commons/math3/exception/MathInternalError
     109: dup
     110: invokespecial #10                 // Method org/apache/commons/math3/exception/MathInternalError."<init>":()V
     113: athrow
     114: astore_3
     115: new           #9                  // class org/apache/commons/math3/exception/MathInternalError
     118: dup
     119: invokespecial #10                 // Method org/apache/commons/math3/exception/MathInternalError."<init>":()V
     122: athrow
     123: astore        4
     125: aload_2
     126: invokevirtual #16                 // Method java/io/InputStream.close:()V
     129: goto          134
     132: astore        5
     134: aload         4
     136: athrow
     137: return
    Exception table:
       from    to  target type
          94    98   101   Class java/io/IOException
          88    94   105   Class java/io/IOException
          88    94   114   Class org/apache/commons/math3/exception/MathParseException
          88    94   123   any
         125   129   132   Class java/io/IOException
         105   125   123   any

  public org.apache.commons.math3.random.SobolSequenceGenerator(int, java.io.InputStream) throws org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.exception.MathParseException, java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field count:I
       9: iload_1
      10: iconst_1
      11: if_icmpge     26
      14: new           #19                 // class org/apache/commons/math3/exception/NotStrictlyPositiveException
      17: dup
      18: iload_1
      19: invokestatic  #4                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: invokespecial #20                 // Method org/apache/commons/math3/exception/NotStrictlyPositiveException."<init>":(Ljava/lang/Number;)V
      25: athrow
      26: aload_0
      27: iload_1
      28: putfield      #11                 // Field dimension:I
      31: aload_0
      32: iload_1
      33: bipush        53
      35: multianewarray #12,  2            // class "[[J"
      39: putfield      #13                 // Field direction:[[J
      42: aload_0
      43: iload_1
      44: newarray       long
      46: putfield      #14                 // Field x:[J
      49: aload_0
      50: aload_2
      51: invokespecial #15                 // Method initFromStream:(Ljava/io/InputStream;)I
      54: istore_3
      55: iload_3
      56: iload_1
      57: if_icmpge     80
      60: new           #3                  // class org/apache/commons/math3/exception/OutOfRangeException
      63: dup
      64: iload_1
      65: invokestatic  #4                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      68: iconst_1
      69: invokestatic  #4                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      72: iload_3
      73: invokestatic  #4                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      76: invokespecial #5                  // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      79: athrow
      80: return

  private int initFromStream(java.io.InputStream) throws org.apache.commons.math3.exception.MathParseException, java.io.IOException;
    Code:
       0: iconst_1
       1: istore_2
       2: iload_2
       3: bipush        52
       5: if_icmpgt     28
       8: aload_0
       9: getfield      #13                 // Field direction:[[J
      12: iconst_0
      13: aaload
      14: iload_2
      15: lconst_1
      16: bipush        52
      18: iload_2
      19: isub
      20: lshl
      21: lastore
      22: iinc          2, 1
      25: goto          2
      28: ldc           #21                 // String US-ASCII
      30: invokestatic  #22                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      33: astore_2
      34: new           #23                 // class java/io/BufferedReader
      37: dup
      38: new           #24                 // class java/io/InputStreamReader
      41: dup
      42: aload_1
      43: aload_2
      44: invokespecial #25                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
      47: invokespecial #26                 // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      50: astore_3
      51: iconst_m1
      52: istore        4
      54: aload_3
      55: invokevirtual #27                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      58: pop
      59: iconst_2
      60: istore        5
      62: iconst_1
      63: istore        6
      65: aconst_null
      66: astore        7
      68: aload_3
      69: invokevirtual #27                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      72: dup
      73: astore        7
      75: ifnull        243
      78: new           #28                 // class java/util/StringTokenizer
      81: dup
      82: aload         7
      84: ldc           #29                 // String
      86: invokespecial #30                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      89: astore        8
      91: aload         8
      93: invokevirtual #31                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      96: invokestatic  #32                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      99: istore        4
     101: iload         4
     103: iconst_2
     104: if_icmplt     186
     107: iload         4
     109: aload_0
     110: getfield      #11                 // Field dimension:I
     113: if_icmpgt     186
     116: aload         8
     118: invokevirtual #31                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
     121: invokestatic  #32                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     124: istore        9
     126: aload         8
     128: invokevirtual #31                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
     131: invokestatic  #32                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     134: istore        10
     136: iload         9
     138: iconst_1
     139: iadd
     140: newarray       int
     142: astore        11
     144: iconst_1
     145: istore        12
     147: iload         12
     149: iload         9
     151: if_icmpgt     173
     154: aload         11
     156: iload         12
     158: aload         8
     160: invokevirtual #31                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
     163: invokestatic  #32                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     166: iastore
     167: iinc          12, 1
     170: goto          147
     173: aload_0
     174: iload         6
     176: iinc          6, 1
     179: iload         10
     181: aload         11
     183: invokespecial #33                 // Method initDirectionVector:(II[I)V
     186: iload         4
     188: aload_0
     189: getfield      #11                 // Field dimension:I
     192: if_icmple     206
     195: iload         4
     197: istore        9
     199: aload_3
     200: invokevirtual #34                 // Method java/io/BufferedReader.close:()V
     203: iload         9
     205: ireturn
     206: goto          237
     209: astore        9
     211: new           #18                 // class org/apache/commons/math3/exception/MathParseException
     214: dup
     215: aload         7
     217: iload         5
     219: invokespecial #36                 // Method org/apache/commons/math3/exception/MathParseException."<init>":(Ljava/lang/String;I)V
     222: athrow
     223: astore        9
     225: new           #18                 // class org/apache/commons/math3/exception/MathParseException
     228: dup
     229: aload         7
     231: iload         5
     233: invokespecial #36                 // Method org/apache/commons/math3/exception/MathParseException."<init>":(Ljava/lang/String;I)V
     236: athrow
     237: iinc          5, 1
     240: goto          68
     243: aload_3
     244: invokevirtual #34                 // Method java/io/BufferedReader.close:()V
     247: goto          259
     250: astore        13
     252: aload_3
     253: invokevirtual #34                 // Method java/io/BufferedReader.close:()V
     256: aload         13
     258: athrow
     259: iload         4
     261: ireturn
    Exception table:
       from    to  target type
          91   199   209   Class java/util/NoSuchElementException
          91   199   223   Class java/lang/NumberFormatException
          54   199   250   any
         206   243   250   any
         250   252   250   any

  private void initDirectionVector(int, int, int[]);
    Code:
       0: aload_3
       1: arraylength
       2: iconst_1
       3: isub
       4: istore        4
       6: iconst_1
       7: istore        5
       9: iload         5
      11: iload         4
      13: if_icmpgt     42
      16: aload_0
      17: getfield      #13                 // Field direction:[[J
      20: iload_1
      21: aaload
      22: iload         5
      24: aload_3
      25: iload         5
      27: iaload
      28: i2l
      29: bipush        52
      31: iload         5
      33: isub
      34: lshl
      35: lastore
      36: iinc          5, 1
      39: goto          9
      42: iload         4
      44: iconst_1
      45: iadd
      46: istore        5
      48: iload         5
      50: bipush        52
      52: if_icmpgt     153
      55: aload_0
      56: getfield      #13                 // Field direction:[[J
      59: iload_1
      60: aaload
      61: iload         5
      63: aload_0
      64: getfield      #13                 // Field direction:[[J
      67: iload_1
      68: aaload
      69: iload         5
      71: iload         4
      73: isub
      74: laload
      75: aload_0
      76: getfield      #13                 // Field direction:[[J
      79: iload_1
      80: aaload
      81: iload         5
      83: iload         4
      85: isub
      86: laload
      87: iload         4
      89: lshr
      90: lxor
      91: lastore
      92: iconst_1
      93: istore        6
      95: iload         6
      97: iload         4
      99: iconst_1
     100: isub
     101: if_icmpgt     147
     104: aload_0
     105: getfield      #13                 // Field direction:[[J
     108: iload_1
     109: aaload
     110: iload         5
     112: dup2
     113: laload
     114: iload_2
     115: iload         4
     117: iconst_1
     118: isub
     119: iload         6
     121: isub
     122: ishr
     123: iconst_1
     124: iand
     125: i2l
     126: aload_0
     127: getfield      #13                 // Field direction:[[J
     130: iload_1
     131: aaload
     132: iload         5
     134: iload         6
     136: isub
     137: laload
     138: lmul
     139: lxor
     140: lastore
     141: iinc          6, 1
     144: goto          95
     147: iinc          5, 1
     150: goto          48
     153: return

  public double[] nextVector();
    Code:
       0: aload_0
       1: getfield      #11                 // Field dimension:I
       4: newarray       double
       6: astore_1
       7: aload_0
       8: getfield      #2                  // Field count:I
      11: ifne          26
      14: aload_0
      15: dup
      16: getfield      #2                  // Field count:I
      19: iconst_1
      20: iadd
      21: putfield      #2                  // Field count:I
      24: aload_1
      25: areturn
      26: iconst_1
      27: istore_2
      28: aload_0
      29: getfield      #2                  // Field count:I
      32: iconst_1
      33: isub
      34: istore_3
      35: iload_3
      36: iconst_1
      37: iand
      38: iconst_1
      39: if_icmpne     52
      42: iload_3
      43: iconst_1
      44: ishr
      45: istore_3
      46: iinc          2, 1
      49: goto          35
      52: iconst_0
      53: istore        4
      55: iload         4
      57: aload_0
      58: getfield      #11                 // Field dimension:I
      61: if_icmpge     105
      64: aload_0
      65: getfield      #14                 // Field x:[J
      68: iload         4
      70: dup2
      71: laload
      72: aload_0
      73: getfield      #13                 // Field direction:[[J
      76: iload         4
      78: aaload
      79: iload_2
      80: laload
      81: lxor
      82: lastore
      83: aload_1
      84: iload         4
      86: aload_0
      87: getfield      #14                 // Field x:[J
      90: iload         4
      92: laload
      93: l2d
      94: getstatic     #38                 // Field SCALE:D
      97: ddiv
      98: dastore
      99: iinc          4, 1
     102: goto          55
     105: aload_0
     106: dup
     107: getfield      #2                  // Field count:I
     110: iconst_1
     111: iadd
     112: putfield      #2                  // Field count:I
     115: aload_1
     116: areturn

  public double[] skipTo(int) throws org.apache.commons.math3.exception.NotPositiveException;
    Code:
       0: iload_1
       1: ifne          15
       4: aload_0
       5: getfield      #14                 // Field x:[J
       8: lconst_0
       9: invokestatic  #39                 // Method java/util/Arrays.fill:([JJ)V
      12: goto          114
      15: iload_1
      16: iconst_1
      17: isub
      18: istore_2
      19: iload_2
      20: iload_2
      21: iconst_1
      22: ishr
      23: ixor
      24: i2l
      25: lstore_3
      26: iconst_0
      27: istore        5
      29: iload         5
      31: aload_0
      32: getfield      #11                 // Field dimension:I
      35: if_icmpge     114
      38: lconst_0
      39: lstore        6
      41: iconst_1
      42: istore        8
      44: iload         8
      46: bipush        52
      48: if_icmpgt     99
      51: lload_3
      52: iload         8
      54: iconst_1
      55: isub
      56: lshr
      57: lstore        9
      59: lload         9
      61: lconst_0
      62: lcmp
      63: ifne          69
      66: goto          99
      69: lload         9
      71: lconst_1
      72: land
      73: lstore        11
      75: lload         6
      77: lload         11
      79: aload_0
      80: getfield      #13                 // Field direction:[[J
      83: iload         5
      85: aaload
      86: iload         8
      88: laload
      89: lmul
      90: lxor
      91: lstore        6
      93: iinc          8, 1
      96: goto          44
      99: aload_0
     100: getfield      #14                 // Field x:[J
     103: iload         5
     105: lload         6
     107: lastore
     108: iinc          5, 1
     111: goto          29
     114: aload_0
     115: iload_1
     116: putfield      #2                  // Field count:I
     119: aload_0
     120: invokevirtual #40                 // Method nextVector:()[D
     123: areturn

  public int getNextIndex();
    Code:
       0: aload_0
       1: getfield      #2                  // Field count:I
       4: ireturn

  static {};
    Code:
       0: ldc2_w        #41                 // double 2.0d
       3: bipush        52
       5: invokestatic  #43                 // Method org/apache/commons/math3/util/FastMath.pow:(DI)D
       8: putstatic     #38                 // Field SCALE:D
      11: return
}
