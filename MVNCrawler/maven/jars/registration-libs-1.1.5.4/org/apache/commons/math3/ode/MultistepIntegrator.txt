Compiled from "MultistepIntegrator.java"
public abstract class org.apache.commons.math3.ode.MultistepIntegrator extends org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator {
  protected double[] scaled;

  protected org.apache.commons.math3.linear.Array2DRowRealMatrix nordsieck;

  private org.apache.commons.math3.ode.FirstOrderIntegrator starter;

  private final int nSteps;

  private double exp;

  private double safety;

  private double minReduction;

  private double maxGrowth;

  protected org.apache.commons.math3.ode.MultistepIntegrator(java.lang.String, int, int, double, double, double, double) throws org.apache.commons.math3.exception.NumberIsTooSmallException;
    Code:
       0: aload_0
       1: aload_1
       2: dload         4
       4: dload         6
       6: dload         8
       8: dload         10
      10: invokespecial #1                  // Method org/apache/commons/math3/ode/nonstiff/AdaptiveStepsizeIntegrator."<init>":(Ljava/lang/String;DDDD)V
      13: iload_2
      14: iconst_2
      15: if_icmpge     38
      18: new           #2                  // class org/apache/commons/math3/exception/NumberIsTooSmallException
      21: dup
      22: getstatic     #3                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.INTEGRATION_METHOD_NEEDS_AT_LEAST_TWO_PREVIOUS_POINTS:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      25: iload_2
      26: invokestatic  #4                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: iconst_2
      30: invokestatic  #4                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: iconst_1
      34: invokespecial #5                  // Method org/apache/commons/math3/exception/NumberIsTooSmallException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      37: athrow
      38: aload_0
      39: new           #6                  // class org/apache/commons/math3/ode/nonstiff/DormandPrince853Integrator
      42: dup
      43: dload         4
      45: dload         6
      47: dload         8
      49: dload         10
      51: invokespecial #7                  // Method org/apache/commons/math3/ode/nonstiff/DormandPrince853Integrator."<init>":(DDDD)V
      54: putfield      #8                  // Field starter:Lorg/apache/commons/math3/ode/FirstOrderIntegrator;
      57: aload_0
      58: iload_2
      59: putfield      #9                  // Field nSteps:I
      62: aload_0
      63: ldc2_w        #10                 // double -1.0d
      66: iload_3
      67: i2d
      68: ddiv
      69: putfield      #12                 // Field exp:D
      72: aload_0
      73: ldc2_w        #13                 // double 0.9d
      76: invokevirtual #15                 // Method setSafety:(D)V
      79: aload_0
      80: ldc2_w        #16                 // double 0.2d
      83: invokevirtual #18                 // Method setMinReduction:(D)V
      86: aload_0
      87: ldc2_w        #19                 // double 2.0d
      90: aload_0
      91: getfield      #12                 // Field exp:D
      94: dneg
      95: invokestatic  #21                 // Method org/apache/commons/math3/util/FastMath.pow:(DD)D
      98: invokevirtual #22                 // Method setMaxGrowth:(D)V
     101: return

  protected org.apache.commons.math3.ode.MultistepIntegrator(java.lang.String, int, int, double, double, double[], double[]);
    Code:
       0: aload_0
       1: aload_1
       2: dload         4
       4: dload         6
       6: aload         8
       8: aload         9
      10: invokespecial #23                 // Method org/apache/commons/math3/ode/nonstiff/AdaptiveStepsizeIntegrator."<init>":(Ljava/lang/String;DD[D[D)V
      13: aload_0
      14: new           #6                  // class org/apache/commons/math3/ode/nonstiff/DormandPrince853Integrator
      17: dup
      18: dload         4
      20: dload         6
      22: aload         8
      24: aload         9
      26: invokespecial #24                 // Method org/apache/commons/math3/ode/nonstiff/DormandPrince853Integrator."<init>":(DD[D[D)V
      29: putfield      #8                  // Field starter:Lorg/apache/commons/math3/ode/FirstOrderIntegrator;
      32: aload_0
      33: iload_2
      34: putfield      #9                  // Field nSteps:I
      37: aload_0
      38: ldc2_w        #10                 // double -1.0d
      41: iload_3
      42: i2d
      43: ddiv
      44: putfield      #12                 // Field exp:D
      47: aload_0
      48: ldc2_w        #13                 // double 0.9d
      51: invokevirtual #15                 // Method setSafety:(D)V
      54: aload_0
      55: ldc2_w        #16                 // double 0.2d
      58: invokevirtual #18                 // Method setMinReduction:(D)V
      61: aload_0
      62: ldc2_w        #19                 // double 2.0d
      65: aload_0
      66: getfield      #12                 // Field exp:D
      69: dneg
      70: invokestatic  #21                 // Method org/apache/commons/math3/util/FastMath.pow:(DD)D
      73: invokevirtual #22                 // Method setMaxGrowth:(D)V
      76: return

  public org.apache.commons.math3.ode.ODEIntegrator getStarterIntegrator();
    Code:
       0: aload_0
       1: getfield      #8                  // Field starter:Lorg/apache/commons/math3/ode/FirstOrderIntegrator;
       4: areturn

  public void setStarterIntegrator(org.apache.commons.math3.ode.FirstOrderIntegrator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field starter:Lorg/apache/commons/math3/ode/FirstOrderIntegrator;
       5: return

  protected void start(double, double[], double) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.MaxCountExceededException, org.apache.commons.math3.exception.NoBracketingException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field starter:Lorg/apache/commons/math3/ode/FirstOrderIntegrator;
       4: invokeinterface #25,  1           // InterfaceMethod org/apache/commons/math3/ode/FirstOrderIntegrator.clearEventHandlers:()V
       9: aload_0
      10: getfield      #8                  // Field starter:Lorg/apache/commons/math3/ode/FirstOrderIntegrator;
      13: invokeinterface #26,  1           // InterfaceMethod org/apache/commons/math3/ode/FirstOrderIntegrator.clearStepHandlers:()V
      18: aload_0
      19: getfield      #8                  // Field starter:Lorg/apache/commons/math3/ode/FirstOrderIntegrator;
      22: new           #27                 // class org/apache/commons/math3/ode/MultistepIntegrator$NordsieckInitializer
      25: dup
      26: aload_0
      27: aload_0
      28: getfield      #9                  // Field nSteps:I
      31: iconst_3
      32: iadd
      33: iconst_2
      34: idiv
      35: aload_3
      36: arraylength
      37: invokespecial #28                 // Method org/apache/commons/math3/ode/MultistepIntegrator$NordsieckInitializer."<init>":(Lorg/apache/commons/math3/ode/MultistepIntegrator;II)V
      40: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/math3/ode/FirstOrderIntegrator.addStepHandler:(Lorg/apache/commons/math3/ode/sampling/StepHandler;)V
      45: aload_0
      46: getfield      #8                  // Field starter:Lorg/apache/commons/math3/ode/FirstOrderIntegrator;
      49: instanceof    #30                 // class org/apache/commons/math3/ode/AbstractIntegrator
      52: ifeq          74
      55: aload_0
      56: getfield      #8                  // Field starter:Lorg/apache/commons/math3/ode/FirstOrderIntegrator;
      59: checkcast     #30                 // class org/apache/commons/math3/ode/AbstractIntegrator
      62: aload_0
      63: invokevirtual #31                 // Method getExpandable:()Lorg/apache/commons/math3/ode/ExpandableStatefulODE;
      66: dload         4
      68: invokevirtual #32                 // Method org/apache/commons/math3/ode/AbstractIntegrator.integrate:(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V
      71: goto          100
      74: aload_0
      75: getfield      #8                  // Field starter:Lorg/apache/commons/math3/ode/FirstOrderIntegrator;
      78: new           #33                 // class org/apache/commons/math3/ode/MultistepIntegrator$1
      81: dup
      82: aload_0
      83: invokespecial #34                 // Method org/apache/commons/math3/ode/MultistepIntegrator$1."<init>":(Lorg/apache/commons/math3/ode/MultistepIntegrator;)V
      86: dload_1
      87: aload_3
      88: dload         4
      90: aload_3
      91: arraylength
      92: newarray       double
      94: invokeinterface #35,  8           // InterfaceMethod org/apache/commons/math3/ode/FirstOrderIntegrator.integrate:(Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;D[DD[D)D
      99: pop2
     100: new           #36                 // class org/apache/commons/math3/exception/MathIllegalStateException
     103: dup
     104: getstatic     #37                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.MULTISTEP_STARTER_STOPPED_EARLY:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
     107: iconst_0
     108: anewarray     #38                 // class java/lang/Object
     111: invokespecial #39                 // Method org/apache/commons/math3/exception/MathIllegalStateException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
     114: athrow
     115: astore        6
     117: aload_0
     118: invokevirtual #41                 // Method getCounter:()Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
     121: aload_0
     122: getfield      #8                  // Field starter:Lorg/apache/commons/math3/ode/FirstOrderIntegrator;
     125: invokeinterface #42,  1           // InterfaceMethod org/apache/commons/math3/ode/FirstOrderIntegrator.getEvaluations:()I
     130: invokevirtual #43                 // Method org/apache/commons/math3/util/IntegerSequence$Incrementor.increment:(I)V
     133: aload_0
     134: getfield      #8                  // Field starter:Lorg/apache/commons/math3/ode/FirstOrderIntegrator;
     137: invokeinterface #26,  1           // InterfaceMethod org/apache/commons/math3/ode/FirstOrderIntegrator.clearStepHandlers:()V
     142: return
    Exception table:
       from    to  target type
          45   115   115   Class org/apache/commons/math3/ode/MultistepIntegrator$InitializationCompletedMarkerException

  protected abstract org.apache.commons.math3.linear.Array2DRowRealMatrix initializeHighOrderDerivatives(double, double[], double[][], double[][]);

  public double getMinReduction();
    Code:
       0: aload_0
       1: getfield      #44                 // Field minReduction:D
       4: dreturn

  public void setMinReduction(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #44                 // Field minReduction:D
       5: return

  public double getMaxGrowth();
    Code:
       0: aload_0
       1: getfield      #45                 // Field maxGrowth:D
       4: dreturn

  public void setMaxGrowth(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #45                 // Field maxGrowth:D
       5: return

  public double getSafety();
    Code:
       0: aload_0
       1: getfield      #46                 // Field safety:D
       4: dreturn

  public void setSafety(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #46                 // Field safety:D
       5: return

  public int getNSteps();
    Code:
       0: aload_0
       1: getfield      #9                  // Field nSteps:I
       4: ireturn

  protected double computeStepGrowShrinkFactor(double);
    Code:
       0: aload_0
       1: getfield      #45                 // Field maxGrowth:D
       4: aload_0
       5: getfield      #44                 // Field minReduction:D
       8: aload_0
       9: getfield      #46                 // Field safety:D
      12: dload_1
      13: aload_0
      14: getfield      #12                 // Field exp:D
      17: invokestatic  #21                 // Method org/apache/commons/math3/util/FastMath.pow:(DD)D
      20: dmul
      21: invokestatic  #47                 // Method org/apache/commons/math3/util/FastMath.max:(DD)D
      24: invokestatic  #48                 // Method org/apache/commons/math3/util/FastMath.min:(DD)D
      27: dreturn
}
