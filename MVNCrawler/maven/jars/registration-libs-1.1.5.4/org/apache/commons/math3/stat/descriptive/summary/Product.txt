Compiled from "Product.java"
public class org.apache.commons.math3.stat.descriptive.summary.Product extends org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic implements java.io.Serializable,org.apache.commons.math3.stat.descriptive.WeightedEvaluation {
  private static final long serialVersionUID;

  private long n;

  private double value;

  public org.apache.commons.math3.stat.descriptive.summary.Product();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field n:J
       9: aload_0
      10: dconst_1
      11: putfield      #3                  // Field value:D
      14: return

  public org.apache.commons.math3.stat.descriptive.summary.Product(org.apache.commons.math3.stat.descriptive.summary.Product) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic."<init>":()V
       4: aload_1
       5: aload_0
       6: invokestatic  #4                  // Method copy:(Lorg/apache/commons/math3/stat/descriptive/summary/Product;Lorg/apache/commons/math3/stat/descriptive/summary/Product;)V
       9: return

  public void increment(double);
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field value:D
       5: dload_1
       6: dmul
       7: putfield      #3                  // Field value:D
      10: aload_0
      11: dup
      12: getfield      #2                  // Field n:J
      15: lconst_1
      16: ladd
      17: putfield      #2                  // Field n:J
      20: return

  public double getResult();
    Code:
       0: aload_0
       1: getfield      #3                  // Field value:D
       4: dreturn

  public long getN();
    Code:
       0: aload_0
       1: getfield      #2                  // Field n:J
       4: lreturn

  public void clear();
    Code:
       0: aload_0
       1: dconst_1
       2: putfield      #3                  // Field value:D
       5: aload_0
       6: lconst_0
       7: putfield      #2                  // Field n:J
      10: return

  public double evaluate(double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: ldc2_w        #5                  // double NaNd
       3: dstore        4
       5: aload_0
       6: aload_1
       7: iload_2
       8: iload_3
       9: iconst_1
      10: invokevirtual #7                  // Method test:([DIIZ)Z
      13: ifeq          45
      16: dconst_1
      17: dstore        4
      19: iload_2
      20: istore        6
      22: iload         6
      24: iload_2
      25: iload_3
      26: iadd
      27: if_icmpge     45
      30: dload         4
      32: aload_1
      33: iload         6
      35: daload
      36: dmul
      37: dstore        4
      39: iinc          6, 1
      42: goto          22
      45: dload         4
      47: dreturn

  public double evaluate(double[], double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: ldc2_w        #5                  // double NaNd
       3: dstore        5
       5: aload_0
       6: aload_1
       7: aload_2
       8: iload_3
       9: iload         4
      11: iconst_1
      12: invokevirtual #8                  // Method test:([D[DIIZ)Z
      15: ifeq          55
      18: dconst_1
      19: dstore        5
      21: iload_3
      22: istore        7
      24: iload         7
      26: iload_3
      27: iload         4
      29: iadd
      30: if_icmpge     55
      33: dload         5
      35: aload_1
      36: iload         7
      38: daload
      39: aload_2
      40: iload         7
      42: daload
      43: invokestatic  #9                  // Method org/apache/commons/math3/util/FastMath.pow:(DD)D
      46: dmul
      47: dstore        5
      49: iinc          7, 1
      52: goto          24
      55: dload         5
      57: dreturn

  public double evaluate(double[], double[]) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: aload_1
       5: arraylength
       6: invokevirtual #10                 // Method evaluate:([D[DII)D
       9: dreturn

  public org.apache.commons.math3.stat.descriptive.summary.Product copy();
    Code:
       0: new           #11                 // class org/apache/commons/math3/stat/descriptive/summary/Product
       3: dup
       4: invokespecial #12                 // Method "<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokestatic  #4                  // Method copy:(Lorg/apache/commons/math3/stat/descriptive/summary/Product;Lorg/apache/commons/math3/stat/descriptive/summary/Product;)V
      13: aload_1
      14: areturn

  public static void copy(org.apache.commons.math3.stat.descriptive.summary.Product, org.apache.commons.math3.stat.descriptive.summary.Product) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokestatic  #13                 // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       4: aload_1
       5: invokestatic  #13                 // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       8: aload_1
       9: aload_0
      10: invokevirtual #14                 // Method getDataRef:()[D
      13: invokevirtual #15                 // Method setData:([D)V
      16: aload_1
      17: aload_0
      18: getfield      #2                  // Field n:J
      21: putfield      #2                  // Field n:J
      24: aload_1
      25: aload_0
      26: getfield      #3                  // Field value:D
      29: putfield      #3                  // Field value:D
      32: return

  public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method copy:()Lorg/apache/commons/math3/stat/descriptive/summary/Product;
       4: areturn

  public org.apache.commons.math3.stat.descriptive.UnivariateStatistic copy();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method copy:()Lorg/apache/commons/math3/stat/descriptive/summary/Product;
       4: areturn
}
