Compiled from "PolyhedronsSet.java"
class org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor implements org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D> {
  final org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet this$0;

  org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_1
      10: dconst_0
      11: invokestatic  #3                  // Method org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.access$000:(Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;D)V
      14: aload_1
      15: new           #4                  // class org/apache/commons/math3/geometry/euclidean/threed/Vector3D
      18: dup
      19: dconst_0
      20: dconst_0
      21: dconst_0
      22: invokespecial #5                  // Method org/apache/commons/math3/geometry/euclidean/threed/Vector3D."<init>":(DDD)V
      25: invokestatic  #6                  // Method org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.access$100:(Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;Lorg/apache/commons/math3/geometry/Point;)V
      28: return

  public org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D>);
    Code:
       0: getstatic     #7                  // Field org/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order.MINUS_SUB_PLUS:Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order;
       3: areturn

  public void visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D>);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method org/apache/commons/math3/geometry/partitioning/BSPTree.getAttribute:()Ljava/lang/Object;
       4: checkcast     #9                  // class org/apache/commons/math3/geometry/partitioning/BoundaryAttribute
       7: astore_2
       8: aload_2
       9: invokevirtual #10                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusOutside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      12: ifnull        24
      15: aload_0
      16: aload_2
      17: invokevirtual #10                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusOutside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      20: iconst_0
      21: invokespecial #11                 // Method addContribution:(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Z)V
      24: aload_2
      25: invokevirtual #12                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusInside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      28: ifnull        40
      31: aload_0
      32: aload_2
      33: invokevirtual #12                 // Method org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.getPlusInside:()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
      36: iconst_1
      37: invokespecial #11                 // Method addContribution:(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Z)V
      40: return

  public void visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D>);
    Code:
       0: return

  private void addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D>, boolean);
    Code:
       0: aload_1
       1: checkcast     #13                 // class org/apache/commons/math3/geometry/euclidean/threed/SubPlane
       4: invokevirtual #14                 // Method org/apache/commons/math3/geometry/euclidean/threed/SubPlane.getRemainingRegion:()Lorg/apache/commons/math3/geometry/partitioning/Region;
       7: astore_3
       8: aload_3
       9: invokeinterface #15,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.getSize:()D
      14: dstore        4
      16: dload         4
      18: invokestatic  #16                 // Method java/lang/Double.isInfinite:(D)Z
      21: ifeq          47
      24: aload_0
      25: getfield      #1                  // Field this$0:Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;
      28: ldc2_w        #17                 // double Infinityd
      31: invokestatic  #19                 // Method org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.access$200:(Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;D)V
      34: aload_0
      35: getfield      #1                  // Field this$0:Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;
      38: getstatic     #20                 // Field org/apache/commons/math3/geometry/euclidean/threed/Vector3D.NaN:Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      41: invokestatic  #21                 // Method org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.access$300:(Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;Lorg/apache/commons/math3/geometry/Point;)V
      44: goto          141
      47: aload_1
      48: invokeinterface #22,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/SubHyperplane.getHyperplane:()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
      53: checkcast     #23                 // class org/apache/commons/math3/geometry/euclidean/threed/Plane
      56: astore        6
      58: aload         6
      60: aload_3
      61: invokeinterface #24,  1           // InterfaceMethod org/apache/commons/math3/geometry/partitioning/Region.getBarycenter:()Lorg/apache/commons/math3/geometry/Point;
      66: invokevirtual #25                 // Method org/apache/commons/math3/geometry/euclidean/threed/Plane.toSpace:(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      69: astore        7
      71: dload         4
      73: aload         7
      75: aload         6
      77: invokevirtual #26                 // Method org/apache/commons/math3/geometry/euclidean/threed/Plane.getNormal:()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
      80: invokevirtual #27                 // Method org/apache/commons/math3/geometry/euclidean/threed/Vector3D.dotProduct:(Lorg/apache/commons/math3/geometry/Vector;)D
      83: dmul
      84: dstore        8
      86: iload_2
      87: ifeq          95
      90: dload         8
      92: dneg
      93: dstore        8
      95: aload_0
      96: getfield      #1                  // Field this$0:Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;
      99: aload_0
     100: getfield      #1                  // Field this$0:Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;
     103: invokevirtual #28                 // Method org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.getSize:()D
     106: dload         8
     108: dadd
     109: invokestatic  #29                 // Method org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.access$400:(Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;D)V
     112: aload_0
     113: getfield      #1                  // Field this$0:Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;
     116: new           #4                  // class org/apache/commons/math3/geometry/euclidean/threed/Vector3D
     119: dup
     120: dconst_1
     121: aload_0
     122: getfield      #1                  // Field this$0:Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;
     125: invokevirtual #30                 // Method org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.getBarycenter:()Lorg/apache/commons/math3/geometry/Point;
     128: checkcast     #4                  // class org/apache/commons/math3/geometry/euclidean/threed/Vector3D
     131: dload         8
     133: aload         7
     135: invokespecial #31                 // Method org/apache/commons/math3/geometry/euclidean/threed/Vector3D."<init>":(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
     138: invokestatic  #32                 // Method org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.access$500:(Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;Lorg/apache/commons/math3/geometry/Point;)V
     141: return
}
