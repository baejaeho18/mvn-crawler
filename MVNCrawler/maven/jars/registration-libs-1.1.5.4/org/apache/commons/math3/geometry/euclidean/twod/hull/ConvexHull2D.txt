Compiled from "ConvexHull2D.java"
public class org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D implements org.apache.commons.math3.geometry.hull.ConvexHull<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.twod.Vector2D>, java.io.Serializable {
  private static final long serialVersionUID;

  private final org.apache.commons.math3.geometry.euclidean.twod.Vector2D[] vertices;

  private final double tolerance;

  private transient org.apache.commons.math3.geometry.euclidean.twod.Segment[] lineSegments;

  public org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D(org.apache.commons.math3.geometry.euclidean.twod.Vector2D[], double) throws org.apache.commons.math3.exception.MathIllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: dload_2
       6: putfield      #2                  // Field tolerance:D
       9: aload_0
      10: aload_1
      11: invokespecial #3                  // Method isConvex:([Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)Z
      14: ifne          32
      17: new           #4                  // class org/apache/commons/math3/exception/MathIllegalArgumentException
      20: dup
      21: getstatic     #5                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.NOT_CONVEX:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      24: iconst_0
      25: anewarray     #6                  // class java/lang/Object
      28: invokespecial #7                  // Method org/apache/commons/math3/exception/MathIllegalArgumentException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      31: athrow
      32: aload_0
      33: aload_1
      34: invokevirtual #8                  // Method "[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;".clone:()Ljava/lang/Object;
      37: checkcast     #9                  // class "[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"
      40: putfield      #10                 // Field vertices:[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      43: return

  private boolean isConvex(org.apache.commons.math3.geometry.euclidean.twod.Vector2D[]);
    Code:
       0: aload_1
       1: arraylength
       2: iconst_3
       3: if_icmpge     8
       6: iconst_1
       7: ireturn
       8: iconst_0
       9: istore_2
      10: iconst_0
      11: istore_3
      12: iload_3
      13: aload_1
      14: arraylength
      15: if_icmpge     148
      18: aload_1
      19: iload_3
      20: ifne          30
      23: aload_1
      24: arraylength
      25: iconst_1
      26: isub
      27: goto          33
      30: iload_3
      31: iconst_1
      32: isub
      33: aaload
      34: astore        4
      36: aload_1
      37: iload_3
      38: aaload
      39: astore        5
      41: aload_1
      42: iload_3
      43: aload_1
      44: arraylength
      45: iconst_1
      46: isub
      47: if_icmpne     54
      50: iconst_0
      51: goto          57
      54: iload_3
      55: iconst_1
      56: iadd
      57: aaload
      58: astore        6
      60: aload         5
      62: aload         4
      64: invokevirtual #11                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.subtract:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      67: astore        7
      69: aload         6
      71: aload         5
      73: invokevirtual #11                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.subtract:(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      76: astore        8
      78: aload         7
      80: invokevirtual #12                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getX:()D
      83: aload         8
      85: invokevirtual #13                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getY:()D
      88: aload         7
      90: invokevirtual #13                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getY:()D
      93: dneg
      94: aload         8
      96: invokevirtual #12                 // Method org/apache/commons/math3/geometry/euclidean/twod/Vector2D.getX:()D
      99: invokestatic  #14                 // Method org/apache/commons/math3/util/MathArrays.linearCombination:(DDDD)D
     102: dstore        9
     104: dload         9
     106: dconst_0
     107: aload_0
     108: getfield      #2                  // Field tolerance:D
     111: invokestatic  #15                 // Method org/apache/commons/math3/util/Precision.compareTo:(DDD)I
     114: istore        11
     116: iload         11
     118: i2d
     119: dconst_0
     120: dcmpl
     121: ifeq          142
     124: iload_2
     125: i2d
     126: dconst_0
     127: dcmpl
     128: ifeq          139
     131: iload         11
     133: iload_2
     134: if_icmpeq     139
     137: iconst_0
     138: ireturn
     139: iload         11
     141: istore_2
     142: iinc          3, 1
     145: goto          12
     148: iconst_1
     149: ireturn

  public org.apache.commons.math3.geometry.euclidean.twod.Vector2D[] getVertices();
    Code:
       0: aload_0
       1: getfield      #10                 // Field vertices:[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
       4: invokevirtual #16                 // Method "[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;".clone:()Ljava/lang/Object;
       7: checkcast     #9                  // class "[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"
      10: areturn

  public org.apache.commons.math3.geometry.euclidean.twod.Segment[] getLineSegments();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method retrieveLineSegments:()[Lorg/apache/commons/math3/geometry/euclidean/twod/Segment;
       4: invokevirtual #18                 // Method "[Lorg/apache/commons/math3/geometry/euclidean/twod/Segment;".clone:()Ljava/lang/Object;
       7: checkcast     #19                 // class "[Lorg/apache/commons/math3/geometry/euclidean/twod/Segment;"
      10: areturn

  private org.apache.commons.math3.geometry.euclidean.twod.Segment[] retrieveLineSegments();
    Code:
       0: aload_0
       1: getfield      #20                 // Field lineSegments:[Lorg/apache/commons/math3/geometry/euclidean/twod/Segment;
       4: ifnonnull     215
       7: aload_0
       8: getfield      #10                 // Field vertices:[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      11: arraylength
      12: istore_1
      13: iload_1
      14: iconst_1
      15: if_icmpgt     29
      18: aload_0
      19: iconst_0
      20: anewarray     #21                 // class org/apache/commons/math3/geometry/euclidean/twod/Segment
      23: putfield      #20                 // Field lineSegments:[Lorg/apache/commons/math3/geometry/euclidean/twod/Segment;
      26: goto          215
      29: iload_1
      30: iconst_2
      31: if_icmpne     87
      34: aload_0
      35: iconst_1
      36: anewarray     #21                 // class org/apache/commons/math3/geometry/euclidean/twod/Segment
      39: putfield      #20                 // Field lineSegments:[Lorg/apache/commons/math3/geometry/euclidean/twod/Segment;
      42: aload_0
      43: getfield      #10                 // Field vertices:[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      46: iconst_0
      47: aaload
      48: astore_2
      49: aload_0
      50: getfield      #10                 // Field vertices:[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
      53: iconst_1
      54: aaload
      55: astore_3
      56: aload_0
      57: getfield      #20                 // Field lineSegments:[Lorg/apache/commons/math3/geometry/euclidean/twod/Segment;
      60: iconst_0
      61: new           #21                 // class org/apache/commons/math3/geometry/euclidean/twod/Segment
      64: dup
      65: aload_2
      66: aload_3
      67: new           #22                 // class org/apache/commons/math3/geometry/euclidean/twod/Line
      70: dup
      71: aload_2
      72: aload_3
      73: aload_0
      74: getfield      #2                  // Field tolerance:D
      77: invokespecial #23                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line."<init>":(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V
      80: invokespecial #24                 // Method org/apache/commons/math3/geometry/euclidean/twod/Segment."<init>":(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)V
      83: aastore
      84: goto          215
      87: aload_0
      88: iload_1
      89: anewarray     #21                 // class org/apache/commons/math3/geometry/euclidean/twod/Segment
      92: putfield      #20                 // Field lineSegments:[Lorg/apache/commons/math3/geometry/euclidean/twod/Segment;
      95: aconst_null
      96: astore_2
      97: aconst_null
      98: astore_3
      99: iconst_0
     100: istore        4
     102: aload_0
     103: getfield      #10                 // Field vertices:[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
     106: astore        5
     108: aload         5
     110: arraylength
     111: istore        6
     113: iconst_0
     114: istore        7
     116: iload         7
     118: iload         6
     120: if_icmpge     186
     123: aload         5
     125: iload         7
     127: aaload
     128: astore        8
     130: aload_3
     131: ifnonnull     143
     134: aload         8
     136: astore_2
     137: aload         8
     139: astore_3
     140: goto          180
     143: aload_0
     144: getfield      #20                 // Field lineSegments:[Lorg/apache/commons/math3/geometry/euclidean/twod/Segment;
     147: iload         4
     149: iinc          4, 1
     152: new           #21                 // class org/apache/commons/math3/geometry/euclidean/twod/Segment
     155: dup
     156: aload_3
     157: aload         8
     159: new           #22                 // class org/apache/commons/math3/geometry/euclidean/twod/Line
     162: dup
     163: aload_3
     164: aload         8
     166: aload_0
     167: getfield      #2                  // Field tolerance:D
     170: invokespecial #23                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line."<init>":(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V
     173: invokespecial #24                 // Method org/apache/commons/math3/geometry/euclidean/twod/Segment."<init>":(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)V
     176: aastore
     177: aload         8
     179: astore_3
     180: iinc          7, 1
     183: goto          116
     186: aload_0
     187: getfield      #20                 // Field lineSegments:[Lorg/apache/commons/math3/geometry/euclidean/twod/Segment;
     190: iload         4
     192: new           #21                 // class org/apache/commons/math3/geometry/euclidean/twod/Segment
     195: dup
     196: aload_3
     197: aload_2
     198: new           #22                 // class org/apache/commons/math3/geometry/euclidean/twod/Line
     201: dup
     202: aload_3
     203: aload_2
     204: aload_0
     205: getfield      #2                  // Field tolerance:D
     208: invokespecial #23                 // Method org/apache/commons/math3/geometry/euclidean/twod/Line."<init>":(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V
     211: invokespecial #24                 // Method org/apache/commons/math3/geometry/euclidean/twod/Segment."<init>":(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)V
     214: aastore
     215: aload_0
     216: getfield      #20                 // Field lineSegments:[Lorg/apache/commons/math3/geometry/euclidean/twod/Segment;
     219: areturn

  public org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> createRegion() throws org.apache.commons.math3.exception.InsufficientDataException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field vertices:[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
       4: arraylength
       5: iconst_3
       6: if_icmpge     17
       9: new           #25                 // class org/apache/commons/math3/exception/InsufficientDataException
      12: dup
      13: invokespecial #26                 // Method org/apache/commons/math3/exception/InsufficientDataException."<init>":()V
      16: athrow
      17: new           #27                 // class org/apache/commons/math3/geometry/partitioning/RegionFactory
      20: dup
      21: invokespecial #28                 // Method org/apache/commons/math3/geometry/partitioning/RegionFactory."<init>":()V
      24: astore_1
      25: aload_0
      26: invokespecial #17                 // Method retrieveLineSegments:()[Lorg/apache/commons/math3/geometry/euclidean/twod/Segment;
      29: astore_2
      30: aload_2
      31: arraylength
      32: anewarray     #22                 // class org/apache/commons/math3/geometry/euclidean/twod/Line
      35: astore_3
      36: iconst_0
      37: istore        4
      39: iload         4
      41: aload_2
      42: arraylength
      43: if_icmpge     63
      46: aload_3
      47: iload         4
      49: aload_2
      50: iload         4
      52: aaload
      53: invokevirtual #29                 // Method org/apache/commons/math3/geometry/euclidean/twod/Segment.getLine:()Lorg/apache/commons/math3/geometry/euclidean/twod/Line;
      56: aastore
      57: iinc          4, 1
      60: goto          39
      63: aload_1
      64: aload_3
      65: invokevirtual #30                 // Method org/apache/commons/math3/geometry/partitioning/RegionFactory.buildConvex:([Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Region;
      68: areturn

  public org.apache.commons.math3.geometry.Point[] getVertices();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getVertices:()[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
       4: areturn
}
