Compiled from "RRQRDecomposition.java"
public class org.apache.commons.math3.linear.RRQRDecomposition extends org.apache.commons.math3.linear.QRDecomposition {
  private int[] p;

  private org.apache.commons.math3.linear.RealMatrix cachedP;

  public org.apache.commons.math3.linear.RRQRDecomposition(org.apache.commons.math3.linear.RealMatrix);
    Code:
       0: aload_0
       1: aload_1
       2: dconst_0
       3: invokespecial #1                  // Method "<init>":(Lorg/apache/commons/math3/linear/RealMatrix;D)V
       6: return

  public org.apache.commons.math3.linear.RRQRDecomposition(org.apache.commons.math3.linear.RealMatrix, double);
    Code:
       0: aload_0
       1: aload_1
       2: dload_2
       3: invokespecial #2                  // Method org/apache/commons/math3/linear/QRDecomposition."<init>":(Lorg/apache/commons/math3/linear/RealMatrix;D)V
       6: return

  protected void decompose(double[][]);
    Code:
       0: aload_0
       1: aload_1
       2: arraylength
       3: newarray       int
       5: putfield      #3                  // Field p:[I
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_0
      12: getfield      #3                  // Field p:[I
      15: arraylength
      16: if_icmpge     32
      19: aload_0
      20: getfield      #3                  // Field p:[I
      23: iload_2
      24: iload_2
      25: iastore
      26: iinc          2, 1
      29: goto          10
      32: aload_0
      33: aload_1
      34: invokespecial #4                  // Method org/apache/commons/math3/linear/QRDecomposition.decompose:([[D)V
      37: return

  protected void performHouseholderReflection(int, double[][]);
    Code:
       0: dconst_0
       1: dstore_3
       2: iload_1
       3: istore        5
       5: iload_1
       6: istore        6
       8: iload         6
      10: aload_2
      11: arraylength
      12: if_icmpge     77
      15: dconst_0
      16: dstore        7
      18: iconst_0
      19: istore        9
      21: iload         9
      23: aload_2
      24: iload         6
      26: aaload
      27: arraylength
      28: if_icmpge     57
      31: dload         7
      33: aload_2
      34: iload         6
      36: aaload
      37: iload         9
      39: daload
      40: aload_2
      41: iload         6
      43: aaload
      44: iload         9
      46: daload
      47: dmul
      48: dadd
      49: dstore        7
      51: iinc          9, 1
      54: goto          21
      57: dload         7
      59: dload_3
      60: dcmpl
      61: ifle          71
      64: dload         7
      66: dstore_3
      67: iload         6
      69: istore        5
      71: iinc          6, 1
      74: goto          8
      77: iload         5
      79: iload_1
      80: if_icmpeq     131
      83: aload_2
      84: iload_1
      85: aaload
      86: astore        6
      88: aload_2
      89: iload_1
      90: aload_2
      91: iload         5
      93: aaload
      94: aastore
      95: aload_2
      96: iload         5
      98: aload         6
     100: aastore
     101: aload_0
     102: getfield      #3                  // Field p:[I
     105: iload_1
     106: iaload
     107: istore        7
     109: aload_0
     110: getfield      #3                  // Field p:[I
     113: iload_1
     114: aload_0
     115: getfield      #3                  // Field p:[I
     118: iload         5
     120: iaload
     121: iastore
     122: aload_0
     123: getfield      #3                  // Field p:[I
     126: iload         5
     128: iload         7
     130: iastore
     131: aload_0
     132: iload_1
     133: aload_2
     134: invokespecial #5                  // Method org/apache/commons/math3/linear/QRDecomposition.performHouseholderReflection:(I[[D)V
     137: return

  public org.apache.commons.math3.linear.RealMatrix getP();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cachedP:Lorg/apache/commons/math3/linear/RealMatrix;
       4: ifnonnull     52
       7: aload_0
       8: getfield      #3                  // Field p:[I
      11: arraylength
      12: istore_1
      13: aload_0
      14: iload_1
      15: iload_1
      16: invokestatic  #7                  // Method org/apache/commons/math3/linear/MatrixUtils.createRealMatrix:(II)Lorg/apache/commons/math3/linear/RealMatrix;
      19: putfield      #6                  // Field cachedP:Lorg/apache/commons/math3/linear/RealMatrix;
      22: iconst_0
      23: istore_2
      24: iload_2
      25: iload_1
      26: if_icmpge     52
      29: aload_0
      30: getfield      #6                  // Field cachedP:Lorg/apache/commons/math3/linear/RealMatrix;
      33: aload_0
      34: getfield      #3                  // Field p:[I
      37: iload_2
      38: iaload
      39: iload_2
      40: dconst_1
      41: invokeinterface #8,  5            // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.setEntry:(IID)V
      46: iinc          2, 1
      49: goto          24
      52: aload_0
      53: getfield      #6                  // Field cachedP:Lorg/apache/commons/math3/linear/RealMatrix;
      56: areturn

  public int getRank(double);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getR:()Lorg/apache/commons/math3/linear/RealMatrix;
       4: astore_3
       5: aload_3
       6: invokeinterface #10,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getRowDimension:()I
      11: istore        4
      13: aload_3
      14: invokeinterface #11,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getColumnDimension:()I
      19: istore        5
      21: iconst_1
      22: istore        6
      24: aload_3
      25: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getFrobeniusNorm:()D
      30: dstore        7
      32: dload         7
      34: dstore        9
      36: iload         6
      38: iload         4
      40: iload         5
      42: invokestatic  #13                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      45: if_icmpge     106
      48: aload_3
      49: iload         6
      51: iload         4
      53: iconst_1
      54: isub
      55: iload         6
      57: iload         5
      59: iconst_1
      60: isub
      61: invokeinterface #14,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getSubMatrix:(IIII)Lorg/apache/commons/math3/linear/RealMatrix;
      66: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.getFrobeniusNorm:()D
      71: dstore        11
      73: dload         11
      75: dconst_0
      76: dcmpl
      77: ifeq          106
      80: dload         11
      82: dload         7
      84: ddiv
      85: dload         9
      87: dmul
      88: dload_1
      89: dcmpg
      90: ifge          96
      93: goto          106
      96: dload         11
      98: dstore        7
     100: iinc          6, 1
     103: goto          36
     106: iload         6
     108: ireturn

  public org.apache.commons.math3.linear.DecompositionSolver getSolver();
    Code:
       0: new           #15                 // class org/apache/commons/math3/linear/RRQRDecomposition$Solver
       3: dup
       4: aload_0
       5: invokespecial #16                 // Method org/apache/commons/math3/linear/QRDecomposition.getSolver:()Lorg/apache/commons/math3/linear/DecompositionSolver;
       8: aload_0
       9: invokevirtual #17                 // Method getP:()Lorg/apache/commons/math3/linear/RealMatrix;
      12: aconst_null
      13: invokespecial #18                 // Method org/apache/commons/math3/linear/RRQRDecomposition$Solver."<init>":(Lorg/apache/commons/math3/linear/DecompositionSolver;Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RRQRDecomposition$1;)V
      16: areturn
}
