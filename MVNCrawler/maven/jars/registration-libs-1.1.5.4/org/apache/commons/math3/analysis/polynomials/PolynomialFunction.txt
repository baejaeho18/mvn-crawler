Compiled from "PolynomialFunction.java"
public class org.apache.commons.math3.analysis.polynomials.PolynomialFunction implements org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction,org.apache.commons.math3.analysis.DifferentiableUnivariateFunction,java.io.Serializable {
  private static final long serialVersionUID;

  private final double[] coefficients;

  public org.apache.commons.math3.analysis.polynomials.PolynomialFunction(double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #2                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       8: aload_1
       9: arraylength
      10: istore_2
      11: iload_2
      12: ifne          26
      15: new           #3                  // class org/apache/commons/math3/exception/NoDataException
      18: dup
      19: getstatic     #4                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      22: invokespecial #5                  // Method org/apache/commons/math3/exception/NoDataException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;)V
      25: athrow
      26: iload_2
      27: iconst_1
      28: if_icmple     47
      31: aload_1
      32: iload_2
      33: iconst_1
      34: isub
      35: daload
      36: dconst_0
      37: dcmpl
      38: ifne          47
      41: iinc          2, -1
      44: goto          26
      47: aload_0
      48: iload_2
      49: newarray       double
      51: putfield      #6                  // Field coefficients:[D
      54: aload_1
      55: iconst_0
      56: aload_0
      57: getfield      #6                  // Field coefficients:[D
      60: iconst_0
      61: iload_2
      62: invokestatic  #7                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      65: return

  public double value(double);
    Code:
       0: aload_0
       1: getfield      #6                  // Field coefficients:[D
       4: dload_1
       5: invokestatic  #8                  // Method evaluate:([DD)D
       8: dreturn

  public int degree();
    Code:
       0: aload_0
       1: getfield      #6                  // Field coefficients:[D
       4: arraylength
       5: iconst_1
       6: isub
       7: ireturn

  public double[] getCoefficients();
    Code:
       0: aload_0
       1: getfield      #6                  // Field coefficients:[D
       4: invokevirtual #9                  // Method "[D".clone:()Ljava/lang/Object;
       7: checkcast     #10                 // class "[D"
      10: areturn

  protected static double evaluate(double[], double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException;
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       4: aload_0
       5: arraylength
       6: istore_3
       7: iload_3
       8: ifne          22
      11: new           #3                  // class org/apache/commons/math3/exception/NoDataException
      14: dup
      15: getstatic     #4                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      18: invokespecial #5                  // Method org/apache/commons/math3/exception/NoDataException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;)V
      21: athrow
      22: aload_0
      23: iload_3
      24: iconst_1
      25: isub
      26: daload
      27: dstore        4
      29: iload_3
      30: iconst_2
      31: isub
      32: istore        6
      34: iload         6
      36: iflt          56
      39: dload_1
      40: dload         4
      42: dmul
      43: aload_0
      44: iload         6
      46: daload
      47: dadd
      48: dstore        4
      50: iinc          6, -1
      53: goto          34
      56: dload         4
      58: dreturn

  public org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field coefficients:[D
       4: invokestatic  #2                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       7: aload_0
       8: getfield      #6                  // Field coefficients:[D
      11: arraylength
      12: istore_2
      13: iload_2
      14: ifne          28
      17: new           #3                  // class org/apache/commons/math3/exception/NoDataException
      20: dup
      21: getstatic     #4                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      24: invokespecial #5                  // Method org/apache/commons/math3/exception/NoDataException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;)V
      27: athrow
      28: new           #11                 // class org/apache/commons/math3/analysis/differentiation/DerivativeStructure
      31: dup
      32: aload_1
      33: invokevirtual #12                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.getFreeParameters:()I
      36: aload_1
      37: invokevirtual #13                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.getOrder:()I
      40: aload_0
      41: getfield      #6                  // Field coefficients:[D
      44: iload_2
      45: iconst_1
      46: isub
      47: daload
      48: invokespecial #14                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure."<init>":(IID)V
      51: astore_3
      52: iload_2
      53: iconst_2
      54: isub
      55: istore        4
      57: iload         4
      59: iflt          84
      62: aload_3
      63: aload_1
      64: invokevirtual #15                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.multiply:(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
      67: aload_0
      68: getfield      #6                  // Field coefficients:[D
      71: iload         4
      73: daload
      74: invokevirtual #16                 // Method org/apache/commons/math3/analysis/differentiation/DerivativeStructure.add:(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
      77: astore_3
      78: iinc          4, -1
      81: goto          57
      84: aload_3
      85: areturn

  public org.apache.commons.math3.analysis.polynomials.PolynomialFunction add(org.apache.commons.math3.analysis.polynomials.PolynomialFunction);
    Code:
       0: aload_0
       1: getfield      #6                  // Field coefficients:[D
       4: arraylength
       5: aload_1
       6: getfield      #6                  // Field coefficients:[D
       9: arraylength
      10: invokestatic  #17                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      13: istore_2
      14: aload_0
      15: getfield      #6                  // Field coefficients:[D
      18: arraylength
      19: aload_1
      20: getfield      #6                  // Field coefficients:[D
      23: arraylength
      24: invokestatic  #18                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
      27: istore_3
      28: iload_3
      29: newarray       double
      31: astore        4
      33: iconst_0
      34: istore        5
      36: iload         5
      38: iload_2
      39: if_icmpge     68
      42: aload         4
      44: iload         5
      46: aload_0
      47: getfield      #6                  // Field coefficients:[D
      50: iload         5
      52: daload
      53: aload_1
      54: getfield      #6                  // Field coefficients:[D
      57: iload         5
      59: daload
      60: dadd
      61: dastore
      62: iinc          5, 1
      65: goto          36
      68: aload_0
      69: getfield      #6                  // Field coefficients:[D
      72: arraylength
      73: aload_1
      74: getfield      #6                  // Field coefficients:[D
      77: arraylength
      78: if_icmpge     88
      81: aload_1
      82: getfield      #6                  // Field coefficients:[D
      85: goto          92
      88: aload_0
      89: getfield      #6                  // Field coefficients:[D
      92: iload_2
      93: aload         4
      95: iload_2
      96: iload_3
      97: iload_2
      98: isub
      99: invokestatic  #7                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     102: new           #19                 // class org/apache/commons/math3/analysis/polynomials/PolynomialFunction
     105: dup
     106: aload         4
     108: invokespecial #20                 // Method "<init>":([D)V
     111: areturn

  public org.apache.commons.math3.analysis.polynomials.PolynomialFunction subtract(org.apache.commons.math3.analysis.polynomials.PolynomialFunction);
    Code:
       0: aload_0
       1: getfield      #6                  // Field coefficients:[D
       4: arraylength
       5: aload_1
       6: getfield      #6                  // Field coefficients:[D
       9: arraylength
      10: invokestatic  #17                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      13: istore_2
      14: aload_0
      15: getfield      #6                  // Field coefficients:[D
      18: arraylength
      19: aload_1
      20: getfield      #6                  // Field coefficients:[D
      23: arraylength
      24: invokestatic  #18                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
      27: istore_3
      28: iload_3
      29: newarray       double
      31: astore        4
      33: iconst_0
      34: istore        5
      36: iload         5
      38: iload_2
      39: if_icmpge     68
      42: aload         4
      44: iload         5
      46: aload_0
      47: getfield      #6                  // Field coefficients:[D
      50: iload         5
      52: daload
      53: aload_1
      54: getfield      #6                  // Field coefficients:[D
      57: iload         5
      59: daload
      60: dsub
      61: dastore
      62: iinc          5, 1
      65: goto          36
      68: aload_0
      69: getfield      #6                  // Field coefficients:[D
      72: arraylength
      73: aload_1
      74: getfield      #6                  // Field coefficients:[D
      77: arraylength
      78: if_icmpge     112
      81: iload_2
      82: istore        5
      84: iload         5
      86: iload_3
      87: if_icmpge     109
      90: aload         4
      92: iload         5
      94: aload_1
      95: getfield      #6                  // Field coefficients:[D
      98: iload         5
     100: daload
     101: dneg
     102: dastore
     103: iinc          5, 1
     106: goto          84
     109: goto          126
     112: aload_0
     113: getfield      #6                  // Field coefficients:[D
     116: iload_2
     117: aload         4
     119: iload_2
     120: iload_3
     121: iload_2
     122: isub
     123: invokestatic  #7                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     126: new           #19                 // class org/apache/commons/math3/analysis/polynomials/PolynomialFunction
     129: dup
     130: aload         4
     132: invokespecial #20                 // Method "<init>":([D)V
     135: areturn

  public org.apache.commons.math3.analysis.polynomials.PolynomialFunction negate();
    Code:
       0: aload_0
       1: getfield      #6                  // Field coefficients:[D
       4: arraylength
       5: newarray       double
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_0
      12: getfield      #6                  // Field coefficients:[D
      15: arraylength
      16: if_icmpge     35
      19: aload_1
      20: iload_2
      21: aload_0
      22: getfield      #6                  // Field coefficients:[D
      25: iload_2
      26: daload
      27: dneg
      28: dastore
      29: iinc          2, 1
      32: goto          10
      35: new           #19                 // class org/apache/commons/math3/analysis/polynomials/PolynomialFunction
      38: dup
      39: aload_1
      40: invokespecial #20                 // Method "<init>":([D)V
      43: areturn

  public org.apache.commons.math3.analysis.polynomials.PolynomialFunction multiply(org.apache.commons.math3.analysis.polynomials.PolynomialFunction);
    Code:
       0: aload_0
       1: getfield      #6                  // Field coefficients:[D
       4: arraylength
       5: aload_1
       6: getfield      #6                  // Field coefficients:[D
       9: arraylength
      10: iadd
      11: iconst_1
      12: isub
      13: newarray       double
      15: astore_2
      16: iconst_0
      17: istore_3
      18: iload_3
      19: aload_2
      20: arraylength
      21: if_icmpge     94
      24: aload_2
      25: iload_3
      26: dconst_0
      27: dastore
      28: iconst_0
      29: iload_3
      30: iconst_1
      31: iadd
      32: aload_1
      33: getfield      #6                  // Field coefficients:[D
      36: arraylength
      37: isub
      38: invokestatic  #18                 // Method org/apache/commons/math3/util/FastMath.max:(II)I
      41: istore        4
      43: iload         4
      45: aload_0
      46: getfield      #6                  // Field coefficients:[D
      49: arraylength
      50: iload_3
      51: iconst_1
      52: iadd
      53: invokestatic  #17                 // Method org/apache/commons/math3/util/FastMath.min:(II)I
      56: if_icmpge     88
      59: aload_2
      60: iload_3
      61: dup2
      62: daload
      63: aload_0
      64: getfield      #6                  // Field coefficients:[D
      67: iload         4
      69: daload
      70: aload_1
      71: getfield      #6                  // Field coefficients:[D
      74: iload_3
      75: iload         4
      77: isub
      78: daload
      79: dmul
      80: dadd
      81: dastore
      82: iinc          4, 1
      85: goto          43
      88: iinc          3, 1
      91: goto          18
      94: new           #19                 // class org/apache/commons/math3/analysis/polynomials/PolynomialFunction
      97: dup
      98: aload_2
      99: invokespecial #20                 // Method "<init>":([D)V
     102: areturn

  protected static double[] differentiate(double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException;
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       4: aload_0
       5: arraylength
       6: istore_1
       7: iload_1
       8: ifne          22
      11: new           #3                  // class org/apache/commons/math3/exception/NoDataException
      14: dup
      15: getstatic     #4                  // Field org/apache/commons/math3/exception/util/LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      18: invokespecial #5                  // Method org/apache/commons/math3/exception/NoDataException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;)V
      21: athrow
      22: iload_1
      23: iconst_1
      24: if_icmpne     35
      27: iconst_1
      28: newarray       double
      30: dup
      31: iconst_0
      32: dconst_0
      33: dastore
      34: areturn
      35: iload_1
      36: iconst_1
      37: isub
      38: newarray       double
      40: astore_2
      41: iload_1
      42: iconst_1
      43: isub
      44: istore_3
      45: iload_3
      46: ifle          66
      49: aload_2
      50: iload_3
      51: iconst_1
      52: isub
      53: iload_3
      54: i2d
      55: aload_0
      56: iload_3
      57: daload
      58: dmul
      59: dastore
      60: iinc          3, -1
      63: goto          45
      66: aload_2
      67: areturn

  public org.apache.commons.math3.analysis.polynomials.PolynomialFunction polynomialDerivative();
    Code:
       0: new           #19                 // class org/apache/commons/math3/analysis/polynomials/PolynomialFunction
       3: dup
       4: aload_0
       5: getfield      #6                  // Field coefficients:[D
       8: invokestatic  #21                 // Method differentiate:([D)[D
      11: invokespecial #20                 // Method "<init>":([D)V
      14: areturn

  public org.apache.commons.math3.analysis.UnivariateFunction derivative();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method polynomialDerivative:()Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #6                  // Field coefficients:[D
      12: iconst_0
      13: daload
      14: dconst_0
      15: dcmpl
      16: ifne          31
      19: aload_0
      20: getfield      #6                  // Field coefficients:[D
      23: arraylength
      24: iconst_1
      25: if_icmpne     45
      28: ldc           #25                 // String 0
      30: areturn
      31: aload_1
      32: aload_0
      33: getfield      #6                  // Field coefficients:[D
      36: iconst_0
      37: daload
      38: invokestatic  #26                 // Method toString:(D)Ljava/lang/String;
      41: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: pop
      45: iconst_1
      46: istore_2
      47: iload_2
      48: aload_0
      49: getfield      #6                  // Field coefficients:[D
      52: arraylength
      53: if_icmpge     191
      56: aload_0
      57: getfield      #6                  // Field coefficients:[D
      60: iload_2
      61: daload
      62: dconst_0
      63: dcmpl
      64: ifeq          185
      67: aload_1
      68: invokevirtual #28                 // Method java/lang/StringBuilder.length:()I
      71: ifle          105
      74: aload_0
      75: getfield      #6                  // Field coefficients:[D
      78: iload_2
      79: daload
      80: dconst_0
      81: dcmpg
      82: ifge          95
      85: aload_1
      86: ldc           #29                 // String  -
      88: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: pop
      92: goto          123
      95: aload_1
      96: ldc           #30                 // String  +
      98: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: pop
     102: goto          123
     105: aload_0
     106: getfield      #6                  // Field coefficients:[D
     109: iload_2
     110: daload
     111: dconst_0
     112: dcmpg
     113: ifge          123
     116: aload_1
     117: ldc           #31                 // String -
     119: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: pop
     123: aload_0
     124: getfield      #6                  // Field coefficients:[D
     127: iload_2
     128: daload
     129: invokestatic  #32                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
     132: dstore_3
     133: dload_3
     134: dconst_1
     135: dsub
     136: dconst_0
     137: dcmpl
     138: ifeq          157
     141: aload_1
     142: dload_3
     143: invokestatic  #26                 // Method toString:(D)Ljava/lang/String;
     146: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: pop
     150: aload_1
     151: bipush        32
     153: invokevirtual #33                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     156: pop
     157: aload_1
     158: ldc           #34                 // String x
     160: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     163: pop
     164: iload_2
     165: iconst_1
     166: if_icmple     185
     169: aload_1
     170: bipush        94
     172: invokevirtual #33                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     175: pop
     176: aload_1
     177: iload_2
     178: invokestatic  #35                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
     181: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     184: pop
     185: iinc          2, 1
     188: goto          47
     191: aload_1
     192: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     195: areturn

  private static java.lang.String toString(double);
    Code:
       0: dload_0
       1: invokestatic  #37                 // Method java/lang/Double.toString:(D)Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ldc           #38                 // String .0
       8: invokevirtual #39                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      11: ifeq          26
      14: aload_2
      15: iconst_0
      16: aload_2
      17: invokevirtual #40                 // Method java/lang/String.length:()I
      20: iconst_2
      21: isub
      22: invokevirtual #41                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      25: areturn
      26: aload_2
      27: areturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: getfield      #6                  // Field coefficients:[D
      13: invokestatic  #42                 // Method java/util/Arrays.hashCode:([D)I
      16: iadd
      17: istore_2
      18: iload_2
      19: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #19                 // class org/apache/commons/math3/analysis/polynomials/PolynomialFunction
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #19                 // class org/apache/commons/math3/analysis/polynomials/PolynomialFunction
      20: astore_2
      21: aload_0
      22: getfield      #6                  // Field coefficients:[D
      25: aload_2
      26: getfield      #6                  // Field coefficients:[D
      29: invokestatic  #43                 // Method java/util/Arrays.equals:([D[D)Z
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: iconst_1
      38: ireturn
}
