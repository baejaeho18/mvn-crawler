Compiled from "ArrayRealVector.java"
public class org.apache.commons.math3.linear.ArrayRealVector extends org.apache.commons.math3.linear.RealVector implements java.io.Serializable {
  private static final long serialVersionUID;

  private static final org.apache.commons.math3.linear.RealVectorFormat DEFAULT_FORMAT;

  private double[] data;

  public org.apache.commons.math3.linear.ArrayRealVector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/linear/RealVector."<init>":()V
       4: aload_0
       5: iconst_0
       6: newarray       double
       8: putfield      #2                  // Field data:[D
      11: return

  public org.apache.commons.math3.linear.ArrayRealVector(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/linear/RealVector."<init>":()V
       4: aload_0
       5: iload_1
       6: newarray       double
       8: putfield      #2                  // Field data:[D
      11: return

  public org.apache.commons.math3.linear.ArrayRealVector(int, double);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/linear/RealVector."<init>":()V
       4: aload_0
       5: iload_1
       6: newarray       double
       8: putfield      #2                  // Field data:[D
      11: aload_0
      12: getfield      #2                  // Field data:[D
      15: dload_2
      16: invokestatic  #3                  // Method java/util/Arrays.fill:([DD)V
      19: return

  public org.apache.commons.math3.linear.ArrayRealVector(double[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/linear/RealVector."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #4                  // Method "[D".clone:()Ljava/lang/Object;
       9: checkcast     #5                  // class "[D"
      12: putfield      #2                  // Field data:[D
      15: return

  public org.apache.commons.math3.linear.ArrayRealVector(double[], boolean) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/linear/RealVector."<init>":()V
       4: aload_1
       5: ifnonnull     16
       8: new           #6                  // class org/apache/commons/math3/exception/NullArgumentException
      11: dup
      12: invokespecial #7                  // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      15: athrow
      16: aload_0
      17: iload_2
      18: ifeq          31
      21: aload_1
      22: invokevirtual #8                  // Method "[D".clone:()Ljava/lang/Object;
      25: checkcast     #5                  // class "[D"
      28: goto          32
      31: aload_1
      32: putfield      #2                  // Field data:[D
      35: return

  public org.apache.commons.math3.linear.ArrayRealVector(double[], int, int) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/linear/RealVector."<init>":()V
       4: aload_1
       5: ifnonnull     16
       8: new           #6                  // class org/apache/commons/math3/exception/NullArgumentException
      11: dup
      12: invokespecial #7                  // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      15: athrow
      16: aload_1
      17: arraylength
      18: iload_2
      19: iload_3
      20: iadd
      21: if_icmpge     44
      24: new           #9                  // class org/apache/commons/math3/exception/NumberIsTooLargeException
      27: dup
      28: iload_2
      29: iload_3
      30: iadd
      31: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: aload_1
      35: arraylength
      36: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: iconst_1
      40: invokespecial #11                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
      43: athrow
      44: aload_0
      45: iload_3
      46: newarray       double
      48: putfield      #2                  // Field data:[D
      51: aload_1
      52: iload_2
      53: aload_0
      54: getfield      #2                  // Field data:[D
      57: iconst_0
      58: iload_3
      59: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      62: return

  public org.apache.commons.math3.linear.ArrayRealVector(java.lang.Double[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/linear/RealVector."<init>":()V
       4: aload_0
       5: aload_1
       6: arraylength
       7: newarray       double
       9: putfield      #2                  // Field data:[D
      12: iconst_0
      13: istore_2
      14: iload_2
      15: aload_1
      16: arraylength
      17: if_icmpge     38
      20: aload_0
      21: getfield      #2                  // Field data:[D
      24: iload_2
      25: aload_1
      26: iload_2
      27: aaload
      28: invokevirtual #13                 // Method java/lang/Double.doubleValue:()D
      31: dastore
      32: iinc          2, 1
      35: goto          14
      38: return

  public org.apache.commons.math3.linear.ArrayRealVector(java.lang.Double[], int, int) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/linear/RealVector."<init>":()V
       4: aload_1
       5: ifnonnull     16
       8: new           #6                  // class org/apache/commons/math3/exception/NullArgumentException
      11: dup
      12: invokespecial #7                  // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      15: athrow
      16: aload_1
      17: arraylength
      18: iload_2
      19: iload_3
      20: iadd
      21: if_icmpge     44
      24: new           #9                  // class org/apache/commons/math3/exception/NumberIsTooLargeException
      27: dup
      28: iload_2
      29: iload_3
      30: iadd
      31: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: aload_1
      35: arraylength
      36: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: iconst_1
      40: invokespecial #11                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
      43: athrow
      44: aload_0
      45: iload_3
      46: newarray       double
      48: putfield      #2                  // Field data:[D
      51: iload_2
      52: istore        4
      54: iload         4
      56: iload_2
      57: iload_3
      58: iadd
      59: if_icmpge     84
      62: aload_0
      63: getfield      #2                  // Field data:[D
      66: iload         4
      68: iload_2
      69: isub
      70: aload_1
      71: iload         4
      73: aaload
      74: invokevirtual #13                 // Method java/lang/Double.doubleValue:()D
      77: dastore
      78: iinc          4, 1
      81: goto          54
      84: return

  public org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/linear/RealVector."<init>":()V
       4: aload_1
       5: ifnonnull     16
       8: new           #6                  // class org/apache/commons/math3/exception/NullArgumentException
      11: dup
      12: invokespecial #7                  // Method org/apache/commons/math3/exception/NullArgumentException."<init>":()V
      15: athrow
      16: aload_0
      17: aload_1
      18: invokevirtual #14                 // Method org/apache/commons/math3/linear/RealVector.getDimension:()I
      21: newarray       double
      23: putfield      #2                  // Field data:[D
      26: iconst_0
      27: istore_2
      28: iload_2
      29: aload_0
      30: getfield      #2                  // Field data:[D
      33: arraylength
      34: if_icmpge     54
      37: aload_0
      38: getfield      #2                  // Field data:[D
      41: iload_2
      42: aload_1
      43: iload_2
      44: invokevirtual #15                 // Method org/apache/commons/math3/linear/RealVector.getEntry:(I)D
      47: dastore
      48: iinc          2, 1
      51: goto          28
      54: return

  public org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #16                 // Method "<init>":(Lorg/apache/commons/math3/linear/ArrayRealVector;Z)V
       6: return

  public org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/linear/RealVector."<init>":()V
       4: aload_0
       5: iload_2
       6: ifeq          22
       9: aload_1
      10: getfield      #2                  // Field data:[D
      13: invokevirtual #17                 // Method "[D".clone:()Ljava/lang/Object;
      16: checkcast     #5                  // class "[D"
      19: goto          26
      22: aload_1
      23: getfield      #2                  // Field data:[D
      26: putfield      #2                  // Field data:[D
      29: return

  public org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector, org.apache.commons.math3.linear.ArrayRealVector);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/linear/RealVector."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #2                  // Field data:[D
       9: arraylength
      10: aload_2
      11: getfield      #2                  // Field data:[D
      14: arraylength
      15: iadd
      16: newarray       double
      18: putfield      #2                  // Field data:[D
      21: aload_1
      22: getfield      #2                  // Field data:[D
      25: iconst_0
      26: aload_0
      27: getfield      #2                  // Field data:[D
      30: iconst_0
      31: aload_1
      32: getfield      #2                  // Field data:[D
      35: arraylength
      36: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      39: aload_2
      40: getfield      #2                  // Field data:[D
      43: iconst_0
      44: aload_0
      45: getfield      #2                  // Field data:[D
      48: aload_1
      49: getfield      #2                  // Field data:[D
      52: arraylength
      53: aload_2
      54: getfield      #2                  // Field data:[D
      57: arraylength
      58: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      61: return

  public org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector, org.apache.commons.math3.linear.RealVector);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/linear/RealVector."<init>":()V
       4: aload_1
       5: getfield      #2                  // Field data:[D
       8: arraylength
       9: istore_3
      10: aload_2
      11: invokevirtual #14                 // Method org/apache/commons/math3/linear/RealVector.getDimension:()I
      14: istore        4
      16: aload_0
      17: iload_3
      18: iload         4
      20: iadd
      21: newarray       double
      23: putfield      #2                  // Field data:[D
      26: aload_1
      27: getfield      #2                  // Field data:[D
      30: iconst_0
      31: aload_0
      32: getfield      #2                  // Field data:[D
      35: iconst_0
      36: iload_3
      37: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      40: iconst_0
      41: istore        5
      43: iload         5
      45: iload         4
      47: if_icmpge     71
      50: aload_0
      51: getfield      #2                  // Field data:[D
      54: iload_3
      55: iload         5
      57: iadd
      58: aload_2
      59: iload         5
      61: invokevirtual #15                 // Method org/apache/commons/math3/linear/RealVector.getEntry:(I)D
      64: dastore
      65: iinc          5, 1
      68: goto          43
      71: return

  public org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.linear.ArrayRealVector);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/linear/RealVector."<init>":()V
       4: aload_1
       5: invokevirtual #14                 // Method org/apache/commons/math3/linear/RealVector.getDimension:()I
       8: istore_3
       9: aload_2
      10: getfield      #2                  // Field data:[D
      13: arraylength
      14: istore        4
      16: aload_0
      17: iload_3
      18: iload         4
      20: iadd
      21: newarray       double
      23: putfield      #2                  // Field data:[D
      26: iconst_0
      27: istore        5
      29: iload         5
      31: iload_3
      32: if_icmpge     54
      35: aload_0
      36: getfield      #2                  // Field data:[D
      39: iload         5
      41: aload_1
      42: iload         5
      44: invokevirtual #15                 // Method org/apache/commons/math3/linear/RealVector.getEntry:(I)D
      47: dastore
      48: iinc          5, 1
      51: goto          29
      54: aload_2
      55: getfield      #2                  // Field data:[D
      58: iconst_0
      59: aload_0
      60: getfield      #2                  // Field data:[D
      63: iload_3
      64: iload         4
      66: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      69: return

  public org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector, double[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/linear/RealVector."<init>":()V
       4: aload_1
       5: invokevirtual #18                 // Method getDimension:()I
       8: istore_3
       9: aload_2
      10: arraylength
      11: istore        4
      13: aload_0
      14: iload_3
      15: iload         4
      17: iadd
      18: newarray       double
      20: putfield      #2                  // Field data:[D
      23: aload_1
      24: getfield      #2                  // Field data:[D
      27: iconst_0
      28: aload_0
      29: getfield      #2                  // Field data:[D
      32: iconst_0
      33: iload_3
      34: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      37: aload_2
      38: iconst_0
      39: aload_0
      40: getfield      #2                  // Field data:[D
      43: iload_3
      44: iload         4
      46: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      49: return

  public org.apache.commons.math3.linear.ArrayRealVector(double[], org.apache.commons.math3.linear.ArrayRealVector);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/linear/RealVector."<init>":()V
       4: aload_1
       5: arraylength
       6: istore_3
       7: aload_2
       8: invokevirtual #18                 // Method getDimension:()I
      11: istore        4
      13: aload_0
      14: iload_3
      15: iload         4
      17: iadd
      18: newarray       double
      20: putfield      #2                  // Field data:[D
      23: aload_1
      24: iconst_0
      25: aload_0
      26: getfield      #2                  // Field data:[D
      29: iconst_0
      30: iload_3
      31: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      34: aload_2
      35: getfield      #2                  // Field data:[D
      38: iconst_0
      39: aload_0
      40: getfield      #2                  // Field data:[D
      43: iload_3
      44: iload         4
      46: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      49: return

  public org.apache.commons.math3.linear.ArrayRealVector(double[], double[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/math3/linear/RealVector."<init>":()V
       4: aload_1
       5: arraylength
       6: istore_3
       7: aload_2
       8: arraylength
       9: istore        4
      11: aload_0
      12: iload_3
      13: iload         4
      15: iadd
      16: newarray       double
      18: putfield      #2                  // Field data:[D
      21: aload_1
      22: iconst_0
      23: aload_0
      24: getfield      #2                  // Field data:[D
      27: iconst_0
      28: iload_3
      29: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      32: aload_2
      33: iconst_0
      34: aload_0
      35: getfield      #2                  // Field data:[D
      38: iload_3
      39: iload         4
      41: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      44: return

  public org.apache.commons.math3.linear.ArrayRealVector copy();
    Code:
       0: new           #19                 // class org/apache/commons/math3/linear/ArrayRealVector
       3: dup
       4: aload_0
       5: iconst_1
       6: invokespecial #16                 // Method "<init>":(Lorg/apache/commons/math3/linear/ArrayRealVector;Z)V
       9: areturn

  public org.apache.commons.math3.linear.ArrayRealVector add(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_1
       1: instanceof    #19                 // class org/apache/commons/math3/linear/ArrayRealVector
       4: ifeq          75
       7: aload_1
       8: checkcast     #19                 // class org/apache/commons/math3/linear/ArrayRealVector
      11: getfield      #2                  // Field data:[D
      14: astore_2
      15: aload_2
      16: arraylength
      17: istore_3
      18: aload_0
      19: iload_3
      20: invokevirtual #20                 // Method checkVectorDimensions:(I)V
      23: new           #19                 // class org/apache/commons/math3/linear/ArrayRealVector
      26: dup
      27: iload_3
      28: invokespecial #21                 // Method "<init>":(I)V
      31: astore        4
      33: aload         4
      35: getfield      #2                  // Field data:[D
      38: astore        5
      40: iconst_0
      41: istore        6
      43: iload         6
      45: iload_3
      46: if_icmpge     72
      49: aload         5
      51: iload         6
      53: aload_0
      54: getfield      #2                  // Field data:[D
      57: iload         6
      59: daload
      60: aload_2
      61: iload         6
      63: daload
      64: dadd
      65: dastore
      66: iinc          6, 1
      69: goto          43
      72: aload         4
      74: areturn
      75: aload_0
      76: aload_1
      77: invokevirtual #22                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/RealVector;)V
      80: aload_0
      81: getfield      #2                  // Field data:[D
      84: invokevirtual #23                 // Method "[D".clone:()Ljava/lang/Object;
      87: checkcast     #5                  // class "[D"
      90: astore_2
      91: aload_1
      92: invokevirtual #24                 // Method org/apache/commons/math3/linear/RealVector.iterator:()Ljava/util/Iterator;
      95: astore_3
      96: aload_3
      97: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     102: ifeq          134
     105: aload_3
     106: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     111: checkcast     #27                 // class org/apache/commons/math3/linear/RealVector$Entry
     114: astore        4
     116: aload_2
     117: aload         4
     119: invokevirtual #28                 // Method org/apache/commons/math3/linear/RealVector$Entry.getIndex:()I
     122: dup2
     123: daload
     124: aload         4
     126: invokevirtual #29                 // Method org/apache/commons/math3/linear/RealVector$Entry.getValue:()D
     129: dadd
     130: dastore
     131: goto          96
     134: new           #19                 // class org/apache/commons/math3/linear/ArrayRealVector
     137: dup
     138: aload_2
     139: iconst_0
     140: invokespecial #30                 // Method "<init>":([DZ)V
     143: areturn

  public org.apache.commons.math3.linear.ArrayRealVector subtract(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_1
       1: instanceof    #19                 // class org/apache/commons/math3/linear/ArrayRealVector
       4: ifeq          75
       7: aload_1
       8: checkcast     #19                 // class org/apache/commons/math3/linear/ArrayRealVector
      11: getfield      #2                  // Field data:[D
      14: astore_2
      15: aload_2
      16: arraylength
      17: istore_3
      18: aload_0
      19: iload_3
      20: invokevirtual #20                 // Method checkVectorDimensions:(I)V
      23: new           #19                 // class org/apache/commons/math3/linear/ArrayRealVector
      26: dup
      27: iload_3
      28: invokespecial #21                 // Method "<init>":(I)V
      31: astore        4
      33: aload         4
      35: getfield      #2                  // Field data:[D
      38: astore        5
      40: iconst_0
      41: istore        6
      43: iload         6
      45: iload_3
      46: if_icmpge     72
      49: aload         5
      51: iload         6
      53: aload_0
      54: getfield      #2                  // Field data:[D
      57: iload         6
      59: daload
      60: aload_2
      61: iload         6
      63: daload
      64: dsub
      65: dastore
      66: iinc          6, 1
      69: goto          43
      72: aload         4
      74: areturn
      75: aload_0
      76: aload_1
      77: invokevirtual #22                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/RealVector;)V
      80: aload_0
      81: getfield      #2                  // Field data:[D
      84: invokevirtual #31                 // Method "[D".clone:()Ljava/lang/Object;
      87: checkcast     #5                  // class "[D"
      90: astore_2
      91: aload_1
      92: invokevirtual #24                 // Method org/apache/commons/math3/linear/RealVector.iterator:()Ljava/util/Iterator;
      95: astore_3
      96: aload_3
      97: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     102: ifeq          134
     105: aload_3
     106: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     111: checkcast     #27                 // class org/apache/commons/math3/linear/RealVector$Entry
     114: astore        4
     116: aload_2
     117: aload         4
     119: invokevirtual #28                 // Method org/apache/commons/math3/linear/RealVector$Entry.getIndex:()I
     122: dup2
     123: daload
     124: aload         4
     126: invokevirtual #29                 // Method org/apache/commons/math3/linear/RealVector$Entry.getValue:()D
     129: dsub
     130: dastore
     131: goto          96
     134: new           #19                 // class org/apache/commons/math3/linear/ArrayRealVector
     137: dup
     138: aload_2
     139: iconst_0
     140: invokespecial #30                 // Method "<init>":([DZ)V
     143: areturn

  public org.apache.commons.math3.linear.ArrayRealVector map(org.apache.commons.math3.analysis.UnivariateFunction);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method copy:()Lorg/apache/commons/math3/linear/ArrayRealVector;
       4: aload_1
       5: invokevirtual #33                 // Method mapToSelf:(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/ArrayRealVector;
       8: areturn

  public org.apache.commons.math3.linear.ArrayRealVector mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #2                  // Field data:[D
       7: arraylength
       8: if_icmpge     35
      11: aload_0
      12: getfield      #2                  // Field data:[D
      15: iload_2
      16: aload_1
      17: aload_0
      18: getfield      #2                  // Field data:[D
      21: iload_2
      22: daload
      23: invokeinterface #34,  3           // InterfaceMethod org/apache/commons/math3/analysis/UnivariateFunction.value:(D)D
      28: dastore
      29: iinc          2, 1
      32: goto          2
      35: aload_0
      36: areturn

  public org.apache.commons.math3.linear.RealVector mapAddToSelf(double);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: aload_0
       4: getfield      #2                  // Field data:[D
       7: arraylength
       8: if_icmpge     27
      11: aload_0
      12: getfield      #2                  // Field data:[D
      15: iload_3
      16: dup2
      17: daload
      18: dload_1
      19: dadd
      20: dastore
      21: iinc          3, 1
      24: goto          2
      27: aload_0
      28: areturn

  public org.apache.commons.math3.linear.RealVector mapSubtractToSelf(double);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: aload_0
       4: getfield      #2                  // Field data:[D
       7: arraylength
       8: if_icmpge     27
      11: aload_0
      12: getfield      #2                  // Field data:[D
      15: iload_3
      16: dup2
      17: daload
      18: dload_1
      19: dsub
      20: dastore
      21: iinc          3, 1
      24: goto          2
      27: aload_0
      28: areturn

  public org.apache.commons.math3.linear.RealVector mapMultiplyToSelf(double);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: aload_0
       4: getfield      #2                  // Field data:[D
       7: arraylength
       8: if_icmpge     27
      11: aload_0
      12: getfield      #2                  // Field data:[D
      15: iload_3
      16: dup2
      17: daload
      18: dload_1
      19: dmul
      20: dastore
      21: iinc          3, 1
      24: goto          2
      27: aload_0
      28: areturn

  public org.apache.commons.math3.linear.RealVector mapDivideToSelf(double);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: aload_0
       4: getfield      #2                  // Field data:[D
       7: arraylength
       8: if_icmpge     27
      11: aload_0
      12: getfield      #2                  // Field data:[D
      15: iload_3
      16: dup2
      17: daload
      18: dload_1
      19: ddiv
      20: dastore
      21: iinc          3, 1
      24: goto          2
      27: aload_0
      28: areturn

  public org.apache.commons.math3.linear.ArrayRealVector ebeMultiply(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_1
       1: instanceof    #19                 // class org/apache/commons/math3/linear/ArrayRealVector
       4: ifeq          75
       7: aload_1
       8: checkcast     #19                 // class org/apache/commons/math3/linear/ArrayRealVector
      11: getfield      #2                  // Field data:[D
      14: astore_2
      15: aload_2
      16: arraylength
      17: istore_3
      18: aload_0
      19: iload_3
      20: invokevirtual #20                 // Method checkVectorDimensions:(I)V
      23: new           #19                 // class org/apache/commons/math3/linear/ArrayRealVector
      26: dup
      27: iload_3
      28: invokespecial #21                 // Method "<init>":(I)V
      31: astore        4
      33: aload         4
      35: getfield      #2                  // Field data:[D
      38: astore        5
      40: iconst_0
      41: istore        6
      43: iload         6
      45: iload_3
      46: if_icmpge     72
      49: aload         5
      51: iload         6
      53: aload_0
      54: getfield      #2                  // Field data:[D
      57: iload         6
      59: daload
      60: aload_2
      61: iload         6
      63: daload
      64: dmul
      65: dastore
      66: iinc          6, 1
      69: goto          43
      72: aload         4
      74: areturn
      75: aload_0
      76: aload_1
      77: invokevirtual #22                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/RealVector;)V
      80: aload_0
      81: getfield      #2                  // Field data:[D
      84: invokevirtual #35                 // Method "[D".clone:()Ljava/lang/Object;
      87: checkcast     #5                  // class "[D"
      90: astore_2
      91: iconst_0
      92: istore_3
      93: iload_3
      94: aload_0
      95: getfield      #2                  // Field data:[D
      98: arraylength
      99: if_icmpge     119
     102: aload_2
     103: iload_3
     104: dup2
     105: daload
     106: aload_1
     107: iload_3
     108: invokevirtual #15                 // Method org/apache/commons/math3/linear/RealVector.getEntry:(I)D
     111: dmul
     112: dastore
     113: iinc          3, 1
     116: goto          93
     119: new           #19                 // class org/apache/commons/math3/linear/ArrayRealVector
     122: dup
     123: aload_2
     124: iconst_0
     125: invokespecial #30                 // Method "<init>":([DZ)V
     128: areturn

  public org.apache.commons.math3.linear.ArrayRealVector ebeDivide(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_1
       1: instanceof    #19                 // class org/apache/commons/math3/linear/ArrayRealVector
       4: ifeq          75
       7: aload_1
       8: checkcast     #19                 // class org/apache/commons/math3/linear/ArrayRealVector
      11: getfield      #2                  // Field data:[D
      14: astore_2
      15: aload_2
      16: arraylength
      17: istore_3
      18: aload_0
      19: iload_3
      20: invokevirtual #20                 // Method checkVectorDimensions:(I)V
      23: new           #19                 // class org/apache/commons/math3/linear/ArrayRealVector
      26: dup
      27: iload_3
      28: invokespecial #21                 // Method "<init>":(I)V
      31: astore        4
      33: aload         4
      35: getfield      #2                  // Field data:[D
      38: astore        5
      40: iconst_0
      41: istore        6
      43: iload         6
      45: iload_3
      46: if_icmpge     72
      49: aload         5
      51: iload         6
      53: aload_0
      54: getfield      #2                  // Field data:[D
      57: iload         6
      59: daload
      60: aload_2
      61: iload         6
      63: daload
      64: ddiv
      65: dastore
      66: iinc          6, 1
      69: goto          43
      72: aload         4
      74: areturn
      75: aload_0
      76: aload_1
      77: invokevirtual #22                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/RealVector;)V
      80: aload_0
      81: getfield      #2                  // Field data:[D
      84: invokevirtual #36                 // Method "[D".clone:()Ljava/lang/Object;
      87: checkcast     #5                  // class "[D"
      90: astore_2
      91: iconst_0
      92: istore_3
      93: iload_3
      94: aload_0
      95: getfield      #2                  // Field data:[D
      98: arraylength
      99: if_icmpge     119
     102: aload_2
     103: iload_3
     104: dup2
     105: daload
     106: aload_1
     107: iload_3
     108: invokevirtual #15                 // Method org/apache/commons/math3/linear/RealVector.getEntry:(I)D
     111: ddiv
     112: dastore
     113: iinc          3, 1
     116: goto          93
     119: new           #19                 // class org/apache/commons/math3/linear/ArrayRealVector
     122: dup
     123: aload_2
     124: iconst_0
     125: invokespecial #30                 // Method "<init>":([DZ)V
     128: areturn

  public double[] getDataRef();
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[D
       4: areturn

  public double dotProduct(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_1
       1: instanceof    #19                 // class org/apache/commons/math3/linear/ArrayRealVector
       4: ifeq          59
       7: aload_1
       8: checkcast     #19                 // class org/apache/commons/math3/linear/ArrayRealVector
      11: getfield      #2                  // Field data:[D
      14: astore_2
      15: aload_0
      16: aload_2
      17: arraylength
      18: invokevirtual #20                 // Method checkVectorDimensions:(I)V
      21: dconst_0
      22: dstore_3
      23: iconst_0
      24: istore        5
      26: iload         5
      28: aload_0
      29: getfield      #2                  // Field data:[D
      32: arraylength
      33: if_icmpge     57
      36: dload_3
      37: aload_0
      38: getfield      #2                  // Field data:[D
      41: iload         5
      43: daload
      44: aload_2
      45: iload         5
      47: daload
      48: dmul
      49: dadd
      50: dstore_3
      51: iinc          5, 1
      54: goto          26
      57: dload_3
      58: dreturn
      59: aload_0
      60: aload_1
      61: invokespecial #37                 // Method org/apache/commons/math3/linear/RealVector.dotProduct:(Lorg/apache/commons/math3/linear/RealVector;)D
      64: dreturn

  public double getNorm();
    Code:
       0: dconst_0
       1: dstore_1
       2: aload_0
       3: getfield      #2                  // Field data:[D
       6: astore_3
       7: aload_3
       8: arraylength
       9: istore        4
      11: iconst_0
      12: istore        5
      14: iload         5
      16: iload         4
      18: if_icmpge     41
      21: aload_3
      22: iload         5
      24: daload
      25: dstore        6
      27: dload_1
      28: dload         6
      30: dload         6
      32: dmul
      33: dadd
      34: dstore_1
      35: iinc          5, 1
      38: goto          14
      41: dload_1
      42: invokestatic  #38                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      45: dreturn

  public double getL1Norm();
    Code:
       0: dconst_0
       1: dstore_1
       2: aload_0
       3: getfield      #2                  // Field data:[D
       6: astore_3
       7: aload_3
       8: arraylength
       9: istore        4
      11: iconst_0
      12: istore        5
      14: iload         5
      16: iload         4
      18: if_icmpge     41
      21: aload_3
      22: iload         5
      24: daload
      25: dstore        6
      27: dload_1
      28: dload         6
      30: invokestatic  #39                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      33: dadd
      34: dstore_1
      35: iinc          5, 1
      38: goto          14
      41: dload_1
      42: dreturn

  public double getLInfNorm();
    Code:
       0: dconst_0
       1: dstore_1
       2: aload_0
       3: getfield      #2                  // Field data:[D
       6: astore_3
       7: aload_3
       8: arraylength
       9: istore        4
      11: iconst_0
      12: istore        5
      14: iload         5
      16: iload         4
      18: if_icmpge     43
      21: aload_3
      22: iload         5
      24: daload
      25: dstore        6
      27: dload_1
      28: dload         6
      30: invokestatic  #39                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      33: invokestatic  #40                 // Method org/apache/commons/math3/util/FastMath.max:(DD)D
      36: dstore_1
      37: iinc          5, 1
      40: goto          14
      43: dload_1
      44: dreturn

  public double getDistance(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_1
       1: instanceof    #19                 // class org/apache/commons/math3/linear/ArrayRealVector
       4: ifeq          69
       7: aload_1
       8: checkcast     #19                 // class org/apache/commons/math3/linear/ArrayRealVector
      11: getfield      #2                  // Field data:[D
      14: astore_2
      15: aload_0
      16: aload_2
      17: arraylength
      18: invokevirtual #20                 // Method checkVectorDimensions:(I)V
      21: dconst_0
      22: dstore_3
      23: iconst_0
      24: istore        5
      26: iload         5
      28: aload_0
      29: getfield      #2                  // Field data:[D
      32: arraylength
      33: if_icmpge     64
      36: aload_0
      37: getfield      #2                  // Field data:[D
      40: iload         5
      42: daload
      43: aload_2
      44: iload         5
      46: daload
      47: dsub
      48: dstore        6
      50: dload_3
      51: dload         6
      53: dload         6
      55: dmul
      56: dadd
      57: dstore_3
      58: iinc          5, 1
      61: goto          26
      64: dload_3
      65: invokestatic  #38                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
      68: dreturn
      69: aload_0
      70: aload_1
      71: invokevirtual #22                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/RealVector;)V
      74: dconst_0
      75: dstore_2
      76: iconst_0
      77: istore        4
      79: iload         4
      81: aload_0
      82: getfield      #2                  // Field data:[D
      85: arraylength
      86: if_icmpge     119
      89: aload_0
      90: getfield      #2                  // Field data:[D
      93: iload         4
      95: daload
      96: aload_1
      97: iload         4
      99: invokevirtual #15                 // Method org/apache/commons/math3/linear/RealVector.getEntry:(I)D
     102: dsub
     103: dstore        5
     105: dload_2
     106: dload         5
     108: dload         5
     110: dmul
     111: dadd
     112: dstore_2
     113: iinc          4, 1
     116: goto          79
     119: dload_2
     120: invokestatic  #38                 // Method org/apache/commons/math3/util/FastMath.sqrt:(D)D
     123: dreturn

  public double getL1Distance(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_1
       1: instanceof    #19                 // class org/apache/commons/math3/linear/ArrayRealVector
       4: ifeq          66
       7: aload_1
       8: checkcast     #19                 // class org/apache/commons/math3/linear/ArrayRealVector
      11: getfield      #2                  // Field data:[D
      14: astore_2
      15: aload_0
      16: aload_2
      17: arraylength
      18: invokevirtual #20                 // Method checkVectorDimensions:(I)V
      21: dconst_0
      22: dstore_3
      23: iconst_0
      24: istore        5
      26: iload         5
      28: aload_0
      29: getfield      #2                  // Field data:[D
      32: arraylength
      33: if_icmpge     64
      36: aload_0
      37: getfield      #2                  // Field data:[D
      40: iload         5
      42: daload
      43: aload_2
      44: iload         5
      46: daload
      47: dsub
      48: dstore        6
      50: dload_3
      51: dload         6
      53: invokestatic  #39                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      56: dadd
      57: dstore_3
      58: iinc          5, 1
      61: goto          26
      64: dload_3
      65: dreturn
      66: aload_0
      67: aload_1
      68: invokevirtual #22                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/RealVector;)V
      71: dconst_0
      72: dstore_2
      73: iconst_0
      74: istore        4
      76: iload         4
      78: aload_0
      79: getfield      #2                  // Field data:[D
      82: arraylength
      83: if_icmpge     116
      86: aload_0
      87: getfield      #2                  // Field data:[D
      90: iload         4
      92: daload
      93: aload_1
      94: iload         4
      96: invokevirtual #15                 // Method org/apache/commons/math3/linear/RealVector.getEntry:(I)D
      99: dsub
     100: dstore        5
     102: dload_2
     103: dload         5
     105: invokestatic  #39                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
     108: dadd
     109: dstore_2
     110: iinc          4, 1
     113: goto          76
     116: dload_2
     117: dreturn

  public double getLInfDistance(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_1
       1: instanceof    #19                 // class org/apache/commons/math3/linear/ArrayRealVector
       4: ifeq          68
       7: aload_1
       8: checkcast     #19                 // class org/apache/commons/math3/linear/ArrayRealVector
      11: getfield      #2                  // Field data:[D
      14: astore_2
      15: aload_0
      16: aload_2
      17: arraylength
      18: invokevirtual #20                 // Method checkVectorDimensions:(I)V
      21: dconst_0
      22: dstore_3
      23: iconst_0
      24: istore        5
      26: iload         5
      28: aload_0
      29: getfield      #2                  // Field data:[D
      32: arraylength
      33: if_icmpge     66
      36: aload_0
      37: getfield      #2                  // Field data:[D
      40: iload         5
      42: daload
      43: aload_2
      44: iload         5
      46: daload
      47: dsub
      48: dstore        6
      50: dload_3
      51: dload         6
      53: invokestatic  #39                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
      56: invokestatic  #40                 // Method org/apache/commons/math3/util/FastMath.max:(DD)D
      59: dstore_3
      60: iinc          5, 1
      63: goto          26
      66: dload_3
      67: dreturn
      68: aload_0
      69: aload_1
      70: invokevirtual #22                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/RealVector;)V
      73: dconst_0
      74: dstore_2
      75: iconst_0
      76: istore        4
      78: iload         4
      80: aload_0
      81: getfield      #2                  // Field data:[D
      84: arraylength
      85: if_icmpge     120
      88: aload_0
      89: getfield      #2                  // Field data:[D
      92: iload         4
      94: daload
      95: aload_1
      96: iload         4
      98: invokevirtual #15                 // Method org/apache/commons/math3/linear/RealVector.getEntry:(I)D
     101: dsub
     102: dstore        5
     104: dload_2
     105: dload         5
     107: invokestatic  #39                 // Method org/apache/commons/math3/util/FastMath.abs:(D)D
     110: invokestatic  #40                 // Method org/apache/commons/math3/util/FastMath.max:(DD)D
     113: dstore_2
     114: iinc          4, 1
     117: goto          78
     120: dload_2
     121: dreturn

  public org.apache.commons.math3.linear.RealMatrix outerProduct(org.apache.commons.math3.linear.RealVector);
    Code:
       0: aload_1
       1: instanceof    #19                 // class org/apache/commons/math3/linear/ArrayRealVector
       4: ifeq          90
       7: aload_1
       8: checkcast     #19                 // class org/apache/commons/math3/linear/ArrayRealVector
      11: getfield      #2                  // Field data:[D
      14: astore_2
      15: aload_0
      16: getfield      #2                  // Field data:[D
      19: arraylength
      20: istore_3
      21: aload_2
      22: arraylength
      23: istore        4
      25: iload_3
      26: iload         4
      28: invokestatic  #41                 // Method org/apache/commons/math3/linear/MatrixUtils.createRealMatrix:(II)Lorg/apache/commons/math3/linear/RealMatrix;
      31: astore        5
      33: iconst_0
      34: istore        6
      36: iload         6
      38: iload_3
      39: if_icmpge     87
      42: iconst_0
      43: istore        7
      45: iload         7
      47: iload         4
      49: if_icmpge     81
      52: aload         5
      54: iload         6
      56: iload         7
      58: aload_0
      59: getfield      #2                  // Field data:[D
      62: iload         6
      64: daload
      65: aload_2
      66: iload         7
      68: daload
      69: dmul
      70: invokeinterface #42,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.setEntry:(IID)V
      75: iinc          7, 1
      78: goto          45
      81: iinc          6, 1
      84: goto          36
      87: aload         5
      89: areturn
      90: aload_0
      91: getfield      #2                  // Field data:[D
      94: arraylength
      95: istore_2
      96: aload_1
      97: invokevirtual #14                 // Method org/apache/commons/math3/linear/RealVector.getDimension:()I
     100: istore_3
     101: iload_2
     102: iload_3
     103: invokestatic  #41                 // Method org/apache/commons/math3/linear/MatrixUtils.createRealMatrix:(II)Lorg/apache/commons/math3/linear/RealMatrix;
     106: astore        4
     108: iconst_0
     109: istore        5
     111: iload         5
     113: iload_2
     114: if_icmpge     163
     117: iconst_0
     118: istore        6
     120: iload         6
     122: iload_3
     123: if_icmpge     157
     126: aload         4
     128: iload         5
     130: iload         6
     132: aload_0
     133: getfield      #2                  // Field data:[D
     136: iload         5
     138: daload
     139: aload_1
     140: iload         6
     142: invokevirtual #15                 // Method org/apache/commons/math3/linear/RealVector.getEntry:(I)D
     145: dmul
     146: invokeinterface #42,  5           // InterfaceMethod org/apache/commons/math3/linear/RealMatrix.setEntry:(IID)V
     151: iinc          6, 1
     154: goto          120
     157: iinc          5, 1
     160: goto          111
     163: aload         4
     165: areturn

  public double getEntry(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[D
       4: iload_1
       5: daload
       6: dreturn
       7: astore_2
       8: new           #44                 // class org/apache/commons/math3/exception/OutOfRangeException
      11: dup
      12: getstatic     #45                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INDEX:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      15: iload_1
      16: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: iconst_0
      20: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: aload_0
      24: invokevirtual #18                 // Method getDimension:()I
      27: iconst_1
      28: isub
      29: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: invokespecial #46                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      35: athrow
    Exception table:
       from    to  target type
           0     6     7   Class java/lang/IndexOutOfBoundsException

  public int getDimension();
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[D
       4: arraylength
       5: ireturn

  public org.apache.commons.math3.linear.RealVector append(org.apache.commons.math3.linear.RealVector);
    Code:
       0: new           #19                 // class org/apache/commons/math3/linear/ArrayRealVector
       3: dup
       4: aload_0
       5: aload_1
       6: checkcast     #19                 // class org/apache/commons/math3/linear/ArrayRealVector
       9: invokespecial #47                 // Method "<init>":(Lorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;)V
      12: areturn
      13: astore_2
      14: new           #19                 // class org/apache/commons/math3/linear/ArrayRealVector
      17: dup
      18: aload_0
      19: aload_1
      20: invokespecial #49                 // Method "<init>":(Lorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/RealVector;)V
      23: areturn
    Exception table:
       from    to  target type
           0    12    13   Class java/lang/ClassCastException

  public org.apache.commons.math3.linear.ArrayRealVector append(org.apache.commons.math3.linear.ArrayRealVector);
    Code:
       0: new           #19                 // class org/apache/commons/math3/linear/ArrayRealVector
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #47                 // Method "<init>":(Lorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;)V
       9: areturn

  public org.apache.commons.math3.linear.RealVector append(double);
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[D
       4: arraylength
       5: iconst_1
       6: iadd
       7: newarray       double
       9: astore_3
      10: aload_0
      11: getfield      #2                  // Field data:[D
      14: iconst_0
      15: aload_3
      16: iconst_0
      17: aload_0
      18: getfield      #2                  // Field data:[D
      21: arraylength
      22: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      25: aload_3
      26: aload_0
      27: getfield      #2                  // Field data:[D
      30: arraylength
      31: dload_1
      32: dastore
      33: new           #19                 // class org/apache/commons/math3/linear/ArrayRealVector
      36: dup
      37: aload_3
      38: iconst_0
      39: invokespecial #30                 // Method "<init>":([DZ)V
      42: areturn

  public org.apache.commons.math3.linear.RealVector getSubVector(int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NotPositiveException;
    Code:
       0: iload_2
       1: ifge          19
       4: new           #50                 // class org/apache/commons/math3/exception/NotPositiveException
       7: dup
       8: getstatic     #51                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.NUMBER_OF_ELEMENTS_SHOULD_BE_POSITIVE:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      11: iload_2
      12: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokespecial #52                 // Method org/apache/commons/math3/exception/NotPositiveException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V
      18: athrow
      19: new           #19                 // class org/apache/commons/math3/linear/ArrayRealVector
      22: dup
      23: iload_2
      24: invokespecial #21                 // Method "<init>":(I)V
      27: astore_3
      28: aload_0
      29: getfield      #2                  // Field data:[D
      32: iload_1
      33: aload_3
      34: getfield      #2                  // Field data:[D
      37: iconst_0
      38: iload_2
      39: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      42: goto          61
      45: astore        4
      47: aload_0
      48: iload_1
      49: invokevirtual #53                 // Method checkIndex:(I)V
      52: aload_0
      53: iload_1
      54: iload_2
      55: iadd
      56: iconst_1
      57: isub
      58: invokevirtual #53                 // Method checkIndex:(I)V
      61: aload_3
      62: areturn
    Exception table:
       from    to  target type
          28    42    45   Class java/lang/IndexOutOfBoundsException

  public void setEntry(int, double) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[D
       4: iload_1
       5: dload_2
       6: dastore
       7: goto          17
      10: astore        4
      12: aload_0
      13: iload_1
      14: invokevirtual #53                 // Method checkIndex:(I)V
      17: return
    Exception table:
       from    to  target type
           0     7    10   Class java/lang/IndexOutOfBoundsException

  public void addToEntry(int, double) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[D
       4: iload_1
       5: dup2
       6: daload
       7: dload_2
       8: dadd
       9: dastore
      10: goto          44
      13: astore        4
      15: new           #44                 // class org/apache/commons/math3/exception/OutOfRangeException
      18: dup
      19: getstatic     #45                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INDEX:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      22: iload_1
      23: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: iconst_0
      27: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      30: aload_0
      31: getfield      #2                  // Field data:[D
      34: arraylength
      35: iconst_1
      36: isub
      37: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      40: invokespecial #46                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      43: athrow
      44: return
    Exception table:
       from    to  target type
           0    10    13   Class java/lang/IndexOutOfBoundsException

  public void setSubVector(int, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_2
       1: instanceof    #19                 // class org/apache/commons/math3/linear/ArrayRealVector
       4: ifeq          22
       7: aload_0
       8: iload_1
       9: aload_2
      10: checkcast     #19                 // class org/apache/commons/math3/linear/ArrayRealVector
      13: getfield      #2                  // Field data:[D
      16: invokevirtual #54                 // Method setSubVector:(I[D)V
      19: goto          74
      22: iload_1
      23: istore_3
      24: iload_3
      25: iload_1
      26: aload_2
      27: invokevirtual #14                 // Method org/apache/commons/math3/linear/RealVector.getDimension:()I
      30: iadd
      31: if_icmpge     53
      34: aload_0
      35: getfield      #2                  // Field data:[D
      38: iload_3
      39: aload_2
      40: iload_3
      41: iload_1
      42: isub
      43: invokevirtual #15                 // Method org/apache/commons/math3/linear/RealVector.getEntry:(I)D
      46: dastore
      47: iinc          3, 1
      50: goto          24
      53: goto          74
      56: astore_3
      57: aload_0
      58: iload_1
      59: invokevirtual #53                 // Method checkIndex:(I)V
      62: aload_0
      63: iload_1
      64: aload_2
      65: invokevirtual #14                 // Method org/apache/commons/math3/linear/RealVector.getDimension:()I
      68: iadd
      69: iconst_1
      70: isub
      71: invokevirtual #53                 // Method checkIndex:(I)V
      74: return
    Exception table:
       from    to  target type
          22    53    56   Class java/lang/IndexOutOfBoundsException

  public void setSubVector(int, double[]) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_2
       1: iconst_0
       2: aload_0
       3: getfield      #2                  // Field data:[D
       6: iload_1
       7: aload_2
       8: arraylength
       9: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      12: goto          31
      15: astore_3
      16: aload_0
      17: iload_1
      18: invokevirtual #53                 // Method checkIndex:(I)V
      21: aload_0
      22: iload_1
      23: aload_2
      24: arraylength
      25: iadd
      26: iconst_1
      27: isub
      28: invokevirtual #53                 // Method checkIndex:(I)V
      31: return
    Exception table:
       from    to  target type
           0    12    15   Class java/lang/IndexOutOfBoundsException

  public void set(double);
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[D
       4: dload_1
       5: invokestatic  #3                  // Method java/util/Arrays.fill:([DD)V
       8: return

  public double[] toArray();
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[D
       4: invokevirtual #55                 // Method "[D".clone:()Ljava/lang/Object;
       7: checkcast     #5                  // class "[D"
      10: areturn

  public java.lang.String toString();
    Code:
       0: getstatic     #56                 // Field DEFAULT_FORMAT:Lorg/apache/commons/math3/linear/RealVectorFormat;
       3: aload_0
       4: invokevirtual #57                 // Method org/apache/commons/math3/linear/RealVectorFormat.format:(Lorg/apache/commons/math3/linear/RealVector;)Ljava/lang/String;
       7: areturn

  protected void checkVectorDimensions(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method org/apache/commons/math3/linear/RealVector.getDimension:()I
       5: invokevirtual #20                 // Method checkVectorDimensions:(I)V
       8: return

  protected void checkVectorDimensions(int) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[D
       4: arraylength
       5: iload_1
       6: if_icmpeq     23
       9: new           #58                 // class org/apache/commons/math3/exception/DimensionMismatchException
      12: dup
      13: aload_0
      14: getfield      #2                  // Field data:[D
      17: arraylength
      18: iload_1
      19: invokespecial #59                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      22: athrow
      23: return

  public boolean isNaN();
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[D
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     36
      15: aload_1
      16: iload_3
      17: daload
      18: dstore        4
      20: dload         4
      22: invokestatic  #60                 // Method java/lang/Double.isNaN:(D)Z
      25: ifeq          30
      28: iconst_1
      29: ireturn
      30: iinc          3, 1
      33: goto          10
      36: iconst_0
      37: ireturn

  public boolean isInfinite();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method isNaN:()Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #2                  // Field data:[D
      13: astore_1
      14: aload_1
      15: arraylength
      16: istore_2
      17: iconst_0
      18: istore_3
      19: iload_3
      20: iload_2
      21: if_icmpge     45
      24: aload_1
      25: iload_3
      26: daload
      27: dstore        4
      29: dload         4
      31: invokestatic  #62                 // Method java/lang/Double.isInfinite:(D)Z
      34: ifeq          39
      37: iconst_1
      38: ireturn
      39: iinc          3, 1
      42: goto          19
      45: iconst_0
      46: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #63                 // class org/apache/commons/math3/linear/RealVector
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #63                 // class org/apache/commons/math3/linear/RealVector
      20: astore_2
      21: aload_0
      22: getfield      #2                  // Field data:[D
      25: arraylength
      26: aload_2
      27: invokevirtual #14                 // Method org/apache/commons/math3/linear/RealVector.getDimension:()I
      30: if_icmpeq     35
      33: iconst_0
      34: ireturn
      35: aload_2
      36: invokevirtual #64                 // Method org/apache/commons/math3/linear/RealVector.isNaN:()Z
      39: ifeq          47
      42: aload_0
      43: invokevirtual #61                 // Method isNaN:()Z
      46: ireturn
      47: iconst_0
      48: istore_3
      49: iload_3
      50: aload_0
      51: getfield      #2                  // Field data:[D
      54: arraylength
      55: if_icmpge     81
      58: aload_0
      59: getfield      #2                  // Field data:[D
      62: iload_3
      63: daload
      64: aload_2
      65: iload_3
      66: invokevirtual #15                 // Method org/apache/commons/math3/linear/RealVector.getEntry:(I)D
      69: dcmpl
      70: ifeq          75
      73: iconst_0
      74: ireturn
      75: iinc          3, 1
      78: goto          49
      81: iconst_1
      82: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method isNaN:()Z
       4: ifeq          10
       7: bipush        9
       9: ireturn
      10: aload_0
      11: getfield      #2                  // Field data:[D
      14: invokestatic  #65                 // Method org/apache/commons/math3/util/MathUtils.hash:([D)I
      17: ireturn

  public org.apache.commons.math3.linear.ArrayRealVector combine(double, double, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method copy:()Lorg/apache/commons/math3/linear/ArrayRealVector;
       4: dload_1
       5: dload_3
       6: aload         5
       8: invokevirtual #66                 // Method combineToSelf:(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;
      11: areturn

  public org.apache.commons.math3.linear.ArrayRealVector combineToSelf(double, double, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload         5
       2: instanceof    #19                 // class org/apache/commons/math3/linear/ArrayRealVector
       5: ifeq          71
       8: aload         5
      10: checkcast     #19                 // class org/apache/commons/math3/linear/ArrayRealVector
      13: getfield      #2                  // Field data:[D
      16: astore        6
      18: aload_0
      19: aload         6
      21: arraylength
      22: invokevirtual #20                 // Method checkVectorDimensions:(I)V
      25: iconst_0
      26: istore        7
      28: iload         7
      30: aload_0
      31: getfield      #2                  // Field data:[D
      34: arraylength
      35: if_icmpge     68
      38: aload_0
      39: getfield      #2                  // Field data:[D
      42: iload         7
      44: dload_1
      45: aload_0
      46: getfield      #2                  // Field data:[D
      49: iload         7
      51: daload
      52: dmul
      53: dload_3
      54: aload         6
      56: iload         7
      58: daload
      59: dmul
      60: dadd
      61: dastore
      62: iinc          7, 1
      65: goto          28
      68: goto          122
      71: aload_0
      72: aload         5
      74: invokevirtual #22                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/RealVector;)V
      77: iconst_0
      78: istore        6
      80: iload         6
      82: aload_0
      83: getfield      #2                  // Field data:[D
      86: arraylength
      87: if_icmpge     122
      90: aload_0
      91: getfield      #2                  // Field data:[D
      94: iload         6
      96: dload_1
      97: aload_0
      98: getfield      #2                  // Field data:[D
     101: iload         6
     103: daload
     104: dmul
     105: dload_3
     106: aload         5
     108: iload         6
     110: invokevirtual #15                 // Method org/apache/commons/math3/linear/RealVector.getEntry:(I)D
     113: dmul
     114: dadd
     115: dastore
     116: iinc          6, 1
     119: goto          80
     122: aload_0
     123: areturn

  public double walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field data:[D
       5: arraylength
       6: iconst_0
       7: aload_0
       8: getfield      #2                  // Field data:[D
      11: arraylength
      12: iconst_1
      13: isub
      14: invokeinterface #67,  4           // InterfaceMethod org/apache/commons/math3/linear/RealVectorPreservingVisitor.start:(III)V
      19: iconst_0
      20: istore_2
      21: iload_2
      22: aload_0
      23: getfield      #2                  // Field data:[D
      26: arraylength
      27: if_icmpge     49
      30: aload_1
      31: iload_2
      32: aload_0
      33: getfield      #2                  // Field data:[D
      36: iload_2
      37: daload
      38: invokeinterface #68,  4           // InterfaceMethod org/apache/commons/math3/linear/RealVectorPreservingVisitor.visit:(ID)V
      43: iinc          2, 1
      46: goto          21
      49: aload_1
      50: invokeinterface #69,  1           // InterfaceMethod org/apache/commons/math3/linear/RealVectorPreservingVisitor.end:()D
      55: dreturn

  public double walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor, int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: invokevirtual #70                 // Method checkIndices:(II)V
       6: aload_1
       7: aload_0
       8: getfield      #2                  // Field data:[D
      11: arraylength
      12: iload_2
      13: iload_3
      14: invokeinterface #67,  4           // InterfaceMethod org/apache/commons/math3/linear/RealVectorPreservingVisitor.start:(III)V
      19: iload_2
      20: istore        4
      22: iload         4
      24: iload_3
      25: if_icmpgt     49
      28: aload_1
      29: iload         4
      31: aload_0
      32: getfield      #2                  // Field data:[D
      35: iload         4
      37: daload
      38: invokeinterface #68,  4           // InterfaceMethod org/apache/commons/math3/linear/RealVectorPreservingVisitor.visit:(ID)V
      43: iinc          4, 1
      46: goto          22
      49: aload_1
      50: invokeinterface #69,  1           // InterfaceMethod org/apache/commons/math3/linear/RealVectorPreservingVisitor.end:()D
      55: dreturn

  public double walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #71                 // Method walkInDefaultOrder:(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;)D
       5: dreturn

  public double walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor, int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #72                 // Method walkInDefaultOrder:(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;II)D
       7: dreturn

  public double walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field data:[D
       5: arraylength
       6: iconst_0
       7: aload_0
       8: getfield      #2                  // Field data:[D
      11: arraylength
      12: iconst_1
      13: isub
      14: invokeinterface #73,  4           // InterfaceMethod org/apache/commons/math3/linear/RealVectorChangingVisitor.start:(III)V
      19: iconst_0
      20: istore_2
      21: iload_2
      22: aload_0
      23: getfield      #2                  // Field data:[D
      26: arraylength
      27: if_icmpge     55
      30: aload_0
      31: getfield      #2                  // Field data:[D
      34: iload_2
      35: aload_1
      36: iload_2
      37: aload_0
      38: getfield      #2                  // Field data:[D
      41: iload_2
      42: daload
      43: invokeinterface #74,  4           // InterfaceMethod org/apache/commons/math3/linear/RealVectorChangingVisitor.visit:(ID)D
      48: dastore
      49: iinc          2, 1
      52: goto          21
      55: aload_1
      56: invokeinterface #75,  1           // InterfaceMethod org/apache/commons/math3/linear/RealVectorChangingVisitor.end:()D
      61: dreturn

  public double walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor, int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: invokevirtual #70                 // Method checkIndices:(II)V
       6: aload_1
       7: aload_0
       8: getfield      #2                  // Field data:[D
      11: arraylength
      12: iload_2
      13: iload_3
      14: invokeinterface #73,  4           // InterfaceMethod org/apache/commons/math3/linear/RealVectorChangingVisitor.start:(III)V
      19: iload_2
      20: istore        4
      22: iload         4
      24: iload_3
      25: if_icmpgt     56
      28: aload_0
      29: getfield      #2                  // Field data:[D
      32: iload         4
      34: aload_1
      35: iload         4
      37: aload_0
      38: getfield      #2                  // Field data:[D
      41: iload         4
      43: daload
      44: invokeinterface #74,  4           // InterfaceMethod org/apache/commons/math3/linear/RealVectorChangingVisitor.visit:(ID)D
      49: dastore
      50: iinc          4, 1
      53: goto          22
      56: aload_1
      57: invokeinterface #75,  1           // InterfaceMethod org/apache/commons/math3/linear/RealVectorChangingVisitor.end:()D
      62: dreturn

  public double walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #76                 // Method walkInDefaultOrder:(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;)D
       5: dreturn

  public double walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor, int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #77                 // Method walkInDefaultOrder:(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;II)D
       7: dreturn

  public org.apache.commons.math3.linear.RealVector combineToSelf(double, double, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: aload         5
       5: invokevirtual #66                 // Method combineToSelf:(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;
       8: areturn

  public org.apache.commons.math3.linear.RealVector combine(double, double, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: aload         5
       5: invokevirtual #78                 // Method combine:(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;
       8: areturn

  public org.apache.commons.math3.linear.RealVector mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #33                 // Method mapToSelf:(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/ArrayRealVector;
       5: areturn

  public org.apache.commons.math3.linear.RealVector map(org.apache.commons.math3.analysis.UnivariateFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #79                 // Method map:(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/ArrayRealVector;
       5: areturn

  public org.apache.commons.math3.linear.RealVector ebeMultiply(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #80                 // Method ebeMultiply:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;
       5: areturn

  public org.apache.commons.math3.linear.RealVector ebeDivide(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #81                 // Method ebeDivide:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;
       5: areturn

  public org.apache.commons.math3.linear.RealVector copy();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method copy:()Lorg/apache/commons/math3/linear/ArrayRealVector;
       4: areturn

  public org.apache.commons.math3.linear.RealVector subtract(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #82                 // Method subtract:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;
       5: areturn

  public org.apache.commons.math3.linear.RealVector add(org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #83                 // Method add:(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;
       5: areturn

  static {};
    Code:
       0: invokestatic  #84                 // Method org/apache/commons/math3/linear/RealVectorFormat.getInstance:()Lorg/apache/commons/math3/linear/RealVectorFormat;
       3: putstatic     #56                 // Field DEFAULT_FORMAT:Lorg/apache/commons/math3/linear/RealVectorFormat;
       6: return
}
