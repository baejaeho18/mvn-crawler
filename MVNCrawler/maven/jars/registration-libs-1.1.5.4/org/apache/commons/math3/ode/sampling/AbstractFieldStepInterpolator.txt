Compiled from "AbstractFieldStepInterpolator.java"
public abstract class org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator<T extends org.apache.commons.math3.RealFieldElement<T>> implements org.apache.commons.math3.ode.sampling.FieldStepInterpolator<T> {
  private final org.apache.commons.math3.ode.FieldODEStateAndDerivative<T> globalPreviousState;

  private final org.apache.commons.math3.ode.FieldODEStateAndDerivative<T> globalCurrentState;

  private final org.apache.commons.math3.ode.FieldODEStateAndDerivative<T> softPreviousState;

  private final org.apache.commons.math3.ode.FieldODEStateAndDerivative<T> softCurrentState;

  private final boolean forward;

  private org.apache.commons.math3.ode.FieldEquationsMapper<T> mapper;

  protected org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator(boolean, org.apache.commons.math3.ode.FieldODEStateAndDerivative<T>, org.apache.commons.math3.ode.FieldODEStateAndDerivative<T>, org.apache.commons.math3.ode.FieldODEStateAndDerivative<T>, org.apache.commons.math3.ode.FieldODEStateAndDerivative<T>, org.apache.commons.math3.ode.FieldEquationsMapper<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field forward:Z
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field globalPreviousState:Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field globalCurrentState:Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field softPreviousState:Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field softCurrentState:Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
      31: aload_0
      32: aload         6
      34: putfield      #7                  // Field mapper:Lorg/apache/commons/math3/ode/FieldEquationsMapper;
      37: return

  public org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator<T> restrictStep(org.apache.commons.math3.ode.FieldODEStateAndDerivative<T>, org.apache.commons.math3.ode.FieldODEStateAndDerivative<T>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field forward:Z
       5: aload_0
       6: getfield      #3                  // Field globalPreviousState:Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
       9: aload_0
      10: getfield      #4                  // Field globalCurrentState:Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
      13: aload_1
      14: aload_2
      15: aload_0
      16: getfield      #7                  // Field mapper:Lorg/apache/commons/math3/ode/FieldEquationsMapper;
      19: invokevirtual #8                  // Method create:(ZLorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/sampling/AbstractFieldStepInterpolator;
      22: areturn

  protected abstract org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator<T> create(boolean, org.apache.commons.math3.ode.FieldODEStateAndDerivative<T>, org.apache.commons.math3.ode.FieldODEStateAndDerivative<T>, org.apache.commons.math3.ode.FieldODEStateAndDerivative<T>, org.apache.commons.math3.ode.FieldODEStateAndDerivative<T>, org.apache.commons.math3.ode.FieldEquationsMapper<T>);

  public org.apache.commons.math3.ode.FieldODEStateAndDerivative<T> getGlobalPreviousState();
    Code:
       0: aload_0
       1: getfield      #3                  // Field globalPreviousState:Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
       4: areturn

  public org.apache.commons.math3.ode.FieldODEStateAndDerivative<T> getGlobalCurrentState();
    Code:
       0: aload_0
       1: getfield      #4                  // Field globalCurrentState:Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
       4: areturn

  public org.apache.commons.math3.ode.FieldODEStateAndDerivative<T> getPreviousState();
    Code:
       0: aload_0
       1: getfield      #5                  // Field softPreviousState:Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
       4: areturn

  public org.apache.commons.math3.ode.FieldODEStateAndDerivative<T> getCurrentState();
    Code:
       0: aload_0
       1: getfield      #6                  // Field softCurrentState:Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
       4: areturn

  public org.apache.commons.math3.ode.FieldODEStateAndDerivative<T> getInterpolatedState(T);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field globalPreviousState:Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
       5: invokevirtual #9                  // Method org/apache/commons/math3/ode/FieldODEStateAndDerivative.getTime:()Lorg/apache/commons/math3/RealFieldElement;
       8: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/math3/RealFieldElement.subtract:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #11                 // class org/apache/commons/math3/RealFieldElement
      16: astore_2
      17: aload_0
      18: getfield      #4                  // Field globalCurrentState:Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
      21: invokevirtual #9                  // Method org/apache/commons/math3/ode/FieldODEStateAndDerivative.getTime:()Lorg/apache/commons/math3/RealFieldElement;
      24: aload_1
      25: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/math3/RealFieldElement.subtract:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #11                 // class org/apache/commons/math3/RealFieldElement
      33: astore_3
      34: aload_2
      35: aload_0
      36: getfield      #4                  // Field globalCurrentState:Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
      39: invokevirtual #9                  // Method org/apache/commons/math3/ode/FieldODEStateAndDerivative.getTime:()Lorg/apache/commons/math3/RealFieldElement;
      42: aload_0
      43: getfield      #3                  // Field globalPreviousState:Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
      46: invokevirtual #9                  // Method org/apache/commons/math3/ode/FieldODEStateAndDerivative.getTime:()Lorg/apache/commons/math3/RealFieldElement;
      49: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/math3/RealFieldElement.subtract:(Ljava/lang/Object;)Ljava/lang/Object;
      54: invokeinterface #12,  2           // InterfaceMethod org/apache/commons/math3/RealFieldElement.divide:(Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #11                 // class org/apache/commons/math3/RealFieldElement
      62: astore        4
      64: aload_0
      65: aload_0
      66: getfield      #7                  // Field mapper:Lorg/apache/commons/math3/ode/FieldEquationsMapper;
      69: aload_1
      70: aload         4
      72: aload_2
      73: aload_3
      74: invokevirtual #13                 // Method computeInterpolatedStateAndDerivatives:(Lorg/apache/commons/math3/ode/FieldEquationsMapper;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
      77: areturn

  public boolean isForward();
    Code:
       0: aload_0
       1: getfield      #2                  // Field forward:Z
       4: ireturn

  protected abstract org.apache.commons.math3.ode.FieldODEStateAndDerivative<T> computeInterpolatedStateAndDerivatives(org.apache.commons.math3.ode.FieldEquationsMapper<T>, T, T, T, T) throws org.apache.commons.math3.exception.MaxCountExceededException;
}
