Compiled from "UnivariateOptimizer.java"
public abstract class org.apache.commons.math3.optim.univariate.UnivariateOptimizer extends org.apache.commons.math3.optim.BaseOptimizer<org.apache.commons.math3.optim.univariate.UnivariatePointValuePair> {
  private org.apache.commons.math3.analysis.UnivariateFunction function;

  private org.apache.commons.math3.optim.nonlinear.scalar.GoalType goal;

  private double start;

  private double min;

  private double max;

  protected org.apache.commons.math3.optim.univariate.UnivariateOptimizer(org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.univariate.UnivariatePointValuePair>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/commons/math3/optim/BaseOptimizer."<init>":(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
       5: return

  public org.apache.commons.math3.optim.univariate.UnivariatePointValuePair optimize(org.apache.commons.math3.optim.OptimizationData...) throws org.apache.commons.math3.exception.TooManyEvaluationsException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/apache/commons/math3/optim/BaseOptimizer.optimize:([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;
       5: checkcast     #3                  // class org/apache/commons/math3/optim/univariate/UnivariatePointValuePair
       8: areturn

  public org.apache.commons.math3.optim.nonlinear.scalar.GoalType getGoalType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field goal:Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;
       4: areturn

  protected void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/apache/commons/math3/optim/BaseOptimizer.parseOptimizationData:([Lorg/apache/commons/math3/optim/OptimizationData;)V
       5: aload_1
       6: astore_2
       7: aload_2
       8: arraylength
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_3
      16: if_icmpge     119
      19: aload_2
      20: iload         4
      22: aaload
      23: astore        5
      25: aload         5
      27: instanceof    #6                  // class org/apache/commons/math3/optim/univariate/SearchInterval
      30: ifeq          70
      33: aload         5
      35: checkcast     #6                  // class org/apache/commons/math3/optim/univariate/SearchInterval
      38: astore        6
      40: aload_0
      41: aload         6
      43: invokevirtual #7                  // Method org/apache/commons/math3/optim/univariate/SearchInterval.getMin:()D
      46: putfield      #8                  // Field min:D
      49: aload_0
      50: aload         6
      52: invokevirtual #9                  // Method org/apache/commons/math3/optim/univariate/SearchInterval.getMax:()D
      55: putfield      #10                 // Field max:D
      58: aload_0
      59: aload         6
      61: invokevirtual #11                 // Method org/apache/commons/math3/optim/univariate/SearchInterval.getStartValue:()D
      64: putfield      #12                 // Field start:D
      67: goto          113
      70: aload         5
      72: instanceof    #13                 // class org/apache/commons/math3/optim/univariate/UnivariateObjectiveFunction
      75: ifeq          93
      78: aload_0
      79: aload         5
      81: checkcast     #13                 // class org/apache/commons/math3/optim/univariate/UnivariateObjectiveFunction
      84: invokevirtual #14                 // Method org/apache/commons/math3/optim/univariate/UnivariateObjectiveFunction.getObjectiveFunction:()Lorg/apache/commons/math3/analysis/UnivariateFunction;
      87: putfield      #15                 // Field function:Lorg/apache/commons/math3/analysis/UnivariateFunction;
      90: goto          113
      93: aload         5
      95: instanceof    #16                 // class org/apache/commons/math3/optim/nonlinear/scalar/GoalType
      98: ifeq          113
     101: aload_0
     102: aload         5
     104: checkcast     #16                 // class org/apache/commons/math3/optim/nonlinear/scalar/GoalType
     107: putfield      #4                  // Field goal:Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;
     110: goto          113
     113: iinc          4, 1
     116: goto          13
     119: return

  public double getStartValue();
    Code:
       0: aload_0
       1: getfield      #12                 // Field start:D
       4: dreturn

  public double getMin();
    Code:
       0: aload_0
       1: getfield      #8                  // Field min:D
       4: dreturn

  public double getMax();
    Code:
       0: aload_0
       1: getfield      #10                 // Field max:D
       4: dreturn

  protected double computeObjectiveValue(double);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method org/apache/commons/math3/optim/BaseOptimizer.incrementEvaluationCount:()V
       4: aload_0
       5: getfield      #15                 // Field function:Lorg/apache/commons/math3/analysis/UnivariateFunction;
       8: dload_1
       9: invokeinterface #18,  3           // InterfaceMethod org/apache/commons/math3/analysis/UnivariateFunction.value:(D)D
      14: dreturn

  public java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[]) throws org.apache.commons.math3.exception.TooManyEvaluationsException, org.apache.commons.math3.exception.TooManyIterationsException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method optimize:([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;
       5: areturn
}
