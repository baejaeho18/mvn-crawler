Compiled from "ArrayFieldVector.java"
public class org.apache.commons.math3.linear.ArrayFieldVector<T extends org.apache.commons.math3.FieldElement<T>> implements org.apache.commons.math3.linear.FieldVector<T>, java.io.Serializable {
  private static final long serialVersionUID;

  private T[] data;

  private final org.apache.commons.math3.Field<T> field;

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.Field<T>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Lorg/apache/commons/math3/Field;I)V
       6: return

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.Field<T>, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
       9: aload_0
      10: aload_1
      11: iload_2
      12: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      15: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      18: putfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      21: return

  public org.apache.commons.math3.linear.ArrayFieldVector(int, T);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #7,  1            // InterfaceMethod org/apache/commons/math3/FieldElement.getField:()Lorg/apache/commons/math3/Field;
       7: iload_1
       8: invokespecial #1                  // Method "<init>":(Lorg/apache/commons/math3/Field;I)V
      11: aload_0
      12: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      15: aload_2
      16: invokestatic  #8                  // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
      19: return

  public org.apache.commons.math3.linear.ArrayFieldVector(T[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.ZeroException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #9                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       8: aload_0
       9: aload_1
      10: iconst_0
      11: aaload
      12: invokeinterface #7,  1            // InterfaceMethod org/apache/commons/math3/FieldElement.getField:()Lorg/apache/commons/math3/Field;
      17: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      20: aload_0
      21: aload_1
      22: invokevirtual #10                 // Method "[Lorg/apache/commons/math3/FieldElement;".clone:()Ljava/lang/Object;
      25: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      28: putfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      31: goto          50
      34: astore_2
      35: new           #12                 // class org/apache/commons/math3/exception/ZeroException
      38: dup
      39: getstatic     #13                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      42: iconst_0
      43: anewarray     #14                 // class java/lang/Object
      46: invokespecial #15                 // Method org/apache/commons/math3/exception/ZeroException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      49: athrow
      50: return
    Exception table:
       from    to  target type
           8    31    34   Class java/lang/ArrayIndexOutOfBoundsException

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.Field<T>, T[]) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_2
       5: invokestatic  #9                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       8: aload_0
       9: aload_1
      10: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      13: aload_0
      14: aload_2
      15: invokevirtual #16                 // Method "[Lorg/apache/commons/math3/FieldElement;".clone:()Ljava/lang/Object;
      18: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      21: putfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      24: return

  public org.apache.commons.math3.linear.ArrayFieldVector(T[], boolean) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.ZeroException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #9                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       8: aload_1
       9: arraylength
      10: ifne          28
      13: new           #12                 // class org/apache/commons/math3/exception/ZeroException
      16: dup
      17: getstatic     #13                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      20: iconst_0
      21: anewarray     #14                 // class java/lang/Object
      24: invokespecial #15                 // Method org/apache/commons/math3/exception/ZeroException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      27: athrow
      28: aload_0
      29: aload_1
      30: iconst_0
      31: aaload
      32: invokeinterface #7,  1            // InterfaceMethod org/apache/commons/math3/FieldElement.getField:()Lorg/apache/commons/math3/Field;
      37: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      40: aload_0
      41: iload_2
      42: ifeq          55
      45: aload_1
      46: invokevirtual #17                 // Method "[Lorg/apache/commons/math3/FieldElement;".clone:()Ljava/lang/Object;
      49: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      52: goto          56
      55: aload_1
      56: putfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      59: return

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.Field<T>, T[], boolean) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_2
       5: invokestatic  #9                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       8: aload_0
       9: aload_1
      10: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      13: aload_0
      14: iload_3
      15: ifeq          28
      18: aload_2
      19: invokevirtual #18                 // Method "[Lorg/apache/commons/math3/FieldElement;".clone:()Ljava/lang/Object;
      22: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      25: goto          29
      28: aload_2
      29: putfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      32: return

  public org.apache.commons.math3.linear.ArrayFieldVector(T[], int, int) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #9                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       8: aload_1
       9: arraylength
      10: iload_2
      11: iload_3
      12: iadd
      13: if_icmpge     36
      16: new           #19                 // class org/apache/commons/math3/exception/NumberIsTooLargeException
      19: dup
      20: iload_2
      21: iload_3
      22: iadd
      23: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: aload_1
      27: arraylength
      28: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      31: iconst_1
      32: invokespecial #21                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
      35: athrow
      36: aload_0
      37: aload_1
      38: iconst_0
      39: aaload
      40: invokeinterface #7,  1            // InterfaceMethod org/apache/commons/math3/FieldElement.getField:()Lorg/apache/commons/math3/Field;
      45: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      48: aload_0
      49: aload_0
      50: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      53: iload_3
      54: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      57: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      60: putfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      63: aload_1
      64: iload_2
      65: aload_0
      66: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      69: iconst_0
      70: iload_3
      71: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      74: return

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.Field<T>, T[], int, int) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NumberIsTooLargeException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_2
       5: invokestatic  #9                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       8: aload_2
       9: arraylength
      10: iload_3
      11: iload         4
      13: iadd
      14: if_icmpge     38
      17: new           #19                 // class org/apache/commons/math3/exception/NumberIsTooLargeException
      20: dup
      21: iload_3
      22: iload         4
      24: iadd
      25: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: aload_2
      29: arraylength
      30: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: iconst_1
      34: invokespecial #21                 // Method org/apache/commons/math3/exception/NumberIsTooLargeException."<init>":(Ljava/lang/Number;Ljava/lang/Number;Z)V
      37: athrow
      38: aload_0
      39: aload_1
      40: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      43: aload_0
      44: aload_1
      45: iload         4
      47: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      50: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      53: putfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      56: aload_2
      57: iload_3
      58: aload_0
      59: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      62: iconst_0
      63: iload         4
      65: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      68: return

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.linear.FieldVector<T>) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #9                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       8: aload_0
       9: aload_1
      10: invokeinterface #23,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getField:()Lorg/apache/commons/math3/Field;
      15: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      18: aload_0
      19: aload_0
      20: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      23: aload_1
      24: invokeinterface #24,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getDimension:()I
      29: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      32: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      35: putfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      38: iconst_0
      39: istore_2
      40: iload_2
      41: aload_0
      42: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      45: arraylength
      46: if_icmpge     68
      49: aload_0
      50: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      53: iload_2
      54: aload_1
      55: iload_2
      56: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getEntry:(I)Lorg/apache/commons/math3/FieldElement;
      61: aastore
      62: iinc          2, 1
      65: goto          40
      68: return

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.linear.ArrayFieldVector<T>) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #9                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       8: aload_0
       9: aload_1
      10: invokevirtual #26                 // Method getField:()Lorg/apache/commons/math3/Field;
      13: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      16: aload_0
      17: aload_1
      18: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      21: invokevirtual #27                 // Method "[Lorg/apache/commons/math3/FieldElement;".clone:()Ljava/lang/Object;
      24: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      27: putfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      30: return

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.linear.ArrayFieldVector<T>, boolean) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #9                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       8: aload_0
       9: aload_1
      10: invokevirtual #26                 // Method getField:()Lorg/apache/commons/math3/Field;
      13: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      16: aload_0
      17: iload_2
      18: ifeq          34
      21: aload_1
      22: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      25: invokevirtual #28                 // Method "[Lorg/apache/commons/math3/FieldElement;".clone:()Ljava/lang/Object;
      28: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      31: goto          38
      34: aload_1
      35: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      38: putfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      41: return

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.linear.ArrayFieldVector<T>, org.apache.commons.math3.linear.ArrayFieldVector<T>) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #29                 // Method "<init>":(Lorg/apache/commons/math3/linear/FieldVector;Lorg/apache/commons/math3/linear/FieldVector;)V
       6: return

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.linear.FieldVector<T>, org.apache.commons.math3.linear.FieldVector<T>) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #9                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       8: aload_2
       9: invokestatic  #9                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
      12: aload_0
      13: aload_1
      14: invokeinterface #23,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getField:()Lorg/apache/commons/math3/Field;
      19: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      22: aload_1
      23: instanceof    #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      26: ifeq          39
      29: aload_1
      30: checkcast     #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      33: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      36: goto          45
      39: aload_1
      40: invokeinterface #31,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.toArray:()[Lorg/apache/commons/math3/FieldElement;
      45: astore_3
      46: aload_2
      47: instanceof    #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      50: ifeq          63
      53: aload_2
      54: checkcast     #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      57: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      60: goto          69
      63: aload_2
      64: invokeinterface #31,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.toArray:()[Lorg/apache/commons/math3/FieldElement;
      69: astore        4
      71: aload_0
      72: aload_0
      73: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      76: aload_3
      77: arraylength
      78: aload         4
      80: arraylength
      81: iadd
      82: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      85: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      88: putfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      91: aload_3
      92: iconst_0
      93: aload_0
      94: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      97: iconst_0
      98: aload_3
      99: arraylength
     100: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     103: aload         4
     105: iconst_0
     106: aload_0
     107: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
     110: aload_3
     111: arraylength
     112: aload         4
     114: arraylength
     115: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     118: return

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.linear.ArrayFieldVector<T>, T[]) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #32                 // Method "<init>":(Lorg/apache/commons/math3/linear/FieldVector;[Lorg/apache/commons/math3/FieldElement;)V
       6: return

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.linear.FieldVector<T>, T[]) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #9                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       8: aload_2
       9: invokestatic  #9                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
      12: aload_0
      13: aload_1
      14: invokeinterface #23,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getField:()Lorg/apache/commons/math3/Field;
      19: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      22: aload_1
      23: instanceof    #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      26: ifeq          39
      29: aload_1
      30: checkcast     #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      33: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      36: goto          45
      39: aload_1
      40: invokeinterface #31,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.toArray:()[Lorg/apache/commons/math3/FieldElement;
      45: astore_3
      46: aload_0
      47: aload_0
      48: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      51: aload_3
      52: arraylength
      53: aload_2
      54: arraylength
      55: iadd
      56: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      59: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      62: putfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      65: aload_3
      66: iconst_0
      67: aload_0
      68: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      71: iconst_0
      72: aload_3
      73: arraylength
      74: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      77: aload_2
      78: iconst_0
      79: aload_0
      80: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      83: aload_3
      84: arraylength
      85: aload_2
      86: arraylength
      87: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      90: return

  public org.apache.commons.math3.linear.ArrayFieldVector(T[], org.apache.commons.math3.linear.ArrayFieldVector<T>) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #33                 // Method "<init>":([Lorg/apache/commons/math3/FieldElement;Lorg/apache/commons/math3/linear/FieldVector;)V
       6: return

  public org.apache.commons.math3.linear.ArrayFieldVector(T[], org.apache.commons.math3.linear.FieldVector<T>) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #9                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       8: aload_2
       9: invokestatic  #9                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
      12: aload_0
      13: aload_2
      14: invokeinterface #23,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getField:()Lorg/apache/commons/math3/Field;
      19: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      22: aload_2
      23: instanceof    #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      26: ifeq          39
      29: aload_2
      30: checkcast     #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      33: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      36: goto          45
      39: aload_2
      40: invokeinterface #31,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.toArray:()[Lorg/apache/commons/math3/FieldElement;
      45: astore_3
      46: aload_0
      47: aload_0
      48: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      51: aload_1
      52: arraylength
      53: aload_3
      54: arraylength
      55: iadd
      56: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      59: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      62: putfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      65: aload_1
      66: iconst_0
      67: aload_0
      68: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      71: iconst_0
      72: aload_1
      73: arraylength
      74: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      77: aload_3
      78: iconst_0
      79: aload_0
      80: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      83: aload_1
      84: arraylength
      85: aload_3
      86: arraylength
      87: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      90: return

  public org.apache.commons.math3.linear.ArrayFieldVector(T[], T[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.ZeroException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #9                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       8: aload_2
       9: invokestatic  #9                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
      12: aload_1
      13: arraylength
      14: aload_2
      15: arraylength
      16: iadd
      17: ifne          35
      20: new           #12                 // class org/apache/commons/math3/exception/ZeroException
      23: dup
      24: getstatic     #13                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      27: iconst_0
      28: anewarray     #14                 // class java/lang/Object
      31: invokespecial #15                 // Method org/apache/commons/math3/exception/ZeroException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      34: athrow
      35: aload_0
      36: aload_1
      37: iconst_0
      38: aaload
      39: invokeinterface #7,  1            // InterfaceMethod org/apache/commons/math3/FieldElement.getField:()Lorg/apache/commons/math3/Field;
      44: aload_1
      45: arraylength
      46: aload_2
      47: arraylength
      48: iadd
      49: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      52: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      55: putfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      58: aload_1
      59: iconst_0
      60: aload_0
      61: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      64: iconst_0
      65: aload_1
      66: arraylength
      67: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      70: aload_2
      71: iconst_0
      72: aload_0
      73: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      76: aload_1
      77: arraylength
      78: aload_2
      79: arraylength
      80: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      83: aload_0
      84: aload_0
      85: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      88: iconst_0
      89: aaload
      90: invokeinterface #7,  1            // InterfaceMethod org/apache/commons/math3/FieldElement.getField:()Lorg/apache/commons/math3/Field;
      95: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      98: return

  public org.apache.commons.math3.linear.ArrayFieldVector(org.apache.commons.math3.Field<T>, T[], T[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.ZeroException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_2
       5: invokestatic  #9                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       8: aload_3
       9: invokestatic  #9                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
      12: aload_2
      13: arraylength
      14: aload_3
      15: arraylength
      16: iadd
      17: ifne          35
      20: new           #12                 // class org/apache/commons/math3/exception/ZeroException
      23: dup
      24: getstatic     #13                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      27: iconst_0
      28: anewarray     #14                 // class java/lang/Object
      31: invokespecial #15                 // Method org/apache/commons/math3/exception/ZeroException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      34: athrow
      35: aload_0
      36: aload_1
      37: aload_2
      38: arraylength
      39: aload_3
      40: arraylength
      41: iadd
      42: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      45: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      48: putfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      51: aload_2
      52: iconst_0
      53: aload_0
      54: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      57: iconst_0
      58: aload_2
      59: arraylength
      60: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      63: aload_3
      64: iconst_0
      65: aload_0
      66: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      69: aload_2
      70: arraylength
      71: aload_3
      72: arraylength
      73: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      76: aload_0
      77: aload_1
      78: putfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      81: return

  public org.apache.commons.math3.Field<T> getField();
    Code:
       0: aload_0
       1: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
       4: areturn

  public org.apache.commons.math3.linear.FieldVector<T> copy();
    Code:
       0: new           #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
       3: dup
       4: aload_0
       5: iconst_1
       6: invokespecial #34                 // Method "<init>":(Lorg/apache/commons/math3/linear/ArrayFieldVector;Z)V
       9: areturn

  public org.apache.commons.math3.linear.FieldVector<T> add(org.apache.commons.math3.linear.FieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
       5: invokevirtual #35                 // Method add:(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
       8: areturn
       9: astore_2
      10: aload_0
      11: aload_1
      12: invokevirtual #37                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/FieldVector;)V
      15: aload_0
      16: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      19: aload_0
      20: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      23: arraylength
      24: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      27: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      30: astore_3
      31: iconst_0
      32: istore        4
      34: iload         4
      36: aload_0
      37: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      40: arraylength
      41: if_icmpge     77
      44: aload_3
      45: iload         4
      47: aload_0
      48: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      51: iload         4
      53: aaload
      54: aload_1
      55: iload         4
      57: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getEntry:(I)Lorg/apache/commons/math3/FieldElement;
      62: invokeinterface #38,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      67: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      70: aastore
      71: iinc          4, 1
      74: goto          34
      77: new           #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      80: dup
      81: aload_0
      82: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      85: aload_3
      86: iconst_0
      87: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      90: areturn
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassCastException

  public org.apache.commons.math3.linear.ArrayFieldVector<T> add(org.apache.commons.math3.linear.ArrayFieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       5: arraylength
       6: invokevirtual #41                 // Method checkVectorDimensions:(I)V
       9: aload_0
      10: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      13: aload_0
      14: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      17: arraylength
      18: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      21: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      24: astore_2
      25: iconst_0
      26: istore_3
      27: iload_3
      28: aload_0
      29: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      32: arraylength
      33: if_icmpge     65
      36: aload_2
      37: iload_3
      38: aload_0
      39: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      42: iload_3
      43: aaload
      44: aload_1
      45: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      48: iload_3
      49: aaload
      50: invokeinterface #38,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      55: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      58: aastore
      59: iinc          3, 1
      62: goto          27
      65: new           #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      68: dup
      69: aload_0
      70: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      73: aload_2
      74: iconst_0
      75: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      78: areturn

  public org.apache.commons.math3.linear.FieldVector<T> subtract(org.apache.commons.math3.linear.FieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
       5: invokevirtual #42                 // Method subtract:(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
       8: areturn
       9: astore_2
      10: aload_0
      11: aload_1
      12: invokevirtual #37                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/FieldVector;)V
      15: aload_0
      16: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      19: aload_0
      20: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      23: arraylength
      24: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      27: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      30: astore_3
      31: iconst_0
      32: istore        4
      34: iload         4
      36: aload_0
      37: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      40: arraylength
      41: if_icmpge     77
      44: aload_3
      45: iload         4
      47: aload_0
      48: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      51: iload         4
      53: aaload
      54: aload_1
      55: iload         4
      57: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getEntry:(I)Lorg/apache/commons/math3/FieldElement;
      62: invokeinterface #43,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.subtract:(Ljava/lang/Object;)Ljava/lang/Object;
      67: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      70: aastore
      71: iinc          4, 1
      74: goto          34
      77: new           #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      80: dup
      81: aload_0
      82: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      85: aload_3
      86: iconst_0
      87: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      90: areturn
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassCastException

  public org.apache.commons.math3.linear.ArrayFieldVector<T> subtract(org.apache.commons.math3.linear.ArrayFieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       5: arraylength
       6: invokevirtual #41                 // Method checkVectorDimensions:(I)V
       9: aload_0
      10: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      13: aload_0
      14: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      17: arraylength
      18: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      21: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      24: astore_2
      25: iconst_0
      26: istore_3
      27: iload_3
      28: aload_0
      29: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      32: arraylength
      33: if_icmpge     65
      36: aload_2
      37: iload_3
      38: aload_0
      39: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      42: iload_3
      43: aaload
      44: aload_1
      45: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      48: iload_3
      49: aaload
      50: invokeinterface #43,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.subtract:(Ljava/lang/Object;)Ljava/lang/Object;
      55: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      58: aastore
      59: iinc          3, 1
      62: goto          27
      65: new           #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      68: dup
      69: aload_0
      70: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      73: aload_2
      74: iconst_0
      75: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      78: areturn

  public org.apache.commons.math3.linear.FieldVector<T> mapAdd(T) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
       4: aload_0
       5: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       8: arraylength
       9: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      12: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      15: astore_2
      16: iconst_0
      17: istore_3
      18: iload_3
      19: aload_0
      20: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      23: arraylength
      24: if_icmpge     51
      27: aload_2
      28: iload_3
      29: aload_0
      30: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      33: iload_3
      34: aaload
      35: aload_1
      36: invokeinterface #38,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      44: aastore
      45: iinc          3, 1
      48: goto          18
      51: new           #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      54: dup
      55: aload_0
      56: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      59: aload_2
      60: iconst_0
      61: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      64: areturn

  public org.apache.commons.math3.linear.FieldVector<T> mapAddToSelf(T) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       7: arraylength
       8: if_icmpge     38
      11: aload_0
      12: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      15: iload_2
      16: aload_0
      17: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      20: iload_2
      21: aaload
      22: aload_1
      23: invokeinterface #38,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      31: aastore
      32: iinc          2, 1
      35: goto          2
      38: aload_0
      39: areturn

  public org.apache.commons.math3.linear.FieldVector<T> mapSubtract(T) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
       4: aload_0
       5: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       8: arraylength
       9: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      12: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      15: astore_2
      16: iconst_0
      17: istore_3
      18: iload_3
      19: aload_0
      20: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      23: arraylength
      24: if_icmpge     51
      27: aload_2
      28: iload_3
      29: aload_0
      30: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      33: iload_3
      34: aaload
      35: aload_1
      36: invokeinterface #43,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.subtract:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      44: aastore
      45: iinc          3, 1
      48: goto          18
      51: new           #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      54: dup
      55: aload_0
      56: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      59: aload_2
      60: iconst_0
      61: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      64: areturn

  public org.apache.commons.math3.linear.FieldVector<T> mapSubtractToSelf(T) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       7: arraylength
       8: if_icmpge     38
      11: aload_0
      12: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      15: iload_2
      16: aload_0
      17: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      20: iload_2
      21: aaload
      22: aload_1
      23: invokeinterface #43,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.subtract:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      31: aastore
      32: iinc          2, 1
      35: goto          2
      38: aload_0
      39: areturn

  public org.apache.commons.math3.linear.FieldVector<T> mapMultiply(T) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
       4: aload_0
       5: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       8: arraylength
       9: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      12: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      15: astore_2
      16: iconst_0
      17: istore_3
      18: iload_3
      19: aload_0
      20: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      23: arraylength
      24: if_icmpge     51
      27: aload_2
      28: iload_3
      29: aload_0
      30: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      33: iload_3
      34: aaload
      35: aload_1
      36: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      44: aastore
      45: iinc          3, 1
      48: goto          18
      51: new           #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      54: dup
      55: aload_0
      56: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      59: aload_2
      60: iconst_0
      61: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      64: areturn

  public org.apache.commons.math3.linear.FieldVector<T> mapMultiplyToSelf(T) throws org.apache.commons.math3.exception.NullArgumentException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       7: arraylength
       8: if_icmpge     38
      11: aload_0
      12: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      15: iload_2
      16: aload_0
      17: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      20: iload_2
      21: aaload
      22: aload_1
      23: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      31: aastore
      32: iinc          2, 1
      35: goto          2
      38: aload_0
      39: areturn

  public org.apache.commons.math3.linear.FieldVector<T> mapDivide(T) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_1
       1: invokestatic  #9                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       4: aload_0
       5: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
       8: aload_0
       9: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      12: arraylength
      13: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      16: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      19: astore_2
      20: iconst_0
      21: istore_3
      22: iload_3
      23: aload_0
      24: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      27: arraylength
      28: if_icmpge     55
      31: aload_2
      32: iload_3
      33: aload_0
      34: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      37: iload_3
      38: aaload
      39: aload_1
      40: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.divide:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      48: aastore
      49: iinc          3, 1
      52: goto          22
      55: new           #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      58: dup
      59: aload_0
      60: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      63: aload_2
      64: iconst_0
      65: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      68: areturn

  public org.apache.commons.math3.linear.FieldVector<T> mapDivideToSelf(T) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_1
       1: invokestatic  #9                  // Method org/apache/commons/math3/util/MathUtils.checkNotNull:(Ljava/lang/Object;)V
       4: iconst_0
       5: istore_2
       6: iload_2
       7: aload_0
       8: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      11: arraylength
      12: if_icmpge     42
      15: aload_0
      16: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      19: iload_2
      20: aload_0
      21: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      24: iload_2
      25: aaload
      26: aload_1
      27: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.divide:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      35: aastore
      36: iinc          2, 1
      39: goto          6
      42: aload_0
      43: areturn

  public org.apache.commons.math3.linear.FieldVector<T> mapInv() throws org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
       4: aload_0
       5: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       8: arraylength
       9: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      12: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      15: astore_1
      16: aload_0
      17: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      20: invokeinterface #46,  1           // InterfaceMethod org/apache/commons/math3/Field.getOne:()Ljava/lang/Object;
      25: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      28: astore_2
      29: iconst_0
      30: istore_3
      31: iload_3
      32: aload_0
      33: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      36: arraylength
      37: if_icmpge     91
      40: aload_1
      41: iload_3
      42: aload_2
      43: aload_0
      44: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      47: iload_3
      48: aaload
      49: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.divide:(Ljava/lang/Object;)Ljava/lang/Object;
      54: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      57: aastore
      58: goto          85
      61: astore        4
      63: new           #47                 // class org/apache/commons/math3/exception/MathArithmeticException
      66: dup
      67: getstatic     #48                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INDEX:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      70: iconst_1
      71: anewarray     #14                 // class java/lang/Object
      74: dup
      75: iconst_0
      76: iload_3
      77: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      80: aastore
      81: invokespecial #49                 // Method org/apache/commons/math3/exception/MathArithmeticException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      84: athrow
      85: iinc          3, 1
      88: goto          31
      91: new           #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      94: dup
      95: aload_0
      96: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      99: aload_1
     100: iconst_0
     101: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
     104: areturn
    Exception table:
       from    to  target type
          40    58    61   Class org/apache/commons/math3/exception/MathArithmeticException

  public org.apache.commons.math3.linear.FieldVector<T> mapInvToSelf() throws org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
       4: invokeinterface #46,  1           // InterfaceMethod org/apache/commons/math3/Field.getOne:()Ljava/lang/Object;
       9: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      12: astore_1
      13: iconst_0
      14: istore_2
      15: iload_2
      16: aload_0
      17: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      20: arraylength
      21: if_icmpge     77
      24: aload_0
      25: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      28: iload_2
      29: aload_1
      30: aload_0
      31: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      34: iload_2
      35: aaload
      36: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.divide:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      44: aastore
      45: goto          71
      48: astore_3
      49: new           #47                 // class org/apache/commons/math3/exception/MathArithmeticException
      52: dup
      53: getstatic     #48                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INDEX:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      56: iconst_1
      57: anewarray     #14                 // class java/lang/Object
      60: dup
      61: iconst_0
      62: iload_2
      63: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      66: aastore
      67: invokespecial #49                 // Method org/apache/commons/math3/exception/MathArithmeticException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      70: athrow
      71: iinc          2, 1
      74: goto          15
      77: aload_0
      78: areturn
    Exception table:
       from    to  target type
          24    45    48   Class org/apache/commons/math3/exception/MathArithmeticException

  public org.apache.commons.math3.linear.FieldVector<T> ebeMultiply(org.apache.commons.math3.linear.FieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
       5: invokevirtual #50                 // Method ebeMultiply:(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
       8: areturn
       9: astore_2
      10: aload_0
      11: aload_1
      12: invokevirtual #37                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/FieldVector;)V
      15: aload_0
      16: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      19: aload_0
      20: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      23: arraylength
      24: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      27: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      30: astore_3
      31: iconst_0
      32: istore        4
      34: iload         4
      36: aload_0
      37: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      40: arraylength
      41: if_icmpge     77
      44: aload_3
      45: iload         4
      47: aload_0
      48: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      51: iload         4
      53: aaload
      54: aload_1
      55: iload         4
      57: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getEntry:(I)Lorg/apache/commons/math3/FieldElement;
      62: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      67: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      70: aastore
      71: iinc          4, 1
      74: goto          34
      77: new           #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      80: dup
      81: aload_0
      82: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      85: aload_3
      86: iconst_0
      87: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      90: areturn
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassCastException

  public org.apache.commons.math3.linear.ArrayFieldVector<T> ebeMultiply(org.apache.commons.math3.linear.ArrayFieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       5: arraylength
       6: invokevirtual #41                 // Method checkVectorDimensions:(I)V
       9: aload_0
      10: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      13: aload_0
      14: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      17: arraylength
      18: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      21: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      24: astore_2
      25: iconst_0
      26: istore_3
      27: iload_3
      28: aload_0
      29: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      32: arraylength
      33: if_icmpge     65
      36: aload_2
      37: iload_3
      38: aload_0
      39: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      42: iload_3
      43: aaload
      44: aload_1
      45: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      48: iload_3
      49: aaload
      50: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      55: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      58: aastore
      59: iinc          3, 1
      62: goto          27
      65: new           #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      68: dup
      69: aload_0
      70: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      73: aload_2
      74: iconst_0
      75: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      78: areturn

  public org.apache.commons.math3.linear.FieldVector<T> ebeDivide(org.apache.commons.math3.linear.FieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
       5: invokevirtual #51                 // Method ebeDivide:(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
       8: areturn
       9: astore_2
      10: aload_0
      11: aload_1
      12: invokevirtual #37                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/FieldVector;)V
      15: aload_0
      16: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      19: aload_0
      20: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      23: arraylength
      24: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      27: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      30: astore_3
      31: iconst_0
      32: istore        4
      34: iload         4
      36: aload_0
      37: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      40: arraylength
      41: if_icmpge     105
      44: aload_3
      45: iload         4
      47: aload_0
      48: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      51: iload         4
      53: aaload
      54: aload_1
      55: iload         4
      57: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getEntry:(I)Lorg/apache/commons/math3/FieldElement;
      62: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.divide:(Ljava/lang/Object;)Ljava/lang/Object;
      67: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      70: aastore
      71: goto          99
      74: astore        5
      76: new           #47                 // class org/apache/commons/math3/exception/MathArithmeticException
      79: dup
      80: getstatic     #48                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INDEX:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      83: iconst_1
      84: anewarray     #14                 // class java/lang/Object
      87: dup
      88: iconst_0
      89: iload         4
      91: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      94: aastore
      95: invokespecial #49                 // Method org/apache/commons/math3/exception/MathArithmeticException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      98: athrow
      99: iinc          4, 1
     102: goto          34
     105: new           #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
     108: dup
     109: aload_0
     110: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
     113: aload_3
     114: iconst_0
     115: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
     118: areturn
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassCastException
          44    71    74   Class org/apache/commons/math3/exception/MathArithmeticException

  public org.apache.commons.math3.linear.ArrayFieldVector<T> ebeDivide(org.apache.commons.math3.linear.ArrayFieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       5: arraylength
       6: invokevirtual #41                 // Method checkVectorDimensions:(I)V
       9: aload_0
      10: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      13: aload_0
      14: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      17: arraylength
      18: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      21: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      24: astore_2
      25: iconst_0
      26: istore_3
      27: iload_3
      28: aload_0
      29: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      32: arraylength
      33: if_icmpge     92
      36: aload_2
      37: iload_3
      38: aload_0
      39: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      42: iload_3
      43: aaload
      44: aload_1
      45: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      48: iload_3
      49: aaload
      50: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.divide:(Ljava/lang/Object;)Ljava/lang/Object;
      55: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      58: aastore
      59: goto          86
      62: astore        4
      64: new           #47                 // class org/apache/commons/math3/exception/MathArithmeticException
      67: dup
      68: getstatic     #48                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INDEX:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      71: iconst_1
      72: anewarray     #14                 // class java/lang/Object
      75: dup
      76: iconst_0
      77: iload_3
      78: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      81: aastore
      82: invokespecial #49                 // Method org/apache/commons/math3/exception/MathArithmeticException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
      85: athrow
      86: iinc          3, 1
      89: goto          27
      92: new           #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      95: dup
      96: aload_0
      97: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
     100: aload_2
     101: iconst_0
     102: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
     105: areturn
    Exception table:
       from    to  target type
          36    59    62   Class org/apache/commons/math3/exception/MathArithmeticException

  public T[] getData();
    Code:
       0: aload_0
       1: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       4: invokevirtual #52                 // Method "[Lorg/apache/commons/math3/FieldElement;".clone:()Ljava/lang/Object;
       7: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      10: areturn

  public T[] getDataRef();
    Code:
       0: aload_0
       1: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       4: areturn

  public T dotProduct(org.apache.commons.math3.linear.FieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
       5: invokevirtual #53                 // Method dotProduct:(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/FieldElement;
       8: areturn
       9: astore_2
      10: aload_0
      11: aload_1
      12: invokevirtual #37                 // Method checkVectorDimensions:(Lorg/apache/commons/math3/linear/FieldVector;)V
      15: aload_0
      16: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      19: invokeinterface #54,  1           // InterfaceMethod org/apache/commons/math3/Field.getZero:()Ljava/lang/Object;
      24: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      27: astore_3
      28: iconst_0
      29: istore        4
      31: iload         4
      33: aload_0
      34: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      37: arraylength
      38: if_icmpge     77
      41: aload_3
      42: aload_0
      43: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      46: iload         4
      48: aaload
      49: aload_1
      50: iload         4
      52: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getEntry:(I)Lorg/apache/commons/math3/FieldElement;
      57: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      62: invokeinterface #38,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      67: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      70: astore_3
      71: iinc          4, 1
      74: goto          31
      77: aload_3
      78: areturn
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassCastException

  public T dotProduct(org.apache.commons.math3.linear.ArrayFieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       5: arraylength
       6: invokevirtual #41                 // Method checkVectorDimensions:(I)V
       9: aload_0
      10: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      13: invokeinterface #54,  1           // InterfaceMethod org/apache/commons/math3/Field.getZero:()Ljava/lang/Object;
      18: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      21: astore_2
      22: iconst_0
      23: istore_3
      24: iload_3
      25: aload_0
      26: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      29: arraylength
      30: if_icmpge     66
      33: aload_2
      34: aload_0
      35: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      38: iload_3
      39: aaload
      40: aload_1
      41: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      44: iload_3
      45: aaload
      46: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      51: invokeinterface #38,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.add:(Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      59: astore_2
      60: iinc          3, 1
      63: goto          24
      66: aload_2
      67: areturn

  public org.apache.commons.math3.linear.FieldVector<T> projection(org.apache.commons.math3.linear.FieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_1
       1: aload_0
       2: aload_1
       3: invokevirtual #55                 // Method dotProduct:(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/FieldElement;
       6: aload_1
       7: aload_1
       8: invokeinterface #56,  2           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.dotProduct:(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/FieldElement;
      13: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.divide:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      21: invokeinterface #57,  2           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.mapMultiply:(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
      26: areturn

  public org.apache.commons.math3.linear.ArrayFieldVector<T> projection(org.apache.commons.math3.linear.ArrayFieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathArithmeticException;
    Code:
       0: aload_1
       1: aload_0
       2: aload_1
       3: invokevirtual #53                 // Method dotProduct:(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/FieldElement;
       6: aload_1
       7: aload_1
       8: invokevirtual #53                 // Method dotProduct:(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/FieldElement;
      11: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.divide:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      19: invokevirtual #58                 // Method mapMultiply:(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
      22: checkcast     #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      25: areturn

  public org.apache.commons.math3.linear.FieldMatrix<T> outerProduct(org.apache.commons.math3.linear.FieldVector<T>);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
       5: invokevirtual #59                 // Method outerProduct:(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/FieldMatrix;
       8: areturn
       9: astore_2
      10: aload_0
      11: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      14: arraylength
      15: istore_3
      16: aload_1
      17: invokeinterface #24,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getDimension:()I
      22: istore        4
      24: new           #60                 // class org/apache/commons/math3/linear/Array2DRowFieldMatrix
      27: dup
      28: aload_0
      29: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      32: iload_3
      33: iload         4
      35: invokespecial #61                 // Method org/apache/commons/math3/linear/Array2DRowFieldMatrix."<init>":(Lorg/apache/commons/math3/Field;II)V
      38: astore        5
      40: iconst_0
      41: istore        6
      43: iload         6
      45: iload_3
      46: if_icmpge     105
      49: iconst_0
      50: istore        7
      52: iload         7
      54: iload         4
      56: if_icmpge     99
      59: aload         5
      61: iload         6
      63: iload         7
      65: aload_0
      66: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      69: iload         6
      71: aaload
      72: aload_1
      73: iload         7
      75: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getEntry:(I)Lorg/apache/commons/math3/FieldElement;
      80: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      85: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      88: invokeinterface #62,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrix.setEntry:(IILorg/apache/commons/math3/FieldElement;)V
      93: iinc          7, 1
      96: goto          52
      99: iinc          6, 1
     102: goto          43
     105: aload         5
     107: areturn
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassCastException

  public org.apache.commons.math3.linear.FieldMatrix<T> outerProduct(org.apache.commons.math3.linear.ArrayFieldVector<T>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       4: arraylength
       5: istore_2
       6: aload_1
       7: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      10: arraylength
      11: istore_3
      12: new           #60                 // class org/apache/commons/math3/linear/Array2DRowFieldMatrix
      15: dup
      16: aload_0
      17: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      20: iload_2
      21: iload_3
      22: invokespecial #61                 // Method org/apache/commons/math3/linear/Array2DRowFieldMatrix."<init>":(Lorg/apache/commons/math3/Field;II)V
      25: astore        4
      27: iconst_0
      28: istore        5
      30: iload         5
      32: iload_2
      33: if_icmpge     90
      36: iconst_0
      37: istore        6
      39: iload         6
      41: iload_3
      42: if_icmpge     84
      45: aload         4
      47: iload         5
      49: iload         6
      51: aload_0
      52: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      55: iload         5
      57: aaload
      58: aload_1
      59: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      62: iload         6
      64: aaload
      65: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/math3/FieldElement.multiply:(Ljava/lang/Object;)Ljava/lang/Object;
      70: checkcast     #39                 // class org/apache/commons/math3/FieldElement
      73: invokeinterface #62,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldMatrix.setEntry:(IILorg/apache/commons/math3/FieldElement;)V
      78: iinc          6, 1
      81: goto          39
      84: iinc          5, 1
      87: goto          30
      90: aload         4
      92: areturn

  public T getEntry(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       4: iload_1
       5: aaload
       6: areturn

  public int getDimension();
    Code:
       0: aload_0
       1: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       4: arraylength
       5: ireturn

  public org.apache.commons.math3.linear.FieldVector<T> append(org.apache.commons.math3.linear.FieldVector<T>);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
       5: invokevirtual #63                 // Method append:(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
       8: areturn
       9: astore_2
      10: new           #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      13: dup
      14: aload_0
      15: new           #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      18: dup
      19: aload_1
      20: invokespecial #64                 // Method "<init>":(Lorg/apache/commons/math3/linear/FieldVector;)V
      23: invokespecial #65                 // Method "<init>":(Lorg/apache/commons/math3/linear/ArrayFieldVector;Lorg/apache/commons/math3/linear/ArrayFieldVector;)V
      26: areturn
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassCastException

  public org.apache.commons.math3.linear.ArrayFieldVector<T> append(org.apache.commons.math3.linear.ArrayFieldVector<T>);
    Code:
       0: new           #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #65                 // Method "<init>":(Lorg/apache/commons/math3/linear/ArrayFieldVector;Lorg/apache/commons/math3/linear/ArrayFieldVector;)V
       9: areturn

  public org.apache.commons.math3.linear.FieldVector<T> append(T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
       4: aload_0
       5: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       8: arraylength
       9: iconst_1
      10: iadd
      11: invokestatic  #4                  // Method org/apache/commons/math3/util/MathArrays.buildArray:(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
      14: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      17: astore_2
      18: aload_0
      19: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      22: iconst_0
      23: aload_2
      24: iconst_0
      25: aload_0
      26: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      29: arraylength
      30: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      33: aload_2
      34: aload_0
      35: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      38: arraylength
      39: aload_1
      40: aastore
      41: new           #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      44: dup
      45: aload_0
      46: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      49: aload_2
      50: iconst_0
      51: invokespecial #40                 // Method "<init>":(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
      54: areturn

  public org.apache.commons.math3.linear.FieldVector<T> getSubVector(int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NotPositiveException;
    Code:
       0: iload_2
       1: ifge          19
       4: new           #66                 // class org/apache/commons/math3/exception/NotPositiveException
       7: dup
       8: getstatic     #67                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.NUMBER_OF_ELEMENTS_SHOULD_BE_POSITIVE:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      11: iload_2
      12: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokespecial #68                 // Method org/apache/commons/math3/exception/NotPositiveException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V
      18: athrow
      19: new           #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
      22: dup
      23: aload_0
      24: getfield      #3                  // Field field:Lorg/apache/commons/math3/Field;
      27: iload_2
      28: invokespecial #1                  // Method "<init>":(Lorg/apache/commons/math3/Field;I)V
      31: astore_3
      32: aload_0
      33: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      36: iload_1
      37: aload_3
      38: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      41: iconst_0
      42: iload_2
      43: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      46: goto          65
      49: astore        4
      51: aload_0
      52: iload_1
      53: invokespecial #70                 // Method checkIndex:(I)V
      56: aload_0
      57: iload_1
      58: iload_2
      59: iadd
      60: iconst_1
      61: isub
      62: invokespecial #70                 // Method checkIndex:(I)V
      65: aload_3
      66: areturn
    Exception table:
       from    to  target type
          32    46    49   Class java/lang/IndexOutOfBoundsException

  public void setEntry(int, T);
    Code:
       0: aload_0
       1: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       4: iload_1
       5: aload_2
       6: aastore
       7: goto          16
      10: astore_3
      11: aload_0
      12: iload_1
      13: invokespecial #70                 // Method checkIndex:(I)V
      16: return
    Exception table:
       from    to  target type
           0     7    10   Class java/lang/IndexOutOfBoundsException

  public void setSubVector(int, org.apache.commons.math3.linear.FieldVector<T>) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #30                 // class org/apache/commons/math3/linear/ArrayFieldVector
       6: invokevirtual #71                 // Method set:(ILorg/apache/commons/math3/linear/ArrayFieldVector;)V
       9: goto          52
      12: astore_3
      13: iload_1
      14: istore        4
      16: iload         4
      18: iload_1
      19: aload_2
      20: invokeinterface #24,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getDimension:()I
      25: iadd
      26: if_icmpge     52
      29: aload_0
      30: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      33: iload         4
      35: aload_2
      36: iload         4
      38: iload_1
      39: isub
      40: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getEntry:(I)Lorg/apache/commons/math3/FieldElement;
      45: aastore
      46: iinc          4, 1
      49: goto          16
      52: goto          75
      55: astore_3
      56: aload_0
      57: iload_1
      58: invokespecial #70                 // Method checkIndex:(I)V
      61: aload_0
      62: iload_1
      63: aload_2
      64: invokeinterface #24,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getDimension:()I
      69: iadd
      70: iconst_1
      71: isub
      72: invokespecial #70                 // Method checkIndex:(I)V
      75: return
    Exception table:
       from    to  target type
           0     9    12   Class java/lang/ClassCastException
           0    52    55   Class java/lang/IndexOutOfBoundsException

  public void set(int, org.apache.commons.math3.linear.ArrayFieldVector<T>) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_2
       1: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       4: iconst_0
       5: aload_0
       6: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       9: iload_1
      10: aload_2
      11: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      14: arraylength
      15: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      18: goto          40
      21: astore_3
      22: aload_0
      23: iload_1
      24: invokespecial #70                 // Method checkIndex:(I)V
      27: aload_0
      28: iload_1
      29: aload_2
      30: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      33: arraylength
      34: iadd
      35: iconst_1
      36: isub
      37: invokespecial #70                 // Method checkIndex:(I)V
      40: return
    Exception table:
       from    to  target type
           0    18    21   Class java/lang/IndexOutOfBoundsException

  public void set(T);
    Code:
       0: aload_0
       1: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       4: aload_1
       5: invokestatic  #8                  // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
       8: return

  public T[] toArray();
    Code:
       0: aload_0
       1: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       4: invokevirtual #72                 // Method "[Lorg/apache/commons/math3/FieldElement;".clone:()Ljava/lang/Object;
       7: checkcast     #5                  // class "[Lorg/apache/commons/math3/FieldElement;"
      10: areturn

  protected void checkVectorDimensions(org.apache.commons.math3.linear.FieldVector<T>) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #24,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getDimension:()I
       7: invokevirtual #41                 // Method checkVectorDimensions:(I)V
      10: return

  protected void checkVectorDimensions(int) throws org.apache.commons.math3.exception.DimensionMismatchException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       4: arraylength
       5: iload_1
       6: if_icmpeq     23
       9: new           #73                 // class org/apache/commons/math3/exception/DimensionMismatchException
      12: dup
      13: aload_0
      14: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      17: arraylength
      18: iload_1
      19: invokespecial #74                 // Method org/apache/commons/math3/exception/DimensionMismatchException."<init>":(II)V
      22: athrow
      23: return

  public T walkInDefaultOrder(org.apache.commons.math3.linear.FieldVectorPreservingVisitor<T>);
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method getDimension:()I
       4: istore_2
       5: aload_1
       6: iload_2
       7: iconst_0
       8: iload_2
       9: iconst_1
      10: isub
      11: invokeinterface #76,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldVectorPreservingVisitor.start:(III)V
      16: iconst_0
      17: istore_3
      18: iload_3
      19: iload_2
      20: if_icmpge     41
      23: aload_1
      24: iload_3
      25: aload_0
      26: iload_3
      27: invokevirtual #77                 // Method getEntry:(I)Lorg/apache/commons/math3/FieldElement;
      30: invokeinterface #78,  3           // InterfaceMethod org/apache/commons/math3/linear/FieldVectorPreservingVisitor.visit:(ILorg/apache/commons/math3/FieldElement;)V
      35: iinc          3, 1
      38: goto          18
      41: aload_1
      42: invokeinterface #79,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVectorPreservingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
      47: areturn

  public T walkInDefaultOrder(org.apache.commons.math3.linear.FieldVectorPreservingVisitor<T>, int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: invokespecial #80                 // Method checkIndices:(II)V
       6: aload_1
       7: aload_0
       8: invokevirtual #75                 // Method getDimension:()I
      11: iload_2
      12: iload_3
      13: invokeinterface #76,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldVectorPreservingVisitor.start:(III)V
      18: iload_2
      19: istore        4
      21: iload         4
      23: iload_3
      24: if_icmpgt     47
      27: aload_1
      28: iload         4
      30: aload_0
      31: iload         4
      33: invokevirtual #77                 // Method getEntry:(I)Lorg/apache/commons/math3/FieldElement;
      36: invokeinterface #78,  3           // InterfaceMethod org/apache/commons/math3/linear/FieldVectorPreservingVisitor.visit:(ILorg/apache/commons/math3/FieldElement;)V
      41: iinc          4, 1
      44: goto          21
      47: aload_1
      48: invokeinterface #79,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVectorPreservingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
      53: areturn

  public T walkInOptimizedOrder(org.apache.commons.math3.linear.FieldVectorPreservingVisitor<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #81                 // Method walkInDefaultOrder:(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
       5: areturn

  public T walkInOptimizedOrder(org.apache.commons.math3.linear.FieldVectorPreservingVisitor<T>, int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #82                 // Method walkInDefaultOrder:(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;II)Lorg/apache/commons/math3/FieldElement;
       7: areturn

  public T walkInDefaultOrder(org.apache.commons.math3.linear.FieldVectorChangingVisitor<T>);
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method getDimension:()I
       4: istore_2
       5: aload_1
       6: iload_2
       7: iconst_0
       8: iload_2
       9: iconst_1
      10: isub
      11: invokeinterface #83,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldVectorChangingVisitor.start:(III)V
      16: iconst_0
      17: istore_3
      18: iload_3
      19: iload_2
      20: if_icmpge     46
      23: aload_0
      24: iload_3
      25: aload_1
      26: iload_3
      27: aload_0
      28: iload_3
      29: invokevirtual #77                 // Method getEntry:(I)Lorg/apache/commons/math3/FieldElement;
      32: invokeinterface #84,  3           // InterfaceMethod org/apache/commons/math3/linear/FieldVectorChangingVisitor.visit:(ILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
      37: invokevirtual #85                 // Method setEntry:(ILorg/apache/commons/math3/FieldElement;)V
      40: iinc          3, 1
      43: goto          18
      46: aload_1
      47: invokeinterface #86,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVectorChangingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
      52: areturn

  public T walkInDefaultOrder(org.apache.commons.math3.linear.FieldVectorChangingVisitor<T>, int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: invokespecial #80                 // Method checkIndices:(II)V
       6: aload_1
       7: aload_0
       8: invokevirtual #75                 // Method getDimension:()I
      11: iload_2
      12: iload_3
      13: invokeinterface #83,  4           // InterfaceMethod org/apache/commons/math3/linear/FieldVectorChangingVisitor.start:(III)V
      18: iload_2
      19: istore        4
      21: iload         4
      23: iload_3
      24: if_icmpgt     53
      27: aload_0
      28: iload         4
      30: aload_1
      31: iload         4
      33: aload_0
      34: iload         4
      36: invokevirtual #77                 // Method getEntry:(I)Lorg/apache/commons/math3/FieldElement;
      39: invokeinterface #84,  3           // InterfaceMethod org/apache/commons/math3/linear/FieldVectorChangingVisitor.visit:(ILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
      44: invokevirtual #85                 // Method setEntry:(ILorg/apache/commons/math3/FieldElement;)V
      47: iinc          4, 1
      50: goto          21
      53: aload_1
      54: invokeinterface #86,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVectorChangingVisitor.end:()Lorg/apache/commons/math3/FieldElement;
      59: areturn

  public T walkInOptimizedOrder(org.apache.commons.math3.linear.FieldVectorChangingVisitor<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #87                 // Method walkInDefaultOrder:(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
       5: areturn

  public T walkInOptimizedOrder(org.apache.commons.math3.linear.FieldVectorChangingVisitor<T>, int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #88                 // Method walkInDefaultOrder:(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;II)Lorg/apache/commons/math3/FieldElement;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: checkcast     #89                 // class org/apache/commons/math3/linear/FieldVector
      17: astore_2
      18: aload_0
      19: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      22: arraylength
      23: aload_2
      24: invokeinterface #24,  1           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getDimension:()I
      29: if_icmpeq     34
      32: iconst_0
      33: ireturn
      34: iconst_0
      35: istore_3
      36: iload_3
      37: aload_0
      38: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      41: arraylength
      42: if_icmpge     72
      45: aload_0
      46: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
      49: iload_3
      50: aaload
      51: aload_2
      52: iload_3
      53: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/math3/linear/FieldVector.getEntry:(I)Lorg/apache/commons/math3/FieldElement;
      58: invokevirtual #90                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      61: ifne          66
      64: iconst_0
      65: ireturn
      66: iinc          3, 1
      69: goto          36
      72: iconst_1
      73: ireturn
      74: astore_2
      75: iconst_0
      76: ireturn
    Exception table:
       from    to  target type
          13    33    74   Class java/lang/ClassCastException
          34    65    74   Class java/lang/ClassCastException
          66    73    74   Class java/lang/ClassCastException

  public int hashCode();
    Code:
       0: sipush        3542
       3: istore_1
       4: aload_0
       5: getfield      #6                  // Field data:[Lorg/apache/commons/math3/FieldElement;
       8: astore_2
       9: aload_2
      10: arraylength
      11: istore_3
      12: iconst_0
      13: istore        4
      15: iload         4
      17: iload_3
      18: if_icmpge     41
      21: aload_2
      22: iload         4
      24: aaload
      25: astore        5
      27: iload_1
      28: aload         5
      30: invokevirtual #91                 // Method java/lang/Object.hashCode:()I
      33: ixor
      34: istore_1
      35: iinc          4, 1
      38: goto          15
      41: iload_1
      42: ireturn

  private void checkIndex(int) throws org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: iload_1
       1: iflt          12
       4: iload_1
       5: aload_0
       6: invokevirtual #75                 // Method getDimension:()I
       9: if_icmplt     40
      12: new           #92                 // class org/apache/commons/math3/exception/OutOfRangeException
      15: dup
      16: getstatic     #48                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INDEX:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      19: iload_1
      20: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: iconst_0
      24: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: aload_0
      28: invokevirtual #75                 // Method getDimension:()I
      31: iconst_1
      32: isub
      33: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: invokespecial #93                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      39: athrow
      40: return

  private void checkIndices(int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException;
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method getDimension:()I
       4: istore_3
       5: iload_1
       6: iflt          14
       9: iload_1
      10: iload_3
      11: if_icmplt     39
      14: new           #92                 // class org/apache/commons/math3/exception/OutOfRangeException
      17: dup
      18: getstatic     #48                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INDEX:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      21: iload_1
      22: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: iconst_0
      26: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: iload_3
      30: iconst_1
      31: isub
      32: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      35: invokespecial #93                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      38: athrow
      39: iload_2
      40: iflt          48
      43: iload_2
      44: iload_3
      45: if_icmplt     73
      48: new           #92                 // class org/apache/commons/math3/exception/OutOfRangeException
      51: dup
      52: getstatic     #48                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INDEX:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      55: iload_2
      56: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      59: iconst_0
      60: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      63: iload_3
      64: iconst_1
      65: isub
      66: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      69: invokespecial #93                 // Method org/apache/commons/math3/exception/OutOfRangeException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      72: athrow
      73: iload_2
      74: iload_1
      75: if_icmpge     98
      78: new           #94                 // class org/apache/commons/math3/exception/NumberIsTooSmallException
      81: dup
      82: getstatic     #95                 // Field org/apache/commons/math3/exception/util/LocalizedFormats.INITIAL_ROW_AFTER_FINAL_ROW:Lorg/apache/commons/math3/exception/util/LocalizedFormats;
      85: iload_2
      86: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      89: iload_1
      90: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      93: iconst_0
      94: invokespecial #96                 // Method org/apache/commons/math3/exception/NumberIsTooSmallException."<init>":(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
      97: athrow
      98: return
}
