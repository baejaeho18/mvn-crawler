Compiled from "RandomData.java"
public interface org.apache.commons.math3.random.RandomData {
  public abstract java.lang.String nextHexString(int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;

  public abstract int nextInt(int, int) throws org.apache.commons.math3.exception.NumberIsTooLargeException;

  public abstract long nextLong(long, long) throws org.apache.commons.math3.exception.NumberIsTooLargeException;

  public abstract java.lang.String nextSecureHexString(int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;

  public abstract int nextSecureInt(int, int) throws org.apache.commons.math3.exception.NumberIsTooLargeException;

  public abstract long nextSecureLong(long, long) throws org.apache.commons.math3.exception.NumberIsTooLargeException;

  public abstract long nextPoisson(double) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;

  public abstract double nextGaussian(double, double) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;

  public abstract double nextExponential(double) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;

  public abstract double nextUniform(double, double) throws org.apache.commons.math3.exception.NumberIsTooLargeException, org.apache.commons.math3.exception.NotFiniteNumberException, org.apache.commons.math3.exception.NotANumberException;

  public abstract double nextUniform(double, double, boolean) throws org.apache.commons.math3.exception.NumberIsTooLargeException, org.apache.commons.math3.exception.NotFiniteNumberException, org.apache.commons.math3.exception.NotANumberException;

  public abstract int[] nextPermutation(int, int) throws org.apache.commons.math3.exception.NumberIsTooLargeException, org.apache.commons.math3.exception.NotStrictlyPositiveException;

  public abstract java.lang.Object[] nextSample(java.util.Collection<?>, int) throws org.apache.commons.math3.exception.NumberIsTooLargeException, org.apache.commons.math3.exception.NotStrictlyPositiveException;
}
