Compiled from "BaseNCodec.java"
public abstract class org.apache.commons.codec.binary.BaseNCodec implements org.apache.commons.codec.BinaryEncoder,org.apache.commons.codec.BinaryDecoder {
  static final int EOF;

  public static final int MIME_CHUNK_SIZE;

  public static final int PEM_CHUNK_SIZE;

  private static final int DEFAULT_BUFFER_RESIZE_FACTOR;

  private static final int DEFAULT_BUFFER_SIZE;

  protected static final int MASK_8BITS;

  protected static final byte PAD_DEFAULT;

  protected final byte PAD;

  protected final byte pad;

  private final int unencodedBlockSize;

  private final int encodedBlockSize;

  protected final int lineLength;

  private final int chunkSeparatorLength;

  protected org.apache.commons.codec.binary.BaseNCodec(int, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: bipush        61
       8: invokespecial #2                  // Method "<init>":(IIIIB)V
      11: return

  protected org.apache.commons.codec.binary.BaseNCodec(int, int, int, int, byte);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        61
       7: putfield      #4                  // Field PAD:B
      10: aload_0
      11: iload_1
      12: putfield      #5                  // Field unencodedBlockSize:I
      15: aload_0
      16: iload_2
      17: putfield      #6                  // Field encodedBlockSize:I
      20: iload_3
      21: ifle          33
      24: iload         4
      26: ifle          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: istore        6
      36: aload_0
      37: iload         6
      39: ifeq          50
      42: iload_3
      43: iload_2
      44: idiv
      45: iload_2
      46: imul
      47: goto          51
      50: iconst_0
      51: putfield      #7                  // Field lineLength:I
      54: aload_0
      55: iload         4
      57: putfield      #8                  // Field chunkSeparatorLength:I
      60: aload_0
      61: iload         5
      63: putfield      #9                  // Field pad:B
      66: return

  boolean hasData(org.apache.commons.codec.binary.BaseNCodec$Context);
    Code:
       0: aload_1
       1: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  int available(org.apache.commons.codec.binary.BaseNCodec$Context);
    Code:
       0: aload_1
       1: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
       4: ifnull        19
       7: aload_1
       8: getfield      #11                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I
      11: aload_1
      12: getfield      #12                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I
      15: isub
      16: goto          20
      19: iconst_0
      20: ireturn

  protected int getDefaultBufferSize();
    Code:
       0: sipush        8192
       3: ireturn

  private byte[] resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context);
    Code:
       0: aload_1
       1: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
       4: ifnonnull     30
       7: aload_1
       8: aload_0
       9: invokevirtual #13                 // Method getDefaultBufferSize:()I
      12: newarray       byte
      14: putfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
      17: aload_1
      18: iconst_0
      19: putfield      #11                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I
      22: aload_1
      23: iconst_0
      24: putfield      #12                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I
      27: goto          60
      30: aload_1
      31: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
      34: arraylength
      35: iconst_2
      36: imul
      37: newarray       byte
      39: astore_2
      40: aload_1
      41: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
      44: iconst_0
      45: aload_2
      46: iconst_0
      47: aload_1
      48: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
      51: arraylength
      52: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      55: aload_1
      56: aload_2
      57: putfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
      60: aload_1
      61: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
      64: areturn

  protected byte[] ensureBufferSize(int, org.apache.commons.codec.binary.BaseNCodec$Context);
    Code:
       0: aload_2
       1: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
       4: ifnull        21
       7: aload_2
       8: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
      11: arraylength
      12: aload_2
      13: getfield      #11                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I
      16: iload_1
      17: iadd
      18: if_icmpge     27
      21: aload_0
      22: aload_2
      23: invokespecial #15                 // Method resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B
      26: areturn
      27: aload_2
      28: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
      31: areturn

  int readResults(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec$Context);
    Code:
       0: aload         4
       2: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
       5: ifnull        71
       8: aload_0
       9: aload         4
      11: invokevirtual #16                 // Method available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I
      14: iload_3
      15: invokestatic  #17                 // Method java/lang/Math.min:(II)I
      18: istore        5
      20: aload         4
      22: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
      25: aload         4
      27: getfield      #12                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I
      30: aload_1
      31: iload_2
      32: iload         5
      34: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      37: aload         4
      39: dup
      40: getfield      #12                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I
      43: iload         5
      45: iadd
      46: putfield      #12                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I
      49: aload         4
      51: getfield      #12                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I
      54: aload         4
      56: getfield      #11                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I
      59: if_icmplt     68
      62: aload         4
      64: aconst_null
      65: putfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B
      68: iload         5
      70: ireturn
      71: aload         4
      73: getfield      #18                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z
      76: ifeq          83
      79: iconst_m1
      80: goto          84
      83: iconst_0
      84: ireturn

  protected static boolean isWhiteSpace(byte);
    Code:
       0: iload_0
       1: lookupswitch  { // 4
                     9: 44
                    10: 44
                    13: 44
                    32: 44
               default: 46
          }
      44: iconst_1
      45: ireturn
      46: iconst_0
      47: ireturn

  public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException;
    Code:
       0: aload_1
       1: instanceof    #19                 // class "[B"
       4: ifne          17
       7: new           #20                 // class org/apache/commons/codec/EncoderException
      10: dup
      11: ldc           #21                 // String Parameter supplied to Base-N encode is not a byte[]
      13: invokespecial #22                 // Method org/apache/commons/codec/EncoderException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: checkcast     #19                 // class "[B"
      22: checkcast     #19                 // class "[B"
      25: invokevirtual #23                 // Method encode:([B)[B
      28: areturn

  public java.lang.String encodeToString(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method encode:([B)[B
       5: invokestatic  #24                 // Method org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;
       8: areturn

  public java.lang.String encodeAsString(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method encode:([B)[B
       5: invokestatic  #24                 // Method org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;
       8: areturn

  public java.lang.Object decode(java.lang.Object) throws org.apache.commons.codec.DecoderException;
    Code:
       0: aload_1
       1: instanceof    #19                 // class "[B"
       4: ifeq          19
       7: aload_0
       8: aload_1
       9: checkcast     #19                 // class "[B"
      12: checkcast     #19                 // class "[B"
      15: invokevirtual #25                 // Method decode:([B)[B
      18: areturn
      19: aload_1
      20: instanceof    #26                 // class java/lang/String
      23: ifeq          35
      26: aload_0
      27: aload_1
      28: checkcast     #26                 // class java/lang/String
      31: invokevirtual #27                 // Method decode:(Ljava/lang/String;)[B
      34: areturn
      35: new           #28                 // class org/apache/commons/codec/DecoderException
      38: dup
      39: ldc           #29                 // String Parameter supplied to Base-N decode is not a byte[] or a String
      41: invokespecial #30                 // Method org/apache/commons/codec/DecoderException."<init>":(Ljava/lang/String;)V
      44: athrow

  public byte[] decode(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #31                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B
       5: invokevirtual #25                 // Method decode:([B)[B
       8: areturn

  public byte[] decode(byte[]);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_1
       5: arraylength
       6: ifne          11
       9: aload_1
      10: areturn
      11: new           #32                 // class org/apache/commons/codec/binary/BaseNCodec$Context
      14: dup
      15: invokespecial #33                 // Method org/apache/commons/codec/binary/BaseNCodec$Context."<init>":()V
      18: astore_2
      19: aload_0
      20: aload_1
      21: iconst_0
      22: aload_1
      23: arraylength
      24: aload_2
      25: invokevirtual #34                 // Method decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V
      28: aload_0
      29: aload_1
      30: iconst_0
      31: iconst_m1
      32: aload_2
      33: invokevirtual #34                 // Method decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V
      36: aload_2
      37: getfield      #11                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I
      40: newarray       byte
      42: astore_3
      43: aload_0
      44: aload_3
      45: iconst_0
      46: aload_3
      47: arraylength
      48: aload_2
      49: invokevirtual #35                 // Method readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I
      52: pop
      53: aload_3
      54: areturn

  public byte[] encode(byte[]);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_1
       5: arraylength
       6: ifne          11
       9: aload_1
      10: areturn
      11: aload_0
      12: aload_1
      13: iconst_0
      14: aload_1
      15: arraylength
      16: invokevirtual #36                 // Method encode:([BII)[B
      19: areturn

  public byte[] encode(byte[], int, int);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_1
       5: arraylength
       6: ifne          11
       9: aload_1
      10: areturn
      11: new           #32                 // class org/apache/commons/codec/binary/BaseNCodec$Context
      14: dup
      15: invokespecial #33                 // Method org/apache/commons/codec/binary/BaseNCodec$Context."<init>":()V
      18: astore        4
      20: aload_0
      21: aload_1
      22: iload_2
      23: iload_3
      24: aload         4
      26: invokevirtual #37                 // Method encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V
      29: aload_0
      30: aload_1
      31: iload_2
      32: iconst_m1
      33: aload         4
      35: invokevirtual #37                 // Method encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V
      38: aload         4
      40: getfield      #11                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I
      43: aload         4
      45: getfield      #12                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I
      48: isub
      49: newarray       byte
      51: astore        5
      53: aload_0
      54: aload         5
      56: iconst_0
      57: aload         5
      59: arraylength
      60: aload         4
      62: invokevirtual #35                 // Method readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I
      65: pop
      66: aload         5
      68: areturn

  abstract void encode(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec$Context);

  abstract void decode(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec$Context);

  protected abstract boolean isInAlphabet(byte);

  public boolean isInAlphabet(byte[], boolean);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: arraylength
       4: istore        4
       6: iconst_0
       7: istore        5
       9: iload         5
      11: iload         4
      13: if_icmpge     60
      16: aload_3
      17: iload         5
      19: baload
      20: istore        6
      22: aload_0
      23: iload         6
      25: invokevirtual #38                 // Method isInAlphabet:(B)Z
      28: ifne          54
      31: iload_2
      32: ifeq          52
      35: iload         6
      37: aload_0
      38: getfield      #9                  // Field pad:B
      41: if_icmpeq     54
      44: iload         6
      46: invokestatic  #39                 // Method isWhiteSpace:(B)Z
      49: ifne          54
      52: iconst_0
      53: ireturn
      54: iinc          5, 1
      57: goto          9
      60: iconst_1
      61: ireturn

  public boolean isInAlphabet(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #31                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B
       5: iconst_1
       6: invokevirtual #40                 // Method isInAlphabet:([BZ)Z
       9: ireturn

  protected boolean containsAlphabetOrPad(byte[]);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: astore_2
       8: aload_2
       9: arraylength
      10: istore_3
      11: iconst_0
      12: istore        4
      14: iload         4
      16: iload_3
      17: if_icmpge     52
      20: aload_2
      21: iload         4
      23: baload
      24: istore        5
      26: aload_0
      27: getfield      #9                  // Field pad:B
      30: iload         5
      32: if_icmpeq     44
      35: aload_0
      36: iload         5
      38: invokevirtual #38                 // Method isInAlphabet:(B)Z
      41: ifeq          46
      44: iconst_1
      45: ireturn
      46: iinc          4, 1
      49: goto          14
      52: iconst_0
      53: ireturn

  public long getEncodedLength(byte[]);
    Code:
       0: aload_1
       1: arraylength
       2: aload_0
       3: getfield      #5                  // Field unencodedBlockSize:I
       6: iadd
       7: iconst_1
       8: isub
       9: aload_0
      10: getfield      #5                  // Field unencodedBlockSize:I
      13: idiv
      14: i2l
      15: aload_0
      16: getfield      #6                  // Field encodedBlockSize:I
      19: i2l
      20: lmul
      21: lstore_2
      22: aload_0
      23: getfield      #7                  // Field lineLength:I
      26: ifle          53
      29: lload_2
      30: lload_2
      31: aload_0
      32: getfield      #7                  // Field lineLength:I
      35: i2l
      36: ladd
      37: lconst_1
      38: lsub
      39: aload_0
      40: getfield      #7                  // Field lineLength:I
      43: i2l
      44: ldiv
      45: aload_0
      46: getfield      #8                  // Field chunkSeparatorLength:I
      49: i2l
      50: lmul
      51: ladd
      52: lstore_2
      53: lload_2
      54: lreturn
}
