Compiled from "WildcardFilter.java"
public class org.apache.commons.io.filefilter.WildcardFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable {
  private static final long serialVersionUID;

  private final java.lang.String[] wildcards;

  public org.apache.commons.io.filefilter.WildcardFilter(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/io/filefilter/AbstractFileFilter."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String The wildcard must not be null
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: iconst_1
      20: anewarray     #5                  // class java/lang/String
      23: dup
      24: iconst_0
      25: aload_1
      26: aastore
      27: putfield      #6                  // Field wildcards:[Ljava/lang/String;
      30: return

  public org.apache.commons.io.filefilter.WildcardFilter(java.lang.String[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/io/filefilter/AbstractFileFilter."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #7                  // String The wildcard array must not be null
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: arraylength
      21: anewarray     #5                  // class java/lang/String
      24: putfield      #6                  // Field wildcards:[Ljava/lang/String;
      27: aload_1
      28: iconst_0
      29: aload_0
      30: getfield      #6                  // Field wildcards:[Ljava/lang/String;
      33: iconst_0
      34: aload_1
      35: arraylength
      36: invokestatic  #8                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      39: return

  public org.apache.commons.io.filefilter.WildcardFilter(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/io/filefilter/AbstractFileFilter."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #9                  // String The wildcard list must not be null
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: aload_1
      21: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      26: anewarray     #5                  // class java/lang/String
      29: invokeinterface #11,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      34: checkcast     #12                 // class "[Ljava/lang/String;"
      37: putfield      #6                  // Field wildcards:[Ljava/lang/String;
      40: return

  public boolean accept(java.io.File, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        21
       4: new           #13                 // class java/io/File
       7: dup
       8: aload_1
       9: aload_2
      10: invokespecial #14                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      13: invokevirtual #15                 // Method java/io/File.isDirectory:()Z
      16: ifeq          21
      19: iconst_0
      20: ireturn
      21: aload_0
      22: getfield      #6                  // Field wildcards:[Ljava/lang/String;
      25: astore_3
      26: aload_3
      27: arraylength
      28: istore        4
      30: iconst_0
      31: istore        5
      33: iload         5
      35: iload         4
      37: if_icmpge     63
      40: aload_3
      41: iload         5
      43: aaload
      44: astore        6
      46: aload_2
      47: aload         6
      49: invokestatic  #16                 // Method org/apache/commons/io/FilenameUtils.wildcardMatch:(Ljava/lang/String;Ljava/lang/String;)Z
      52: ifeq          57
      55: iconst_1
      56: ireturn
      57: iinc          5, 1
      60: goto          33
      63: iconst_0
      64: ireturn

  public boolean accept(java.io.File);
    Code:
       0: aload_1
       1: invokevirtual #15                 // Method java/io/File.isDirectory:()Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #6                  // Field wildcards:[Ljava/lang/String;
      13: astore_2
      14: aload_2
      15: arraylength
      16: istore_3
      17: iconst_0
      18: istore        4
      20: iload         4
      22: iload_3
      23: if_icmpge     52
      26: aload_2
      27: iload         4
      29: aaload
      30: astore        5
      32: aload_1
      33: invokevirtual #17                 // Method java/io/File.getName:()Ljava/lang/String;
      36: aload         5
      38: invokestatic  #16                 // Method org/apache/commons/io/FilenameUtils.wildcardMatch:(Ljava/lang/String;Ljava/lang/String;)Z
      41: ifeq          46
      44: iconst_1
      45: ireturn
      46: iinc          4, 1
      49: goto          20
      52: iconst_0
      53: ireturn
}
