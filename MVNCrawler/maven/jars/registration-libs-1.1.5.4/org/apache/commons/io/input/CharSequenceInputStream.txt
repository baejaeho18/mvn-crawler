Compiled from "CharSequenceInputStream.java"
public class org.apache.commons.io.input.CharSequenceInputStream extends java.io.InputStream {
  private static final int BUFFER_SIZE;

  private static final int NO_MARK;

  private final java.nio.charset.CharsetEncoder encoder;

  private final java.nio.CharBuffer cbuf;

  private final java.nio.ByteBuffer bbuf;

  private int mark_cbuf;

  private int mark_bbuf;

  public org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence, java.nio.charset.Charset, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: aload_2
       6: invokevirtual #3                  // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
       9: getstatic     #4                  // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
      12: invokevirtual #5                  // Method java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
      15: getstatic     #4                  // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
      18: invokevirtual #6                  // Method java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
      21: putfield      #7                  // Field encoder:Ljava/nio/charset/CharsetEncoder;
      24: aload_0
      25: getfield      #7                  // Field encoder:Ljava/nio/charset/CharsetEncoder;
      28: invokevirtual #8                  // Method java/nio/charset/CharsetEncoder.maxBytesPerChar:()F
      31: fstore        4
      33: iload_3
      34: i2f
      35: fload         4
      37: fcmpg
      38: ifge          78
      41: new           #9                  // class java/lang/IllegalArgumentException
      44: dup
      45: new           #10                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #12                 // String Buffer size
      54: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: iload_3
      58: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      61: ldc           #15                 // String  is less than maxBytesPerChar
      63: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: fload         4
      68: invokevirtual #16                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
      71: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: aload_0
      79: iload_3
      80: invokestatic  #19                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      83: putfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
      86: aload_0
      87: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
      90: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      93: pop
      94: aload_0
      95: aload_1
      96: invokestatic  #22                 // Method java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
      99: putfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
     102: aload_0
     103: iconst_m1
     104: putfield      #25                 // Field mark_cbuf:I
     107: aload_0
     108: iconst_m1
     109: putfield      #26                 // Field mark_bbuf:I
     112: return

  public org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #27                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       6: iload_3
       7: invokespecial #28                 // Method "<init>":(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;I)V
      10: return

  public org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        2048
       6: invokespecial #28                 // Method "<init>":(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;I)V
       9: return

  public org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        2048
       6: invokespecial #29                 // Method "<init>":(Ljava/lang/CharSequence;Ljava/lang/String;I)V
       9: return

  private void fillBuffer() throws java.nio.charset.CharacterCodingException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
       4: invokevirtual #30                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
       7: pop
       8: aload_0
       9: getfield      #7                  // Field encoder:Ljava/nio/charset/CharsetEncoder;
      12: aload_0
      13: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
      16: aload_0
      17: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
      20: iconst_1
      21: invokevirtual #31                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
      24: astore_1
      25: aload_1
      26: invokevirtual #32                 // Method java/nio/charset/CoderResult.isError:()Z
      29: ifeq          36
      32: aload_1
      33: invokevirtual #33                 // Method java/nio/charset/CoderResult.throwException:()V
      36: aload_0
      37: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
      40: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      43: pop
      44: return

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #34                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #35                 // String Byte array is null
      10: invokespecial #36                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_3
      15: iflt          26
      18: iload_2
      19: iload_3
      20: iadd
      21: aload_1
      22: arraylength
      23: if_icmple     72
      26: new           #37                 // class java/lang/IndexOutOfBoundsException
      29: dup
      30: new           #10                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #38                 // String Array Size=
      39: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: arraylength
      44: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      47: ldc           #39                 // String , offset=
      49: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: iload_2
      53: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      56: ldc           #40                 // String , length=
      58: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: iload_3
      62: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      65: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #41                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: iload_3
      73: ifne          78
      76: iconst_0
      77: ireturn
      78: aload_0
      79: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
      82: invokevirtual #42                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      85: ifne          100
      88: aload_0
      89: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
      92: invokevirtual #43                 // Method java/nio/CharBuffer.hasRemaining:()Z
      95: ifne          100
      98: iconst_m1
      99: ireturn
     100: iconst_0
     101: istore        4
     103: iload_3
     104: ifle          189
     107: aload_0
     108: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
     111: invokevirtual #42                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     114: ifeq          162
     117: aload_0
     118: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
     121: invokevirtual #44                 // Method java/nio/ByteBuffer.remaining:()I
     124: iload_3
     125: invokestatic  #45                 // Method java/lang/Math.min:(II)I
     128: istore        5
     130: aload_0
     131: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
     134: aload_1
     135: iload_2
     136: iload         5
     138: invokevirtual #46                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     141: pop
     142: iload_2
     143: iload         5
     145: iadd
     146: istore_2
     147: iload_3
     148: iload         5
     150: isub
     151: istore_3
     152: iload         4
     154: iload         5
     156: iadd
     157: istore        4
     159: goto          103
     162: aload_0
     163: invokespecial #47                 // Method fillBuffer:()V
     166: aload_0
     167: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
     170: invokevirtual #42                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     173: ifne          103
     176: aload_0
     177: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
     180: invokevirtual #43                 // Method java/nio/CharBuffer.hasRemaining:()Z
     183: ifne          103
     186: goto          189
     189: iload         4
     191: ifne          208
     194: aload_0
     195: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
     198: invokevirtual #43                 // Method java/nio/CharBuffer.hasRemaining:()Z
     201: ifne          208
     204: iconst_m1
     205: goto          210
     208: iload         4
     210: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
       4: invokevirtual #42                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       7: ifeq          22
      10: aload_0
      11: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
      14: invokevirtual #48                 // Method java/nio/ByteBuffer.get:()B
      17: sipush        255
      20: iand
      21: ireturn
      22: aload_0
      23: invokespecial #47                 // Method fillBuffer:()V
      26: aload_0
      27: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
      30: invokevirtual #42                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      33: ifne          0
      36: aload_0
      37: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
      40: invokevirtual #43                 // Method java/nio/CharBuffer.hasRemaining:()Z
      43: ifne          0
      46: iconst_m1
      47: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #49                 // Method read:([BII)I
       8: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: lconst_0
       1: lstore_3
       2: lload_1
       3: lconst_0
       4: lcmp
       5: ifle          31
       8: aload_0
       9: invokevirtual #50                 // Method available:()I
      12: ifle          31
      15: aload_0
      16: invokevirtual #51                 // Method read:()I
      19: pop
      20: lload_1
      21: lconst_1
      22: lsub
      23: lstore_1
      24: lload_3
      25: lconst_1
      26: ladd
      27: lstore_3
      28: goto          2
      31: lload_3
      32: lreturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
       4: invokevirtual #44                 // Method java/nio/ByteBuffer.remaining:()I
       7: aload_0
       8: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
      11: invokevirtual #52                 // Method java/nio/CharBuffer.remaining:()I
      14: iadd
      15: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: return

  public synchronized void mark(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
       5: invokevirtual #53                 // Method java/nio/CharBuffer.position:()I
       8: putfield      #25                 // Field mark_cbuf:I
      11: aload_0
      12: aload_0
      13: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
      16: invokevirtual #54                 // Method java/nio/ByteBuffer.position:()I
      19: putfield      #26                 // Field mark_bbuf:I
      22: aload_0
      23: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
      26: invokevirtual #55                 // Method java/nio/CharBuffer.mark:()Ljava/nio/Buffer;
      29: pop
      30: aload_0
      31: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
      34: invokevirtual #56                 // Method java/nio/ByteBuffer.mark:()Ljava/nio/Buffer;
      37: pop
      38: return

  public synchronized void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field mark_cbuf:I
       4: iconst_m1
       5: if_icmpeq     170
       8: aload_0
       9: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
      12: invokevirtual #53                 // Method java/nio/CharBuffer.position:()I
      15: ifeq          89
      18: aload_0
      19: getfield      #7                  // Field encoder:Ljava/nio/charset/CharsetEncoder;
      22: invokevirtual #57                 // Method java/nio/charset/CharsetEncoder.reset:()Ljava/nio/charset/CharsetEncoder;
      25: pop
      26: aload_0
      27: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
      30: invokevirtual #58                 // Method java/nio/CharBuffer.rewind:()Ljava/nio/Buffer;
      33: pop
      34: aload_0
      35: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
      38: invokevirtual #59                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      41: pop
      42: aload_0
      43: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
      46: iconst_0
      47: invokevirtual #60                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      50: pop
      51: aload_0
      52: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
      55: invokevirtual #53                 // Method java/nio/CharBuffer.position:()I
      58: aload_0
      59: getfield      #25                 // Field mark_cbuf:I
      62: if_icmpge     89
      65: aload_0
      66: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
      69: invokevirtual #59                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      72: pop
      73: aload_0
      74: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
      77: iconst_0
      78: invokevirtual #60                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      81: pop
      82: aload_0
      83: invokespecial #47                 // Method fillBuffer:()V
      86: goto          51
      89: aload_0
      90: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
      93: invokevirtual #53                 // Method java/nio/CharBuffer.position:()I
      96: aload_0
      97: getfield      #25                 // Field mark_cbuf:I
     100: if_icmpeq     148
     103: new           #61                 // class java/lang/IllegalStateException
     106: dup
     107: new           #10                 // class java/lang/StringBuilder
     110: dup
     111: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     114: ldc           #62                 // String Unexpected CharBuffer postion: actual=
     116: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: aload_0
     120: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
     123: invokevirtual #53                 // Method java/nio/CharBuffer.position:()I
     126: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     129: ldc           #63                 // String  expected=
     131: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload_0
     135: getfield      #25                 // Field mark_cbuf:I
     138: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     141: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     144: invokespecial #64                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     147: athrow
     148: aload_0
     149: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
     152: aload_0
     153: getfield      #26                 // Field mark_bbuf:I
     156: invokevirtual #65                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     159: pop
     160: aload_0
     161: iconst_m1
     162: putfield      #25                 // Field mark_cbuf:I
     165: aload_0
     166: iconst_m1
     167: putfield      #26                 // Field mark_bbuf:I
     170: return

  public boolean markSupported();
    Code:
       0: iconst_1
       1: ireturn
}
