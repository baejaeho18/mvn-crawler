Compiled from "Library.java"
public final class org.apache.tomcat.jni.Library {
  private static final java.lang.String[] NAMES;

  private static org.apache.tomcat.jni.Library _instance;

  public static int TCN_MAJOR_VERSION;

  public static int TCN_MINOR_VERSION;

  public static int TCN_PATCH_VERSION;

  public static int TCN_IS_DEV_VERSION;

  public static int APR_MAJOR_VERSION;

  public static int APR_MINOR_VERSION;

  public static int APR_PATCH_VERSION;

  public static int APR_IS_DEV_VERSION;

  public static boolean APR_HAVE_IPV6;

  public static boolean APR_HAS_SHARED_MEMORY;

  public static boolean APR_HAS_THREADS;

  public static boolean APR_HAS_SENDFILE;

  public static boolean APR_HAS_MMAP;

  public static boolean APR_HAS_FORK;

  public static boolean APR_HAS_RANDOM;

  public static boolean APR_HAS_OTHER_CHILD;

  public static boolean APR_HAS_DSO;

  public static boolean APR_HAS_SO_ACCEPTFILTER;

  public static boolean APR_HAS_UNICODE_FS;

  public static boolean APR_HAS_PROC_INVOKED;

  public static boolean APR_HAS_USER;

  public static boolean APR_HAS_LARGE_FILES;

  public static boolean APR_HAS_XTHREAD_FILES;

  public static boolean APR_HAS_OS_UUID;

  public static boolean APR_IS_BIGENDIAN;

  public static boolean APR_FILES_AS_SOCKETS;

  public static boolean APR_CHARSET_EBCDIC;

  public static boolean APR_TCP_NODELAY_INHERITED;

  public static boolean APR_O_NONBLOCK_INHERITED;

  public static int APR_SIZEOF_VOIDP;

  public static int APR_PATH_MAX;

  public static int APRMAXHOSTLEN;

  public static int APR_MAX_IOVEC_SIZE;

  public static int APR_MAX_SECS_TO_LINGER;

  public static int APR_MMAP_THRESHOLD;

  public static int APR_MMAP_LIMIT;

  private org.apache.tomcat.jni.Library() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iconst_0
       5: istore_1
       6: ldc           #2                  // String java.library.path
       8: invokestatic  #3                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      11: astore_2
      12: aload_2
      13: getstatic     #4                  // Field java/io/File.pathSeparator:Ljava/lang/String;
      16: invokevirtual #5                  // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      19: astore_3
      20: new           #6                  // class java/lang/StringBuilder
      23: dup
      24: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      27: astore        4
      29: iconst_0
      30: istore        5
      32: iload         5
      34: getstatic     #8                  // Field NAMES:[Ljava/lang/String;
      37: arraylength
      38: if_icmpge     157
      41: getstatic     #8                  // Field NAMES:[Ljava/lang/String;
      44: iload         5
      46: aaload
      47: invokestatic  #9                  // Method java/lang/System.loadLibrary:(Ljava/lang/String;)V
      50: iconst_1
      51: istore_1
      52: goto          144
      55: astore        6
      57: aload         6
      59: athrow
      60: astore        6
      62: aload         6
      64: athrow
      65: astore        6
      67: getstatic     #8                  // Field NAMES:[Ljava/lang/String;
      70: iload         5
      72: aaload
      73: invokestatic  #13                 // Method java/lang/System.mapLibraryName:(Ljava/lang/String;)Ljava/lang/String;
      76: astore        7
      78: iconst_0
      79: istore        8
      81: iload         8
      83: aload_3
      84: arraylength
      85: if_icmpge     120
      88: new           #14                 // class java/io/File
      91: dup
      92: aload_3
      93: iload         8
      95: aaload
      96: aload         7
      98: invokespecial #15                 // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     101: astore        9
     103: aload         9
     105: invokevirtual #16                 // Method java/io/File.exists:()Z
     108: ifeq          114
     111: aload         6
     113: athrow
     114: iinc          8, 1
     117: goto          81
     120: iload         5
     122: ifle          133
     125: aload         4
     127: ldc           #17                 // String ,
     129: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: pop
     133: aload         4
     135: aload         6
     137: invokevirtual #19                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     140: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: pop
     144: iload_1
     145: ifeq          151
     148: goto          157
     151: iinc          5, 1
     154: goto          32
     157: iload_1
     158: ifne          245
     161: new           #6                  // class java/lang/StringBuilder
     164: dup
     165: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
     168: astore        5
     170: getstatic     #8                  // Field NAMES:[Ljava/lang/String;
     173: astore        6
     175: aload         6
     177: arraylength
     178: istore        7
     180: iconst_0
     181: istore        8
     183: iload         8
     185: iload         7
     187: if_icmpge     219
     190: aload         6
     192: iload         8
     194: aaload
     195: astore        9
     197: aload         5
     199: aload         9
     201: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     204: pop
     205: aload         5
     207: ldc           #17                 // String ,
     209: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     212: pop
     213: iinc          8, 1
     216: goto          183
     219: new           #20                 // class org/apache/tomcat/jni/LibraryNotFoundError
     222: dup
     223: aload         5
     225: iconst_0
     226: aload         5
     228: invokevirtual #21                 // Method java/lang/StringBuilder.length:()I
     231: iconst_2
     232: isub
     233: invokevirtual #22                 // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;
     236: aload         4
     238: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     241: invokespecial #24                 // Method org/apache/tomcat/jni/LibraryNotFoundError."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     244: athrow
     245: return
    Exception table:
       from    to  target type
          41    52    55   Class java/lang/ThreadDeath
          41    52    60   Class java/lang/VirtualMachineError
          41    52    65   Class java/lang/Throwable

  private org.apache.tomcat.jni.Library(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #9                  // Method java/lang/System.loadLibrary:(Ljava/lang/String;)V
       8: return

  private static native boolean initialize();

  public static native void terminate();

  private static native boolean has(int);

  private static native int version(int);

  private static native int size(int);

  public static native java.lang.String versionString();

  public static native java.lang.String aprVersionString();

  public static native long globalPool();

  public static synchronized boolean initialize(java.lang.String) throws java.lang.Exception;
    Code:
       0: getstatic     #25                 // Field _instance:Lorg/apache/tomcat/jni/Library;
       3: ifnonnull     364
       6: aload_0
       7: ifnonnull     23
      10: new           #26                 // class org/apache/tomcat/jni/Library
      13: dup
      14: invokespecial #27                 // Method "<init>":()V
      17: putstatic     #25                 // Field _instance:Lorg/apache/tomcat/jni/Library;
      20: goto          34
      23: new           #26                 // class org/apache/tomcat/jni/Library
      26: dup
      27: aload_0
      28: invokespecial #28                 // Method "<init>":(Ljava/lang/String;)V
      31: putstatic     #25                 // Field _instance:Lorg/apache/tomcat/jni/Library;
      34: iconst_1
      35: invokestatic  #29                 // Method version:(I)I
      38: putstatic     #30                 // Field TCN_MAJOR_VERSION:I
      41: iconst_2
      42: invokestatic  #29                 // Method version:(I)I
      45: putstatic     #31                 // Field TCN_MINOR_VERSION:I
      48: iconst_3
      49: invokestatic  #29                 // Method version:(I)I
      52: putstatic     #32                 // Field TCN_PATCH_VERSION:I
      55: iconst_4
      56: invokestatic  #29                 // Method version:(I)I
      59: putstatic     #33                 // Field TCN_IS_DEV_VERSION:I
      62: bipush        17
      64: invokestatic  #29                 // Method version:(I)I
      67: putstatic     #34                 // Field APR_MAJOR_VERSION:I
      70: bipush        18
      72: invokestatic  #29                 // Method version:(I)I
      75: putstatic     #35                 // Field APR_MINOR_VERSION:I
      78: bipush        19
      80: invokestatic  #29                 // Method version:(I)I
      83: putstatic     #36                 // Field APR_PATCH_VERSION:I
      86: bipush        20
      88: invokestatic  #29                 // Method version:(I)I
      91: putstatic     #37                 // Field APR_IS_DEV_VERSION:I
      94: iconst_1
      95: invokestatic  #38                 // Method size:(I)I
      98: putstatic     #39                 // Field APR_SIZEOF_VOIDP:I
     101: iconst_2
     102: invokestatic  #38                 // Method size:(I)I
     105: putstatic     #40                 // Field APR_PATH_MAX:I
     108: iconst_3
     109: invokestatic  #38                 // Method size:(I)I
     112: putstatic     #41                 // Field APRMAXHOSTLEN:I
     115: iconst_4
     116: invokestatic  #38                 // Method size:(I)I
     119: putstatic     #42                 // Field APR_MAX_IOVEC_SIZE:I
     122: iconst_5
     123: invokestatic  #38                 // Method size:(I)I
     126: putstatic     #43                 // Field APR_MAX_SECS_TO_LINGER:I
     129: bipush        6
     131: invokestatic  #38                 // Method size:(I)I
     134: putstatic     #44                 // Field APR_MMAP_THRESHOLD:I
     137: bipush        7
     139: invokestatic  #38                 // Method size:(I)I
     142: putstatic     #45                 // Field APR_MMAP_LIMIT:I
     145: iconst_0
     146: invokestatic  #46                 // Method has:(I)Z
     149: putstatic     #47                 // Field APR_HAVE_IPV6:Z
     152: iconst_1
     153: invokestatic  #46                 // Method has:(I)Z
     156: putstatic     #48                 // Field APR_HAS_SHARED_MEMORY:Z
     159: iconst_2
     160: invokestatic  #46                 // Method has:(I)Z
     163: putstatic     #49                 // Field APR_HAS_THREADS:Z
     166: iconst_3
     167: invokestatic  #46                 // Method has:(I)Z
     170: putstatic     #50                 // Field APR_HAS_SENDFILE:Z
     173: iconst_4
     174: invokestatic  #46                 // Method has:(I)Z
     177: putstatic     #51                 // Field APR_HAS_MMAP:Z
     180: iconst_5
     181: invokestatic  #46                 // Method has:(I)Z
     184: putstatic     #52                 // Field APR_HAS_FORK:Z
     187: bipush        6
     189: invokestatic  #46                 // Method has:(I)Z
     192: putstatic     #53                 // Field APR_HAS_RANDOM:Z
     195: bipush        7
     197: invokestatic  #46                 // Method has:(I)Z
     200: putstatic     #54                 // Field APR_HAS_OTHER_CHILD:Z
     203: bipush        8
     205: invokestatic  #46                 // Method has:(I)Z
     208: putstatic     #55                 // Field APR_HAS_DSO:Z
     211: bipush        9
     213: invokestatic  #46                 // Method has:(I)Z
     216: putstatic     #56                 // Field APR_HAS_SO_ACCEPTFILTER:Z
     219: bipush        10
     221: invokestatic  #46                 // Method has:(I)Z
     224: putstatic     #57                 // Field APR_HAS_UNICODE_FS:Z
     227: bipush        11
     229: invokestatic  #46                 // Method has:(I)Z
     232: putstatic     #58                 // Field APR_HAS_PROC_INVOKED:Z
     235: bipush        12
     237: invokestatic  #46                 // Method has:(I)Z
     240: putstatic     #59                 // Field APR_HAS_USER:Z
     243: bipush        13
     245: invokestatic  #46                 // Method has:(I)Z
     248: putstatic     #60                 // Field APR_HAS_LARGE_FILES:Z
     251: bipush        14
     253: invokestatic  #46                 // Method has:(I)Z
     256: putstatic     #61                 // Field APR_HAS_XTHREAD_FILES:Z
     259: bipush        15
     261: invokestatic  #46                 // Method has:(I)Z
     264: putstatic     #62                 // Field APR_HAS_OS_UUID:Z
     267: bipush        16
     269: invokestatic  #46                 // Method has:(I)Z
     272: putstatic     #63                 // Field APR_IS_BIGENDIAN:Z
     275: bipush        17
     277: invokestatic  #46                 // Method has:(I)Z
     280: putstatic     #64                 // Field APR_FILES_AS_SOCKETS:Z
     283: bipush        18
     285: invokestatic  #46                 // Method has:(I)Z
     288: putstatic     #65                 // Field APR_CHARSET_EBCDIC:Z
     291: bipush        19
     293: invokestatic  #46                 // Method has:(I)Z
     296: putstatic     #66                 // Field APR_TCP_NODELAY_INHERITED:Z
     299: bipush        20
     301: invokestatic  #46                 // Method has:(I)Z
     304: putstatic     #67                 // Field APR_O_NONBLOCK_INHERITED:Z
     307: getstatic     #34                 // Field APR_MAJOR_VERSION:I
     310: iconst_1
     311: if_icmpge     348
     314: new           #68                 // class java/lang/UnsatisfiedLinkError
     317: dup
     318: new           #6                  // class java/lang/StringBuilder
     321: dup
     322: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
     325: ldc           #69                 // String Unsupported APR Version (
     327: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     330: invokestatic  #70                 // Method aprVersionString:()Ljava/lang/String;
     333: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     336: ldc           #71                 // String )
     338: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     341: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     344: invokespecial #72                 // Method java/lang/UnsatisfiedLinkError."<init>":(Ljava/lang/String;)V
     347: athrow
     348: getstatic     #49                 // Field APR_HAS_THREADS:Z
     351: ifne          364
     354: new           #68                 // class java/lang/UnsatisfiedLinkError
     357: dup
     358: ldc           #73                 // String Missing threading support from APR
     360: invokespecial #72                 // Method java/lang/UnsatisfiedLinkError."<init>":(Ljava/lang/String;)V
     363: athrow
     364: invokestatic  #74                 // Method initialize:()Z
     367: ireturn

  public static void load(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #75                 // Method java/lang/System.load:(Ljava/lang/String;)V
       4: return

  public static void loadLibrary(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method java/lang/System.loadLibrary:(Ljava/lang/String;)V
       4: return

  static {};
    Code:
       0: iconst_2
       1: anewarray     #76                 // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #77                 // String tcnative-1
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #78                 // String libtcnative-1
      13: aastore
      14: putstatic     #8                  // Field NAMES:[Ljava/lang/String;
      17: aconst_null
      18: putstatic     #25                 // Field _instance:Lorg/apache/tomcat/jni/Library;
      21: iconst_0
      22: putstatic     #30                 // Field TCN_MAJOR_VERSION:I
      25: iconst_0
      26: putstatic     #31                 // Field TCN_MINOR_VERSION:I
      29: iconst_0
      30: putstatic     #32                 // Field TCN_PATCH_VERSION:I
      33: iconst_0
      34: putstatic     #33                 // Field TCN_IS_DEV_VERSION:I
      37: iconst_0
      38: putstatic     #34                 // Field APR_MAJOR_VERSION:I
      41: iconst_0
      42: putstatic     #35                 // Field APR_MINOR_VERSION:I
      45: iconst_0
      46: putstatic     #36                 // Field APR_PATCH_VERSION:I
      49: iconst_0
      50: putstatic     #37                 // Field APR_IS_DEV_VERSION:I
      53: iconst_0
      54: putstatic     #47                 // Field APR_HAVE_IPV6:Z
      57: iconst_0
      58: putstatic     #48                 // Field APR_HAS_SHARED_MEMORY:Z
      61: iconst_0
      62: putstatic     #49                 // Field APR_HAS_THREADS:Z
      65: iconst_0
      66: putstatic     #50                 // Field APR_HAS_SENDFILE:Z
      69: iconst_0
      70: putstatic     #51                 // Field APR_HAS_MMAP:Z
      73: iconst_0
      74: putstatic     #52                 // Field APR_HAS_FORK:Z
      77: iconst_0
      78: putstatic     #53                 // Field APR_HAS_RANDOM:Z
      81: iconst_0
      82: putstatic     #54                 // Field APR_HAS_OTHER_CHILD:Z
      85: iconst_0
      86: putstatic     #55                 // Field APR_HAS_DSO:Z
      89: iconst_0
      90: putstatic     #56                 // Field APR_HAS_SO_ACCEPTFILTER:Z
      93: iconst_0
      94: putstatic     #57                 // Field APR_HAS_UNICODE_FS:Z
      97: iconst_0
      98: putstatic     #58                 // Field APR_HAS_PROC_INVOKED:Z
     101: iconst_0
     102: putstatic     #59                 // Field APR_HAS_USER:Z
     105: iconst_0
     106: putstatic     #60                 // Field APR_HAS_LARGE_FILES:Z
     109: iconst_0
     110: putstatic     #61                 // Field APR_HAS_XTHREAD_FILES:Z
     113: iconst_0
     114: putstatic     #62                 // Field APR_HAS_OS_UUID:Z
     117: iconst_0
     118: putstatic     #63                 // Field APR_IS_BIGENDIAN:Z
     121: iconst_0
     122: putstatic     #64                 // Field APR_FILES_AS_SOCKETS:Z
     125: iconst_0
     126: putstatic     #65                 // Field APR_CHARSET_EBCDIC:Z
     129: iconst_0
     130: putstatic     #66                 // Field APR_TCP_NODELAY_INHERITED:Z
     133: iconst_0
     134: putstatic     #67                 // Field APR_O_NONBLOCK_INHERITED:Z
     137: return
}
