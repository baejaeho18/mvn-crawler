Compiled from "ByteBufferHolder.java"
public class org.apache.tomcat.util.buf.ByteBufferHolder {
  private final java.nio.ByteBuffer buf;

  private final java.util.concurrent.atomic.AtomicBoolean flipped;

  public org.apache.tomcat.util.buf.ByteBufferHolder(java.nio.ByteBuffer, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field buf:Ljava/nio/ByteBuffer;
       9: aload_0
      10: new           #3                  // class java/util/concurrent/atomic/AtomicBoolean
      13: dup
      14: iload_2
      15: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      18: putfield      #5                  // Field flipped:Ljava/util/concurrent/atomic/AtomicBoolean;
      21: return

  public java.nio.ByteBuffer getBuf();
    Code:
       0: aload_0
       1: getfield      #2                  // Field buf:Ljava/nio/ByteBuffer;
       4: areturn

  public boolean isFlipped();
    Code:
       0: aload_0
       1: getfield      #5                  // Field flipped:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public boolean flip();
    Code:
       0: aload_0
       1: getfield      #5                  // Field flipped:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          22
      12: aload_0
      13: getfield      #2                  // Field buf:Ljava/nio/ByteBuffer;
      16: invokevirtual #8                  // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      19: pop
      20: iconst_1
      21: ireturn
      22: iconst_0
      23: ireturn
}
