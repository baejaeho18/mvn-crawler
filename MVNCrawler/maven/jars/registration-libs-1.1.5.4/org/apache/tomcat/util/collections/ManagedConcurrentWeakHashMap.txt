Compiled from "ManagedConcurrentWeakHashMap.java"
public class org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap<K, V> extends java.util.AbstractMap<K, V> implements java.util.concurrent.ConcurrentMap<K, V> {
  private final java.util.concurrent.ConcurrentMap<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key, V> map;

  private final java.lang.ref.ReferenceQueue<java.lang.Object> queue;

  public org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/util/AbstractMap."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: new           #5                  // class java/lang/ref/ReferenceQueue
      19: dup
      20: invokespecial #6                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      23: putfield      #7                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      26: return

  public void maintain();
    Code:
       0: aload_0
       1: getfield      #7                  // Field queue:Ljava/lang/ref/ReferenceQueue;
       4: invokevirtual #8                  // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       7: checkcast     #9                  // class org/apache/tomcat/util/collections/ManagedConcurrentWeakHashMap$Key
      10: dup
      11: astore_1
      12: ifnull        43
      15: aload_1
      16: invokevirtual #10                 // Method org/apache/tomcat/util/collections/ManagedConcurrentWeakHashMap$Key.isDead:()Z
      19: ifeq          25
      22: goto          0
      25: aload_1
      26: invokevirtual #11                 // Method org/apache/tomcat/util/collections/ManagedConcurrentWeakHashMap$Key.ackDeath:()V
      29: aload_0
      30: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      33: aload_1
      34: invokeinterface #12,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: goto          0
      43: return

  private org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key createStoreKey(java.lang.Object);
    Code:
       0: new           #9                  // class org/apache/tomcat/util/collections/ManagedConcurrentWeakHashMap$Key
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #7                  // Field queue:Ljava/lang/ref/ReferenceQueue;
       9: invokespecial #13                 // Method org/apache/tomcat/util/collections/ManagedConcurrentWeakHashMap$Key."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      12: areturn

  private org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key createLookupKey(java.lang.Object);
    Code:
       0: new           #9                  // class org/apache/tomcat/util/collections/ManagedConcurrentWeakHashMap$Key
       3: dup
       4: aload_1
       5: aconst_null
       6: invokespecial #13                 // Method org/apache/tomcat/util/collections/ManagedConcurrentWeakHashMap$Key."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
       9: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.isEmpty:()Z
       9: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      10: aload_1
      11: invokeinterface #16,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsValue:(Ljava/lang/Object;)Z
      16: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      10: aload_0
      11: aload_1
      12: invokespecial #17                 // Method createLookupKey:(Ljava/lang/Object;)Lorg/apache/tomcat/util/collections/ManagedConcurrentWeakHashMap$Key;
      15: invokeinterface #18,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      20: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      10: aload_0
      11: aload_1
      12: invokespecial #17                 // Method createLookupKey:(Ljava/lang/Object;)Lorg/apache/tomcat/util/collections/ManagedConcurrentWeakHashMap$Key;
      15: invokeinterface #19,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn

  public V put(K, V);
    Code:
       0: aload_2
       1: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       9: aload_0
      10: aload_1
      11: invokespecial #21                 // Method createStoreKey:(Ljava/lang/Object;)Lorg/apache/tomcat/util/collections/ManagedConcurrentWeakHashMap$Key;
      14: aload_2
      15: invokeinterface #22,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: aload_0
       5: aload_1
       6: invokespecial #17                 // Method createLookupKey:(Ljava/lang/Object;)Lorg/apache/tomcat/util/collections/ManagedConcurrentWeakHashMap$Key;
       9: invokeinterface #12,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: aload_0
      10: invokevirtual #24                 // Method maintain:()V
      13: return

  public V putIfAbsent(K, V);
    Code:
       0: aload_2
       1: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokespecial #21                 // Method createStoreKey:(Ljava/lang/Object;)Lorg/apache/tomcat/util/collections/ManagedConcurrentWeakHashMap$Key;
      10: astore_3
      11: aload_0
      12: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      15: aload_3
      16: aload_2
      17: invokeinterface #25,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: astore        4
      24: aload         4
      26: ifnull        33
      29: aload_3
      30: invokevirtual #11                 // Method org/apache/tomcat/util/collections/ManagedConcurrentWeakHashMap$Key.ackDeath:()V
      33: aload         4
      35: areturn

  public boolean remove(java.lang.Object, java.lang.Object);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      10: aload_0
      11: aload_1
      12: invokespecial #17                 // Method createLookupKey:(Ljava/lang/Object;)Lorg/apache/tomcat/util/collections/ManagedConcurrentWeakHashMap$Key;
      15: aload_2
      16: invokeinterface #26,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      21: ireturn

  public boolean replace(K, V, V);
    Code:
       0: aload_3
       1: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       9: aload_0
      10: aload_1
      11: invokespecial #17                 // Method createLookupKey:(Ljava/lang/Object;)Lorg/apache/tomcat/util/collections/ManagedConcurrentWeakHashMap$Key;
      14: aload_2
      15: aload_3
      16: invokeinterface #27,  4           // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      21: ireturn

  public V replace(K, V);
    Code:
       0: aload_2
       1: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       9: aload_0
      10: aload_1
      11: invokespecial #17                 // Method createLookupKey:(Ljava/lang/Object;)Lorg/apache/tomcat/util/collections/ManagedConcurrentWeakHashMap$Key;
      14: aload_2
      15: invokeinterface #28,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: areturn

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: new           #30                 // class org/apache/tomcat/util/collections/ManagedConcurrentWeakHashMap$1
       3: dup
       4: aload_0
       5: invokespecial #31                 // Method org/apache/tomcat/util/collections/ManagedConcurrentWeakHashMap$1."<init>":(Lorg/apache/tomcat/util/collections/ManagedConcurrentWeakHashMap;)V
       8: areturn

  static java.util.concurrent.ConcurrentMap access$000(org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: areturn
}
