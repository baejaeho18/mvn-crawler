Compiled from "SecureNio2Channel.java"
class org.apache.tomcat.util.net.SecureNio2Channel$FutureWrite implements java.util.concurrent.Future<java.lang.Integer> {
  private final java.nio.ByteBuffer src;

  private java.util.concurrent.Future<java.lang.Integer> integer;

  private int written;

  private java.lang.Throwable t;

  final org.apache.tomcat.util.net.SecureNio2Channel this$0;

  private org.apache.tomcat.util.net.SecureNio2Channel$FutureWrite(org.apache.tomcat.util.net.SecureNio2Channel, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aconst_null
      11: putfield      #4                  // Field integer:Ljava/util/concurrent/Future;
      14: aload_0
      15: iconst_0
      16: putfield      #5                  // Field written:I
      19: aload_0
      20: aconst_null
      21: putfield      #6                  // Field t:Ljava/lang/Throwable;
      24: aload_0
      25: aload_2
      26: putfield      #7                  // Field src:Ljava/nio/ByteBuffer;
      29: aload_1
      30: getfield      #8                  // Field org/apache/tomcat/util/net/SecureNio2Channel.closing:Z
      33: ifne          43
      36: aload_1
      37: getfield      #9                  // Field org/apache/tomcat/util/net/SecureNio2Channel.closed:Z
      40: ifeq          65
      43: aload_0
      44: new           #10                 // class java/io/IOException
      47: dup
      48: invokestatic  #11                 // Method org/apache/tomcat/util/net/SecureNio2Channel.access$300:()Lorg/apache/tomcat/util/res/StringManager;
      51: ldc           #12                 // String channel.nio.ssl.closing
      53: invokevirtual #13                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;)Ljava/lang/String;
      56: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      59: putfield      #6                  // Field t:Ljava/lang/Throwable;
      62: goto          69
      65: aload_0
      66: invokevirtual #15                 // Method wrap:()V
      69: return

  public boolean cancel(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field integer:Ljava/util/concurrent/Future;
       4: iload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      10: ireturn

  public boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #4                  // Field integer:Ljava/util/concurrent/Future;
       4: invokeinterface #17,  1           // InterfaceMethod java/util/concurrent/Future.isCancelled:()Z
       9: ireturn

  public boolean isDone();
    Code:
       0: aload_0
       1: getfield      #4                  // Field integer:Ljava/util/concurrent/Future;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/Future.isDone:()Z
       9: ireturn

  public java.lang.Integer get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field t:Ljava/lang/Throwable;
       4: ifnull        19
       7: new           #19                 // class java/util/concurrent/ExecutionException
      10: dup
      11: aload_0
      12: getfield      #6                  // Field t:Ljava/lang/Throwable;
      15: invokespecial #20                 // Method java/util/concurrent/ExecutionException."<init>":(Ljava/lang/Throwable;)V
      18: athrow
      19: aload_0
      20: getfield      #4                  // Field integer:Ljava/util/concurrent/Future;
      23: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
      28: checkcast     #22                 // class java/lang/Integer
      31: invokevirtual #23                 // Method java/lang/Integer.intValue:()I
      34: ifle          53
      37: aload_0
      38: getfield      #5                  // Field written:I
      41: ifne          53
      44: aload_0
      45: invokevirtual #15                 // Method wrap:()V
      48: aload_0
      49: invokevirtual #24                 // Method get:()Ljava/lang/Integer;
      52: areturn
      53: aload_0
      54: getfield      #2                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
      57: getfield      #25                 // Field org/apache/tomcat/util/net/SecureNio2Channel.netOutBuffer:Ljava/nio/ByteBuffer;
      60: invokevirtual #26                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      63: ifeq          92
      66: aload_0
      67: aload_0
      68: getfield      #2                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
      71: getfield      #27                 // Field org/apache/tomcat/util/net/SecureNio2Channel.sc:Ljava/nio/channels/AsynchronousSocketChannel;
      74: aload_0
      75: getfield      #2                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
      78: getfield      #25                 // Field org/apache/tomcat/util/net/SecureNio2Channel.netOutBuffer:Ljava/nio/ByteBuffer;
      81: invokevirtual #28                 // Method java/nio/channels/AsynchronousSocketChannel.write:(Ljava/nio/ByteBuffer;)Ljava/util/concurrent/Future;
      84: putfield      #4                  // Field integer:Ljava/util/concurrent/Future;
      87: aload_0
      88: invokevirtual #24                 // Method get:()Ljava/lang/Integer;
      91: areturn
      92: aload_0
      93: getfield      #5                  // Field written:I
      96: invokestatic  #29                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      99: areturn

  public java.lang.Integer get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field t:Ljava/lang/Throwable;
       4: ifnull        19
       7: new           #19                 // class java/util/concurrent/ExecutionException
      10: dup
      11: aload_0
      12: getfield      #6                  // Field t:Ljava/lang/Throwable;
      15: invokespecial #20                 // Method java/util/concurrent/ExecutionException."<init>":(Ljava/lang/Throwable;)V
      18: athrow
      19: aload_0
      20: getfield      #4                  // Field integer:Ljava/util/concurrent/Future;
      23: lload_1
      24: aload_3
      25: invokeinterface #30,  4           // InterfaceMethod java/util/concurrent/Future.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      30: checkcast     #22                 // class java/lang/Integer
      33: invokevirtual #23                 // Method java/lang/Integer.intValue:()I
      36: ifle          57
      39: aload_0
      40: getfield      #5                  // Field written:I
      43: ifne          57
      46: aload_0
      47: invokevirtual #15                 // Method wrap:()V
      50: aload_0
      51: lload_1
      52: aload_3
      53: invokevirtual #31                 // Method get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Integer;
      56: areturn
      57: aload_0
      58: getfield      #2                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
      61: getfield      #25                 // Field org/apache/tomcat/util/net/SecureNio2Channel.netOutBuffer:Ljava/nio/ByteBuffer;
      64: invokevirtual #26                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      67: ifeq          98
      70: aload_0
      71: aload_0
      72: getfield      #2                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
      75: getfield      #27                 // Field org/apache/tomcat/util/net/SecureNio2Channel.sc:Ljava/nio/channels/AsynchronousSocketChannel;
      78: aload_0
      79: getfield      #2                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
      82: getfield      #25                 // Field org/apache/tomcat/util/net/SecureNio2Channel.netOutBuffer:Ljava/nio/ByteBuffer;
      85: invokevirtual #28                 // Method java/nio/channels/AsynchronousSocketChannel.write:(Ljava/nio/ByteBuffer;)Ljava/util/concurrent/Future;
      88: putfield      #4                  // Field integer:Ljava/util/concurrent/Future;
      91: aload_0
      92: lload_1
      93: aload_3
      94: invokevirtual #31                 // Method get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Integer;
      97: areturn
      98: aload_0
      99: getfield      #5                  // Field written:I
     102: invokestatic  #29                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     105: areturn

  protected void wrap();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
       4: getfield      #25                 // Field org/apache/tomcat/util/net/SecureNio2Channel.netOutBuffer:Ljava/nio/ByteBuffer;
       7: invokevirtual #26                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      10: ifne          126
      13: aload_0
      14: getfield      #2                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
      17: getfield      #25                 // Field org/apache/tomcat/util/net/SecureNio2Channel.netOutBuffer:Ljava/nio/ByteBuffer;
      20: invokevirtual #32                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      23: pop
      24: aload_0
      25: getfield      #2                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
      28: getfield      #33                 // Field org/apache/tomcat/util/net/SecureNio2Channel.sslEngine:Ljavax/net/ssl/SSLEngine;
      31: aload_0
      32: getfield      #7                  // Field src:Ljava/nio/ByteBuffer;
      35: aload_0
      36: getfield      #2                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
      39: getfield      #25                 // Field org/apache/tomcat/util/net/SecureNio2Channel.netOutBuffer:Ljava/nio/ByteBuffer;
      42: invokevirtual #34                 // Method javax/net/ssl/SSLEngine.wrap:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
      45: astore_1
      46: aload_0
      47: aload_1
      48: invokevirtual #35                 // Method javax/net/ssl/SSLEngineResult.bytesConsumed:()I
      51: putfield      #5                  // Field written:I
      54: aload_0
      55: getfield      #2                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
      58: getfield      #25                 // Field org/apache/tomcat/util/net/SecureNio2Channel.netOutBuffer:Ljava/nio/ByteBuffer;
      61: invokevirtual #36                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      64: pop
      65: aload_1
      66: invokevirtual #37                 // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
      69: getstatic     #38                 // Field javax/net/ssl/SSLEngineResult$Status.OK:Ljavax/net/ssl/SSLEngineResult$Status;
      72: if_acmpne     96
      75: aload_1
      76: invokevirtual #39                 // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
      79: getstatic     #40                 // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.NEED_TASK:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
      82: if_acmpne     126
      85: aload_0
      86: getfield      #2                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
      89: invokevirtual #41                 // Method org/apache/tomcat/util/net/SecureNio2Channel.tasks:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
      92: pop
      93: goto          126
      96: aload_0
      97: new           #10                 // class java/io/IOException
     100: dup
     101: invokestatic  #11                 // Method org/apache/tomcat/util/net/SecureNio2Channel.access$300:()Lorg/apache/tomcat/util/res/StringManager;
     104: ldc           #42                 // String channel.nio.ssl.wrapFail
     106: iconst_1
     107: anewarray     #43                 // class java/lang/Object
     110: dup
     111: iconst_0
     112: aload_1
     113: invokevirtual #37                 // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     116: aastore
     117: invokevirtual #44                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     120: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     123: putfield      #6                  // Field t:Ljava/lang/Throwable;
     126: aload_0
     127: aload_0
     128: getfield      #2                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
     131: getfield      #27                 // Field org/apache/tomcat/util/net/SecureNio2Channel.sc:Ljava/nio/channels/AsynchronousSocketChannel;
     134: aload_0
     135: getfield      #2                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
     138: getfield      #25                 // Field org/apache/tomcat/util/net/SecureNio2Channel.netOutBuffer:Ljava/nio/ByteBuffer;
     141: invokevirtual #28                 // Method java/nio/channels/AsynchronousSocketChannel.write:(Ljava/nio/ByteBuffer;)Ljava/util/concurrent/Future;
     144: putfield      #4                  // Field integer:Ljava/util/concurrent/Future;
     147: goto          156
     150: astore_1
     151: aload_0
     152: aload_1
     153: putfield      #6                  // Field t:Ljava/lang/Throwable;
     156: return
    Exception table:
       from    to  target type
           0   147   150   Class javax/net/ssl/SSLException

  public java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: invokevirtual #31                 // Method get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Integer;
       6: areturn

  public java.lang.Object get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method get:()Ljava/lang/Integer;
       4: areturn

  org.apache.tomcat.util.net.SecureNio2Channel$FutureWrite(org.apache.tomcat.util.net.SecureNio2Channel, java.nio.ByteBuffer, org.apache.tomcat.util.net.SecureNio2Channel$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method "<init>":(Lorg/apache/tomcat/util/net/SecureNio2Channel;Ljava/nio/ByteBuffer;)V
       6: return
}
