Compiled from "NioChannel.java"
public class org.apache.tomcat.util.net.NioChannel implements java.nio.channels.ByteChannel,java.nio.channels.ScatteringByteChannel,java.nio.channels.GatheringByteChannel {
  protected static final org.apache.tomcat.util.res.StringManager sm;

  protected static final java.nio.ByteBuffer emptyBuf;

  protected java.nio.channels.SocketChannel sc;

  protected org.apache.tomcat.util.net.SocketWrapperBase<org.apache.tomcat.util.net.NioChannel> socketWrapper;

  protected final org.apache.tomcat.util.net.SocketBufferHandler bufHandler;

  protected org.apache.tomcat.util.net.NioEndpoint$Poller poller;

  private org.apache.tomcat.util.net.ApplicationBufferHandler appReadBufHandler;

  public org.apache.tomcat.util.net.NioChannel(java.nio.channels.SocketChannel, org.apache.tomcat.util.net.SocketBufferHandler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field sc:Ljava/nio/channels/SocketChannel;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field socketWrapper:Lorg/apache/tomcat/util/net/SocketWrapperBase;
      14: aload_0
      15: aload_1
      16: putfield      #2                  // Field sc:Ljava/nio/channels/SocketChannel;
      19: aload_0
      20: aload_2
      21: putfield      #4                  // Field bufHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      24: return

  public void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field bufHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
       4: invokevirtual #5                  // Method org/apache/tomcat/util/net/SocketBufferHandler.reset:()V
       7: return

  void setSocketWrapper(org.apache.tomcat.util.net.SocketWrapperBase<org.apache.tomcat.util.net.NioChannel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field socketWrapper:Lorg/apache/tomcat/util/net/SocketWrapperBase;
       5: return

  public void free();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bufHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
       4: invokevirtual #6                  // Method org/apache/tomcat/util/net/SocketBufferHandler.free:()V
       7: return

  public boolean flush(boolean, java.nio.channels.Selector, long) throws java.io.IOException;
    Code:
       0: iconst_1
       1: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getIOChannel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #8                  // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
       7: invokevirtual #9                  // Method java/net/Socket.close:()V
      10: aload_0
      11: invokevirtual #7                  // Method getIOChannel:()Ljava/nio/channels/SocketChannel;
      14: invokevirtual #10                 // Method java/nio/channels/SocketChannel.close:()V
      17: return

  public void close(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method isOpen:()Z
       4: ifne          11
       7: iload_1
       8: ifeq          15
      11: aload_0
      12: invokevirtual #12                 // Method close:()V
      15: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #2                  // Field sc:Ljava/nio/channels/SocketChannel;
       4: invokevirtual #13                 // Method java/nio/channels/SocketChannel.isOpen:()Z
       7: ireturn

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method checkInterruptStatus:()V
       4: aload_0
       5: getfield      #2                  // Field sc:Ljava/nio/channels/SocketChannel;
       8: aload_1
       9: invokevirtual #15                 // Method java/nio/channels/SocketChannel.write:(Ljava/nio/ByteBuffer;)I
      12: ireturn

  public long write(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #16                 // Method write:([Ljava/nio/ByteBuffer;II)J
       8: lreturn

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method checkInterruptStatus:()V
       4: aload_0
       5: getfield      #2                  // Field sc:Ljava/nio/channels/SocketChannel;
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokevirtual #17                 // Method java/nio/channels/SocketChannel.write:([Ljava/nio/ByteBuffer;II)J
      14: lreturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field sc:Ljava/nio/channels/SocketChannel;
       4: aload_1
       5: invokevirtual #18                 // Method java/nio/channels/SocketChannel.read:(Ljava/nio/ByteBuffer;)I
       8: ireturn

  public long read(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #19                 // Method read:([Ljava/nio/ByteBuffer;II)J
       8: lreturn

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field sc:Ljava/nio/channels/SocketChannel;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #20                 // Method java/nio/channels/SocketChannel.read:([Ljava/nio/ByteBuffer;II)J
      10: lreturn

  public java.lang.Object getAttachment();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getPoller:()Lorg/apache/tomcat/util/net/NioEndpoint$Poller;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #22                 // Method org/apache/tomcat/util/net/NioEndpoint$Poller.getSelector:()Ljava/nio/channels/Selector;
      13: goto          17
      16: aconst_null
      17: astore_2
      18: aload_2
      19: ifnull        33
      22: aload_0
      23: invokevirtual #7                  // Method getIOChannel:()Ljava/nio/channels/SocketChannel;
      26: aload_2
      27: invokevirtual #23                 // Method java/nio/channels/SocketChannel.keyFor:(Ljava/nio/channels/Selector;)Ljava/nio/channels/SelectionKey;
      30: goto          34
      33: aconst_null
      34: astore_3
      35: aload_3
      36: ifnull        46
      39: aload_3
      40: invokevirtual #24                 // Method java/nio/channels/SelectionKey.attachment:()Ljava/lang/Object;
      43: goto          47
      46: aconst_null
      47: astore        4
      49: aload         4
      51: areturn

  public org.apache.tomcat.util.net.SocketBufferHandler getBufHandler();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bufHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
       4: areturn

  public org.apache.tomcat.util.net.NioEndpoint$Poller getPoller();
    Code:
       0: aload_0
       1: getfield      #25                 // Field poller:Lorg/apache/tomcat/util/net/NioEndpoint$Poller;
       4: areturn

  public java.nio.channels.SocketChannel getIOChannel();
    Code:
       0: aload_0
       1: getfield      #2                  // Field sc:Ljava/nio/channels/SocketChannel;
       4: areturn

  public boolean isClosing();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isHandshakeComplete();
    Code:
       0: iconst_1
       1: ireturn

  public int handshake(boolean, boolean) throws java.io.IOException;
    Code:
       0: iconst_0
       1: ireturn

  public void setPoller(org.apache.tomcat.util.net.NioEndpoint$Poller);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field poller:Lorg/apache/tomcat/util/net/NioEndpoint$Poller;
       5: return

  public void setIOChannel(java.nio.channels.SocketChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field sc:Ljava/nio/channels/SocketChannel;
       5: return

  public java.lang.String toString();
    Code:
       0: new           #26                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokespecial #28                 // Method java/lang/Object.toString:()Ljava/lang/String;
      11: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #30                 // String :
      16: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #2                  // Field sc:Ljava/nio/channels/SocketChannel;
      23: invokevirtual #28                 // Method java/lang/Object.toString:()Ljava/lang/String;
      26: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: areturn

  public int getOutboundRemaining();
    Code:
       0: iconst_0
       1: ireturn

  public boolean flushOutbound() throws java.io.IOException;
    Code:
       0: iconst_0
       1: ireturn

  protected void checkInterruptStatus() throws java.io.IOException;
    Code:
       0: invokestatic  #32                 // Method java/lang/Thread.interrupted:()Z
       3: ifeq          22
       6: new           #33                 // class java/io/IOException
       9: dup
      10: getstatic     #34                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      13: ldc           #35                 // String channel.nio.interrupted
      15: invokevirtual #36                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;)Ljava/lang/String;
      18: invokespecial #37                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: return

  public void setAppReadBufHandler(org.apache.tomcat.util.net.ApplicationBufferHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field appReadBufHandler:Lorg/apache/tomcat/util/net/ApplicationBufferHandler;
       5: return

  protected org.apache.tomcat.util.net.ApplicationBufferHandler getAppReadBufHandler();
    Code:
       0: aload_0
       1: getfield      #38                 // Field appReadBufHandler:Lorg/apache/tomcat/util/net/ApplicationBufferHandler;
       4: areturn

  static {};
    Code:
       0: ldc_w         #39                 // class org/apache/tomcat/util/net/NioChannel
       3: invokestatic  #40                 // Method org/apache/tomcat/util/res/StringManager.getManager:(Ljava/lang/Class;)Lorg/apache/tomcat/util/res/StringManager;
       6: putstatic     #34                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
       9: iconst_0
      10: invokestatic  #41                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      13: putstatic     #42                 // Field emptyBuf:Ljava/nio/ByteBuffer;
      16: return
}
