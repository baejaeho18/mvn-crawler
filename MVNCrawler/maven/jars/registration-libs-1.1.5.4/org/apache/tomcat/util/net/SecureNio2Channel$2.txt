Compiled from "SecureNio2Channel.java"
class org.apache.tomcat.util.net.SecureNio2Channel$2 implements java.nio.channels.CompletionHandler<java.lang.Integer, A> {
  final java.nio.ByteBuffer[] val$dsts;

  final int val$length;

  final int val$offset;

  final long val$timeout;

  final java.util.concurrent.TimeUnit val$unit;

  final java.lang.Object val$attachment;

  final java.nio.channels.CompletionHandler val$handler;

  final org.apache.tomcat.util.net.SecureNio2Channel this$0;

  org.apache.tomcat.util.net.SecureNio2Channel$2(org.apache.tomcat.util.net.SecureNio2Channel, java.nio.ByteBuffer[], int, int, long, java.util.concurrent.TimeUnit, java.lang.Object, java.nio.channels.CompletionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$dsts:[Ljava/nio/ByteBuffer;
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field val$length:I
      15: aload_0
      16: iload         4
      18: putfield      #4                  // Field val$offset:I
      21: aload_0
      22: lload         5
      24: putfield      #5                  // Field val$timeout:J
      27: aload_0
      28: aload         7
      30: putfield      #6                  // Field val$unit:Ljava/util/concurrent/TimeUnit;
      33: aload_0
      34: aload         8
      36: putfield      #7                  // Field val$attachment:Ljava/lang/Object;
      39: aload_0
      40: aload         9
      42: putfield      #8                  // Field val$handler:Ljava/nio/channels/CompletionHandler;
      45: aload_0
      46: invokespecial #9                  // Method java/lang/Object."<init>":()V
      49: return

  public void completed(java.lang.Integer, A);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method java/lang/Integer.intValue:()I
       4: ifge          22
       7: aload_0
       8: new           #11                 // class java/io/EOFException
      11: dup
      12: invokespecial #12                 // Method java/io/EOFException."<init>":()V
      15: aload_2
      16: invokevirtual #13                 // Method failed:(Ljava/lang/Throwable;Ljava/lang/Object;)V
      19: goto          576
      22: lconst_0
      23: lstore_3
      24: aload_0
      25: getfield      #2                  // Field val$dsts:[Ljava/nio/ByteBuffer;
      28: astore        6
      30: aload_0
      31: getfield      #3                  // Field val$length:I
      34: istore        7
      36: iconst_0
      37: istore        8
      39: iconst_0
      40: istore        9
      42: iload         8
      44: ifeq          50
      47: iconst_1
      48: istore        9
      50: iconst_0
      51: istore        8
      53: aload_0
      54: getfield      #1                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
      57: getfield      #14                 // Field org/apache/tomcat/util/net/SecureNio2Channel.netInBuffer:Ljava/nio/ByteBuffer;
      60: invokevirtual #15                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      63: pop
      64: aload_0
      65: getfield      #1                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
      68: getfield      #16                 // Field org/apache/tomcat/util/net/SecureNio2Channel.sslEngine:Ljavax/net/ssl/SSLEngine;
      71: aload_0
      72: getfield      #1                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
      75: getfield      #14                 // Field org/apache/tomcat/util/net/SecureNio2Channel.netInBuffer:Ljava/nio/ByteBuffer;
      78: aload         6
      80: aload_0
      81: getfield      #4                  // Field val$offset:I
      84: iload         7
      86: invokevirtual #17                 // Method javax/net/ssl/SSLEngine.unwrap:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)Ljavax/net/ssl/SSLEngineResult;
      89: astore        5
      91: aload_0
      92: getfield      #1                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
      95: getfield      #14                 // Field org/apache/tomcat/util/net/SecureNio2Channel.netInBuffer:Ljava/nio/ByteBuffer;
      98: invokevirtual #18                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     101: pop
     102: aload         5
     104: invokevirtual #19                 // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     107: getstatic     #20                 // Field javax/net/ssl/SSLEngineResult$Status.OK:Ljavax/net/ssl/SSLEngineResult$Status;
     110: if_acmpeq     124
     113: aload         5
     115: invokevirtual #19                 // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     118: getstatic     #21                 // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_UNDERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     121: if_acmpne     220
     124: lload_3
     125: aload         5
     127: invokevirtual #22                 // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
     130: i2l
     131: ladd
     132: lstore_3
     133: iload         9
     135: ifeq          153
     138: lload_3
     139: aload         6
     141: aload_0
     142: getfield      #2                  // Field val$dsts:[Ljava/nio/ByteBuffer;
     145: arraylength
     146: aaload
     147: invokevirtual #23                 // Method java/nio/ByteBuffer.position:()I
     150: i2l
     151: lsub
     152: lstore_3
     153: aload         5
     155: invokevirtual #24                 // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     158: getstatic     #25                 // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.NEED_TASK:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     161: if_acmpne     172
     164: aload_0
     165: getfield      #1                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
     168: invokevirtual #26                 // Method org/apache/tomcat/util/net/SecureNio2Channel.tasks:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     171: pop
     172: aload         5
     174: invokevirtual #19                 // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     177: getstatic     #21                 // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_UNDERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     180: if_acmpne     460
     183: lload_3
     184: lconst_0
     185: lcmp
     186: ifne          478
     189: aload_0
     190: getfield      #1                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
     193: getfield      #27                 // Field org/apache/tomcat/util/net/SecureNio2Channel.sc:Ljava/nio/channels/AsynchronousSocketChannel;
     196: aload_0
     197: getfield      #1                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
     200: getfield      #14                 // Field org/apache/tomcat/util/net/SecureNio2Channel.netInBuffer:Ljava/nio/ByteBuffer;
     203: aload_0
     204: getfield      #5                  // Field val$timeout:J
     207: aload_0
     208: getfield      #6                  // Field val$unit:Ljava/util/concurrent/TimeUnit;
     211: aload_0
     212: getfield      #7                  // Field val$attachment:Ljava/lang/Object;
     215: aload_0
     216: invokevirtual #28                 // Method java/nio/channels/AsynchronousSocketChannel.read:(Ljava/nio/ByteBuffer;JLjava/util/concurrent/TimeUnit;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
     219: return
     220: aload         5
     222: invokevirtual #19                 // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     225: getstatic     #29                 // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_OVERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     228: if_acmpne     240
     231: lload_3
     232: lconst_0
     233: lcmp
     234: ifle          240
     237: goto          478
     240: aload         5
     242: invokevirtual #19                 // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     245: getstatic     #29                 // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_OVERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     248: if_acmpne     418
     251: aload_0
     252: getfield      #1                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
     255: invokevirtual #30                 // Method org/apache/tomcat/util/net/SecureNio2Channel.getBufHandler:()Lorg/apache/tomcat/util/net/SocketBufferHandler;
     258: invokevirtual #31                 // Method org/apache/tomcat/util/net/SocketBufferHandler.getReadBuffer:()Ljava/nio/ByteBuffer;
     261: astore        10
     263: iconst_0
     264: istore        11
     266: aload         6
     268: astore        12
     270: aload         12
     272: arraylength
     273: istore        13
     275: iconst_0
     276: istore        14
     278: iload         14
     280: iload         13
     282: if_icmpge     308
     285: aload         12
     287: iload         14
     289: aaload
     290: astore        15
     292: aload         15
     294: aload         10
     296: if_acmpne     302
     299: iconst_1
     300: istore        11
     302: iinc          14, 1
     305: goto          278
     308: iload         11
     310: ifeq          341
     313: new           #32                 // class java/io/IOException
     316: dup
     317: invokestatic  #33                 // Method org/apache/tomcat/util/net/SecureNio2Channel.access$300:()Lorg/apache/tomcat/util/res/StringManager;
     320: ldc           #34                 // String channel.nio.ssl.unwrapFail
     322: iconst_1
     323: anewarray     #35                 // class java/lang/Object
     326: dup
     327: iconst_0
     328: aload         5
     330: invokevirtual #19                 // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     333: aastore
     334: invokevirtual #36                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     337: invokespecial #37                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     340: athrow
     341: aload_0
     342: getfield      #2                  // Field val$dsts:[Ljava/nio/ByteBuffer;
     345: arraylength
     346: iconst_1
     347: iadd
     348: anewarray     #38                 // class java/nio/ByteBuffer
     351: astore        6
     353: iconst_0
     354: istore        12
     356: iload         12
     358: aload_0
     359: getfield      #2                  // Field val$dsts:[Ljava/nio/ByteBuffer;
     362: arraylength
     363: if_icmpge     384
     366: aload         6
     368: iload         12
     370: aload_0
     371: getfield      #2                  // Field val$dsts:[Ljava/nio/ByteBuffer;
     374: iload         12
     376: aaload
     377: aastore
     378: iinc          12, 1
     381: goto          356
     384: aload         6
     386: aload_0
     387: getfield      #2                  // Field val$dsts:[Ljava/nio/ByteBuffer;
     390: arraylength
     391: aload         10
     393: aastore
     394: aload_0
     395: getfield      #3                  // Field val$length:I
     398: iconst_1
     399: iadd
     400: istore        7
     402: aload_0
     403: getfield      #1                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
     406: invokevirtual #30                 // Method org/apache/tomcat/util/net/SecureNio2Channel.getBufHandler:()Lorg/apache/tomcat/util/net/SocketBufferHandler;
     409: invokevirtual #39                 // Method org/apache/tomcat/util/net/SocketBufferHandler.configureReadBufferForWrite:()V
     412: iconst_1
     413: istore        8
     415: goto          460
     418: aload         5
     420: invokevirtual #19                 // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     423: getstatic     #40                 // Field javax/net/ssl/SSLEngineResult$Status.CLOSED:Ljavax/net/ssl/SSLEngineResult$Status;
     426: if_acmpne     432
     429: goto          478
     432: new           #32                 // class java/io/IOException
     435: dup
     436: invokestatic  #33                 // Method org/apache/tomcat/util/net/SecureNio2Channel.access$300:()Lorg/apache/tomcat/util/res/StringManager;
     439: ldc           #34                 // String channel.nio.ssl.unwrapFail
     441: iconst_1
     442: anewarray     #35                 // class java/lang/Object
     445: dup
     446: iconst_0
     447: aload         5
     449: invokevirtual #19                 // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     452: aastore
     453: invokevirtual #36                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     456: invokespecial #37                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     459: athrow
     460: aload_0
     461: getfield      #1                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
     464: getfield      #14                 // Field org/apache/tomcat/util/net/SecureNio2Channel.netInBuffer:Ljava/nio/ByteBuffer;
     467: invokevirtual #23                 // Method java/nio/ByteBuffer.position:()I
     470: ifne          39
     473: iload         8
     475: ifne          39
     478: iconst_0
     479: istore        9
     481: aload_0
     482: getfield      #4                  // Field val$offset:I
     485: aload_0
     486: getfield      #3                  // Field val$length:I
     489: iadd
     490: istore        10
     492: aload_0
     493: getfield      #4                  // Field val$offset:I
     496: istore        11
     498: iload         11
     500: iload         10
     502: if_icmpge     526
     505: iload         9
     507: aload_0
     508: getfield      #2                  // Field val$dsts:[Ljava/nio/ByteBuffer;
     511: iload         11
     513: aaload
     514: invokevirtual #41                 // Method java/nio/ByteBuffer.remaining:()I
     517: iadd
     518: istore        9
     520: iinc          11, 1
     523: goto          498
     526: iload         9
     528: ifne          543
     531: aload_0
     532: getfield      #1                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
     535: iconst_1
     536: invokestatic  #42                 // Method org/apache/tomcat/util/net/SecureNio2Channel.access$202:(Lorg/apache/tomcat/util/net/SecureNio2Channel;Z)Z
     539: pop
     540: goto          552
     543: aload_0
     544: getfield      #1                  // Field this$0:Lorg/apache/tomcat/util/net/SecureNio2Channel;
     547: iconst_0
     548: invokestatic  #42                 // Method org/apache/tomcat/util/net/SecureNio2Channel.access$202:(Lorg/apache/tomcat/util/net/SecureNio2Channel;Z)Z
     551: pop
     552: aload_0
     553: getfield      #8                  // Field val$handler:Ljava/nio/channels/CompletionHandler;
     556: lload_3
     557: invokestatic  #43                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     560: aload_2
     561: invokeinterface #44,  3           // InterfaceMethod java/nio/channels/CompletionHandler.completed:(Ljava/lang/Object;Ljava/lang/Object;)V
     566: goto          576
     569: astore_3
     570: aload_0
     571: aload_3
     572: aload_2
     573: invokevirtual #13                 // Method failed:(Ljava/lang/Throwable;Ljava/lang/Object;)V
     576: return
    Exception table:
       from    to  target type
          22   219   569   Class java/lang/Exception
         220   566   569   Class java/lang/Exception

  public void failed(java.lang.Throwable, A);
    Code:
       0: aload_0
       1: getfield      #8                  // Field val$handler:Ljava/nio/channels/CompletionHandler;
       4: aload_1
       5: aload_2
       6: invokeinterface #46,  3           // InterfaceMethod java/nio/channels/CompletionHandler.failed:(Ljava/lang/Throwable;Ljava/lang/Object;)V
      11: return

  public void completed(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #47                 // class java/lang/Integer
       5: aload_2
       6: invokevirtual #48                 // Method completed:(Ljava/lang/Integer;Ljava/lang/Object;)V
       9: return
}
