Compiled from "CharChunk.java"
public final class org.apache.tomcat.util.buf.CharChunk extends org.apache.tomcat.util.buf.AbstractChunk implements java.lang.CharSequence {
  private static final long serialVersionUID;

  private char[] buff;

  private transient org.apache.tomcat.util.buf.CharChunk$CharInputChannel in;

  private transient org.apache.tomcat.util.buf.CharChunk$CharOutputChannel out;

  public org.apache.tomcat.util.buf.CharChunk();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/tomcat/util/buf/AbstractChunk."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field in:Lorg/apache/tomcat/util/buf/CharChunk$CharInputChannel;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field out:Lorg/apache/tomcat/util/buf/CharChunk$CharOutputChannel;
      14: return

  public org.apache.tomcat.util.buf.CharChunk(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/tomcat/util/buf/AbstractChunk."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field in:Lorg/apache/tomcat/util/buf/CharChunk$CharInputChannel;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field out:Lorg/apache/tomcat/util/buf/CharChunk$CharOutputChannel;
      14: aload_0
      15: iload_1
      16: iconst_m1
      17: invokevirtual #4                  // Method allocate:(II)V
      20: return

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: areturn

  public void allocate(int, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field buff:[C
       4: ifnull        16
       7: aload_0
       8: getfield      #6                  // Field buff:[C
      11: arraylength
      12: iload_1
      13: if_icmpge     23
      16: aload_0
      17: iload_1
      18: newarray       char
      20: putfield      #6                  // Field buff:[C
      23: aload_0
      24: iload_2
      25: invokevirtual #7                  // Method setLimit:(I)V
      28: aload_0
      29: iconst_0
      30: putfield      #8                  // Field start:I
      33: aload_0
      34: iconst_0
      35: putfield      #9                  // Field end:I
      38: aload_0
      39: iconst_1
      40: putfield      #10                 // Field isSet:Z
      43: aload_0
      44: iconst_0
      45: putfield      #11                 // Field hasHashCode:Z
      48: return

  public void setChars(char[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field buff:[C
       5: aload_0
       6: iload_2
       7: putfield      #8                  // Field start:I
      10: aload_0
      11: aload_0
      12: getfield      #8                  // Field start:I
      15: iload_3
      16: iadd
      17: putfield      #9                  // Field end:I
      20: aload_0
      21: iconst_1
      22: putfield      #10                 // Field isSet:Z
      25: aload_0
      26: iconst_0
      27: putfield      #11                 // Field hasHashCode:Z
      30: return

  public char[] getChars();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getBuffer:()[C
       4: areturn

  public char[] getBuffer();
    Code:
       0: aload_0
       1: getfield      #6                  // Field buff:[C
       4: areturn

  public void setCharInputChannel(org.apache.tomcat.util.buf.CharChunk$CharInputChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field in:Lorg/apache/tomcat/util/buf/CharChunk$CharInputChannel;
       5: return

  public void setCharOutputChannel(org.apache.tomcat.util.buf.CharChunk$CharOutputChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field out:Lorg/apache/tomcat/util/buf/CharChunk$CharOutputChannel;
       5: return

  public void append(char) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #13                 // Method makeSpace:(I)V
       5: aload_0
       6: invokevirtual #14                 // Method getLimitInternal:()I
       9: istore_2
      10: aload_0
      11: getfield      #9                  // Field end:I
      14: iload_2
      15: if_icmplt     22
      18: aload_0
      19: invokevirtual #15                 // Method flushBuffer:()V
      22: aload_0
      23: getfield      #6                  // Field buff:[C
      26: aload_0
      27: dup
      28: getfield      #9                  // Field end:I
      31: dup_x1
      32: iconst_1
      33: iadd
      34: putfield      #9                  // Field end:I
      37: iload_1
      38: castore
      39: return

  public void append(org.apache.tomcat.util.buf.CharChunk) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method getBuffer:()[C
       5: aload_1
       6: invokevirtual #16                 // Method getOffset:()I
       9: aload_1
      10: invokevirtual #17                 // Method getLength:()I
      13: invokevirtual #18                 // Method append:([CII)V
      16: return

  public void append(char[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_3
       2: invokevirtual #13                 // Method makeSpace:(I)V
       5: aload_0
       6: invokevirtual #14                 // Method getLimitInternal:()I
       9: istore        4
      11: iload_3
      12: iload         4
      14: if_icmpne     48
      17: aload_0
      18: getfield      #9                  // Field end:I
      21: aload_0
      22: getfield      #8                  // Field start:I
      25: if_icmpne     48
      28: aload_0
      29: getfield      #3                  // Field out:Lorg/apache/tomcat/util/buf/CharChunk$CharOutputChannel;
      32: ifnull        48
      35: aload_0
      36: getfield      #3                  // Field out:Lorg/apache/tomcat/util/buf/CharChunk$CharOutputChannel;
      39: aload_1
      40: iload_2
      41: iload_3
      42: invokeinterface #19,  4           // InterfaceMethod org/apache/tomcat/util/buf/CharChunk$CharOutputChannel.realWriteChars:([CII)V
      47: return
      48: iload_3
      49: iload         4
      51: aload_0
      52: getfield      #9                  // Field end:I
      55: isub
      56: if_icmpgt     84
      59: aload_1
      60: iload_2
      61: aload_0
      62: getfield      #6                  // Field buff:[C
      65: aload_0
      66: getfield      #9                  // Field end:I
      69: iload_3
      70: invokestatic  #20                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      73: aload_0
      74: dup
      75: getfield      #9                  // Field end:I
      78: iload_3
      79: iadd
      80: putfield      #9                  // Field end:I
      83: return
      84: iload_3
      85: aload_0
      86: getfield      #9                  // Field end:I
      89: iadd
      90: iconst_2
      91: iload         4
      93: imul
      94: if_icmpge     172
      97: iload         4
      99: aload_0
     100: getfield      #9                  // Field end:I
     103: isub
     104: istore        5
     106: aload_1
     107: iload_2
     108: aload_0
     109: getfield      #6                  // Field buff:[C
     112: aload_0
     113: getfield      #9                  // Field end:I
     116: iload         5
     118: invokestatic  #20                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     121: aload_0
     122: dup
     123: getfield      #9                  // Field end:I
     126: iload         5
     128: iadd
     129: putfield      #9                  // Field end:I
     132: aload_0
     133: invokevirtual #15                 // Method flushBuffer:()V
     136: aload_1
     137: iload_2
     138: iload         5
     140: iadd
     141: aload_0
     142: getfield      #6                  // Field buff:[C
     145: aload_0
     146: getfield      #9                  // Field end:I
     149: iload_3
     150: iload         5
     152: isub
     153: invokestatic  #20                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     156: aload_0
     157: dup
     158: getfield      #9                  // Field end:I
     161: iload_3
     162: iload         5
     164: isub
     165: iadd
     166: putfield      #9                  // Field end:I
     169: goto          188
     172: aload_0
     173: invokevirtual #15                 // Method flushBuffer:()V
     176: aload_0
     177: getfield      #3                  // Field out:Lorg/apache/tomcat/util/buf/CharChunk$CharOutputChannel;
     180: aload_1
     181: iload_2
     182: iload_3
     183: invokeinterface #19,  4           // InterfaceMethod org/apache/tomcat/util/buf/CharChunk$CharOutputChannel.realWriteChars:([CII)V
     188: return

  public void append(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: invokevirtual #21                 // Method java/lang/String.length:()I
       7: invokevirtual #22                 // Method append:(Ljava/lang/String;II)V
      10: return

  public void append(java.lang.String, int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: iload_3
       7: invokevirtual #13                 // Method makeSpace:(I)V
      10: aload_0
      11: invokevirtual #14                 // Method getLimitInternal:()I
      14: istore        4
      16: iload_2
      17: istore        5
      19: iload_2
      20: iload_3
      21: iadd
      22: istore        6
      24: iload         5
      26: iload         6
      28: if_icmpge     102
      31: aload_0
      32: iload         4
      34: aload_0
      35: getfield      #9                  // Field end:I
      38: isub
      39: iload         6
      41: iload         5
      43: isub
      44: invokespecial #23                 // Method min:(II)I
      47: istore        7
      49: aload_1
      50: iload         5
      52: iload         5
      54: iload         7
      56: iadd
      57: aload_0
      58: getfield      #6                  // Field buff:[C
      61: aload_0
      62: getfield      #9                  // Field end:I
      65: invokevirtual #24                 // Method java/lang/String.getChars:(II[CI)V
      68: iload         5
      70: iload         7
      72: iadd
      73: istore        5
      75: aload_0
      76: dup
      77: getfield      #9                  // Field end:I
      80: iload         7
      82: iadd
      83: putfield      #9                  // Field end:I
      86: aload_0
      87: getfield      #9                  // Field end:I
      90: iload         4
      92: if_icmplt     99
      95: aload_0
      96: invokevirtual #15                 // Method flushBuffer:()V
      99: goto          24
     102: return

  public int substract() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method checkEof:()Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #6                  // Field buff:[C
      13: aload_0
      14: dup
      15: getfield      #8                  // Field start:I
      18: dup_x1
      19: iconst_1
      20: iadd
      21: putfield      #8                  // Field start:I
      24: caload
      25: ireturn

  public int substract(char[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method checkEof:()Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: iload_3
      10: istore        4
      12: iload_3
      13: aload_0
      14: invokevirtual #17                 // Method getLength:()I
      17: if_icmple     26
      20: aload_0
      21: invokevirtual #17                 // Method getLength:()I
      24: istore        4
      26: aload_0
      27: getfield      #6                  // Field buff:[C
      30: aload_0
      31: getfield      #8                  // Field start:I
      34: aload_1
      35: iload_2
      36: iload         4
      38: invokestatic  #20                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      41: aload_0
      42: dup
      43: getfield      #8                  // Field start:I
      46: iload         4
      48: iadd
      49: putfield      #8                  // Field start:I
      52: iload         4
      54: ireturn

  private boolean checkEof() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field end:I
       4: aload_0
       5: getfield      #8                  // Field start:I
       8: isub
       9: ifne          37
      12: aload_0
      13: getfield      #2                  // Field in:Lorg/apache/tomcat/util/buf/CharChunk$CharInputChannel;
      16: ifnonnull     21
      19: iconst_1
      20: ireturn
      21: aload_0
      22: getfield      #2                  // Field in:Lorg/apache/tomcat/util/buf/CharChunk$CharInputChannel;
      25: invokeinterface #26,  1           // InterfaceMethod org/apache/tomcat/util/buf/CharChunk$CharInputChannel.realReadChars:()I
      30: istore_1
      31: iload_1
      32: ifge          37
      35: iconst_1
      36: ireturn
      37: iconst_0
      38: ireturn

  public void flushBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field out:Lorg/apache/tomcat/util/buf/CharChunk$CharOutputChannel;
       4: ifnonnull     50
       7: new           #27                 // class java/io/IOException
      10: dup
      11: new           #28                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #30                 // String Buffer overflow, no sink
      20: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: invokevirtual #32                 // Method getLimit:()I
      27: invokevirtual #33                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc           #34                 // String
      32: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #6                  // Field buff:[C
      39: arraylength
      40: invokevirtual #33                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #36                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: getfield      #3                  // Field out:Lorg/apache/tomcat/util/buf/CharChunk$CharOutputChannel;
      54: aload_0
      55: getfield      #6                  // Field buff:[C
      58: aload_0
      59: getfield      #8                  // Field start:I
      62: aload_0
      63: getfield      #9                  // Field end:I
      66: aload_0
      67: getfield      #8                  // Field start:I
      70: isub
      71: invokeinterface #19,  4           // InterfaceMethod org/apache/tomcat/util/buf/CharChunk$CharOutputChannel.realWriteChars:([CII)V
      76: aload_0
      77: aload_0
      78: getfield      #8                  // Field start:I
      81: putfield      #9                  // Field end:I
      84: return

  public void makeSpace(int);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokevirtual #14                 // Method getLimitInternal:()I
       6: istore_3
       7: aload_0
       8: getfield      #9                  // Field end:I
      11: iload_1
      12: iadd
      13: i2l
      14: lstore        6
      16: lload         6
      18: iload_3
      19: i2l
      20: lcmp
      21: ifle          28
      24: iload_3
      25: i2l
      26: lstore        6
      28: aload_0
      29: getfield      #6                  // Field buff:[C
      32: ifnonnull     58
      35: lload         6
      37: ldc2_w        #37                 // long 256l
      40: lcmp
      41: ifge          49
      44: ldc2_w        #37                 // long 256l
      47: lstore        6
      49: aload_0
      50: lload         6
      52: l2i
      53: newarray       char
      55: putfield      #6                  // Field buff:[C
      58: lload         6
      60: aload_0
      61: getfield      #6                  // Field buff:[C
      64: arraylength
      65: i2l
      66: lcmp
      67: ifgt          71
      70: return
      71: lload         6
      73: ldc2_w        #39                 // long 2l
      76: aload_0
      77: getfield      #6                  // Field buff:[C
      80: arraylength
      81: i2l
      82: lmul
      83: lcmp
      84: ifge          102
      87: aload_0
      88: getfield      #6                  // Field buff:[C
      91: arraylength
      92: i2l
      93: ldc2_w        #39                 // long 2l
      96: lmul
      97: lstore        4
      99: goto          117
     102: aload_0
     103: getfield      #6                  // Field buff:[C
     106: arraylength
     107: i2l
     108: ldc2_w        #39                 // long 2l
     111: lmul
     112: iload_1
     113: i2l
     114: ladd
     115: lstore        4
     117: lload         4
     119: iload_3
     120: i2l
     121: lcmp
     122: ifle          129
     125: iload_3
     126: i2l
     127: lstore        4
     129: lload         4
     131: l2i
     132: newarray       char
     134: astore_2
     135: aload_0
     136: getfield      #6                  // Field buff:[C
     139: iconst_0
     140: aload_2
     141: iconst_0
     142: aload_0
     143: getfield      #9                  // Field end:I
     146: invokestatic  #20                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     149: aload_0
     150: aload_2
     151: putfield      #6                  // Field buff:[C
     154: aconst_null
     155: astore_2
     156: return

  public java.lang.String toString();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #6                  // Field buff:[C
       5: if_acmpne     10
       8: aconst_null
       9: areturn
      10: aload_0
      11: getfield      #9                  // Field end:I
      14: aload_0
      15: getfield      #8                  // Field start:I
      18: isub
      19: ifne          25
      22: ldc           #41                 // String
      24: areturn
      25: aload_0
      26: invokestatic  #42                 // Method org/apache/tomcat/util/buf/StringCache.toString:(Lorg/apache/tomcat/util/buf/CharChunk;)Ljava/lang/String;
      29: areturn

  public java.lang.String toStringInternal();
    Code:
       0: new           #43                 // class java/lang/String
       3: dup
       4: aload_0
       5: getfield      #6                  // Field buff:[C
       8: aload_0
       9: getfield      #8                  // Field start:I
      12: aload_0
      13: getfield      #9                  // Field end:I
      16: aload_0
      17: getfield      #8                  // Field start:I
      20: isub
      21: invokespecial #44                 // Method java/lang/String."<init>":([CII)V
      24: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #45                 // class org/apache/tomcat/util/buf/CharChunk
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: checkcast     #45                 // class org/apache/tomcat/util/buf/CharChunk
      12: invokevirtual #46                 // Method equals:(Lorg/apache/tomcat/util/buf/CharChunk;)Z
      15: ireturn
      16: iconst_0
      17: ireturn

  public boolean equals(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field buff:[C
       4: astore_2
       5: aload_0
       6: getfield      #9                  // Field end:I
       9: aload_0
      10: getfield      #8                  // Field start:I
      13: isub
      14: istore_3
      15: aload_2
      16: ifnull        27
      19: iload_3
      20: aload_1
      21: invokevirtual #21                 // Method java/lang/String.length:()I
      24: if_icmpeq     29
      27: iconst_0
      28: ireturn
      29: aload_0
      30: getfield      #8                  // Field start:I
      33: istore        4
      35: iconst_0
      36: istore        5
      38: iload         5
      40: iload_3
      41: if_icmpge     68
      44: aload_2
      45: iload         4
      47: iinc          4, 1
      50: caload
      51: aload_1
      52: iload         5
      54: invokevirtual #47                 // Method java/lang/String.charAt:(I)C
      57: if_icmpeq     62
      60: iconst_0
      61: ireturn
      62: iinc          5, 1
      65: goto          38
      68: iconst_1
      69: ireturn

  public boolean equalsIgnoreCase(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field buff:[C
       4: astore_2
       5: aload_0
       6: getfield      #9                  // Field end:I
       9: aload_0
      10: getfield      #8                  // Field start:I
      13: isub
      14: istore_3
      15: aload_2
      16: ifnull        27
      19: iload_3
      20: aload_1
      21: invokevirtual #21                 // Method java/lang/String.length:()I
      24: if_icmpeq     29
      27: iconst_0
      28: ireturn
      29: aload_0
      30: getfield      #8                  // Field start:I
      33: istore        4
      35: iconst_0
      36: istore        5
      38: iload         5
      40: iload_3
      41: if_icmpge     74
      44: aload_2
      45: iload         4
      47: iinc          4, 1
      50: caload
      51: invokestatic  #48                 // Method org/apache/tomcat/util/buf/Ascii.toLower:(I)I
      54: aload_1
      55: iload         5
      57: invokevirtual #47                 // Method java/lang/String.charAt:(I)C
      60: invokestatic  #48                 // Method org/apache/tomcat/util/buf/Ascii.toLower:(I)I
      63: if_icmpeq     68
      66: iconst_0
      67: ireturn
      68: iinc          5, 1
      71: goto          38
      74: iconst_1
      75: ireturn

  public boolean equals(org.apache.tomcat.util.buf.CharChunk);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method getChars:()[C
       5: aload_1
       6: invokevirtual #16                 // Method getOffset:()I
       9: aload_1
      10: invokevirtual #17                 // Method getLength:()I
      13: invokevirtual #50                 // Method equals:([CII)Z
      16: ireturn

  public boolean equals(char[], int, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field buff:[C
       4: astore        4
       6: aload         4
       8: ifnonnull     17
      11: aload_1
      12: ifnonnull     17
      15: iconst_1
      16: ireturn
      17: aload_0
      18: getfield      #9                  // Field end:I
      21: aload_0
      22: getfield      #8                  // Field start:I
      25: isub
      26: istore        5
      28: iload         5
      30: iload_3
      31: if_icmpne     43
      34: aload         4
      36: ifnull        43
      39: aload_1
      40: ifnonnull     45
      43: iconst_0
      44: ireturn
      45: aload_0
      46: getfield      #8                  // Field start:I
      49: istore        6
      51: iload         5
      53: iinc          5, -1
      56: ifle          78
      59: aload         4
      61: iload         6
      63: iinc          6, 1
      66: caload
      67: aload_1
      68: iload_2
      69: iinc          2, 1
      72: caload
      73: if_icmpeq     51
      76: iconst_0
      77: ireturn
      78: iconst_1
      79: ireturn

  public boolean startsWith(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field buff:[C
       4: astore_2
       5: aload_1
       6: invokevirtual #21                 // Method java/lang/String.length:()I
       9: istore_3
      10: aload_2
      11: ifnull        27
      14: iload_3
      15: aload_0
      16: getfield      #9                  // Field end:I
      19: aload_0
      20: getfield      #8                  // Field start:I
      23: isub
      24: if_icmple     29
      27: iconst_0
      28: ireturn
      29: aload_0
      30: getfield      #8                  // Field start:I
      33: istore        4
      35: iconst_0
      36: istore        5
      38: iload         5
      40: iload_3
      41: if_icmpge     68
      44: aload_2
      45: iload         4
      47: iinc          4, 1
      50: caload
      51: aload_1
      52: iload         5
      54: invokevirtual #47                 // Method java/lang/String.charAt:(I)C
      57: if_icmpeq     62
      60: iconst_0
      61: ireturn
      62: iinc          5, 1
      65: goto          38
      68: iconst_1
      69: ireturn

  public boolean startsWithIgnoreCase(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field buff:[C
       4: astore_3
       5: aload_1
       6: invokevirtual #21                 // Method java/lang/String.length:()I
       9: istore        4
      11: aload_3
      12: ifnull        31
      15: iload         4
      17: iload_2
      18: iadd
      19: aload_0
      20: getfield      #9                  // Field end:I
      23: aload_0
      24: getfield      #8                  // Field start:I
      27: isub
      28: if_icmple     33
      31: iconst_0
      32: ireturn
      33: aload_0
      34: getfield      #8                  // Field start:I
      37: iload_2
      38: iadd
      39: istore        5
      41: iconst_0
      42: istore        6
      44: iload         6
      46: iload         4
      48: if_icmpge     81
      51: aload_3
      52: iload         5
      54: iinc          5, 1
      57: caload
      58: invokestatic  #48                 // Method org/apache/tomcat/util/buf/Ascii.toLower:(I)I
      61: aload_1
      62: iload         6
      64: invokevirtual #47                 // Method java/lang/String.charAt:(I)C
      67: invokestatic  #48                 // Method org/apache/tomcat/util/buf/Ascii.toLower:(I)I
      70: if_icmpeq     75
      73: iconst_0
      74: ireturn
      75: iinc          6, 1
      78: goto          44
      81: iconst_1
      82: ireturn

  public boolean endsWith(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field buff:[C
       4: astore_2
       5: aload_1
       6: invokevirtual #21                 // Method java/lang/String.length:()I
       9: istore_3
      10: aload_2
      11: ifnull        27
      14: iload_3
      15: aload_0
      16: getfield      #9                  // Field end:I
      19: aload_0
      20: getfield      #8                  // Field start:I
      23: isub
      24: if_icmple     29
      27: iconst_0
      28: ireturn
      29: aload_0
      30: getfield      #9                  // Field end:I
      33: iload_3
      34: isub
      35: istore        4
      37: iconst_0
      38: istore        5
      40: iload         5
      42: iload_3
      43: if_icmpge     70
      46: aload_2
      47: iload         4
      49: iinc          4, 1
      52: caload
      53: aload_1
      54: iload         5
      56: invokevirtual #47                 // Method java/lang/String.charAt:(I)C
      59: if_icmpeq     64
      62: iconst_0
      63: ireturn
      64: iinc          5, 1
      67: goto          40
      70: iconst_1
      71: ireturn

  protected int getBufferElement(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field buff:[C
       4: iload_1
       5: caload
       6: ireturn

  public int indexOf(char);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: getfield      #8                  // Field start:I
       6: invokevirtual #51                 // Method indexOf:(CI)I
       9: ireturn

  public int indexOf(char, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field buff:[C
       4: aload_0
       5: getfield      #8                  // Field start:I
       8: iload_2
       9: iadd
      10: aload_0
      11: getfield      #9                  // Field end:I
      14: iload_1
      15: invokestatic  #52                 // Method indexOf:([CIIC)I
      18: istore_3
      19: iload_3
      20: aload_0
      21: getfield      #8                  // Field start:I
      24: if_icmplt     36
      27: iload_3
      28: aload_0
      29: getfield      #8                  // Field start:I
      32: isub
      33: goto          37
      36: iconst_m1
      37: ireturn

  public static int indexOf(char[], int, int, char);
    Code:
       0: iload_1
       1: istore        4
       3: iload         4
       5: iload_2
       6: if_icmpge     30
       9: aload_0
      10: iload         4
      12: caload
      13: istore        5
      15: iload         5
      17: iload_3
      18: if_icmpne     24
      21: iload         4
      23: ireturn
      24: iinc          4, 1
      27: goto          3
      30: iconst_m1
      31: ireturn

  private int min(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: if_icmpge     7
       5: iload_1
       6: ireturn
       7: iload_2
       8: ireturn

  public char charAt(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field buff:[C
       4: iload_1
       5: aload_0
       6: getfield      #8                  // Field start:I
       9: iadd
      10: caload
      11: ireturn

  public java.lang.CharSequence subSequence(int, int);
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method clone:()Ljava/lang/Object;
       4: checkcast     #45                 // class org/apache/tomcat/util/buf/CharChunk
       7: astore_3
       8: aload_3
       9: aload_0
      10: getfield      #8                  // Field start:I
      13: iload_1
      14: iadd
      15: invokevirtual #54                 // Method setOffset:(I)V
      18: aload_3
      19: aload_0
      20: getfield      #8                  // Field start:I
      23: iload_2
      24: iadd
      25: invokevirtual #55                 // Method setEnd:(I)V
      28: aload_3
      29: areturn
      30: astore_3
      31: aconst_null
      32: areturn
    Exception table:
       from    to  target type
           0    29    30   Class java/lang/CloneNotSupportedException

  public int length();
    Code:
       0: aload_0
       1: getfield      #9                  // Field end:I
       4: aload_0
       5: getfield      #8                  // Field start:I
       8: isub
       9: ireturn

  public void setOptimizedWrite(boolean);
    Code:
       0: return
}
