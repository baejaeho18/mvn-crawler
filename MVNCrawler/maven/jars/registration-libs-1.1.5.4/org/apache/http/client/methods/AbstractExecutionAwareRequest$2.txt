Compiled from "AbstractExecutionAwareRequest.java"
class org.apache.http.client.methods.AbstractExecutionAwareRequest$2 implements org.apache.http.concurrent.Cancellable {
  final org.apache.http.conn.ConnectionReleaseTrigger val$releaseTrigger;

  final org.apache.http.client.methods.AbstractExecutionAwareRequest this$0;

  org.apache.http.client.methods.AbstractExecutionAwareRequest$2(org.apache.http.client.methods.AbstractExecutionAwareRequest, org.apache.http.conn.ConnectionReleaseTrigger);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/http/client/methods/AbstractExecutionAwareRequest;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$releaseTrigger:Lorg/apache/http/conn/ConnectionReleaseTrigger;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public boolean cancel();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$releaseTrigger:Lorg/apache/http/conn/ConnectionReleaseTrigger;
       4: invokeinterface #4,  1            // InterfaceMethod org/apache/http/conn/ConnectionReleaseTrigger.abortConnection:()V
       9: iconst_1
      10: ireturn
      11: astore_1
      12: iconst_0
      13: ireturn
    Exception table:
       from    to  target type
           0    10    11   Class java/io/IOException
}
