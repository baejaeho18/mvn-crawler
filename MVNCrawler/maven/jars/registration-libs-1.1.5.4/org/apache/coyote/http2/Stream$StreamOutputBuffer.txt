Compiled from "Stream.java"
class org.apache.coyote.http2.Stream$StreamOutputBuffer implements org.apache.coyote.http11.HttpOutputBuffer,org.apache.tomcat.util.net.WriteBuffer$Sink {
  private final java.nio.ByteBuffer buffer;

  private final org.apache.tomcat.util.net.WriteBuffer writeBuffer;

  private boolean dataLeft;

  private volatile long written;

  private volatile int streamReservation;

  private volatile boolean closed;

  private volatile org.apache.coyote.http2.StreamException reset;

  private volatile boolean endOfStreamSent;

  final org.apache.coyote.http2.Stream this$0;

  org.apache.coyote.http2.Stream$StreamOutputBuffer(org.apache.coyote.http2.Stream);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
       5: aload_0
       6: invokespecial #5                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: sipush        8192
      13: invokestatic  #6                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      16: putfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      19: aload_0
      20: new           #8                  // class org/apache/tomcat/util/net/WriteBuffer
      23: dup
      24: ldc           #9                  // int 32768
      26: invokespecial #10                 // Method org/apache/tomcat/util/net/WriteBuffer."<init>":(I)V
      29: putfield      #11                 // Field writeBuffer:Lorg/apache/tomcat/util/net/WriteBuffer;
      32: aload_0
      33: lconst_0
      34: putfield      #12                 // Field written:J
      37: aload_0
      38: iconst_0
      39: putfield      #13                 // Field streamReservation:I
      42: aload_0
      43: iconst_0
      44: putfield      #3                  // Field closed:Z
      47: aload_0
      48: aconst_null
      49: putfield      #2                  // Field reset:Lorg/apache/coyote/http2/StreamException;
      52: aload_0
      53: iconst_0
      54: putfield      #1                  // Field endOfStreamSent:Z
      57: return

  public synchronized int doWrite(org.apache.tomcat.util.buf.ByteChunk) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field closed:Z
       4: ifeq          47
       7: new           #14                 // class java/lang/IllegalStateException
      10: dup
      11: invokestatic  #15                 // Method org/apache/coyote/http2/Stream.access$400:()Lorg/apache/tomcat/util/res/StringManager;
      14: ldc           #16                 // String stream.closed
      16: iconst_2
      17: anewarray     #17                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      26: invokevirtual #18                 // Method org/apache/coyote/http2/Stream.getConnectionId:()Ljava/lang/String;
      29: aastore
      30: dup
      31: iconst_1
      32: aload_0
      33: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      36: invokevirtual #19                 // Method org/apache/coyote/http2/Stream.getIdentifier:()Ljava/lang/Integer;
      39: aastore
      40: invokevirtual #20                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      43: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      51: invokestatic  #22                 // Method org/apache/coyote/http2/Stream.access$500:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/Response;
      54: invokevirtual #23                 // Method org/apache/coyote/Response.isCommitted:()Z
      57: ifne          70
      60: aload_0
      61: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      64: invokestatic  #22                 // Method org/apache/coyote/http2/Stream.access$500:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/Response;
      67: invokevirtual #24                 // Method org/apache/coyote/Response.sendHeaders:()V
      70: aload_1
      71: invokevirtual #25                 // Method org/apache/tomcat/util/buf/ByteChunk.getLength:()I
      74: istore_2
      75: iconst_0
      76: istore_3
      77: iload_2
      78: ifle          170
      81: aload_0
      82: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      85: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
      88: iload_2
      89: invokestatic  #27                 // Method java/lang/Math.min:(II)I
      92: istore        4
      94: aload_0
      95: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      98: aload_1
      99: invokevirtual #28                 // Method org/apache/tomcat/util/buf/ByteChunk.getBytes:()[B
     102: aload_1
     103: invokevirtual #29                 // Method org/apache/tomcat/util/buf/ByteChunk.getOffset:()I
     106: iload_3
     107: iadd
     108: iload         4
     110: invokevirtual #30                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     113: pop
     114: iload_3
     115: iload         4
     117: iadd
     118: istore_3
     119: iload_2
     120: iload         4
     122: isub
     123: istore_2
     124: iload_2
     125: ifle          167
     128: aload_0
     129: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
     132: invokevirtual #31                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     135: ifne          167
     138: aload_0
     139: iconst_1
     140: aload_0
     141: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     144: invokestatic  #22                 // Method org/apache/coyote/http2/Stream.access$500:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/Response;
     147: invokevirtual #32                 // Method org/apache/coyote/Response.getWriteListener:()Ljavax/servlet/WriteListener;
     150: ifnonnull     157
     153: iconst_1
     154: goto          158
     157: iconst_0
     158: invokespecial #33                 // Method flush:(ZZ)Z
     161: ifeq          167
     164: goto          170
     167: goto          77
     170: aload_0
     171: dup
     172: getfield      #12                 // Field written:J
     175: iload_3
     176: i2l
     177: ladd
     178: putfield      #12                 // Field written:J
     181: iload_3
     182: ireturn

  public synchronized int doWrite(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field closed:Z
       4: ifeq          47
       7: new           #14                 // class java/lang/IllegalStateException
      10: dup
      11: invokestatic  #15                 // Method org/apache/coyote/http2/Stream.access$400:()Lorg/apache/tomcat/util/res/StringManager;
      14: ldc           #16                 // String stream.closed
      16: iconst_2
      17: anewarray     #17                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      26: invokevirtual #18                 // Method org/apache/coyote/http2/Stream.getConnectionId:()Ljava/lang/String;
      29: aastore
      30: dup
      31: iconst_1
      32: aload_0
      33: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      36: invokevirtual #19                 // Method org/apache/coyote/http2/Stream.getIdentifier:()Ljava/lang/Integer;
      39: aastore
      40: invokevirtual #20                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      43: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: iconst_0
      48: istore_2
      49: aload_0
      50: getfield      #11                 // Field writeBuffer:Lorg/apache/tomcat/util/net/WriteBuffer;
      53: invokevirtual #34                 // Method org/apache/tomcat/util/net/WriteBuffer.isEmpty:()Z
      56: ifeq          189
      59: aload_1
      60: invokevirtual #35                 // Method java/nio/ByteBuffer.limit:()I
      63: istore_3
      64: aload_1
      65: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
      68: ifle          186
      71: aload_0
      72: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      75: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
      78: aload_1
      79: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
      82: invokestatic  #27                 // Method java/lang/Math.min:(II)I
      85: istore        4
      87: aload_1
      88: aload_1
      89: invokevirtual #36                 // Method java/nio/ByteBuffer.position:()I
      92: iload         4
      94: iadd
      95: invokevirtual #37                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      98: pop
      99: aload_0
     100: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
     103: aload_1
     104: invokevirtual #38                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     107: pop
     108: aload_1
     109: iload_3
     110: invokevirtual #37                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     113: pop
     114: iload_2
     115: iload         4
     117: iadd
     118: istore_2
     119: aload_1
     120: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
     123: ifle          183
     126: aload_0
     127: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
     130: invokevirtual #31                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     133: ifne          183
     136: aload_0
     137: iconst_1
     138: aload_0
     139: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     142: invokestatic  #22                 // Method org/apache/coyote/http2/Stream.access$500:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/Response;
     145: invokevirtual #32                 // Method org/apache/coyote/Response.getWriteListener:()Ljavax/servlet/WriteListener;
     148: ifnonnull     155
     151: iconst_1
     152: goto          156
     155: iconst_0
     156: invokespecial #33                 // Method flush:(ZZ)Z
     159: ifeq          183
     162: aload_1
     163: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
     166: istore_2
     167: aload_0
     168: getfield      #11                 // Field writeBuffer:Lorg/apache/tomcat/util/net/WriteBuffer;
     171: aload_1
     172: invokevirtual #39                 // Method org/apache/tomcat/util/net/WriteBuffer.add:(Ljava/nio/ByteBuffer;)V
     175: aload_0
     176: iconst_1
     177: putfield      #40                 // Field dataLeft:Z
     180: goto          186
     183: goto          64
     186: goto          202
     189: aload_1
     190: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
     193: istore_2
     194: aload_0
     195: getfield      #11                 // Field writeBuffer:Lorg/apache/tomcat/util/net/WriteBuffer;
     198: aload_1
     199: invokevirtual #39                 // Method org/apache/tomcat/util/net/WriteBuffer.add:(Ljava/nio/ByteBuffer;)V
     202: aload_0
     203: dup
     204: getfield      #12                 // Field written:J
     207: iload_2
     208: i2l
     209: ladd
     210: putfield      #12                 // Field written:J
     213: iload_2
     214: ireturn

  public synchronized boolean flush(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #36                 // Method java/nio/ByteBuffer.position:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: istore_2
      16: iconst_0
      17: istore_3
      18: iload_2
      19: ifeq          31
      22: aload_0
      23: iconst_0
      24: iload_1
      25: invokespecial #33                 // Method flush:(ZZ)Z
      28: istore_2
      29: iconst_1
      30: istore_3
      31: iload_2
      32: ifeq          43
      35: aload_0
      36: iconst_1
      37: putfield      #40                 // Field dataLeft:Z
      40: goto          91
      43: aload_0
      44: getfield      #11                 // Field writeBuffer:Lorg/apache/tomcat/util/net/WriteBuffer;
      47: invokevirtual #34                 // Method org/apache/tomcat/util/net/WriteBuffer.isEmpty:()Z
      50: ifeq          78
      53: iload_3
      54: ifeq          65
      57: aload_0
      58: iconst_0
      59: putfield      #40                 // Field dataLeft:Z
      62: goto          91
      65: aload_0
      66: aload_0
      67: iconst_0
      68: iload_1
      69: invokespecial #33                 // Method flush:(ZZ)Z
      72: putfield      #40                 // Field dataLeft:Z
      75: goto          91
      78: aload_0
      79: aload_0
      80: getfield      #11                 // Field writeBuffer:Lorg/apache/tomcat/util/net/WriteBuffer;
      83: aload_0
      84: iload_1
      85: invokevirtual #41                 // Method org/apache/tomcat/util/net/WriteBuffer.write:(Lorg/apache/tomcat/util/net/WriteBuffer$Sink;Z)Z
      88: putfield      #40                 // Field dataLeft:Z
      91: aload_0
      92: getfield      #40                 // Field dataLeft:Z
      95: ireturn

  private synchronized boolean flush(boolean, boolean) throws java.io.IOException;
    Code:
       0: invokestatic  #42                 // Method org/apache/coyote/http2/Stream.access$600:()Lorg/apache/juli/logging/Log;
       3: invokeinterface #43,  1           // InterfaceMethod org/apache/juli/logging/Log.isDebugEnabled:()Z
       8: ifeq          81
      11: invokestatic  #42                 // Method org/apache/coyote/http2/Stream.access$600:()Lorg/apache/juli/logging/Log;
      14: invokestatic  #15                 // Method org/apache/coyote/http2/Stream.access$400:()Lorg/apache/tomcat/util/res/StringManager;
      17: ldc           #44                 // String stream.outputBuffer.flush.debug
      19: iconst_5
      20: anewarray     #17                 // class java/lang/Object
      23: dup
      24: iconst_0
      25: aload_0
      26: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      29: invokevirtual #18                 // Method org/apache/coyote/http2/Stream.getConnectionId:()Ljava/lang/String;
      32: aastore
      33: dup
      34: iconst_1
      35: aload_0
      36: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      39: invokevirtual #19                 // Method org/apache/coyote/http2/Stream.getIdentifier:()Ljava/lang/Integer;
      42: aastore
      43: dup
      44: iconst_2
      45: aload_0
      46: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      49: invokevirtual #36                 // Method java/nio/ByteBuffer.position:()I
      52: invokestatic  #45                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      55: aastore
      56: dup
      57: iconst_3
      58: iload_1
      59: invokestatic  #46                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
      62: aastore
      63: dup
      64: iconst_4
      65: aload_0
      66: getfield      #3                  // Field closed:Z
      69: invokestatic  #46                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
      72: aastore
      73: invokevirtual #20                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      76: invokeinterface #47,  2           // InterfaceMethod org/apache/juli/logging/Log.debug:(Ljava/lang/Object;)V
      81: aload_0
      82: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      85: invokevirtual #36                 // Method java/nio/ByteBuffer.position:()I
      88: ifne          127
      91: aload_0
      92: getfield      #3                  // Field closed:Z
      95: ifeq          125
      98: aload_0
      99: getfield      #1                  // Field endOfStreamSent:Z
     102: ifne          125
     105: aload_0
     106: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     109: invokestatic  #48                 // Method org/apache/coyote/http2/Stream.access$700:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/http2/Http2UpgradeHandler;
     112: aload_0
     113: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     116: aload_0
     117: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
     120: iconst_0
     121: iconst_1
     122: invokevirtual #49                 // Method org/apache/coyote/http2/Http2UpgradeHandler.writeBody:(Lorg/apache/coyote/http2/Stream;Ljava/nio/ByteBuffer;IZ)V
     125: iconst_0
     126: ireturn
     127: aload_0
     128: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
     131: invokevirtual #50                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     134: pop
     135: aload_0
     136: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
     139: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
     142: istore_3
     143: iload_3
     144: ifle          288
     147: aload_0
     148: getfield      #13                 // Field streamReservation:I
     151: ifne          184
     154: aload_0
     155: aload_0
     156: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     159: iload_3
     160: iload_2
     161: invokestatic  #51                 // Method org/apache/coyote/http2/Stream.access$800:(Lorg/apache/coyote/http2/Stream;IZ)I
     164: putfield      #13                 // Field streamReservation:I
     167: aload_0
     168: getfield      #13                 // Field streamReservation:I
     171: ifne          184
     174: aload_0
     175: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
     178: invokevirtual #52                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     181: pop
     182: iconst_1
     183: ireturn
     184: aload_0
     185: getfield      #13                 // Field streamReservation:I
     188: ifle          143
     191: aload_0
     192: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     195: invokestatic  #48                 // Method org/apache/coyote/http2/Stream.access$700:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/http2/Http2UpgradeHandler;
     198: aload_0
     199: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     202: aload_0
     203: getfield      #13                 // Field streamReservation:I
     206: iload_2
     207: invokevirtual #53                 // Method org/apache/coyote/http2/Http2UpgradeHandler.reserveWindowSize:(Lorg/apache/coyote/http2/Stream;IZ)I
     210: istore        4
     212: iload         4
     214: ifne          227
     217: aload_0
     218: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
     221: invokevirtual #52                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     224: pop
     225: iconst_1
     226: ireturn
     227: aload_0
     228: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     231: invokestatic  #48                 // Method org/apache/coyote/http2/Stream.access$700:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/http2/Http2UpgradeHandler;
     234: aload_0
     235: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     238: aload_0
     239: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
     242: iload         4
     244: iload_1
     245: ifne          265
     248: aload_0
     249: getfield      #3                  // Field closed:Z
     252: ifeq          265
     255: iload_3
     256: iload         4
     258: if_icmpne     265
     261: iconst_1
     262: goto          266
     265: iconst_0
     266: invokevirtual #49                 // Method org/apache/coyote/http2/Http2UpgradeHandler.writeBody:(Lorg/apache/coyote/http2/Stream;Ljava/nio/ByteBuffer;IZ)V
     269: aload_0
     270: dup
     271: getfield      #13                 // Field streamReservation:I
     274: iload         4
     276: isub
     277: putfield      #13                 // Field streamReservation:I
     280: iload_3
     281: iload         4
     283: isub
     284: istore_3
     285: goto          184
     288: aload_0
     289: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
     292: invokevirtual #54                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     295: pop
     296: iconst_0
     297: ireturn

  synchronized boolean isReady();
    Code:
       0: aload_0
       1: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
       4: invokevirtual #55                 // Method org/apache/coyote/http2/Stream.getWindowSize:()J
       7: lconst_0
       8: lcmp
       9: ifle          25
      12: aload_0
      13: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      16: invokestatic  #56                 // Method org/apache/coyote/http2/Stream.access$900:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/http2/WindowAllocationManager;
      19: invokevirtual #57                 // Method org/apache/coyote/http2/WindowAllocationManager.isWaitingForStream:()Z
      22: ifne          60
      25: aload_0
      26: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      29: invokestatic  #48                 // Method org/apache/coyote/http2/Stream.access$700:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/http2/Http2UpgradeHandler;
      32: invokevirtual #58                 // Method org/apache/coyote/http2/Http2UpgradeHandler.getWindowSize:()J
      35: lconst_0
      36: lcmp
      37: ifle          53
      40: aload_0
      41: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      44: invokestatic  #56                 // Method org/apache/coyote/http2/Stream.access$900:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/http2/WindowAllocationManager;
      47: invokevirtual #59                 // Method org/apache/coyote/http2/WindowAllocationManager.isWaitingForConnection:()Z
      50: ifne          60
      53: aload_0
      54: getfield      #40                 // Field dataLeft:Z
      57: ifeq          62
      60: iconst_0
      61: ireturn
      62: iconst_1
      63: ireturn

  public long getBytesWritten();
    Code:
       0: aload_0
       1: getfield      #12                 // Field written:J
       4: lreturn

  public final void end() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field reset:Lorg/apache/coyote/http2/StreamException;
       4: ifnull        19
       7: new           #60                 // class org/apache/coyote/CloseNowException
      10: dup
      11: aload_0
      12: getfield      #2                  // Field reset:Lorg/apache/coyote/http2/StreamException;
      15: invokespecial #61                 // Method org/apache/coyote/CloseNowException."<init>":(Ljava/lang/Throwable;)V
      18: athrow
      19: aload_0
      20: getfield      #3                  // Field closed:Z
      23: ifne          37
      26: aload_0
      27: iconst_1
      28: putfield      #3                  // Field closed:Z
      31: aload_0
      32: iconst_1
      33: invokevirtual #62                 // Method flush:(Z)Z
      36: pop
      37: return

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #3                  // Field closed:Z
       4: ireturn

  public boolean hasNoBody();
    Code:
       0: aload_0
       1: getfield      #12                 // Field written:J
       4: lconst_0
       5: lcmp
       6: ifne          20
       9: aload_0
      10: getfield      #3                  // Field closed:Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
       5: invokevirtual #63                 // Method org/apache/coyote/http2/Stream.getCoyoteResponse:()Lorg/apache/coyote/Response;
       8: invokevirtual #32                 // Method org/apache/coyote/Response.getWriteListener:()Ljavax/servlet/WriteListener;
      11: ifnonnull     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokevirtual #62                 // Method flush:(Z)Z
      22: pop
      23: return

  public synchronized boolean writeFromBuffer(java.nio.ByteBuffer, boolean) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #35                 // Method java/nio/ByteBuffer.limit:()I
       4: istore_3
       5: aload_1
       6: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
       9: ifle          69
      12: aload_0
      13: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      16: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
      19: aload_1
      20: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
      23: invokestatic  #27                 // Method java/lang/Math.min:(II)I
      26: istore        4
      28: aload_1
      29: aload_1
      30: invokevirtual #36                 // Method java/nio/ByteBuffer.position:()I
      33: iload         4
      35: iadd
      36: invokevirtual #37                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      39: pop
      40: aload_0
      41: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      44: aload_1
      45: invokevirtual #38                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      48: pop
      49: aload_1
      50: iload_3
      51: invokevirtual #37                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      54: pop
      55: aload_0
      56: iconst_0
      57: iload_2
      58: invokespecial #33                 // Method flush:(ZZ)Z
      61: ifeq          66
      64: iconst_1
      65: ireturn
      66: goto          5
      69: iconst_0
      70: ireturn

  static boolean access$002(org.apache.coyote.http2.Stream$StreamOutputBuffer, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #3                  // Field closed:Z
       6: ireturn

  static org.apache.coyote.http2.StreamException access$102(org.apache.coyote.http2.Stream$StreamOutputBuffer, org.apache.coyote.http2.StreamException);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field reset:Lorg/apache/coyote/http2/StreamException;
       6: areturn

  static boolean access$302(org.apache.coyote.http2.Stream$StreamOutputBuffer, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #1                  // Field endOfStreamSent:Z
       6: ireturn

  static org.apache.coyote.http2.StreamException access$100(org.apache.coyote.http2.Stream$StreamOutputBuffer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field reset:Lorg/apache/coyote/http2/StreamException;
       4: areturn
}
