Compiled from "LogFactory.java"
public class org.apache.juli.logging.LogFactory {
  private static final org.apache.juli.logging.LogFactory singleton;

  private final java.lang.reflect.Constructor<? extends org.apache.juli.logging.Log> discoveredLogConstructor;

  private org.apache.juli.logging.LogFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: invokestatic  #2                  // Method java/nio/file/FileSystems.getDefault:()Ljava/nio/file/FileSystem;
       7: pop
       8: ldc_w         #3                  // class org/apache/juli/logging/Log
      11: invokestatic  #4                  // Method java/util/ServiceLoader.load:(Ljava/lang/Class;)Ljava/util/ServiceLoader;
      14: astore_1
      15: aconst_null
      16: astore_2
      17: aload_1
      18: invokevirtual #5                  // Method java/util/ServiceLoader.iterator:()Ljava/util/Iterator;
      21: astore_3
      22: aload_3
      23: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          80
      31: aload_3
      32: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #3                  // class org/apache/juli/logging/Log
      40: astore        4
      42: aload         4
      44: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      47: astore        5
      49: aload         5
      51: iconst_1
      52: anewarray     #9                  // class java/lang/Class
      55: dup
      56: iconst_0
      57: ldc_w         #10                 // class java/lang/String
      60: aastore
      61: invokevirtual #11                 // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      64: astore_2
      65: goto          80
      68: astore        6
      70: new           #14                 // class java/lang/Error
      73: dup
      74: aload         6
      76: invokespecial #15                 // Method java/lang/Error."<init>":(Ljava/lang/Throwable;)V
      79: athrow
      80: aload_0
      81: aload_2
      82: putfield      #16                 // Field discoveredLogConstructor:Ljava/lang/reflect/Constructor;
      85: return
    Exception table:
       from    to  target type
          49    65    68   Class java/lang/NoSuchMethodException
          49    65    68   Class java/lang/SecurityException

  public org.apache.juli.logging.Log getInstance(java.lang.String) throws org.apache.juli.logging.LogConfigurationException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field discoveredLogConstructor:Ljava/lang/reflect/Constructor;
       4: ifnonnull     12
       7: aload_1
       8: invokestatic  #17                 // Method org/apache/juli/logging/DirectJDKLog.getInstance:(Ljava/lang/String;)Lorg/apache/juli/logging/Log;
      11: areturn
      12: aload_0
      13: getfield      #16                 // Field discoveredLogConstructor:Ljava/lang/reflect/Constructor;
      16: iconst_1
      17: anewarray     #18                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_1
      23: aastore
      24: invokevirtual #19                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #3                  // class org/apache/juli/logging/Log
      30: areturn
      31: astore_2
      32: new           #22                 // class org/apache/juli/logging/LogConfigurationException
      35: dup
      36: aload_2
      37: invokespecial #23                 // Method org/apache/juli/logging/LogConfigurationException."<init>":(Ljava/lang/Throwable;)V
      40: athrow
    Exception table:
       from    to  target type
          12    30    31   Class java/lang/ReflectiveOperationException
          12    30    31   Class java/lang/IllegalArgumentException

  public org.apache.juli.logging.Log getInstance(java.lang.Class<?>) throws org.apache.juli.logging.LogConfigurationException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokevirtual #25                 // Method getInstance:(Ljava/lang/String;)Lorg/apache/juli/logging/Log;
       8: areturn

  public static org.apache.juli.logging.LogFactory getFactory() throws org.apache.juli.logging.LogConfigurationException;
    Code:
       0: getstatic     #26                 // Field singleton:Lorg/apache/juli/logging/LogFactory;
       3: areturn

  public static org.apache.juli.logging.Log getLog(java.lang.Class<?>) throws org.apache.juli.logging.LogConfigurationException;
    Code:
       0: invokestatic  #27                 // Method getFactory:()Lorg/apache/juli/logging/LogFactory;
       3: aload_0
       4: invokevirtual #28                 // Method getInstance:(Ljava/lang/Class;)Lorg/apache/juli/logging/Log;
       7: areturn

  public static org.apache.juli.logging.Log getLog(java.lang.String) throws org.apache.juli.logging.LogConfigurationException;
    Code:
       0: invokestatic  #27                 // Method getFactory:()Lorg/apache/juli/logging/LogFactory;
       3: aload_0
       4: invokevirtual #25                 // Method getInstance:(Ljava/lang/String;)Lorg/apache/juli/logging/Log;
       7: areturn

  public static void release(java.lang.ClassLoader);
    Code:
       0: invokestatic  #29                 // Method java/util/logging/LogManager.getLogManager:()Ljava/util/logging/LogManager;
       3: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: invokevirtual #24                 // Method java/lang/Class.getName:()Ljava/lang/String;
       9: ldc           #30                 // String java.util.logging.LogManager
      11: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      14: ifne          23
      17: invokestatic  #29                 // Method java/util/logging/LogManager.getLogManager:()Ljava/util/logging/LogManager;
      20: invokevirtual #32                 // Method java/util/logging/LogManager.reset:()V
      23: return

  static {};
    Code:
       0: new           #33                 // class org/apache/juli/logging/LogFactory
       3: dup
       4: invokespecial #34                 // Method "<init>":()V
       7: putstatic     #26                 // Field singleton:Lorg/apache/juli/logging/LogFactory;
      10: return
}
