Compiled from "SortedArrayStringMap.java"
public class org.apache.logging.log4j.util.SortedArrayStringMap implements org.apache.logging.log4j.util.IndexedStringMap {
  private static final int DEFAULT_INITIAL_CAPACITY;

  private static final long serialVersionUID;

  private static final int HASHVAL;

  private static final org.apache.logging.log4j.util.TriConsumer<java.lang.String, java.lang.Object, org.apache.logging.log4j.util.StringMap> PUT_ALL;

  private static final java.lang.String[] EMPTY;

  private static final java.lang.String FROZEN;

  private transient java.lang.String[] keys;

  private transient java.lang.Object[] values;

  private transient int size;

  private int threshold;

  private boolean immutable;

  private transient boolean iterating;

  public org.apache.logging.log4j.util.SortedArrayStringMap();
    Code:
       0: aload_0
       1: iconst_4
       2: invokespecial #1                  // Method "<init>":(I)V
       5: return

  public org.apache.logging.log4j.util.SortedArrayStringMap(int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field EMPTY:[Ljava/lang/String;
       8: putfield      #4                  // Field keys:[Ljava/lang/String;
      11: aload_0
      12: getstatic     #3                  // Field EMPTY:[Ljava/lang/String;
      15: putfield      #5                  // Field values:[Ljava/lang/Object;
      18: iload_1
      19: iconst_1
      20: if_icmpge     50
      23: new           #6                  // class java/lang/IllegalArgumentException
      26: dup
      27: new           #7                  // class java/lang/StringBuilder
      30: dup
      31: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #9                  // String Initial capacity must be at least one but was
      36: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: iload_1
      40: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: iload_1
      52: invokestatic  #14                 // Method ceilingNextPowerOfTwo:(I)I
      55: putfield      #15                 // Field threshold:I
      58: return

  public org.apache.logging.log4j.util.SortedArrayStringMap(org.apache.logging.log4j.util.ReadOnlyStringMap);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field EMPTY:[Ljava/lang/String;
       8: putfield      #4                  // Field keys:[Ljava/lang/String;
      11: aload_0
      12: getstatic     #3                  // Field EMPTY:[Ljava/lang/String;
      15: putfield      #5                  // Field values:[Ljava/lang/Object;
      18: aload_1
      19: instanceof    #16                 // class org/apache/logging/log4j/util/SortedArrayStringMap
      22: ifeq          36
      25: aload_0
      26: aload_1
      27: checkcast     #16                 // class org/apache/logging/log4j/util/SortedArrayStringMap
      30: invokespecial #17                 // Method initFrom0:(Lorg/apache/logging/log4j/util/SortedArrayStringMap;)V
      33: goto          63
      36: aload_1
      37: ifnull        63
      40: aload_0
      41: aload_1
      42: invokeinterface #18,  1           // InterfaceMethod org/apache/logging/log4j/util/ReadOnlyStringMap.size:()I
      47: invokestatic  #14                 // Method ceilingNextPowerOfTwo:(I)I
      50: invokespecial #19                 // Method resize:(I)V
      53: aload_1
      54: getstatic     #20                 // Field PUT_ALL:Lorg/apache/logging/log4j/util/TriConsumer;
      57: aload_0
      58: invokeinterface #21,  3           // InterfaceMethod org/apache/logging/log4j/util/ReadOnlyStringMap.forEach:(Lorg/apache/logging/log4j/util/TriConsumer;Ljava/lang/Object;)V
      63: return

  public org.apache.logging.log4j.util.SortedArrayStringMap(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field EMPTY:[Ljava/lang/String;
       8: putfield      #4                  // Field keys:[Ljava/lang/String;
      11: aload_0
      12: getstatic     #3                  // Field EMPTY:[Ljava/lang/String;
      15: putfield      #5                  // Field values:[Ljava/lang/Object;
      18: aload_0
      19: aload_1
      20: invokeinterface #22,  1           // InterfaceMethod java/util/Map.size:()I
      25: invokestatic  #14                 // Method ceilingNextPowerOfTwo:(I)I
      28: invokespecial #19                 // Method resize:(I)V
      31: aload_1
      32: invokeinterface #23,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      37: invokeinterface #24,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      42: astore_2
      43: aload_2
      44: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          84
      52: aload_2
      53: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #27                 // class java/util/Map$Entry
      61: astore_3
      62: aload_0
      63: aload_3
      64: invokeinterface #28,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      69: checkcast     #29                 // class java/lang/String
      72: aload_3
      73: invokeinterface #30,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      78: invokevirtual #31                 // Method putValue:(Ljava/lang/String;Ljava/lang/Object;)V
      81: goto          43
      84: return

  private void assertNotFrozen();
    Code:
       0: aload_0
       1: getfield      #32                 // Field immutable:Z
       4: ifeq          17
       7: new           #33                 // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #34                 // String Frozen collection cannot be modified
      13: invokespecial #35                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  private void assertNoConcurrentModification();
    Code:
       0: aload_0
       1: getfield      #36                 // Field iterating:Z
       4: ifeq          15
       7: new           #37                 // class java/util/ConcurrentModificationException
      10: dup
      11: invokespecial #38                 // Method java/util/ConcurrentModificationException."<init>":()V
      14: athrow
      15: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #4                  // Field keys:[Ljava/lang/String;
       4: getstatic     #3                  // Field EMPTY:[Ljava/lang/String;
       7: if_acmpne     11
      10: return
      11: aload_0
      12: invokespecial #39                 // Method assertNotFrozen:()V
      15: aload_0
      16: invokespecial #40                 // Method assertNoConcurrentModification:()V
      19: aload_0
      20: getfield      #4                  // Field keys:[Ljava/lang/String;
      23: iconst_0
      24: aload_0
      25: getfield      #41                 // Field size:I
      28: aconst_null
      29: invokestatic  #42                 // Method java/util/Arrays.fill:([Ljava/lang/Object;IILjava/lang/Object;)V
      32: aload_0
      33: getfield      #5                  // Field values:[Ljava/lang/Object;
      36: iconst_0
      37: aload_0
      38: getfield      #41                 // Field size:I
      41: aconst_null
      42: invokestatic  #42                 // Method java/util/Arrays.fill:([Ljava/lang/Object;IILjava/lang/Object;)V
      45: aload_0
      46: iconst_0
      47: putfield      #41                 // Field size:I
      50: return

  public boolean containsKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method indexOfKey:(Ljava/lang/String;)I
       5: iflt          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public java.util.Map<java.lang.String, java.lang.String> toMap();
    Code:
       0: new           #44                 // class java/util/HashMap
       3: dup
       4: aload_0
       5: invokevirtual #45                 // Method size:()I
       8: invokespecial #46                 // Method java/util/HashMap."<init>":(I)V
      11: astore_1
      12: iconst_0
      13: istore_2
      14: iload_2
      15: aload_0
      16: invokevirtual #45                 // Method size:()I
      19: if_icmpge     58
      22: aload_0
      23: iload_2
      24: invokevirtual #47                 // Method getValueAt:(I)Ljava/lang/Object;
      27: astore_3
      28: aload_1
      29: aload_0
      30: iload_2
      31: invokevirtual #48                 // Method getKeyAt:(I)Ljava/lang/String;
      34: aload_3
      35: ifnonnull     42
      38: aconst_null
      39: goto          46
      42: aload_3
      43: invokestatic  #49                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      46: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      51: pop
      52: iinc          2, 1
      55: goto          14
      58: aload_1
      59: areturn

  public void freeze();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #32                 // Field immutable:Z
       5: return

  public boolean isFrozen();
    Code:
       0: aload_0
       1: getfield      #32                 // Field immutable:Z
       4: ireturn

  public <V> V getValue(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method indexOfKey:(Ljava/lang/String;)I
       5: istore_2
       6: iload_2
       7: ifge          12
      10: aconst_null
      11: areturn
      12: aload_0
      13: getfield      #5                  // Field values:[Ljava/lang/Object;
      16: iload_2
      17: aaload
      18: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #41                 // Field size:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public int indexOfKey(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field keys:[Ljava/lang/String;
       4: getstatic     #3                  // Field EMPTY:[Ljava/lang/String;
       7: if_acmpne     12
      10: iconst_m1
      11: ireturn
      12: aload_1
      13: ifnonnull     21
      16: aload_0
      17: invokespecial #51                 // Method nullKeyIndex:()I
      20: ireturn
      21: aload_0
      22: getfield      #41                 // Field size:I
      25: ifle          41
      28: aload_0
      29: getfield      #4                  // Field keys:[Ljava/lang/String;
      32: iconst_0
      33: aaload
      34: ifnonnull     41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: istore_2
      43: aload_0
      44: getfield      #4                  // Field keys:[Ljava/lang/String;
      47: iload_2
      48: aload_0
      49: getfield      #41                 // Field size:I
      52: aload_1
      53: invokestatic  #52                 // Method java/util/Arrays.binarySearch:([Ljava/lang/Object;IILjava/lang/Object;)I
      56: ireturn

  private int nullKeyIndex();
    Code:
       0: aload_0
       1: getfield      #41                 // Field size:I
       4: ifle          20
       7: aload_0
       8: getfield      #4                  // Field keys:[Ljava/lang/String;
      11: iconst_0
      12: aaload
      13: ifnonnull     20
      16: iconst_0
      17: goto          21
      20: iconst_m1
      21: ireturn

  public void putValue(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #39                 // Method assertNotFrozen:()V
       4: aload_0
       5: invokespecial #40                 // Method assertNoConcurrentModification:()V
       8: aload_0
       9: getfield      #4                  // Field keys:[Ljava/lang/String;
      12: getstatic     #3                  // Field EMPTY:[Ljava/lang/String;
      15: if_acmpne     26
      18: aload_0
      19: aload_0
      20: getfield      #15                 // Field threshold:I
      23: invokespecial #53                 // Method inflateTable:(I)V
      26: aload_0
      27: aload_1
      28: invokevirtual #43                 // Method indexOfKey:(Ljava/lang/String;)I
      31: istore_3
      32: iload_3
      33: iflt          53
      36: aload_0
      37: getfield      #4                  // Field keys:[Ljava/lang/String;
      40: iload_3
      41: aload_1
      42: aastore
      43: aload_0
      44: getfield      #5                  // Field values:[Ljava/lang/Object;
      47: iload_3
      48: aload_2
      49: aastore
      50: goto          62
      53: aload_0
      54: iload_3
      55: iconst_m1
      56: ixor
      57: aload_1
      58: aload_2
      59: invokespecial #54                 // Method insertAt:(ILjava/lang/String;Ljava/lang/Object;)V
      62: return

  private void insertAt(int, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method ensureCapacity:()V
       4: aload_0
       5: getfield      #4                  // Field keys:[Ljava/lang/String;
       8: iload_1
       9: aload_0
      10: getfield      #4                  // Field keys:[Ljava/lang/String;
      13: iload_1
      14: iconst_1
      15: iadd
      16: aload_0
      17: getfield      #41                 // Field size:I
      20: iload_1
      21: isub
      22: invokestatic  #56                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      25: aload_0
      26: getfield      #5                  // Field values:[Ljava/lang/Object;
      29: iload_1
      30: aload_0
      31: getfield      #5                  // Field values:[Ljava/lang/Object;
      34: iload_1
      35: iconst_1
      36: iadd
      37: aload_0
      38: getfield      #41                 // Field size:I
      41: iload_1
      42: isub
      43: invokestatic  #56                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      46: aload_0
      47: getfield      #4                  // Field keys:[Ljava/lang/String;
      50: iload_1
      51: aload_2
      52: aastore
      53: aload_0
      54: getfield      #5                  // Field values:[Ljava/lang/Object;
      57: iload_1
      58: aload_3
      59: aastore
      60: aload_0
      61: dup
      62: getfield      #41                 // Field size:I
      65: iconst_1
      66: iadd
      67: putfield      #41                 // Field size:I
      70: return

  public void putAll(org.apache.logging.log4j.util.ReadOnlyStringMap);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpeq     18
       5: aload_1
       6: ifnull        18
       9: aload_1
      10: invokeinterface #57,  1           // InterfaceMethod org/apache/logging/log4j/util/ReadOnlyStringMap.isEmpty:()Z
      15: ifeq          19
      18: return
      19: aload_0
      20: invokespecial #39                 // Method assertNotFrozen:()V
      23: aload_0
      24: invokespecial #40                 // Method assertNoConcurrentModification:()V
      27: aload_1
      28: instanceof    #16                 // class org/apache/logging/log4j/util/SortedArrayStringMap
      31: ifeq          63
      34: aload_0
      35: getfield      #41                 // Field size:I
      38: ifne          52
      41: aload_0
      42: aload_1
      43: checkcast     #16                 // class org/apache/logging/log4j/util/SortedArrayStringMap
      46: invokespecial #17                 // Method initFrom0:(Lorg/apache/logging/log4j/util/SortedArrayStringMap;)V
      49: goto          77
      52: aload_0
      53: aload_1
      54: checkcast     #16                 // class org/apache/logging/log4j/util/SortedArrayStringMap
      57: invokespecial #58                 // Method merge:(Lorg/apache/logging/log4j/util/SortedArrayStringMap;)V
      60: goto          77
      63: aload_1
      64: ifnull        77
      67: aload_1
      68: getstatic     #20                 // Field PUT_ALL:Lorg/apache/logging/log4j/util/TriConsumer;
      71: aload_0
      72: invokeinterface #21,  3           // InterfaceMethod org/apache/logging/log4j/util/ReadOnlyStringMap.forEach:(Lorg/apache/logging/log4j/util/TriConsumer;Ljava/lang/Object;)V
      77: return

  private void initFrom0(org.apache.logging.log4j.util.SortedArrayStringMap);
    Code:
       0: aload_0
       1: getfield      #4                  // Field keys:[Ljava/lang/String;
       4: arraylength
       5: aload_1
       6: getfield      #41                 // Field size:I
       9: if_icmpge     34
      12: aload_0
      13: aload_1
      14: getfield      #15                 // Field threshold:I
      17: anewarray     #29                 // class java/lang/String
      20: putfield      #4                  // Field keys:[Ljava/lang/String;
      23: aload_0
      24: aload_1
      25: getfield      #15                 // Field threshold:I
      28: anewarray     #59                 // class java/lang/Object
      31: putfield      #5                  // Field values:[Ljava/lang/Object;
      34: aload_1
      35: getfield      #4                  // Field keys:[Ljava/lang/String;
      38: iconst_0
      39: aload_0
      40: getfield      #4                  // Field keys:[Ljava/lang/String;
      43: iconst_0
      44: aload_1
      45: getfield      #41                 // Field size:I
      48: invokestatic  #56                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      51: aload_1
      52: getfield      #5                  // Field values:[Ljava/lang/Object;
      55: iconst_0
      56: aload_0
      57: getfield      #5                  // Field values:[Ljava/lang/Object;
      60: iconst_0
      61: aload_1
      62: getfield      #41                 // Field size:I
      65: invokestatic  #56                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      68: aload_0
      69: aload_1
      70: getfield      #41                 // Field size:I
      73: putfield      #41                 // Field size:I
      76: aload_0
      77: aload_1
      78: getfield      #15                 // Field threshold:I
      81: putfield      #15                 // Field threshold:I
      84: return

  private void merge(org.apache.logging.log4j.util.SortedArrayStringMap);
    Code:
       0: aload_0
       1: getfield      #4                  // Field keys:[Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #5                  // Field values:[Ljava/lang/Object;
       9: astore_3
      10: aload_1
      11: getfield      #41                 // Field size:I
      14: aload_0
      15: getfield      #41                 // Field size:I
      18: iadd
      19: istore        4
      21: aload_0
      22: iload         4
      24: invokestatic  #14                 // Method ceilingNextPowerOfTwo:(I)I
      27: putfield      #15                 // Field threshold:I
      30: aload_0
      31: getfield      #4                  // Field keys:[Ljava/lang/String;
      34: arraylength
      35: aload_0
      36: getfield      #15                 // Field threshold:I
      39: if_icmpge     64
      42: aload_0
      43: aload_0
      44: getfield      #15                 // Field threshold:I
      47: anewarray     #29                 // class java/lang/String
      50: putfield      #4                  // Field keys:[Ljava/lang/String;
      53: aload_0
      54: aload_0
      55: getfield      #15                 // Field threshold:I
      58: anewarray     #59                 // class java/lang/Object
      61: putfield      #5                  // Field values:[Ljava/lang/Object;
      64: iconst_1
      65: istore        5
      67: aload_1
      68: invokevirtual #45                 // Method size:()I
      71: aload_0
      72: invokevirtual #45                 // Method size:()I
      75: if_icmple     160
      78: aload_2
      79: iconst_0
      80: aload_0
      81: getfield      #4                  // Field keys:[Ljava/lang/String;
      84: aload_1
      85: getfield      #41                 // Field size:I
      88: aload_0
      89: getfield      #41                 // Field size:I
      92: invokestatic  #56                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      95: aload_3
      96: iconst_0
      97: aload_0
      98: getfield      #5                  // Field values:[Ljava/lang/Object;
     101: aload_1
     102: getfield      #41                 // Field size:I
     105: aload_0
     106: getfield      #41                 // Field size:I
     109: invokestatic  #56                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     112: aload_1
     113: getfield      #4                  // Field keys:[Ljava/lang/String;
     116: iconst_0
     117: aload_0
     118: getfield      #4                  // Field keys:[Ljava/lang/String;
     121: iconst_0
     122: aload_1
     123: getfield      #41                 // Field size:I
     126: invokestatic  #56                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     129: aload_1
     130: getfield      #5                  // Field values:[Ljava/lang/Object;
     133: iconst_0
     134: aload_0
     135: getfield      #5                  // Field values:[Ljava/lang/Object;
     138: iconst_0
     139: aload_1
     140: getfield      #41                 // Field size:I
     143: invokestatic  #56                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     146: aload_0
     147: aload_1
     148: getfield      #41                 // Field size:I
     151: putfield      #41                 // Field size:I
     154: iconst_0
     155: istore        5
     157: goto          228
     160: aload_2
     161: iconst_0
     162: aload_0
     163: getfield      #4                  // Field keys:[Ljava/lang/String;
     166: iconst_0
     167: aload_0
     168: getfield      #41                 // Field size:I
     171: invokestatic  #56                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     174: aload_3
     175: iconst_0
     176: aload_0
     177: getfield      #5                  // Field values:[Ljava/lang/Object;
     180: iconst_0
     181: aload_0
     182: getfield      #41                 // Field size:I
     185: invokestatic  #56                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     188: aload_1
     189: getfield      #4                  // Field keys:[Ljava/lang/String;
     192: iconst_0
     193: aload_0
     194: getfield      #4                  // Field keys:[Ljava/lang/String;
     197: aload_0
     198: getfield      #41                 // Field size:I
     201: aload_1
     202: getfield      #41                 // Field size:I
     205: invokestatic  #56                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     208: aload_1
     209: getfield      #5                  // Field values:[Ljava/lang/Object;
     212: iconst_0
     213: aload_0
     214: getfield      #5                  // Field values:[Ljava/lang/Object;
     217: aload_0
     218: getfield      #41                 // Field size:I
     221: aload_1
     222: getfield      #41                 // Field size:I
     225: invokestatic  #56                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     228: aload_0
     229: getfield      #41                 // Field size:I
     232: istore        6
     234: iload         6
     236: iload         4
     238: if_icmpge     323
     241: aload_0
     242: aload_0
     243: getfield      #4                  // Field keys:[Ljava/lang/String;
     246: iload         6
     248: aaload
     249: invokevirtual #43                 // Method indexOfKey:(Ljava/lang/String;)I
     252: istore        7
     254: iload         7
     256: ifge          284
     259: aload_0
     260: iload         7
     262: iconst_m1
     263: ixor
     264: aload_0
     265: getfield      #4                  // Field keys:[Ljava/lang/String;
     268: iload         6
     270: aaload
     271: aload_0
     272: getfield      #5                  // Field values:[Ljava/lang/Object;
     275: iload         6
     277: aaload
     278: invokespecial #54                 // Method insertAt:(ILjava/lang/String;Ljava/lang/Object;)V
     281: goto          317
     284: iload         5
     286: ifeq          317
     289: aload_0
     290: getfield      #4                  // Field keys:[Ljava/lang/String;
     293: iload         7
     295: aload_0
     296: getfield      #4                  // Field keys:[Ljava/lang/String;
     299: iload         6
     301: aaload
     302: aastore
     303: aload_0
     304: getfield      #5                  // Field values:[Ljava/lang/Object;
     307: iload         7
     309: aload_0
     310: getfield      #5                  // Field values:[Ljava/lang/Object;
     313: iload         6
     315: aaload
     316: aastore
     317: iinc          6, 1
     320: goto          234
     323: aload_0
     324: getfield      #4                  // Field keys:[Ljava/lang/String;
     327: aload_0
     328: getfield      #41                 // Field size:I
     331: iload         4
     333: aconst_null
     334: invokestatic  #42                 // Method java/util/Arrays.fill:([Ljava/lang/Object;IILjava/lang/Object;)V
     337: aload_0
     338: getfield      #5                  // Field values:[Ljava/lang/Object;
     341: aload_0
     342: getfield      #41                 // Field size:I
     345: iload         4
     347: aconst_null
     348: invokestatic  #42                 // Method java/util/Arrays.fill:([Ljava/lang/Object;IILjava/lang/Object;)V
     351: return

  private void ensureCapacity();
    Code:
       0: aload_0
       1: getfield      #41                 // Field size:I
       4: aload_0
       5: getfield      #15                 // Field threshold:I
       8: if_icmplt     21
      11: aload_0
      12: aload_0
      13: getfield      #15                 // Field threshold:I
      16: iconst_2
      17: imul
      18: invokespecial #19                 // Method resize:(I)V
      21: return

  private void resize(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field keys:[Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #5                  // Field values:[Ljava/lang/Object;
       9: astore_3
      10: aload_0
      11: iload_1
      12: anewarray     #29                 // class java/lang/String
      15: putfield      #4                  // Field keys:[Ljava/lang/String;
      18: aload_0
      19: iload_1
      20: anewarray     #59                 // class java/lang/Object
      23: putfield      #5                  // Field values:[Ljava/lang/Object;
      26: aload_2
      27: iconst_0
      28: aload_0
      29: getfield      #4                  // Field keys:[Ljava/lang/String;
      32: iconst_0
      33: aload_0
      34: getfield      #41                 // Field size:I
      37: invokestatic  #56                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      40: aload_3
      41: iconst_0
      42: aload_0
      43: getfield      #5                  // Field values:[Ljava/lang/Object;
      46: iconst_0
      47: aload_0
      48: getfield      #41                 // Field size:I
      51: invokestatic  #56                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      54: aload_0
      55: iload_1
      56: putfield      #15                 // Field threshold:I
      59: return

  private void inflateTable(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field threshold:I
       5: aload_0
       6: iload_1
       7: anewarray     #29                 // class java/lang/String
      10: putfield      #4                  // Field keys:[Ljava/lang/String;
      13: aload_0
      14: iload_1
      15: anewarray     #59                 // class java/lang/Object
      18: putfield      #5                  // Field values:[Ljava/lang/Object;
      21: return

  public void remove(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field keys:[Ljava/lang/String;
       4: getstatic     #3                  // Field EMPTY:[Ljava/lang/String;
       7: if_acmpne     11
      10: return
      11: aload_0
      12: aload_1
      13: invokevirtual #43                 // Method indexOfKey:(Ljava/lang/String;)I
      16: istore_2
      17: iload_2
      18: iflt          109
      21: aload_0
      22: invokespecial #39                 // Method assertNotFrozen:()V
      25: aload_0
      26: invokespecial #40                 // Method assertNoConcurrentModification:()V
      29: aload_0
      30: getfield      #4                  // Field keys:[Ljava/lang/String;
      33: iload_2
      34: iconst_1
      35: iadd
      36: aload_0
      37: getfield      #4                  // Field keys:[Ljava/lang/String;
      40: iload_2
      41: aload_0
      42: getfield      #41                 // Field size:I
      45: iconst_1
      46: isub
      47: iload_2
      48: isub
      49: invokestatic  #56                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      52: aload_0
      53: getfield      #5                  // Field values:[Ljava/lang/Object;
      56: iload_2
      57: iconst_1
      58: iadd
      59: aload_0
      60: getfield      #5                  // Field values:[Ljava/lang/Object;
      63: iload_2
      64: aload_0
      65: getfield      #41                 // Field size:I
      68: iconst_1
      69: isub
      70: iload_2
      71: isub
      72: invokestatic  #56                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      75: aload_0
      76: getfield      #4                  // Field keys:[Ljava/lang/String;
      79: aload_0
      80: getfield      #41                 // Field size:I
      83: iconst_1
      84: isub
      85: aconst_null
      86: aastore
      87: aload_0
      88: getfield      #5                  // Field values:[Ljava/lang/Object;
      91: aload_0
      92: getfield      #41                 // Field size:I
      95: iconst_1
      96: isub
      97: aconst_null
      98: aastore
      99: aload_0
     100: dup
     101: getfield      #41                 // Field size:I
     104: iconst_1
     105: isub
     106: putfield      #41                 // Field size:I
     109: return

  public java.lang.String getKeyAt(int);
    Code:
       0: iload_1
       1: iflt          12
       4: iload_1
       5: aload_0
       6: getfield      #41                 // Field size:I
       9: if_icmplt     14
      12: aconst_null
      13: areturn
      14: aload_0
      15: getfield      #4                  // Field keys:[Ljava/lang/String;
      18: iload_1
      19: aaload
      20: areturn

  public <V> V getValueAt(int);
    Code:
       0: iload_1
       1: iflt          12
       4: iload_1
       5: aload_0
       6: getfield      #41                 // Field size:I
       9: if_icmplt     14
      12: aconst_null
      13: areturn
      14: aload_0
      15: getfield      #5                  // Field values:[Ljava/lang/Object;
      18: iload_1
      19: aaload
      20: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #41                 // Field size:I
       4: ireturn

  public <V> void forEach(org.apache.logging.log4j.util.BiConsumer<java.lang.String, ? super V>);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #36                 // Field iterating:Z
       5: iconst_0
       6: istore_2
       7: iload_2
       8: aload_0
       9: getfield      #41                 // Field size:I
      12: if_icmpge     39
      15: aload_1
      16: aload_0
      17: getfield      #4                  // Field keys:[Ljava/lang/String;
      20: iload_2
      21: aaload
      22: aload_0
      23: getfield      #5                  // Field values:[Ljava/lang/Object;
      26: iload_2
      27: aaload
      28: invokeinterface #60,  3           // InterfaceMethod org/apache/logging/log4j/util/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      33: iinc          2, 1
      36: goto          7
      39: aload_0
      40: iconst_0
      41: putfield      #36                 // Field iterating:Z
      44: goto          55
      47: astore_3
      48: aload_0
      49: iconst_0
      50: putfield      #36                 // Field iterating:Z
      53: aload_3
      54: athrow
      55: return
    Exception table:
       from    to  target type
           5    39    47   any
          47    48    47   any

  public <V, T> void forEach(org.apache.logging.log4j.util.TriConsumer<java.lang.String, ? super V, T>, T);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #36                 // Field iterating:Z
       5: iconst_0
       6: istore_3
       7: iload_3
       8: aload_0
       9: getfield      #41                 // Field size:I
      12: if_icmpge     40
      15: aload_1
      16: aload_0
      17: getfield      #4                  // Field keys:[Ljava/lang/String;
      20: iload_3
      21: aaload
      22: aload_0
      23: getfield      #5                  // Field values:[Ljava/lang/Object;
      26: iload_3
      27: aaload
      28: aload_2
      29: invokeinterface #61,  4           // InterfaceMethod org/apache/logging/log4j/util/TriConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      34: iinc          3, 1
      37: goto          7
      40: aload_0
      41: iconst_0
      42: putfield      #36                 // Field iterating:Z
      45: goto          58
      48: astore        4
      50: aload_0
      51: iconst_0
      52: putfield      #36                 // Field iterating:Z
      55: aload         4
      57: athrow
      58: return
    Exception table:
       from    to  target type
           5    40    48   any
          48    50    48   any

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #16                 // class org/apache/logging/log4j/util/SortedArrayStringMap
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #16                 // class org/apache/logging/log4j/util/SortedArrayStringMap
      20: astore_2
      21: aload_0
      22: invokevirtual #45                 // Method size:()I
      25: aload_2
      26: invokevirtual #45                 // Method size:()I
      29: if_icmpeq     34
      32: iconst_0
      33: ireturn
      34: iconst_0
      35: istore_3
      36: iload_3
      37: aload_0
      38: invokevirtual #45                 // Method size:()I
      41: if_icmpge     90
      44: aload_0
      45: getfield      #4                  // Field keys:[Ljava/lang/String;
      48: iload_3
      49: aaload
      50: aload_2
      51: getfield      #4                  // Field keys:[Ljava/lang/String;
      54: iload_3
      55: aaload
      56: invokestatic  #62                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      59: ifne          64
      62: iconst_0
      63: ireturn
      64: aload_0
      65: getfield      #5                  // Field values:[Ljava/lang/Object;
      68: iload_3
      69: aaload
      70: aload_2
      71: getfield      #5                  // Field values:[Ljava/lang/Object;
      74: iload_3
      75: aaload
      76: invokestatic  #62                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      79: ifne          84
      82: iconst_0
      83: ireturn
      84: iinc          3, 1
      87: goto          36
      90: iconst_1
      91: ireturn

  public int hashCode();
    Code:
       0: bipush        37
       2: istore_1
       3: bipush        31
       5: iload_1
       6: imul
       7: aload_0
       8: getfield      #41                 // Field size:I
      11: iadd
      12: istore_1
      13: bipush        31
      15: iload_1
      16: imul
      17: aload_0
      18: getfield      #4                  // Field keys:[Ljava/lang/String;
      21: aload_0
      22: getfield      #41                 // Field size:I
      25: invokestatic  #63                 // Method hashCode:([Ljava/lang/Object;I)I
      28: iadd
      29: istore_1
      30: bipush        31
      32: iload_1
      33: imul
      34: aload_0
      35: getfield      #5                  // Field values:[Ljava/lang/Object;
      38: aload_0
      39: getfield      #41                 // Field size:I
      42: invokestatic  #63                 // Method hashCode:([Ljava/lang/Object;I)I
      45: iadd
      46: istore_1
      47: iload_1
      48: ireturn

  private static int hashCode(java.lang.Object[], int);
    Code:
       0: iconst_1
       1: istore_2
       2: iconst_0
       3: istore_3
       4: iload_3
       5: iload_1
       6: if_icmpge     37
       9: bipush        31
      11: iload_2
      12: imul
      13: aload_0
      14: iload_3
      15: aaload
      16: ifnonnull     23
      19: iconst_0
      20: goto          29
      23: aload_0
      24: iload_3
      25: aaload
      26: invokevirtual #64                 // Method java/lang/Object.hashCode:()I
      29: iadd
      30: istore_2
      31: iinc          3, 1
      34: goto          4
      37: iload_2
      38: ireturn

  public java.lang.String toString();
    Code:
       0: new           #7                  // class java/lang/StringBuilder
       3: dup
       4: sipush        256
       7: invokespecial #65                 // Method java/lang/StringBuilder."<init>":(I)V
      10: astore_1
      11: aload_1
      12: bipush        123
      14: invokevirtual #66                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      17: pop
      18: iconst_0
      19: istore_2
      20: iload_2
      21: aload_0
      22: getfield      #41                 // Field size:I
      25: if_icmpge     87
      28: iload_2
      29: ifle          39
      32: aload_1
      33: ldc           #67                 // String ,
      35: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: pop
      39: aload_1
      40: aload_0
      41: getfield      #4                  // Field keys:[Ljava/lang/String;
      44: iload_2
      45: aaload
      46: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: bipush        61
      51: invokevirtual #66                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      54: pop
      55: aload_1
      56: aload_0
      57: getfield      #5                  // Field values:[Ljava/lang/Object;
      60: iload_2
      61: aaload
      62: aload_0
      63: if_acmpne     71
      66: ldc           #68                 // String (this map)
      68: goto          77
      71: aload_0
      72: getfield      #5                  // Field values:[Ljava/lang/Object;
      75: iload_2
      76: aaload
      77: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      80: pop
      81: iinc          2, 1
      84: goto          20
      87: aload_1
      88: bipush        125
      90: invokevirtual #66                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      93: pop
      94: aload_1
      95: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: areturn

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #70                 // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_0
       5: getfield      #4                  // Field keys:[Ljava/lang/String;
       8: getstatic     #3                  // Field EMPTY:[Ljava/lang/String;
      11: if_acmpne     28
      14: aload_1
      15: aload_0
      16: getfield      #15                 // Field threshold:I
      19: invokestatic  #14                 // Method ceilingNextPowerOfTwo:(I)I
      22: invokevirtual #71                 // Method java/io/ObjectOutputStream.writeInt:(I)V
      25: goto          37
      28: aload_1
      29: aload_0
      30: getfield      #4                  // Field keys:[Ljava/lang/String;
      33: arraylength
      34: invokevirtual #71                 // Method java/io/ObjectOutputStream.writeInt:(I)V
      37: aload_1
      38: aload_0
      39: getfield      #41                 // Field size:I
      42: invokevirtual #71                 // Method java/io/ObjectOutputStream.writeInt:(I)V
      45: aload_0
      46: getfield      #41                 // Field size:I
      49: ifle          112
      52: iconst_0
      53: istore_2
      54: iload_2
      55: aload_0
      56: getfield      #41                 // Field size:I
      59: if_icmpge     112
      62: aload_1
      63: aload_0
      64: getfield      #4                  // Field keys:[Ljava/lang/String;
      67: iload_2
      68: aaload
      69: invokevirtual #72                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      72: aload_1
      73: aload_0
      74: getfield      #5                  // Field values:[Ljava/lang/Object;
      77: iload_2
      78: aaload
      79: invokestatic  #73                 // Method marshall:(Ljava/lang/Object;)[B
      82: invokevirtual #72                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      85: goto          106
      88: astore_3
      89: aload_0
      90: aload_3
      91: iload_2
      92: aload_0
      93: getfield      #4                  // Field keys:[Ljava/lang/String;
      96: iload_2
      97: aaload
      98: invokespecial #75                 // Method handleSerializationException:(Ljava/lang/Throwable;ILjava/lang/String;)V
     101: aload_1
     102: aconst_null
     103: invokevirtual #72                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
     106: iinc          2, 1
     109: goto          54
     112: return
    Exception table:
       from    to  target type
          72    85    88   Class java/lang/Exception

  private static byte[] marshall(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #76                 // class java/io/ByteArrayOutputStream
       9: dup
      10: invokespecial #77                 // Method java/io/ByteArrayOutputStream."<init>":()V
      13: astore_1
      14: new           #78                 // class java/io/ObjectOutputStream
      17: dup
      18: aload_1
      19: invokespecial #79                 // Method java/io/ObjectOutputStream."<init>":(Ljava/io/OutputStream;)V
      22: astore_2
      23: aconst_null
      24: astore_3
      25: aload_2
      26: aload_0
      27: invokevirtual #72                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      30: aload_2
      31: invokevirtual #80                 // Method java/io/ObjectOutputStream.flush:()V
      34: aload_1
      35: invokevirtual #81                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      38: astore        4
      40: aload_2
      41: ifnull        70
      44: aload_3
      45: ifnull        66
      48: aload_2
      49: invokevirtual #82                 // Method java/io/ObjectOutputStream.close:()V
      52: goto          70
      55: astore        5
      57: aload_3
      58: aload         5
      60: invokevirtual #84                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      63: goto          70
      66: aload_2
      67: invokevirtual #82                 // Method java/io/ObjectOutputStream.close:()V
      70: aload         4
      72: areturn
      73: astore        4
      75: aload         4
      77: astore_3
      78: aload         4
      80: athrow
      81: astore        6
      83: aload_2
      84: ifnull        113
      87: aload_3
      88: ifnull        109
      91: aload_2
      92: invokevirtual #82                 // Method java/io/ObjectOutputStream.close:()V
      95: goto          113
      98: astore        7
     100: aload_3
     101: aload         7
     103: invokevirtual #84                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     106: goto          113
     109: aload_2
     110: invokevirtual #82                 // Method java/io/ObjectOutputStream.close:()V
     113: aload         6
     115: athrow
    Exception table:
       from    to  target type
          48    52    55   Class java/lang/Throwable
          25    40    73   Class java/lang/Throwable
          25    40    81   any
          91    95    98   Class java/lang/Throwable
          73    83    81   any

  private static java.lang.Object unmarshall(byte[]) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: new           #85                 // class java/io/ByteArrayInputStream
       3: dup
       4: aload_0
       5: invokespecial #86                 // Method java/io/ByteArrayInputStream."<init>":([B)V
       8: astore_1
       9: new           #87                 // class java/io/ObjectInputStream
      12: dup
      13: aload_1
      14: invokespecial #88                 // Method java/io/ObjectInputStream."<init>":(Ljava/io/InputStream;)V
      17: astore_2
      18: aconst_null
      19: astore_3
      20: aload_2
      21: invokevirtual #89                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      24: astore        4
      26: aload_2
      27: ifnull        56
      30: aload_3
      31: ifnull        52
      34: aload_2
      35: invokevirtual #90                 // Method java/io/ObjectInputStream.close:()V
      38: goto          56
      41: astore        5
      43: aload_3
      44: aload         5
      46: invokevirtual #84                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      49: goto          56
      52: aload_2
      53: invokevirtual #90                 // Method java/io/ObjectInputStream.close:()V
      56: aload         4
      58: areturn
      59: astore        4
      61: aload         4
      63: astore_3
      64: aload         4
      66: athrow
      67: astore        6
      69: aload_2
      70: ifnull        99
      73: aload_3
      74: ifnull        95
      77: aload_2
      78: invokevirtual #90                 // Method java/io/ObjectInputStream.close:()V
      81: goto          99
      84: astore        7
      86: aload_3
      87: aload         7
      89: invokevirtual #84                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      92: goto          99
      95: aload_2
      96: invokevirtual #90                 // Method java/io/ObjectInputStream.close:()V
      99: aload         6
     101: athrow
    Exception table:
       from    to  target type
          34    38    41   Class java/lang/Throwable
          20    26    59   Class java/lang/Throwable
          20    26    67   any
          77    81    84   Class java/lang/Throwable
          59    69    67   any

  private static int ceilingNextPowerOfTwo(int);
    Code:
       0: bipush        32
       2: istore_1
       3: iconst_1
       4: bipush        32
       6: iload_0
       7: iconst_1
       8: isub
       9: invokestatic  #91                 // Method java/lang/Integer.numberOfLeadingZeros:(I)I
      12: isub
      13: ishl
      14: ireturn

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #92                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: getstatic     #3                  // Field EMPTY:[Ljava/lang/String;
       8: putfield      #4                  // Field keys:[Ljava/lang/String;
      11: aload_0
      12: getstatic     #3                  // Field EMPTY:[Ljava/lang/String;
      15: putfield      #5                  // Field values:[Ljava/lang/Object;
      18: aload_1
      19: invokevirtual #93                 // Method java/io/ObjectInputStream.readInt:()I
      22: istore_2
      23: iload_2
      24: ifge          54
      27: new           #94                 // class java/io/InvalidObjectException
      30: dup
      31: new           #7                  // class java/lang/StringBuilder
      34: dup
      35: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #95                 // String Illegal capacity:
      40: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: iload_2
      44: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      47: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokespecial #96                 // Method java/io/InvalidObjectException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_1
      55: invokevirtual #93                 // Method java/io/ObjectInputStream.readInt:()I
      58: istore_3
      59: iload_3
      60: ifge          90
      63: new           #94                 // class java/io/InvalidObjectException
      66: dup
      67: new           #7                  // class java/lang/StringBuilder
      70: dup
      71: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #97                 // String Illegal mappings count:
      76: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: iload_3
      80: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      83: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokespecial #96                 // Method java/io/InvalidObjectException."<init>":(Ljava/lang/String;)V
      89: athrow
      90: iload_3
      91: ifle          102
      94: aload_0
      95: iload_2
      96: invokespecial #53                 // Method inflateTable:(I)V
      99: goto          107
     102: aload_0
     103: iload_2
     104: putfield      #15                 // Field threshold:I
     107: iconst_0
     108: istore        4
     110: iload         4
     112: iload_3
     113: if_icmpge     197
     116: aload_0
     117: getfield      #4                  // Field keys:[Ljava/lang/String;
     120: iload         4
     122: aload_1
     123: invokevirtual #89                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
     126: checkcast     #29                 // class java/lang/String
     129: aastore
     130: aload_1
     131: invokevirtual #89                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
     134: checkcast     #98                 // class "[B"
     137: checkcast     #98                 // class "[B"
     140: astore        5
     142: aload_0
     143: getfield      #5                  // Field values:[Ljava/lang/Object;
     146: iload         4
     148: aload         5
     150: ifnonnull     157
     153: aconst_null
     154: goto          162
     157: aload         5
     159: invokestatic  #99                 // Method unmarshall:([B)Ljava/lang/Object;
     162: aastore
     163: goto          191
     166: astore        5
     168: aload_0
     169: aload         5
     171: iload         4
     173: aload_0
     174: getfield      #4                  // Field keys:[Ljava/lang/String;
     177: iload         4
     179: aaload
     180: invokespecial #75                 // Method handleSerializationException:(Ljava/lang/Throwable;ILjava/lang/String;)V
     183: aload_0
     184: getfield      #5                  // Field values:[Ljava/lang/Object;
     187: iload         4
     189: aconst_null
     190: aastore
     191: iinc          4, 1
     194: goto          110
     197: aload_0
     198: iload_3
     199: putfield      #41                 // Field size:I
     202: return
    Exception table:
       from    to  target type
         130   163   166   Class java/lang/Exception
         130   163   166   Class java/lang/LinkageError

  private void handleSerializationException(java.lang.Throwable, int, java.lang.String);
    Code:
       0: invokestatic  #101                // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: ldc           #102                // String Ignoring {} for key[{}] (\'{}\')
       5: aload_1
       6: invokestatic  #49                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       9: iload_2
      10: invokestatic  #103                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: aload_0
      14: getfield      #4                  // Field keys:[Ljava/lang/String;
      17: iload_2
      18: aaload
      19: invokevirtual #104                // Method org/apache/logging/log4j/status/StatusLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      22: return

  static {};
    Code:
       0: new           #105                // class org/apache/logging/log4j/util/SortedArrayStringMap$1
       3: dup
       4: invokespecial #106                // Method org/apache/logging/log4j/util/SortedArrayStringMap$1."<init>":()V
       7: putstatic     #20                 // Field PUT_ALL:Lorg/apache/logging/log4j/util/TriConsumer;
      10: iconst_0
      11: anewarray     #29                 // class java/lang/String
      14: putstatic     #3                  // Field EMPTY:[Ljava/lang/String;
      17: return
}
