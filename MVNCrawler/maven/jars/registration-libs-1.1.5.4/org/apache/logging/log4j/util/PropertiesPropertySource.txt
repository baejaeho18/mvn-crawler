Compiled from "PropertiesPropertySource.java"
public class org.apache.logging.log4j.util.PropertiesPropertySource implements org.apache.logging.log4j.util.PropertySource {
  private static final java.lang.String PREFIX;

  private final java.util.Properties properties;

  public org.apache.logging.log4j.util.PropertiesPropertySource(java.util.Properties);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field properties:Ljava/util/Properties;
       9: return

  public int getPriority();
    Code:
       0: iconst_0
       1: ireturn

  public void forEach(org.apache.logging.log4j.util.BiConsumer<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field properties:Ljava/util/Properties;
       4: invokevirtual #3                  // Method java/util/Properties.entrySet:()Ljava/util/Set;
       7: invokeinterface #4,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          59
      22: aload_2
      23: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #7                  // class java/util/Map$Entry
      31: astore_3
      32: aload_1
      33: aload_3
      34: invokeinterface #8,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      39: checkcast     #9                  // class java/lang/String
      42: aload_3
      43: invokeinterface #10,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      48: checkcast     #9                  // class java/lang/String
      51: invokeinterface #11,  3           // InterfaceMethod org/apache/logging/log4j/util/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      56: goto          13
      59: return

  public java.lang.CharSequence getNormalForm(java.lang.Iterable<? extends java.lang.CharSequence>);
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #14                 // String log4j2.
       9: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_1
      13: invokestatic  #16                 // Method org/apache/logging/log4j/util/PropertySource$Util.joinAsCamelCase:(Ljava/lang/Iterable;)Ljava/lang/CharSequence;
      16: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn
}
