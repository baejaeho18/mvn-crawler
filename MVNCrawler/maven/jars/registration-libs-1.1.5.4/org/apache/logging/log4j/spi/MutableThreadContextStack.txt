Compiled from "MutableThreadContextStack.java"
public class org.apache.logging.log4j.spi.MutableThreadContextStack implements org.apache.logging.log4j.spi.ThreadContextStack,org.apache.logging.log4j.util.StringBuilderFormattable {
  private static final long serialVersionUID;

  private final java.util.List<java.lang.String> list;

  private boolean frozen;

  public org.apache.logging.log4j.spi.MutableThreadContextStack();
    Code:
       0: aload_0
       1: new           #1                  // class java/util/ArrayList
       4: dup
       5: invokespecial #2                  // Method java/util/ArrayList."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Ljava/util/List;)V
      11: return

  public org.apache.logging.log4j.spi.MutableThreadContextStack(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #1                  // class java/util/ArrayList
       8: dup
       9: aload_1
      10: invokespecial #5                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      13: putfield      #6                  // Field list:Ljava/util/List;
      16: return

  private org.apache.logging.log4j.spi.MutableThreadContextStack(org.apache.logging.log4j.spi.MutableThreadContextStack);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #1                  // class java/util/ArrayList
       8: dup
       9: aload_1
      10: getfield      #6                  // Field list:Ljava/util/List;
      13: invokespecial #5                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      16: putfield      #6                  // Field list:Ljava/util/List;
      19: return

  private void checkInvariants();
    Code:
       0: aload_0
       1: getfield      #7                  // Field frozen:Z
       4: ifeq          17
       7: new           #8                  // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #9                  // String context stack has been frozen
      13: invokespecial #10                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public java.lang.String pop();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method checkInvariants:()V
       4: aload_0
       5: getfield      #6                  // Field list:Ljava/util/List;
       8: invokeinterface #12,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      13: ifeq          18
      16: aconst_null
      17: areturn
      18: aload_0
      19: getfield      #6                  // Field list:Ljava/util/List;
      22: invokeinterface #13,  1           // InterfaceMethod java/util/List.size:()I
      27: iconst_1
      28: isub
      29: istore_1
      30: aload_0
      31: getfield      #6                  // Field list:Ljava/util/List;
      34: iload_1
      35: invokeinterface #14,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      40: checkcast     #15                 // class java/lang/String
      43: astore_2
      44: aload_2
      45: areturn

  public java.lang.String peek();
    Code:
       0: aload_0
       1: getfield      #6                  // Field list:Ljava/util/List;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          14
      12: aconst_null
      13: areturn
      14: aload_0
      15: getfield      #6                  // Field list:Ljava/util/List;
      18: invokeinterface #13,  1           // InterfaceMethod java/util/List.size:()I
      23: iconst_1
      24: isub
      25: istore_1
      26: aload_0
      27: getfield      #6                  // Field list:Ljava/util/List;
      30: iload_1
      31: invokeinterface #16,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      36: checkcast     #15                 // class java/lang/String
      39: areturn

  public void push(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method checkInvariants:()V
       4: aload_0
       5: getfield      #6                  // Field list:Ljava/util/List;
       8: aload_1
       9: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      14: pop
      15: return

  public int getDepth();
    Code:
       0: aload_0
       1: getfield      #6                  // Field list:Ljava/util/List;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public java.util.List<java.lang.String> asList();
    Code:
       0: aload_0
       1: getfield      #6                  // Field list:Ljava/util/List;
       4: areturn

  public void trim(int);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method checkInvariants:()V
       4: iload_1
       5: ifge          18
       8: new           #18                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #19                 // String Maximum stack depth cannot be negative
      14: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: getfield      #6                  // Field list:Ljava/util/List;
      22: ifnonnull     26
      25: return
      26: new           #1                  // class java/util/ArrayList
      29: dup
      30: aload_0
      31: getfield      #6                  // Field list:Ljava/util/List;
      34: invokeinterface #13,  1           // InterfaceMethod java/util/List.size:()I
      39: invokespecial #21                 // Method java/util/ArrayList."<init>":(I)V
      42: astore_2
      43: iload_1
      44: aload_0
      45: getfield      #6                  // Field list:Ljava/util/List;
      48: invokeinterface #13,  1           // InterfaceMethod java/util/List.size:()I
      53: invokestatic  #22                 // Method java/lang/Math.min:(II)I
      56: istore_3
      57: iconst_0
      58: istore        4
      60: iload         4
      62: iload_3
      63: if_icmpge     90
      66: aload_2
      67: aload_0
      68: getfield      #6                  // Field list:Ljava/util/List;
      71: iload         4
      73: invokeinterface #16,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      78: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      83: pop
      84: iinc          4, 1
      87: goto          60
      90: aload_0
      91: getfield      #6                  // Field list:Ljava/util/List;
      94: invokeinterface #23,  1           // InterfaceMethod java/util/List.clear:()V
      99: aload_0
     100: getfield      #6                  // Field list:Ljava/util/List;
     103: aload_2
     104: invokeinterface #24,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     109: pop
     110: return

  public org.apache.logging.log4j.spi.ThreadContextStack copy();
    Code:
       0: new           #25                 // class org/apache/logging/log4j/spi/MutableThreadContextStack
       3: dup
       4: aload_0
       5: invokespecial #26                 // Method "<init>":(Lorg/apache/logging/log4j/spi/MutableThreadContextStack;)V
       8: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method checkInvariants:()V
       4: aload_0
       5: getfield      #6                  // Field list:Ljava/util/List;
       8: invokeinterface #23,  1           // InterfaceMethod java/util/List.clear:()V
      13: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #6                  // Field list:Ljava/util/List;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #6                  // Field list:Ljava/util/List;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field list:Ljava/util/List;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.Iterator<java.lang.String> iterator();
    Code:
       0: aload_0
       1: getfield      #6                  // Field list:Ljava/util/List;
       4: invokeinterface #28,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: areturn

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: getfield      #6                  // Field list:Ljava/util/List;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/List.toArray:()[Ljava/lang/Object;
       9: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field list:Ljava/util/List;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      10: areturn

  public boolean add(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method checkInvariants:()V
       4: aload_0
       5: getfield      #6                  // Field list:Ljava/util/List;
       8: aload_1
       9: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      14: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method checkInvariants:()V
       4: aload_0
       5: getfield      #6                  // Field list:Ljava/util/List;
       8: aload_1
       9: invokeinterface #31,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      14: ireturn

  public boolean containsAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field list:Ljava/util/List;
       4: aload_1
       5: invokeinterface #32,  2           // InterfaceMethod java/util/List.containsAll:(Ljava/util/Collection;)Z
      10: ireturn

  public boolean addAll(java.util.Collection<? extends java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method checkInvariants:()V
       4: aload_0
       5: getfield      #6                  // Field list:Ljava/util/List;
       8: aload_1
       9: invokeinterface #24,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      14: ireturn

  public boolean removeAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method checkInvariants:()V
       4: aload_0
       5: getfield      #6                  // Field list:Ljava/util/List;
       8: aload_1
       9: invokeinterface #33,  2           // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
      14: ireturn

  public boolean retainAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method checkInvariants:()V
       4: aload_0
       5: getfield      #6                  // Field list:Ljava/util/List;
       8: aload_1
       9: invokeinterface #34,  2           // InterfaceMethod java/util/List.retainAll:(Ljava/util/Collection;)Z
      14: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #6                  // Field list:Ljava/util/List;
       4: invokestatic  #35                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       7: areturn

  public void formatTo(java.lang.StringBuilder);
    Code:
       0: aload_1
       1: bipush        91
       3: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       6: pop
       7: iconst_0
       8: istore_2
       9: iload_2
      10: aload_0
      11: getfield      #6                  // Field list:Ljava/util/List;
      14: invokeinterface #13,  1           // InterfaceMethod java/util/List.size:()I
      19: if_icmpge     62
      22: iload_2
      23: ifle          38
      26: aload_1
      27: bipush        44
      29: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      32: bipush        32
      34: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      37: pop
      38: aload_1
      39: aload_0
      40: getfield      #6                  // Field list:Ljava/util/List;
      43: iload_2
      44: invokeinterface #16,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      49: checkcast     #15                 // class java/lang/String
      52: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: pop
      56: iinc          2, 1
      59: goto          9
      62: aload_1
      63: bipush        93
      65: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      68: pop
      69: return

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: getfield      #6                  // Field list:Ljava/util/List;
      13: ifnonnull     20
      16: iconst_0
      17: goto          29
      20: aload_0
      21: getfield      #6                  // Field list:Ljava/util/List;
      24: invokeinterface #38,  1           // InterfaceMethod java/util/List.hashCode:()I
      29: iadd
      30: istore_2
      31: iload_2
      32: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #39                 // class org/apache/logging/log4j/spi/ThreadContextStack
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #39                 // class org/apache/logging/log4j/spi/ThreadContextStack
      26: astore_2
      27: aload_2
      28: invokeinterface #40,  1           // InterfaceMethod org/apache/logging/log4j/spi/ThreadContextStack.asList:()Ljava/util/List;
      33: astore_3
      34: aload_0
      35: getfield      #6                  // Field list:Ljava/util/List;
      38: ifnonnull     47
      41: aload_3
      42: ifnull        62
      45: iconst_0
      46: ireturn
      47: aload_0
      48: getfield      #6                  // Field list:Ljava/util/List;
      51: aload_3
      52: invokeinterface #41,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      57: ifne          62
      60: iconst_0
      61: ireturn
      62: iconst_1
      63: ireturn

  public org.apache.logging.log4j.ThreadContext$ContextStack getImmutableStackOrNull();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method copy:()Lorg/apache/logging/log4j/spi/ThreadContextStack;
       4: areturn

  public void freeze();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #7                  // Field frozen:Z
       5: return

  public boolean isFrozen();
    Code:
       0: aload_0
       1: getfield      #7                  // Field frozen:Z
       4: ireturn

  public org.apache.logging.log4j.ThreadContext$ContextStack copy();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method copy:()Lorg/apache/logging/log4j/spi/ThreadContextStack;
       4: areturn

  public boolean add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #15                 // class java/lang/String
       5: invokevirtual #43                 // Method add:(Ljava/lang/String;)Z
       8: ireturn
}
