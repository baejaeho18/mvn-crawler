Compiled from "RequestFilterValve.java"
public abstract class org.apache.catalina.valves.RequestFilterValve extends org.apache.catalina.valves.ValveBase {
  protected volatile java.util.regex.Pattern allow;

  protected volatile java.lang.String allowValue;

  protected volatile boolean allowValid;

  protected volatile java.util.regex.Pattern deny;

  protected volatile java.lang.String denyValue;

  protected volatile boolean denyValid;

  protected int denyStatus;

  private boolean invalidAuthenticationWhenDeny;

  private volatile boolean addConnectorPort;

  public org.apache.catalina.valves.RequestFilterValve();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #1                  // Method org/apache/catalina/valves/ValveBase."<init>":(Z)V
       5: aload_0
       6: aconst_null
       7: putfield      #2                  // Field allow:Ljava/util/regex/Pattern;
      10: aload_0
      11: aconst_null
      12: putfield      #3                  // Field allowValue:Ljava/lang/String;
      15: aload_0
      16: iconst_1
      17: putfield      #4                  // Field allowValid:Z
      20: aload_0
      21: aconst_null
      22: putfield      #5                  // Field deny:Ljava/util/regex/Pattern;
      25: aload_0
      26: aconst_null
      27: putfield      #6                  // Field denyValue:Ljava/lang/String;
      30: aload_0
      31: iconst_1
      32: putfield      #7                  // Field denyValid:Z
      35: aload_0
      36: sipush        403
      39: putfield      #8                  // Field denyStatus:I
      42: aload_0
      43: iconst_0
      44: putfield      #9                  // Field invalidAuthenticationWhenDeny:Z
      47: aload_0
      48: iconst_0
      49: putfield      #10                 // Field addConnectorPort:Z
      52: return

  public java.lang.String getAllow();
    Code:
       0: aload_0
       1: getfield      #3                  // Field allowValue:Ljava/lang/String;
       4: areturn

  public void setAllow(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #11                 // Method java/lang/String.length:()I
       8: ifne          29
      11: aload_0
      12: aconst_null
      13: putfield      #2                  // Field allow:Ljava/util/regex/Pattern;
      16: aload_0
      17: aconst_null
      18: putfield      #3                  // Field allowValue:Ljava/lang/String;
      21: aload_0
      22: iconst_1
      23: putfield      #4                  // Field allowValid:Z
      26: goto          62
      29: iconst_0
      30: istore_2
      31: aload_0
      32: aload_1
      33: putfield      #3                  // Field allowValue:Ljava/lang/String;
      36: aload_0
      37: aload_1
      38: invokestatic  #12                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      41: putfield      #2                  // Field allow:Ljava/util/regex/Pattern;
      44: iconst_1
      45: istore_2
      46: aload_0
      47: iload_2
      48: putfield      #4                  // Field allowValid:Z
      51: goto          62
      54: astore_3
      55: aload_0
      56: iload_2
      57: putfield      #4                  // Field allowValid:Z
      60: aload_3
      61: athrow
      62: return
    Exception table:
       from    to  target type
          31    46    54   any
          54    55    54   any

  public java.lang.String getDeny();
    Code:
       0: aload_0
       1: getfield      #6                  // Field denyValue:Ljava/lang/String;
       4: areturn

  public void setDeny(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #11                 // Method java/lang/String.length:()I
       8: ifne          29
      11: aload_0
      12: aconst_null
      13: putfield      #5                  // Field deny:Ljava/util/regex/Pattern;
      16: aload_0
      17: aconst_null
      18: putfield      #6                  // Field denyValue:Ljava/lang/String;
      21: aload_0
      22: iconst_1
      23: putfield      #7                  // Field denyValid:Z
      26: goto          62
      29: iconst_0
      30: istore_2
      31: aload_0
      32: aload_1
      33: putfield      #6                  // Field denyValue:Ljava/lang/String;
      36: aload_0
      37: aload_1
      38: invokestatic  #12                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      41: putfield      #5                  // Field deny:Ljava/util/regex/Pattern;
      44: iconst_1
      45: istore_2
      46: aload_0
      47: iload_2
      48: putfield      #7                  // Field denyValid:Z
      51: goto          62
      54: astore_3
      55: aload_0
      56: iload_2
      57: putfield      #7                  // Field denyValid:Z
      60: aload_3
      61: athrow
      62: return
    Exception table:
       from    to  target type
          31    46    54   any
          54    55    54   any

  public final boolean isAllowValid();
    Code:
       0: aload_0
       1: getfield      #4                  // Field allowValid:Z
       4: ireturn

  public final boolean isDenyValid();
    Code:
       0: aload_0
       1: getfield      #7                  // Field denyValid:Z
       4: ireturn

  public int getDenyStatus();
    Code:
       0: aload_0
       1: getfield      #8                  // Field denyStatus:I
       4: ireturn

  public void setDenyStatus(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field denyStatus:I
       5: return

  public boolean getInvalidAuthenticationWhenDeny();
    Code:
       0: aload_0
       1: getfield      #9                  // Field invalidAuthenticationWhenDeny:Z
       4: ireturn

  public void setInvalidAuthenticationWhenDeny(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field invalidAuthenticationWhenDeny:Z
       5: return

  public boolean getAddConnectorPort();
    Code:
       0: aload_0
       1: getfield      #10                 // Field addConnectorPort:Z
       4: ireturn

  public void setAddConnectorPort(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field addConnectorPort:Z
       5: return

  public abstract void invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) throws java.io.IOException, javax.servlet.ServletException;

  protected void initInternal() throws org.apache.catalina.LifecycleException;
    Code:
       0: aload_0
       1: invokespecial #13                 // Method org/apache/catalina/valves/ValveBase.initInternal:()V
       4: aload_0
       5: getfield      #4                  // Field allowValid:Z
       8: ifeq          18
      11: aload_0
      12: getfield      #7                  // Field denyValid:Z
      15: ifne          34
      18: new           #14                 // class org/apache/catalina/LifecycleException
      21: dup
      22: getstatic     #15                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      25: ldc           #16                 // String requestFilterValve.configInvalid
      27: invokevirtual #17                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;)Ljava/lang/String;
      30: invokespecial #18                 // Method org/apache/catalina/LifecycleException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: return

  protected synchronized void startInternal() throws org.apache.catalina.LifecycleException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field allowValid:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #7                  // Field denyValid:Z
      11: ifne          30
      14: new           #14                 // class org/apache/catalina/LifecycleException
      17: dup
      18: getstatic     #15                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      21: ldc           #16                 // String requestFilterValve.configInvalid
      23: invokevirtual #17                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;)Ljava/lang/String;
      26: invokespecial #18                 // Method org/apache/catalina/LifecycleException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_0
      31: invokespecial #19                 // Method org/apache/catalina/valves/ValveBase.startInternal:()V
      34: return

  protected void process(java.lang.String, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method isAllowed:(Ljava/lang/String;)Z
       5: ifeq          20
       8: aload_0
       9: invokevirtual #21                 // Method getNext:()Lorg/apache/catalina/Valve;
      12: aload_2
      13: aload_3
      14: invokeinterface #22,  3           // InterfaceMethod org/apache/catalina/Valve.invoke:(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
      19: return
      20: aload_0
      21: invokevirtual #23                 // Method getLog:()Lorg/apache/juli/logging/Log;
      24: invokeinterface #24,  1           // InterfaceMethod org/apache/juli/logging/Log.isDebugEnabled:()Z
      29: ifeq          64
      32: aload_0
      33: invokevirtual #23                 // Method getLog:()Lorg/apache/juli/logging/Log;
      36: getstatic     #15                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      39: ldc           #25                 // String requestFilterValve.deny
      41: iconst_2
      42: anewarray     #26                 // class java/lang/Object
      45: dup
      46: iconst_0
      47: aload_2
      48: invokevirtual #27                 // Method org/apache/catalina/connector/Request.getRequestURI:()Ljava/lang/String;
      51: aastore
      52: dup
      53: iconst_1
      54: aload_1
      55: aastore
      56: invokevirtual #28                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      59: invokeinterface #29,  2           // InterfaceMethod org/apache/juli/logging/Log.debug:(Ljava/lang/Object;)V
      64: aload_0
      65: aload_2
      66: aload_3
      67: invokevirtual #30                 // Method denyRequest:(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
      70: return

  protected abstract org.apache.juli.logging.Log getLog();

  protected void denyRequest(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field invalidAuthenticationWhenDeny:Z
       4: ifeq          69
       7: aload_1
       8: invokevirtual #31                 // Method org/apache/catalina/connector/Request.getContext:()Lorg/apache/catalina/Context;
      11: astore_3
      12: aload_3
      13: ifnull        69
      16: aload_3
      17: invokeinterface #32,  1           // InterfaceMethod org/apache/catalina/Context.getPreemptiveAuthentication:()Z
      22: ifeq          69
      25: aload_1
      26: invokevirtual #33                 // Method org/apache/catalina/connector/Request.getCoyoteRequest:()Lorg/apache/coyote/Request;
      29: invokevirtual #34                 // Method org/apache/coyote/Request.getMimeHeaders:()Lorg/apache/tomcat/util/http/MimeHeaders;
      32: ldc           #35                 // String authorization
      34: invokevirtual #36                 // Method org/apache/tomcat/util/http/MimeHeaders.getValue:(Ljava/lang/String;)Lorg/apache/tomcat/util/buf/MessageBytes;
      37: ifnonnull     57
      40: aload_1
      41: invokevirtual #33                 // Method org/apache/catalina/connector/Request.getCoyoteRequest:()Lorg/apache/coyote/Request;
      44: invokevirtual #34                 // Method org/apache/coyote/Request.getMimeHeaders:()Lorg/apache/tomcat/util/http/MimeHeaders;
      47: ldc           #35                 // String authorization
      49: invokevirtual #37                 // Method org/apache/tomcat/util/http/MimeHeaders.addValue:(Ljava/lang/String;)Lorg/apache/tomcat/util/buf/MessageBytes;
      52: ldc           #38                 // String invalid
      54: invokevirtual #39                 // Method org/apache/tomcat/util/buf/MessageBytes.setString:(Ljava/lang/String;)V
      57: aload_0
      58: invokevirtual #21                 // Method getNext:()Lorg/apache/catalina/Valve;
      61: aload_1
      62: aload_2
      63: invokeinterface #22,  3           // InterfaceMethod org/apache/catalina/Valve.invoke:(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
      68: return
      69: aload_2
      70: aload_0
      71: getfield      #8                  // Field denyStatus:I
      74: invokevirtual #40                 // Method org/apache/catalina/connector/Response.sendError:(I)V
      77: return

  public boolean isAllowed(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field deny:Ljava/util/regex/Pattern;
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field allow:Ljava/util/regex/Pattern;
       9: astore_3
      10: aload_2
      11: ifnull        27
      14: aload_2
      15: aload_1
      16: invokevirtual #41                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      19: invokevirtual #42                 // Method java/util/regex/Matcher.matches:()Z
      22: ifeq          27
      25: iconst_0
      26: ireturn
      27: aload_3
      28: ifnull        44
      31: aload_3
      32: aload_1
      33: invokevirtual #41                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      36: invokevirtual #42                 // Method java/util/regex/Matcher.matches:()Z
      39: ifeq          44
      42: iconst_1
      43: ireturn
      44: aload_2
      45: ifnull        54
      48: aload_3
      49: ifnonnull     54
      52: iconst_1
      53: ireturn
      54: iconst_0
      55: ireturn
}
