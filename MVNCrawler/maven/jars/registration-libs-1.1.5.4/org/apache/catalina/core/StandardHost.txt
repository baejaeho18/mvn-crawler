Compiled from "StandardHost.java"
public class org.apache.catalina.core.StandardHost extends org.apache.catalina.core.ContainerBase implements org.apache.catalina.Host {
  private static final org.apache.juli.logging.Log log;

  private java.lang.String[] aliases;

  private final java.lang.Object aliasesLock;

  private java.lang.String appBase;

  private volatile java.io.File appBaseFile;

  private java.lang.String xmlBase;

  private volatile java.io.File hostConfigBase;

  private boolean autoDeploy;

  private java.lang.String configClass;

  private java.lang.String contextClass;

  private boolean deployOnStartup;

  private boolean deployXML;

  private boolean copyXML;

  private java.lang.String errorReportValveClass;

  private boolean unpackWARs;

  private java.lang.String workDir;

  private boolean createDirs;

  private final java.util.Map<java.lang.ClassLoader, java.lang.String> childClassLoaders;

  private java.util.regex.Pattern deployIgnore;

  private boolean undeployOldVersions;

  private boolean failCtxIfServletStartFails;

  public org.apache.catalina.core.StandardHost();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/catalina/core/ContainerBase."<init>":()V
       4: aload_0
       5: iconst_0
       6: anewarray     #3                  // class java/lang/String
       9: putfield      #4                  // Field aliases:[Ljava/lang/String;
      12: aload_0
      13: new           #5                  // class java/lang/Object
      16: dup
      17: invokespecial #6                  // Method java/lang/Object."<init>":()V
      20: putfield      #7                  // Field aliasesLock:Ljava/lang/Object;
      23: aload_0
      24: ldc           #8                  // String webapps
      26: putfield      #9                  // Field appBase:Ljava/lang/String;
      29: aload_0
      30: aconst_null
      31: putfield      #10                 // Field appBaseFile:Ljava/io/File;
      34: aload_0
      35: aconst_null
      36: putfield      #11                 // Field xmlBase:Ljava/lang/String;
      39: aload_0
      40: aconst_null
      41: putfield      #12                 // Field hostConfigBase:Ljava/io/File;
      44: aload_0
      45: iconst_1
      46: putfield      #13                 // Field autoDeploy:Z
      49: aload_0
      50: ldc           #14                 // String org.apache.catalina.startup.ContextConfig
      52: putfield      #15                 // Field configClass:Ljava/lang/String;
      55: aload_0
      56: ldc           #16                 // String org.apache.catalina.core.StandardContext
      58: putfield      #17                 // Field contextClass:Ljava/lang/String;
      61: aload_0
      62: iconst_1
      63: putfield      #18                 // Field deployOnStartup:Z
      66: aload_0
      67: getstatic     #19                 // Field org/apache/catalina/Globals.IS_SECURITY_ENABLED:Z
      70: ifne          77
      73: iconst_1
      74: goto          78
      77: iconst_0
      78: putfield      #20                 // Field deployXML:Z
      81: aload_0
      82: iconst_0
      83: putfield      #21                 // Field copyXML:Z
      86: aload_0
      87: ldc           #22                 // String org.apache.catalina.valves.ErrorReportValve
      89: putfield      #23                 // Field errorReportValveClass:Ljava/lang/String;
      92: aload_0
      93: iconst_1
      94: putfield      #24                 // Field unpackWARs:Z
      97: aload_0
      98: aconst_null
      99: putfield      #25                 // Field workDir:Ljava/lang/String;
     102: aload_0
     103: iconst_1
     104: putfield      #26                 // Field createDirs:Z
     107: aload_0
     108: new           #27                 // class java/util/WeakHashMap
     111: dup
     112: invokespecial #28                 // Method java/util/WeakHashMap."<init>":()V
     115: putfield      #1                  // Field childClassLoaders:Ljava/util/Map;
     118: aload_0
     119: aconst_null
     120: putfield      #29                 // Field deployIgnore:Ljava/util/regex/Pattern;
     123: aload_0
     124: iconst_0
     125: putfield      #30                 // Field undeployOldVersions:Z
     128: aload_0
     129: iconst_0
     130: putfield      #31                 // Field failCtxIfServletStartFails:Z
     133: aload_0
     134: getfield      #32                 // Field pipeline:Lorg/apache/catalina/Pipeline;
     137: new           #33                 // class org/apache/catalina/core/StandardHostValve
     140: dup
     141: invokespecial #34                 // Method org/apache/catalina/core/StandardHostValve."<init>":()V
     144: invokeinterface #35,  2           // InterfaceMethod org/apache/catalina/Pipeline.setBasic:(Lorg/apache/catalina/Valve;)V
     149: return

  public boolean getUndeployOldVersions();
    Code:
       0: aload_0
       1: getfield      #30                 // Field undeployOldVersions:Z
       4: ireturn

  public void setUndeployOldVersions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #30                 // Field undeployOldVersions:Z
       5: return

  public java.util.concurrent.ExecutorService getStartStopExecutor();
    Code:
       0: aload_0
       1: getfield      #36                 // Field startStopExecutor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: areturn

  public java.lang.String getAppBase();
    Code:
       0: aload_0
       1: getfield      #9                  // Field appBase:Ljava/lang/String;
       4: areturn

  public java.io.File getAppBaseFile();
    Code:
       0: aload_0
       1: getfield      #10                 // Field appBaseFile:Ljava/io/File;
       4: ifnull        12
       7: aload_0
       8: getfield      #10                 // Field appBaseFile:Ljava/io/File;
      11: areturn
      12: new           #37                 // class java/io/File
      15: dup
      16: aload_0
      17: invokevirtual #38                 // Method getAppBase:()Ljava/lang/String;
      20: invokespecial #39                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      23: astore_1
      24: aload_1
      25: invokevirtual #40                 // Method java/io/File.isAbsolute:()Z
      28: ifne          47
      31: new           #37                 // class java/io/File
      34: dup
      35: aload_0
      36: invokevirtual #41                 // Method getCatalinaBase:()Ljava/io/File;
      39: aload_1
      40: invokevirtual #42                 // Method java/io/File.getPath:()Ljava/lang/String;
      43: invokespecial #43                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      46: astore_1
      47: aload_1
      48: invokevirtual #44                 // Method java/io/File.getCanonicalFile:()Ljava/io/File;
      51: astore_1
      52: goto          56
      55: astore_2
      56: aload_0
      57: aload_1
      58: putfield      #10                 // Field appBaseFile:Ljava/io/File;
      61: aload_1
      62: areturn
    Exception table:
       from    to  target type
          47    52    55   Class java/io/IOException

  public void setAppBase(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #46                 // Method java/lang/String.trim:()Ljava/lang/String;
       4: ldc           #47                 // String
       6: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          39
      12: getstatic     #49                 // Field log:Lorg/apache/juli/logging/Log;
      15: getstatic     #50                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      18: ldc           #51                 // String standardHost.problematicAppBase
      20: iconst_1
      21: anewarray     #5                  // class java/lang/Object
      24: dup
      25: iconst_0
      26: aload_0
      27: invokevirtual #52                 // Method getName:()Ljava/lang/String;
      30: aastore
      31: invokevirtual #53                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      34: invokeinterface #54,  2           // InterfaceMethod org/apache/juli/logging/Log.warn:(Ljava/lang/Object;)V
      39: aload_0
      40: getfield      #9                  // Field appBase:Ljava/lang/String;
      43: astore_2
      44: aload_0
      45: aload_1
      46: putfield      #9                  // Field appBase:Ljava/lang/String;
      49: aload_0
      50: getfield      #55                 // Field support:Ljava/beans/PropertyChangeSupport;
      53: ldc           #56                 // String appBase
      55: aload_2
      56: aload_0
      57: getfield      #9                  // Field appBase:Ljava/lang/String;
      60: invokevirtual #57                 // Method java/beans/PropertyChangeSupport.firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      63: aload_0
      64: aconst_null
      65: putfield      #10                 // Field appBaseFile:Ljava/io/File;
      68: return

  public java.lang.String getXmlBase();
    Code:
       0: aload_0
       1: getfield      #11                 // Field xmlBase:Ljava/lang/String;
       4: areturn

  public void setXmlBase(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field xmlBase:Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: aload_1
       7: putfield      #11                 // Field xmlBase:Ljava/lang/String;
      10: aload_0
      11: getfield      #55                 // Field support:Ljava/beans/PropertyChangeSupport;
      14: ldc           #58                 // String xmlBase
      16: aload_2
      17: aload_0
      18: getfield      #11                 // Field xmlBase:Ljava/lang/String;
      21: invokevirtual #57                 // Method java/beans/PropertyChangeSupport.firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      24: return

  public java.io.File getConfigBaseFile();
    Code:
       0: aload_0
       1: getfield      #12                 // Field hostConfigBase:Ljava/io/File;
       4: ifnull        12
       7: aload_0
       8: getfield      #12                 // Field hostConfigBase:Ljava/io/File;
      11: areturn
      12: aconst_null
      13: astore_1
      14: aload_0
      15: invokevirtual #59                 // Method getXmlBase:()Ljava/lang/String;
      18: ifnull        29
      21: aload_0
      22: invokevirtual #59                 // Method getXmlBase:()Ljava/lang/String;
      25: astore_1
      26: goto          90
      29: new           #60                 // class java/lang/StringBuilder
      32: dup
      33: ldc           #61                 // String conf
      35: invokespecial #62                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      38: astore_2
      39: aload_0
      40: invokevirtual #63                 // Method getParent:()Lorg/apache/catalina/Container;
      43: astore_3
      44: aload_3
      45: instanceof    #64                 // class org/apache/catalina/Engine
      48: ifeq          69
      51: aload_2
      52: bipush        47
      54: invokevirtual #65                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      57: pop
      58: aload_2
      59: aload_3
      60: invokeinterface #66,  1           // InterfaceMethod org/apache/catalina/Container.getName:()Ljava/lang/String;
      65: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: pop
      69: aload_2
      70: bipush        47
      72: invokevirtual #65                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      75: pop
      76: aload_2
      77: aload_0
      78: invokevirtual #52                 // Method getName:()Ljava/lang/String;
      81: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: pop
      85: aload_2
      86: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: astore_1
      90: new           #37                 // class java/io/File
      93: dup
      94: aload_1
      95: invokespecial #39                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      98: astore_2
      99: aload_2
     100: invokevirtual #40                 // Method java/io/File.isAbsolute:()Z
     103: ifne          119
     106: new           #37                 // class java/io/File
     109: dup
     110: aload_0
     111: invokevirtual #41                 // Method getCatalinaBase:()Ljava/io/File;
     114: aload_1
     115: invokespecial #43                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     118: astore_2
     119: aload_2
     120: invokevirtual #44                 // Method java/io/File.getCanonicalFile:()Ljava/io/File;
     123: astore_2
     124: goto          128
     127: astore_3
     128: aload_0
     129: aload_2
     130: putfield      #12                 // Field hostConfigBase:Ljava/io/File;
     133: aload_2
     134: areturn
    Exception table:
       from    to  target type
         119   124   127   Class java/io/IOException

  public boolean getCreateDirs();
    Code:
       0: aload_0
       1: getfield      #26                 // Field createDirs:Z
       4: ireturn

  public void setCreateDirs(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #26                 // Field createDirs:Z
       5: return

  public boolean getAutoDeploy();
    Code:
       0: aload_0
       1: getfield      #13                 // Field autoDeploy:Z
       4: ireturn

  public void setAutoDeploy(boolean);
    Code:
       0: aload_0
       1: getfield      #13                 // Field autoDeploy:Z
       4: istore_2
       5: aload_0
       6: iload_1
       7: putfield      #13                 // Field autoDeploy:Z
      10: aload_0
      11: getfield      #55                 // Field support:Ljava/beans/PropertyChangeSupport;
      14: ldc           #69                 // String autoDeploy
      16: iload_2
      17: aload_0
      18: getfield      #13                 // Field autoDeploy:Z
      21: invokevirtual #70                 // Method java/beans/PropertyChangeSupport.firePropertyChange:(Ljava/lang/String;ZZ)V
      24: return

  public java.lang.String getConfigClass();
    Code:
       0: aload_0
       1: getfield      #15                 // Field configClass:Ljava/lang/String;
       4: areturn

  public void setConfigClass(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field configClass:Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: aload_1
       7: putfield      #15                 // Field configClass:Ljava/lang/String;
      10: aload_0
      11: getfield      #55                 // Field support:Ljava/beans/PropertyChangeSupport;
      14: ldc           #71                 // String configClass
      16: aload_2
      17: aload_0
      18: getfield      #15                 // Field configClass:Ljava/lang/String;
      21: invokevirtual #57                 // Method java/beans/PropertyChangeSupport.firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      24: return

  public java.lang.String getContextClass();
    Code:
       0: aload_0
       1: getfield      #17                 // Field contextClass:Ljava/lang/String;
       4: areturn

  public void setContextClass(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #17                 // Field contextClass:Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: aload_1
       7: putfield      #17                 // Field contextClass:Ljava/lang/String;
      10: aload_0
      11: getfield      #55                 // Field support:Ljava/beans/PropertyChangeSupport;
      14: ldc           #72                 // String contextClass
      16: aload_2
      17: aload_0
      18: getfield      #17                 // Field contextClass:Ljava/lang/String;
      21: invokevirtual #57                 // Method java/beans/PropertyChangeSupport.firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      24: return

  public boolean getDeployOnStartup();
    Code:
       0: aload_0
       1: getfield      #18                 // Field deployOnStartup:Z
       4: ireturn

  public void setDeployOnStartup(boolean);
    Code:
       0: aload_0
       1: getfield      #18                 // Field deployOnStartup:Z
       4: istore_2
       5: aload_0
       6: iload_1
       7: putfield      #18                 // Field deployOnStartup:Z
      10: aload_0
      11: getfield      #55                 // Field support:Ljava/beans/PropertyChangeSupport;
      14: ldc           #73                 // String deployOnStartup
      16: iload_2
      17: aload_0
      18: getfield      #18                 // Field deployOnStartup:Z
      21: invokevirtual #70                 // Method java/beans/PropertyChangeSupport.firePropertyChange:(Ljava/lang/String;ZZ)V
      24: return

  public boolean isDeployXML();
    Code:
       0: aload_0
       1: getfield      #20                 // Field deployXML:Z
       4: ireturn

  public void setDeployXML(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field deployXML:Z
       5: return

  public boolean isCopyXML();
    Code:
       0: aload_0
       1: getfield      #21                 // Field copyXML:Z
       4: ireturn

  public void setCopyXML(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field copyXML:Z
       5: return

  public java.lang.String getErrorReportValveClass();
    Code:
       0: aload_0
       1: getfield      #23                 // Field errorReportValveClass:Ljava/lang/String;
       4: areturn

  public void setErrorReportValveClass(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field errorReportValveClass:Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: aload_1
       7: putfield      #23                 // Field errorReportValveClass:Ljava/lang/String;
      10: aload_0
      11: getfield      #55                 // Field support:Ljava/beans/PropertyChangeSupport;
      14: ldc           #74                 // String errorReportValveClass
      16: aload_2
      17: aload_0
      18: getfield      #23                 // Field errorReportValveClass:Ljava/lang/String;
      21: invokevirtual #57                 // Method java/beans/PropertyChangeSupport.firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      24: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #75                 // Field name:Ljava/lang/String;
       4: areturn

  public void setName(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     20
       4: new           #76                 // class java/lang/IllegalArgumentException
       7: dup
       8: getstatic     #50                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      11: ldc           #77                 // String standardHost.nullName
      13: invokevirtual #78                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;)Ljava/lang/String;
      16: invokespecial #79                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_1
      21: getstatic     #80                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      24: invokevirtual #81                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      27: astore_1
      28: aload_0
      29: getfield      #75                 // Field name:Ljava/lang/String;
      32: astore_2
      33: aload_0
      34: aload_1
      35: putfield      #75                 // Field name:Ljava/lang/String;
      38: aload_0
      39: getfield      #55                 // Field support:Ljava/beans/PropertyChangeSupport;
      42: ldc           #82                 // String name
      44: aload_2
      45: aload_0
      46: getfield      #75                 // Field name:Ljava/lang/String;
      49: invokevirtual #57                 // Method java/beans/PropertyChangeSupport.firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      52: return

  public boolean isUnpackWARs();
    Code:
       0: aload_0
       1: getfield      #24                 // Field unpackWARs:Z
       4: ireturn

  public void setUnpackWARs(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #24                 // Field unpackWARs:Z
       5: return

  public java.lang.String getWorkDir();
    Code:
       0: aload_0
       1: getfield      #25                 // Field workDir:Ljava/lang/String;
       4: areturn

  public void setWorkDir(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field workDir:Ljava/lang/String;
       5: return

  public java.lang.String getDeployIgnore();
    Code:
       0: aload_0
       1: getfield      #29                 // Field deployIgnore:Ljava/util/regex/Pattern;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #29                 // Field deployIgnore:Ljava/util/regex/Pattern;
      13: invokevirtual #83                 // Method java/util/regex/Pattern.toString:()Ljava/lang/String;
      16: areturn

  public java.util.regex.Pattern getDeployIgnorePattern();
    Code:
       0: aload_0
       1: getfield      #29                 // Field deployIgnore:Ljava/util/regex/Pattern;
       4: areturn

  public void setDeployIgnore(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #29                 // Field deployIgnore:Ljava/util/regex/Pattern;
       4: ifnonnull     12
       7: aconst_null
       8: astore_2
       9: goto          20
      12: aload_0
      13: getfield      #29                 // Field deployIgnore:Ljava/util/regex/Pattern;
      16: invokevirtual #83                 // Method java/util/regex/Pattern.toString:()Ljava/lang/String;
      19: astore_2
      20: aload_1
      21: ifnonnull     32
      24: aload_0
      25: aconst_null
      26: putfield      #29                 // Field deployIgnore:Ljava/util/regex/Pattern;
      29: goto          40
      32: aload_0
      33: aload_1
      34: invokestatic  #84                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      37: putfield      #29                 // Field deployIgnore:Ljava/util/regex/Pattern;
      40: aload_0
      41: getfield      #55                 // Field support:Ljava/beans/PropertyChangeSupport;
      44: ldc           #85                 // String deployIgnore
      46: aload_2
      47: aload_1
      48: invokevirtual #57                 // Method java/beans/PropertyChangeSupport.firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      51: return

  public boolean isFailCtxIfServletStartFails();
    Code:
       0: aload_0
       1: getfield      #31                 // Field failCtxIfServletStartFails:Z
       4: ireturn

  public void setFailCtxIfServletStartFails(boolean);
    Code:
       0: aload_0
       1: getfield      #31                 // Field failCtxIfServletStartFails:Z
       4: istore_2
       5: aload_0
       6: iload_1
       7: putfield      #31                 // Field failCtxIfServletStartFails:Z
      10: aload_0
      11: getfield      #55                 // Field support:Ljava/beans/PropertyChangeSupport;
      14: ldc           #86                 // String failCtxIfServletStartFails
      16: iload_2
      17: iload_1
      18: invokevirtual #70                 // Method java/beans/PropertyChangeSupport.firePropertyChange:(Ljava/lang/String;ZZ)V
      21: return

  public void addAlias(java.lang.String);
    Code:
       0: aload_1
       1: getstatic     #80                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
       4: invokevirtual #81                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
       7: astore_1
       8: aload_0
       9: getfield      #7                  // Field aliasesLock:Ljava/lang/Object;
      12: dup
      13: astore_2
      14: monitorenter
      15: aload_0
      16: getfield      #4                  // Field aliases:[Ljava/lang/String;
      19: astore_3
      20: aload_3
      21: arraylength
      22: istore        4
      24: iconst_0
      25: istore        5
      27: iload         5
      29: iload         4
      31: if_icmpge     58
      34: aload_3
      35: iload         5
      37: aaload
      38: astore        6
      40: aload         6
      42: aload_1
      43: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      46: ifeq          52
      49: aload_2
      50: monitorexit
      51: return
      52: iinc          5, 1
      55: goto          27
      58: aload_0
      59: getfield      #4                  // Field aliases:[Ljava/lang/String;
      62: aload_0
      63: getfield      #4                  // Field aliases:[Ljava/lang/String;
      66: arraylength
      67: iconst_1
      68: iadd
      69: invokestatic  #87                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      72: checkcast     #88                 // class "[Ljava/lang/String;"
      75: astore_3
      76: aload_3
      77: aload_0
      78: getfield      #4                  // Field aliases:[Ljava/lang/String;
      81: arraylength
      82: aload_1
      83: aastore
      84: aload_0
      85: aload_3
      86: putfield      #4                  // Field aliases:[Ljava/lang/String;
      89: aload_2
      90: monitorexit
      91: goto          101
      94: astore        7
      96: aload_2
      97: monitorexit
      98: aload         7
     100: athrow
     101: aload_0
     102: ldc           #89                 // String addAlias
     104: aload_1
     105: invokevirtual #90                 // Method fireContainerEvent:(Ljava/lang/String;Ljava/lang/Object;)V
     108: return
    Exception table:
       from    to  target type
          15    51    94   any
          52    91    94   any
          94    98    94   any

  public void addChild(org.apache.catalina.Container);
    Code:
       0: aload_1
       1: instanceof    #91                 // class org/apache/catalina/Context
       4: ifne          23
       7: new           #76                 // class java/lang/IllegalArgumentException
      10: dup
      11: getstatic     #50                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      14: ldc           #92                 // String standardHost.notContext
      16: invokevirtual #78                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;)Ljava/lang/String;
      19: invokespecial #79                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_1
      24: new           #93                 // class org/apache/catalina/core/StandardHost$MemoryLeakTrackingListener
      27: dup
      28: aload_0
      29: aconst_null
      30: invokespecial #94                 // Method org/apache/catalina/core/StandardHost$MemoryLeakTrackingListener."<init>":(Lorg/apache/catalina/core/StandardHost;Lorg/apache/catalina/core/StandardHost$1;)V
      33: invokeinterface #95,  2           // InterfaceMethod org/apache/catalina/Container.addLifecycleListener:(Lorg/apache/catalina/LifecycleListener;)V
      38: aload_1
      39: checkcast     #91                 // class org/apache/catalina/Context
      42: astore_2
      43: aload_2
      44: invokeinterface #96,  1           // InterfaceMethod org/apache/catalina/Context.getPath:()Ljava/lang/String;
      49: ifnonnull     77
      52: new           #97                 // class org/apache/catalina/util/ContextName
      55: dup
      56: aload_2
      57: invokeinterface #98,  1           // InterfaceMethod org/apache/catalina/Context.getDocBase:()Ljava/lang/String;
      62: iconst_1
      63: invokespecial #99                 // Method org/apache/catalina/util/ContextName."<init>":(Ljava/lang/String;Z)V
      66: astore_3
      67: aload_2
      68: aload_3
      69: invokevirtual #100                // Method org/apache/catalina/util/ContextName.getPath:()Ljava/lang/String;
      72: invokeinterface #101,  2          // InterfaceMethod org/apache/catalina/Context.setPath:(Ljava/lang/String;)V
      77: aload_0
      78: aload_1
      79: invokespecial #102                // Method org/apache/catalina/core/ContainerBase.addChild:(Lorg/apache/catalina/Container;)V
      82: return

  public java.lang.String[] findReloadedContextMemoryLeaks();
    Code:
       0: invokestatic  #103                // Method java/lang/System.gc:()V
       3: new           #104                // class java/util/ArrayList
       6: dup
       7: invokespecial #105                // Method java/util/ArrayList."<init>":()V
      10: astore_1
      11: aload_0
      12: getfield      #1                  // Field childClassLoaders:Ljava/util/Map;
      15: invokeinterface #106,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      20: invokeinterface #107,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore_2
      26: aload_2
      27: invokeinterface #108,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          94
      35: aload_2
      36: invokeinterface #109,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #110                // class java/util/Map$Entry
      44: astore_3
      45: aload_3
      46: invokeinterface #111,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      51: checkcast     #112                // class java/lang/ClassLoader
      54: astore        4
      56: aload         4
      58: instanceof    #113                // class org/apache/catalina/loader/WebappClassLoaderBase
      61: ifeq          91
      64: aload         4
      66: checkcast     #113                // class org/apache/catalina/loader/WebappClassLoaderBase
      69: invokevirtual #114                // Method org/apache/catalina/loader/WebappClassLoaderBase.getState:()Lorg/apache/catalina/LifecycleState;
      72: invokevirtual #115                // Method org/apache/catalina/LifecycleState.isAvailable:()Z
      75: ifne          91
      78: aload_1
      79: aload_3
      80: invokeinterface #116,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      85: invokeinterface #117,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      90: pop
      91: goto          26
      94: aload_1
      95: iconst_0
      96: anewarray     #3                  // class java/lang/String
      99: invokeinterface #118,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     104: checkcast     #88                 // class "[Ljava/lang/String;"
     107: areturn

  public java.lang.String[] findAliases();
    Code:
       0: aload_0
       1: getfield      #7                  // Field aliasesLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field aliases:[Ljava/lang/String;
      11: aload_1
      12: monitorexit
      13: areturn
      14: astore_2
      15: aload_1
      16: monitorexit
      17: aload_2
      18: athrow
    Exception table:
       from    to  target type
           7    13    14   any
          14    17    14   any

  public void removeAlias(java.lang.String);
    Code:
       0: aload_1
       1: getstatic     #80                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
       4: invokevirtual #81                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
       7: astore_1
       8: aload_0
       9: getfield      #7                  // Field aliasesLock:Ljava/lang/Object;
      12: dup
      13: astore_2
      14: monitorenter
      15: iconst_m1
      16: istore_3
      17: iconst_0
      18: istore        4
      20: iload         4
      22: aload_0
      23: getfield      #4                  // Field aliases:[Ljava/lang/String;
      26: arraylength
      27: if_icmpge     56
      30: aload_0
      31: getfield      #4                  // Field aliases:[Ljava/lang/String;
      34: iload         4
      36: aaload
      37: aload_1
      38: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      41: ifeq          50
      44: iload         4
      46: istore_3
      47: goto          56
      50: iinc          4, 1
      53: goto          20
      56: iload_3
      57: ifge          63
      60: aload_2
      61: monitorexit
      62: return
      63: iconst_0
      64: istore        4
      66: aload_0
      67: getfield      #4                  // Field aliases:[Ljava/lang/String;
      70: arraylength
      71: iconst_1
      72: isub
      73: anewarray     #3                  // class java/lang/String
      76: astore        5
      78: iconst_0
      79: istore        6
      81: iload         6
      83: aload_0
      84: getfield      #4                  // Field aliases:[Ljava/lang/String;
      87: arraylength
      88: if_icmpge     118
      91: iload         6
      93: iload_3
      94: if_icmpeq     112
      97: aload         5
      99: iload         4
     101: iinc          4, 1
     104: aload_0
     105: getfield      #4                  // Field aliases:[Ljava/lang/String;
     108: iload         6
     110: aaload
     111: aastore
     112: iinc          6, 1
     115: goto          81
     118: aload_0
     119: aload         5
     121: putfield      #4                  // Field aliases:[Ljava/lang/String;
     124: aload_2
     125: monitorexit
     126: goto          136
     129: astore        7
     131: aload_2
     132: monitorexit
     133: aload         7
     135: athrow
     136: aload_0
     137: ldc           #119                // String removeAlias
     139: aload_1
     140: invokevirtual #90                 // Method fireContainerEvent:(Ljava/lang/String;Ljava/lang/Object;)V
     143: return
    Exception table:
       from    to  target type
          15    62   129   any
          63   126   129   any
         129   133   129   any

  protected synchronized void startInternal() throws org.apache.catalina.LifecycleException;
    Code:
       0: aload_0
       1: invokevirtual #120                // Method getErrorReportValveClass:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnull        152
       9: aload_1
      10: ldc           #47                 // String
      12: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ifne          152
      18: iconst_0
      19: istore_2
      20: aload_0
      21: invokevirtual #121                // Method getPipeline:()Lorg/apache/catalina/Pipeline;
      24: invokeinterface #122,  1          // InterfaceMethod org/apache/catalina/Pipeline.getValves:()[Lorg/apache/catalina/Valve;
      29: astore_3
      30: aload_3
      31: astore        4
      33: aload         4
      35: arraylength
      36: istore        5
      38: iconst_0
      39: istore        6
      41: iload         6
      43: iload         5
      45: if_icmpge     81
      48: aload         4
      50: iload         6
      52: aaload
      53: astore        7
      55: aload_1
      56: aload         7
      58: invokevirtual #123                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      61: invokevirtual #124                // Method java/lang/Class.getName:()Ljava/lang/String;
      64: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      67: ifeq          75
      70: iconst_1
      71: istore_2
      72: goto          81
      75: iinc          6, 1
      78: goto          41
      81: iload_2
      82: ifne          119
      85: aload_1
      86: invokestatic  #125                // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      89: iconst_0
      90: anewarray     #126                // class java/lang/Class
      93: invokevirtual #127                // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      96: iconst_0
      97: anewarray     #5                  // class java/lang/Object
     100: invokevirtual #128                // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
     103: checkcast     #129                // class org/apache/catalina/Valve
     106: astore        4
     108: aload_0
     109: invokevirtual #121                // Method getPipeline:()Lorg/apache/catalina/Pipeline;
     112: aload         4
     114: invokeinterface #130,  2          // InterfaceMethod org/apache/catalina/Pipeline.addValve:(Lorg/apache/catalina/Valve;)V
     119: goto          152
     122: astore_2
     123: aload_2
     124: invokestatic  #132                // Method org/apache/tomcat/util/ExceptionUtils.handleThrowable:(Ljava/lang/Throwable;)V
     127: getstatic     #49                 // Field log:Lorg/apache/juli/logging/Log;
     130: getstatic     #50                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
     133: ldc           #133                // String standardHost.invalidErrorReportValveClass
     135: iconst_1
     136: anewarray     #5                  // class java/lang/Object
     139: dup
     140: iconst_0
     141: aload_1
     142: aastore
     143: invokevirtual #53                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     146: aload_2
     147: invokeinterface #134,  3          // InterfaceMethod org/apache/juli/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     152: aload_0
     153: invokespecial #135                // Method org/apache/catalina/core/ContainerBase.startInternal:()V
     156: return
    Exception table:
       from    to  target type
          18   119   122   Class java/lang/Throwable

  public java.lang.String[] getValveNames() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #121                // Method getPipeline:()Lorg/apache/catalina/Pipeline;
       4: invokeinterface #122,  1          // InterfaceMethod org/apache/catalina/Pipeline.getValves:()[Lorg/apache/catalina/Valve;
       9: astore_1
      10: aload_1
      11: arraylength
      12: anewarray     #3                  // class java/lang/String
      15: astore_2
      16: iconst_0
      17: istore_3
      18: iload_3
      19: aload_1
      20: arraylength
      21: if_icmpge     65
      24: aload_1
      25: iload_3
      26: aaload
      27: instanceof    #136                // class org/apache/catalina/JmxEnabled
      30: ifeq          59
      33: aload_1
      34: iload_3
      35: aaload
      36: checkcast     #136                // class org/apache/catalina/JmxEnabled
      39: invokeinterface #137,  1          // InterfaceMethod org/apache/catalina/JmxEnabled.getObjectName:()Ljavax/management/ObjectName;
      44: astore        4
      46: aload         4
      48: ifnull        59
      51: aload_2
      52: iload_3
      53: aload         4
      55: invokevirtual #138                // Method javax/management/ObjectName.toString:()Ljava/lang/String;
      58: aastore
      59: iinc          3, 1
      62: goto          18
      65: aload_2
      66: areturn

  public java.lang.String[] getAliases();
    Code:
       0: aload_0
       1: getfield      #7                  // Field aliasesLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field aliases:[Ljava/lang/String;
      11: aload_1
      12: monitorexit
      13: areturn
      14: astore_2
      15: aload_1
      16: monitorexit
      17: aload_2
      18: athrow
    Exception table:
       from    to  target type
           7    13    14   any
          14    17    14   any

  protected java.lang.String getObjectNameKeyProperties();
    Code:
       0: new           #60                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #139                // String type=Host
       6: invokespecial #62                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: aload_1
      11: aload_0
      12: invokevirtual #140                // Method getMBeanKeyProperties:()Ljava/lang/String;
      15: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: pop
      19: aload_1
      20: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: areturn

  static java.util.Map access$100(org.apache.catalina.core.StandardHost);
    Code:
       0: aload_0
       1: getfield      #1                  // Field childClassLoaders:Ljava/util/Map;
       4: areturn

  static {};
    Code:
       0: ldc_w         #141                // class org/apache/catalina/core/StandardHost
       3: invokestatic  #142                // Method org/apache/juli/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/juli/logging/Log;
       6: putstatic     #49                 // Field log:Lorg/apache/juli/logging/Log;
       9: return
}
