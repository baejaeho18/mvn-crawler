Compiled from "SimpleThreadScope.java"
public class org.springframework.context.support.SimpleThreadScope implements org.springframework.beans.factory.config.Scope {
  private static final org.apache.commons.logging.Log logger;

  private final java.lang.ThreadLocal<java.util.Map<java.lang.String, java.lang.Object>> threadScope;

  public org.springframework.context.support.SimpleThreadScope();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/context/support/SimpleThreadScope$1
       8: dup
       9: aload_0
      10: ldc           #3                  // String SimpleThreadScope
      12: invokespecial #4                  // Method org/springframework/context/support/SimpleThreadScope$1."<init>":(Lorg/springframework/context/support/SimpleThreadScope;Ljava/lang/String;)V
      15: putfield      #5                  // Field threadScope:Ljava/lang/ThreadLocal;
      18: return

  public java.lang.Object get(java.lang.String, org.springframework.beans.factory.ObjectFactory<?>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field threadScope:Ljava/lang/ThreadLocal;
       4: invokevirtual #6                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #7                  // class java/util/Map
      10: astore_3
      11: aload_3
      12: aload_1
      13: invokeinterface #8,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: astore        4
      20: aload         4
      22: ifnonnull     43
      25: aload_2
      26: invokeinterface #9,  1            // InterfaceMethod org/springframework/beans/factory/ObjectFactory.getObject:()Ljava/lang/Object;
      31: astore        4
      33: aload_3
      34: aload_1
      35: aload         4
      37: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: aload         4
      45: areturn

  public java.lang.Object remove(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field threadScope:Ljava/lang/ThreadLocal;
       4: invokevirtual #6                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #7                  // class java/util/Map
      10: astore_2
      11: aload_2
      12: aload_1
      13: invokeinterface #11,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      18: areturn

  public void registerDestructionCallback(java.lang.String, java.lang.Runnable);
    Code:
       0: getstatic     #12                 // Field logger:Lorg/apache/commons/logging/Log;
       3: ldc           #13                 // String SimpleThreadScope does not support destruction callbacks. Consider using RequestScope in a web environment.
       5: invokeinterface #14,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      10: return

  public java.lang.Object resolveContextualObject(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getConversationId();
    Code:
       0: invokestatic  #15                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #16                 // Method java/lang/Thread.getName:()Ljava/lang/String;
       6: areturn

  static {};
    Code:
       0: ldc           #17                 // class org/springframework/context/support/SimpleThreadScope
       2: invokestatic  #18                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #12                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
