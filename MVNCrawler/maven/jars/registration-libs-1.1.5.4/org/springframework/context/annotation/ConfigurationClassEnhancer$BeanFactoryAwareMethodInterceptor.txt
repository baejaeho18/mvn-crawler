Compiled from "ConfigurationClassEnhancer.java"
class org.springframework.context.annotation.ConfigurationClassEnhancer$BeanFactoryAwareMethodInterceptor implements org.springframework.cglib.proxy.MethodInterceptor,org.springframework.context.annotation.ConfigurationClassEnhancer$ConditionalCallback {
  private org.springframework.context.annotation.ConfigurationClassEnhancer$BeanFactoryAwareMethodInterceptor();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.Object intercept(java.lang.Object, java.lang.reflect.Method, java.lang.Object[], org.springframework.cglib.proxy.MethodProxy) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #5                  // String $$beanFactory
       6: invokestatic  #6                  // Method org/springframework/util/ReflectionUtils.findField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
       9: astore        5
      11: aload         5
      13: ifnull        20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ldc           #7                  // String Unable to find generated BeanFactory field
      23: invokestatic  #8                  // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      26: aload         5
      28: aload_1
      29: aload_3
      30: iconst_0
      31: aaload
      32: invokevirtual #9                  // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      35: ldc           #10                 // class org/springframework/beans/factory/BeanFactoryAware
      37: aload_1
      38: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      41: invokevirtual #11                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      44: invokestatic  #12                 // Method org/springframework/util/ClassUtils.getUserClass:(Ljava/lang/Class;)Ljava/lang/Class;
      47: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      50: ifeq          61
      53: aload         4
      55: aload_1
      56: aload_3
      57: invokevirtual #14                 // Method org/springframework/cglib/proxy/MethodProxy.invokeSuper:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      60: areturn
      61: aconst_null
      62: areturn

  public boolean isMatch(java.lang.reflect.Method);
    Code:
       0: aload_1
       1: invokevirtual #15                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
       4: ldc           #16                 // String setBeanFactory
       6: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          47
      12: aload_1
      13: invokevirtual #18                 // Method java/lang/reflect/Method.getParameterCount:()I
      16: iconst_1
      17: if_icmpne     47
      20: ldc           #19                 // class org/springframework/beans/factory/BeanFactory
      22: aload_1
      23: invokevirtual #20                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      26: iconst_0
      27: aaload
      28: if_acmpne     47
      31: ldc           #10                 // class org/springframework/beans/factory/BeanFactoryAware
      33: aload_1
      34: invokevirtual #21                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      37: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      40: ifeq          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn

  org.springframework.context.annotation.ConfigurationClassEnhancer$BeanFactoryAwareMethodInterceptor(org.springframework.context.annotation.ConfigurationClassEnhancer$1);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method "<init>":()V
       4: return
}
