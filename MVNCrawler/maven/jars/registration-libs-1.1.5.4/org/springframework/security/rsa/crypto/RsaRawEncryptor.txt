Compiled from "RsaRawEncryptor.java"
public class org.springframework.security.rsa.crypto.RsaRawEncryptor implements org.springframework.security.crypto.encrypt.BytesEncryptor,org.springframework.security.crypto.encrypt.TextEncryptor,org.springframework.security.rsa.crypto.RsaKeyHolder {
  private static final java.lang.String DEFAULT_ENCODING;

  private org.springframework.security.rsa.crypto.RsaAlgorithm algorithm;

  private java.nio.charset.Charset charset;

  private java.security.PublicKey publicKey;

  private java.security.PrivateKey privateKey;

  private java.nio.charset.Charset defaultCharset;

  public org.springframework.security.rsa.crypto.RsaRawEncryptor(org.springframework.security.rsa.crypto.RsaAlgorithm);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/springframework/security/rsa/crypto/RsaKeyHelper.generateKeyPair:()Ljava/security/KeyPair;
       4: aload_1
       5: invokespecial #2                  // Method "<init>":(Ljava/security/KeyPair;Lorg/springframework/security/rsa/crypto/RsaAlgorithm;)V
       8: return

  public org.springframework.security.rsa.crypto.RsaRawEncryptor();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/springframework/security/rsa/crypto/RsaKeyHelper.generateKeyPair:()Ljava/security/KeyPair;
       4: invokespecial #3                  // Method "<init>":(Ljava/security/KeyPair;)V
       7: return

  public org.springframework.security.rsa.crypto.RsaRawEncryptor(java.security.KeyPair, org.springframework.security.rsa.crypto.RsaAlgorithm);
    Code:
       0: aload_0
       1: ldc           #5                  // String UTF-8
       3: aload_1
       4: invokevirtual #6                  // Method java/security/KeyPair.getPublic:()Ljava/security/PublicKey;
       7: aload_1
       8: invokevirtual #7                  // Method java/security/KeyPair.getPrivate:()Ljava/security/PrivateKey;
      11: aload_2
      12: invokespecial #8                  // Method "<init>":(Ljava/lang/String;Ljava/security/PublicKey;Ljava/security/PrivateKey;Lorg/springframework/security/rsa/crypto/RsaAlgorithm;)V
      15: return

  public org.springframework.security.rsa.crypto.RsaRawEncryptor(java.security.KeyPair);
    Code:
       0: aload_0
       1: ldc           #5                  // String UTF-8
       3: aload_1
       4: invokevirtual #6                  // Method java/security/KeyPair.getPublic:()Ljava/security/PublicKey;
       7: aload_1
       8: invokevirtual #7                  // Method java/security/KeyPair.getPrivate:()Ljava/security/PrivateKey;
      11: invokespecial #9                  // Method "<init>":(Ljava/lang/String;Ljava/security/PublicKey;Ljava/security/PrivateKey;)V
      14: return

  public org.springframework.security.rsa.crypto.RsaRawEncryptor(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #10                 // Method org/springframework/security/rsa/crypto/RsaKeyHelper.parseKeyPair:(Ljava/lang/String;)Ljava/security/KeyPair;
       5: invokespecial #3                  // Method "<init>":(Ljava/security/KeyPair;)V
       8: return

  public org.springframework.security.rsa.crypto.RsaRawEncryptor(java.security.PublicKey);
    Code:
       0: aload_0
       1: ldc           #5                  // String UTF-8
       3: aload_1
       4: aconst_null
       5: invokespecial #9                  // Method "<init>":(Ljava/lang/String;Ljava/security/PublicKey;Ljava/security/PrivateKey;)V
       8: return

  public org.springframework.security.rsa.crypto.RsaRawEncryptor(java.lang.String, java.security.PublicKey, java.security.PrivateKey);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: getstatic     #11                 // Field org/springframework/security/rsa/crypto/RsaAlgorithm.DEFAULT:Lorg/springframework/security/rsa/crypto/RsaAlgorithm;
       7: invokespecial #8                  // Method "<init>":(Ljava/lang/String;Ljava/security/PublicKey;Ljava/security/PrivateKey;Lorg/springframework/security/rsa/crypto/RsaAlgorithm;)V
      10: return

  public org.springframework.security.rsa.crypto.RsaRawEncryptor(java.lang.String, java.security.PublicKey, java.security.PrivateKey, org.springframework.security.rsa.crypto.RsaAlgorithm);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #11                 // Field org/springframework/security/rsa/crypto/RsaAlgorithm.DEFAULT:Lorg/springframework/security/rsa/crypto/RsaAlgorithm;
       8: putfield      #13                 // Field algorithm:Lorg/springframework/security/rsa/crypto/RsaAlgorithm;
      11: aload_0
      12: aload_1
      13: invokestatic  #14                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      16: putfield      #15                 // Field charset:Ljava/nio/charset/Charset;
      19: aload_0
      20: aload_2
      21: putfield      #16                 // Field publicKey:Ljava/security/PublicKey;
      24: aload_0
      25: aload_3
      26: putfield      #17                 // Field privateKey:Ljava/security/PrivateKey;
      29: aload_0
      30: ldc           #5                  // String UTF-8
      32: invokestatic  #14                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      35: putfield      #18                 // Field defaultCharset:Ljava/nio/charset/Charset;
      38: aload_0
      39: aload         4
      41: putfield      #13                 // Field algorithm:Lorg/springframework/security/rsa/crypto/RsaAlgorithm;
      44: return

  public java.lang.String getPublicKey();
    Code:
       0: aload_0
       1: getfield      #16                 // Field publicKey:Ljava/security/PublicKey;
       4: checkcast     #19                 // class java/security/interfaces/RSAPublicKey
       7: ldc           #20                 // String application
       9: invokestatic  #21                 // Method org/springframework/security/rsa/crypto/RsaKeyHelper.encodePublicKey:(Ljava/security/interfaces/RSAPublicKey;Ljava/lang/String;)Ljava/lang/String;
      12: areturn

  public java.lang.String encrypt(java.lang.String);
    Code:
       0: new           #22                 // class java/lang/String
       3: dup
       4: aload_0
       5: aload_1
       6: aload_0
       7: getfield      #15                 // Field charset:Ljava/nio/charset/Charset;
      10: invokevirtual #23                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      13: invokevirtual #24                 // Method encrypt:([B)[B
      16: invokestatic  #25                 // Method org/springframework/util/Base64Utils.encode:([B)[B
      19: aload_0
      20: getfield      #18                 // Field defaultCharset:Ljava/nio/charset/Charset;
      23: invokespecial #26                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      26: areturn

  public java.lang.String decrypt(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #17                 // Field privateKey:Ljava/security/PrivateKey;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #27                 // String Private key must be provided for decryption
      14: invokestatic  #28                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: new           #22                 // class java/lang/String
      20: dup
      21: aload_0
      22: aload_1
      23: aload_0
      24: getfield      #18                 // Field defaultCharset:Ljava/nio/charset/Charset;
      27: invokevirtual #23                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      30: invokestatic  #29                 // Method org/springframework/util/Base64Utils.decode:([B)[B
      33: invokevirtual #30                 // Method decrypt:([B)[B
      36: aload_0
      37: getfield      #15                 // Field charset:Ljava/nio/charset/Charset;
      40: invokespecial #26                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      43: areturn

  public byte[] encrypt(byte[]);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #16                 // Field publicKey:Ljava/security/PublicKey;
       5: aload_0
       6: getfield      #13                 // Field algorithm:Lorg/springframework/security/rsa/crypto/RsaAlgorithm;
       9: invokestatic  #31                 // Method encrypt:([BLjava/security/PublicKey;Lorg/springframework/security/rsa/crypto/RsaAlgorithm;)[B
      12: areturn

  public byte[] decrypt(byte[]);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #17                 // Field privateKey:Ljava/security/PrivateKey;
       5: aload_0
       6: getfield      #13                 // Field algorithm:Lorg/springframework/security/rsa/crypto/RsaAlgorithm;
       9: invokestatic  #32                 // Method decrypt:([BLjava/security/PrivateKey;Lorg/springframework/security/rsa/crypto/RsaAlgorithm;)[B
      12: areturn

  private static byte[] encrypt(byte[], java.security.PublicKey, org.springframework.security.rsa.crypto.RsaAlgorithm);
    Code:
       0: new           #33                 // class java/io/ByteArrayOutputStream
       3: dup
       4: aload_0
       5: arraylength
       6: invokespecial #34                 // Method java/io/ByteArrayOutputStream."<init>":(I)V
       9: astore_3
      10: aload_2
      11: invokevirtual #35                 // Method org/springframework/security/rsa/crypto/RsaAlgorithm.getJceName:()Ljava/lang/String;
      14: invokestatic  #36                 // Method javax/crypto/Cipher.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;
      17: astore        4
      19: aload_0
      20: arraylength
      21: aload_2
      22: invokevirtual #37                 // Method org/springframework/security/rsa/crypto/RsaAlgorithm.getMaxLength:()I
      25: invokestatic  #38                 // Method java/lang/Math.min:(II)I
      28: istore        5
      30: iconst_0
      31: istore        6
      33: iload         6
      35: aload_0
      36: arraylength
      37: if_icmpge     99
      40: aload         4
      42: iconst_1
      43: aload_1
      44: invokevirtual #40                 // Method javax/crypto/Cipher.init:(ILjava/security/Key;)V
      47: aload         4
      49: aload_0
      50: iload         6
      52: iload         5
      54: invokevirtual #41                 // Method javax/crypto/Cipher.update:([BII)[B
      57: pop
      58: iload         6
      60: iload         5
      62: iadd
      63: istore        6
      65: aload_0
      66: arraylength
      67: iload         6
      69: isub
      70: aload_2
      71: invokevirtual #37                 // Method org/springframework/security/rsa/crypto/RsaAlgorithm.getMaxLength:()I
      74: invokestatic  #38                 // Method java/lang/Math.min:(II)I
      77: istore        5
      79: aload         4
      81: invokevirtual #42                 // Method javax/crypto/Cipher.doFinal:()[B
      84: astore        7
      86: aload_3
      87: aload         7
      89: iconst_0
      90: aload         7
      92: arraylength
      93: invokevirtual #43                 // Method java/io/ByteArrayOutputStream.write:([BII)V
      96: goto          33
      99: aload_3
     100: invokevirtual #44                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     103: areturn
     104: astore        4
     106: aload         4
     108: athrow
     109: astore        4
     111: new           #47                 // class java/lang/IllegalStateException
     114: dup
     115: ldc           #48                 // String Cannot encrypt
     117: aload         4
     119: invokespecial #49                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     122: athrow
    Exception table:
       from    to  target type
          10   103   104   Class java/lang/RuntimeException
          10   103   109   Class java/lang/Exception

  private static byte[] decrypt(byte[], java.security.PrivateKey, org.springframework.security.rsa.crypto.RsaAlgorithm);
    Code:
       0: new           #33                 // class java/io/ByteArrayOutputStream
       3: dup
       4: aload_0
       5: arraylength
       6: invokespecial #34                 // Method java/io/ByteArrayOutputStream."<init>":(I)V
       9: astore_3
      10: aload_2
      11: invokevirtual #35                 // Method org/springframework/security/rsa/crypto/RsaAlgorithm.getJceName:()Ljava/lang/String;
      14: invokestatic  #36                 // Method javax/crypto/Cipher.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;
      17: astore        4
      19: aload_0
      20: arraylength
      21: sipush        128
      24: invokestatic  #38                 // Method java/lang/Math.min:(II)I
      27: istore        5
      29: iconst_0
      30: istore        6
      32: iload         6
      34: aload_0
      35: arraylength
      36: if_icmpge     97
      39: aload         4
      41: iconst_2
      42: aload_1
      43: invokevirtual #40                 // Method javax/crypto/Cipher.init:(ILjava/security/Key;)V
      46: aload         4
      48: aload_0
      49: iload         6
      51: iload         5
      53: invokevirtual #41                 // Method javax/crypto/Cipher.update:([BII)[B
      56: pop
      57: iload         6
      59: iload         5
      61: iadd
      62: istore        6
      64: aload_0
      65: arraylength
      66: iload         6
      68: isub
      69: sipush        128
      72: invokestatic  #38                 // Method java/lang/Math.min:(II)I
      75: istore        5
      77: aload         4
      79: invokevirtual #42                 // Method javax/crypto/Cipher.doFinal:()[B
      82: astore        7
      84: aload_3
      85: aload         7
      87: iconst_0
      88: aload         7
      90: arraylength
      91: invokevirtual #43                 // Method java/io/ByteArrayOutputStream.write:([BII)V
      94: goto          32
      97: aload_3
      98: invokevirtual #44                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     101: areturn
     102: astore        4
     104: aload         4
     106: athrow
     107: astore        4
     109: new           #47                 // class java/lang/IllegalStateException
     112: dup
     113: ldc           #50                 // String Cannot decrypt
     115: aload         4
     117: invokespecial #49                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     120: athrow
    Exception table:
       from    to  target type
          10   101   102   Class java/lang/RuntimeException
          10   101   107   Class java/lang/Exception
}
