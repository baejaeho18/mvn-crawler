Compiled from "RsaKeyHelper.java"
class org.springframework.security.rsa.crypto.RsaKeyHelper {
  private static java.nio.charset.Charset UTF8;

  private static final java.lang.String BEGIN;

  private static final java.util.regex.Pattern PEM_DATA;

  private static final byte[] PREFIX;

  private static final java.util.regex.Pattern SSH_PUB_KEY;

  org.springframework.security.rsa.crypto.RsaKeyHelper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static java.security.KeyPair parseKeyPair(java.lang.String);
    Code:
       0: getstatic     #2                  // Field PEM_DATA:Ljava/util/regex/Pattern;
       3: aload_0
       4: invokevirtual #3                  // Method java/lang/String.trim:()Ljava/lang/String;
       7: invokevirtual #4                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      10: astore_1
      11: aload_1
      12: invokevirtual #5                  // Method java/util/regex/Matcher.matches:()Z
      15: ifne          42
      18: new           #6                  // class java/security/KeyPair
      21: dup
      22: aload_0
      23: invokestatic  #7                  // Method extractPublicKey:(Ljava/lang/String;)Ljava/security/interfaces/RSAPublicKey;
      26: aconst_null
      27: invokespecial #8                  // Method java/security/KeyPair."<init>":(Ljava/security/PublicKey;Ljava/security/PrivateKey;)V
      30: areturn
      31: astore_2
      32: new           #10                 // class java/lang/IllegalArgumentException
      35: dup
      36: ldc           #11                 // String String is not PEM encoded data, nor a public key encoded for ssh
      38: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_1
      43: iconst_1
      44: invokevirtual #13                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      47: astore_2
      48: aload_1
      49: iconst_2
      50: invokevirtual #13                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      53: invokestatic  #14                 // Method base64Decode:(Ljava/lang/String;)[B
      56: astore_3
      57: aconst_null
      58: astore        5
      60: ldc           #15                 // String RSA
      62: invokestatic  #16                 // Method java/security/KeyFactory.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;
      65: astore        6
      67: aload_2
      68: ldc           #17                 // String RSA PRIVATE KEY
      70: invokevirtual #18                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      73: ifeq          198
      76: aload_3
      77: invokestatic  #19                 // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      80: astore        7
      82: aload         7
      84: invokevirtual #20                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      87: bipush        9
      89: if_icmpeq     102
      92: new           #10                 // class java/lang/IllegalArgumentException
      95: dup
      96: ldc           #21                 // String Invalid RSA Private Key ASN1 sequence.
      98: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     101: athrow
     102: aload         7
     104: invokestatic  #22                 // Method org/bouncycastle/asn1/pkcs/RSAPrivateKey.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/pkcs/RSAPrivateKey;
     107: astore        8
     109: new           #23                 // class java/security/spec/RSAPublicKeySpec
     112: dup
     113: aload         8
     115: invokevirtual #24                 // Method org/bouncycastle/asn1/pkcs/RSAPrivateKey.getModulus:()Ljava/math/BigInteger;
     118: aload         8
     120: invokevirtual #25                 // Method org/bouncycastle/asn1/pkcs/RSAPrivateKey.getPublicExponent:()Ljava/math/BigInteger;
     123: invokespecial #26                 // Method java/security/spec/RSAPublicKeySpec."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;)V
     126: astore        9
     128: new           #27                 // class java/security/spec/RSAPrivateCrtKeySpec
     131: dup
     132: aload         8
     134: invokevirtual #24                 // Method org/bouncycastle/asn1/pkcs/RSAPrivateKey.getModulus:()Ljava/math/BigInteger;
     137: aload         8
     139: invokevirtual #25                 // Method org/bouncycastle/asn1/pkcs/RSAPrivateKey.getPublicExponent:()Ljava/math/BigInteger;
     142: aload         8
     144: invokevirtual #28                 // Method org/bouncycastle/asn1/pkcs/RSAPrivateKey.getPrivateExponent:()Ljava/math/BigInteger;
     147: aload         8
     149: invokevirtual #29                 // Method org/bouncycastle/asn1/pkcs/RSAPrivateKey.getPrime1:()Ljava/math/BigInteger;
     152: aload         8
     154: invokevirtual #30                 // Method org/bouncycastle/asn1/pkcs/RSAPrivateKey.getPrime2:()Ljava/math/BigInteger;
     157: aload         8
     159: invokevirtual #31                 // Method org/bouncycastle/asn1/pkcs/RSAPrivateKey.getExponent1:()Ljava/math/BigInteger;
     162: aload         8
     164: invokevirtual #32                 // Method org/bouncycastle/asn1/pkcs/RSAPrivateKey.getExponent2:()Ljava/math/BigInteger;
     167: aload         8
     169: invokevirtual #33                 // Method org/bouncycastle/asn1/pkcs/RSAPrivateKey.getCoefficient:()Ljava/math/BigInteger;
     172: invokespecial #34                 // Method java/security/spec/RSAPrivateCrtKeySpec."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V
     175: astore        10
     177: aload         6
     179: aload         9
     181: invokevirtual #35                 // Method java/security/KeyFactory.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;
     184: astore        4
     186: aload         6
     188: aload         10
     190: invokevirtual #36                 // Method java/security/KeyFactory.generatePrivate:(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;
     193: astore        5
     195: goto          309
     198: aload_2
     199: ldc           #37                 // String PUBLIC KEY
     201: invokevirtual #18                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     204: ifeq          229
     207: new           #38                 // class java/security/spec/X509EncodedKeySpec
     210: dup
     211: aload_3
     212: invokespecial #39                 // Method java/security/spec/X509EncodedKeySpec."<init>":([B)V
     215: astore        7
     217: aload         6
     219: aload         7
     221: invokevirtual #35                 // Method java/security/KeyFactory.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;
     224: astore        4
     226: goto          309
     229: aload_2
     230: ldc           #40                 // String RSA PUBLIC KEY
     232: invokevirtual #18                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     235: ifeq          282
     238: aload_3
     239: invokestatic  #19                 // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
     242: astore        7
     244: aload         7
     246: invokestatic  #41                 // Method org/bouncycastle/asn1/pkcs/RSAPublicKey.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/pkcs/RSAPublicKey;
     249: astore        8
     251: new           #23                 // class java/security/spec/RSAPublicKeySpec
     254: dup
     255: aload         8
     257: invokevirtual #42                 // Method org/bouncycastle/asn1/pkcs/RSAPublicKey.getModulus:()Ljava/math/BigInteger;
     260: aload         8
     262: invokevirtual #43                 // Method org/bouncycastle/asn1/pkcs/RSAPublicKey.getPublicExponent:()Ljava/math/BigInteger;
     265: invokespecial #26                 // Method java/security/spec/RSAPublicKeySpec."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;)V
     268: astore        9
     270: aload         6
     272: aload         9
     274: invokevirtual #35                 // Method java/security/KeyFactory.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;
     277: astore        4
     279: goto          309
     282: new           #10                 // class java/lang/IllegalArgumentException
     285: dup
     286: new           #44                 // class java/lang/StringBuilder
     289: dup
     290: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
     293: aload_2
     294: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     297: ldc           #47                 // String  is not a supported format
     299: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     302: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     305: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     308: athrow
     309: new           #6                  // class java/security/KeyPair
     312: dup
     313: aload         4
     315: aload         5
     317: invokespecial #8                  // Method java/security/KeyPair."<init>":(Ljava/security/PublicKey;Ljava/security/PrivateKey;)V
     320: areturn
     321: astore        6
     323: new           #50                 // class java/lang/RuntimeException
     326: dup
     327: aload         6
     329: invokespecial #51                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     332: athrow
     333: astore        6
     335: new           #53                 // class java/lang/IllegalStateException
     338: dup
     339: aload         6
     341: invokespecial #54                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
     344: athrow
    Exception table:
       from    to  target type
          18    30    31   Class java/lang/Exception
          60   320   321   Class java/security/spec/InvalidKeySpecException
          60   320   333   Class java/security/NoSuchAlgorithmException

  private static byte[] base64Decode(java.lang.String);
    Code:
       0: getstatic     #55                 // Field UTF8:Ljava/nio/charset/Charset;
       3: invokevirtual #56                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
       6: aload_0
       7: invokestatic  #57                 // Method java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
      10: invokevirtual #58                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;
      13: astore_1
      14: aload_1
      15: invokevirtual #59                 // Method java/nio/ByteBuffer.limit:()I
      18: newarray       byte
      20: astore_2
      21: aload_1
      22: invokevirtual #60                 // Method java/nio/ByteBuffer.array:()[B
      25: iconst_0
      26: aload_2
      27: iconst_0
      28: aload_1
      29: invokevirtual #59                 // Method java/nio/ByteBuffer.limit:()I
      32: invokestatic  #61                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      35: aload_2
      36: invokestatic  #62                 // Method org/springframework/util/Base64Utils.decode:([B)[B
      39: areturn
      40: astore_1
      41: new           #50                 // class java/lang/RuntimeException
      44: dup
      45: aload_1
      46: invokespecial #51                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      49: athrow
    Exception table:
       from    to  target type
           0    39    40   Class java/nio/charset/CharacterCodingException

  static java.lang.String base64Encode(byte[]);
    Code:
       0: getstatic     #55                 // Field UTF8:Ljava/nio/charset/Charset;
       3: invokevirtual #64                 // Method java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;
       6: aload_0
       7: invokestatic  #65                 // Method org/springframework/util/Base64Utils.encode:([B)[B
      10: invokestatic  #66                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      13: invokevirtual #67                 // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
      16: invokevirtual #68                 // Method java/nio/CharBuffer.toString:()Ljava/lang/String;
      19: areturn
      20: astore_1
      21: new           #50                 // class java/lang/RuntimeException
      24: dup
      25: aload_1
      26: invokespecial #51                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      29: athrow
    Exception table:
       from    to  target type
           0    19    20   Class java/nio/charset/CharacterCodingException

  static java.security.KeyPair generateKeyPair();
    Code:
       0: ldc           #15                 // String RSA
       2: invokestatic  #69                 // Method java/security/KeyPairGenerator.getInstance:(Ljava/lang/String;)Ljava/security/KeyPairGenerator;
       5: astore_0
       6: aload_0
       7: sipush        1024
      10: invokevirtual #70                 // Method java/security/KeyPairGenerator.initialize:(I)V
      13: aload_0
      14: invokevirtual #71                 // Method java/security/KeyPairGenerator.generateKeyPair:()Ljava/security/KeyPair;
      17: areturn
      18: astore_0
      19: new           #53                 // class java/lang/IllegalStateException
      22: dup
      23: aload_0
      24: invokespecial #54                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      27: athrow
    Exception table:
       from    to  target type
           0    17    18   Class java/security/NoSuchAlgorithmException

  private static java.security.interfaces.RSAPublicKey extractPublicKey(java.lang.String);
    Code:
       0: getstatic     #72                 // Field SSH_PUB_KEY:Ljava/util/regex/Pattern;
       3: aload_0
       4: invokevirtual #4                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: astore_1
       8: aload_1
       9: invokevirtual #5                  // Method java/util/regex/Matcher.matches:()Z
      12: ifeq          68
      15: aload_1
      16: iconst_1
      17: invokevirtual #13                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      20: astore_2
      21: aload_1
      22: iconst_2
      23: invokevirtual #13                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      26: astore_3
      27: ldc           #73                 // String rsa
      29: aload_2
      30: invokevirtual #74                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      33: ifne          63
      36: new           #10                 // class java/lang/IllegalArgumentException
      39: dup
      40: new           #44                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #75                 // String Only RSA is currently supported, but algorithm was
      49: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_2
      53: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: aload_3
      64: invokestatic  #76                 // Method parseSSHPublicKey:(Ljava/lang/String;)Ljava/security/interfaces/RSAPublicKey;
      67: areturn
      68: aload_0
      69: ldc           #78                 // String -----BEGIN
      71: invokevirtual #79                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      74: ifne          82
      77: aload_0
      78: invokestatic  #76                 // Method parseSSHPublicKey:(Ljava/lang/String;)Ljava/security/interfaces/RSAPublicKey;
      81: areturn
      82: aconst_null
      83: areturn

  static java.security.interfaces.RSAPublicKey parsePublicKey(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method extractPublicKey:(Ljava/lang/String;)Ljava/security/interfaces/RSAPublicKey;
       4: astore_1
       5: aload_1
       6: ifnull        11
       9: aload_1
      10: areturn
      11: aload_0
      12: invokestatic  #80                 // Method parseKeyPair:(Ljava/lang/String;)Ljava/security/KeyPair;
      15: astore_2
      16: aload_2
      17: invokevirtual #81                 // Method java/security/KeyPair.getPublic:()Ljava/security/PublicKey;
      20: ifnonnull     33
      23: new           #10                 // class java/lang/IllegalArgumentException
      26: dup
      27: ldc           #82                 // String Key data does not contain a public key
      29: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_2
      34: invokevirtual #81                 // Method java/security/KeyPair.getPublic:()Ljava/security/PublicKey;
      37: checkcast     #83                 // class java/security/interfaces/RSAPublicKey
      40: areturn

  static java.lang.String encodePublicKey(java.security.interfaces.RSAPublicKey, java.lang.String);
    Code:
       0: new           #84                 // class java/io/StringWriter
       3: dup
       4: invokespecial #85                 // Method java/io/StringWriter."<init>":()V
       7: astore_2
       8: aload_2
       9: ldc           #86                 // String ssh-rsa
      11: invokevirtual #87                 // Method java/io/StringWriter.append:(Ljava/lang/CharSequence;)Ljava/io/StringWriter;
      14: pop
      15: new           #88                 // class java/io/ByteArrayOutputStream
      18: dup
      19: invokespecial #89                 // Method java/io/ByteArrayOutputStream."<init>":()V
      22: astore_3
      23: aload_3
      24: getstatic     #90                 // Field PREFIX:[B
      27: invokevirtual #91                 // Method java/io/ByteArrayOutputStream.write:([B)V
      30: aload_3
      31: aload_0
      32: invokeinterface #92,  1           // InterfaceMethod java/security/interfaces/RSAPublicKey.getPublicExponent:()Ljava/math/BigInteger;
      37: invokestatic  #93                 // Method writeBigInteger:(Ljava/io/ByteArrayOutputStream;Ljava/math/BigInteger;)V
      40: aload_3
      41: aload_0
      42: invokeinterface #94,  1           // InterfaceMethod java/security/interfaces/RSAPublicKey.getModulus:()Ljava/math/BigInteger;
      47: invokestatic  #93                 // Method writeBigInteger:(Ljava/io/ByteArrayOutputStream;Ljava/math/BigInteger;)V
      50: goto          67
      53: astore        4
      55: new           #53                 // class java/lang/IllegalStateException
      58: dup
      59: ldc           #96                 // String Cannot encode key
      61: aload         4
      63: invokespecial #97                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      66: athrow
      67: aload_2
      68: aload_3
      69: invokevirtual #98                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      72: invokestatic  #99                 // Method base64Encode:([B)Ljava/lang/String;
      75: invokevirtual #87                 // Method java/io/StringWriter.append:(Ljava/lang/CharSequence;)Ljava/io/StringWriter;
      78: pop
      79: aload_2
      80: new           #44                 // class java/lang/StringBuilder
      83: dup
      84: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      87: ldc           #100                // String
      89: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_1
      93: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokevirtual #87                 // Method java/io/StringWriter.append:(Ljava/lang/CharSequence;)Ljava/io/StringWriter;
     102: pop
     103: aload_2
     104: invokevirtual #101                // Method java/io/StringWriter.toString:()Ljava/lang/String;
     107: areturn
    Exception table:
       from    to  target type
          23    50    53   Class java/io/IOException

  private static java.security.interfaces.RSAPublicKey parseSSHPublicKey(java.lang.String);
    Code:
       0: new           #102                // class java/io/ByteArrayInputStream
       3: dup
       4: aload_0
       5: invokestatic  #14                 // Method base64Decode:(Ljava/lang/String;)[B
       8: invokespecial #103                // Method java/io/ByteArrayInputStream."<init>":([B)V
      11: astore_1
      12: bipush        11
      14: newarray       byte
      16: astore_2
      17: aload_1
      18: aload_2
      19: invokevirtual #104                // Method java/io/ByteArrayInputStream.read:([B)I
      22: bipush        11
      24: if_icmpne     37
      27: getstatic     #90                 // Field PREFIX:[B
      30: aload_2
      31: invokestatic  #105                // Method java/util/Arrays.equals:([B[B)Z
      34: ifne          47
      37: new           #10                 // class java/lang/IllegalArgumentException
      40: dup
      41: ldc           #106                // String SSH key prefix not found
      43: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: new           #107                // class java/math/BigInteger
      50: dup
      51: aload_1
      52: invokestatic  #108                // Method readBigInteger:(Ljava/io/ByteArrayInputStream;)[B
      55: invokespecial #109                // Method java/math/BigInteger."<init>":([B)V
      58: astore_3
      59: new           #107                // class java/math/BigInteger
      62: dup
      63: aload_1
      64: invokestatic  #108                // Method readBigInteger:(Ljava/io/ByteArrayInputStream;)[B
      67: invokespecial #109                // Method java/math/BigInteger."<init>":([B)V
      70: astore        4
      72: aload         4
      74: aload_3
      75: invokestatic  #110                // Method createPublicKey:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/security/interfaces/RSAPublicKey;
      78: areturn
      79: astore_3
      80: new           #50                 // class java/lang/RuntimeException
      83: dup
      84: aload_3
      85: invokespecial #51                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      88: athrow
    Exception table:
       from    to  target type
          17    78    79   Class java/io/IOException

  static java.security.interfaces.RSAPublicKey createPublicKey(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: ldc           #15                 // String RSA
       2: invokestatic  #16                 // Method java/security/KeyFactory.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;
       5: new           #23                 // class java/security/spec/RSAPublicKeySpec
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #26                 // Method java/security/spec/RSAPublicKeySpec."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;)V
      14: invokevirtual #35                 // Method java/security/KeyFactory.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;
      17: checkcast     #83                 // class java/security/interfaces/RSAPublicKey
      20: areturn
      21: astore_2
      22: new           #50                 // class java/lang/RuntimeException
      25: dup
      26: aload_2
      27: invokespecial #51                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      30: athrow
    Exception table:
       from    to  target type
           0    20    21   Class java/lang/Exception

  private static void writeBigInteger(java.io.ByteArrayOutputStream, java.math.BigInteger) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #111                // Method java/math/BigInteger.toByteArray:()[B
       4: arraylength
       5: istore_2
       6: iconst_4
       7: newarray       byte
       9: astore_3
      10: aload_3
      11: iconst_0
      12: iload_2
      13: bipush        24
      15: ishr
      16: sipush        255
      19: iand
      20: i2b
      21: bastore
      22: aload_3
      23: iconst_1
      24: iload_2
      25: bipush        16
      27: ishr
      28: sipush        255
      31: iand
      32: i2b
      33: bastore
      34: aload_3
      35: iconst_2
      36: iload_2
      37: bipush        8
      39: ishr
      40: sipush        255
      43: iand
      44: i2b
      45: bastore
      46: aload_3
      47: iconst_3
      48: iload_2
      49: sipush        255
      52: iand
      53: i2b
      54: bastore
      55: aload_0
      56: aload_3
      57: invokevirtual #91                 // Method java/io/ByteArrayOutputStream.write:([B)V
      60: aload_0
      61: aload_1
      62: invokevirtual #111                // Method java/math/BigInteger.toByteArray:()[B
      65: invokevirtual #91                 // Method java/io/ByteArrayOutputStream.write:([B)V
      68: return

  private static byte[] readBigInteger(java.io.ByteArrayInputStream) throws java.io.IOException;
    Code:
       0: iconst_4
       1: newarray       byte
       3: astore_1
       4: aload_0
       5: aload_1
       6: invokevirtual #104                // Method java/io/ByteArrayInputStream.read:([B)I
       9: iconst_4
      10: if_icmpeq     23
      13: new           #95                 // class java/io/IOException
      16: dup
      17: ldc           #112                // String Expected length data as 4 bytes
      19: invokespecial #113                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_1
      24: iconst_0
      25: baload
      26: sipush        255
      29: iand
      30: bipush        24
      32: ishl
      33: aload_1
      34: iconst_1
      35: baload
      36: sipush        255
      39: iand
      40: bipush        16
      42: ishl
      43: ior
      44: aload_1
      45: iconst_2
      46: baload
      47: sipush        255
      50: iand
      51: bipush        8
      53: ishl
      54: ior
      55: aload_1
      56: iconst_3
      57: baload
      58: sipush        255
      61: iand
      62: ior
      63: istore_2
      64: iload_2
      65: newarray       byte
      67: astore_1
      68: aload_0
      69: aload_1
      70: invokevirtual #104                // Method java/io/ByteArrayInputStream.read:([B)I
      73: iload_2
      74: if_icmpeq     109
      77: new           #95                 // class java/io/IOException
      80: dup
      81: new           #44                 // class java/lang/StringBuilder
      84: dup
      85: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      88: ldc           #114                // String Expected
      90: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: iload_2
      94: invokevirtual #115                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      97: ldc           #116                // String  key bytes
      99: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: invokespecial #113                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     108: athrow
     109: aload_1
     110: areturn

  static {};
    Code:
       0: ldc           #117                // String UTF-8
       2: invokestatic  #118                // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       5: putstatic     #55                 // Field UTF8:Ljava/nio/charset/Charset;
       8: ldc           #119                // String -----BEGIN (.*)-----(.*)-----END (.*)-----
      10: bipush        32
      12: invokestatic  #121                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;
      15: putstatic     #2                  // Field PEM_DATA:Ljava/util/regex/Pattern;
      18: bipush        11
      20: newarray       byte
      22: dup
      23: iconst_0
      24: iconst_0
      25: bastore
      26: dup
      27: iconst_1
      28: iconst_0
      29: bastore
      30: dup
      31: iconst_2
      32: iconst_0
      33: bastore
      34: dup
      35: iconst_3
      36: bipush        7
      38: bastore
      39: dup
      40: iconst_4
      41: bipush        115
      43: bastore
      44: dup
      45: iconst_5
      46: bipush        115
      48: bastore
      49: dup
      50: bipush        6
      52: bipush        104
      54: bastore
      55: dup
      56: bipush        7
      58: bipush        45
      60: bastore
      61: dup
      62: bipush        8
      64: bipush        114
      66: bastore
      67: dup
      68: bipush        9
      70: bipush        115
      72: bastore
      73: dup
      74: bipush        10
      76: bipush        97
      78: bastore
      79: putstatic     #90                 // Field PREFIX:[B
      82: ldc           #122                // String ssh-(rsa|dsa) ([A-Za-z0-9/+]+=*) (.*)
      84: invokestatic  #123                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      87: putstatic     #72                 // Field SSH_PUB_KEY:Ljava/util/regex/Pattern;
      90: return
}
