Compiled from "RsaSecretEncryptor.java"
public class org.springframework.security.rsa.crypto.RsaSecretEncryptor implements org.springframework.security.crypto.encrypt.BytesEncryptor,org.springframework.security.crypto.encrypt.TextEncryptor,org.springframework.security.rsa.crypto.RsaKeyHolder {
  private static final java.lang.String DEFAULT_ENCODING;

  private static final java.lang.String DEFAULT_SALT;

  private java.lang.String salt;

  private org.springframework.security.rsa.crypto.RsaAlgorithm algorithm;

  private java.nio.charset.Charset charset;

  private java.security.PublicKey publicKey;

  private java.security.PrivateKey privateKey;

  private java.nio.charset.Charset defaultCharset;

  private boolean gcm;

  public org.springframework.security.rsa.crypto.RsaSecretEncryptor(org.springframework.security.rsa.crypto.RsaAlgorithm, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/springframework/security/rsa/crypto/RsaKeyHelper.generateKeyPair:()Ljava/security/KeyPair;
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokespecial #2                  // Method "<init>":(Ljava/security/KeyPair;Lorg/springframework/security/rsa/crypto/RsaAlgorithm;Ljava/lang/String;Z)V
      10: return

  public org.springframework.security.rsa.crypto.RsaSecretEncryptor(org.springframework.security.rsa.crypto.RsaAlgorithm, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/springframework/security/rsa/crypto/RsaKeyHelper.generateKeyPair:()Ljava/security/KeyPair;
       4: aload_1
       5: aload_2
       6: invokespecial #3                  // Method "<init>":(Ljava/security/KeyPair;Lorg/springframework/security/rsa/crypto/RsaAlgorithm;Ljava/lang/String;)V
       9: return

  public org.springframework.security.rsa.crypto.RsaSecretEncryptor(org.springframework.security.rsa.crypto.RsaAlgorithm, boolean);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/springframework/security/rsa/crypto/RsaKeyHelper.generateKeyPair:()Ljava/security/KeyPair;
       4: aload_1
       5: ldc           #5                  // String deadbeef
       7: iload_2
       8: invokespecial #2                  // Method "<init>":(Ljava/security/KeyPair;Lorg/springframework/security/rsa/crypto/RsaAlgorithm;Ljava/lang/String;Z)V
      11: return

  public org.springframework.security.rsa.crypto.RsaSecretEncryptor(org.springframework.security.rsa.crypto.RsaAlgorithm);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/springframework/security/rsa/crypto/RsaKeyHelper.generateKeyPair:()Ljava/security/KeyPair;
       4: aload_1
       5: invokespecial #6                  // Method "<init>":(Ljava/security/KeyPair;Lorg/springframework/security/rsa/crypto/RsaAlgorithm;)V
       8: return

  public org.springframework.security.rsa.crypto.RsaSecretEncryptor();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/springframework/security/rsa/crypto/RsaKeyHelper.generateKeyPair:()Ljava/security/KeyPair;
       4: invokespecial #7                  // Method "<init>":(Ljava/security/KeyPair;)V
       7: return

  public org.springframework.security.rsa.crypto.RsaSecretEncryptor(java.security.KeyPair, org.springframework.security.rsa.crypto.RsaAlgorithm, java.lang.String, boolean);
    Code:
       0: aload_0
       1: ldc           #8                  // String UTF-8
       3: aload_1
       4: invokevirtual #9                  // Method java/security/KeyPair.getPublic:()Ljava/security/PublicKey;
       7: aload_1
       8: invokevirtual #10                 // Method java/security/KeyPair.getPrivate:()Ljava/security/PrivateKey;
      11: aload_2
      12: aload_3
      13: iload         4
      15: invokespecial #11                 // Method "<init>":(Ljava/lang/String;Ljava/security/PublicKey;Ljava/security/PrivateKey;Lorg/springframework/security/rsa/crypto/RsaAlgorithm;Ljava/lang/String;Z)V
      18: return

  public org.springframework.security.rsa.crypto.RsaSecretEncryptor(java.security.KeyPair, org.springframework.security.rsa.crypto.RsaAlgorithm, java.lang.String);
    Code:
       0: aload_0
       1: ldc           #8                  // String UTF-8
       3: aload_1
       4: invokevirtual #9                  // Method java/security/KeyPair.getPublic:()Ljava/security/PublicKey;
       7: aload_1
       8: invokevirtual #10                 // Method java/security/KeyPair.getPrivate:()Ljava/security/PrivateKey;
      11: aload_2
      12: aload_3
      13: iconst_0
      14: invokespecial #11                 // Method "<init>":(Ljava/lang/String;Ljava/security/PublicKey;Ljava/security/PrivateKey;Lorg/springframework/security/rsa/crypto/RsaAlgorithm;Ljava/lang/String;Z)V
      17: return

  public org.springframework.security.rsa.crypto.RsaSecretEncryptor(java.security.KeyPair, org.springframework.security.rsa.crypto.RsaAlgorithm);
    Code:
       0: aload_0
       1: ldc           #8                  // String UTF-8
       3: aload_1
       4: invokevirtual #9                  // Method java/security/KeyPair.getPublic:()Ljava/security/PublicKey;
       7: aload_1
       8: invokevirtual #10                 // Method java/security/KeyPair.getPrivate:()Ljava/security/PrivateKey;
      11: aload_2
      12: invokespecial #12                 // Method "<init>":(Ljava/lang/String;Ljava/security/PublicKey;Ljava/security/PrivateKey;Lorg/springframework/security/rsa/crypto/RsaAlgorithm;)V
      15: return

  public org.springframework.security.rsa.crypto.RsaSecretEncryptor(java.security.KeyPair);
    Code:
       0: aload_0
       1: ldc           #8                  // String UTF-8
       3: aload_1
       4: invokevirtual #9                  // Method java/security/KeyPair.getPublic:()Ljava/security/PublicKey;
       7: aload_1
       8: invokevirtual #10                 // Method java/security/KeyPair.getPrivate:()Ljava/security/PrivateKey;
      11: invokespecial #13                 // Method "<init>":(Ljava/lang/String;Ljava/security/PublicKey;Ljava/security/PrivateKey;)V
      14: return

  public org.springframework.security.rsa.crypto.RsaSecretEncryptor(java.lang.String, org.springframework.security.rsa.crypto.RsaAlgorithm, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #14                 // Method org/springframework/security/rsa/crypto/RsaKeyHelper.parseKeyPair:(Ljava/lang/String;)Ljava/security/KeyPair;
       5: aload_2
       6: aload_3
       7: invokespecial #3                  // Method "<init>":(Ljava/security/KeyPair;Lorg/springframework/security/rsa/crypto/RsaAlgorithm;Ljava/lang/String;)V
      10: return

  public org.springframework.security.rsa.crypto.RsaSecretEncryptor(java.lang.String, org.springframework.security.rsa.crypto.RsaAlgorithm);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #14                 // Method org/springframework/security/rsa/crypto/RsaKeyHelper.parseKeyPair:(Ljava/lang/String;)Ljava/security/KeyPair;
       5: aload_2
       6: invokespecial #6                  // Method "<init>":(Ljava/security/KeyPair;Lorg/springframework/security/rsa/crypto/RsaAlgorithm;)V
       9: return

  public org.springframework.security.rsa.crypto.RsaSecretEncryptor(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #14                 // Method org/springframework/security/rsa/crypto/RsaKeyHelper.parseKeyPair:(Ljava/lang/String;)Ljava/security/KeyPair;
       5: invokespecial #7                  // Method "<init>":(Ljava/security/KeyPair;)V
       8: return

  public org.springframework.security.rsa.crypto.RsaSecretEncryptor(java.security.PublicKey, org.springframework.security.rsa.crypto.RsaAlgorithm, java.lang.String, boolean);
    Code:
       0: aload_0
       1: ldc           #8                  // String UTF-8
       3: aload_1
       4: aconst_null
       5: aload_2
       6: aload_3
       7: iload         4
       9: invokespecial #11                 // Method "<init>":(Ljava/lang/String;Ljava/security/PublicKey;Ljava/security/PrivateKey;Lorg/springframework/security/rsa/crypto/RsaAlgorithm;Ljava/lang/String;Z)V
      12: return

  public org.springframework.security.rsa.crypto.RsaSecretEncryptor(java.security.PublicKey, org.springframework.security.rsa.crypto.RsaAlgorithm, java.lang.String);
    Code:
       0: aload_0
       1: ldc           #8                  // String UTF-8
       3: aload_1
       4: aconst_null
       5: aload_2
       6: aload_3
       7: iconst_0
       8: invokespecial #11                 // Method "<init>":(Ljava/lang/String;Ljava/security/PublicKey;Ljava/security/PrivateKey;Lorg/springframework/security/rsa/crypto/RsaAlgorithm;Ljava/lang/String;Z)V
      11: return

  public org.springframework.security.rsa.crypto.RsaSecretEncryptor(java.security.PublicKey, org.springframework.security.rsa.crypto.RsaAlgorithm);
    Code:
       0: aload_0
       1: ldc           #8                  // String UTF-8
       3: aload_1
       4: aconst_null
       5: aload_2
       6: invokespecial #12                 // Method "<init>":(Ljava/lang/String;Ljava/security/PublicKey;Ljava/security/PrivateKey;Lorg/springframework/security/rsa/crypto/RsaAlgorithm;)V
       9: return

  public org.springframework.security.rsa.crypto.RsaSecretEncryptor(java.security.PublicKey);
    Code:
       0: aload_0
       1: ldc           #8                  // String UTF-8
       3: aload_1
       4: aconst_null
       5: invokespecial #13                 // Method "<init>":(Ljava/lang/String;Ljava/security/PublicKey;Ljava/security/PrivateKey;)V
       8: return

  public org.springframework.security.rsa.crypto.RsaSecretEncryptor(java.lang.String, java.security.PublicKey, java.security.PrivateKey);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: getstatic     #15                 // Field org/springframework/security/rsa/crypto/RsaAlgorithm.DEFAULT:Lorg/springframework/security/rsa/crypto/RsaAlgorithm;
       7: invokespecial #12                 // Method "<init>":(Ljava/lang/String;Ljava/security/PublicKey;Ljava/security/PrivateKey;Lorg/springframework/security/rsa/crypto/RsaAlgorithm;)V
      10: return

  public org.springframework.security.rsa.crypto.RsaSecretEncryptor(java.lang.String, java.security.PublicKey, java.security.PrivateKey, org.springframework.security.rsa.crypto.RsaAlgorithm);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: ldc           #5                  // String deadbeef
       8: iconst_0
       9: invokespecial #11                 // Method "<init>":(Ljava/lang/String;Ljava/security/PublicKey;Ljava/security/PrivateKey;Lorg/springframework/security/rsa/crypto/RsaAlgorithm;Ljava/lang/String;Z)V
      12: return

  public org.springframework.security.rsa.crypto.RsaSecretEncryptor(java.lang.String, java.security.PublicKey, java.security.PrivateKey, org.springframework.security.rsa.crypto.RsaAlgorithm, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #15                 // Field org/springframework/security/rsa/crypto/RsaAlgorithm.DEFAULT:Lorg/springframework/security/rsa/crypto/RsaAlgorithm;
       8: putfield      #17                 // Field algorithm:Lorg/springframework/security/rsa/crypto/RsaAlgorithm;
      11: aload_0
      12: aload_1
      13: invokestatic  #18                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      16: putfield      #19                 // Field charset:Ljava/nio/charset/Charset;
      19: aload_0
      20: aload_2
      21: putfield      #20                 // Field publicKey:Ljava/security/PublicKey;
      24: aload_0
      25: aload_3
      26: putfield      #21                 // Field privateKey:Ljava/security/PrivateKey;
      29: aload_0
      30: ldc           #8                  // String UTF-8
      32: invokestatic  #18                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      35: putfield      #22                 // Field defaultCharset:Ljava/nio/charset/Charset;
      38: aload_0
      39: aload         4
      41: putfield      #17                 // Field algorithm:Lorg/springframework/security/rsa/crypto/RsaAlgorithm;
      44: aload_0
      45: aload         5
      47: invokestatic  #23                 // Method isHex:(Ljava/lang/String;)Z
      50: ifeq          58
      53: aload         5
      55: goto          77
      58: new           #24                 // class java/lang/String
      61: dup
      62: aload         5
      64: aload_0
      65: getfield      #22                 // Field defaultCharset:Ljava/nio/charset/Charset;
      68: invokevirtual #25                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      71: invokestatic  #26                 // Method org/springframework/security/crypto/codec/Hex.encode:([B)[C
      74: invokespecial #27                 // Method java/lang/String."<init>":([C)V
      77: putfield      #28                 // Field salt:Ljava/lang/String;
      80: aload_0
      81: iload         6
      83: putfield      #29                 // Field gcm:Z
      86: return

  public java.lang.String getPublicKey();
    Code:
       0: aload_0
       1: getfield      #20                 // Field publicKey:Ljava/security/PublicKey;
       4: checkcast     #30                 // class java/security/interfaces/RSAPublicKey
       7: ldc           #31                 // String application
       9: invokestatic  #32                 // Method org/springframework/security/rsa/crypto/RsaKeyHelper.encodePublicKey:(Ljava/security/interfaces/RSAPublicKey;Ljava/lang/String;)Ljava/lang/String;
      12: areturn

  public java.lang.String encrypt(java.lang.String);
    Code:
       0: new           #24                 // class java/lang/String
       3: dup
       4: aload_0
       5: aload_1
       6: aload_0
       7: getfield      #19                 // Field charset:Ljava/nio/charset/Charset;
      10: invokevirtual #25                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      13: invokevirtual #33                 // Method encrypt:([B)[B
      16: invokestatic  #34                 // Method org/springframework/util/Base64Utils.encode:([B)[B
      19: aload_0
      20: getfield      #22                 // Field defaultCharset:Ljava/nio/charset/Charset;
      23: invokespecial #35                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      26: areturn

  public java.lang.String decrypt(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #21                 // Field privateKey:Ljava/security/PrivateKey;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #36                 // String Private key must be provided for decryption
      14: invokestatic  #37                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: new           #24                 // class java/lang/String
      20: dup
      21: aload_0
      22: aload_1
      23: aload_0
      24: getfield      #22                 // Field defaultCharset:Ljava/nio/charset/Charset;
      27: invokevirtual #25                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      30: invokestatic  #38                 // Method org/springframework/util/Base64Utils.decode:([B)[B
      33: invokevirtual #39                 // Method decrypt:([B)[B
      36: aload_0
      37: getfield      #19                 // Field charset:Ljava/nio/charset/Charset;
      40: invokespecial #35                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      43: areturn

  public byte[] encrypt(byte[]);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #20                 // Field publicKey:Ljava/security/PublicKey;
       5: aload_0
       6: getfield      #17                 // Field algorithm:Lorg/springframework/security/rsa/crypto/RsaAlgorithm;
       9: aload_0
      10: getfield      #28                 // Field salt:Ljava/lang/String;
      13: aload_0
      14: getfield      #29                 // Field gcm:Z
      17: invokestatic  #40                 // Method encrypt:([BLjava/security/PublicKey;Lorg/springframework/security/rsa/crypto/RsaAlgorithm;Ljava/lang/String;Z)[B
      20: areturn

  public byte[] decrypt(byte[]);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #21                 // Field privateKey:Ljava/security/PrivateKey;
       5: aload_0
       6: getfield      #17                 // Field algorithm:Lorg/springframework/security/rsa/crypto/RsaAlgorithm;
       9: aload_0
      10: getfield      #28                 // Field salt:Ljava/lang/String;
      13: aload_0
      14: getfield      #29                 // Field gcm:Z
      17: invokestatic  #41                 // Method decrypt:([BLjava/security/PrivateKey;Lorg/springframework/security/rsa/crypto/RsaAlgorithm;Ljava/lang/String;Z)[B
      20: areturn

  private static byte[] encrypt(byte[], java.security.PublicKey, org.springframework.security.rsa.crypto.RsaAlgorithm, java.lang.String, boolean);
    Code:
       0: bipush        16
       2: invokestatic  #42                 // Method org/springframework/security/crypto/keygen/KeyGenerators.secureRandom:(I)Lorg/springframework/security/crypto/keygen/BytesKeyGenerator;
       5: invokeinterface #43,  1           // InterfaceMethod org/springframework/security/crypto/keygen/BytesKeyGenerator.generateKey:()[B
      10: astore        5
      12: iload         4
      14: ifeq          36
      17: new           #24                 // class java/lang/String
      20: dup
      21: aload         5
      23: invokestatic  #26                 // Method org/springframework/security/crypto/codec/Hex.encode:([B)[C
      26: invokespecial #27                 // Method java/lang/String."<init>":([C)V
      29: aload_3
      30: invokestatic  #44                 // Method org/springframework/security/crypto/encrypt/Encryptors.stronger:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lorg/springframework/security/crypto/encrypt/BytesEncryptor;
      33: goto          52
      36: new           #24                 // class java/lang/String
      39: dup
      40: aload         5
      42: invokestatic  #26                 // Method org/springframework/security/crypto/codec/Hex.encode:([B)[C
      45: invokespecial #27                 // Method java/lang/String."<init>":([C)V
      48: aload_3
      49: invokestatic  #45                 // Method org/springframework/security/crypto/encrypt/Encryptors.standard:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lorg/springframework/security/crypto/encrypt/BytesEncryptor;
      52: astore        6
      54: aload_2
      55: invokevirtual #46                 // Method org/springframework/security/rsa/crypto/RsaAlgorithm.getJceName:()Ljava/lang/String;
      58: invokestatic  #47                 // Method javax/crypto/Cipher.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;
      61: astore        7
      63: aload         7
      65: iconst_1
      66: aload_1
      67: invokevirtual #49                 // Method javax/crypto/Cipher.init:(ILjava/security/Key;)V
      70: aload         7
      72: aload         5
      74: invokevirtual #50                 // Method javax/crypto/Cipher.doFinal:([B)[B
      77: astore        8
      79: new           #51                 // class java/io/ByteArrayOutputStream
      82: dup
      83: aload_0
      84: arraylength
      85: bipush        20
      87: iadd
      88: invokespecial #52                 // Method java/io/ByteArrayOutputStream."<init>":(I)V
      91: astore        9
      93: aload         9
      95: aload         8
      97: arraylength
      98: invokestatic  #53                 // Method writeInt:(Ljava/io/ByteArrayOutputStream;I)V
     101: aload         9
     103: aload         8
     105: invokevirtual #54                 // Method java/io/ByteArrayOutputStream.write:([B)V
     108: aload         9
     110: aload         6
     112: aload_0
     113: invokeinterface #55,  2           // InterfaceMethod org/springframework/security/crypto/encrypt/BytesEncryptor.encrypt:([B)[B
     118: invokevirtual #54                 // Method java/io/ByteArrayOutputStream.write:([B)V
     121: aload         9
     123: invokevirtual #56                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     126: areturn
     127: astore        7
     129: aload         7
     131: athrow
     132: astore        7
     134: new           #59                 // class java/lang/IllegalStateException
     137: dup
     138: ldc           #60                 // String Cannot encrypt
     140: aload         7
     142: invokespecial #61                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     145: athrow
    Exception table:
       from    to  target type
          54   126   127   Class java/lang/RuntimeException
          54   126   132   Class java/lang/Exception

  private static void writeInt(java.io.ByteArrayOutputStream, int) throws java.io.IOException;
    Code:
       0: iconst_2
       1: newarray       byte
       3: astore_2
       4: aload_2
       5: iconst_0
       6: iload_1
       7: bipush        8
       9: ishr
      10: sipush        255
      13: iand
      14: i2b
      15: bastore
      16: aload_2
      17: iconst_1
      18: iload_1
      19: sipush        255
      22: iand
      23: i2b
      24: bastore
      25: aload_0
      26: aload_2
      27: invokevirtual #54                 // Method java/io/ByteArrayOutputStream.write:([B)V
      30: return

  private static int readInt(java.io.ByteArrayInputStream) throws java.io.IOException;
    Code:
       0: iconst_2
       1: newarray       byte
       3: astore_1
       4: aload_0
       5: aload_1
       6: invokevirtual #62                 // Method java/io/ByteArrayInputStream.read:([B)I
       9: pop
      10: aload_1
      11: iconst_0
      12: baload
      13: sipush        255
      16: iand
      17: bipush        8
      19: ishl
      20: aload_1
      21: iconst_1
      22: baload
      23: sipush        255
      26: iand
      27: ior
      28: ireturn

  private static byte[] decrypt(byte[], java.security.PrivateKey, org.springframework.security.rsa.crypto.RsaAlgorithm, java.lang.String, boolean);
    Code:
       0: new           #63                 // class java/io/ByteArrayInputStream
       3: dup
       4: aload_0
       5: invokespecial #64                 // Method java/io/ByteArrayInputStream."<init>":([B)V
       8: astore        5
      10: new           #51                 // class java/io/ByteArrayOutputStream
      13: dup
      14: aload_0
      15: arraylength
      16: invokespecial #52                 // Method java/io/ByteArrayOutputStream."<init>":(I)V
      19: astore        6
      21: aload         5
      23: invokestatic  #65                 // Method readInt:(Ljava/io/ByteArrayInputStream;)I
      26: istore        7
      28: iload         7
      30: newarray       byte
      32: astore        8
      34: aload         5
      36: aload         8
      38: invokevirtual #62                 // Method java/io/ByteArrayInputStream.read:([B)I
      41: pop
      42: aload_2
      43: invokevirtual #46                 // Method org/springframework/security/rsa/crypto/RsaAlgorithm.getJceName:()Ljava/lang/String;
      46: invokestatic  #47                 // Method javax/crypto/Cipher.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;
      49: astore        9
      51: aload         9
      53: iconst_2
      54: aload_1
      55: invokevirtual #49                 // Method javax/crypto/Cipher.init:(ILjava/security/Key;)V
      58: new           #24                 // class java/lang/String
      61: dup
      62: aload         9
      64: aload         8
      66: invokevirtual #50                 // Method javax/crypto/Cipher.doFinal:([B)[B
      69: invokestatic  #26                 // Method org/springframework/security/crypto/codec/Hex.encode:([B)[C
      72: invokespecial #27                 // Method java/lang/String."<init>":([C)V
      75: astore        10
      77: aload_0
      78: arraylength
      79: aload         8
      81: arraylength
      82: isub
      83: iconst_2
      84: isub
      85: newarray       byte
      87: astore        11
      89: aload         5
      91: aload         11
      93: invokevirtual #62                 // Method java/io/ByteArrayInputStream.read:([B)I
      96: pop
      97: iload         4
      99: ifeq          111
     102: aload         10
     104: aload_3
     105: invokestatic  #44                 // Method org/springframework/security/crypto/encrypt/Encryptors.stronger:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lorg/springframework/security/crypto/encrypt/BytesEncryptor;
     108: goto          117
     111: aload         10
     113: aload_3
     114: invokestatic  #45                 // Method org/springframework/security/crypto/encrypt/Encryptors.standard:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lorg/springframework/security/crypto/encrypt/BytesEncryptor;
     117: astore        12
     119: aload         6
     121: aload         12
     123: aload         11
     125: invokeinterface #66,  2           // InterfaceMethod org/springframework/security/crypto/encrypt/BytesEncryptor.decrypt:([B)[B
     130: invokevirtual #54                 // Method java/io/ByteArrayOutputStream.write:([B)V
     133: aload         6
     135: invokevirtual #56                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     138: areturn
     139: astore        7
     141: aload         7
     143: athrow
     144: astore        7
     146: new           #59                 // class java/lang/IllegalStateException
     149: dup
     150: ldc           #67                 // String Cannot decrypt
     152: aload         7
     154: invokespecial #61                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     157: athrow
    Exception table:
       from    to  target type
          21   138   139   Class java/lang/RuntimeException
          21   138   144   Class java/lang/Exception

  private static boolean isHex(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #68                 // Method org/springframework/security/crypto/codec/Hex.decode:(Ljava/lang/CharSequence;)[B
       4: pop
       5: iconst_1
       6: ireturn
       7: astore_1
       8: iconst_0
       9: ireturn
    Exception table:
       from    to  target type
           0     6     7   Class java/lang/Exception
}
