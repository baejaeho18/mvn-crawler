Compiled from "ConsensusBased.java"
public class org.springframework.security.access.vote.ConsensusBased extends org.springframework.security.access.vote.AbstractAccessDecisionManager {
  private boolean allowIfEqualGrantedDeniedDecisions;

  public org.springframework.security.access.vote.ConsensusBased(java.util.List<org.springframework.security.access.AccessDecisionVoter<? extends java.lang.Object>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/security/access/vote/AbstractAccessDecisionManager."<init>":(Ljava/util/List;)V
       5: aload_0
       6: iconst_1
       7: putfield      #2                  // Field allowIfEqualGrantedDeniedDecisions:Z
      10: return

  public void decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection<org.springframework.security.access.ConfigAttribute>) throws org.springframework.security.access.AccessDeniedException;
    Code:
       0: iconst_0
       1: istore        4
       3: iconst_0
       4: istore        5
       6: iconst_0
       7: istore        6
       9: aload_0
      10: invokevirtual #3                  // Method getDecisionVoters:()Ljava/util/List;
      13: invokeinterface #4,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore        7
      20: aload         7
      22: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          150
      30: aload         7
      32: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #7                  // class org/springframework/security/access/AccessDecisionVoter
      40: astore        8
      42: aload         8
      44: aload_1
      45: aload_2
      46: aload_3
      47: invokeinterface #8,  4            // InterfaceMethod org/springframework/security/access/AccessDecisionVoter.vote:(Lorg/springframework/security/core/Authentication;Ljava/lang/Object;Ljava/util/Collection;)I
      52: istore        9
      54: aload_0
      55: getfield      #9                  // Field logger:Lorg/apache/commons/logging/Log;
      58: invokeinterface #10,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      63: ifeq          105
      66: aload_0
      67: getfield      #9                  // Field logger:Lorg/apache/commons/logging/Log;
      70: new           #11                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      77: ldc           #13                 // String Voter:
      79: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload         8
      84: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      87: ldc           #16                 // String , returned:
      89: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: iload         9
      94: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      97: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokeinterface #19,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     105: iload         9
     107: lookupswitch  { // 2
                    -1: 138
                     1: 132
               default: 144
          }
     132: iinc          4, 1
     135: goto          147
     138: iinc          5, 1
     141: goto          147
     144: iinc          6, 1
     147: goto          20
     150: iload         4
     152: iload         5
     154: if_icmple     158
     157: return
     158: iload         5
     160: iload         4
     162: if_icmple     184
     165: new           #20                 // class org/springframework/security/access/AccessDeniedException
     168: dup
     169: aload_0
     170: getfield      #21                 // Field messages:Lorg/springframework/context/support/MessageSourceAccessor;
     173: ldc           #22                 // String AbstractAccessDecisionManager.accessDenied
     175: ldc           #23                 // String Access is denied
     177: invokevirtual #24                 // Method org/springframework/context/support/MessageSourceAccessor.getMessage:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     180: invokespecial #25                 // Method org/springframework/security/access/AccessDeniedException."<init>":(Ljava/lang/String;)V
     183: athrow
     184: iload         4
     186: iload         5
     188: if_icmpne     223
     191: iload         4
     193: ifeq          223
     196: aload_0
     197: getfield      #2                  // Field allowIfEqualGrantedDeniedDecisions:Z
     200: ifeq          204
     203: return
     204: new           #20                 // class org/springframework/security/access/AccessDeniedException
     207: dup
     208: aload_0
     209: getfield      #21                 // Field messages:Lorg/springframework/context/support/MessageSourceAccessor;
     212: ldc           #22                 // String AbstractAccessDecisionManager.accessDenied
     214: ldc           #23                 // String Access is denied
     216: invokevirtual #24                 // Method org/springframework/context/support/MessageSourceAccessor.getMessage:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     219: invokespecial #25                 // Method org/springframework/security/access/AccessDeniedException."<init>":(Ljava/lang/String;)V
     222: athrow
     223: aload_0
     224: invokevirtual #26                 // Method checkAllowIfAllAbstainDecisions:()V
     227: return

  public boolean isAllowIfEqualGrantedDeniedDecisions();
    Code:
       0: aload_0
       1: getfield      #2                  // Field allowIfEqualGrantedDeniedDecisions:Z
       4: ireturn

  public void setAllowIfEqualGrantedDeniedDecisions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field allowIfEqualGrantedDeniedDecisions:Z
       5: return
}
