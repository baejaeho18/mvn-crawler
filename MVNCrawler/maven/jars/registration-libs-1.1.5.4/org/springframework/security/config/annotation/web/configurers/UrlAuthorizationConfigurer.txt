Compiled from "UrlAuthorizationConfigurer.java"
public final class org.springframework.security.config.annotation.web.configurers.UrlAuthorizationConfigurer<H extends org.springframework.security.config.annotation.web.HttpSecurityBuilder<H>> extends org.springframework.security.config.annotation.web.configurers.AbstractInterceptUrlConfigurer<org.springframework.security.config.annotation.web.configurers.UrlAuthorizationConfigurer<H>, H> {
  private final org.springframework.security.config.annotation.web.configurers.UrlAuthorizationConfigurer<H>.StandardInterceptUrlRegistry REGISTRY;

  public org.springframework.security.config.annotation.web.configurers.UrlAuthorizationConfigurer(org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/springframework/security/config/annotation/web/configurers/AbstractInterceptUrlConfigurer."<init>":()V
       4: aload_0
       5: new           #7                  // class org/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$StandardInterceptUrlRegistry
       8: dup
       9: aload_0
      10: aload_1
      11: aconst_null
      12: invokespecial #8                  // Method org/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$StandardInterceptUrlRegistry."<init>":(Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer;Lorg/springframework/context/ApplicationContext;Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$1;)V
      15: putfield      #1                  // Field REGISTRY:Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$StandardInterceptUrlRegistry;
      18: return

  public org.springframework.security.config.annotation.web.configurers.UrlAuthorizationConfigurer<H>.StandardInterceptUrlRegistry getRegistry();
    Code:
       0: aload_0
       1: getfield      #1                  // Field REGISTRY:Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$StandardInterceptUrlRegistry;
       4: areturn

  public org.springframework.security.config.annotation.web.configurers.UrlAuthorizationConfigurer<H> withObjectPostProcessor(org.springframework.security.config.annotation.ObjectPostProcessor<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method addObjectPostProcessor:(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)V
       5: aload_0
       6: areturn

  final java.util.List<org.springframework.security.access.AccessDecisionVoter<? extends java.lang.Object>> getDecisionVoters(H);
    Code:
       0: new           #10                 // class java/util/ArrayList
       3: dup
       4: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_2
       9: new           #12                 // class org/springframework/security/access/vote/RoleVoter
      12: dup
      13: invokespecial #13                 // Method org/springframework/security/access/vote/RoleVoter."<init>":()V
      16: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_2
      23: new           #15                 // class org/springframework/security/access/vote/AuthenticatedVoter
      26: dup
      27: invokespecial #16                 // Method org/springframework/security/access/vote/AuthenticatedVoter."<init>":()V
      30: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      35: pop
      36: aload_2
      37: areturn

  org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource createMetadataSource(H);
    Code:
       0: new           #17                 // class org/springframework/security/web/access/intercept/DefaultFilterInvocationSecurityMetadataSource
       3: dup
       4: aload_0
       5: getfield      #1                  // Field REGISTRY:Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$StandardInterceptUrlRegistry;
       8: invokevirtual #18                 // Method org/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$StandardInterceptUrlRegistry.createRequestMap:()Ljava/util/LinkedHashMap;
      11: invokespecial #19                 // Method org/springframework/security/web/access/intercept/DefaultFilterInvocationSecurityMetadataSource."<init>":(Ljava/util/LinkedHashMap;)V
      14: areturn

  private org.springframework.security.config.annotation.web.configurers.UrlAuthorizationConfigurer<H>.StandardInterceptUrlRegistry addMapping(java.lang.Iterable<? extends org.springframework.security.web.util.matcher.RequestMatcher>, java.util.Collection<org.springframework.security.access.ConfigAttribute>);
    Code:
       0: aload_1
       1: invokeinterface #20,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          47
      16: aload_3
      17: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #23                 // class org/springframework/security/web/util/matcher/RequestMatcher
      25: astore        4
      27: aload_0
      28: getfield      #1                  // Field REGISTRY:Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$StandardInterceptUrlRegistry;
      31: new           #24                 // class org/springframework/security/config/annotation/web/configurers/AbstractConfigAttributeRequestMatcherRegistry$UrlMapping
      34: dup
      35: aload         4
      37: aload_2
      38: invokespecial #25                 // Method org/springframework/security/config/annotation/web/configurers/AbstractConfigAttributeRequestMatcherRegistry$UrlMapping."<init>":(Lorg/springframework/security/web/util/matcher/RequestMatcher;Ljava/util/Collection;)V
      41: invokevirtual #26                 // Method org/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$StandardInterceptUrlRegistry.addMapping:(Lorg/springframework/security/config/annotation/web/configurers/AbstractConfigAttributeRequestMatcherRegistry$UrlMapping;)V
      44: goto          7
      47: aload_0
      48: getfield      #1                  // Field REGISTRY:Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$StandardInterceptUrlRegistry;
      51: areturn

  private static java.lang.String hasRole(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #27                 // String ROLE_
       3: invokevirtual #28                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: new           #29                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      21: aload_0
      22: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #32                 // String  should not start with ROLE_ since ROLE_ is automatically prepended when using hasRole. Consider using hasAuthority or access instead.
      27: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokestatic  #34                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      36: new           #29                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #27                 // String ROLE_
      45: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: areturn

  private static java.lang.String[] hasAnyRole(java.lang.String...);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: arraylength
       5: if_icmpge     38
       8: aload_0
       9: iload_1
      10: new           #29                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #27                 // String ROLE_
      19: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: iload_1
      24: aaload
      25: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: aastore
      32: iinc          1, 1
      35: goto          2
      38: aload_0
      39: areturn

  private static java.lang.String[] hasAnyAuthority(java.lang.String...);
    Code:
       0: aload_0
       1: areturn

  public void configure(org.springframework.security.config.annotation.web.HttpSecurityBuilder) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #35                 // Method org/springframework/security/config/annotation/web/configurers/AbstractInterceptUrlConfigurer.configure:(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
       5: return

  public org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer withObjectPostProcessor(org.springframework.security.config.annotation.ObjectPostProcessor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method withObjectPostProcessor:(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer;
       5: areturn

  static java.lang.String access$300(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method hasRole:(Ljava/lang/String;)Ljava/lang/String;
       4: areturn

  static java.lang.String[] access$400(java.lang.String[]);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method hasAnyRole:([Ljava/lang/String;)[Ljava/lang/String;
       4: areturn

  static java.lang.String[] access$500(java.lang.String[]);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method hasAnyAuthority:([Ljava/lang/String;)[Ljava/lang/String;
       4: areturn

  static org.springframework.security.config.annotation.web.configurers.UrlAuthorizationConfigurer$StandardInterceptUrlRegistry access$600(org.springframework.security.config.annotation.web.configurers.UrlAuthorizationConfigurer, java.lang.Iterable, java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method addMapping:(Ljava/lang/Iterable;Ljava/util/Collection;)Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$StandardInterceptUrlRegistry;
       6: areturn

  static org.springframework.security.config.annotation.web.configurers.UrlAuthorizationConfigurer$StandardInterceptUrlRegistry access$700(org.springframework.security.config.annotation.web.configurers.UrlAuthorizationConfigurer);
    Code:
       0: aload_0
       1: getfield      #1                  // Field REGISTRY:Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$StandardInterceptUrlRegistry;
       4: areturn
}
