Compiled from "ChannelSecurityConfigurer.java"
public class org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer$RequiresChannelUrl {
  protected java.util.List<? extends org.springframework.security.web.util.matcher.RequestMatcher> requestMatchers;

  final org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer this$0;

  private org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer$RequiresChannelUrl(java.util.List<? extends org.springframework.security.web.util.matcher.RequestMatcher>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field requestMatchers:Ljava/util/List;
      14: return

  public org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer<H>.ChannelRequestMatcherRegistry requiresSecure();
    Code:
       0: aload_0
       1: ldc           #5                  // String REQUIRES_SECURE_CHANNEL
       3: invokevirtual #6                  // Method requires:(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer$ChannelRequestMatcherRegistry;
       6: areturn

  public org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer<H>.ChannelRequestMatcherRegistry requiresInsecure();
    Code:
       0: aload_0
       1: ldc           #7                  // String REQUIRES_INSECURE_CHANNEL
       3: invokevirtual #6                  // Method requires:(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer$ChannelRequestMatcherRegistry;
       6: areturn

  public org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer<H>.ChannelRequestMatcherRegistry requires(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer;
       4: aload_1
       5: aload_0
       6: getfield      #4                  // Field requestMatchers:Ljava/util/List;
       9: invokestatic  #8                  // Method org/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer.access$400:(Lorg/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer;Ljava/lang/String;Ljava/util/List;)Lorg/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer$ChannelRequestMatcherRegistry;
      12: areturn

  org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer$RequiresChannelUrl(org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer, java.util.List, org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method "<init>":(Lorg/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer;Ljava/util/List;)V
       6: return
}
