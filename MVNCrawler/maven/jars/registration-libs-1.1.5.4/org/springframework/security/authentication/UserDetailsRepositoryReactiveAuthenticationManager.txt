Compiled from "UserDetailsRepositoryReactiveAuthenticationManager.java"
public class org.springframework.security.authentication.UserDetailsRepositoryReactiveAuthenticationManager implements org.springframework.security.authentication.ReactiveAuthenticationManager {
  private final org.springframework.security.core.userdetails.ReactiveUserDetailsService userDetailsService;

  private org.springframework.security.crypto.password.PasswordEncoder passwordEncoder;

  public org.springframework.security.authentication.UserDetailsRepositoryReactiveAuthenticationManager(org.springframework.security.core.userdetails.ReactiveUserDetailsService);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/springframework/security/crypto/factory/PasswordEncoderFactories.createDelegatingPasswordEncoder:()Lorg/springframework/security/crypto/password/PasswordEncoder;
       8: putfield      #3                  // Field passwordEncoder:Lorg/springframework/security/crypto/password/PasswordEncoder;
      11: aload_1
      12: ldc           #4                  // String userDetailsService cannot be null
      14: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      17: aload_0
      18: aload_1
      19: putfield      #6                  // Field userDetailsService:Lorg/springframework/security/core/userdetails/ReactiveUserDetailsService;
      22: return

  public reactor.core.publisher.Mono<org.springframework.security.core.Authentication> authenticate(org.springframework.security.core.Authentication);
    Code:
       0: aload_1
       1: invokeinterface #7,  1            // InterfaceMethod org/springframework/security/core/Authentication.getName:()Ljava/lang/String;
       6: astore_2
       7: aload_0
       8: getfield      #6                  // Field userDetailsService:Lorg/springframework/security/core/userdetails/ReactiveUserDetailsService;
      11: aload_2
      12: invokeinterface #8,  2            // InterfaceMethod org/springframework/security/core/userdetails/ReactiveUserDetailsService.findByUsername:(Ljava/lang/String;)Lreactor/core/publisher/Mono;
      17: invokestatic  #9                  // Method reactor/core/scheduler/Schedulers.parallel:()Lreactor/core/scheduler/Scheduler;
      20: invokevirtual #10                 // Method reactor/core/publisher/Mono.publishOn:(Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;
      23: aload_0
      24: aload_1
      25: invokedynamic #11,  0             // InvokeDynamic #0:test:(Lorg/springframework/security/authentication/UserDetailsRepositoryReactiveAuthenticationManager;Lorg/springframework/security/core/Authentication;)Ljava/util/function/Predicate;
      30: invokevirtual #12                 // Method reactor/core/publisher/Mono.filter:(Ljava/util/function/Predicate;)Lreactor/core/publisher/Mono;
      33: invokedynamic #13,  0             // InvokeDynamic #1:get:()Ljava/util/function/Supplier;
      38: invokestatic  #14                 // Method reactor/core/publisher/Mono.defer:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      41: invokevirtual #15                 // Method reactor/core/publisher/Mono.switchIfEmpty:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      44: invokedynamic #16,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      49: invokevirtual #17                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      52: areturn

  public void setPasswordEncoder(org.springframework.security.crypto.password.PasswordEncoder);
    Code:
       0: aload_1
       1: ldc           #18                 // String passwordEncoder cannot be null
       3: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #3                  // Field passwordEncoder:Lorg/springframework/security/crypto/password/PasswordEncoder;
      11: return

  private static org.springframework.security.core.Authentication lambda$authenticate$2(org.springframework.security.core.userdetails.UserDetails);
    Code:
       0: new           #19                 // class org/springframework/security/authentication/UsernamePasswordAuthenticationToken
       3: dup
       4: aload_0
       5: aload_0
       6: invokeinterface #20,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.getPassword:()Ljava/lang/String;
      11: aload_0
      12: invokeinterface #21,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.getAuthorities:()Ljava/util/Collection;
      17: invokespecial #22                 // Method org/springframework/security/authentication/UsernamePasswordAuthenticationToken."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Collection;)V
      20: areturn

  private static reactor.core.publisher.Mono lambda$authenticate$1();
    Code:
       0: new           #23                 // class org/springframework/security/authentication/BadCredentialsException
       3: dup
       4: ldc           #24                 // String Invalid Credentials
       6: invokespecial #25                 // Method org/springframework/security/authentication/BadCredentialsException."<init>":(Ljava/lang/String;)V
       9: invokestatic  #26                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      12: areturn

  private boolean lambda$authenticate$0(org.springframework.security.core.Authentication, org.springframework.security.core.userdetails.UserDetails);
    Code:
       0: aload_0
       1: getfield      #3                  // Field passwordEncoder:Lorg/springframework/security/crypto/password/PasswordEncoder;
       4: aload_1
       5: invokeinterface #27,  1           // InterfaceMethod org/springframework/security/core/Authentication.getCredentials:()Ljava/lang/Object;
      10: checkcast     #28                 // class java/lang/String
      13: aload_2
      14: invokeinterface #20,  1           // InterfaceMethod org/springframework/security/core/userdetails/UserDetails.getPassword:()Ljava/lang/String;
      19: invokeinterface #29,  3           // InterfaceMethod org/springframework/security/crypto/password/PasswordEncoder.matches:(Ljava/lang/CharSequence;Ljava/lang/String;)Z
      24: ireturn
}
