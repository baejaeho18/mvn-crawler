Compiled from "AndServerWebExchangeMatcher.java"
public class org.springframework.security.web.server.util.matcher.AndServerWebExchangeMatcher implements org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher {
  private final java.util.List<org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher> matchers;

  public org.springframework.security.web.server.util.matcher.AndServerWebExchangeMatcher(java.util.List<org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String matchers cannot be empty
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field matchers:Ljava/util/List;
      15: return

  public org.springframework.security.web.server.util.matcher.AndServerWebExchangeMatcher(org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: invokespecial #6                  // Method "<init>":(Ljava/util/List;)V
       8: return

  public reactor.core.publisher.Mono<org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher$MatchResult> matches(org.springframework.web.server.ServerWebExchange);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #7,  0              // InvokeDynamic #0:get:(Lorg/springframework/security/web/server/util/matcher/AndServerWebExchangeMatcher;Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/function/Supplier;
       7: invokestatic  #8                  // Method reactor/core/publisher/Mono.defer:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      10: areturn

  public java.lang.String toString();
    Code:
       0: new           #9                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #11                 // String AndServerWebExchangeMatcher{matchers=
       9: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #4                  // Field matchers:Ljava/util/List;
      16: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: bipush        125
      21: invokevirtual #14                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  private reactor.core.publisher.Mono lambda$matches$3(org.springframework.web.server.ServerWebExchange);
    Code:
       0: new           #16                 // class java/util/HashMap
       3: dup
       4: invokespecial #17                 // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #4                  // Field matchers:Ljava/util/List;
      12: invokestatic  #18                 // Method reactor/core/publisher/Flux.fromIterable:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
      15: aload_1
      16: invokedynamic #19,  0             // InvokeDynamic #1:apply:(Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/function/Function;
      21: invokevirtual #20                 // Method reactor/core/publisher/Flux.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      24: aload_2
      25: invokedynamic #21,  0             // InvokeDynamic #2:accept:(Ljava/util/Map;)Ljava/util/function/Consumer;
      30: invokevirtual #22                 // Method reactor/core/publisher/Flux.doOnNext:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
      33: invokedynamic #23,  0             // InvokeDynamic #3:test:()Ljava/util/function/Predicate;
      38: invokevirtual #24                 // Method reactor/core/publisher/Flux.all:(Ljava/util/function/Predicate;)Lreactor/core/publisher/Mono;
      41: aload_2
      42: invokedynamic #25,  0             // InvokeDynamic #4:apply:(Ljava/util/Map;)Ljava/util/function/Function;
      47: invokevirtual #26                 // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      50: areturn

  private static reactor.core.publisher.Mono lambda$null$2(java.util.Map, java.lang.Boolean);
    Code:
       0: aload_1
       1: invokevirtual #27                 // Method java/lang/Boolean.booleanValue:()Z
       4: ifeq          14
       7: aload_0
       8: invokestatic  #28                 // Method org/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher$MatchResult.match:(Ljava/util/Map;)Lreactor/core/publisher/Mono;
      11: goto          17
      14: invokestatic  #29                 // Method org/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher$MatchResult.notMatch:()Lreactor/core/publisher/Mono;
      17: areturn

  private static void lambda$null$1(java.util.Map, org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher$MatchResult);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method org/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher$MatchResult.getVariables:()Ljava/util/Map;
       5: invokeinterface #31,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      10: return

  private static org.reactivestreams.Publisher lambda$null$0(org.springframework.web.server.ServerWebExchange, org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #32,  2           // InterfaceMethod org/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher.matches:(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
       7: areturn
}
