Compiled from "DefaultRedirectStrategy.java"
public class org.springframework.security.web.DefaultRedirectStrategy implements org.springframework.security.web.RedirectStrategy {
  protected final org.apache.commons.logging.Log logger;

  private boolean contextRelative;

  public org.springframework.security.web.DefaultRedirectStrategy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: return

  public void sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #5,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.getContextPath:()Ljava/lang/String;
       7: aload_3
       8: invokevirtual #6                  // Method calculateRedirectUrl:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      11: astore        4
      13: aload_2
      14: aload         4
      16: invokeinterface #7,  2            // InterfaceMethod javax/servlet/http/HttpServletResponse.encodeRedirectURL:(Ljava/lang/String;)Ljava/lang/String;
      21: astore        4
      23: aload_0
      24: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      27: invokeinterface #8,  1            // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      32: ifeq          69
      35: aload_0
      36: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      39: new           #9                  // class java/lang/StringBuilder
      42: dup
      43: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #11                 // String Redirecting to \'
      48: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload         4
      53: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: ldc           #13                 // String \'
      58: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokeinterface #15,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      69: aload_2
      70: aload         4
      72: invokeinterface #16,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.sendRedirect:(Ljava/lang/String;)V
      77: return

  protected java.lang.String calculateRedirectUrl(java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: invokestatic  #17                 // Method org/springframework/security/web/util/UrlUtils.isAbsoluteUrl:(Ljava/lang/String;)Z
       4: ifne          35
       7: aload_0
       8: invokevirtual #18                 // Method isContextRelative:()Z
      11: ifeq          16
      14: aload_2
      15: areturn
      16: new           #9                  // class java/lang/StringBuilder
      19: dup
      20: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      23: aload_1
      24: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_2
      28: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn
      35: aload_0
      36: invokevirtual #18                 // Method isContextRelative:()Z
      39: ifne          44
      42: aload_2
      43: areturn
      44: aload_2
      45: aload_2
      46: ldc           #19                 // String ://
      48: invokevirtual #20                 // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
      51: iconst_3
      52: iadd
      53: invokevirtual #21                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      56: astore_2
      57: aload_2
      58: aload_2
      59: aload_1
      60: invokevirtual #22                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      63: aload_1
      64: invokevirtual #23                 // Method java/lang/String.length:()I
      67: iadd
      68: invokevirtual #21                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      71: astore_2
      72: aload_2
      73: invokevirtual #23                 // Method java/lang/String.length:()I
      76: iconst_1
      77: if_icmple     96
      80: aload_2
      81: iconst_0
      82: invokevirtual #24                 // Method java/lang/String.charAt:(I)C
      85: bipush        47
      87: if_icmpne     96
      90: aload_2
      91: iconst_1
      92: invokevirtual #21                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      95: astore_2
      96: aload_2
      97: areturn

  public void setContextRelative(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #25                 // Field contextRelative:Z
       5: return

  protected boolean isContextRelative();
    Code:
       0: aload_0
       1: getfield      #25                 // Field contextRelative:Z
       4: ireturn
}
