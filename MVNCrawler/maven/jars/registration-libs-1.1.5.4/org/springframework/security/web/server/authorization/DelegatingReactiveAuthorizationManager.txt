Compiled from "DelegatingReactiveAuthorizationManager.java"
public class org.springframework.security.web.server.authorization.DelegatingReactiveAuthorizationManager implements org.springframework.security.authorization.ReactiveAuthorizationManager<org.springframework.web.server.ServerWebExchange> {
  private final java.util.List<org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcherEntry<org.springframework.security.authorization.ReactiveAuthorizationManager<org.springframework.security.web.server.authorization.AuthorizationContext>>> mappings;

  private org.springframework.security.web.server.authorization.DelegatingReactiveAuthorizationManager(java.util.List<org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcherEntry<org.springframework.security.authorization.ReactiveAuthorizationManager<org.springframework.security.web.server.authorization.AuthorizationContext>>>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field mappings:Ljava/util/List;
       9: return

  public reactor.core.publisher.Mono<org.springframework.security.authorization.AuthorizationDecision> check(reactor.core.publisher.Mono<org.springframework.security.core.Authentication>, org.springframework.web.server.ServerWebExchange);
    Code:
       0: aload_0
       1: getfield      #3                  // Field mappings:Ljava/util/List;
       4: invokestatic  #4                  // Method reactor/core/publisher/Flux.fromIterable:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
       7: aload_2
       8: aload_1
       9: invokedynamic #5,  0              // InvokeDynamic #0:apply:(Lorg/springframework/web/server/ServerWebExchange;Lreactor/core/publisher/Mono;)Ljava/util/function/Function;
      14: invokevirtual #6                  // Method reactor/core/publisher/Flux.concatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      17: invokevirtual #7                  // Method reactor/core/publisher/Flux.next:()Lreactor/core/publisher/Mono;
      20: new           #8                  // class org/springframework/security/authorization/AuthorizationDecision
      23: dup
      24: iconst_0
      25: invokespecial #9                  // Method org/springframework/security/authorization/AuthorizationDecision."<init>":(Z)V
      28: invokevirtual #10                 // Method reactor/core/publisher/Mono.defaultIfEmpty:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      31: areturn

  public static org.springframework.security.web.server.authorization.DelegatingReactiveAuthorizationManager$Builder builder();
    Code:
       0: new           #11                 // class org/springframework/security/web/server/authorization/DelegatingReactiveAuthorizationManager$Builder
       3: dup
       4: aconst_null
       5: invokespecial #12                 // Method org/springframework/security/web/server/authorization/DelegatingReactiveAuthorizationManager$Builder."<init>":(Lorg/springframework/security/web/server/authorization/DelegatingReactiveAuthorizationManager$1;)V
       8: areturn

  public reactor.core.publisher.Mono check(reactor.core.publisher.Mono, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #13                 // class org/springframework/web/server/ServerWebExchange
       6: invokevirtual #14                 // Method check:(Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
       9: areturn

  private static org.reactivestreams.Publisher lambda$check$2(org.springframework.web.server.ServerWebExchange, reactor.core.publisher.Mono, org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcherEntry);
    Code:
       0: aload_2
       1: invokevirtual #15                 // Method org/springframework/security/web/server/util/matcher/ServerWebExchangeMatcherEntry.getMatcher:()Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;
       4: aload_0
       5: invokeinterface #16,  2           // InterfaceMethod org/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher.matches:(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
      10: invokedynamic #17,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      15: invokevirtual #18                 // Method reactor/core/publisher/Mono.filter:(Ljava/util/function/Predicate;)Lreactor/core/publisher/Mono;
      18: invokedynamic #19,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      23: invokevirtual #20                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      26: aload_2
      27: aload_1
      28: aload_0
      29: invokedynamic #21,  0             // InvokeDynamic #3:apply:(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcherEntry;Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/function/Function;
      34: invokevirtual #22                 // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      37: areturn

  private static reactor.core.publisher.Mono lambda$null$1(org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcherEntry, reactor.core.publisher.Mono, org.springframework.web.server.ServerWebExchange, java.util.Map);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method org/springframework/security/web/server/util/matcher/ServerWebExchangeMatcherEntry.getEntry:()Ljava/lang/Object;
       4: checkcast     #24                 // class org/springframework/security/authorization/ReactiveAuthorizationManager
       7: aload_1
       8: new           #25                 // class org/springframework/security/web/server/authorization/AuthorizationContext
      11: dup
      12: aload_2
      13: aload_3
      14: invokespecial #26                 // Method org/springframework/security/web/server/authorization/AuthorizationContext."<init>":(Lorg/springframework/web/server/ServerWebExchange;Ljava/util/Map;)V
      17: invokeinterface #27,  3           // InterfaceMethod org/springframework/security/authorization/ReactiveAuthorizationManager.check:(Lreactor/core/publisher/Mono;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      22: areturn

  private static java.util.Map lambda$null$0(org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher$MatchResult);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method org/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher$MatchResult.getVariables:()Ljava/util/Map;
       4: areturn

  org.springframework.security.web.server.authorization.DelegatingReactiveAuthorizationManager(java.util.List, org.springframework.security.web.server.authorization.DelegatingReactiveAuthorizationManager$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Ljava/util/List;)V
       5: return
}
