Compiled from "WebSessionServerRequestCache.java"
public class org.springframework.security.web.server.savedrequest.WebSessionServerRequestCache implements org.springframework.security.web.server.savedrequest.ServerRequestCache {
  private static final java.lang.String DEFAULT_SAVED_REQUEST_ATTR;

  protected final org.apache.commons.logging.Log logger;

  private java.lang.String sessionAttrName;

  private org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher saveRequestMatcher;

  public org.springframework.security.web.server.savedrequest.WebSessionServerRequestCache();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: ldc           #6                  // String SPRING_SECURITY_SAVED_REQUEST
      18: putfield      #7                  // Field sessionAttrName:Ljava/lang/String;
      21: aload_0
      22: getstatic     #8                  // Field org/springframework/http/HttpMethod.GET:Lorg/springframework/http/HttpMethod;
      25: iconst_1
      26: anewarray     #9                  // class java/lang/String
      29: dup
      30: iconst_0
      31: ldc           #10                 // String /**
      33: aastore
      34: invokestatic  #11                 // Method org/springframework/security/web/server/util/matcher/ServerWebExchangeMatchers.pathMatchers:(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;
      37: putfield      #12                 // Field saveRequestMatcher:Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;
      40: return

  public void setSaveRequestMatcher(org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher);
    Code:
       0: aload_1
       1: ldc           #13                 // String saveRequestMatcher cannot be null
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #12                 // Field saveRequestMatcher:Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;
      11: return

  public reactor.core.publisher.Mono<java.lang.Void> saveRequest(org.springframework.web.server.ServerWebExchange);
    Code:
       0: aload_0
       1: getfield      #12                 // Field saveRequestMatcher:Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod org/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher.matches:(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
      10: invokedynamic #16,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      15: invokevirtual #17                 // Method reactor/core/publisher/Mono.filter:(Ljava/util/function/Predicate;)Lreactor/core/publisher/Mono;
      18: aload_1
      19: invokedynamic #18,  0             // InvokeDynamic #1:apply:(Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/function/Function;
      24: invokevirtual #19                 // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      27: invokedynamic #20,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      32: invokevirtual #21                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      35: aload_0
      36: aload_1
      37: invokedynamic #22,  0             // InvokeDynamic #3:accept:(Lorg/springframework/security/web/server/savedrequest/WebSessionServerRequestCache;Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/function/Consumer;
      42: invokevirtual #23                 // Method reactor/core/publisher/Mono.doOnNext:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
      45: invokevirtual #24                 // Method reactor/core/publisher/Mono.then:()Lreactor/core/publisher/Mono;
      48: areturn

  public reactor.core.publisher.Mono<java.net.URI> getRedirectUri(org.springframework.web.server.ServerWebExchange);
    Code:
       0: aload_1
       1: invokeinterface #25,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getSession:()Lreactor/core/publisher/Mono;
       6: aload_0
       7: invokedynamic #26,  0             // InvokeDynamic #4:apply:(Lorg/springframework/security/web/server/savedrequest/WebSessionServerRequestCache;)Ljava/util/function/Function;
      12: invokevirtual #19                 // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      15: invokedynamic #27,  0             // InvokeDynamic #5:apply:()Ljava/util/function/Function;
      20: invokevirtual #21                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      23: areturn

  public reactor.core.publisher.Mono<org.springframework.http.server.reactive.ServerHttpRequest> removeMatchingRequest(org.springframework.web.server.ServerWebExchange);
    Code:
       0: aload_1
       1: invokeinterface #25,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getSession:()Lreactor/core/publisher/Mono;
       6: invokedynamic #20,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      11: invokevirtual #21                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      14: aload_0
      15: aload_1
      16: invokedynamic #28,  0             // InvokeDynamic #6:test:(Lorg/springframework/security/web/server/savedrequest/WebSessionServerRequestCache;Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/function/Predicate;
      21: invokevirtual #17                 // Method reactor/core/publisher/Mono.filter:(Ljava/util/function/Predicate;)Lreactor/core/publisher/Mono;
      24: aload_1
      25: invokedynamic #29,  0             // InvokeDynamic #7:apply:(Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/function/Function;
      30: invokevirtual #21                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      33: areturn

  private static java.lang.String pathInApplication(org.springframework.http.server.reactive.ServerHttpRequest);
    Code:
       0: aload_0
       1: invokeinterface #30,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getPath:()Lorg/springframework/http/server/RequestPath;
       6: invokeinterface #31,  1           // InterfaceMethod org/springframework/http/server/RequestPath.pathWithinApplication:()Lorg/springframework/http/server/PathContainer;
      11: invokeinterface #32,  1           // InterfaceMethod org/springframework/http/server/PathContainer.value:()Ljava/lang/String;
      16: areturn

  private static org.springframework.http.server.reactive.ServerHttpRequest lambda$removeMatchingRequest$5(org.springframework.web.server.ServerWebExchange, java.util.Map);
    Code:
       0: aload_0
       1: invokeinterface #33,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getRequest:()Lorg/springframework/http/server/reactive/ServerHttpRequest;
       6: areturn

  private boolean lambda$removeMatchingRequest$4(org.springframework.web.server.ServerWebExchange, java.util.Map);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #7                  // Field sessionAttrName:Ljava/lang/String;
       5: aload_1
       6: invokeinterface #33,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getRequest:()Lorg/springframework/http/server/reactive/ServerHttpRequest;
      11: invokestatic  #34                 // Method pathInApplication:(Lorg/springframework/http/server/reactive/ServerHttpRequest;)Ljava/lang/String;
      14: invokeinterface #35,  3           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      19: ireturn

  private reactor.core.publisher.Mono lambda$getRedirectUri$3(org.springframework.web.server.WebSession);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #7                  // Field sessionAttrName:Ljava/lang/String;
       5: invokeinterface #36,  2           // InterfaceMethod org/springframework/web/server/WebSession.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      10: invokestatic  #37                 // Method reactor/core/publisher/Mono.justOrEmpty:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      13: areturn

  private void lambda$saveRequest$2(org.springframework.web.server.ServerWebExchange, java.util.Map);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #7                  // Field sessionAttrName:Ljava/lang/String;
       5: aload_1
       6: invokeinterface #33,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getRequest:()Lorg/springframework/http/server/reactive/ServerHttpRequest;
      11: invokestatic  #34                 // Method pathInApplication:(Lorg/springframework/http/server/reactive/ServerHttpRequest;)Ljava/lang/String;
      14: invokeinterface #38,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: return

  private static reactor.core.publisher.Mono lambda$saveRequest$1(org.springframework.web.server.ServerWebExchange, org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher$MatchResult);
    Code:
       0: aload_0
       1: invokeinterface #25,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getSession:()Lreactor/core/publisher/Mono;
       6: areturn

  private static boolean lambda$saveRequest$0(org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher$MatchResult);
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method org/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher$MatchResult.isMatch:()Z
       4: ireturn
}
