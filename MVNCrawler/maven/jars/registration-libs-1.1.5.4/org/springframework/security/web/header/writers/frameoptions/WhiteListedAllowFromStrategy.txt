Compiled from "WhiteListedAllowFromStrategy.java"
public final class org.springframework.security.web.header.writers.frameoptions.WhiteListedAllowFromStrategy extends org.springframework.security.web.header.writers.frameoptions.AbstractRequestParameterAllowFromStrategy {
  private final java.util.Collection<java.lang.String> allowed;

  public org.springframework.security.web.header.writers.frameoptions.WhiteListedAllowFromStrategy(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/security/web/header/writers/frameoptions/AbstractRequestParameterAllowFromStrategy."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Allowed origins cannot be empty.
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field allowed:Ljava/util/Collection;
      15: return

  protected boolean allowed(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field allowed:Ljava/util/Collection;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public void setAllowFromParameterName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method org/springframework/security/web/header/writers/frameoptions/AbstractRequestParameterAllowFromStrategy.setAllowFromParameterName:(Ljava/lang/String;)V
       5: return

  public java.lang.String getAllowFromValue(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method org/springframework/security/web/header/writers/frameoptions/AbstractRequestParameterAllowFromStrategy.getAllowFromValue:(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
       5: areturn
}
