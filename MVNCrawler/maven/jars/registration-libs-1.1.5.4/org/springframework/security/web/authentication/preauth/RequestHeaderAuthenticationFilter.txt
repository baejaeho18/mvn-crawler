Compiled from "RequestHeaderAuthenticationFilter.java"
public class org.springframework.security.web.authentication.preauth.RequestHeaderAuthenticationFilter extends org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter {
  private java.lang.String principalRequestHeader;

  private java.lang.String credentialsRequestHeader;

  private boolean exceptionIfHeaderMissing;

  public org.springframework.security.web.authentication.preauth.RequestHeaderAuthenticationFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/security/web/authentication/preauth/AbstractPreAuthenticatedProcessingFilter."<init>":()V
       4: aload_0
       5: ldc           #2                  // String SM_USER
       7: putfield      #3                  // Field principalRequestHeader:Ljava/lang/String;
      10: aload_0
      11: iconst_1
      12: putfield      #4                  // Field exceptionIfHeaderMissing:Z
      15: return

  protected java.lang.Object getPreAuthenticatedPrincipal(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field principalRequestHeader:Ljava/lang/String;
       5: invokeinterface #5,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      10: astore_2
      11: aload_2
      12: ifnonnull     52
      15: aload_0
      16: getfield      #4                  // Field exceptionIfHeaderMissing:Z
      19: ifeq          52
      22: new           #6                  // class org/springframework/security/web/authentication/preauth/PreAuthenticatedCredentialsNotFoundException
      25: dup
      26: new           #7                  // class java/lang/StringBuilder
      29: dup
      30: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      33: aload_0
      34: getfield      #3                  // Field principalRequestHeader:Ljava/lang/String;
      37: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: ldc           #10                 // String  header not found in request.
      42: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #12                 // Method org/springframework/security/web/authentication/preauth/PreAuthenticatedCredentialsNotFoundException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_2
      53: areturn

  protected java.lang.Object getPreAuthenticatedCredentials(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: getfield      #13                 // Field credentialsRequestHeader:Ljava/lang/String;
       4: ifnull        18
       7: aload_1
       8: aload_0
       9: getfield      #13                 // Field credentialsRequestHeader:Ljava/lang/String;
      12: invokeinterface #5,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      17: areturn
      18: ldc           #14                 // String N/A
      20: areturn

  public void setPrincipalRequestHeader(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #15                 // String principalRequestHeader must not be empty or null
       3: invokestatic  #16                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #3                  // Field principalRequestHeader:Ljava/lang/String;
      11: return

  public void setCredentialsRequestHeader(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #17                 // String credentialsRequestHeader must not be empty or null
       3: invokestatic  #16                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #13                 // Field credentialsRequestHeader:Ljava/lang/String;
      11: return

  public void setExceptionIfHeaderMissing(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field exceptionIfHeaderMissing:Z
       5: return
}
