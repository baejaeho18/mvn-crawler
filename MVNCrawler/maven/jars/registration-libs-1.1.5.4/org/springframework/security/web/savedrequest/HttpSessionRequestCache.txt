Compiled from "HttpSessionRequestCache.java"
public class org.springframework.security.web.savedrequest.HttpSessionRequestCache implements org.springframework.security.web.savedrequest.RequestCache {
  static final java.lang.String SAVED_REQUEST;

  protected final org.apache.commons.logging.Log logger;

  private org.springframework.security.web.PortResolver portResolver;

  private boolean createSessionAllowed;

  private org.springframework.security.web.util.matcher.RequestMatcher requestMatcher;

  private java.lang.String sessionAttrName;

  public org.springframework.security.web.savedrequest.HttpSessionRequestCache();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #5                  // class org/springframework/security/web/PortResolverImpl
      19: dup
      20: invokespecial #6                  // Method org/springframework/security/web/PortResolverImpl."<init>":()V
      23: putfield      #7                  // Field portResolver:Lorg/springframework/security/web/PortResolver;
      26: aload_0
      27: iconst_1
      28: putfield      #8                  // Field createSessionAllowed:Z
      31: aload_0
      32: getstatic     #9                  // Field org/springframework/security/web/util/matcher/AnyRequestMatcher.INSTANCE:Lorg/springframework/security/web/util/matcher/RequestMatcher;
      35: putfield      #10                 // Field requestMatcher:Lorg/springframework/security/web/util/matcher/RequestMatcher;
      38: aload_0
      39: ldc           #12                 // String SPRING_SECURITY_SAVED_REQUEST
      41: putfield      #13                 // Field sessionAttrName:Ljava/lang/String;
      44: return

  public void saveRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_0
       1: getfield      #10                 // Field requestMatcher:Lorg/springframework/security/web/util/matcher/RequestMatcher;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod org/springframework/security/web/util/matcher/RequestMatcher.matches:(Ljavax/servlet/http/HttpServletRequest;)Z
      10: ifeq          90
      13: new           #15                 // class org/springframework/security/web/savedrequest/DefaultSavedRequest
      16: dup
      17: aload_1
      18: aload_0
      19: getfield      #7                  // Field portResolver:Lorg/springframework/security/web/PortResolver;
      22: invokespecial #16                 // Method org/springframework/security/web/savedrequest/DefaultSavedRequest."<init>":(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/security/web/PortResolver;)V
      25: astore_3
      26: aload_0
      27: getfield      #8                  // Field createSessionAllowed:Z
      30: ifne          43
      33: aload_1
      34: iconst_0
      35: invokeinterface #17,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getSession:(Z)Ljavax/servlet/http/HttpSession;
      40: ifnull        87
      43: aload_1
      44: invokeinterface #18,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getSession:()Ljavax/servlet/http/HttpSession;
      49: aload_0
      50: getfield      #13                 // Field sessionAttrName:Ljava/lang/String;
      53: aload_3
      54: invokeinterface #19,  3           // InterfaceMethod javax/servlet/http/HttpSession.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      59: aload_0
      60: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      63: new           #20                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #22                 // String DefaultSavedRequest added to Session:
      72: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_3
      76: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokeinterface #26,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      87: goto          101
      90: aload_0
      91: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      94: ldc           #27                 // String Request not saved as configured RequestMatcher did not match
      96: invokeinterface #26,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     101: return

  public org.springframework.security.web.savedrequest.SavedRequest getRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_1
       1: iconst_0
       2: invokeinterface #17,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getSession:(Z)Ljavax/servlet/http/HttpSession;
       7: astore_3
       8: aload_3
       9: ifnull        26
      12: aload_3
      13: aload_0
      14: getfield      #13                 // Field sessionAttrName:Ljava/lang/String;
      17: invokeinterface #28,  2           // InterfaceMethod javax/servlet/http/HttpSession.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      22: checkcast     #29                 // class org/springframework/security/web/savedrequest/SavedRequest
      25: areturn
      26: aconst_null
      27: areturn

  public void removeRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_1
       1: iconst_0
       2: invokeinterface #17,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getSession:(Z)Ljavax/servlet/http/HttpSession;
       7: astore_3
       8: aload_3
       9: ifnull        33
      12: aload_0
      13: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      16: ldc           #30                 // String Removing DefaultSavedRequest from session if present
      18: invokeinterface #26,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      23: aload_3
      24: aload_0
      25: getfield      #13                 // Field sessionAttrName:Ljava/lang/String;
      28: invokeinterface #31,  2           // InterfaceMethod javax/servlet/http/HttpSession.removeAttribute:(Ljava/lang/String;)V
      33: return

  public javax.servlet.http.HttpServletRequest getMatchingRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #32                 // Method getRequest:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/web/savedrequest/SavedRequest;
       6: checkcast     #15                 // class org/springframework/security/web/savedrequest/DefaultSavedRequest
       9: astore_3
      10: aload_3
      11: ifnonnull     16
      14: aconst_null
      15: areturn
      16: aload_3
      17: aload_1
      18: aload_0
      19: getfield      #7                  // Field portResolver:Lorg/springframework/security/web/PortResolver;
      22: invokevirtual #33                 // Method org/springframework/security/web/savedrequest/DefaultSavedRequest.doesRequestMatch:(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/security/web/PortResolver;)Z
      25: ifne          41
      28: aload_0
      29: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      32: ldc           #34                 // String saved request doesn\'t match
      34: invokeinterface #26,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      39: aconst_null
      40: areturn
      41: aload_0
      42: aload_1
      43: aload_2
      44: invokevirtual #35                 // Method removeRequest:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      47: new           #36                 // class org/springframework/security/web/savedrequest/SavedRequestAwareWrapper
      50: dup
      51: aload_3
      52: aload_1
      53: invokespecial #37                 // Method org/springframework/security/web/savedrequest/SavedRequestAwareWrapper."<init>":(Lorg/springframework/security/web/savedrequest/SavedRequest;Ljavax/servlet/http/HttpServletRequest;)V
      56: areturn

  public void setRequestMatcher(org.springframework.security.web.util.matcher.RequestMatcher);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field requestMatcher:Lorg/springframework/security/web/util/matcher/RequestMatcher;
       5: return

  public void setCreateSessionAllowed(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field createSessionAllowed:Z
       5: return

  public void setPortResolver(org.springframework.security.web.PortResolver);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field portResolver:Lorg/springframework/security/web/PortResolver;
       5: return

  public void setSessionAttrName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field sessionAttrName:Ljava/lang/String;
       5: return
}
