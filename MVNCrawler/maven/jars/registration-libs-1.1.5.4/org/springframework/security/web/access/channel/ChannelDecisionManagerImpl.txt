Compiled from "ChannelDecisionManagerImpl.java"
public class org.springframework.security.web.access.channel.ChannelDecisionManagerImpl implements org.springframework.security.web.access.channel.ChannelDecisionManager,org.springframework.beans.factory.InitializingBean {
  public static final java.lang.String ANY_CHANNEL;

  private java.util.List<org.springframework.security.web.access.channel.ChannelProcessor> channelProcessors;

  public org.springframework.security.web.access.channel.ChannelDecisionManagerImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void afterPropertiesSet() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field channelProcessors:Ljava/util/List;
       4: ldc           #3                  // String A list of ChannelProcessors is required
       6: invokestatic  #4                  // Method org/springframework/util/Assert.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)V
       9: return

  public void decide(org.springframework.security.web.FilterInvocation, java.util.Collection<org.springframework.security.access.ConfigAttribute>) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: aload_2
       1: invokeinterface #5,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          46
      16: aload_3
      17: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #8                  // class org/springframework/security/access/ConfigAttribute
      25: astore        4
      27: ldc           #10                 // String ANY_CHANNEL
      29: aload         4
      31: invokeinterface #11,  1           // InterfaceMethod org/springframework/security/access/ConfigAttribute.getAttribute:()Ljava/lang/String;
      36: invokevirtual #12                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      39: ifeq          43
      42: return
      43: goto          7
      46: aload_0
      47: getfield      #2                  // Field channelProcessors:Ljava/util/List;
      50: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      55: astore_3
      56: aload_3
      57: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      62: ifeq          103
      65: aload_3
      66: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: checkcast     #14                 // class org/springframework/security/web/access/channel/ChannelProcessor
      74: astore        4
      76: aload         4
      78: aload_1
      79: aload_2
      80: invokeinterface #15,  3           // InterfaceMethod org/springframework/security/web/access/channel/ChannelProcessor.decide:(Lorg/springframework/security/web/FilterInvocation;Ljava/util/Collection;)V
      85: aload_1
      86: invokevirtual #16                 // Method org/springframework/security/web/FilterInvocation.getResponse:()Ljavax/servlet/http/HttpServletResponse;
      89: invokeinterface #17,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.isCommitted:()Z
      94: ifeq          100
      97: goto          103
     100: goto          56
     103: return

  protected java.util.List<org.springframework.security.web.access.channel.ChannelProcessor> getChannelProcessors();
    Code:
       0: aload_0
       1: getfield      #2                  // Field channelProcessors:Ljava/util/List;
       4: areturn

  public void setChannelProcessors(java.util.List<?>);
    Code:
       0: aload_1
       1: ldc           #3                  // String A list of ChannelProcessors is required
       3: invokestatic  #4                  // Method org/springframework/util/Assert.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)V
       6: aload_0
       7: new           #18                 // class java/util/ArrayList
      10: dup
      11: aload_1
      12: invokeinterface #19,  1           // InterfaceMethod java/util/List.size:()I
      17: invokespecial #20                 // Method java/util/ArrayList."<init>":(I)V
      20: putfield      #2                  // Field channelProcessors:Ljava/util/List;
      23: aload_1
      24: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      29: astore_2
      30: aload_2
      31: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          99
      39: aload_2
      40: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: astore_3
      46: ldc           #14                 // class org/springframework/security/web/access/channel/ChannelProcessor
      48: aload_3
      49: new           #21                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #23                 // String ChannelProcessor
      58: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_3
      62: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      65: invokevirtual #26                 // Method java/lang/Class.getName:()Ljava/lang/String;
      68: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: ldc           #27                 // String  must implement ChannelProcessor
      73: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokestatic  #29                 // Method org/springframework/util/Assert.isInstanceOf:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;)V
      82: aload_0
      83: getfield      #2                  // Field channelProcessors:Ljava/util/List;
      86: aload_3
      87: checkcast     #14                 // class org/springframework/security/web/access/channel/ChannelProcessor
      90: invokeinterface #30,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      95: pop
      96: goto          30
      99: return

  public boolean supports(org.springframework.security.access.ConfigAttribute);
    Code:
       0: ldc           #10                 // String ANY_CHANNEL
       2: aload_1
       3: invokeinterface #11,  1           // InterfaceMethod org/springframework/security/access/ConfigAttribute.getAttribute:()Ljava/lang/String;
       8: invokevirtual #12                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      11: ifeq          16
      14: iconst_1
      15: ireturn
      16: aload_0
      17: getfield      #2                  // Field channelProcessors:Ljava/util/List;
      20: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      25: astore_2
      26: aload_2
      27: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          60
      35: aload_2
      36: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #14                 // class org/springframework/security/web/access/channel/ChannelProcessor
      44: astore_3
      45: aload_3
      46: aload_1
      47: invokeinterface #31,  2           // InterfaceMethod org/springframework/security/web/access/channel/ChannelProcessor.supports:(Lorg/springframework/security/access/ConfigAttribute;)Z
      52: ifeq          57
      55: iconst_1
      56: ireturn
      57: goto          26
      60: iconst_0
      61: ireturn
}
