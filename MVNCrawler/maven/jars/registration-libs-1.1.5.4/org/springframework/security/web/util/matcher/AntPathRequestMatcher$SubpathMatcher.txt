Compiled from "AntPathRequestMatcher.java"
class org.springframework.security.web.util.matcher.AntPathRequestMatcher$SubpathMatcher implements org.springframework.security.web.util.matcher.AntPathRequestMatcher$Matcher {
  private final java.lang.String subpath;

  private final int length;

  private final boolean caseSensitive;

  static final boolean $assertionsDisabled;

  private org.springframework.security.web.util.matcher.AntPathRequestMatcher$SubpathMatcher(java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: getstatic     #3                  // Field $assertionsDisabled:Z
       7: ifne          27
      10: aload_1
      11: ldc           #4                  // String *
      13: invokevirtual #5                  // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      16: ifeq          27
      19: new           #6                  // class java/lang/AssertionError
      22: dup
      23: invokespecial #7                  // Method java/lang/AssertionError."<init>":()V
      26: athrow
      27: aload_0
      28: iload_2
      29: ifeq          36
      32: aload_1
      33: goto          40
      36: aload_1
      37: invokevirtual #8                  // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      40: putfield      #9                  // Field subpath:Ljava/lang/String;
      43: aload_0
      44: aload_1
      45: invokevirtual #10                 // Method java/lang/String.length:()I
      48: putfield      #11                 // Field length:I
      51: aload_0
      52: iload_2
      53: putfield      #12                 // Field caseSensitive:Z
      56: return

  public boolean matches(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #12                 // Field caseSensitive:Z
       4: ifne          12
       7: aload_1
       8: invokevirtual #8                  // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      11: astore_1
      12: aload_1
      13: aload_0
      14: getfield      #9                  // Field subpath:Ljava/lang/String;
      17: invokevirtual #13                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      20: ifeq          51
      23: aload_1
      24: invokevirtual #10                 // Method java/lang/String.length:()I
      27: aload_0
      28: getfield      #11                 // Field length:I
      31: if_icmpeq     47
      34: aload_1
      35: aload_0
      36: getfield      #11                 // Field length:I
      39: invokevirtual #14                 // Method java/lang/String.charAt:(I)C
      42: bipush        47
      44: if_icmpne     51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: ireturn

  public java.util.Map<java.lang.String, java.lang.String> extractUriTemplateVariables(java.lang.String);
    Code:
       0: invokestatic  #15                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       3: areturn

  org.springframework.security.web.util.matcher.AntPathRequestMatcher$SubpathMatcher(java.lang.String, boolean, org.springframework.security.web.util.matcher.AntPathRequestMatcher$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Z)V
       6: return

  static {};
    Code:
       0: ldc           #16                 // class org/springframework/security/web/util/matcher/AntPathRequestMatcher
       2: invokevirtual #17                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #3                  // Field $assertionsDisabled:Z
      16: return
}
