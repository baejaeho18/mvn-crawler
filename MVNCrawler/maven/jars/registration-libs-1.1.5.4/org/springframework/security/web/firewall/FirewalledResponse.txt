Compiled from "FirewalledResponse.java"
class org.springframework.security.web.firewall.FirewalledResponse extends javax.servlet.http.HttpServletResponseWrapper {
  private static final java.util.regex.Pattern CR_OR_LF;

  private static final java.lang.String LOCATION_HEADER;

  private static final java.lang.String SET_COOKIE_HEADER;

  public org.springframework.security.web.firewall.FirewalledResponse(javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method javax/servlet/http/HttpServletResponseWrapper."<init>":(Ljavax/servlet/http/HttpServletResponse;)V
       5: return

  public void sendRedirect(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #3                  // String Location
       3: aload_1
       4: invokevirtual #4                  // Method validateCrlf:(Ljava/lang/String;Ljava/lang/String;)V
       7: aload_0
       8: aload_1
       9: invokespecial #5                  // Method javax/servlet/http/HttpServletResponseWrapper.sendRedirect:(Ljava/lang/String;)V
      12: return

  public void setHeader(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #4                  // Method validateCrlf:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokespecial #6                  // Method javax/servlet/http/HttpServletResponseWrapper.setHeader:(Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public void addHeader(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #4                  // Method validateCrlf:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokespecial #7                  // Method javax/servlet/http/HttpServletResponseWrapper.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public void addCookie(javax.servlet.http.Cookie);
    Code:
       0: aload_1
       1: ifnull        54
       4: aload_0
       5: ldc           #8                  // String Set-Cookie
       7: aload_1
       8: invokevirtual #9                  // Method javax/servlet/http/Cookie.getName:()Ljava/lang/String;
      11: invokevirtual #4                  // Method validateCrlf:(Ljava/lang/String;Ljava/lang/String;)V
      14: aload_0
      15: ldc           #8                  // String Set-Cookie
      17: aload_1
      18: invokevirtual #10                 // Method javax/servlet/http/Cookie.getValue:()Ljava/lang/String;
      21: invokevirtual #4                  // Method validateCrlf:(Ljava/lang/String;Ljava/lang/String;)V
      24: aload_0
      25: ldc           #8                  // String Set-Cookie
      27: aload_1
      28: invokevirtual #11                 // Method javax/servlet/http/Cookie.getPath:()Ljava/lang/String;
      31: invokevirtual #4                  // Method validateCrlf:(Ljava/lang/String;Ljava/lang/String;)V
      34: aload_0
      35: ldc           #8                  // String Set-Cookie
      37: aload_1
      38: invokevirtual #12                 // Method javax/servlet/http/Cookie.getDomain:()Ljava/lang/String;
      41: invokevirtual #4                  // Method validateCrlf:(Ljava/lang/String;Ljava/lang/String;)V
      44: aload_0
      45: ldc           #8                  // String Set-Cookie
      47: aload_1
      48: invokevirtual #13                 // Method javax/servlet/http/Cookie.getComment:()Ljava/lang/String;
      51: invokevirtual #4                  // Method validateCrlf:(Ljava/lang/String;Ljava/lang/String;)V
      54: aload_0
      55: aload_1
      56: invokespecial #14                 // Method javax/servlet/http/HttpServletResponseWrapper.addCookie:(Ljavax/servlet/http/Cookie;)V
      59: return

  void validateCrlf(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method hasCrlf:(Ljava/lang/String;)Z
       5: ifne          16
       8: aload_0
       9: aload_2
      10: invokespecial #15                 // Method hasCrlf:(Ljava/lang/String;)Z
      13: ifeq          43
      16: new           #16                 // class java/lang/IllegalArgumentException
      19: dup
      20: new           #17                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #19                 // String Invalid characters (CR/LF) in header
      29: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_1
      33: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: return

  private boolean hasCrlf(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        21
       4: getstatic     #23                 // Field CR_OR_LF:Ljava/util/regex/Pattern;
       7: aload_1
       8: invokevirtual #24                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      11: invokevirtual #25                 // Method java/util/regex/Matcher.find:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  static {};
    Code:
       0: ldc           #26                 // String \\r|\\n
       2: invokestatic  #27                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #23                 // Field CR_OR_LF:Ljava/util/regex/Pattern;
       8: return
}
