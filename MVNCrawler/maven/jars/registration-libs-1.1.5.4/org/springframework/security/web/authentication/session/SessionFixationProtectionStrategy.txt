Compiled from "SessionFixationProtectionStrategy.java"
public class org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy extends org.springframework.security.web.authentication.session.AbstractSessionFixationProtectionStrategy {
  boolean migrateSessionAttributes;

  public org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/security/web/authentication/session/AbstractSessionFixationProtectionStrategy."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field migrateSessionAttributes:Z
       9: return

  protected java.util.Map<java.lang.String, java.lang.Object> extractAttributes(javax.servlet.http.HttpSession);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method createMigratedAttributeMap:(Ljavax/servlet/http/HttpSession;)Ljava/util/HashMap;
       5: areturn

  final javax.servlet.http.HttpSession applySessionFixation(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_1
       1: invokeinterface #4,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.getSession:()Ljavax/servlet/http/HttpSession;
       6: astore_2
       7: aload_2
       8: invokeinterface #5,  1            // InterfaceMethod javax/servlet/http/HttpSession.getId:()Ljava/lang/String;
      13: astore_3
      14: aload_0
      15: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      18: invokeinterface #7,  1            // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      23: ifeq          81
      26: aload_0
      27: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      30: new           #8                  // class java/lang/StringBuilder
      33: dup
      34: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #10                 // String Invalidating session with Id \'
      39: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_3
      43: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #12                 // String \'
      48: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_0
      52: getfield      #2                  // Field migrateSessionAttributes:Z
      55: ifeq          63
      58: ldc           #13                 // String and
      60: goto          65
      63: ldc           #14                 // String without
      65: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: ldc           #15                 // String  migrating attributes.
      70: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: invokeinterface #17,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      81: aload_0
      82: aload_2
      83: invokevirtual #18                 // Method extractAttributes:(Ljavax/servlet/http/HttpSession;)Ljava/util/Map;
      86: astore        4
      88: aload_2
      89: invokeinterface #19,  1           // InterfaceMethod javax/servlet/http/HttpSession.invalidate:()V
      94: aload_1
      95: iconst_1
      96: invokeinterface #20,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getSession:(Z)Ljavax/servlet/http/HttpSession;
     101: astore_2
     102: aload_0
     103: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
     106: invokeinterface #7,  1            // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     111: ifeq          147
     114: aload_0
     115: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
     118: new           #8                  // class java/lang/StringBuilder
     121: dup
     122: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
     125: ldc           #21                 // String Started new session:
     127: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: aload_2
     131: invokeinterface #5,  1            // InterfaceMethod javax/servlet/http/HttpSession.getId:()Ljava/lang/String;
     136: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     142: invokeinterface #17,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     147: aload_0
     148: aload         4
     150: aload_2
     151: invokevirtual #22                 // Method transferAttributes:(Ljava/util/Map;Ljavax/servlet/http/HttpSession;)V
     154: aload_2
     155: areturn

  void transferAttributes(java.util.Map<java.lang.String, java.lang.Object>, javax.servlet.http.HttpSession);
    Code:
       0: aload_1
       1: ifnull        62
       4: aload_1
       5: invokeinterface #23,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      10: invokeinterface #24,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: astore_3
      16: aload_3
      17: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          62
      25: aload_3
      26: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #27                 // class java/util/Map$Entry
      34: astore        4
      36: aload_2
      37: aload         4
      39: invokeinterface #28,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      44: checkcast     #29                 // class java/lang/String
      47: aload         4
      49: invokeinterface #30,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      54: invokeinterface #31,  3           // InterfaceMethod javax/servlet/http/HttpSession.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      59: goto          16
      62: return

  private java.util.HashMap<java.lang.String, java.lang.Object> createMigratedAttributeMap(javax.servlet.http.HttpSession);
    Code:
       0: new           #32                 // class java/util/HashMap
       3: dup
       4: invokespecial #33                 // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #34,  1           // InterfaceMethod javax/servlet/http/HttpSession.getAttributeNames:()Ljava/util/Enumeration;
      14: astore_3
      15: aload_3
      16: invokeinterface #35,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      21: ifeq          73
      24: aload_3
      25: invokeinterface #36,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      30: checkcast     #29                 // class java/lang/String
      33: astore        4
      35: aload_0
      36: getfield      #2                  // Field migrateSessionAttributes:Z
      39: ifne          55
      42: aload         4
      44: ldc           #37                 // String SPRING_SECURITY_
      46: invokevirtual #38                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      49: ifne          55
      52: goto          15
      55: aload_2
      56: aload         4
      58: aload_1
      59: aload         4
      61: invokeinterface #39,  2           // InterfaceMethod javax/servlet/http/HttpSession.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      66: invokevirtual #40                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      69: pop
      70: goto          15
      73: aload_2
      74: areturn

  public void setMigrateSessionAttributes(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field migrateSessionAttributes:Z
       5: return

  public void setAlwaysCreateSession(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #41                 // Method org/springframework/security/web/authentication/session/AbstractSessionFixationProtectionStrategy.setAlwaysCreateSession:(Z)V
       5: return

  public void setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #42                 // Method org/springframework/security/web/authentication/session/AbstractSessionFixationProtectionStrategy.setApplicationEventPublisher:(Lorg/springframework/context/ApplicationEventPublisher;)V
       5: return

  public void onAuthentication(org.springframework.security.core.Authentication, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #43                 // Method org/springframework/security/web/authentication/session/AbstractSessionFixationProtectionStrategy.onAuthentication:(Lorg/springframework/security/core/Authentication;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
       7: return
}
