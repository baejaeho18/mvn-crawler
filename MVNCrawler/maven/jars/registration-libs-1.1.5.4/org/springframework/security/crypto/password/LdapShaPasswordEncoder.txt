Compiled from "LdapShaPasswordEncoder.java"
public class org.springframework.security.crypto.password.LdapShaPasswordEncoder implements org.springframework.security.crypto.password.PasswordEncoder {
  private static final int SHA_LENGTH;

  private static final java.lang.String SSHA_PREFIX;

  private static final java.lang.String SSHA_PREFIX_LC;

  private static final java.lang.String SHA_PREFIX;

  private static final java.lang.String SHA_PREFIX_LC;

  private org.springframework.security.crypto.keygen.BytesKeyGenerator saltGenerator;

  private boolean forceLowerCasePrefix;

  public org.springframework.security.crypto.password.LdapShaPasswordEncoder();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/springframework/security/crypto/keygen/KeyGenerators.secureRandom:()Lorg/springframework/security/crypto/keygen/BytesKeyGenerator;
       4: invokespecial #2                  // Method "<init>":(Lorg/springframework/security/crypto/keygen/BytesKeyGenerator;)V
       7: return

  public org.springframework.security.crypto.password.LdapShaPasswordEncoder(org.springframework.security.crypto.keygen.BytesKeyGenerator);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #4                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #5                  // String saltGenerator cannot be null
      14: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #7                  // Field saltGenerator:Lorg/springframework/security/crypto/keygen/BytesKeyGenerator;
      23: return

  private byte[] combineHashAndSalt(byte[], byte[]);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aload_1
       5: areturn
       6: aload_1
       7: arraylength
       8: aload_2
       9: arraylength
      10: iadd
      11: newarray       byte
      13: astore_3
      14: aload_1
      15: iconst_0
      16: aload_3
      17: iconst_0
      18: aload_1
      19: arraylength
      20: invokestatic  #8                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      23: aload_2
      24: iconst_0
      25: aload_3
      26: aload_1
      27: arraylength
      28: aload_2
      29: arraylength
      30: invokestatic  #8                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      33: aload_3
      34: areturn

  public java.lang.String encode(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #7                  // Field saltGenerator:Lorg/springframework/security/crypto/keygen/BytesKeyGenerator;
       4: invokeinterface #9,  1            // InterfaceMethod org/springframework/security/crypto/keygen/BytesKeyGenerator.generateKey:()[B
       9: astore_2
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokespecial #10                 // Method encode:(Ljava/lang/CharSequence;[B)Ljava/lang/String;
      16: areturn

  private java.lang.String encode(java.lang.CharSequence, byte[]);
    Code:
       0: ldc           #11                 // String SHA
       2: invokestatic  #12                 // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
       5: astore_3
       6: aload_3
       7: aload_1
       8: invokestatic  #13                 // Method org/springframework/security/crypto/codec/Utf8.encode:(Ljava/lang/CharSequence;)[B
      11: invokevirtual #14                 // Method java/security/MessageDigest.update:([B)V
      14: goto          29
      17: astore        4
      19: new           #16                 // class java/lang/IllegalStateException
      22: dup
      23: ldc           #17                 // String No SHA implementation available!
      25: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_2
      30: ifnull        38
      33: aload_3
      34: aload_2
      35: invokevirtual #14                 // Method java/security/MessageDigest.update:([B)V
      38: aload_0
      39: aload_3
      40: invokevirtual #19                 // Method java/security/MessageDigest.digest:()[B
      43: aload_2
      44: checkcast     #20                 // class "[B"
      47: invokespecial #21                 // Method combineHashAndSalt:([B[B)[B
      50: astore        4
      52: aload_2
      53: ifnull        61
      56: aload_2
      57: arraylength
      58: ifne          81
      61: aload_0
      62: getfield      #22                 // Field forceLowerCasePrefix:Z
      65: ifeq          74
      68: getstatic     #23                 // Field SHA_PREFIX_LC:Ljava/lang/String;
      71: goto          76
      74: ldc           #25                 // String {SHA}
      76: astore        5
      78: goto          98
      81: aload_0
      82: getfield      #22                 // Field forceLowerCasePrefix:Z
      85: ifeq          94
      88: getstatic     #26                 // Field SSHA_PREFIX_LC:Ljava/lang/String;
      91: goto          96
      94: ldc           #27                 // String {SSHA}
      96: astore        5
      98: new           #28                 // class java/lang/StringBuilder
     101: dup
     102: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     105: aload         5
     107: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: invokestatic  #31                 // Method java/util/Base64.getEncoder:()Ljava/util/Base64$Encoder;
     113: aload         4
     115: invokevirtual #32                 // Method java/util/Base64$Encoder.encode:([B)[B
     118: invokestatic  #33                 // Method org/springframework/security/crypto/codec/Utf8.decode:([B)Ljava/lang/String;
     121: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: areturn
    Exception table:
       from    to  target type
           0    14    17   Class java/security/NoSuchAlgorithmException

  private byte[] extractSalt(java.lang.String);
    Code:
       0: aload_1
       1: bipush        6
       3: invokevirtual #35                 // Method java/lang/String.substring:(I)Ljava/lang/String;
       6: astore_2
       7: invokestatic  #36                 // Method java/util/Base64.getDecoder:()Ljava/util/Base64$Decoder;
      10: aload_2
      11: invokevirtual #37                 // Method java/lang/String.getBytes:()[B
      14: invokevirtual #38                 // Method java/util/Base64$Decoder.decode:([B)[B
      17: astore_3
      18: aload_3
      19: arraylength
      20: bipush        20
      22: isub
      23: istore        4
      25: iload         4
      27: newarray       byte
      29: astore        5
      31: aload_3
      32: bipush        20
      34: aload         5
      36: iconst_0
      37: iload         4
      39: invokestatic  #8                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      42: aload         5
      44: areturn

  public boolean matches(java.lang.CharSequence, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     9
       5: aconst_null
       6: goto          15
       9: aload_1
      10: invokeinterface #39,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      15: aload_2
      16: invokespecial #40                 // Method matches:(Ljava/lang/String;Ljava/lang/String;)Z
      19: ireturn

  private boolean matches(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #41                 // Method extractPrefix:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_3
       6: aload_3
       7: ifnonnull     16
      10: aload_2
      11: aload_1
      12: invokestatic  #42                 // Method org/springframework/security/crypto/password/PasswordEncoderUtils.equals:(Ljava/lang/String;Ljava/lang/String;)Z
      15: ireturn
      16: aload_3
      17: ldc           #27                 // String {SSHA}
      19: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      22: ifne          35
      25: aload_3
      26: getstatic     #26                 // Field SSHA_PREFIX_LC:Ljava/lang/String;
      29: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifeq          45
      35: aload_0
      36: aload_2
      37: invokespecial #44                 // Method extractSalt:(Ljava/lang/String;)[B
      40: astore        4
      42: goto          99
      45: aload_3
      46: ldc           #25                 // String {SHA}
      48: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      51: ifne          96
      54: aload_3
      55: getstatic     #23                 // Field SHA_PREFIX_LC:Ljava/lang/String;
      58: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      61: ifne          96
      64: new           #4                  // class java/lang/IllegalArgumentException
      67: dup
      68: new           #28                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #45                 // String Unsupported password prefix \'
      77: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_3
      81: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: ldc           #46                 // String \'
      86: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      95: athrow
      96: aconst_null
      97: astore        4
      99: aload_3
     100: invokevirtual #47                 // Method java/lang/String.length:()I
     103: istore        5
     105: aload_0
     106: aload_1
     107: aload         4
     109: invokespecial #10                 // Method encode:(Ljava/lang/CharSequence;[B)Ljava/lang/String;
     112: iload         5
     114: invokevirtual #35                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     117: astore        6
     119: aload         6
     121: aload_2
     122: iload         5
     124: invokevirtual #35                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     127: invokestatic  #42                 // Method org/springframework/security/crypto/password/PasswordEncoderUtils.equals:(Ljava/lang/String;Ljava/lang/String;)Z
     130: ireturn

  private java.lang.String extractPrefix(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #48                 // String {
       3: invokevirtual #49                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifne          11
       9: aconst_null
      10: areturn
      11: aload_1
      12: bipush        125
      14: invokevirtual #50                 // Method java/lang/String.lastIndexOf:(I)I
      17: istore_2
      18: iload_2
      19: ifge          32
      22: new           #4                  // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #51                 // String Couldn\'t find closing brace for SHA prefix
      28: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_1
      33: iconst_0
      34: iload_2
      35: iconst_1
      36: iadd
      37: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      40: areturn

  public void setForceLowerCasePrefix(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field forceLowerCasePrefix:Z
       5: return

  static {};
    Code:
       0: ldc           #27                 // String {SSHA}
       2: invokevirtual #53                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       5: putstatic     #26                 // Field SSHA_PREFIX_LC:Ljava/lang/String;
       8: ldc           #25                 // String {SHA}
      10: invokevirtual #53                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      13: putstatic     #23                 // Field SHA_PREFIX_LC:Ljava/lang/String;
      16: return
}
