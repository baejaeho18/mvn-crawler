Compiled from "AbstractTransformTask.java"
public abstract class org.springframework.cglib.transform.AbstractTransformTask extends org.springframework.cglib.transform.AbstractProcessTask {
  private static final int ZIP_MAGIC;

  private static final int CLASS_MAGIC;

  private boolean verbose;

  public org.springframework.cglib.transform.AbstractTransformTask();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method org/springframework/cglib/transform/AbstractProcessTask."<init>":()V
       4: return

  public void setVerbose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field verbose:Z
       5: return

  protected abstract org.springframework.cglib.transform.ClassTransformer getClassTransformer(java.lang.String[]);

  protected org.springframework.asm.Attribute[] attributes();
    Code:
       0: aconst_null
       1: areturn

  protected void processFile(java.io.File) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method isClassFile:(Ljava/io/File;)Z
       5: ifeq          16
       8: aload_0
       9: aload_1
      10: invokespecial #37                 // Method processClassFile:(Ljava/io/File;)V
      13: goto          59
      16: aload_0
      17: aload_1
      18: invokevirtual #40                 // Method isJarFile:(Ljava/io/File;)Z
      21: ifeq          32
      24: aload_0
      25: aload_1
      26: invokevirtual #43                 // Method processJarFile:(Ljava/io/File;)V
      29: goto          59
      32: aload_0
      33: new           #45                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #48                 // String ignoring
      42: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_1
      46: invokevirtual #58                 // Method java/io/File.toURI:()Ljava/net/URI;
      49: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      52: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: iconst_1
      56: invokevirtual #69                 // Method log:(Ljava/lang/String;I)V
      59: return

  private void processClassFile(java.io.File) throws java.lang.Exception, java.io.FileNotFoundException, java.io.IOException, java.net.MalformedURLException;
    Code:
       0: aload_1
       1: invokestatic  #81                 // Method getClassReader:(Ljava/io/File;)Lorg/springframework/asm/ClassReader;
       4: astore_2
       5: aload_2
       6: invokestatic  #87                 // Method org/springframework/cglib/core/ClassNameReader.getClassInfo:(Lorg/springframework/asm/ClassReader;)[Ljava/lang/String;
       9: astore_3
      10: new           #89                 // class org/springframework/cglib/core/DebuggingClassWriter
      13: dup
      14: iconst_2
      15: invokespecial #92                 // Method org/springframework/cglib/core/DebuggingClassWriter."<init>":(I)V
      18: astore        4
      20: aload_0
      21: aload_3
      22: invokevirtual #94                 // Method getClassTransformer:([Ljava/lang/String;)Lorg/springframework/cglib/transform/ClassTransformer;
      25: astore        5
      27: aload         5
      29: ifnull        136
      32: aload_0
      33: getfield      #22                 // Field verbose:Z
      36: ifeq          65
      39: aload_0
      40: new           #45                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #96                 // String processing
      49: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_1
      53: invokevirtual #58                 // Method java/io/File.toURI:()Ljava/net/URI;
      56: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      59: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokevirtual #99                 // Method log:(Ljava/lang/String;)V
      65: new           #101                // class org/springframework/cglib/transform/TransformingClassGenerator
      68: dup
      69: new           #103                // class org/springframework/cglib/transform/ClassReaderGenerator
      72: dup
      73: aload_1
      74: invokestatic  #81                 // Method getClassReader:(Ljava/io/File;)Lorg/springframework/asm/ClassReader;
      77: aload_0
      78: invokevirtual #105                // Method attributes:()[Lorg/springframework/asm/Attribute;
      81: aload_0
      82: invokevirtual #109                // Method getFlags:()I
      85: invokespecial #112                // Method org/springframework/cglib/transform/ClassReaderGenerator."<init>":(Lorg/springframework/asm/ClassReader;[Lorg/springframework/asm/Attribute;I)V
      88: aload         5
      90: invokespecial #115                // Method org/springframework/cglib/transform/TransformingClassGenerator."<init>":(Lorg/springframework/cglib/core/ClassGenerator;Lorg/springframework/cglib/transform/ClassTransformer;)V
      93: aload         4
      95: invokevirtual #119                // Method org/springframework/cglib/transform/TransformingClassGenerator.generateClass:(Lorg/springframework/asm/ClassVisitor;)V
      98: new           #121                // class java/io/FileOutputStream
     101: dup
     102: aload_1
     103: invokespecial #123                // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
     106: astore        6
     108: aload         6
     110: aload         4
     112: invokevirtual #127                // Method org/springframework/cglib/core/DebuggingClassWriter.toByteArray:()[B
     115: invokevirtual #131                // Method java/io/FileOutputStream.write:([B)V
     118: aload         6
     120: invokevirtual #134                // Method java/io/FileOutputStream.close:()V
     123: goto          136
     126: astore        7
     128: aload         6
     130: invokevirtual #134                // Method java/io/FileOutputStream.close:()V
     133: aload         7
     135: athrow
     136: return
    Exception table:
       from    to  target type
         108   118   126   any
         126   128   126   any

  protected int getFlags();
    Code:
       0: iconst_0
       1: ireturn

  private static org.springframework.asm.ClassReader getClassReader(java.io.File) throws java.lang.Exception;
    Code:
       0: new           #146                // class java/io/BufferedInputStream
       3: dup
       4: new           #148                // class java/io/FileInputStream
       7: dup
       8: aload_0
       9: invokespecial #149                // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      12: invokespecial #152                // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
      15: astore_1
      16: new           #154                // class org/springframework/asm/ClassReader
      19: dup
      20: aload_1
      21: invokespecial #155                // Method org/springframework/asm/ClassReader."<init>":(Ljava/io/InputStream;)V
      24: astore_2
      25: aload_2
      26: astore_3
      27: aload_1
      28: invokevirtual #158                // Method java/io/InputStream.close:()V
      31: aload_3
      32: areturn
      33: astore        4
      35: aload_1
      36: invokevirtual #158                // Method java/io/InputStream.close:()V
      39: aload         4
      41: athrow
    Exception table:
       from    to  target type
          16    27    33   any
          33    35    33   any

  protected boolean isClassFile(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #162                // long -889275714l
       5: invokespecial #167                // Method checkMagic:(Ljava/io/File;J)Z
       8: ireturn

  protected void processJarFile(java.io.File) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #22                 // Field verbose:Z
       4: ifeq          33
       7: aload_0
       8: new           #45                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #96                 // String processing
      17: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_1
      21: invokevirtual #58                 // Method java/io/File.toURI:()Ljava/net/URI;
      24: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      27: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokevirtual #99                 // Method log:(Ljava/lang/String;)V
      33: aload_1
      34: invokevirtual #170                // Method java/io/File.getName:()Ljava/lang/String;
      37: aconst_null
      38: new           #54                 // class java/io/File
      41: dup
      42: aload_1
      43: invokevirtual #174                // Method java/io/File.getAbsoluteFile:()Ljava/io/File;
      46: invokevirtual #177                // Method java/io/File.getParent:()Ljava/lang/String;
      49: invokespecial #179                // Method java/io/File."<init>":(Ljava/lang/String;)V
      52: invokestatic  #183                // Method java/io/File.createTempFile:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
      55: astore_2
      56: new           #185                // class java/util/zip/ZipInputStream
      59: dup
      60: new           #148                // class java/io/FileInputStream
      63: dup
      64: aload_1
      65: invokespecial #149                // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      68: invokespecial #186                // Method java/util/zip/ZipInputStream."<init>":(Ljava/io/InputStream;)V
      71: astore_3
      72: new           #121                // class java/io/FileOutputStream
      75: dup
      76: aload_2
      77: invokespecial #123                // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      80: astore        4
      82: new           #188                // class java/util/zip/ZipOutputStream
      85: dup
      86: aload         4
      88: invokespecial #191                // Method java/util/zip/ZipOutputStream."<init>":(Ljava/io/OutputStream;)V
      91: astore        5
      93: aload_3
      94: invokevirtual #195                // Method java/util/zip/ZipInputStream.getNextEntry:()Ljava/util/zip/ZipEntry;
      97: dup
      98: astore        6
     100: ifnull        303
     103: aload_0
     104: aload_3
     105: invokespecial #199                // Method getBytes:(Ljava/util/zip/ZipInputStream;)[B
     108: astore        7
     110: aload         6
     112: invokevirtual #205                // Method java/util/zip/ZipEntry.isDirectory:()Z
     115: ifne          191
     118: new           #207                // class java/io/DataInputStream
     121: dup
     122: new           #209                // class java/io/ByteArrayInputStream
     125: dup
     126: aload         7
     128: invokespecial #211                // Method java/io/ByteArrayInputStream."<init>":([B)V
     131: invokespecial #212                // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
     134: astore        8
     136: aload         8
     138: invokevirtual #215                // Method java/io/DataInputStream.readInt:()I
     141: ldc           #10                 // int -889275714
     143: if_icmpne     157
     146: aload_0
     147: aload         7
     149: invokespecial #219                // Method process:([B)[B
     152: astore        7
     154: goto          191
     157: aload_0
     158: getfield      #22                 // Field verbose:Z
     161: ifeq          191
     164: aload_0
     165: new           #45                 // class java/lang/StringBuilder
     168: dup
     169: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     172: ldc           #48                 // String ignoring
     174: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: aload         6
     179: invokevirtual #220                // Method java/util/zip/ZipEntry.toString:()Ljava/lang/String;
     182: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     188: invokevirtual #99                 // Method log:(Ljava/lang/String;)V
     191: new           #201                // class java/util/zip/ZipEntry
     194: dup
     195: aload         6
     197: invokevirtual #221                // Method java/util/zip/ZipEntry.getName:()Ljava/lang/String;
     200: invokespecial #222                // Method java/util/zip/ZipEntry."<init>":(Ljava/lang/String;)V
     203: astore        8
     205: aload         8
     207: aload         6
     209: invokevirtual #225                // Method java/util/zip/ZipEntry.getMethod:()I
     212: invokevirtual #228                // Method java/util/zip/ZipEntry.setMethod:(I)V
     215: aload         8
     217: aload         6
     219: invokevirtual #231                // Method java/util/zip/ZipEntry.getComment:()Ljava/lang/String;
     222: invokevirtual #234                // Method java/util/zip/ZipEntry.setComment:(Ljava/lang/String;)V
     225: aload         8
     227: aload         7
     229: arraylength
     230: i2l
     231: invokevirtual #238                // Method java/util/zip/ZipEntry.setSize:(J)V
     234: aload         8
     236: invokevirtual #225                // Method java/util/zip/ZipEntry.getMethod:()I
     239: ifne          277
     242: new           #240                // class java/util/zip/CRC32
     245: dup
     246: invokespecial #241                // Method java/util/zip/CRC32."<init>":()V
     249: astore        9
     251: aload         9
     253: aload         7
     255: invokevirtual #244                // Method java/util/zip/CRC32.update:([B)V
     258: aload         8
     260: aload         9
     262: invokevirtual #248                // Method java/util/zip/CRC32.getValue:()J
     265: invokevirtual #251                // Method java/util/zip/ZipEntry.setCrc:(J)V
     268: aload         8
     270: aload         7
     272: arraylength
     273: i2l
     274: invokevirtual #254                // Method java/util/zip/ZipEntry.setCompressedSize:(J)V
     277: aload         5
     279: aload         8
     281: invokevirtual #258                // Method java/util/zip/ZipOutputStream.putNextEntry:(Ljava/util/zip/ZipEntry;)V
     284: aload         5
     286: aload         7
     288: invokevirtual #259                // Method java/util/zip/ZipOutputStream.write:([B)V
     291: aload         5
     293: invokevirtual #262                // Method java/util/zip/ZipOutputStream.closeEntry:()V
     296: aload_3
     297: invokevirtual #263                // Method java/util/zip/ZipInputStream.closeEntry:()V
     300: goto          93
     303: aload         5
     305: invokevirtual #264                // Method java/util/zip/ZipOutputStream.close:()V
     308: aload         4
     310: invokevirtual #134                // Method java/io/FileOutputStream.close:()V
     313: goto          326
     316: astore        10
     318: aload         4
     320: invokevirtual #134                // Method java/io/FileOutputStream.close:()V
     323: aload         10
     325: athrow
     326: aload_3
     327: invokevirtual #265                // Method java/util/zip/ZipInputStream.close:()V
     330: goto          342
     333: astore        11
     335: aload_3
     336: invokevirtual #265                // Method java/util/zip/ZipInputStream.close:()V
     339: aload         11
     341: athrow
     342: aload_1
     343: invokevirtual #268                // Method java/io/File.delete:()Z
     346: ifeq          412
     349: new           #54                 // class java/io/File
     352: dup
     353: aload_2
     354: invokevirtual #271                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     357: invokespecial #179                // Method java/io/File."<init>":(Ljava/lang/String;)V
     360: astore        4
     362: aload         4
     364: aload_1
     365: invokevirtual #274                // Method java/io/File.renameTo:(Ljava/io/File;)Z
     368: ifne          409
     371: new           #75                 // class java/io/IOException
     374: dup
     375: new           #45                 // class java/lang/StringBuilder
     378: dup
     379: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     382: ldc_w         #276                // String can not rename
     385: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     388: aload_2
     389: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     392: ldc_w         #278                // String  to
     395: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     398: aload_1
     399: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     402: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     405: invokespecial #279                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     408: athrow
     409: goto          440
     412: new           #75                 // class java/io/IOException
     415: dup
     416: new           #45                 // class java/lang/StringBuilder
     419: dup
     420: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     423: ldc_w         #281                // String can not delete
     426: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     429: aload_1
     430: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     433: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     436: invokespecial #279                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     439: athrow
     440: aload_2
     441: invokevirtual #268                // Method java/io/File.delete:()Z
     444: pop
     445: goto          458
     448: astore        12
     450: aload_2
     451: invokevirtual #268                // Method java/io/File.delete:()Z
     454: pop
     455: aload         12
     457: athrow
     458: return
    Exception table:
       from    to  target type
          82   308   316   any
         316   318   316   any
          72   326   333   any
         333   335   333   any
          56   440   448   any
         448   450   448   any

  private byte[] process(byte[]) throws java.lang.Exception;
    Code:
       0: new           #154                // class org/springframework/asm/ClassReader
       3: dup
       4: new           #209                // class java/io/ByteArrayInputStream
       7: dup
       8: aload_1
       9: invokespecial #211                // Method java/io/ByteArrayInputStream."<init>":([B)V
      12: invokespecial #155                // Method org/springframework/asm/ClassReader."<init>":(Ljava/io/InputStream;)V
      15: astore_2
      16: aload_2
      17: invokestatic  #87                 // Method org/springframework/cglib/core/ClassNameReader.getClassInfo:(Lorg/springframework/asm/ClassReader;)[Ljava/lang/String;
      20: astore_3
      21: new           #89                 // class org/springframework/cglib/core/DebuggingClassWriter
      24: dup
      25: iconst_2
      26: invokespecial #92                 // Method org/springframework/cglib/core/DebuggingClassWriter."<init>":(I)V
      29: astore        4
      31: aload_0
      32: aload_3
      33: invokevirtual #94                 // Method getClassTransformer:([Ljava/lang/String;)Lorg/springframework/cglib/transform/ClassTransformer;
      36: astore        5
      38: aload         5
      40: ifnull        144
      43: aload_0
      44: getfield      #22                 // Field verbose:Z
      47: ifeq          75
      50: aload_0
      51: new           #45                 // class java/lang/StringBuilder
      54: dup
      55: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      58: ldc           #96                 // String processing
      60: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_3
      64: iconst_0
      65: aaload
      66: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokevirtual #99                 // Method log:(Ljava/lang/String;)V
      75: new           #101                // class org/springframework/cglib/transform/TransformingClassGenerator
      78: dup
      79: new           #103                // class org/springframework/cglib/transform/ClassReaderGenerator
      82: dup
      83: new           #154                // class org/springframework/asm/ClassReader
      86: dup
      87: new           #209                // class java/io/ByteArrayInputStream
      90: dup
      91: aload_1
      92: invokespecial #211                // Method java/io/ByteArrayInputStream."<init>":([B)V
      95: invokespecial #155                // Method org/springframework/asm/ClassReader."<init>":(Ljava/io/InputStream;)V
      98: aload_0
      99: invokevirtual #105                // Method attributes:()[Lorg/springframework/asm/Attribute;
     102: aload_0
     103: invokevirtual #109                // Method getFlags:()I
     106: invokespecial #112                // Method org/springframework/cglib/transform/ClassReaderGenerator."<init>":(Lorg/springframework/asm/ClassReader;[Lorg/springframework/asm/Attribute;I)V
     109: aload         5
     111: invokespecial #115                // Method org/springframework/cglib/transform/TransformingClassGenerator."<init>":(Lorg/springframework/cglib/core/ClassGenerator;Lorg/springframework/cglib/transform/ClassTransformer;)V
     114: aload         4
     116: invokevirtual #119                // Method org/springframework/cglib/transform/TransformingClassGenerator.generateClass:(Lorg/springframework/asm/ClassVisitor;)V
     119: new           #299                // class java/io/ByteArrayOutputStream
     122: dup
     123: invokespecial #300                // Method java/io/ByteArrayOutputStream."<init>":()V
     126: astore        6
     128: aload         6
     130: aload         4
     132: invokevirtual #127                // Method org/springframework/cglib/core/DebuggingClassWriter.toByteArray:()[B
     135: invokevirtual #301                // Method java/io/ByteArrayOutputStream.write:([B)V
     138: aload         6
     140: invokevirtual #302                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     143: areturn
     144: aload_1
     145: areturn

  private byte[] getBytes(java.util.zip.ZipInputStream) throws java.io.IOException;
    Code:
       0: new           #299                // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #300                // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_2
       8: new           #146                // class java/io/BufferedInputStream
      11: dup
      12: aload_1
      13: invokespecial #152                // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
      16: astore_3
      17: aload_3
      18: invokevirtual #306                // Method java/io/InputStream.read:()I
      21: dup
      22: istore        4
      24: iconst_m1
      25: if_icmpeq     37
      28: aload_2
      29: iload         4
      31: invokevirtual #308                // Method java/io/ByteArrayOutputStream.write:(I)V
      34: goto          17
      37: aload_2
      38: invokevirtual #302                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      41: areturn

  private boolean checkMagic(java.io.File, long) throws java.io.IOException;
    Code:
       0: new           #207                // class java/io/DataInputStream
       3: dup
       4: new           #148                // class java/io/FileInputStream
       7: dup
       8: aload_1
       9: invokespecial #149                // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      12: invokespecial #212                // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      15: astore        4
      17: aload         4
      19: invokevirtual #215                // Method java/io/DataInputStream.readInt:()I
      22: istore        5
      24: lload_2
      25: iload         5
      27: i2l
      28: lcmp
      29: ifne          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: istore        6
      39: aload         4
      41: invokevirtual #311                // Method java/io/DataInputStream.close:()V
      44: iload         6
      46: ireturn
      47: astore        7
      49: aload         4
      51: invokevirtual #311                // Method java/io/DataInputStream.close:()V
      54: aload         7
      56: athrow
    Exception table:
       from    to  target type
          17    39    47   any
          47    49    47   any

  protected boolean isJarFile(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #315                // long 1347093252l
       5: invokespecial #167                // Method checkMagic:(Ljava/io/File;J)Z
       8: ireturn
}
