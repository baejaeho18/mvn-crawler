Compiled from "Advised.java"
public interface org.springframework.aop.framework.Advised extends org.springframework.aop.TargetClassAware {
  public abstract boolean isFrozen();

  public abstract boolean isProxyTargetClass();

  public abstract java.lang.Class<?>[] getProxiedInterfaces();

  public abstract boolean isInterfaceProxied(java.lang.Class<?>);

  public abstract void setTargetSource(org.springframework.aop.TargetSource);

  public abstract org.springframework.aop.TargetSource getTargetSource();

  public abstract void setExposeProxy(boolean);

  public abstract boolean isExposeProxy();

  public abstract void setPreFiltered(boolean);

  public abstract boolean isPreFiltered();

  public abstract org.springframework.aop.Advisor[] getAdvisors();

  public abstract void addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException;

  public abstract void addAdvisor(int, org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException;

  public abstract boolean removeAdvisor(org.springframework.aop.Advisor);

  public abstract void removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException;

  public abstract int indexOf(org.springframework.aop.Advisor);

  public abstract boolean replaceAdvisor(org.springframework.aop.Advisor, org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException;

  public abstract void addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException;

  public abstract void addAdvice(int, org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException;

  public abstract boolean removeAdvice(org.aopalliance.aop.Advice);

  public abstract int indexOf(org.aopalliance.aop.Advice);

  public abstract java.lang.String toProxyConfigString();
}
