Compiled from "JdkRegexpMethodPointcut.java"
public class org.springframework.aop.support.JdkRegexpMethodPointcut extends org.springframework.aop.support.AbstractRegexpMethodPointcut {
  private java.util.regex.Pattern[] compiledPatterns;

  private java.util.regex.Pattern[] compiledExclusionPatterns;

  public org.springframework.aop.support.JdkRegexpMethodPointcut();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/aop/support/AbstractRegexpMethodPointcut."<init>":()V
       4: aload_0
       5: iconst_0
       6: anewarray     #2                  // class java/util/regex/Pattern
       9: putfield      #3                  // Field compiledPatterns:[Ljava/util/regex/Pattern;
      12: aload_0
      13: iconst_0
      14: anewarray     #2                  // class java/util/regex/Pattern
      17: putfield      #4                  // Field compiledExclusionPatterns:[Ljava/util/regex/Pattern;
      20: return

  protected void initPatternRepresentation(java.lang.String[]) throws java.util.regex.PatternSyntaxException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #5                  // Method compilePatterns:([Ljava/lang/String;)[Ljava/util/regex/Pattern;
       6: putfield      #3                  // Field compiledPatterns:[Ljava/util/regex/Pattern;
       9: return

  protected void initExcludedPatternRepresentation(java.lang.String[]) throws java.util.regex.PatternSyntaxException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #5                  // Method compilePatterns:([Ljava/lang/String;)[Ljava/util/regex/Pattern;
       6: putfield      #4                  // Field compiledExclusionPatterns:[Ljava/util/regex/Pattern;
       9: return

  protected boolean matches(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field compiledPatterns:[Ljava/util/regex/Pattern;
       4: iload_2
       5: aaload
       6: aload_1
       7: invokevirtual #6                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      10: astore_3
      11: aload_3
      12: invokevirtual #7                  // Method java/util/regex/Matcher.matches:()Z
      15: ireturn

  protected boolean matchesExclusion(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field compiledExclusionPatterns:[Ljava/util/regex/Pattern;
       4: iload_2
       5: aaload
       6: aload_1
       7: invokevirtual #6                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      10: astore_3
      11: aload_3
      12: invokevirtual #7                  // Method java/util/regex/Matcher.matches:()Z
      15: ireturn

  private java.util.regex.Pattern[] compilePatterns(java.lang.String[]) throws java.util.regex.PatternSyntaxException;
    Code:
       0: aload_1
       1: arraylength
       2: anewarray     #2                  // class java/util/regex/Pattern
       5: astore_2
       6: iconst_0
       7: istore_3
       8: iload_3
       9: aload_1
      10: arraylength
      11: if_icmpge     29
      14: aload_2
      15: iload_3
      16: aload_1
      17: iload_3
      18: aaload
      19: invokestatic  #8                  // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      22: aastore
      23: iinc          3, 1
      26: goto          8
      29: aload_2
      30: areturn
}
