Compiled from "ClassFilters.java"
public abstract class org.springframework.aop.support.ClassFilters {
  public org.springframework.aop.support.ClassFilters();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.springframework.aop.ClassFilter union(org.springframework.aop.ClassFilter, org.springframework.aop.ClassFilter);
    Code:
       0: aload_0
       1: ldc           #2                  // String First ClassFilter must not be null
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #4                  // String Second ClassFilter must not be null
       9: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: new           #5                  // class org/springframework/aop/support/ClassFilters$UnionClassFilter
      15: dup
      16: iconst_2
      17: anewarray     #6                  // class org/springframework/aop/ClassFilter
      20: dup
      21: iconst_0
      22: aload_0
      23: aastore
      24: dup
      25: iconst_1
      26: aload_1
      27: aastore
      28: invokespecial #7                  // Method org/springframework/aop/support/ClassFilters$UnionClassFilter."<init>":([Lorg/springframework/aop/ClassFilter;)V
      31: areturn

  public static org.springframework.aop.ClassFilter union(org.springframework.aop.ClassFilter[]);
    Code:
       0: aload_0
       1: ldc           #8                  // String ClassFilter array must not be empty
       3: invokestatic  #9                  // Method org/springframework/util/Assert.notEmpty:([Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #5                  // class org/springframework/aop/support/ClassFilters$UnionClassFilter
       9: dup
      10: aload_0
      11: invokespecial #7                  // Method org/springframework/aop/support/ClassFilters$UnionClassFilter."<init>":([Lorg/springframework/aop/ClassFilter;)V
      14: areturn

  public static org.springframework.aop.ClassFilter intersection(org.springframework.aop.ClassFilter, org.springframework.aop.ClassFilter);
    Code:
       0: aload_0
       1: ldc           #2                  // String First ClassFilter must not be null
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #4                  // String Second ClassFilter must not be null
       9: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: new           #10                 // class org/springframework/aop/support/ClassFilters$IntersectionClassFilter
      15: dup
      16: iconst_2
      17: anewarray     #6                  // class org/springframework/aop/ClassFilter
      20: dup
      21: iconst_0
      22: aload_0
      23: aastore
      24: dup
      25: iconst_1
      26: aload_1
      27: aastore
      28: invokespecial #11                 // Method org/springframework/aop/support/ClassFilters$IntersectionClassFilter."<init>":([Lorg/springframework/aop/ClassFilter;)V
      31: areturn

  public static org.springframework.aop.ClassFilter intersection(org.springframework.aop.ClassFilter[]);
    Code:
       0: aload_0
       1: ldc           #8                  // String ClassFilter array must not be empty
       3: invokestatic  #9                  // Method org/springframework/util/Assert.notEmpty:([Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #10                 // class org/springframework/aop/support/ClassFilters$IntersectionClassFilter
       9: dup
      10: aload_0
      11: invokespecial #11                 // Method org/springframework/aop/support/ClassFilters$IntersectionClassFilter."<init>":([Lorg/springframework/aop/ClassFilter;)V
      14: areturn
}
