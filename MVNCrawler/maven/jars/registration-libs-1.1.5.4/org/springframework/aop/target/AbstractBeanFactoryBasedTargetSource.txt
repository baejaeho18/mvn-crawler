Compiled from "AbstractBeanFactoryBasedTargetSource.java"
public abstract class org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource implements org.springframework.aop.TargetSource,org.springframework.beans.factory.BeanFactoryAware,java.io.Serializable {
  private static final long serialVersionUID;

  protected final org.apache.commons.logging.Log logger;

  private java.lang.String targetBeanName;

  private volatile java.lang.Class<?> targetClass;

  private org.springframework.beans.factory.BeanFactory beanFactory;

  public org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: return

  public void setTargetBeanName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field targetBeanName:Ljava/lang/String;
       5: return

  public java.lang.String getTargetBeanName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field targetBeanName:Ljava/lang/String;
       4: areturn

  public void setTargetClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field targetClass:Ljava/lang/Class;
       5: return

  public void setBeanFactory(org.springframework.beans.factory.BeanFactory);
    Code:
       0: aload_0
       1: getfield      #5                  // Field targetBeanName:Ljava/lang/String;
       4: ifnonnull     17
       7: new           #7                  // class java/lang/IllegalStateException
      10: dup
      11: ldc           #8                  // String Property \'targetBeanName\' is required
      13: invokespecial #9                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #10                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      22: return

  public org.springframework.beans.factory.BeanFactory getBeanFactory();
    Code:
       0: aload_0
       1: getfield      #10                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       4: areturn

  public java.lang.Class<?> getTargetClass();
    Code:
       0: aload_0
       1: getfield      #6                  // Field targetClass:Ljava/lang/Class;
       4: astore_1
       5: aload_1
       6: ifnull        11
       9: aload_1
      10: areturn
      11: aload_0
      12: dup
      13: astore_2
      14: monitorenter
      15: aload_0
      16: getfield      #6                  // Field targetClass:Ljava/lang/Class;
      19: astore_1
      20: aload_1
      21: ifnonnull     121
      24: aload_0
      25: getfield      #10                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      28: ifnull        121
      31: aload_0
      32: getfield      #10                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      35: aload_0
      36: getfield      #5                  // Field targetBeanName:Ljava/lang/String;
      39: invokeinterface #11,  2           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getType:(Ljava/lang/String;)Ljava/lang/Class;
      44: astore_1
      45: aload_1
      46: ifnonnull     116
      49: aload_0
      50: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      53: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      58: ifeq          97
      61: aload_0
      62: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      65: new           #13                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      72: ldc           #15                 // String Getting bean with name \'
      74: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_0
      78: getfield      #5                  // Field targetBeanName:Ljava/lang/String;
      81: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: ldc           #17                 // String \' for type determination
      86: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: invokeinterface #19,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      97: aload_0
      98: getfield      #10                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
     101: aload_0
     102: getfield      #5                  // Field targetBeanName:Ljava/lang/String;
     105: invokeinterface #20,  2           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/String;)Ljava/lang/Object;
     110: astore_3
     111: aload_3
     112: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
     115: astore_1
     116: aload_0
     117: aload_1
     118: putfield      #6                  // Field targetClass:Ljava/lang/Class;
     121: aload_1
     122: aload_2
     123: monitorexit
     124: areturn
     125: astore        4
     127: aload_2
     128: monitorexit
     129: aload         4
     131: athrow
    Exception table:
       from    to  target type
          15   124   125   any
         125   129   125   any

  public boolean isStatic();
    Code:
       0: iconst_0
       1: ireturn

  public void releaseTarget(java.lang.Object) throws java.lang.Exception;
    Code:
       0: return

  protected void copyFrom(org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #5                  // Field targetBeanName:Ljava/lang/String;
       5: putfield      #5                  // Field targetBeanName:Ljava/lang/String;
       8: aload_0
       9: aload_1
      10: getfield      #6                  // Field targetClass:Ljava/lang/Class;
      13: putfield      #6                  // Field targetClass:Ljava/lang/Class;
      16: aload_0
      17: aload_1
      18: getfield      #10                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      21: putfield      #10                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      24: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #21                 // class org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource
      28: astore_2
      29: aload_0
      30: getfield      #10                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      33: aload_2
      34: getfield      #10                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      37: invokestatic  #22                 // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      40: ifeq          61
      43: aload_0
      44: getfield      #5                  // Field targetBeanName:Ljava/lang/String;
      47: aload_2
      48: getfield      #5                  // Field targetBeanName:Ljava/lang/String;
      51: invokestatic  #22                 // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      54: ifeq          61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #23                 // Method java/lang/Object.hashCode:()I
       7: istore_1
       8: bipush        13
      10: iload_1
      11: imul
      12: aload_0
      13: getfield      #10                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      16: invokestatic  #24                 // Method org/springframework/util/ObjectUtils.nullSafeHashCode:(Ljava/lang/Object;)I
      19: iadd
      20: istore_1
      21: bipush        13
      23: iload_1
      24: imul
      25: aload_0
      26: getfield      #5                  // Field targetBeanName:Ljava/lang/String;
      29: invokestatic  #24                 // Method org/springframework/util/ObjectUtils.nullSafeHashCode:(Ljava/lang/Object;)I
      32: iadd
      33: istore_1
      34: iload_1
      35: ireturn

  public java.lang.String toString();
    Code:
       0: new           #13                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #25                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      11: invokespecial #26                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      14: astore_1
      15: aload_1
      16: ldc           #27                 // String  for target bean \'
      18: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: getfield      #5                  // Field targetBeanName:Ljava/lang/String;
      25: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #28                 // String \'
      30: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: pop
      34: aload_0
      35: getfield      #6                  // Field targetClass:Ljava/lang/Class;
      38: ifnull        63
      41: aload_1
      42: ldc           #29                 // String  of type [
      44: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_0
      48: getfield      #6                  // Field targetClass:Ljava/lang/Class;
      51: invokevirtual #30                 // Method java/lang/Class.getName:()Ljava/lang/String;
      54: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc           #31                 // String ]
      59: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: pop
      63: aload_1
      64: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: areturn
}
