Compiled from "MethodInvokerUtils.java"
final class org.springframework.classify.util.MethodInvokerUtils$3 implements org.springframework.util.ReflectionUtils$MethodCallback {
  final java.util.concurrent.atomic.AtomicReference val$methodHolder;

  org.springframework.classify.util.MethodInvokerUtils$3(java.util.concurrent.atomic.AtomicReference);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$methodHolder:Ljava/util/concurrent/atomic/AtomicReference;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public void doWith(java.lang.reflect.Method) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method java/lang/reflect/Method.getModifiers:()I
       4: iconst_1
       5: iand
       6: ifeq          16
       9: aload_1
      10: invokevirtual #5                  // Method java/lang/reflect/Method.isBridge:()Z
      13: ifeq          17
      16: return
      17: aload_1
      18: invokevirtual #6                  // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      21: ifnull        33
      24: aload_1
      25: invokevirtual #6                  // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      28: arraylength
      29: iconst_1
      30: if_icmpeq     34
      33: return
      34: aload_1
      35: invokevirtual #7                  // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;
      38: getstatic     #8                  // Field java/lang/Void.TYPE:Ljava/lang/Class;
      41: invokevirtual #9                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      44: ifne          54
      47: aload_1
      48: invokestatic  #10                 // Method org/springframework/util/ReflectionUtils.isEqualsMethod:(Ljava/lang/reflect/Method;)Z
      51: ifeq          55
      54: return
      55: aload_0
      56: getfield      #1                  // Field val$methodHolder:Ljava/util/concurrent/atomic/AtomicReference;
      59: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      62: ifnonnull     69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: ldc           #12                 // String More than one non-void public method detected with single argument.
      72: invokestatic  #13                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      75: aload_0
      76: getfield      #1                  // Field val$methodHolder:Ljava/util/concurrent/atomic/AtomicReference;
      79: aload_1
      80: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      83: return
}
