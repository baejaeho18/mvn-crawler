Compiled from "ReactiveAdapterRegistry.java"
class org.springframework.core.ReactiveAdapterRegistry$ReactorJdkFlowAdapterRegistrar {
  private org.springframework.core.ReactiveAdapterRegistry$ReactorJdkFlowAdapterRegistrar();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  void registerAdapter(org.springframework.core.ReactiveAdapterRegistry) throws java.lang.Exception;
    Code:
       0: ldc           #3                  // String java.util.concurrent.Flow.Publisher
       2: aload_0
       3: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: invokevirtual #5                  // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       9: invokestatic  #6                  // Method org/springframework/util/ClassUtils.forName:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      12: astore_2
      13: ldc           #7                  // String flowPublisherToFlux
      15: aload_2
      16: invokestatic  #8                  // Method getMethod:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/reflect/Method;
      19: astore_3
      20: ldc           #9                  // String publisherToFlowPublisher
      22: ldc           #10                 // class org/reactivestreams/Publisher
      24: invokestatic  #8                  // Method getMethod:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/reflect/Method;
      27: astore        4
      29: aload         4
      31: aconst_null
      32: iconst_1
      33: anewarray     #11                 // class java/lang/Object
      36: dup
      37: iconst_0
      38: invokestatic  #12                 // Method reactor/core/publisher/Flux.empty:()Lreactor/core/publisher/Flux;
      41: aastore
      42: invokestatic  #13                 // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      45: astore        5
      47: aload_1
      48: aload_2
      49: aload         5
      51: invokedynamic #14,  0             // InvokeDynamic #0:get:(Ljava/lang/Object;)Ljava/util/function/Supplier;
      56: invokestatic  #15                 // Method org/springframework/core/ReactiveTypeDescriptor.multiValue:(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/ReactiveTypeDescriptor;
      59: aload_3
      60: invokedynamic #16,  0             // InvokeDynamic #1:apply:(Ljava/lang/reflect/Method;)Ljava/util/function/Function;
      65: aload         4
      67: invokedynamic #17,  0             // InvokeDynamic #2:apply:(Ljava/lang/reflect/Method;)Ljava/util/function/Function;
      72: invokevirtual #18                 // Method org/springframework/core/ReactiveAdapterRegistry.registerReactiveType:(Lorg/springframework/core/ReactiveTypeDescriptor;Ljava/util/function/Function;Ljava/util/function/Function;)V
      75: return

  private static java.lang.reflect.Method getMethod(java.lang.String, java.lang.Class<?>) throws java.lang.NoSuchMethodException;
    Code:
       0: ldc           #19                 // class reactor/adapter/JdkFlowAdapter
       2: aload_0
       3: iconst_1
       4: anewarray     #20                 // class java/lang/Class
       7: dup
       8: iconst_0
       9: aload_1
      10: aastore
      11: invokevirtual #21                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      14: areturn

  private static java.lang.Object lambda$registerAdapter$2(java.lang.reflect.Method, org.reactivestreams.Publisher);
    Code:
       0: aload_0
       1: aconst_null
       2: iconst_1
       3: anewarray     #11                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_1
       9: aastore
      10: invokestatic  #13                 // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  private static org.reactivestreams.Publisher lambda$registerAdapter$1(java.lang.reflect.Method, java.lang.Object);
    Code:
       0: aload_0
       1: aconst_null
       2: iconst_1
       3: anewarray     #11                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_1
       9: aastore
      10: invokestatic  #13                 // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #10                 // class org/reactivestreams/Publisher
      16: areturn

  private static java.lang.Object lambda$registerAdapter$0(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  org.springframework.core.ReactiveAdapterRegistry$ReactorJdkFlowAdapterRegistrar(org.springframework.core.ReactiveAdapterRegistry$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
