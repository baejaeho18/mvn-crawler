Compiled from "ResourceRegionEncoder.java"
public class org.springframework.core.codec.ResourceRegionEncoder extends org.springframework.core.codec.AbstractEncoder<org.springframework.core.io.support.ResourceRegion> {
  public static final int DEFAULT_BUFFER_SIZE;

  public static final java.lang.String BOUNDARY_STRING_HINT;

  private final int bufferSize;

  public org.springframework.core.codec.ResourceRegionEncoder();
    Code:
       0: aload_0
       1: sipush        4096
       4: invokespecial #3                  // Method "<init>":(I)V
       7: return

  public org.springframework.core.codec.ResourceRegionEncoder(int);
    Code:
       0: aload_0
       1: iconst_2
       2: anewarray     #4                  // class org/springframework/util/MimeType
       5: dup
       6: iconst_0
       7: getstatic     #5                  // Field org/springframework/util/MimeTypeUtils.APPLICATION_OCTET_STREAM:Lorg/springframework/util/MimeType;
      10: aastore
      11: dup
      12: iconst_1
      13: getstatic     #6                  // Field org/springframework/util/MimeTypeUtils.ALL:Lorg/springframework/util/MimeType;
      16: aastore
      17: invokespecial #7                  // Method org/springframework/core/codec/AbstractEncoder."<init>":([Lorg/springframework/util/MimeType;)V
      20: iload_1
      21: ifle          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ldc           #8                  // String \'bufferSize\' must be larger than 0
      31: invokestatic  #9                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      34: aload_0
      35: iload_1
      36: putfield      #10                 // Field bufferSize:I
      39: return

  public boolean canEncode(org.springframework.core.ResolvableType, org.springframework.util.MimeType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #11                 // Method org/springframework/core/codec/AbstractEncoder.canEncode:(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
       6: ifeq          27
       9: ldc           #12                 // class org/springframework/core/io/support/ResourceRegion
      11: aload_1
      12: ldc           #13                 // class java/lang/Object
      14: invokevirtual #14                 // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
      17: invokevirtual #15                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> encode(org.reactivestreams.Publisher<? extends org.springframework.core.io.support.ResourceRegion>, org.springframework.core.io.buffer.DataBufferFactory, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: ldc           #16                 // String \'inputStream\' must not be null
       3: invokestatic  #17                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #18                 // String \'bufferFactory\' must not be null
       9: invokestatic  #17                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #19                 // String \'elementType\' must not be null
      15: invokestatic  #17                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_1
      19: instanceof    #20                 // class reactor/core/publisher/Mono
      22: ifeq          40
      25: aload_1
      26: checkcast     #20                 // class reactor/core/publisher/Mono
      29: aload_0
      30: aload_2
      31: invokedynamic #21,  0             // InvokeDynamic #0:apply:(Lorg/springframework/core/codec/ResourceRegionEncoder;Lorg/springframework/core/io/buffer/DataBufferFactory;)Ljava/util/function/Function;
      36: invokevirtual #22                 // Method reactor/core/publisher/Mono.flatMapMany:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      39: areturn
      40: aload         5
      42: ldc           #23                 // String \'hints\' must not be null
      44: invokestatic  #17                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      47: aload         5
      49: getstatic     #24                 // Field BOUNDARY_STRING_HINT:Ljava/lang/String;
      52: invokeinterface #25,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      57: ldc           #26                 // String \'hints\' must contain boundaryString hint
      59: invokestatic  #9                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      62: aload         5
      64: getstatic     #24                 // Field BOUNDARY_STRING_HINT:Ljava/lang/String;
      67: invokeinterface #27,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      72: checkcast     #28                 // class java/lang/String
      75: astore        6
      77: aload_0
      78: new           #29                 // class java/lang/StringBuilder
      81: dup
      82: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      85: ldc           #31                 // String \r\n--
      87: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload         6
      92: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: ldc           #33                 // String \r\n
      97: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokespecial #35                 // Method getAsciiBytes:(Ljava/lang/String;)[B
     106: astore        7
     108: aload         4
     110: ifnull        145
     113: aload_0
     114: new           #29                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #36                 // String Content-Type:
     123: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload         4
     128: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     131: ldc           #33                 // String \r\n
     133: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: invokespecial #35                 // Method getAsciiBytes:(Ljava/lang/String;)[B
     142: goto          148
     145: iconst_0
     146: newarray       byte
     148: astore        8
     150: aload_1
     151: invokestatic  #38                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
     154: aload_0
     155: aload_2
     156: aload         7
     158: aload         8
     160: invokedynamic #39,  0             // InvokeDynamic #1:apply:(Lorg/springframework/core/codec/ResourceRegionEncoder;Lorg/springframework/core/io/buffer/DataBufferFactory;[B[B)Ljava/util/function/Function;
     165: invokevirtual #40                 // Method reactor/core/publisher/Flux.concatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
     168: astore        9
     170: iconst_2
     171: anewarray     #41                 // class org/reactivestreams/Publisher
     174: dup
     175: iconst_0
     176: aload         9
     178: aastore
     179: dup
     180: iconst_1
     181: aload_0
     182: aload_2
     183: aload         6
     185: invokespecial #42                 // Method getRegionSuffix:(Lorg/springframework/core/io/buffer/DataBufferFactory;Ljava/lang/String;)Lreactor/core/publisher/Flux;
     188: aastore
     189: invokestatic  #43                 // Method reactor/core/publisher/Flux.concat:([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
     192: areturn

  private reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> getRegionPrefix(org.springframework.core.io.buffer.DataBufferFactory, byte[], byte[], org.springframework.core.io.support.ResourceRegion);
    Code:
       0: iconst_3
       1: anewarray     #44                 // class org/springframework/core/io/buffer/DataBuffer
       4: dup
       5: iconst_0
       6: aload_1
       7: aload_2
       8: arraylength
       9: invokeinterface #45,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.allocateBuffer:(I)Lorg/springframework/core/io/buffer/DataBuffer;
      14: aload_2
      15: invokeinterface #46,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:([B)Lorg/springframework/core/io/buffer/DataBuffer;
      20: aastore
      21: dup
      22: iconst_1
      23: aload_1
      24: aload_3
      25: arraylength
      26: invokeinterface #45,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.allocateBuffer:(I)Lorg/springframework/core/io/buffer/DataBuffer;
      31: aload_3
      32: invokeinterface #46,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:([B)Lorg/springframework/core/io/buffer/DataBuffer;
      37: aastore
      38: dup
      39: iconst_2
      40: aload_1
      41: aload_0
      42: aload         4
      44: invokespecial #47                 // Method getContentRangeHeader:(Lorg/springframework/core/io/support/ResourceRegion;)[B
      47: invokestatic  #48                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      50: invokeinterface #49,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.wrap:(Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
      55: aastore
      56: invokestatic  #50                 // Method reactor/core/publisher/Flux.just:([Ljava/lang/Object;)Lreactor/core/publisher/Flux;
      59: areturn

  private reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> writeResourceRegion(org.springframework.core.io.support.ResourceRegion, org.springframework.core.io.buffer.DataBufferFactory);
    Code:
       0: aload_1
       1: invokevirtual #51                 // Method org/springframework/core/io/support/ResourceRegion.getResource:()Lorg/springframework/core/io/Resource;
       4: astore_3
       5: aload_1
       6: invokevirtual #52                 // Method org/springframework/core/io/support/ResourceRegion.getPosition:()J
       9: lstore        4
      11: aload_3
      12: lload         4
      14: aload_2
      15: aload_0
      16: getfield      #10                 // Field bufferSize:I
      19: invokestatic  #53                 // Method org/springframework/core/io/buffer/DataBufferUtils.read:(Lorg/springframework/core/io/Resource;JLorg/springframework/core/io/buffer/DataBufferFactory;I)Lreactor/core/publisher/Flux;
      22: astore        6
      24: aload         6
      26: aload_1
      27: invokevirtual #54                 // Method org/springframework/core/io/support/ResourceRegion.getCount:()J
      30: invokestatic  #55                 // Method org/springframework/core/io/buffer/DataBufferUtils.takeUntilByteCount:(Lorg/reactivestreams/Publisher;J)Lreactor/core/publisher/Flux;
      33: areturn

  private reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> getRegionSuffix(org.springframework.core.io.buffer.DataBufferFactory, java.lang.String);
    Code:
       0: aload_0
       1: new           #29                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #31                 // String \r\n--
      10: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_2
      14: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #56                 // String --
      19: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: invokespecial #35                 // Method getAsciiBytes:(Ljava/lang/String;)[B
      28: astore_3
      29: aload_1
      30: aload_3
      31: arraylength
      32: invokeinterface #45,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.allocateBuffer:(I)Lorg/springframework/core/io/buffer/DataBuffer;
      37: aload_3
      38: invokeinterface #46,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:([B)Lorg/springframework/core/io/buffer/DataBuffer;
      43: invokestatic  #57                 // Method reactor/core/publisher/Flux.just:(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
      46: areturn

  private byte[] getAsciiBytes(java.lang.String);
    Code:
       0: aload_1
       1: getstatic     #58                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
       4: invokevirtual #59                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       7: areturn

  private byte[] getContentRangeHeader(org.springframework.core.io.support.ResourceRegion);
    Code:
       0: aload_1
       1: invokevirtual #52                 // Method org/springframework/core/io/support/ResourceRegion.getPosition:()J
       4: lstore_2
       5: lload_2
       6: aload_1
       7: invokevirtual #54                 // Method org/springframework/core/io/support/ResourceRegion.getCount:()J
      10: ladd
      11: lconst_1
      12: lsub
      13: lstore        4
      15: aload_0
      16: aload_1
      17: invokevirtual #51                 // Method org/springframework/core/io/support/ResourceRegion.getResource:()Lorg/springframework/core/io/Resource;
      20: invokespecial #60                 // Method contentLength:(Lorg/springframework/core/io/Resource;)Ljava/util/OptionalLong;
      23: astore        6
      25: aload         6
      27: invokevirtual #61                 // Method java/util/OptionalLong.isPresent:()Z
      30: ifeq          85
      33: aload_0
      34: new           #29                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #62                 // String Content-Range: bytes
      43: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: lload_2
      47: invokevirtual #63                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      50: bipush        45
      52: invokevirtual #64                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      55: lload         4
      57: invokevirtual #63                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      60: bipush        47
      62: invokevirtual #64                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      65: aload         6
      67: invokevirtual #65                 // Method java/util/OptionalLong.getAsLong:()J
      70: invokevirtual #63                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      73: ldc           #66                 // String \r\n\r\n
      75: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #35                 // Method getAsciiBytes:(Ljava/lang/String;)[B
      84: areturn
      85: aload_0
      86: new           #29                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #62                 // String Content-Range: bytes
      95: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: lload_2
      99: invokevirtual #63                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     102: bipush        45
     104: invokevirtual #64                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     107: lload         4
     109: invokevirtual #63                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     112: ldc           #66                 // String \r\n\r\n
     114: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     120: invokespecial #35                 // Method getAsciiBytes:(Ljava/lang/String;)[B
     123: areturn

  private java.util.OptionalLong contentLength(org.springframework.core.io.Resource);
    Code:
       0: ldc           #67                 // class org/springframework/core/io/InputStreamResource
       2: aload_1
       3: invokevirtual #68                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: if_acmpeq     20
       9: aload_1
      10: invokeinterface #69,  1           // InterfaceMethod org/springframework/core/io/Resource.contentLength:()J
      15: invokestatic  #70                 // Method java/util/OptionalLong.of:(J)Ljava/util/OptionalLong;
      18: areturn
      19: astore_2
      20: invokestatic  #72                 // Method java/util/OptionalLong.empty:()Ljava/util/OptionalLong;
      23: areturn
    Exception table:
       from    to  target type
           9    18    19   Class java/io/IOException

  private org.reactivestreams.Publisher lambda$encode$1(org.springframework.core.io.buffer.DataBufferFactory, byte[], byte[], org.springframework.core.io.support.ResourceRegion);
    Code:
       0: iconst_2
       1: anewarray     #41                 // class org/reactivestreams/Publisher
       4: dup
       5: iconst_0
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: aload         4
      12: invokespecial #73                 // Method getRegionPrefix:(Lorg/springframework/core/io/buffer/DataBufferFactory;[B[BLorg/springframework/core/io/support/ResourceRegion;)Lreactor/core/publisher/Flux;
      15: aastore
      16: dup
      17: iconst_1
      18: aload_0
      19: aload         4
      21: aload_1
      22: invokespecial #74                 // Method writeResourceRegion:(Lorg/springframework/core/io/support/ResourceRegion;Lorg/springframework/core/io/buffer/DataBufferFactory;)Lreactor/core/publisher/Flux;
      25: aastore
      26: invokestatic  #43                 // Method reactor/core/publisher/Flux.concat:([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      29: areturn

  private org.reactivestreams.Publisher lambda$encode$0(org.springframework.core.io.buffer.DataBufferFactory, org.springframework.core.io.support.ResourceRegion);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokespecial #74                 // Method writeResourceRegion:(Lorg/springframework/core/io/support/ResourceRegion;Lorg/springframework/core/io/buffer/DataBufferFactory;)Lreactor/core/publisher/Flux;
       6: areturn

  static {};
    Code:
       0: new           #29                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #2                  // class org/springframework/core/codec/ResourceRegionEncoder
       9: invokevirtual #75                 // Method java/lang/Class.getName:()Ljava/lang/String;
      12: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #76                 // String .boundaryString
      17: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: putstatic     #24                 // Field BOUNDARY_STRING_HINT:Ljava/lang/String;
      26: return
}
