Compiled from "SystemEnvironmentPropertySource.java"
public class org.springframework.core.env.SystemEnvironmentPropertySource extends org.springframework.core.env.MapPropertySource {
  public org.springframework.core.env.SystemEnvironmentPropertySource(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/springframework/core/env/MapPropertySource."<init>":(Ljava/lang/String;Ljava/util/Map;)V
       6: return

  public boolean containsProperty(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public java.lang.Object getProperty(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method resolvePropertyName:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_0
       7: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      10: invokeinterface #5,  1            // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      15: ifeq          80
      18: aload_1
      19: aload_2
      20: invokevirtual #6                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      23: ifne          80
      26: aload_0
      27: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      30: new           #7                  // class java/lang/StringBuilder
      33: dup
      34: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #9                  // String PropertySource \'
      39: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_0
      43: invokevirtual #11                 // Method getName:()Ljava/lang/String;
      46: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #12                 // String \' does not contain property \'
      51: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_1
      55: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: ldc           #13                 // String \', but found equivalent \'
      60: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_2
      64: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc           #14                 // String \'
      69: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      80: aload_0
      81: aload_2
      82: invokespecial #17                 // Method org/springframework/core/env/MapPropertySource.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      85: areturn

  protected final java.lang.String resolvePropertyName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #18                 // String Property name must not be null
       3: invokestatic  #19                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokespecial #20                 // Method checkPropertyName:(Ljava/lang/String;)Ljava/lang/String;
      11: astore_2
      12: aload_2
      13: ifnull        18
      16: aload_2
      17: areturn
      18: aload_1
      19: invokevirtual #21                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      22: astore_3
      23: aload_1
      24: aload_3
      25: invokevirtual #6                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ifne          43
      31: aload_0
      32: aload_3
      33: invokespecial #20                 // Method checkPropertyName:(Ljava/lang/String;)Ljava/lang/String;
      36: astore_2
      37: aload_2
      38: ifnull        43
      41: aload_2
      42: areturn
      43: aload_1
      44: areturn

  private java.lang.String checkPropertyName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #22                 // Method containsKey:(Ljava/lang/String;)Z
       5: ifeq          10
       8: aload_1
       9: areturn
      10: aload_1
      11: bipush        46
      13: bipush        95
      15: invokevirtual #23                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      18: astore_2
      19: aload_1
      20: aload_2
      21: invokevirtual #6                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifne          37
      27: aload_0
      28: aload_2
      29: invokespecial #22                 // Method containsKey:(Ljava/lang/String;)Z
      32: ifeq          37
      35: aload_2
      36: areturn
      37: aload_1
      38: bipush        45
      40: bipush        95
      42: invokevirtual #23                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      45: astore_3
      46: aload_1
      47: aload_3
      48: invokevirtual #6                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      51: ifne          64
      54: aload_0
      55: aload_3
      56: invokespecial #22                 // Method containsKey:(Ljava/lang/String;)Z
      59: ifeq          64
      62: aload_3
      63: areturn
      64: aload_2
      65: bipush        45
      67: bipush        95
      69: invokevirtual #23                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      72: astore        4
      74: aload_2
      75: aload         4
      77: invokevirtual #6                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      80: ifne          95
      83: aload_0
      84: aload         4
      86: invokespecial #22                 // Method containsKey:(Ljava/lang/String;)Z
      89: ifeq          95
      92: aload         4
      94: areturn
      95: aconst_null
      96: areturn

  private boolean containsKey(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method isSecurityManagerPresent:()Z
       4: ifeq          28
       7: aload_0
       8: getfield      #25                 // Field source:Ljava/lang/Object;
      11: checkcast     #26                 // class java/util/Map
      14: invokeinterface #27,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      19: aload_1
      20: invokeinterface #28,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      25: goto          41
      28: aload_0
      29: getfield      #25                 // Field source:Ljava/lang/Object;
      32: checkcast     #26                 // class java/util/Map
      35: aload_1
      36: invokeinterface #29,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      41: ireturn

  protected boolean isSecurityManagerPresent();
    Code:
       0: invokestatic  #30                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: ifnull        10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn
}
