Compiled from "ReactiveAdapterRegistry.java"
class org.springframework.core.ReactiveAdapterRegistry$RxJava2Registrar {
  private org.springframework.core.ReactiveAdapterRegistry$RxJava2Registrar();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  void registerAdapters(org.springframework.core.ReactiveAdapterRegistry);
    Code:
       0: aload_1
       1: ldc           #3                  // class io/reactivex/Flowable
       3: invokedynamic #4,  0              // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
       8: invokestatic  #5                  // Method org/springframework/core/ReactiveTypeDescriptor.multiValue:(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/ReactiveTypeDescriptor;
      11: invokedynamic #6,  0              // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      16: invokedynamic #7,  0              // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      21: invokevirtual #8                  // Method org/springframework/core/ReactiveAdapterRegistry.registerReactiveType:(Lorg/springframework/core/ReactiveTypeDescriptor;Ljava/util/function/Function;Ljava/util/function/Function;)V
      24: aload_1
      25: ldc           #9                  // class io/reactivex/Observable
      27: invokedynamic #10,  0             // InvokeDynamic #3:get:()Ljava/util/function/Supplier;
      32: invokestatic  #5                  // Method org/springframework/core/ReactiveTypeDescriptor.multiValue:(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/ReactiveTypeDescriptor;
      35: invokedynamic #11,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      40: invokedynamic #12,  0             // InvokeDynamic #5:apply:()Ljava/util/function/Function;
      45: invokevirtual #8                  // Method org/springframework/core/ReactiveAdapterRegistry.registerReactiveType:(Lorg/springframework/core/ReactiveTypeDescriptor;Ljava/util/function/Function;Ljava/util/function/Function;)V
      48: aload_1
      49: ldc           #13                 // class io/reactivex/Single
      51: invokestatic  #14                 // Method org/springframework/core/ReactiveTypeDescriptor.singleRequiredValue:(Ljava/lang/Class;)Lorg/springframework/core/ReactiveTypeDescriptor;
      54: invokedynamic #15,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      59: invokedynamic #16,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      64: invokevirtual #8                  // Method org/springframework/core/ReactiveAdapterRegistry.registerReactiveType:(Lorg/springframework/core/ReactiveTypeDescriptor;Ljava/util/function/Function;Ljava/util/function/Function;)V
      67: aload_1
      68: ldc           #17                 // class io/reactivex/Maybe
      70: invokedynamic #18,  0             // InvokeDynamic #8:get:()Ljava/util/function/Supplier;
      75: invokestatic  #19                 // Method org/springframework/core/ReactiveTypeDescriptor.singleOptionalValue:(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/ReactiveTypeDescriptor;
      78: invokedynamic #20,  0             // InvokeDynamic #9:apply:()Ljava/util/function/Function;
      83: invokedynamic #21,  0             // InvokeDynamic #10:apply:()Ljava/util/function/Function;
      88: invokevirtual #8                  // Method org/springframework/core/ReactiveAdapterRegistry.registerReactiveType:(Lorg/springframework/core/ReactiveTypeDescriptor;Ljava/util/function/Function;Ljava/util/function/Function;)V
      91: aload_1
      92: ldc           #22                 // class io/reactivex/Completable
      94: invokedynamic #23,  0             // InvokeDynamic #11:get:()Ljava/util/function/Supplier;
      99: invokestatic  #24                 // Method org/springframework/core/ReactiveTypeDescriptor.noValue:(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/ReactiveTypeDescriptor;
     102: invokedynamic #25,  0             // InvokeDynamic #12:apply:()Ljava/util/function/Function;
     107: invokedynamic #26,  0             // InvokeDynamic #13:apply:()Ljava/util/function/Function;
     112: invokevirtual #8                  // Method org/springframework/core/ReactiveAdapterRegistry.registerReactiveType:(Lorg/springframework/core/ReactiveTypeDescriptor;Ljava/util/function/Function;Ljava/util/function/Function;)V
     115: return

  private static java.lang.Object lambda$registerAdapters$8(org.reactivestreams.Publisher);
    Code:
       0: aload_0
       1: invokestatic  #27                 // Method io/reactivex/Flowable.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;
       4: invokevirtual #28                 // Method io/reactivex/Flowable.toObservable:()Lio/reactivex/Observable;
       7: invokevirtual #29                 // Method io/reactivex/Observable.ignoreElements:()Lio/reactivex/Completable;
      10: areturn

  private static org.reactivestreams.Publisher lambda$registerAdapters$7(java.lang.Object);
    Code:
       0: aload_0
       1: checkcast     #22                 // class io/reactivex/Completable
       4: invokevirtual #30                 // Method io/reactivex/Completable.toFlowable:()Lio/reactivex/Flowable;
       7: areturn

  private static java.lang.Object lambda$registerAdapters$6(org.reactivestreams.Publisher);
    Code:
       0: aload_0
       1: invokestatic  #27                 // Method io/reactivex/Flowable.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;
       4: invokevirtual #28                 // Method io/reactivex/Flowable.toObservable:()Lio/reactivex/Observable;
       7: invokevirtual #31                 // Method io/reactivex/Observable.singleElement:()Lio/reactivex/Maybe;
      10: areturn

  private static org.reactivestreams.Publisher lambda$registerAdapters$5(java.lang.Object);
    Code:
       0: aload_0
       1: checkcast     #17                 // class io/reactivex/Maybe
       4: invokevirtual #32                 // Method io/reactivex/Maybe.toFlowable:()Lio/reactivex/Flowable;
       7: areturn

  private static java.lang.Object lambda$registerAdapters$4(org.reactivestreams.Publisher);
    Code:
       0: aload_0
       1: invokestatic  #27                 // Method io/reactivex/Flowable.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;
       4: invokevirtual #28                 // Method io/reactivex/Flowable.toObservable:()Lio/reactivex/Observable;
       7: invokevirtual #31                 // Method io/reactivex/Observable.singleElement:()Lio/reactivex/Maybe;
      10: invokevirtual #33                 // Method io/reactivex/Maybe.toSingle:()Lio/reactivex/Single;
      13: areturn

  private static org.reactivestreams.Publisher lambda$registerAdapters$3(java.lang.Object);
    Code:
       0: aload_0
       1: checkcast     #13                 // class io/reactivex/Single
       4: invokevirtual #34                 // Method io/reactivex/Single.toFlowable:()Lio/reactivex/Flowable;
       7: areturn

  private static java.lang.Object lambda$registerAdapters$2(org.reactivestreams.Publisher);
    Code:
       0: aload_0
       1: invokestatic  #27                 // Method io/reactivex/Flowable.fromPublisher:(Lorg/reactivestreams/Publisher;)Lio/reactivex/Flowable;
       4: invokevirtual #28                 // Method io/reactivex/Flowable.toObservable:()Lio/reactivex/Observable;
       7: areturn

  private static org.reactivestreams.Publisher lambda$registerAdapters$1(java.lang.Object);
    Code:
       0: aload_0
       1: checkcast     #9                  // class io/reactivex/Observable
       4: getstatic     #35                 // Field io/reactivex/BackpressureStrategy.BUFFER:Lio/reactivex/BackpressureStrategy;
       7: invokevirtual #36                 // Method io/reactivex/Observable.toFlowable:(Lio/reactivex/BackpressureStrategy;)Lio/reactivex/Flowable;
      10: areturn

  private static org.reactivestreams.Publisher lambda$registerAdapters$0(java.lang.Object);
    Code:
       0: aload_0
       1: checkcast     #3                  // class io/reactivex/Flowable
       4: areturn

  org.springframework.core.ReactiveAdapterRegistry$RxJava2Registrar(org.springframework.core.ReactiveAdapterRegistry$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
