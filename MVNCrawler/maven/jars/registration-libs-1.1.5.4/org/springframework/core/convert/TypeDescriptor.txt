Compiled from "TypeDescriptor.java"
public class org.springframework.core.convert.TypeDescriptor implements java.io.Serializable {
  private static final java.lang.annotation.Annotation[] EMPTY_ANNOTATION_ARRAY;

  private static final java.util.Map<java.lang.Class<?>, org.springframework.core.convert.TypeDescriptor> commonTypesCache;

  private static final java.lang.Class<?>[] CACHED_COMMON_TYPES;

  private final java.lang.Class<?> type;

  private final org.springframework.core.ResolvableType resolvableType;

  private final org.springframework.core.convert.TypeDescriptor$AnnotatedElementAdapter annotatedElement;

  public org.springframework.core.convert.TypeDescriptor(org.springframework.core.MethodParameter);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #3                  // Method org/springframework/core/ResolvableType.forMethodParameter:(Lorg/springframework/core/MethodParameter;)Lorg/springframework/core/ResolvableType;
       9: putfield      #4                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      12: aload_0
      13: aload_0
      14: getfield      #4                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      17: aload_1
      18: invokevirtual #5                  // Method org/springframework/core/MethodParameter.getParameterType:()Ljava/lang/Class;
      21: invokevirtual #6                  // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
      24: putfield      #7                  // Field type:Ljava/lang/Class;
      27: aload_0
      28: new           #8                  // class org/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter
      31: dup
      32: aload_0
      33: aload_1
      34: invokevirtual #9                  // Method org/springframework/core/MethodParameter.getParameterIndex:()I
      37: iconst_m1
      38: if_icmpne     48
      41: aload_1
      42: invokevirtual #10                 // Method org/springframework/core/MethodParameter.getMethodAnnotations:()[Ljava/lang/annotation/Annotation;
      45: goto          52
      48: aload_1
      49: invokevirtual #11                 // Method org/springframework/core/MethodParameter.getParameterAnnotations:()[Ljava/lang/annotation/Annotation;
      52: invokespecial #12                 // Method org/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter."<init>":(Lorg/springframework/core/convert/TypeDescriptor;[Ljava/lang/annotation/Annotation;)V
      55: putfield      #13                 // Field annotatedElement:Lorg/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter;
      58: return

  public org.springframework.core.convert.TypeDescriptor(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #14                 // Method org/springframework/core/ResolvableType.forField:(Ljava/lang/reflect/Field;)Lorg/springframework/core/ResolvableType;
       9: putfield      #4                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      12: aload_0
      13: aload_0
      14: getfield      #4                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      17: aload_1
      18: invokevirtual #15                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      21: invokevirtual #6                  // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
      24: putfield      #7                  // Field type:Ljava/lang/Class;
      27: aload_0
      28: new           #8                  // class org/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter
      31: dup
      32: aload_0
      33: aload_1
      34: invokevirtual #16                 // Method java/lang/reflect/Field.getAnnotations:()[Ljava/lang/annotation/Annotation;
      37: invokespecial #12                 // Method org/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter."<init>":(Lorg/springframework/core/convert/TypeDescriptor;[Ljava/lang/annotation/Annotation;)V
      40: putfield      #13                 // Field annotatedElement:Lorg/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter;
      43: return

  public org.springframework.core.convert.TypeDescriptor(org.springframework.core.convert.Property);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #17                 // String Property must not be null
       7: invokestatic  #18                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: invokevirtual #19                 // Method org/springframework/core/convert/Property.getMethodParameter:()Lorg/springframework/core/MethodParameter;
      15: invokestatic  #3                  // Method org/springframework/core/ResolvableType.forMethodParameter:(Lorg/springframework/core/MethodParameter;)Lorg/springframework/core/ResolvableType;
      18: putfield      #4                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      21: aload_0
      22: aload_0
      23: getfield      #4                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      26: aload_1
      27: invokevirtual #20                 // Method org/springframework/core/convert/Property.getType:()Ljava/lang/Class;
      30: invokevirtual #6                  // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
      33: putfield      #7                  // Field type:Ljava/lang/Class;
      36: aload_0
      37: new           #8                  // class org/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter
      40: dup
      41: aload_0
      42: aload_1
      43: invokevirtual #21                 // Method org/springframework/core/convert/Property.getAnnotations:()[Ljava/lang/annotation/Annotation;
      46: invokespecial #12                 // Method org/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter."<init>":(Lorg/springframework/core/convert/TypeDescriptor;[Ljava/lang/annotation/Annotation;)V
      49: putfield      #13                 // Field annotatedElement:Lorg/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter;
      52: return

  protected org.springframework.core.convert.TypeDescriptor(org.springframework.core.ResolvableType, java.lang.Class<?>, java.lang.annotation.Annotation[]);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
       9: aload_0
      10: aload_2
      11: ifnull        18
      14: aload_2
      15: goto          24
      18: aload_1
      19: ldc           #22                 // class java/lang/Object
      21: invokevirtual #6                  // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
      24: putfield      #7                  // Field type:Ljava/lang/Class;
      27: aload_0
      28: new           #8                  // class org/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter
      31: dup
      32: aload_0
      33: aload_3
      34: invokespecial #12                 // Method org/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter."<init>":(Lorg/springframework/core/convert/TypeDescriptor;[Ljava/lang/annotation/Annotation;)V
      37: putfield      #13                 // Field annotatedElement:Lorg/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter;
      40: return

  public java.lang.Class<?> getObjectType();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getType:()Ljava/lang/Class;
       4: invokestatic  #24                 // Method org/springframework/util/ClassUtils.resolvePrimitiveIfNecessary:(Ljava/lang/Class;)Ljava/lang/Class;
       7: areturn

  public java.lang.Class<?> getType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field type:Ljava/lang/Class;
       4: areturn

  public org.springframework.core.ResolvableType getResolvableType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
       4: areturn

  public java.lang.Object getSource();
    Code:
       0: aload_0
       1: getfield      #4                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
       4: invokevirtual #25                 // Method org/springframework/core/ResolvableType.getSource:()Ljava/lang/Object;
       7: areturn

  public org.springframework.core.convert.TypeDescriptor narrow(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aload_0
       5: areturn
       6: aload_1
       7: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_0
      11: invokevirtual #27                 // Method getResolvableType:()Lorg/springframework/core/ResolvableType;
      14: invokestatic  #28                 // Method org/springframework/core/ResolvableType.forType:(Ljava/lang/reflect/Type;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;
      17: astore_2
      18: new           #29                 // class org/springframework/core/convert/TypeDescriptor
      21: dup
      22: aload_2
      23: aload_1
      24: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: aload_0
      28: invokevirtual #30                 // Method getAnnotations:()[Ljava/lang/annotation/Annotation;
      31: invokespecial #31                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      34: areturn

  public org.springframework.core.convert.TypeDescriptor upcast(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_1
       7: aload_0
       8: invokevirtual #23                 // Method getType:()Ljava/lang/Class;
      11: invokestatic  #32                 // Method org/springframework/util/Assert.isAssignable:(Ljava/lang/Class;Ljava/lang/Class;)V
      14: new           #29                 // class org/springframework/core/convert/TypeDescriptor
      17: dup
      18: aload_0
      19: invokevirtual #27                 // Method getResolvableType:()Lorg/springframework/core/ResolvableType;
      22: aload_1
      23: invokevirtual #33                 // Method org/springframework/core/ResolvableType.as:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      26: aload_1
      27: aload_0
      28: invokevirtual #30                 // Method getAnnotations:()[Ljava/lang/annotation/Annotation;
      31: invokespecial #31                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      34: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getType:()Ljava/lang/Class;
       4: invokestatic  #34                 // Method org/springframework/util/ClassUtils.getQualifiedName:(Ljava/lang/Class;)Ljava/lang/String;
       7: areturn

  public boolean isPrimitive();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getType:()Ljava/lang/Class;
       4: invokevirtual #35                 // Method java/lang/Class.isPrimitive:()Z
       7: ireturn

  public java.lang.annotation.Annotation[] getAnnotations();
    Code:
       0: aload_0
       1: getfield      #13                 // Field annotatedElement:Lorg/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter;
       4: invokevirtual #36                 // Method org/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter.getAnnotations:()[Ljava/lang/annotation/Annotation;
       7: areturn

  public boolean hasAnnotation(java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field annotatedElement:Lorg/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter;
       4: invokevirtual #37                 // Method org/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter.isEmpty:()Z
       7: ifeq          12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: getfield      #13                 // Field annotatedElement:Lorg/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter;
      16: aload_1
      17: invokestatic  #38                 // Method org/springframework/core/annotation/AnnotatedElementUtils.isAnnotated:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Z
      20: ireturn

  public <T extends java.lang.annotation.Annotation> T getAnnotation(java.lang.Class<T>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field annotatedElement:Lorg/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter;
       4: invokevirtual #37                 // Method org/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter.isEmpty:()Z
       7: ifeq          12
      10: aconst_null
      11: areturn
      12: aload_0
      13: getfield      #13                 // Field annotatedElement:Lorg/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter;
      16: aload_1
      17: invokestatic  #39                 // Method org/springframework/core/annotation/AnnotatedElementUtils.getMergedAnnotation:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      20: areturn

  public boolean isAssignableTo(org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_1
       1: invokevirtual #40                 // Method getObjectType:()Ljava/lang/Class;
       4: aload_0
       5: invokevirtual #40                 // Method getObjectType:()Ljava/lang/Class;
       8: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      11: istore_2
      12: iload_2
      13: ifne          18
      16: iconst_0
      17: ireturn
      18: aload_0
      19: invokevirtual #42                 // Method isArray:()Z
      22: ifeq          45
      25: aload_1
      26: invokevirtual #42                 // Method isArray:()Z
      29: ifeq          45
      32: aload_0
      33: aload_0
      34: invokevirtual #43                 // Method getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      37: aload_1
      38: invokevirtual #43                 // Method getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      41: invokespecial #44                 // Method isNestedAssignable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
      44: ireturn
      45: aload_0
      46: invokevirtual #45                 // Method isCollection:()Z
      49: ifeq          72
      52: aload_1
      53: invokevirtual #45                 // Method isCollection:()Z
      56: ifeq          72
      59: aload_0
      60: aload_0
      61: invokevirtual #43                 // Method getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      64: aload_1
      65: invokevirtual #43                 // Method getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      68: invokespecial #44                 // Method isNestedAssignable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
      71: ireturn
      72: aload_0
      73: invokevirtual #46                 // Method isMap:()Z
      76: ifeq          122
      79: aload_1
      80: invokevirtual #46                 // Method isMap:()Z
      83: ifeq          122
      86: aload_0
      87: aload_0
      88: invokevirtual #47                 // Method getMapKeyTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      91: aload_1
      92: invokevirtual #47                 // Method getMapKeyTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      95: invokespecial #44                 // Method isNestedAssignable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
      98: ifeq          120
     101: aload_0
     102: aload_0
     103: invokevirtual #48                 // Method getMapValueTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
     106: aload_1
     107: invokevirtual #48                 // Method getMapValueTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
     110: invokespecial #44                 // Method isNestedAssignable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
     113: ifeq          120
     116: iconst_1
     117: goto          121
     120: iconst_0
     121: ireturn
     122: iconst_1
     123: ireturn

  private boolean isNestedAssignable(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_2
       5: ifnull        16
       8: aload_1
       9: aload_2
      10: invokevirtual #49                 // Method isAssignableTo:(Lorg/springframework/core/convert/TypeDescriptor;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public boolean isCollection();
    Code:
       0: ldc           #50                 // class java/util/Collection
       2: aload_0
       3: invokevirtual #23                 // Method getType:()Ljava/lang/Class;
       6: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       9: ireturn

  public boolean isArray();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getType:()Ljava/lang/Class;
       4: invokevirtual #51                 // Method java/lang/Class.isArray:()Z
       7: ireturn

  public org.springframework.core.convert.TypeDescriptor getElementTypeDescriptor();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method getResolvableType:()Lorg/springframework/core/ResolvableType;
       4: invokevirtual #52                 // Method org/springframework/core/ResolvableType.isArray:()Z
       7: ifeq          30
      10: new           #29                 // class org/springframework/core/convert/TypeDescriptor
      13: dup
      14: aload_0
      15: invokevirtual #27                 // Method getResolvableType:()Lorg/springframework/core/ResolvableType;
      18: invokevirtual #53                 // Method org/springframework/core/ResolvableType.getComponentType:()Lorg/springframework/core/ResolvableType;
      21: aconst_null
      22: aload_0
      23: invokevirtual #30                 // Method getAnnotations:()[Ljava/lang/annotation/Annotation;
      26: invokespecial #31                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      29: areturn
      30: ldc           #54                 // class java/util/stream/Stream
      32: aload_0
      33: invokevirtual #23                 // Method getType:()Ljava/lang/Class;
      36: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      39: ifeq          66
      42: aload_0
      43: aload_0
      44: invokevirtual #27                 // Method getResolvableType:()Lorg/springframework/core/ResolvableType;
      47: ldc           #54                 // class java/util/stream/Stream
      49: invokevirtual #33                 // Method org/springframework/core/ResolvableType.as:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      52: iconst_1
      53: newarray       int
      55: dup
      56: iconst_0
      57: iconst_0
      58: iastore
      59: invokevirtual #55                 // Method org/springframework/core/ResolvableType.getGeneric:([I)Lorg/springframework/core/ResolvableType;
      62: invokestatic  #56                 // Method getRelatedIfResolvable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/convert/TypeDescriptor;
      65: areturn
      66: aload_0
      67: aload_0
      68: invokevirtual #27                 // Method getResolvableType:()Lorg/springframework/core/ResolvableType;
      71: invokevirtual #57                 // Method org/springframework/core/ResolvableType.asCollection:()Lorg/springframework/core/ResolvableType;
      74: iconst_1
      75: newarray       int
      77: dup
      78: iconst_0
      79: iconst_0
      80: iastore
      81: invokevirtual #55                 // Method org/springframework/core/ResolvableType.getGeneric:([I)Lorg/springframework/core/ResolvableType;
      84: invokestatic  #56                 // Method getRelatedIfResolvable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/convert/TypeDescriptor;
      87: areturn

  public org.springframework.core.convert.TypeDescriptor elementTypeDescriptor(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #43                 // Method getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
       6: invokespecial #58                 // Method narrow:(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;
       9: areturn

  public boolean isMap();
    Code:
       0: ldc           #59                 // class java/util/Map
       2: aload_0
       3: invokevirtual #23                 // Method getType:()Ljava/lang/Class;
       6: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       9: ireturn

  public org.springframework.core.convert.TypeDescriptor getMapKeyTypeDescriptor();
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method isMap:()Z
       4: ldc           #60                 // String Not a [java.util.Map]
       6: invokestatic  #61                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #27                 // Method getResolvableType:()Lorg/springframework/core/ResolvableType;
      14: invokevirtual #62                 // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
      17: iconst_1
      18: newarray       int
      20: dup
      21: iconst_0
      22: iconst_0
      23: iastore
      24: invokevirtual #55                 // Method org/springframework/core/ResolvableType.getGeneric:([I)Lorg/springframework/core/ResolvableType;
      27: invokestatic  #56                 // Method getRelatedIfResolvable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/convert/TypeDescriptor;
      30: areturn

  public org.springframework.core.convert.TypeDescriptor getMapKeyTypeDescriptor(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #47                 // Method getMapKeyTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
       6: invokespecial #58                 // Method narrow:(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;
       9: areturn

  public org.springframework.core.convert.TypeDescriptor getMapValueTypeDescriptor();
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method isMap:()Z
       4: ldc           #60                 // String Not a [java.util.Map]
       6: invokestatic  #61                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #27                 // Method getResolvableType:()Lorg/springframework/core/ResolvableType;
      14: invokevirtual #62                 // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
      17: iconst_1
      18: newarray       int
      20: dup
      21: iconst_0
      22: iconst_1
      23: iastore
      24: invokevirtual #55                 // Method org/springframework/core/ResolvableType.getGeneric:([I)Lorg/springframework/core/ResolvableType;
      27: invokestatic  #56                 // Method getRelatedIfResolvable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/convert/TypeDescriptor;
      30: areturn

  public org.springframework.core.convert.TypeDescriptor getMapValueTypeDescriptor(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #48                 // Method getMapValueTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
       6: invokespecial #58                 // Method narrow:(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;
       9: areturn

  private org.springframework.core.convert.TypeDescriptor narrow(java.lang.Object, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_2
       1: ifnull        10
       4: aload_2
       5: aload_1
       6: invokevirtual #63                 // Method narrow:(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
       9: areturn
      10: aload_1
      11: ifnull        20
      14: aload_0
      15: aload_1
      16: invokevirtual #63                 // Method narrow:(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
      19: areturn
      20: aconst_null
      21: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #29                 // class org/springframework/core/convert/TypeDescriptor
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #29                 // class org/springframework/core/convert/TypeDescriptor
      20: astore_2
      21: aload_0
      22: invokevirtual #23                 // Method getType:()Ljava/lang/Class;
      25: aload_2
      26: invokevirtual #23                 // Method getType:()Ljava/lang/Class;
      29: if_acmpeq     34
      32: iconst_0
      33: ireturn
      34: aload_0
      35: aload_2
      36: invokespecial #64                 // Method annotationsMatch:(Lorg/springframework/core/convert/TypeDescriptor;)Z
      39: ifne          44
      42: iconst_0
      43: ireturn
      44: aload_0
      45: invokevirtual #45                 // Method isCollection:()Z
      48: ifne          58
      51: aload_0
      52: invokevirtual #42                 // Method isArray:()Z
      55: ifeq          70
      58: aload_0
      59: invokevirtual #43                 // Method getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      62: aload_2
      63: invokevirtual #43                 // Method getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      66: invokestatic  #65                 // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      69: ireturn
      70: aload_0
      71: invokevirtual #46                 // Method isMap:()Z
      74: ifeq          111
      77: aload_0
      78: invokevirtual #47                 // Method getMapKeyTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      81: aload_2
      82: invokevirtual #47                 // Method getMapKeyTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      85: invokestatic  #65                 // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      88: ifeq          109
      91: aload_0
      92: invokevirtual #48                 // Method getMapValueTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      95: aload_2
      96: invokevirtual #48                 // Method getMapValueTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      99: invokestatic  #65                 // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     102: ifeq          109
     105: iconst_1
     106: goto          110
     109: iconst_0
     110: ireturn
     111: iconst_1
     112: ireturn

  private boolean annotationsMatch(org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getAnnotations:()[Ljava/lang/annotation/Annotation;
       4: astore_2
       5: aload_1
       6: invokevirtual #30                 // Method getAnnotations:()[Ljava/lang/annotation/Annotation;
       9: astore_3
      10: aload_2
      11: aload_3
      12: if_acmpne     17
      15: iconst_1
      16: ireturn
      17: aload_2
      18: arraylength
      19: aload_3
      20: arraylength
      21: if_icmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_2
      27: arraylength
      28: ifle          64
      31: iconst_0
      32: istore        4
      34: iload         4
      36: aload_2
      37: arraylength
      38: if_icmpge     64
      41: aload_0
      42: aload_2
      43: iload         4
      45: aaload
      46: aload_3
      47: iload         4
      49: aaload
      50: invokespecial #66                 // Method annotationEquals:(Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Z
      53: ifne          58
      56: iconst_0
      57: ireturn
      58: iinc          4, 1
      61: goto          34
      64: iconst_1
      65: ireturn

  private boolean annotationEquals(java.lang.annotation.Annotation, java.lang.annotation.Annotation);
    Code:
       0: aload_1
       1: aload_2
       2: if_acmpeq     26
       5: aload_1
       6: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: aload_2
      10: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: if_acmpne     30
      16: aload_1
      17: aload_2
      18: invokeinterface #67,  2           // InterfaceMethod java/lang/annotation/Annotation.equals:(Ljava/lang/Object;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getType:()Ljava/lang/Class;
       4: invokevirtual #68                 // Method java/lang/Object.hashCode:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: new           #69                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #70                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #30                 // Method getAnnotations:()[Ljava/lang/annotation/Annotation;
      12: astore_2
      13: aload_2
      14: arraylength
      15: istore_3
      16: iconst_0
      17: istore        4
      19: iload         4
      21: iload_3
      22: if_icmpge     62
      25: aload_2
      26: iload         4
      28: aaload
      29: astore        5
      31: aload_1
      32: ldc           #71                 // String @
      34: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload         5
      39: invokeinterface #73,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      44: invokevirtual #74                 // Method java/lang/Class.getName:()Ljava/lang/String;
      47: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: bipush        32
      52: invokevirtual #75                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      55: pop
      56: iinc          4, 1
      59: goto          19
      62: aload_1
      63: aload_0
      64: invokevirtual #27                 // Method getResolvableType:()Lorg/springframework/core/ResolvableType;
      67: invokevirtual #76                 // Method org/springframework/core/ResolvableType.toString:()Ljava/lang/String;
      70: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: pop
      74: aload_1
      75: invokevirtual #77                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: areturn

  public static org.springframework.core.convert.TypeDescriptor forObject(java.lang.Object);
    Code:
       0: aload_0
       1: ifnull        14
       4: aload_0
       5: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokestatic  #78                 // Method valueOf:(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
      11: goto          15
      14: aconst_null
      15: areturn

  public static org.springframework.core.convert.TypeDescriptor valueOf(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ifnonnull     7
       4: ldc           #22                 // class java/lang/Object
       6: astore_0
       7: getstatic     #79                 // Field commonTypesCache:Ljava/util/Map;
      10: aload_0
      11: invokeinterface #80,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #29                 // class org/springframework/core/convert/TypeDescriptor
      19: astore_1
      20: aload_1
      21: ifnull        28
      24: aload_1
      25: goto          41
      28: new           #29                 // class org/springframework/core/convert/TypeDescriptor
      31: dup
      32: aload_0
      33: invokestatic  #81                 // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      36: aconst_null
      37: aconst_null
      38: invokespecial #31                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      41: areturn

  public static org.springframework.core.convert.TypeDescriptor collection(java.lang.Class<?>, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_0
       1: ldc           #82                 // String Collection type must not be null
       3: invokestatic  #18                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: ldc           #50                 // class java/util/Collection
       8: aload_0
       9: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      12: ifne          25
      15: new           #83                 // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #84                 // String Collection type must be a [java.util.Collection]
      21: invokespecial #85                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_1
      26: ifnull        36
      29: aload_1
      30: getfield      #4                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      33: goto          37
      36: aconst_null
      37: astore_2
      38: new           #29                 // class org/springframework/core/convert/TypeDescriptor
      41: dup
      42: aload_0
      43: iconst_1
      44: anewarray     #86                 // class org/springframework/core/ResolvableType
      47: dup
      48: iconst_0
      49: aload_2
      50: aastore
      51: invokestatic  #87                 // Method org/springframework/core/ResolvableType.forClassWithGenerics:(Ljava/lang/Class;[Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;
      54: aconst_null
      55: aconst_null
      56: invokespecial #31                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      59: areturn

  public static org.springframework.core.convert.TypeDescriptor map(java.lang.Class<?>, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_0
       1: ldc           #88                 // String Map type must not be null
       3: invokestatic  #18                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: ldc           #59                 // class java/util/Map
       8: aload_0
       9: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      12: ifne          25
      15: new           #83                 // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #89                 // String Map type must be a [java.util.Map]
      21: invokespecial #85                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_1
      26: ifnull        36
      29: aload_1
      30: getfield      #4                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      33: goto          37
      36: aconst_null
      37: astore_3
      38: aload_2
      39: ifnull        49
      42: aload_2
      43: getfield      #4                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      46: goto          50
      49: aconst_null
      50: astore        4
      52: new           #29                 // class org/springframework/core/convert/TypeDescriptor
      55: dup
      56: aload_0
      57: iconst_2
      58: anewarray     #86                 // class org/springframework/core/ResolvableType
      61: dup
      62: iconst_0
      63: aload_3
      64: aastore
      65: dup
      66: iconst_1
      67: aload         4
      69: aastore
      70: invokestatic  #87                 // Method org/springframework/core/ResolvableType.forClassWithGenerics:(Ljava/lang/Class;[Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;
      73: aconst_null
      74: aconst_null
      75: invokespecial #31                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      78: areturn

  public static org.springframework.core.convert.TypeDescriptor array(org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #29                 // class org/springframework/core/convert/TypeDescriptor
       9: dup
      10: aload_0
      11: getfield      #4                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      14: invokestatic  #90                 // Method org/springframework/core/ResolvableType.forArrayComponent:(Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;
      17: aconst_null
      18: aload_0
      19: invokevirtual #30                 // Method getAnnotations:()[Ljava/lang/annotation/Annotation;
      22: invokespecial #31                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      25: areturn

  public static org.springframework.core.convert.TypeDescriptor nested(org.springframework.core.MethodParameter, int);
    Code:
       0: aload_0
       1: invokevirtual #91                 // Method org/springframework/core/MethodParameter.getNestingLevel:()I
       4: iconst_1
       5: if_icmpeq     18
       8: new           #83                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #92                 // String MethodParameter nesting level must be 1: use the nestingLevel parameter to specify the desired nestingLevel for nested type traversal
      14: invokespecial #85                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: new           #29                 // class org/springframework/core/convert/TypeDescriptor
      21: dup
      22: aload_0
      23: invokespecial #93                 // Method "<init>":(Lorg/springframework/core/MethodParameter;)V
      26: iload_1
      27: invokestatic  #94                 // Method nested:(Lorg/springframework/core/convert/TypeDescriptor;I)Lorg/springframework/core/convert/TypeDescriptor;
      30: areturn

  public static org.springframework.core.convert.TypeDescriptor nested(java.lang.reflect.Field, int);
    Code:
       0: new           #29                 // class org/springframework/core/convert/TypeDescriptor
       3: dup
       4: aload_0
       5: invokespecial #95                 // Method "<init>":(Ljava/lang/reflect/Field;)V
       8: iload_1
       9: invokestatic  #94                 // Method nested:(Lorg/springframework/core/convert/TypeDescriptor;I)Lorg/springframework/core/convert/TypeDescriptor;
      12: areturn

  public static org.springframework.core.convert.TypeDescriptor nested(org.springframework.core.convert.Property, int);
    Code:
       0: new           #29                 // class org/springframework/core/convert/TypeDescriptor
       3: dup
       4: aload_0
       5: invokespecial #96                 // Method "<init>":(Lorg/springframework/core/convert/Property;)V
       8: iload_1
       9: invokestatic  #94                 // Method nested:(Lorg/springframework/core/convert/TypeDescriptor;I)Lorg/springframework/core/convert/TypeDescriptor;
      12: areturn

  private static org.springframework.core.convert.TypeDescriptor nested(org.springframework.core.convert.TypeDescriptor, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
       4: astore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_1
       9: if_icmpge     36
      12: ldc           #22                 // class java/lang/Object
      14: aload_2
      15: invokevirtual #97                 // Method org/springframework/core/ResolvableType.getType:()Ljava/lang/reflect/Type;
      18: if_acmpne     24
      21: goto          30
      24: aload_2
      25: iconst_2
      26: invokevirtual #98                 // Method org/springframework/core/ResolvableType.getNested:(I)Lorg/springframework/core/ResolvableType;
      29: astore_2
      30: iinc          3, 1
      33: goto          7
      36: aload_2
      37: getstatic     #99                 // Field org/springframework/core/ResolvableType.NONE:Lorg/springframework/core/ResolvableType;
      40: if_acmpne     45
      43: aconst_null
      44: areturn
      45: aload_0
      46: aload_2
      47: invokestatic  #56                 // Method getRelatedIfResolvable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/convert/TypeDescriptor;
      50: areturn

  private static org.springframework.core.convert.TypeDescriptor getRelatedIfResolvable(org.springframework.core.convert.TypeDescriptor, org.springframework.core.ResolvableType);
    Code:
       0: aload_1
       1: invokevirtual #100                // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: new           #29                 // class org/springframework/core/convert/TypeDescriptor
      12: dup
      13: aload_1
      14: aconst_null
      15: aload_0
      16: invokevirtual #30                 // Method getAnnotations:()[Ljava/lang/annotation/Annotation;
      19: invokespecial #31                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      22: areturn

  static java.lang.annotation.Annotation[] access$000();
    Code:
       0: getstatic     #1                  // Field EMPTY_ANNOTATION_ARRAY:[Ljava/lang/annotation/Annotation;
       3: areturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #101                // class java/lang/annotation/Annotation
       4: putstatic     #1                  // Field EMPTY_ANNOTATION_ARRAY:[Ljava/lang/annotation/Annotation;
       7: new           #102                // class java/util/HashMap
      10: dup
      11: bipush        32
      13: invokespecial #103                // Method java/util/HashMap."<init>":(I)V
      16: putstatic     #79                 // Field commonTypesCache:Ljava/util/Map;
      19: bipush        18
      21: anewarray     #104                // class java/lang/Class
      24: dup
      25: iconst_0
      26: getstatic     #105                // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      29: aastore
      30: dup
      31: iconst_1
      32: ldc           #106                // class java/lang/Boolean
      34: aastore
      35: dup
      36: iconst_2
      37: getstatic     #107                // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      40: aastore
      41: dup
      42: iconst_3
      43: ldc           #108                // class java/lang/Byte
      45: aastore
      46: dup
      47: iconst_4
      48: getstatic     #109                // Field java/lang/Character.TYPE:Ljava/lang/Class;
      51: aastore
      52: dup
      53: iconst_5
      54: ldc           #110                // class java/lang/Character
      56: aastore
      57: dup
      58: bipush        6
      60: getstatic     #111                // Field java/lang/Double.TYPE:Ljava/lang/Class;
      63: aastore
      64: dup
      65: bipush        7
      67: ldc           #112                // class java/lang/Double
      69: aastore
      70: dup
      71: bipush        8
      73: getstatic     #113                // Field java/lang/Float.TYPE:Ljava/lang/Class;
      76: aastore
      77: dup
      78: bipush        9
      80: ldc           #114                // class java/lang/Float
      82: aastore
      83: dup
      84: bipush        10
      86: getstatic     #115                // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      89: aastore
      90: dup
      91: bipush        11
      93: ldc           #116                // class java/lang/Integer
      95: aastore
      96: dup
      97: bipush        12
      99: getstatic     #117                // Field java/lang/Long.TYPE:Ljava/lang/Class;
     102: aastore
     103: dup
     104: bipush        13
     106: ldc           #118                // class java/lang/Long
     108: aastore
     109: dup
     110: bipush        14
     112: getstatic     #119                // Field java/lang/Short.TYPE:Ljava/lang/Class;
     115: aastore
     116: dup
     117: bipush        15
     119: ldc           #120                // class java/lang/Short
     121: aastore
     122: dup
     123: bipush        16
     125: ldc           #121                // class java/lang/String
     127: aastore
     128: dup
     129: bipush        17
     131: ldc           #22                 // class java/lang/Object
     133: aastore
     134: putstatic     #122                // Field CACHED_COMMON_TYPES:[Ljava/lang/Class;
     137: getstatic     #122                // Field CACHED_COMMON_TYPES:[Ljava/lang/Class;
     140: astore_0
     141: aload_0
     142: arraylength
     143: istore_1
     144: iconst_0
     145: istore_2
     146: iload_2
     147: iload_1
     148: if_icmpge     175
     151: aload_0
     152: iload_2
     153: aaload
     154: astore_3
     155: getstatic     #79                 // Field commonTypesCache:Ljava/util/Map;
     158: aload_3
     159: aload_3
     160: invokestatic  #78                 // Method valueOf:(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
     163: invokeinterface #123,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     168: pop
     169: iinc          2, 1
     172: goto          146
     175: return
}
