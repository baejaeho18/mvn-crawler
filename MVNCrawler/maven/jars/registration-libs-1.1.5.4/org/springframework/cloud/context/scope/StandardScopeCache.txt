Compiled from "StandardScopeCache.java"
public class org.springframework.cloud.context.scope.StandardScopeCache implements org.springframework.cloud.context.scope.ScopeCache {
  private final java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.Object> cache;

  public org.springframework.cloud.context.scope.StandardScopeCache();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
      15: return

  public java.lang.Object remove(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public java.util.Collection<java.lang.Object> clear();
    Code:
       0: new           #6                  // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #4                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
       8: invokeinterface #7,  1            // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      13: invokespecial #8                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      16: astore_1
      17: aload_0
      18: getfield      #4                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
      21: invokeinterface #9,  1            // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
      26: aload_1
      27: areturn

  public java.lang.Object get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object put(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #11,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: astore_3
      12: aload_3
      13: ifnull        18
      16: aload_3
      17: areturn
      18: aload_2
      19: areturn
}
