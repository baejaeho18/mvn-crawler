Compiled from "ThreadLocalScopeCache.java"
public class org.springframework.cloud.context.scope.thread.ThreadLocalScopeCache implements org.springframework.cloud.context.scope.ScopeCache {
  private java.lang.ThreadLocal<java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.Object>> data;

  public org.springframework.cloud.context.scope.thread.ThreadLocalScopeCache();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/cloud/context/scope/thread/ThreadLocalScopeCache$1
       8: dup
       9: aload_0
      10: invokespecial #3                  // Method org/springframework/cloud/context/scope/thread/ThreadLocalScopeCache$1."<init>":(Lorg/springframework/cloud/context/scope/thread/ThreadLocalScopeCache;)V
      13: putfield      #4                  // Field data:Ljava/lang/ThreadLocal;
      16: return

  public java.lang.Object remove(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:Ljava/lang/ThreadLocal;
       4: invokevirtual #5                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #6                  // class java/util/concurrent/ConcurrentMap
      10: aload_1
      11: invokeinterface #7,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn

  public java.util.Collection<java.lang.Object> clear();
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:Ljava/lang/ThreadLocal;
       4: invokevirtual #5                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #6                  // class java/util/concurrent/ConcurrentMap
      10: astore_1
      11: new           #8                  // class java/util/ArrayList
      14: dup
      15: aload_1
      16: invokeinterface #9,  1            // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      21: invokespecial #10                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      24: astore_2
      25: aload_1
      26: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
      31: aload_2
      32: areturn

  public java.lang.Object get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:Ljava/lang/ThreadLocal;
       4: invokevirtual #5                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #6                  // class java/util/concurrent/ConcurrentMap
      10: aload_1
      11: invokeinterface #12,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn

  public java.lang.Object put(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:Ljava/lang/ThreadLocal;
       4: invokevirtual #5                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #6                  // class java/util/concurrent/ConcurrentMap
      10: aload_1
      11: aload_2
      12: invokeinterface #13,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: astore_3
      18: aload_3
      19: ifnull        24
      22: aload_3
      23: areturn
      24: aload_2
      25: areturn
}
