Compiled from "TraceZuulHandlerMappingBeanPostProcessor.java"
class org.springframework.cloud.sleuth.instrument.zuul.TraceZuulHandlerMappingBeanPostProcessor implements org.springframework.beans.factory.config.BeanPostProcessor {
  private static final org.apache.commons.logging.Log log;

  private final org.springframework.beans.factory.BeanFactory beanFactory;

  public org.springframework.cloud.sleuth.instrument.zuul.TraceZuulHandlerMappingBeanPostProcessor(org.springframework.beans.factory.BeanFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       9: return

  public java.lang.Object postProcessBeforeInitialization(java.lang.Object, java.lang.String) throws org.springframework.beans.BeansException;
    Code:
       0: aload_1
       1: areturn

  public java.lang.Object postProcessAfterInitialization(java.lang.Object, java.lang.String) throws org.springframework.beans.BeansException;
    Code:
       0: aload_1
       1: instanceof    #3                  // class org/springframework/cloud/netflix/zuul/web/ZuulHandlerMapping
       4: ifeq          92
       7: getstatic     #4                  // Field log:Lorg/apache/commons/logging/Log;
      10: invokeinterface #5,  1            // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      15: ifeq          65
      18: getstatic     #4                  // Field log:Lorg/apache/commons/logging/Log;
      21: new           #6                  // class java/lang/StringBuilder
      24: dup
      25: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #8                  // String Attaching trace interceptor to bean [
      30: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_2
      34: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #10                 // String ] of type [
      39: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      46: invokevirtual #12                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      49: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #13                 // String ]
      54: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokeinterface #15,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      65: aload_1
      66: checkcast     #3                  // class org/springframework/cloud/netflix/zuul/web/ZuulHandlerMapping
      69: astore_3
      70: aload_3
      71: iconst_1
      72: anewarray     #16                 // class java/lang/Object
      75: dup
      76: iconst_0
      77: aload_0
      78: getfield      #2                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      81: ldc           #17                 // class brave/spring/webmvc/SpanCustomizingAsyncHandlerInterceptor
      83: invokeinterface #18,  2           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      88: aastore
      89: invokevirtual #19                 // Method org/springframework/cloud/netflix/zuul/web/ZuulHandlerMapping.setInterceptors:([Ljava/lang/Object;)V
      92: aload_1
      93: areturn

  static {};
    Code:
       0: invokestatic  #20                 // Method java/lang/invoke/MethodHandles.lookup:()Ljava/lang/invoke/MethodHandles$Lookup;
       3: invokevirtual #21                 // Method java/lang/invoke/MethodHandles$Lookup.lookupClass:()Ljava/lang/Class;
       6: invokestatic  #22                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       9: putstatic     #4                  // Field log:Lorg/apache/commons/logging/Log;
      12: return
}
