Compiled from "LazyTraceThreadPoolTaskScheduler.java"
class org.springframework.cloud.sleuth.instrument.async.LazyTraceThreadPoolTaskScheduler extends org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler {
  private static final org.apache.commons.logging.Log log;

  private final org.springframework.beans.factory.BeanFactory beanFactory;

  private final org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler delegate;

  private final java.lang.reflect.Method initializeExecutor;

  private final java.lang.reflect.Method createExecutor;

  private final java.lang.reflect.Method cancelRemainingTask;

  private final java.lang.reflect.Method nextThreadName;

  private final java.lang.reflect.Method getDefaultThreadNamePrefix;

  private brave.Tracing tracing;

  private org.springframework.cloud.sleuth.SpanNamer spanNamer;

  org.springframework.cloud.sleuth.instrument.async.LazyTraceThreadPoolTaskScheduler(org.springframework.beans.factory.BeanFactory, org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
      14: aload_0
      15: ldc           #4                  // class org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler
      17: ldc           #5                  // String initializeExecutor
      19: aconst_null
      20: invokestatic  #6                  // Method org/springframework/util/ReflectionUtils.findMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      23: putfield      #7                  // Field initializeExecutor:Ljava/lang/reflect/Method;
      26: aload_0
      27: aload_0
      28: getfield      #7                  // Field initializeExecutor:Ljava/lang/reflect/Method;
      31: invokespecial #8                  // Method makeAccessibleIfNotNull:(Ljava/lang/reflect/Method;)V
      34: aload_0
      35: ldc           #4                  // class org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler
      37: ldc           #9                  // String createExecutor
      39: aconst_null
      40: invokestatic  #6                  // Method org/springframework/util/ReflectionUtils.findMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      43: putfield      #10                 // Field createExecutor:Ljava/lang/reflect/Method;
      46: aload_0
      47: aload_0
      48: getfield      #10                 // Field createExecutor:Ljava/lang/reflect/Method;
      51: invokespecial #8                  // Method makeAccessibleIfNotNull:(Ljava/lang/reflect/Method;)V
      54: aload_0
      55: ldc           #4                  // class org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler
      57: ldc           #11                 // String cancelRemainingTask
      59: aconst_null
      60: invokestatic  #6                  // Method org/springframework/util/ReflectionUtils.findMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      63: putfield      #12                 // Field cancelRemainingTask:Ljava/lang/reflect/Method;
      66: aload_0
      67: aload_0
      68: getfield      #12                 // Field cancelRemainingTask:Ljava/lang/reflect/Method;
      71: invokespecial #8                  // Method makeAccessibleIfNotNull:(Ljava/lang/reflect/Method;)V
      74: aload_0
      75: ldc           #4                  // class org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler
      77: ldc           #13                 // String nextThreadName
      79: aconst_null
      80: invokestatic  #6                  // Method org/springframework/util/ReflectionUtils.findMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      83: putfield      #14                 // Field nextThreadName:Ljava/lang/reflect/Method;
      86: aload_0
      87: aload_0
      88: getfield      #14                 // Field nextThreadName:Ljava/lang/reflect/Method;
      91: invokespecial #8                  // Method makeAccessibleIfNotNull:(Ljava/lang/reflect/Method;)V
      94: aload_0
      95: ldc           #15                 // class org/springframework/util/CustomizableThreadCreator
      97: ldc           #16                 // String getDefaultThreadNamePrefix
      99: aconst_null
     100: invokestatic  #6                  // Method org/springframework/util/ReflectionUtils.findMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
     103: putfield      #17                 // Field getDefaultThreadNamePrefix:Ljava/lang/reflect/Method;
     106: aload_0
     107: aload_0
     108: getfield      #17                 // Field getDefaultThreadNamePrefix:Ljava/lang/reflect/Method;
     111: invokespecial #8                  // Method makeAccessibleIfNotNull:(Ljava/lang/reflect/Method;)V
     114: return

  private void makeAccessibleIfNotNull(java.lang.reflect.Method);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_1
       5: invokestatic  #18                 // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Method;)V
       8: return

  public void setPoolSize(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: iload_1
       5: invokevirtual #19                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.setPoolSize:(I)V
       8: return

  public void setRemoveOnCancelPolicy(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: iload_1
       5: invokevirtual #20                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.setRemoveOnCancelPolicy:(Z)V
       8: return

  public void setErrorHandler(org.springframework.util.ErrorHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: aload_1
       5: invokevirtual #21                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.setErrorHandler:(Lorg/springframework/util/ErrorHandler;)V
       8: return

  public java.util.concurrent.ExecutorService initializeExecutor(java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler);
    Code:
       0: aload_0
       1: getfield      #7                  // Field initializeExecutor:Ljava/lang/reflect/Method;
       4: aload_0
       5: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       8: iconst_2
       9: anewarray     #22                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_0
      15: aload_1
      16: invokespecial #23                 // Method traceThreadFactory:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ThreadFactory;
      19: aastore
      20: dup
      21: iconst_1
      22: aload_2
      23: aastore
      24: invokestatic  #24                 // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #25                 // class java/util/concurrent/ExecutorService
      30: astore_3
      31: aload_3
      32: instanceof    #26                 // class org/springframework/cloud/sleuth/instrument/async/TraceableScheduledExecutorService
      35: ifeq          40
      38: aload_3
      39: areturn
      40: new           #27                 // class org/springframework/cloud/sleuth/instrument/async/TraceableExecutorService
      43: dup
      44: aload_0
      45: getfield      #2                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      48: aload_3
      49: invokespecial #28                 // Method org/springframework/cloud/sleuth/instrument/async/TraceableExecutorService."<init>":(Lorg/springframework/beans/factory/BeanFactory;Ljava/util/concurrent/ExecutorService;)V
      52: areturn

  private java.util.concurrent.ThreadFactory traceThreadFactory(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #29,  0             // InvokeDynamic #0:newThread:(Lorg/springframework/cloud/sleuth/instrument/async/LazyTraceThreadPoolTaskScheduler;Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ThreadFactory;
       7: areturn

  public java.util.concurrent.ScheduledExecutorService createExecutor(int, java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler);
    Code:
       0: aload_0
       1: getfield      #10                 // Field createExecutor:Ljava/lang/reflect/Method;
       4: aload_0
       5: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       8: iconst_3
       9: anewarray     #22                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: iload_1
      15: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      18: aastore
      19: dup
      20: iconst_1
      21: aload_0
      22: aload_2
      23: invokespecial #23                 // Method traceThreadFactory:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ThreadFactory;
      26: aastore
      27: dup
      28: iconst_2
      29: aload_3
      30: aastore
      31: invokestatic  #24                 // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #31                 // class java/util/concurrent/ScheduledExecutorService
      37: astore        4
      39: aload         4
      41: instanceof    #26                 // class org/springframework/cloud/sleuth/instrument/async/TraceableScheduledExecutorService
      44: ifeq          50
      47: aload         4
      49: areturn
      50: new           #26                 // class org/springframework/cloud/sleuth/instrument/async/TraceableScheduledExecutorService
      53: dup
      54: aload_0
      55: getfield      #2                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      58: aload         4
      60: invokespecial #32                 // Method org/springframework/cloud/sleuth/instrument/async/TraceableScheduledExecutorService."<init>":(Lorg/springframework/beans/factory/BeanFactory;Ljava/util/concurrent/ExecutorService;)V
      63: areturn

  public java.util.concurrent.ScheduledExecutorService getScheduledExecutor() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: invokevirtual #33                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.getScheduledExecutor:()Ljava/util/concurrent/ScheduledExecutorService;
       7: astore_1
       8: aload_1
       9: instanceof    #26                 // class org/springframework/cloud/sleuth/instrument/async/TraceableScheduledExecutorService
      12: ifeq          19
      15: aload_1
      16: goto          31
      19: new           #26                 // class org/springframework/cloud/sleuth/instrument/async/TraceableScheduledExecutorService
      22: dup
      23: aload_0
      24: getfield      #2                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      27: aload_1
      28: invokespecial #32                 // Method org/springframework/cloud/sleuth/instrument/async/TraceableScheduledExecutorService."<init>":(Lorg/springframework/beans/factory/BeanFactory;Ljava/util/concurrent/ExecutorService;)V
      31: areturn

  public java.util.concurrent.ScheduledThreadPoolExecutor getScheduledThreadPoolExecutor() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: invokevirtual #34                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.getScheduledThreadPoolExecutor:()Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       7: astore_1
       8: aload_1
       9: instanceof    #35                 // class org/springframework/cloud/sleuth/instrument/async/LazyTraceScheduledThreadPoolExecutor
      12: ifeq          17
      15: aload_1
      16: areturn
      17: new           #35                 // class org/springframework/cloud/sleuth/instrument/async/LazyTraceScheduledThreadPoolExecutor
      20: dup
      21: aload_1
      22: invokevirtual #36                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getCorePoolSize:()I
      25: aload_1
      26: invokevirtual #37                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getThreadFactory:()Ljava/util/concurrent/ThreadFactory;
      29: aload_1
      30: invokevirtual #38                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getRejectedExecutionHandler:()Ljava/util/concurrent/RejectedExecutionHandler;
      33: aload_0
      34: getfield      #2                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      37: aload_1
      38: invokespecial #39                 // Method org/springframework/cloud/sleuth/instrument/async/LazyTraceScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;Lorg/springframework/beans/factory/BeanFactory;Ljava/util/concurrent/ScheduledThreadPoolExecutor;)V
      41: areturn

  public int getPoolSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: invokevirtual #40                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.getPoolSize:()I
       7: ireturn

  public boolean isRemoveOnCancelPolicy();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: invokevirtual #41                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.isRemoveOnCancelPolicy:()Z
       7: ireturn

  public int getActiveCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: invokevirtual #42                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.getActiveCount:()I
       7: ireturn

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: aload_1
       5: invokevirtual #43                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.execute:(Ljava/lang/Runnable;)V
       8: return

  public void execute(java.lang.Runnable, long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: new           #44                 // class org/springframework/cloud/sleuth/instrument/async/TraceRunnable
       7: dup
       8: aload_0
       9: invokespecial #45                 // Method tracing:()Lbrave/Tracing;
      12: aload_0
      13: invokespecial #46                 // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      16: aload_1
      17: invokespecial #47                 // Method org/springframework/cloud/sleuth/instrument/async/TraceRunnable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/lang/Runnable;)V
      20: lload_2
      21: invokevirtual #48                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.execute:(Ljava/lang/Runnable;J)V
      24: return

  public java.util.concurrent.Future<?> submit(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: new           #44                 // class org/springframework/cloud/sleuth/instrument/async/TraceRunnable
       7: dup
       8: aload_0
       9: invokespecial #45                 // Method tracing:()Lbrave/Tracing;
      12: aload_0
      13: invokespecial #46                 // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      16: aload_1
      17: invokespecial #47                 // Method org/springframework/cloud/sleuth/instrument/async/TraceRunnable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/lang/Runnable;)V
      20: invokevirtual #49                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      23: areturn

  public <T> java.util.concurrent.Future<T> submit(java.util.concurrent.Callable<T>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: new           #50                 // class org/springframework/cloud/sleuth/instrument/async/TraceCallable
       7: dup
       8: aload_0
       9: invokespecial #45                 // Method tracing:()Lbrave/Tracing;
      12: aload_0
      13: invokespecial #46                 // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      16: aload_1
      17: invokespecial #51                 // Method org/springframework/cloud/sleuth/instrument/async/TraceCallable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/util/concurrent/Callable;)V
      20: invokevirtual #52                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      23: areturn

  public org.springframework.util.concurrent.ListenableFuture<?> submitListenable(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: new           #44                 // class org/springframework/cloud/sleuth/instrument/async/TraceRunnable
       7: dup
       8: aload_0
       9: invokespecial #45                 // Method tracing:()Lbrave/Tracing;
      12: aload_0
      13: invokespecial #46                 // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      16: aload_1
      17: invokespecial #47                 // Method org/springframework/cloud/sleuth/instrument/async/TraceRunnable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/lang/Runnable;)V
      20: invokevirtual #53                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.submitListenable:(Ljava/lang/Runnable;)Lorg/springframework/util/concurrent/ListenableFuture;
      23: areturn

  public <T> org.springframework.util.concurrent.ListenableFuture<T> submitListenable(java.util.concurrent.Callable<T>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: new           #50                 // class org/springframework/cloud/sleuth/instrument/async/TraceCallable
       7: dup
       8: aload_0
       9: invokespecial #45                 // Method tracing:()Lbrave/Tracing;
      12: aload_0
      13: invokespecial #46                 // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      16: aload_1
      17: invokespecial #51                 // Method org/springframework/cloud/sleuth/instrument/async/TraceCallable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/util/concurrent/Callable;)V
      20: invokevirtual #54                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.submitListenable:(Ljava/util/concurrent/Callable;)Lorg/springframework/util/concurrent/ListenableFuture;
      23: areturn

  public void cancelRemainingTask(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #12                 // Field cancelRemainingTask:Ljava/lang/reflect/Method;
       4: aload_0
       5: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       8: iconst_1
       9: anewarray     #22                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: new           #44                 // class org/springframework/cloud/sleuth/instrument/async/TraceRunnable
      17: dup
      18: aload_0
      19: invokespecial #45                 // Method tracing:()Lbrave/Tracing;
      22: aload_0
      23: invokespecial #46                 // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      26: aload_1
      27: invokespecial #47                 // Method org/springframework/cloud/sleuth/instrument/async/TraceRunnable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/lang/Runnable;)V
      30: aastore
      31: invokestatic  #24                 // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: return

  public boolean prefersShortLivedTasks();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: invokevirtual #55                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.prefersShortLivedTasks:()Z
       7: ireturn

  public java.util.concurrent.ScheduledFuture<?> schedule(java.lang.Runnable, org.springframework.scheduling.Trigger);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: new           #44                 // class org/springframework/cloud/sleuth/instrument/async/TraceRunnable
       7: dup
       8: aload_0
       9: invokespecial #45                 // Method tracing:()Lbrave/Tracing;
      12: aload_0
      13: invokespecial #46                 // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      16: aload_1
      17: invokespecial #47                 // Method org/springframework/cloud/sleuth/instrument/async/TraceRunnable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/lang/Runnable;)V
      20: aload_2
      21: invokevirtual #56                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.schedule:(Ljava/lang/Runnable;Lorg/springframework/scheduling/Trigger;)Ljava/util/concurrent/ScheduledFuture;
      24: areturn

  public java.util.concurrent.ScheduledFuture<?> schedule(java.lang.Runnable, java.util.Date);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: new           #44                 // class org/springframework/cloud/sleuth/instrument/async/TraceRunnable
       7: dup
       8: aload_0
       9: invokespecial #45                 // Method tracing:()Lbrave/Tracing;
      12: aload_0
      13: invokespecial #46                 // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      16: aload_1
      17: invokespecial #47                 // Method org/springframework/cloud/sleuth/instrument/async/TraceRunnable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/lang/Runnable;)V
      20: aload_2
      21: invokevirtual #57                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.schedule:(Ljava/lang/Runnable;Ljava/util/Date;)Ljava/util/concurrent/ScheduledFuture;
      24: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleAtFixedRate(java.lang.Runnable, java.util.Date, long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: new           #44                 // class org/springframework/cloud/sleuth/instrument/async/TraceRunnable
       7: dup
       8: aload_0
       9: invokespecial #45                 // Method tracing:()Lbrave/Tracing;
      12: aload_0
      13: invokespecial #46                 // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      16: aload_1
      17: invokespecial #47                 // Method org/springframework/cloud/sleuth/instrument/async/TraceRunnable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/lang/Runnable;)V
      20: aload_2
      21: lload_3
      22: invokevirtual #58                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.scheduleAtFixedRate:(Ljava/lang/Runnable;Ljava/util/Date;J)Ljava/util/concurrent/ScheduledFuture;
      25: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleAtFixedRate(java.lang.Runnable, long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: new           #44                 // class org/springframework/cloud/sleuth/instrument/async/TraceRunnable
       7: dup
       8: aload_0
       9: invokespecial #45                 // Method tracing:()Lbrave/Tracing;
      12: aload_0
      13: invokespecial #46                 // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      16: aload_1
      17: invokespecial #47                 // Method org/springframework/cloud/sleuth/instrument/async/TraceRunnable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/lang/Runnable;)V
      20: lload_2
      21: invokevirtual #59                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.scheduleAtFixedRate:(Ljava/lang/Runnable;J)Ljava/util/concurrent/ScheduledFuture;
      24: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleWithFixedDelay(java.lang.Runnable, java.util.Date, long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: new           #44                 // class org/springframework/cloud/sleuth/instrument/async/TraceRunnable
       7: dup
       8: aload_0
       9: invokespecial #45                 // Method tracing:()Lbrave/Tracing;
      12: aload_0
      13: invokespecial #46                 // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      16: aload_1
      17: invokespecial #47                 // Method org/springframework/cloud/sleuth/instrument/async/TraceRunnable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/lang/Runnable;)V
      20: aload_2
      21: lload_3
      22: invokevirtual #60                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.scheduleWithFixedDelay:(Ljava/lang/Runnable;Ljava/util/Date;J)Ljava/util/concurrent/ScheduledFuture;
      25: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleWithFixedDelay(java.lang.Runnable, long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: new           #44                 // class org/springframework/cloud/sleuth/instrument/async/TraceRunnable
       7: dup
       8: aload_0
       9: invokespecial #45                 // Method tracing:()Lbrave/Tracing;
      12: aload_0
      13: invokespecial #46                 // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      16: aload_1
      17: invokespecial #47                 // Method org/springframework/cloud/sleuth/instrument/async/TraceRunnable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/lang/Runnable;)V
      20: lload_2
      21: invokevirtual #61                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.scheduleWithFixedDelay:(Ljava/lang/Runnable;J)Ljava/util/concurrent/ScheduledFuture;
      24: areturn

  public void setThreadFactory(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: aload_1
       5: invokevirtual #62                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.setThreadFactory:(Ljava/util/concurrent/ThreadFactory;)V
       8: return

  public void setThreadNamePrefix(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: aload_1
       5: invokevirtual #63                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.setThreadNamePrefix:(Ljava/lang/String;)V
       8: return

  public void setRejectedExecutionHandler(java.util.concurrent.RejectedExecutionHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: aload_1
       5: invokevirtual #64                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.setRejectedExecutionHandler:(Ljava/util/concurrent/RejectedExecutionHandler;)V
       8: return

  public void setWaitForTasksToCompleteOnShutdown(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: iload_1
       5: invokevirtual #65                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.setWaitForTasksToCompleteOnShutdown:(Z)V
       8: return

  public void setAwaitTerminationSeconds(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: iload_1
       5: invokevirtual #66                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.setAwaitTerminationSeconds:(I)V
       8: return

  public void setBeanName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: aload_1
       5: invokevirtual #67                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.setBeanName:(Ljava/lang/String;)V
       8: return

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: invokevirtual #68                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.afterPropertiesSet:()V
       7: return

  public void initialize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: invokevirtual #69                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.initialize:()V
       7: return

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: invokevirtual #70                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.destroy:()V
       7: return

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: invokevirtual #71                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.shutdown:()V
       7: return

  public java.lang.Thread newThread(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: aload_1
       5: invokevirtual #72                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
       8: areturn

  public java.lang.String getThreadNamePrefix();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: invokevirtual #73                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.getThreadNamePrefix:()Ljava/lang/String;
       7: areturn

  public void setThreadPriority(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: iload_1
       5: invokevirtual #74                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.setThreadPriority:(I)V
       8: return

  public int getThreadPriority();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: invokevirtual #75                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.getThreadPriority:()I
       7: ireturn

  public void setDaemon(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: iload_1
       5: invokevirtual #76                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.setDaemon:(Z)V
       8: return

  public boolean isDaemon();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: invokevirtual #77                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.isDaemon:()Z
       7: ireturn

  public void setThreadGroupName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: aload_1
       5: invokevirtual #78                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.setThreadGroupName:(Ljava/lang/String;)V
       8: return

  public void setThreadGroup(java.lang.ThreadGroup);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: aload_1
       5: invokevirtual #79                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.setThreadGroup:(Ljava/lang/ThreadGroup;)V
       8: return

  public java.lang.ThreadGroup getThreadGroup();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: invokevirtual #80                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.getThreadGroup:()Ljava/lang/ThreadGroup;
       7: areturn

  public java.lang.Thread createThread(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: aload_1
       5: invokevirtual #81                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.createThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
       8: areturn

  public java.lang.String nextThreadName();
    Code:
       0: aload_0
       1: getfield      #14                 // Field nextThreadName:Ljava/lang/reflect/Method;
       4: aload_0
       5: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       8: invokestatic  #82                 // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #83                 // class java/lang/String
      14: areturn

  public java.lang.String getDefaultThreadNamePrefix();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: ifnonnull     12
       7: aload_0
       8: invokespecial #84                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.getDefaultThreadNamePrefix:()Ljava/lang/String;
      11: areturn
      12: aload_0
      13: getfield      #17                 // Field getDefaultThreadNamePrefix:Ljava/lang/reflect/Method;
      16: aload_0
      17: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
      20: invokestatic  #82                 // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #83                 // class java/lang/String
      26: areturn

  public java.util.concurrent.ScheduledFuture<?> schedule(java.lang.Runnable, java.time.Instant);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: new           #44                 // class org/springframework/cloud/sleuth/instrument/async/TraceRunnable
       7: dup
       8: aload_0
       9: invokespecial #45                 // Method tracing:()Lbrave/Tracing;
      12: aload_0
      13: invokespecial #46                 // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      16: aload_1
      17: invokespecial #47                 // Method org/springframework/cloud/sleuth/instrument/async/TraceRunnable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/lang/Runnable;)V
      20: aload_2
      21: invokevirtual #85                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.schedule:(Ljava/lang/Runnable;Ljava/time/Instant;)Ljava/util/concurrent/ScheduledFuture;
      24: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleAtFixedRate(java.lang.Runnable, java.time.Instant, java.time.Duration);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: new           #44                 // class org/springframework/cloud/sleuth/instrument/async/TraceRunnable
       7: dup
       8: aload_0
       9: invokespecial #45                 // Method tracing:()Lbrave/Tracing;
      12: aload_0
      13: invokespecial #46                 // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      16: aload_1
      17: invokespecial #47                 // Method org/springframework/cloud/sleuth/instrument/async/TraceRunnable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/lang/Runnable;)V
      20: aload_2
      21: aload_3
      22: invokevirtual #86                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.scheduleAtFixedRate:(Ljava/lang/Runnable;Ljava/time/Instant;Ljava/time/Duration;)Ljava/util/concurrent/ScheduledFuture;
      25: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleAtFixedRate(java.lang.Runnable, java.time.Duration);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: new           #44                 // class org/springframework/cloud/sleuth/instrument/async/TraceRunnable
       7: dup
       8: aload_0
       9: invokespecial #45                 // Method tracing:()Lbrave/Tracing;
      12: aload_0
      13: invokespecial #46                 // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      16: aload_1
      17: invokespecial #47                 // Method org/springframework/cloud/sleuth/instrument/async/TraceRunnable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/lang/Runnable;)V
      20: aload_2
      21: invokevirtual #87                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.scheduleAtFixedRate:(Ljava/lang/Runnable;Ljava/time/Duration;)Ljava/util/concurrent/ScheduledFuture;
      24: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleWithFixedDelay(java.lang.Runnable, java.time.Instant, java.time.Duration);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: new           #44                 // class org/springframework/cloud/sleuth/instrument/async/TraceRunnable
       7: dup
       8: aload_0
       9: invokespecial #45                 // Method tracing:()Lbrave/Tracing;
      12: aload_0
      13: invokespecial #46                 // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      16: aload_1
      17: invokespecial #47                 // Method org/springframework/cloud/sleuth/instrument/async/TraceRunnable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/lang/Runnable;)V
      20: aload_2
      21: aload_3
      22: invokevirtual #88                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.scheduleWithFixedDelay:(Ljava/lang/Runnable;Ljava/time/Instant;Ljava/time/Duration;)Ljava/util/concurrent/ScheduledFuture;
      25: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleWithFixedDelay(java.lang.Runnable, java.time.Duration);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
       4: new           #44                 // class org/springframework/cloud/sleuth/instrument/async/TraceRunnable
       7: dup
       8: aload_0
       9: invokespecial #45                 // Method tracing:()Lbrave/Tracing;
      12: aload_0
      13: invokespecial #46                 // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      16: aload_1
      17: invokespecial #47                 // Method org/springframework/cloud/sleuth/instrument/async/TraceRunnable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/lang/Runnable;)V
      20: aload_2
      21: invokevirtual #89                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.scheduleWithFixedDelay:(Ljava/lang/Runnable;Ljava/time/Duration;)Ljava/util/concurrent/ScheduledFuture;
      24: areturn

  private brave.Tracing tracing();
    Code:
       0: aload_0
       1: getfield      #90                 // Field tracing:Lbrave/Tracing;
       4: ifnonnull     25
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      12: ldc           #91                 // class brave/Tracing
      14: invokeinterface #92,  2           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      19: checkcast     #91                 // class brave/Tracing
      22: putfield      #90                 // Field tracing:Lbrave/Tracing;
      25: aload_0
      26: getfield      #90                 // Field tracing:Lbrave/Tracing;
      29: areturn

  private org.springframework.cloud.sleuth.SpanNamer spanNamer();
    Code:
       0: aload_0
       1: getfield      #93                 // Field spanNamer:Lorg/springframework/cloud/sleuth/SpanNamer;
       4: ifnonnull     47
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      12: ldc           #94                 // class org/springframework/cloud/sleuth/SpanNamer
      14: invokeinterface #92,  2           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      19: checkcast     #94                 // class org/springframework/cloud/sleuth/SpanNamer
      22: putfield      #93                 // Field spanNamer:Lorg/springframework/cloud/sleuth/SpanNamer;
      25: goto          47
      28: astore_1
      29: getstatic     #96                 // Field log:Lorg/apache/commons/logging/Log;
      32: ldc           #97                 // String SpanNamer bean not found - will provide a manually created instance
      34: invokeinterface #98,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      39: new           #99                 // class org/springframework/cloud/sleuth/DefaultSpanNamer
      42: dup
      43: invokespecial #100                // Method org/springframework/cloud/sleuth/DefaultSpanNamer."<init>":()V
      46: areturn
      47: aload_0
      48: getfield      #93                 // Field spanNamer:Lorg/springframework/cloud/sleuth/SpanNamer;
      51: areturn
    Exception table:
       from    to  target type
           7    25    28   Class org/springframework/beans/factory/NoSuchBeanDefinitionException

  private java.lang.Thread lambda$traceThreadFactory$0(java.util.concurrent.ThreadFactory, java.lang.Runnable);
    Code:
       0: aload_1
       1: new           #44                 // class org/springframework/cloud/sleuth/instrument/async/TraceRunnable
       4: dup
       5: aload_0
       6: invokespecial #45                 // Method tracing:()Lbrave/Tracing;
       9: aload_0
      10: invokespecial #46                 // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      13: aload_2
      14: invokespecial #47                 // Method org/springframework/cloud/sleuth/instrument/async/TraceRunnable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/lang/Runnable;)V
      17: invokeinterface #101,  2          // InterfaceMethod java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
      22: areturn

  static {};
    Code:
       0: ldc           #102                // class org/springframework/cloud/sleuth/instrument/async/LazyTraceThreadPoolTaskScheduler
       2: invokestatic  #103                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #96                 // Field log:Lorg/apache/commons/logging/Log;
       8: return
}
