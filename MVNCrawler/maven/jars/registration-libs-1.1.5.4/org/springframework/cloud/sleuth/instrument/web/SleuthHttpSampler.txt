Compiled from "SleuthHttpSampler.java"
class org.springframework.cloud.sleuth.instrument.web.SleuthHttpSampler extends brave.http.HttpSampler {
  private final java.util.regex.Pattern pattern;

  org.springframework.cloud.sleuth.instrument.web.SleuthHttpSampler(org.springframework.cloud.sleuth.instrument.web.SkipPatternProvider);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method brave/http/HttpSampler."<init>":()V
       4: aload_0
       5: aload_1
       6: invokeinterface #2,  1            // InterfaceMethod org/springframework/cloud/sleuth/instrument/web/SkipPatternProvider.skipPattern:()Ljava/util/regex/Pattern;
      11: putfield      #3                  // Field pattern:Ljava/util/regex/Pattern;
      14: return

  public <Req> java.lang.Boolean trySample(brave.http.HttpAdapter<Req, ?>, Req);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #4                  // Method brave/http/HttpAdapter.path:(Ljava/lang/Object;)Ljava/lang/String;
       5: astore_3
       6: aload_0
       7: getfield      #3                  // Field pattern:Ljava/util/regex/Pattern;
      10: aload_3
      11: invokevirtual #5                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      14: invokevirtual #6                  // Method java/util/regex/Matcher.matches:()Z
      17: istore        4
      19: iload         4
      21: ifeq          29
      24: iconst_0
      25: invokestatic  #7                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      28: areturn
      29: aconst_null
      30: areturn
}
