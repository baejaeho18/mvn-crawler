Compiled from "TraceWebAutoConfiguration.java"
public class org.springframework.cloud.sleuth.instrument.web.TraceWebAutoConfiguration {
  public org.springframework.cloud.sleuth.instrument.web.TraceWebAutoConfiguration();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: return

  public org.springframework.cloud.sleuth.instrument.web.SkipPatternProvider defaultSkipPatternBean(org.springframework.cloud.sleuth.instrument.web.SleuthWebProperties);
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method org/springframework/cloud/sleuth/instrument/web/SleuthWebProperties.getSkipPattern:()Ljava/lang/String;
       4: aload_1
       5: invokevirtual #6                  // Method org/springframework/cloud/sleuth/instrument/web/SleuthWebProperties.getAdditionalSkipPattern:()Ljava/lang/String;
       8: invokestatic  #1                  // Method defaultSkipPatternProvider:(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/cloud/sleuth/instrument/web/SkipPatternProvider;
      11: areturn

  private static org.springframework.cloud.sleuth.instrument.web.SkipPatternProvider defaultSkipPatternProvider(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #7,  0              // InvokeDynamic #0:skipPattern:(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/cloud/sleuth/instrument/web/SkipPatternProvider;
       7: areturn

  private static java.util.regex.Pattern defaultSkipPattern(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method combinedPattern:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       5: invokestatic  #8                  // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       8: areturn

  private static java.lang.String combinedPattern(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: astore_2
       2: aload_0
       3: invokestatic  #9                  // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       6: ifne          12
       9: ldc           #11                 // String /api-docs.*|/autoconfig|/configprops|/dump|/health|/info|/metrics.*|/mappings|/trace|/swagger.*|.*\\.png|.*\\.css|.*\\.js|.*\\.html|/favicon.ico|/hystrix.stream|/application/.*|/actuator.*|/cloudfoundryapplication
      11: astore_2
      12: aload_1
      13: invokestatic  #9                  // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      16: ifeq          43
      19: new           #12                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      26: aload_2
      27: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #15                 // String |
      32: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: areturn
      43: aload_2
      44: areturn

  private static java.util.regex.Pattern lambda$defaultSkipPatternProvider$0(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method defaultSkipPattern:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: areturn

  static java.lang.String access$000(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method combinedPattern:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  static java.util.regex.Pattern access$100(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method defaultSkipPattern:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: areturn

  static org.springframework.cloud.sleuth.instrument.web.SkipPatternProvider access$200(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method defaultSkipPatternProvider:(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/cloud/sleuth/instrument/web/SkipPatternProvider;
       5: areturn
}
