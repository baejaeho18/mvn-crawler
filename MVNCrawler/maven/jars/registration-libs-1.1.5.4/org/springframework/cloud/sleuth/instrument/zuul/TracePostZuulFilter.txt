Compiled from "TracePostZuulFilter.java"
class org.springframework.cloud.sleuth.instrument.zuul.TracePostZuulFilter extends com.netflix.zuul.ZuulFilter {
  private static final org.apache.commons.logging.Log log;

  private final brave.http.HttpServerHandler handler;

  private final brave.Tracer tracer;

  org.springframework.cloud.sleuth.instrument.zuul.TracePostZuulFilter(brave.http.HttpTracing);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/netflix/zuul/ZuulFilter."<init>":()V
       4: aload_0
       5: aload_1
       6: new           #2                  // class brave/servlet/HttpServletAdapter
       9: dup
      10: invokespecial #3                  // Method brave/servlet/HttpServletAdapter."<init>":()V
      13: invokestatic  #4                  // Method brave/http/HttpServerHandler.create:(Lbrave/http/HttpTracing;Lbrave/http/HttpServerAdapter;)Lbrave/http/HttpServerHandler;
      16: putfield      #5                  // Field handler:Lbrave/http/HttpServerHandler;
      19: aload_0
      20: aload_1
      21: invokevirtual #6                  // Method brave/http/HttpTracing.tracing:()Lbrave/Tracing;
      24: invokevirtual #7                  // Method brave/Tracing.tracer:()Lbrave/Tracer;
      27: putfield      #8                  // Field tracer:Lbrave/Tracer;
      30: return

  public boolean shouldFilter();
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method com/netflix/zuul/context/RequestContext.getCurrentContext:()Lcom/netflix/zuul/context/RequestContext;
       4: invokevirtual #10                 // Method com/netflix/zuul/context/RequestContext.getResponse:()Ljavax/servlet/http/HttpServletResponse;
       7: invokespecial #11                 // Method httpStatusSuccessful:(Ljavax/servlet/http/HttpServletResponse;)Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  private boolean httpStatusSuccessful(javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_1
       1: invokeinterface #12,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getStatus:()I
       6: ifne          11
       9: iconst_0
      10: ireturn
      11: aload_1
      12: invokeinterface #12,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getStatus:()I
      17: invokestatic  #13                 // Method org/springframework/http/HttpStatus$Series.valueOf:(I)Lorg/springframework/http/HttpStatus$Series;
      20: astore_2
      21: aload_2
      22: getstatic     #14                 // Field org/springframework/http/HttpStatus$Series.SUCCESSFUL:Lorg/springframework/http/HttpStatus$Series;
      25: if_acmpeq     35
      28: aload_2
      29: getstatic     #15                 // Field org/springframework/http/HttpStatus$Series.REDIRECTION:Lorg/springframework/http/HttpStatus$Series;
      32: if_acmpne     39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn

  public java.lang.Object run();
    Code:
       0: getstatic     #16                 // Field log:Lorg/apache/commons/logging/Log;
       3: invokeinterface #17,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       8: ifeq          21
      11: getstatic     #16                 // Field log:Lorg/apache/commons/logging/Log;
      14: ldc           #18                 // String Marking current span as handled
      16: invokeinterface #19,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      21: invokestatic  #9                  // Method com/netflix/zuul/context/RequestContext.getCurrentContext:()Lcom/netflix/zuul/context/RequestContext;
      24: invokevirtual #10                 // Method com/netflix/zuul/context/RequestContext.getResponse:()Ljavax/servlet/http/HttpServletResponse;
      27: astore_1
      28: invokestatic  #9                  // Method com/netflix/zuul/context/RequestContext.getCurrentContext:()Lcom/netflix/zuul/context/RequestContext;
      31: invokevirtual #20                 // Method com/netflix/zuul/context/RequestContext.getThrowable:()Ljava/lang/Throwable;
      34: astore_2
      35: aload_0
      36: getfield      #8                  // Field tracer:Lbrave/Tracer;
      39: invokevirtual #21                 // Method brave/Tracer.currentSpan:()Lbrave/Span;
      42: astore_3
      43: aload_0
      44: getfield      #5                  // Field handler:Lbrave/http/HttpServerHandler;
      47: aload_1
      48: aload_2
      49: aload_3
      50: invokevirtual #22                 // Method brave/http/HttpServerHandler.handleSend:(Ljava/lang/Object;Ljava/lang/Throwable;Lbrave/Span;)V
      53: getstatic     #16                 // Field log:Lorg/apache/commons/logging/Log;
      56: invokeinterface #17,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      61: ifeq          91
      64: getstatic     #16                 // Field log:Lorg/apache/commons/logging/Log;
      67: new           #23                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #25                 // String Handled send of
      76: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_3
      80: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      83: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokeinterface #19,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      91: aconst_null
      92: areturn

  public java.lang.String filterType();
    Code:
       0: ldc           #29                 // String post
       2: areturn

  public int filterOrder();
    Code:
       0: iconst_0
       1: ireturn

  static {};
    Code:
       0: ldc           #30                 // class org/springframework/cloud/sleuth/instrument/zuul/TracePostZuulFilter
       2: invokestatic  #31                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #16                 // Field log:Lorg/apache/commons/logging/Log;
       8: return
}
