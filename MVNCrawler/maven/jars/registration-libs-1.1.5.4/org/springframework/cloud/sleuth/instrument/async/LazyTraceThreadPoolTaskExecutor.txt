Compiled from "LazyTraceThreadPoolTaskExecutor.java"
public class org.springframework.cloud.sleuth.instrument.async.LazyTraceThreadPoolTaskExecutor extends org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor {
  private static final org.apache.commons.logging.Log log;

  private final org.springframework.beans.factory.BeanFactory beanFactory;

  private final org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor delegate;

  private brave.Tracing tracing;

  private org.springframework.cloud.sleuth.SpanNamer spanNamer;

  public org.springframework.cloud.sleuth.instrument.async.LazyTraceThreadPoolTaskExecutor(org.springframework.beans.factory.BeanFactory, org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
      14: return

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: new           #4                  // class org/springframework/cloud/sleuth/instrument/async/TraceRunnable
       7: dup
       8: aload_0
       9: invokespecial #5                  // Method tracing:()Lbrave/Tracing;
      12: aload_0
      13: invokespecial #6                  // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      16: aload_1
      17: invokespecial #7                  // Method org/springframework/cloud/sleuth/instrument/async/TraceRunnable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/lang/Runnable;)V
      20: invokevirtual #8                  // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.execute:(Ljava/lang/Runnable;)V
      23: return

  public void execute(java.lang.Runnable, long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: new           #4                  // class org/springframework/cloud/sleuth/instrument/async/TraceRunnable
       7: dup
       8: aload_0
       9: invokespecial #5                  // Method tracing:()Lbrave/Tracing;
      12: aload_0
      13: invokespecial #6                  // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      16: aload_1
      17: invokespecial #7                  // Method org/springframework/cloud/sleuth/instrument/async/TraceRunnable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/lang/Runnable;)V
      20: lload_2
      21: invokevirtual #9                  // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.execute:(Ljava/lang/Runnable;J)V
      24: return

  public java.util.concurrent.Future<?> submit(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: new           #4                  // class org/springframework/cloud/sleuth/instrument/async/TraceRunnable
       7: dup
       8: aload_0
       9: invokespecial #5                  // Method tracing:()Lbrave/Tracing;
      12: aload_0
      13: invokespecial #6                  // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      16: aload_1
      17: invokespecial #7                  // Method org/springframework/cloud/sleuth/instrument/async/TraceRunnable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/lang/Runnable;)V
      20: invokevirtual #10                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      23: areturn

  public <T> java.util.concurrent.Future<T> submit(java.util.concurrent.Callable<T>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: new           #11                 // class org/springframework/cloud/sleuth/instrument/async/TraceCallable
       7: dup
       8: aload_0
       9: invokespecial #5                  // Method tracing:()Lbrave/Tracing;
      12: aload_0
      13: invokespecial #6                  // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      16: aload_1
      17: invokespecial #12                 // Method org/springframework/cloud/sleuth/instrument/async/TraceCallable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/util/concurrent/Callable;)V
      20: invokevirtual #13                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      23: areturn

  public org.springframework.util.concurrent.ListenableFuture<?> submitListenable(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: new           #4                  // class org/springframework/cloud/sleuth/instrument/async/TraceRunnable
       7: dup
       8: aload_0
       9: invokespecial #5                  // Method tracing:()Lbrave/Tracing;
      12: aload_0
      13: invokespecial #6                  // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      16: aload_1
      17: invokespecial #7                  // Method org/springframework/cloud/sleuth/instrument/async/TraceRunnable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/lang/Runnable;)V
      20: invokevirtual #14                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.submitListenable:(Ljava/lang/Runnable;)Lorg/springframework/util/concurrent/ListenableFuture;
      23: areturn

  public <T> org.springframework.util.concurrent.ListenableFuture<T> submitListenable(java.util.concurrent.Callable<T>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: new           #11                 // class org/springframework/cloud/sleuth/instrument/async/TraceCallable
       7: dup
       8: aload_0
       9: invokespecial #5                  // Method tracing:()Lbrave/Tracing;
      12: aload_0
      13: invokespecial #6                  // Method spanNamer:()Lorg/springframework/cloud/sleuth/SpanNamer;
      16: aload_1
      17: invokespecial #12                 // Method org/springframework/cloud/sleuth/instrument/async/TraceCallable."<init>":(Lbrave/Tracing;Lorg/springframework/cloud/sleuth/SpanNamer;Ljava/util/concurrent/Callable;)V
      20: invokevirtual #15                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.submitListenable:(Ljava/util/concurrent/Callable;)Lorg/springframework/util/concurrent/ListenableFuture;
      23: areturn

  public boolean prefersShortLivedTasks();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: invokevirtual #16                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.prefersShortLivedTasks:()Z
       7: ireturn

  public void setThreadFactory(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: aload_1
       5: invokevirtual #17                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setThreadFactory:(Ljava/util/concurrent/ThreadFactory;)V
       8: return

  public void setThreadNamePrefix(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: aload_1
       5: invokevirtual #18                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setThreadNamePrefix:(Ljava/lang/String;)V
       8: return

  public void setRejectedExecutionHandler(java.util.concurrent.RejectedExecutionHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: aload_1
       5: invokevirtual #19                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setRejectedExecutionHandler:(Ljava/util/concurrent/RejectedExecutionHandler;)V
       8: return

  public void setWaitForTasksToCompleteOnShutdown(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: iload_1
       5: invokevirtual #20                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setWaitForTasksToCompleteOnShutdown:(Z)V
       8: return

  public void setAwaitTerminationSeconds(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: iload_1
       5: invokevirtual #21                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setAwaitTerminationSeconds:(I)V
       8: return

  public void setBeanName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: aload_1
       5: invokevirtual #22                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setBeanName:(Ljava/lang/String;)V
       8: return

  public java.util.concurrent.ThreadPoolExecutor getThreadPoolExecutor() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: invokevirtual #23                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.getThreadPoolExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
       7: areturn

  public int getPoolSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: invokevirtual #24                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.getPoolSize:()I
       7: ireturn

  public int getActiveCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: invokevirtual #25                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.getActiveCount:()I
       7: ireturn

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: invokevirtual #26                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.destroy:()V
       7: aload_0
       8: invokespecial #26                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.destroy:()V
      11: return

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: invokevirtual #27                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.afterPropertiesSet:()V
       7: aload_0
       8: invokespecial #27                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.afterPropertiesSet:()V
      11: return

  public void initialize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: invokevirtual #28                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.initialize:()V
       7: return

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: invokevirtual #29                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.shutdown:()V
       7: aload_0
       8: invokespecial #29                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.shutdown:()V
      11: return

  public java.lang.Thread newThread(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: aload_1
       5: invokevirtual #30                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
       8: areturn

  public java.lang.String getThreadNamePrefix();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: invokevirtual #31                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.getThreadNamePrefix:()Ljava/lang/String;
       7: areturn

  public void setThreadPriority(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: iload_1
       5: invokevirtual #32                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setThreadPriority:(I)V
       8: return

  public int getThreadPriority();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: invokevirtual #33                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.getThreadPriority:()I
       7: ireturn

  public void setDaemon(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: iload_1
       5: invokevirtual #34                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setDaemon:(Z)V
       8: return

  public boolean isDaemon();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: invokevirtual #35                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.isDaemon:()Z
       7: ireturn

  public void setThreadGroupName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: aload_1
       5: invokevirtual #36                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setThreadGroupName:(Ljava/lang/String;)V
       8: return

  public void setThreadGroup(java.lang.ThreadGroup);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: aload_1
       5: invokevirtual #37                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setThreadGroup:(Ljava/lang/ThreadGroup;)V
       8: return

  public java.lang.ThreadGroup getThreadGroup();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: invokevirtual #38                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.getThreadGroup:()Ljava/lang/ThreadGroup;
       7: areturn

  public java.lang.Thread createThread(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: aload_1
       5: invokevirtual #39                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.createThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
       8: areturn

  public void setCorePoolSize(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: iload_1
       5: invokevirtual #40                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setCorePoolSize:(I)V
       8: return

  public int getCorePoolSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: invokevirtual #41                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.getCorePoolSize:()I
       7: ireturn

  public void setMaxPoolSize(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: iload_1
       5: invokevirtual #42                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setMaxPoolSize:(I)V
       8: return

  public int getMaxPoolSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: invokevirtual #43                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.getMaxPoolSize:()I
       7: ireturn

  public void setKeepAliveSeconds(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: iload_1
       5: invokevirtual #44                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setKeepAliveSeconds:(I)V
       8: return

  public int getKeepAliveSeconds();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: invokevirtual #45                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.getKeepAliveSeconds:()I
       7: ireturn

  public void setQueueCapacity(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: iload_1
       5: invokevirtual #46                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setQueueCapacity:(I)V
       8: return

  public void setAllowCoreThreadTimeOut(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: iload_1
       5: invokevirtual #47                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setAllowCoreThreadTimeOut:(Z)V
       8: return

  public void setTaskDecorator(org.springframework.core.task.TaskDecorator);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: aload_1
       5: invokevirtual #48                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setTaskDecorator:(Lorg/springframework/core/task/TaskDecorator;)V
       8: return

  private brave.Tracing tracing();
    Code:
       0: aload_0
       1: getfield      #49                 // Field tracing:Lbrave/Tracing;
       4: ifnonnull     25
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      12: ldc           #50                 // class brave/Tracing
      14: invokeinterface #51,  2           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      19: checkcast     #50                 // class brave/Tracing
      22: putfield      #49                 // Field tracing:Lbrave/Tracing;
      25: aload_0
      26: getfield      #49                 // Field tracing:Lbrave/Tracing;
      29: areturn

  private org.springframework.cloud.sleuth.SpanNamer spanNamer();
    Code:
       0: aload_0
       1: getfield      #52                 // Field spanNamer:Lorg/springframework/cloud/sleuth/SpanNamer;
       4: ifnonnull     47
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      12: ldc           #53                 // class org/springframework/cloud/sleuth/SpanNamer
      14: invokeinterface #51,  2           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      19: checkcast     #53                 // class org/springframework/cloud/sleuth/SpanNamer
      22: putfield      #52                 // Field spanNamer:Lorg/springframework/cloud/sleuth/SpanNamer;
      25: goto          47
      28: astore_1
      29: getstatic     #55                 // Field log:Lorg/apache/commons/logging/Log;
      32: ldc           #56                 // String SpanNamer bean not found - will provide a manually created instance
      34: invokeinterface #57,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      39: new           #58                 // class org/springframework/cloud/sleuth/DefaultSpanNamer
      42: dup
      43: invokespecial #59                 // Method org/springframework/cloud/sleuth/DefaultSpanNamer."<init>":()V
      46: areturn
      47: aload_0
      48: getfield      #52                 // Field spanNamer:Lorg/springframework/cloud/sleuth/SpanNamer;
      51: areturn
    Exception table:
       from    to  target type
           7    25    28   Class org/springframework/beans/factory/NoSuchBeanDefinitionException

  static {};
    Code:
       0: ldc           #60                 // class org/springframework/cloud/sleuth/instrument/async/LazyTraceThreadPoolTaskExecutor
       2: invokestatic  #61                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #55                 // Field log:Lorg/apache/commons/logging/Log;
       8: return
}
