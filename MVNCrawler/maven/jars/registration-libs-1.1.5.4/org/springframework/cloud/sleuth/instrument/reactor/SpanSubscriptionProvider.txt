Compiled from "SpanSubscriptionProvider.java"
class org.springframework.cloud.sleuth.instrument.reactor.SpanSubscriptionProvider<T> implements java.util.function.Supplier<org.springframework.cloud.sleuth.instrument.reactor.SpanSubscription<T>> {
  private static final org.apache.commons.logging.Log log;

  final org.springframework.beans.factory.BeanFactory beanFactory;

  final org.reactivestreams.Subscriber<? super T> subscriber;

  final reactor.util.context.Context context;

  final reactor.core.Scannable scannable;

  private brave.Tracing tracing;

  org.springframework.cloud.sleuth.instrument.reactor.SpanSubscriptionProvider(org.springframework.beans.factory.BeanFactory, org.reactivestreams.Subscriber<? super T>, reactor.util.context.Context, reactor.core.Scannable);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field subscriber:Lorg/reactivestreams/Subscriber;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field context:Lreactor/util/context/Context;
      19: aload         4
      21: ldc           #5                  // String scannable must not be null
      23: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      26: pop
      27: aload_0
      28: aload         4
      30: putfield      #7                  // Field scannable:Lreactor/core/Scannable;
      33: getstatic     #8                  // Field log:Lorg/apache/commons/logging/Log;
      36: invokeinterface #9,  1            // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      41: ifeq          91
      44: getstatic     #8                  // Field log:Lorg/apache/commons/logging/Log;
      47: new           #10                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #12                 // String Context [
      56: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_3
      60: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: ldc           #15                 // String ], name [
      65: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload         4
      70: invokeinterface #16,  1           // InterfaceMethod reactor/core/Scannable.name:()Ljava/lang/String;
      75: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: ldc           #17                 // String ]
      80: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokeinterface #19,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      91: return

  public org.springframework.cloud.sleuth.instrument.reactor.SpanSubscription<T> get();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #20                 // Method tracing:()Lbrave/Tracing;
       5: invokevirtual #21                 // Method newCoreSubscriber:(Lbrave/Tracing;)Lorg/springframework/cloud/sleuth/instrument/reactor/SpanSubscription;
       8: areturn

  org.springframework.cloud.sleuth.instrument.reactor.SpanSubscription<T> newCoreSubscriber(brave.Tracing);
    Code:
       0: new           #22                 // class org/springframework/cloud/sleuth/instrument/reactor/SpanSubscriber
       3: dup
       4: aload_0
       5: getfield      #3                  // Field subscriber:Lorg/reactivestreams/Subscriber;
       8: aload_0
       9: getfield      #4                  // Field context:Lreactor/util/context/Context;
      12: aload_1
      13: aload_0
      14: getfield      #7                  // Field scannable:Lreactor/core/Scannable;
      17: invokeinterface #16,  1           // InterfaceMethod reactor/core/Scannable.name:()Ljava/lang/String;
      22: invokespecial #23                 // Method org/springframework/cloud/sleuth/instrument/reactor/SpanSubscriber."<init>":(Lorg/reactivestreams/Subscriber;Lreactor/util/context/Context;Lbrave/Tracing;Ljava/lang/String;)V
      25: areturn

  private brave.Tracing tracing();
    Code:
       0: aload_0
       1: getfield      #24                 // Field tracing:Lbrave/Tracing;
       4: ifnonnull     25
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      12: ldc           #25                 // class brave/Tracing
      14: invokeinterface #26,  2           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      19: checkcast     #25                 // class brave/Tracing
      22: putfield      #24                 // Field tracing:Lbrave/Tracing;
      25: aload_0
      26: getfield      #24                 // Field tracing:Lbrave/Tracing;
      29: areturn

  public java.lang.Object get();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method get:()Lorg/springframework/cloud/sleuth/instrument/reactor/SpanSubscription;
       4: areturn

  static {};
    Code:
       0: ldc           #28                 // class org/springframework/cloud/sleuth/instrument/reactor/SpanSubscriptionProvider
       2: invokestatic  #29                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #8                  // Field log:Lorg/apache/commons/logging/Log;
       8: return
}
