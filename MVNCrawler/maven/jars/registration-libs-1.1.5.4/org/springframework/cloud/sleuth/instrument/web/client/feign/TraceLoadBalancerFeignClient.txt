Compiled from "TraceLoadBalancerFeignClient.java"
class org.springframework.cloud.sleuth.instrument.web.client.feign.TraceLoadBalancerFeignClient extends org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient {
  private static final org.apache.commons.logging.Log log;

  private final org.springframework.beans.factory.BeanFactory beanFactory;

  brave.Tracer tracer;

  brave.http.HttpTracing httpTracing;

  org.springframework.cloud.sleuth.instrument.web.client.feign.TracingFeignClient tracingFeignClient;

  org.springframework.cloud.sleuth.instrument.web.client.feign.TraceLoadBalancerFeignClient(feign.Client, org.springframework.cloud.openfeign.ribbon.CachingSpringLoadBalancerFactory, org.springframework.cloud.netflix.ribbon.SpringClientFactory, org.springframework.beans.factory.BeanFactory);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method org/springframework/cloud/openfeign/ribbon/LoadBalancerFeignClient."<init>":(Lfeign/Client;Lorg/springframework/cloud/openfeign/ribbon/CachingSpringLoadBalancerFactory;Lorg/springframework/cloud/netflix/ribbon/SpringClientFactory;)V
       7: aload_0
       8: aload         4
      10: putfield      #2                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      13: return

  public feign.Response execute(feign.Request, feign.Request$Options) throws java.io.IOException;
    Code:
       0: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
       3: invokeinterface #4,  1            // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       8: ifeq          21
      11: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
      14: ldc           #5                  // String Before send
      16: invokeinterface #6,  2            // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      21: aconst_null
      22: astore_3
      23: aload_0
      24: invokespecial #7                  // Method tracer:()Lbrave/Tracer;
      27: invokevirtual #8                  // Method brave/Tracer.nextSpan:()Lbrave/Span;
      30: invokevirtual #9                  // Method brave/Span.start:()Lbrave/Span;
      33: astore        4
      35: aload_0
      36: aload_1
      37: aload_2
      38: invokespecial #10                 // Method org/springframework/cloud/openfeign/ribbon/LoadBalancerFeignClient.execute:(Lfeign/Request;Lfeign/Request$Options;)Lfeign/Response;
      41: astore_3
      42: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
      45: invokeinterface #4,  1            // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      50: ifeq          63
      53: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
      56: ldc           #11                 // String After receive
      58: invokeinterface #6,  2            // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      63: aload_3
      64: astore        5
      66: aload         4
      68: invokevirtual #12                 // Method brave/Span.abandon:()V
      71: aload         5
      73: areturn
      74: astore        5
      76: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
      79: invokeinterface #4,  1            // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      84: ifeq          99
      87: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
      90: ldc           #14                 // String Exception thrown
      92: aload         5
      94: invokeinterface #15,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      99: aload         5
     101: instanceof    #16                 // class java/io/IOException
     104: ifne          143
     107: aload         5
     109: invokevirtual #17                 // Method java/lang/Exception.getCause:()Ljava/lang/Throwable;
     112: ifnull        199
     115: aload         5
     117: invokevirtual #17                 // Method java/lang/Exception.getCause:()Ljava/lang/Throwable;
     120: instanceof    #18                 // class com/netflix/client/ClientException
     123: ifeq          199
     126: aload         5
     128: invokevirtual #17                 // Method java/lang/Exception.getCause:()Ljava/lang/Throwable;
     131: checkcast     #18                 // class com/netflix/client/ClientException
     134: invokevirtual #19                 // Method com/netflix/client/ClientException.getErrorType:()Lcom/netflix/client/ClientException$ErrorType;
     137: getstatic     #20                 // Field com/netflix/client/ClientException$ErrorType.GENERAL:Lcom/netflix/client/ClientException$ErrorType;
     140: if_acmpne     199
     143: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
     146: invokeinterface #4,  1            // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     151: ifeq          164
     154: getstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
     157: ldc           #21                 // String General exception was thrown, so most likely the traced client wasn\'t called. Falling back to a manual span
     159: invokeinterface #6,  2            // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     164: aload_0
     165: invokespecial #22                 // Method tracingFeignClient:()Lorg/springframework/cloud/sleuth/instrument/web/client/feign/TracingFeignClient;
     168: new           #23                 // class java/util/HashMap
     171: dup
     172: aload_1
     173: invokevirtual #24                 // Method feign/Request.headers:()Ljava/util/Map;
     176: invokespecial #25                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
     179: aload_1
     180: aload         4
     182: invokevirtual #26                 // Method org/springframework/cloud/sleuth/instrument/web/client/feign/TracingFeignClient.handleSend:(Ljava/util/Map;Lfeign/Request;Lbrave/Span;)Lbrave/Span;
     185: astore        4
     187: aload_0
     188: invokespecial #22                 // Method tracingFeignClient:()Lorg/springframework/cloud/sleuth/instrument/web/client/feign/TracingFeignClient;
     191: aload         4
     193: aload_3
     194: aload         5
     196: invokevirtual #27                 // Method org/springframework/cloud/sleuth/instrument/web/client/feign/TracingFeignClient.handleReceive:(Lbrave/Span;Lfeign/Response;Ljava/lang/Throwable;)V
     199: aload         5
     201: athrow
     202: astore        6
     204: aload         4
     206: invokevirtual #12                 // Method brave/Span.abandon:()V
     209: aload         6
     211: athrow
    Exception table:
       from    to  target type
          35    66    74   Class java/lang/Exception
          35    66   202   any
          74   204   202   any

  private brave.Tracer tracer();
    Code:
       0: aload_0
       1: getfield      #28                 // Field tracer:Lbrave/Tracer;
       4: ifnonnull     25
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      12: ldc           #29                 // class brave/Tracer
      14: invokeinterface #30,  2           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      19: checkcast     #29                 // class brave/Tracer
      22: putfield      #28                 // Field tracer:Lbrave/Tracer;
      25: aload_0
      26: getfield      #28                 // Field tracer:Lbrave/Tracer;
      29: areturn

  private brave.http.HttpTracing httpTracing();
    Code:
       0: aload_0
       1: getfield      #31                 // Field httpTracing:Lbrave/http/HttpTracing;
       4: ifnonnull     25
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      12: ldc           #32                 // class brave/http/HttpTracing
      14: invokeinterface #30,  2           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      19: checkcast     #32                 // class brave/http/HttpTracing
      22: putfield      #31                 // Field httpTracing:Lbrave/http/HttpTracing;
      25: aload_0
      26: getfield      #31                 // Field httpTracing:Lbrave/http/HttpTracing;
      29: areturn

  private org.springframework.cloud.sleuth.instrument.web.client.feign.TracingFeignClient tracingFeignClient();
    Code:
       0: aload_0
       1: getfield      #33                 // Field tracingFeignClient:Lorg/springframework/cloud/sleuth/instrument/web/client/feign/TracingFeignClient;
       4: ifnonnull     25
       7: aload_0
       8: aload_0
       9: invokespecial #34                 // Method httpTracing:()Lbrave/http/HttpTracing;
      12: aload_0
      13: invokevirtual #35                 // Method getDelegate:()Lfeign/Client;
      16: invokestatic  #36                 // Method org/springframework/cloud/sleuth/instrument/web/client/feign/TracingFeignClient.create:(Lbrave/http/HttpTracing;Lfeign/Client;)Lfeign/Client;
      19: checkcast     #37                 // class org/springframework/cloud/sleuth/instrument/web/client/feign/TracingFeignClient
      22: putfield      #33                 // Field tracingFeignClient:Lorg/springframework/cloud/sleuth/instrument/web/client/feign/TracingFeignClient;
      25: aload_0
      26: getfield      #33                 // Field tracingFeignClient:Lorg/springframework/cloud/sleuth/instrument/web/client/feign/TracingFeignClient;
      29: areturn

  static {};
    Code:
       0: ldc           #38                 // class org/springframework/cloud/sleuth/instrument/web/client/feign/TraceLoadBalancerFeignClient
       2: invokestatic  #39                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #3                  // Field log:Lorg/apache/commons/logging/Log;
       8: return
}
