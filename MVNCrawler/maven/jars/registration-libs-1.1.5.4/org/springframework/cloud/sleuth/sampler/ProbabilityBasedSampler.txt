Compiled from "ProbabilityBasedSampler.java"
public class org.springframework.cloud.sleuth.sampler.ProbabilityBasedSampler extends brave.sampler.Sampler {
  private final java.util.concurrent.atomic.AtomicInteger counter;

  private final java.util.BitSet sampleDecisions;

  private final org.springframework.cloud.sleuth.sampler.SamplerProperties configuration;

  public org.springframework.cloud.sleuth.sampler.ProbabilityBasedSampler(org.springframework.cloud.sleuth.sampler.SamplerProperties);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method brave/sampler/Sampler."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #4                  // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_1
      17: invokevirtual #5                  // Method org/springframework/cloud/sleuth/sampler/SamplerProperties.getProbability:()F
      20: ldc           #6                  // float 100.0f
      22: fmul
      23: f2i
      24: istore_2
      25: aload_0
      26: bipush        100
      28: iload_2
      29: new           #7                  // class java/util/Random
      32: dup
      33: invokespecial #8                  // Method java/util/Random."<init>":()V
      36: invokestatic  #9                  // Method randomBitSet:(IILjava/util/Random;)Ljava/util/BitSet;
      39: putfield      #10                 // Field sampleDecisions:Ljava/util/BitSet;
      42: aload_0
      43: aload_1
      44: putfield      #11                 // Field configuration:Lorg/springframework/cloud/sleuth/sampler/SamplerProperties;
      47: return

  public boolean isSampled(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field configuration:Lorg/springframework/cloud/sleuth/sampler/SamplerProperties;
       4: invokevirtual #5                  // Method org/springframework/cloud/sleuth/sampler/SamplerProperties.getProbability:()F
       7: fconst_0
       8: fcmpl
       9: ifne          14
      12: iconst_0
      13: ireturn
      14: aload_0
      15: getfield      #11                 // Field configuration:Lorg/springframework/cloud/sleuth/sampler/SamplerProperties;
      18: invokevirtual #5                  // Method org/springframework/cloud/sleuth/sampler/SamplerProperties.getProbability:()F
      21: fconst_1
      22: fcmpl
      23: ifne          28
      26: iconst_1
      27: ireturn
      28: aload_0
      29: dup
      30: astore_3
      31: monitorenter
      32: aload_0
      33: getfield      #4                  // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
      36: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      39: istore        4
      41: aload_0
      42: getfield      #10                 // Field sampleDecisions:Ljava/util/BitSet;
      45: iload         4
      47: invokevirtual #13                 // Method java/util/BitSet.get:(I)Z
      50: istore        5
      52: iload         4
      54: bipush        99
      56: if_icmpne     67
      59: aload_0
      60: getfield      #4                  // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
      63: iconst_0
      64: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      67: iload         5
      69: aload_3
      70: monitorexit
      71: ireturn
      72: astore        6
      74: aload_3
      75: monitorexit
      76: aload         6
      78: athrow
    Exception table:
       from    to  target type
          32    71    72   any
          72    76    72   any

  static java.util.BitSet randomBitSet(int, int, java.util.Random);
    Code:
       0: new           #15                 // class java/util/BitSet
       3: dup
       4: iload_0
       5: invokespecial #16                 // Method java/util/BitSet."<init>":(I)V
       8: astore_3
       9: iload_1
      10: newarray       int
      12: astore        4
      14: iconst_0
      15: istore        5
      17: iload         5
      19: iload_1
      20: if_icmpge     42
      23: aload         4
      25: iload         5
      27: iload         5
      29: iastore
      30: aload_3
      31: iload         5
      33: invokevirtual #17                 // Method java/util/BitSet.set:(I)V
      36: iinc          5, 1
      39: goto          17
      42: iload         5
      44: iload_0
      45: if_icmpge     92
      48: aload_2
      49: iload         5
      51: iconst_1
      52: iadd
      53: invokevirtual #18                 // Method java/util/Random.nextInt:(I)I
      56: istore        6
      58: iload         6
      60: iload_1
      61: if_icmpge     86
      64: aload_3
      65: aload         4
      67: iload         6
      69: iaload
      70: invokevirtual #19                 // Method java/util/BitSet.clear:(I)V
      73: aload_3
      74: iload         5
      76: invokevirtual #17                 // Method java/util/BitSet.set:(I)V
      79: aload         4
      81: iload         6
      83: iload         5
      85: iastore
      86: iinc          5, 1
      89: goto          42
      92: aload_3
      93: areturn
}
