Compiled from "TracingChannelInterceptor.java"
public final class org.springframework.cloud.sleuth.instrument.messaging.TracingChannelInterceptor extends org.springframework.messaging.support.ChannelInterceptorAdapter implements org.springframework.messaging.support.ExecutorChannelInterceptor {
  private static final org.apache.commons.logging.Log log;

  private static final java.lang.String REMOTE_SERVICE_NAME;

  final brave.Tracing tracing;

  final brave.Tracer tracer;

  final brave.propagation.ThreadLocalSpan threadLocalSpan;

  final brave.propagation.TraceContext$Injector<org.springframework.messaging.support.MessageHeaderAccessor> injector;

  final brave.propagation.TraceContext$Extractor<org.springframework.messaging.support.MessageHeaderAccessor> extractor;

  final boolean integrationObjectSupportPresent;

  private final boolean hasDirectChannelClass;

  public static org.springframework.cloud.sleuth.instrument.messaging.TracingChannelInterceptor create(brave.Tracing);
    Code:
       0: new           #1                  // class org/springframework/cloud/sleuth/instrument/messaging/TracingChannelInterceptor
       3: dup
       4: aload_0
       5: invokespecial #2                  // Method "<init>":(Lbrave/Tracing;)V
       8: areturn

  org.springframework.cloud.sleuth.instrument.messaging.TracingChannelInterceptor(brave.Tracing);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/springframework/messaging/support/ChannelInterceptorAdapter."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field tracing:Lbrave/Tracing;
       9: aload_0
      10: aload_1
      11: invokevirtual #5                  // Method brave/Tracing.tracer:()Lbrave/Tracer;
      14: putfield      #6                  // Field tracer:Lbrave/Tracer;
      17: aload_0
      18: aload_0
      19: getfield      #6                  // Field tracer:Lbrave/Tracer;
      22: invokestatic  #7                  // Method brave/propagation/ThreadLocalSpan.create:(Lbrave/Tracer;)Lbrave/propagation/ThreadLocalSpan;
      25: putfield      #8                  // Field threadLocalSpan:Lbrave/propagation/ThreadLocalSpan;
      28: aload_0
      29: aload_1
      30: invokevirtual #9                  // Method brave/Tracing.propagation:()Lbrave/propagation/Propagation;
      33: getstatic     #10                 // Field org/springframework/cloud/sleuth/instrument/messaging/MessageHeaderPropagation.INSTANCE:Lorg/springframework/cloud/sleuth/instrument/messaging/MessageHeaderPropagation;
      36: invokeinterface #11,  2           // InterfaceMethod brave/propagation/Propagation.injector:(Lbrave/propagation/Propagation$Setter;)Lbrave/propagation/TraceContext$Injector;
      41: putfield      #12                 // Field injector:Lbrave/propagation/TraceContext$Injector;
      44: aload_0
      45: aload_1
      46: invokevirtual #9                  // Method brave/Tracing.propagation:()Lbrave/propagation/Propagation;
      49: getstatic     #10                 // Field org/springframework/cloud/sleuth/instrument/messaging/MessageHeaderPropagation.INSTANCE:Lorg/springframework/cloud/sleuth/instrument/messaging/MessageHeaderPropagation;
      52: invokeinterface #13,  2           // InterfaceMethod brave/propagation/Propagation.extractor:(Lbrave/propagation/Propagation$Getter;)Lbrave/propagation/TraceContext$Extractor;
      57: putfield      #14                 // Field extractor:Lbrave/propagation/TraceContext$Extractor;
      60: aload_0
      61: ldc           #15                 // String org.springframework.integration.context.IntegrationObjectSupport
      63: aconst_null
      64: invokestatic  #16                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      67: putfield      #17                 // Field integrationObjectSupportPresent:Z
      70: aload_0
      71: ldc           #18                 // String org.springframework.integration.channel.DirectChannel
      73: aconst_null
      74: invokestatic  #16                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      77: putfield      #19                 // Field hasDirectChannelClass:Z
      80: return

  public brave.Span nextSpan(org.springframework.messaging.Message<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method mutableHeaderAccessor:(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
       5: astore_2
       6: aload_0
       7: getfield      #14                 // Field extractor:Lbrave/propagation/TraceContext$Extractor;
      10: aload_2
      11: invokeinterface #21,  2           // InterfaceMethod brave/propagation/TraceContext$Extractor.extract:(Ljava/lang/Object;)Lbrave/propagation/TraceContextOrSamplingFlags;
      16: astore_3
      17: aload_2
      18: invokevirtual #22                 // Method org/springframework/messaging/support/MessageHeaderAccessor.setImmutable:()V
      21: aload_0
      22: getfield      #6                  // Field tracer:Lbrave/Tracer;
      25: aload_3
      26: invokevirtual #23                 // Method brave/Tracer.nextSpan:(Lbrave/propagation/TraceContextOrSamplingFlags;)Lbrave/Span;
      29: astore        4
      31: aload_3
      32: invokevirtual #24                 // Method brave/propagation/TraceContextOrSamplingFlags.context:()Lbrave/propagation/TraceContext;
      35: ifnonnull     54
      38: aload         4
      40: invokevirtual #25                 // Method brave/Span.isNoop:()Z
      43: ifne          54
      46: aload_0
      47: aload_1
      48: aload         4
      50: aconst_null
      51: invokevirtual #26                 // Method addTags:(Lorg/springframework/messaging/Message;Lbrave/SpanCustomizer;Lorg/springframework/messaging/MessageChannel;)V
      54: getstatic     #27                 // Field log:Lorg/apache/commons/logging/Log;
      57: invokeinterface #28,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      62: ifeq          93
      65: getstatic     #27                 // Field log:Lorg/apache/commons/logging/Log;
      68: new           #29                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #31                 // String Created a new span
      77: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload         4
      82: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      85: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: invokeinterface #35,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      93: aload         4
      95: areturn

  public org.springframework.messaging.Message<?> preSend(org.springframework.messaging.Message<?>, org.springframework.messaging.MessageChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #36                 // Method emptyMessage:(Lorg/springframework/messaging/Message;)Z
       5: ifeq          10
       8: aload_1
       9: areturn
      10: aload_0
      11: aload_1
      12: invokespecial #37                 // Method getMessage:(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
      15: astore_3
      16: aload_0
      17: aload_3
      18: invokespecial #20                 // Method mutableHeaderAccessor:(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
      21: astore        4
      23: aload_0
      24: getfield      #14                 // Field extractor:Lbrave/propagation/TraceContext$Extractor;
      27: aload         4
      29: invokeinterface #21,  2           // InterfaceMethod brave/propagation/TraceContext$Extractor.extract:(Ljava/lang/Object;)Lbrave/propagation/TraceContextOrSamplingFlags;
      34: astore        5
      36: aload_0
      37: getfield      #8                  // Field threadLocalSpan:Lbrave/propagation/ThreadLocalSpan;
      40: aload         5
      42: invokevirtual #38                 // Method brave/propagation/ThreadLocalSpan.next:(Lbrave/propagation/TraceContextOrSamplingFlags;)Lbrave/Span;
      45: astore        6
      47: aload         4
      49: aload_0
      50: getfield      #4                  // Field tracing:Lbrave/Tracing;
      53: invokevirtual #9                  // Method brave/Tracing.propagation:()Lbrave/propagation/Propagation;
      56: invokeinterface #39,  1           // InterfaceMethod brave/propagation/Propagation.keys:()Ljava/util/List;
      61: invokestatic  #40                 // Method org/springframework/cloud/sleuth/instrument/messaging/MessageHeaderPropagation.removeAnyTraceHeaders:(Lorg/springframework/messaging/support/MessageHeaderAccessor;Ljava/util/List;)V
      64: aload_0
      65: getfield      #12                 // Field injector:Lbrave/propagation/TraceContext$Injector;
      68: aload         6
      70: invokevirtual #41                 // Method brave/Span.context:()Lbrave/propagation/TraceContext;
      73: aload         4
      75: invokeinterface #42,  3           // InterfaceMethod brave/propagation/TraceContext$Injector.inject:(Lbrave/propagation/TraceContext;Ljava/lang/Object;)V
      80: aload         6
      82: invokevirtual #25                 // Method brave/Span.isNoop:()Z
      85: ifne          121
      88: aload         6
      90: getstatic     #43                 // Field brave/Span$Kind.PRODUCER:Lbrave/Span$Kind;
      93: invokevirtual #44                 // Method brave/Span.kind:(Lbrave/Span$Kind;)Lbrave/Span;
      96: ldc           #45                 // String send
      98: invokevirtual #46                 // Method brave/Span.name:(Ljava/lang/String;)Lbrave/Span;
     101: invokevirtual #47                 // Method brave/Span.start:()Lbrave/Span;
     104: pop
     105: aload         6
     107: ldc           #48                 // String broker
     109: invokevirtual #49                 // Method brave/Span.remoteServiceName:(Ljava/lang/String;)Lbrave/Span;
     112: pop
     113: aload_0
     114: aload_1
     115: aload         6
     117: aload_2
     118: invokevirtual #26                 // Method addTags:(Lorg/springframework/messaging/Message;Lbrave/SpanCustomizer;Lorg/springframework/messaging/MessageChannel;)V
     121: getstatic     #27                 // Field log:Lorg/apache/commons/logging/Log;
     124: invokeinterface #28,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     129: ifeq          160
     132: getstatic     #27                 // Field log:Lorg/apache/commons/logging/Log;
     135: new           #29                 // class java/lang/StringBuilder
     138: dup
     139: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     142: ldc           #50                 // String Created a new span in pre send
     144: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: aload         6
     149: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     152: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     155: invokeinterface #35,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     160: aload_0
     161: aload_1
     162: aload_3
     163: aload         4
     165: invokespecial #51                 // Method outputMessage:(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/Message;Lorg/springframework/messaging/support/MessageHeaderAccessor;)Lorg/springframework/messaging/Message;
     168: astore        7
     170: aload_0
     171: aload_2
     172: invokespecial #52                 // Method isDirectChannel:(Lorg/springframework/messaging/MessageChannel;)Z
     175: ifeq          187
     178: aload_0
     179: aload         7
     181: aload_2
     182: aconst_null
     183: invokevirtual #53                 // Method beforeHandle:(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/MessageHandler;)Lorg/springframework/messaging/Message;
     186: pop
     187: aload         7
     189: areturn

  private org.springframework.messaging.Message<?> outputMessage(org.springframework.messaging.Message<?>, org.springframework.messaging.Message<?>, org.springframework.messaging.support.MessageHeaderAccessor);
    Code:
       0: aload_1
       1: invokestatic  #54                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getMutableAccessor:(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
       4: astore        4
       6: aload_1
       7: invokeinterface #55,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
      12: instanceof    #56                 // class org/springframework/messaging/MessagingException
      15: ifeq          88
      18: aload         4
      20: aload_3
      21: invokevirtual #57                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
      24: aload_0
      25: getfield      #4                  // Field tracing:Lbrave/Tracing;
      28: invokevirtual #9                  // Method brave/Tracing.propagation:()Lbrave/propagation/Propagation;
      31: invokeinterface #39,  1           // InterfaceMethod brave/propagation/Propagation.keys:()Ljava/util/List;
      36: invokestatic  #58                 // Method org/springframework/cloud/sleuth/instrument/messaging/MessageHeaderPropagation.propagationHeaders:(Ljava/util/Map;Ljava/util/List;)Ljava/util/Map;
      39: invokevirtual #59                 // Method org/springframework/messaging/support/MessageHeaderAccessor.copyHeaders:(Ljava/util/Map;)V
      42: new           #60                 // class org/springframework/messaging/support/ErrorMessage
      45: dup
      46: aload_1
      47: invokeinterface #55,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
      52: checkcast     #56                 // class org/springframework/messaging/MessagingException
      55: aload_0
      56: aload         4
      58: invokespecial #61                 // Method isWebSockets:(Lorg/springframework/messaging/support/MessageHeaderAccessor;)Z
      61: ifeq          72
      64: aload         4
      66: invokevirtual #57                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
      69: goto          84
      72: new           #62                 // class org/springframework/messaging/MessageHeaders
      75: dup
      76: aload         4
      78: invokevirtual #57                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
      81: invokespecial #63                 // Method org/springframework/messaging/MessageHeaders."<init>":(Ljava/util/Map;)V
      84: invokespecial #64                 // Method org/springframework/messaging/support/ErrorMessage."<init>":(Ljava/lang/Throwable;Lorg/springframework/messaging/MessageHeaders;)V
      87: areturn
      88: aload         4
      90: aload_3
      91: invokevirtual #57                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
      94: invokevirtual #59                 // Method org/springframework/messaging/support/MessageHeaderAccessor.copyHeaders:(Ljava/util/Map;)V
      97: new           #65                 // class org/springframework/messaging/support/GenericMessage
     100: dup
     101: aload_2
     102: invokeinterface #55,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
     107: aload_0
     108: aload         4
     110: invokespecial #61                 // Method isWebSockets:(Lorg/springframework/messaging/support/MessageHeaderAccessor;)Z
     113: ifeq          124
     116: aload         4
     118: invokevirtual #57                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
     121: goto          136
     124: new           #62                 // class org/springframework/messaging/MessageHeaders
     127: dup
     128: aload         4
     130: invokevirtual #57                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
     133: invokespecial #63                 // Method org/springframework/messaging/MessageHeaders."<init>":(Ljava/util/Map;)V
     136: invokespecial #66                 // Method org/springframework/messaging/support/GenericMessage."<init>":(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)V
     139: areturn

  private boolean isWebSockets(org.springframework.messaging.support.MessageHeaderAccessor);
    Code:
       0: aload_1
       1: invokevirtual #57                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
       4: ldc           #67                 // String stompCommand
       6: invokevirtual #68                 // Method org/springframework/messaging/MessageHeaders.containsKey:(Ljava/lang/Object;)Z
       9: ifne          24
      12: aload_1
      13: invokevirtual #57                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
      16: ldc           #69                 // String simpMessageType
      18: invokevirtual #68                 // Method org/springframework/messaging/MessageHeaders.containsKey:(Ljava/lang/Object;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  private boolean isDirectChannel(org.springframework.messaging.MessageChannel);
    Code:
       0: aload_0
       1: getfield      #19                 // Field hasDirectChannelClass:Z
       4: ifeq          23
       7: ldc           #70                 // class org/springframework/integration/channel/DirectChannel
       9: aload_1
      10: invokestatic  #71                 // Method org/springframework/aop/support/AopUtils.getTargetClass:(Ljava/lang/Object;)Ljava/lang/Class;
      13: invokevirtual #72                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public void afterSendCompletion(org.springframework.messaging.Message<?>, org.springframework.messaging.MessageChannel, boolean, java.lang.Exception);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #36                 // Method emptyMessage:(Lorg/springframework/messaging/Message;)Z
       5: ifeq          9
       8: return
       9: aload_0
      10: aload_2
      11: invokespecial #52                 // Method isDirectChannel:(Lorg/springframework/messaging/MessageChannel;)Z
      14: ifeq          26
      17: aload_0
      18: aload_1
      19: aload_2
      20: aconst_null
      21: aload         4
      23: invokevirtual #73                 // Method afterMessageHandled:(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/MessageHandler;Ljava/lang/Exception;)V
      26: getstatic     #27                 // Field log:Lorg/apache/commons/logging/Log;
      29: invokeinterface #28,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      34: ifeq          70
      37: getstatic     #27                 // Field log:Lorg/apache/commons/logging/Log;
      40: new           #29                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #74                 // String Will finish the current span after completion
      49: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_0
      53: getfield      #6                  // Field tracer:Lbrave/Tracer;
      56: invokevirtual #75                 // Method brave/Tracer.currentSpan:()Lbrave/Span;
      59: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      62: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokeinterface #35,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      70: aload_0
      71: aload         4
      73: invokevirtual #76                 // Method finishSpan:(Ljava/lang/Exception;)V
      76: return

  public org.springframework.messaging.Message<?> postReceive(org.springframework.messaging.Message<?>, org.springframework.messaging.MessageChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #36                 // Method emptyMessage:(Lorg/springframework/messaging/Message;)Z
       5: ifeq          10
       8: aload_1
       9: areturn
      10: aload_0
      11: aload_1
      12: invokespecial #20                 // Method mutableHeaderAccessor:(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
      15: astore_3
      16: aload_0
      17: getfield      #14                 // Field extractor:Lbrave/propagation/TraceContext$Extractor;
      20: aload_3
      21: invokeinterface #21,  2           // InterfaceMethod brave/propagation/TraceContext$Extractor.extract:(Ljava/lang/Object;)Lbrave/propagation/TraceContextOrSamplingFlags;
      26: astore        4
      28: aload_0
      29: getfield      #8                  // Field threadLocalSpan:Lbrave/propagation/ThreadLocalSpan;
      32: aload         4
      34: invokevirtual #38                 // Method brave/propagation/ThreadLocalSpan.next:(Lbrave/propagation/TraceContextOrSamplingFlags;)Lbrave/Span;
      37: astore        5
      39: aload_3
      40: aload_0
      41: getfield      #4                  // Field tracing:Lbrave/Tracing;
      44: invokevirtual #9                  // Method brave/Tracing.propagation:()Lbrave/propagation/Propagation;
      47: invokeinterface #39,  1           // InterfaceMethod brave/propagation/Propagation.keys:()Ljava/util/List;
      52: invokestatic  #40                 // Method org/springframework/cloud/sleuth/instrument/messaging/MessageHeaderPropagation.removeAnyTraceHeaders:(Lorg/springframework/messaging/support/MessageHeaderAccessor;Ljava/util/List;)V
      55: aload_0
      56: getfield      #12                 // Field injector:Lbrave/propagation/TraceContext$Injector;
      59: aload         5
      61: invokevirtual #41                 // Method brave/Span.context:()Lbrave/propagation/TraceContext;
      64: aload_3
      65: invokeinterface #42,  3           // InterfaceMethod brave/propagation/TraceContext$Injector.inject:(Lbrave/propagation/TraceContext;Ljava/lang/Object;)V
      70: aload         5
      72: invokevirtual #25                 // Method brave/Span.isNoop:()Z
      75: ifne          111
      78: aload         5
      80: getstatic     #77                 // Field brave/Span$Kind.CONSUMER:Lbrave/Span$Kind;
      83: invokevirtual #44                 // Method brave/Span.kind:(Lbrave/Span$Kind;)Lbrave/Span;
      86: ldc           #78                 // String receive
      88: invokevirtual #46                 // Method brave/Span.name:(Ljava/lang/String;)Lbrave/Span;
      91: invokevirtual #47                 // Method brave/Span.start:()Lbrave/Span;
      94: pop
      95: aload         5
      97: ldc           #48                 // String broker
      99: invokevirtual #49                 // Method brave/Span.remoteServiceName:(Ljava/lang/String;)Lbrave/Span;
     102: pop
     103: aload_0
     104: aload_1
     105: aload         5
     107: aload_2
     108: invokevirtual #26                 // Method addTags:(Lorg/springframework/messaging/Message;Lbrave/SpanCustomizer;Lorg/springframework/messaging/MessageChannel;)V
     111: getstatic     #27                 // Field log:Lorg/apache/commons/logging/Log;
     114: invokeinterface #28,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     119: ifeq          150
     122: getstatic     #27                 // Field log:Lorg/apache/commons/logging/Log;
     125: new           #29                 // class java/lang/StringBuilder
     128: dup
     129: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     132: ldc           #79                 // String Created a new span in post receive
     134: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: aload         5
     139: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     142: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     145: invokeinterface #35,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     150: aload_3
     151: invokevirtual #22                 // Method org/springframework/messaging/support/MessageHeaderAccessor.setImmutable:()V
     154: new           #65                 // class org/springframework/messaging/support/GenericMessage
     157: dup
     158: aload_1
     159: invokeinterface #55,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
     164: aload_3
     165: invokevirtual #57                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
     168: invokespecial #66                 // Method org/springframework/messaging/support/GenericMessage."<init>":(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)V
     171: areturn

  public void afterReceiveCompletion(org.springframework.messaging.Message<?>, org.springframework.messaging.MessageChannel, java.lang.Exception);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #36                 // Method emptyMessage:(Lorg/springframework/messaging/Message;)Z
       5: ifeq          9
       8: return
       9: getstatic     #27                 // Field log:Lorg/apache/commons/logging/Log;
      12: invokeinterface #28,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      17: ifeq          53
      20: getstatic     #27                 // Field log:Lorg/apache/commons/logging/Log;
      23: new           #29                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #80                 // String Will finish the current span after receive completion
      32: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #6                  // Field tracer:Lbrave/Tracer;
      39: invokevirtual #75                 // Method brave/Tracer.currentSpan:()Lbrave/Span;
      42: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokeinterface #35,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      53: aload_0
      54: aload_3
      55: invokevirtual #76                 // Method finishSpan:(Ljava/lang/Exception;)V
      58: return

  public org.springframework.messaging.Message<?> beforeHandle(org.springframework.messaging.Message<?>, org.springframework.messaging.MessageChannel, org.springframework.messaging.MessageHandler);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #36                 // Method emptyMessage:(Lorg/springframework/messaging/Message;)Z
       5: ifeq          10
       8: aload_1
       9: areturn
      10: aload_0
      11: aload_1
      12: invokespecial #20                 // Method mutableHeaderAccessor:(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
      15: astore        4
      17: aload_0
      18: getfield      #14                 // Field extractor:Lbrave/propagation/TraceContext$Extractor;
      21: aload         4
      23: invokeinterface #21,  2           // InterfaceMethod brave/propagation/TraceContext$Extractor.extract:(Ljava/lang/Object;)Lbrave/propagation/TraceContextOrSamplingFlags;
      28: astore        5
      30: aload_0
      31: getfield      #6                  // Field tracer:Lbrave/Tracer;
      34: aload         5
      36: invokevirtual #23                 // Method brave/Tracer.nextSpan:(Lbrave/propagation/TraceContextOrSamplingFlags;)Lbrave/Span;
      39: astore        6
      41: aload         6
      43: invokevirtual #25                 // Method brave/Span.isNoop:()Z
      46: ifne          82
      49: aload         6
      51: getstatic     #77                 // Field brave/Span$Kind.CONSUMER:Lbrave/Span$Kind;
      54: invokevirtual #44                 // Method brave/Span.kind:(Lbrave/Span$Kind;)Lbrave/Span;
      57: invokevirtual #47                 // Method brave/Span.start:()Lbrave/Span;
      60: pop
      61: aload         6
      63: ldc           #48                 // String broker
      65: invokevirtual #49                 // Method brave/Span.remoteServiceName:(Ljava/lang/String;)Lbrave/Span;
      68: pop
      69: aload_0
      70: aload_1
      71: aload         6
      73: aload_2
      74: invokevirtual #26                 // Method addTags:(Lorg/springframework/messaging/Message;Lbrave/SpanCustomizer;Lorg/springframework/messaging/MessageChannel;)V
      77: aload         6
      79: invokevirtual #81                 // Method brave/Span.finish:()V
      82: aload_0
      83: getfield      #8                  // Field threadLocalSpan:Lbrave/propagation/ThreadLocalSpan;
      86: aload         6
      88: invokevirtual #41                 // Method brave/Span.context:()Lbrave/propagation/TraceContext;
      91: invokestatic  #82                 // Method brave/propagation/TraceContextOrSamplingFlags.create:(Lbrave/propagation/TraceContext;)Lbrave/propagation/TraceContextOrSamplingFlags;
      94: invokevirtual #38                 // Method brave/propagation/ThreadLocalSpan.next:(Lbrave/propagation/TraceContextOrSamplingFlags;)Lbrave/Span;
      97: ldc           #83                 // String handle
      99: invokevirtual #46                 // Method brave/Span.name:(Ljava/lang/String;)Lbrave/Span;
     102: invokevirtual #47                 // Method brave/Span.start:()Lbrave/Span;
     105: pop
     106: aload         4
     108: aload_0
     109: getfield      #4                  // Field tracing:Lbrave/Tracing;
     112: invokevirtual #9                  // Method brave/Tracing.propagation:()Lbrave/propagation/Propagation;
     115: invokeinterface #39,  1           // InterfaceMethod brave/propagation/Propagation.keys:()Ljava/util/List;
     120: invokestatic  #40                 // Method org/springframework/cloud/sleuth/instrument/messaging/MessageHeaderPropagation.removeAnyTraceHeaders:(Lorg/springframework/messaging/support/MessageHeaderAccessor;Ljava/util/List;)V
     123: getstatic     #27                 // Field log:Lorg/apache/commons/logging/Log;
     126: invokeinterface #28,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     131: ifeq          162
     134: getstatic     #27                 // Field log:Lorg/apache/commons/logging/Log;
     137: new           #29                 // class java/lang/StringBuilder
     140: dup
     141: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     144: ldc           #84                 // String Created a new span in before handle
     146: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: aload         6
     151: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     154: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     157: invokeinterface #35,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     162: aload_1
     163: instanceof    #60                 // class org/springframework/messaging/support/ErrorMessage
     166: ifeq          191
     169: new           #60                 // class org/springframework/messaging/support/ErrorMessage
     172: dup
     173: aload_1
     174: invokeinterface #55,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
     179: checkcast     #85                 // class java/lang/Throwable
     182: aload         4
     184: invokevirtual #57                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
     187: invokespecial #64                 // Method org/springframework/messaging/support/ErrorMessage."<init>":(Ljava/lang/Throwable;Lorg/springframework/messaging/MessageHeaders;)V
     190: areturn
     191: aload         4
     193: invokevirtual #22                 // Method org/springframework/messaging/support/MessageHeaderAccessor.setImmutable:()V
     196: new           #65                 // class org/springframework/messaging/support/GenericMessage
     199: dup
     200: aload_1
     201: invokeinterface #55,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
     206: aload         4
     208: invokevirtual #57                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
     211: invokespecial #66                 // Method org/springframework/messaging/support/GenericMessage."<init>":(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)V
     214: areturn

  public void afterMessageHandled(org.springframework.messaging.Message<?>, org.springframework.messaging.MessageChannel, org.springframework.messaging.MessageHandler, java.lang.Exception);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #36                 // Method emptyMessage:(Lorg/springframework/messaging/Message;)Z
       5: ifeq          9
       8: return
       9: getstatic     #27                 // Field log:Lorg/apache/commons/logging/Log;
      12: invokeinterface #28,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      17: ifeq          53
      20: getstatic     #27                 // Field log:Lorg/apache/commons/logging/Log;
      23: new           #29                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #86                 // String Will finish the current span after message handled
      32: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #6                  // Field tracer:Lbrave/Tracer;
      39: invokevirtual #75                 // Method brave/Tracer.currentSpan:()Lbrave/Span;
      42: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokeinterface #35,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      53: aload_0
      54: aload         4
      56: invokevirtual #76                 // Method finishSpan:(Ljava/lang/Exception;)V
      59: return

  void addTags(org.springframework.messaging.Message<?>, brave.SpanCustomizer, org.springframework.messaging.MessageChannel);
    Code:
       0: aload_3
       1: ifnull        18
       4: aload_2
       5: ldc           #87                 // String channel
       7: aload_0
       8: aload_3
       9: invokespecial #88                 // Method messageChannelName:(Lorg/springframework/messaging/MessageChannel;)Ljava/lang/String;
      12: invokeinterface #89,  3           // InterfaceMethod brave/SpanCustomizer.tag:(Ljava/lang/String;Ljava/lang/String;)Lbrave/SpanCustomizer;
      17: pop
      18: return

  private java.lang.String channelName(org.springframework.messaging.MessageChannel);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #17                 // Field integrationObjectSupportPresent:Z
       6: ifeq          43
       9: aload_1
      10: instanceof    #90                 // class org/springframework/integration/context/IntegrationObjectSupport
      13: ifeq          24
      16: aload_1
      17: checkcast     #90                 // class org/springframework/integration/context/IntegrationObjectSupport
      20: invokevirtual #91                 // Method org/springframework/integration/context/IntegrationObjectSupport.getComponentName:()Ljava/lang/String;
      23: astore_2
      24: aload_2
      25: ifnonnull     43
      28: aload_1
      29: instanceof    #92                 // class org/springframework/integration/channel/AbstractMessageChannel
      32: ifeq          43
      35: aload_1
      36: checkcast     #92                 // class org/springframework/integration/channel/AbstractMessageChannel
      39: invokevirtual #93                 // Method org/springframework/integration/channel/AbstractMessageChannel.getFullChannelName:()Ljava/lang/String;
      42: astore_2
      43: aload_2
      44: ifnonnull     52
      47: aload_1
      48: invokevirtual #94                 // Method java/lang/Object.toString:()Ljava/lang/String;
      51: astore_2
      52: aload_2
      53: areturn

  private java.lang.String messageChannelName(org.springframework.messaging.MessageChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #95                 // Method channelName:(Lorg/springframework/messaging/MessageChannel;)Ljava/lang/String;
       5: invokestatic  #96                 // Method org/springframework/cloud/sleuth/util/SpanNameUtil.shorten:(Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  void finishSpan(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #8                  // Field threadLocalSpan:Lbrave/propagation/ThreadLocalSpan;
       4: invokevirtual #97                 // Method brave/propagation/ThreadLocalSpan.remove:()Lbrave/Span;
       7: astore_2
       8: aload_2
       9: ifnull        19
      12: aload_2
      13: invokevirtual #25                 // Method brave/Span.isNoop:()Z
      16: ifeq          20
      19: return
      20: aload_1
      21: ifnull        49
      24: aload_1
      25: invokevirtual #98                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      28: astore_3
      29: aload_3
      30: ifnonnull     41
      33: aload_1
      34: invokevirtual #99                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      37: invokevirtual #100                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      40: astore_3
      41: aload_2
      42: ldc           #101                // String error
      44: aload_3
      45: invokevirtual #102                // Method brave/Span.tag:(Ljava/lang/String;Ljava/lang/String;)Lbrave/Span;
      48: pop
      49: aload_2
      50: invokevirtual #81                 // Method brave/Span.finish:()V
      53: return

  private org.springframework.messaging.support.MessageHeaderAccessor mutableHeaderAccessor(org.springframework.messaging.Message<?>);
    Code:
       0: aload_1
       1: invokestatic  #54                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getMutableAccessor:(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
       4: astore_2
       5: aload_2
       6: iconst_1
       7: invokevirtual #103                // Method org/springframework/messaging/support/MessageHeaderAccessor.setLeaveMutable:(Z)V
      10: aload_2
      11: areturn

  private org.springframework.messaging.Message<?> getMessage(org.springframework.messaging.Message<?>);
    Code:
       0: aload_1
       1: invokeinterface #55,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
       6: astore_2
       7: aload_2
       8: instanceof    #56                 // class org/springframework/messaging/MessagingException
      11: ifeq          37
      14: aload_2
      15: checkcast     #56                 // class org/springframework/messaging/MessagingException
      18: astore_3
      19: aload_3
      20: invokevirtual #104                // Method org/springframework/messaging/MessagingException.getFailedMessage:()Lorg/springframework/messaging/Message;
      23: astore        4
      25: aload         4
      27: ifnull        35
      30: aload         4
      32: goto          36
      35: aload_1
      36: areturn
      37: aload_1
      38: areturn

  private boolean emptyMessage(org.springframework.messaging.Message<?>);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ireturn

  static {};
    Code:
       0: ldc           #1                  // class org/springframework/cloud/sleuth/instrument/messaging/TracingChannelInterceptor
       2: invokestatic  #105                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #27                 // Field log:Lorg/apache/commons/logging/Log;
       8: return
}
