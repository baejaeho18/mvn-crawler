Compiled from "TraceAsyncAspect.java"
public class org.springframework.cloud.sleuth.instrument.async.TraceAsyncAspect {
  private static final java.lang.String CLASS_KEY;

  private static final java.lang.String METHOD_KEY;

  private final brave.Tracer tracer;

  private final org.springframework.cloud.sleuth.SpanNamer spanNamer;

  public org.springframework.cloud.sleuth.instrument.async.TraceAsyncAspect(brave.Tracer, org.springframework.cloud.sleuth.SpanNamer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field tracer:Lbrave/Tracer;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field spanNamer:Lorg/springframework/cloud/sleuth/SpanNamer;
      14: return

  public java.lang.Object traceBackgroundThread(org.aspectj.lang.ProceedingJoinPoint) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method name:(Lorg/aspectj/lang/ProceedingJoinPoint;)Ljava/lang/String;
       5: astore_2
       6: aload_0
       7: getfield      #2                  // Field tracer:Lbrave/Tracer;
      10: invokevirtual #5                  // Method brave/Tracer.currentSpan:()Lbrave/Span;
      13: astore_3
      14: aload_3
      15: ifnonnull     26
      18: aload_0
      19: getfield      #2                  // Field tracer:Lbrave/Tracer;
      22: invokevirtual #6                  // Method brave/Tracer.nextSpan:()Lbrave/Span;
      25: astore_3
      26: aload_3
      27: aload_2
      28: invokevirtual #7                  // Method brave/Span.name:(Ljava/lang/String;)Lbrave/Span;
      31: astore_3
      32: aload_0
      33: getfield      #2                  // Field tracer:Lbrave/Tracer;
      36: aload_3
      37: invokevirtual #8                  // Method brave/Span.start:()Lbrave/Span;
      40: invokevirtual #9                  // Method brave/Tracer.withSpanInScope:(Lbrave/Span;)Lbrave/Tracer$SpanInScope;
      43: astore        4
      45: aconst_null
      46: astore        5
      48: aload_3
      49: ldc           #11                 // String class
      51: aload_1
      52: invokeinterface #12,  1           // InterfaceMethod org/aspectj/lang/ProceedingJoinPoint.getTarget:()Ljava/lang/Object;
      57: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      60: invokevirtual #14                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      63: invokevirtual #15                 // Method brave/Span.tag:(Ljava/lang/String;Ljava/lang/String;)Lbrave/Span;
      66: pop
      67: aload_3
      68: ldc           #16                 // String method
      70: aload_1
      71: invokeinterface #17,  1           // InterfaceMethod org/aspectj/lang/ProceedingJoinPoint.getSignature:()Lorg/aspectj/lang/Signature;
      76: invokeinterface #18,  1           // InterfaceMethod org/aspectj/lang/Signature.getName:()Ljava/lang/String;
      81: invokevirtual #15                 // Method brave/Span.tag:(Ljava/lang/String;Ljava/lang/String;)Lbrave/Span;
      84: pop
      85: aload_1
      86: invokeinterface #19,  1           // InterfaceMethod org/aspectj/lang/ProceedingJoinPoint.proceed:()Ljava/lang/Object;
      91: astore        6
      93: aload         4
      95: ifnull        128
      98: aload         5
     100: ifnull        123
     103: aload         4
     105: invokevirtual #20                 // Method brave/Tracer$SpanInScope.close:()V
     108: goto          128
     111: astore        7
     113: aload         5
     115: aload         7
     117: invokevirtual #22                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     120: goto          128
     123: aload         4
     125: invokevirtual #20                 // Method brave/Tracer$SpanInScope.close:()V
     128: aload_3
     129: invokevirtual #23                 // Method brave/Span.finish:()V
     132: aload         6
     134: areturn
     135: astore        6
     137: aload         6
     139: astore        5
     141: aload         6
     143: athrow
     144: astore        8
     146: aload         4
     148: ifnull        181
     151: aload         5
     153: ifnull        176
     156: aload         4
     158: invokevirtual #20                 // Method brave/Tracer$SpanInScope.close:()V
     161: goto          181
     164: astore        9
     166: aload         5
     168: aload         9
     170: invokevirtual #22                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     173: goto          181
     176: aload         4
     178: invokevirtual #20                 // Method brave/Tracer$SpanInScope.close:()V
     181: aload         8
     183: athrow
     184: astore        10
     186: aload_3
     187: invokevirtual #23                 // Method brave/Span.finish:()V
     190: aload         10
     192: athrow
    Exception table:
       from    to  target type
         103   108   111   Class java/lang/Throwable
          48    93   135   Class java/lang/Throwable
          48    93   144   any
         156   161   164   Class java/lang/Throwable
         135   146   144   any
          32   128   184   any
         135   186   184   any

  java.lang.String name(org.aspectj.lang.ProceedingJoinPoint);
    Code:
       0: aload_0
       1: getfield      #3                  // Field spanNamer:Lorg/springframework/cloud/sleuth/SpanNamer;
       4: aload_0
       5: aload_1
       6: aload_1
       7: invokeinterface #12,  1           // InterfaceMethod org/aspectj/lang/ProceedingJoinPoint.getTarget:()Ljava/lang/Object;
      12: invokespecial #24                 // Method getMethod:(Lorg/aspectj/lang/ProceedingJoinPoint;Ljava/lang/Object;)Ljava/lang/reflect/Method;
      15: aload_1
      16: invokeinterface #17,  1           // InterfaceMethod org/aspectj/lang/ProceedingJoinPoint.getSignature:()Lorg/aspectj/lang/Signature;
      21: invokeinterface #18,  1           // InterfaceMethod org/aspectj/lang/Signature.getName:()Ljava/lang/String;
      26: invokestatic  #25                 // Method org/springframework/cloud/sleuth/util/SpanNameUtil.toLowerHyphen:(Ljava/lang/String;)Ljava/lang/String;
      29: invokeinterface #26,  3           // InterfaceMethod org/springframework/cloud/sleuth/SpanNamer.name:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
      34: areturn

  private java.lang.reflect.Method getMethod(org.aspectj.lang.ProceedingJoinPoint, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #17,  1           // InterfaceMethod org/aspectj/lang/ProceedingJoinPoint.getSignature:()Lorg/aspectj/lang/Signature;
       6: checkcast     #27                 // class org/aspectj/lang/reflect/MethodSignature
       9: astore_3
      10: aload_3
      11: invokeinterface #28,  1           // InterfaceMethod org/aspectj/lang/reflect/MethodSignature.getMethod:()Ljava/lang/reflect/Method;
      16: astore        4
      18: aload_2
      19: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: aload         4
      24: invokevirtual #29                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      27: aload         4
      29: invokevirtual #30                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      32: invokestatic  #31                 // Method org/springframework/util/ReflectionUtils.findMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      35: areturn
}
