Compiled from "ArrayListSpanReporter.java"
public class org.springframework.cloud.sleuth.util.ArrayListSpanReporter implements zipkin2.reporter.Reporter<zipkin2.Span> {
  private final java.util.List<zipkin2.Span> spans;

  public org.springframework.cloud.sleuth.util.ArrayListSpanReporter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field spans:Ljava/util/List;
      15: return

  public java.util.List<zipkin2.Span> getSpans();
    Code:
       0: aload_0
       1: getfield      #4                  // Field spans:Ljava/util/List;
       4: dup
       5: astore_1
       6: monitorenter
       7: new           #2                  // class java/util/ArrayList
      10: dup
      11: aload_0
      12: getfield      #4                  // Field spans:Ljava/util/List;
      15: invokespecial #5                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      18: aload_1
      19: monitorexit
      20: areturn
      21: astore_2
      22: aload_1
      23: monitorexit
      24: aload_2
      25: athrow
    Exception table:
       from    to  target type
           7    20    21   any
          21    24    21   any

  public java.lang.String toString();
    Code:
       0: new           #6                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #8                  // String ArrayListSpanAccumulator{spans=
       9: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #10                 // Method getSpans:()Ljava/util/List;
      16: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: bipush        125
      21: invokevirtual #12                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public void report(zipkin2.Span);
    Code:
       0: aload_0
       1: getfield      #4                  // Field spans:Ljava/util/List;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field spans:Ljava/util/List;
      11: aload_1
      12: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      17: pop
      18: aload_2
      19: monitorexit
      20: goto          28
      23: astore_3
      24: aload_2
      25: monitorexit
      26: aload_3
      27: athrow
      28: return
    Exception table:
       from    to  target type
           7    20    23   any
          23    26    23   any

  public void clear();
    Code:
       0: aload_0
       1: getfield      #4                  // Field spans:Ljava/util/List;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field spans:Ljava/util/List;
      11: invokeinterface #15,  1           // InterfaceMethod java/util/List.clear:()V
      16: aload_1
      17: monitorexit
      18: goto          26
      21: astore_2
      22: aload_1
      23: monitorexit
      24: aload_2
      25: athrow
      26: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    24    21   any

  public void report(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #16                 // class zipkin2/Span
       5: invokevirtual #17                 // Method report:(Lzipkin2/Span;)V
       8: return
}
