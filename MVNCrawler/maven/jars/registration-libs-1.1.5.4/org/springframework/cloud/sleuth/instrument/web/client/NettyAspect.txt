Compiled from "TraceWebClientAutoConfiguration.java"
class org.springframework.cloud.sleuth.instrument.web.client.NettyAspect {
  private final org.springframework.cloud.sleuth.instrument.web.client.TracingHttpClientInstrumentation instrumentation;

  org.springframework.cloud.sleuth.instrument.web.client.NettyAspect(brave.http.HttpTracing);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method org/springframework/cloud/sleuth/instrument/web/client/TracingHttpClientInstrumentation.create:(Lbrave/http/HttpTracing;)Lorg/springframework/cloud/sleuth/instrument/web/client/TracingHttpClientInstrumentation;
       9: putfield      #3                  // Field instrumentation:Lorg/springframework/cloud/sleuth/instrument/web/client/TracingHttpClientInstrumentation;
      12: return

  private void anyHttpClientRequestSending(io.netty.handler.codec.http.HttpMethod, java.lang.String, java.util.function.Function<? super reactor.ipc.netty.http.client.HttpClientRequest, ? extends org.reactivestreams.Publisher<java.lang.Void>>);
    Code:
       0: return

  public java.lang.Object wrapHttpClientRequestSending(org.aspectj.lang.ProceedingJoinPoint, io.netty.handler.codec.http.HttpMethod, java.lang.String, java.util.function.Function<? super reactor.ipc.netty.http.client.HttpClientRequest, ? extends org.reactivestreams.Publisher<java.lang.Void>>) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokedynamic #4,  0              // InvokeDynamic #0:get:(Lorg/springframework/cloud/sleuth/instrument/web/client/NettyAspect;Lorg/aspectj/lang/ProceedingJoinPoint;Lio/netty/handler/codec/http/HttpMethod;Ljava/lang/String;Ljava/util/function/Function;)Ljava/util/function/Supplier;
      11: invokestatic  #5                  // Method reactor/core/publisher/Mono.defer:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      14: areturn

  private reactor.core.publisher.Mono lambda$wrapHttpClientRequestSending$0(org.aspectj.lang.ProceedingJoinPoint, io.netty.handler.codec.http.HttpMethod, java.lang.String, java.util.function.Function);
    Code:
       0: aload_0
       1: getfield      #3                  // Field instrumentation:Lorg/springframework/cloud/sleuth/instrument/web/client/TracingHttpClientInstrumentation;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #6                  // Method org/springframework/cloud/sleuth/instrument/web/client/TracingHttpClientInstrumentation.wrapHttpClientRequestSending:(Lorg/aspectj/lang/ProceedingJoinPoint;Lio/netty/handler/codec/http/HttpMethod;Ljava/lang/String;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      12: areturn
      13: astore        5
      15: aload         5
      17: invokestatic  #8                  // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      20: areturn
    Exception table:
       from    to  target type
           0    12    13   Class java/lang/Throwable
}
