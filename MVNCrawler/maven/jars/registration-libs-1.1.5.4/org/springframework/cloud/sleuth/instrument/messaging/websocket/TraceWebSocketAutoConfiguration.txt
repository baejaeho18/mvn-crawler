Compiled from "TraceWebSocketAutoConfiguration.java"
public class org.springframework.cloud.sleuth.instrument.messaging.websocket.TraceWebSocketAutoConfiguration extends org.springframework.web.socket.config.annotation.AbstractWebSocketMessageBrokerConfigurer {
  brave.Tracing tracing;

  public org.springframework.cloud.sleuth.instrument.messaging.websocket.TraceWebSocketAutoConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/socket/config/annotation/AbstractWebSocketMessageBrokerConfigurer."<init>":()V
       4: return

  public void registerStompEndpoints(org.springframework.web.socket.config.annotation.StompEndpointRegistry);
    Code:
       0: return

  public void configureMessageBroker(org.springframework.messaging.simp.config.MessageBrokerRegistry);
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method org/springframework/messaging/simp/config/MessageBrokerRegistry.configureBrokerChannel:()Lorg/springframework/messaging/simp/config/ChannelRegistration;
       4: iconst_1
       5: anewarray     #3                  // class org/springframework/messaging/support/ChannelInterceptor
       8: dup
       9: iconst_0
      10: aload_0
      11: getfield      #4                  // Field tracing:Lbrave/Tracing;
      14: invokestatic  #5                  // Method org/springframework/cloud/sleuth/instrument/messaging/TracingChannelInterceptor.create:(Lbrave/Tracing;)Lorg/springframework/cloud/sleuth/instrument/messaging/TracingChannelInterceptor;
      17: aastore
      18: invokevirtual #6                  // Method org/springframework/messaging/simp/config/ChannelRegistration.setInterceptors:([Lorg/springframework/messaging/support/ChannelInterceptor;)Lorg/springframework/messaging/simp/config/ChannelRegistration;
      21: pop
      22: return

  public void configureClientOutboundChannel(org.springframework.messaging.simp.config.ChannelRegistration);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #3                  // class org/springframework/messaging/support/ChannelInterceptor
       5: dup
       6: iconst_0
       7: aload_0
       8: getfield      #4                  // Field tracing:Lbrave/Tracing;
      11: invokestatic  #5                  // Method org/springframework/cloud/sleuth/instrument/messaging/TracingChannelInterceptor.create:(Lbrave/Tracing;)Lorg/springframework/cloud/sleuth/instrument/messaging/TracingChannelInterceptor;
      14: aastore
      15: invokevirtual #6                  // Method org/springframework/messaging/simp/config/ChannelRegistration.setInterceptors:([Lorg/springframework/messaging/support/ChannelInterceptor;)Lorg/springframework/messaging/simp/config/ChannelRegistration;
      18: pop
      19: return

  public void configureClientInboundChannel(org.springframework.messaging.simp.config.ChannelRegistration);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #3                  // class org/springframework/messaging/support/ChannelInterceptor
       5: dup
       6: iconst_0
       7: aload_0
       8: getfield      #4                  // Field tracing:Lbrave/Tracing;
      11: invokestatic  #5                  // Method org/springframework/cloud/sleuth/instrument/messaging/TracingChannelInterceptor.create:(Lbrave/Tracing;)Lorg/springframework/cloud/sleuth/instrument/messaging/TracingChannelInterceptor;
      14: aastore
      15: invokevirtual #6                  // Method org/springframework/messaging/simp/config/ChannelRegistration.setInterceptors:([Lorg/springframework/messaging/support/ChannelInterceptor;)Lorg/springframework/messaging/simp/config/ChannelRegistration;
      18: pop
      19: return
}
