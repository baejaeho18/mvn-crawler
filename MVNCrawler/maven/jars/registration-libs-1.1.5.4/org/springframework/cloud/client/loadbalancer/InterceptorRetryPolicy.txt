Compiled from "InterceptorRetryPolicy.java"
public class org.springframework.cloud.client.loadbalancer.InterceptorRetryPolicy implements org.springframework.retry.RetryPolicy {
  private org.springframework.http.HttpRequest request;

  private org.springframework.cloud.client.loadbalancer.LoadBalancedRetryPolicy policy;

  private org.springframework.cloud.client.loadbalancer.ServiceInstanceChooser serviceInstanceChooser;

  private java.lang.String serviceName;

  public org.springframework.cloud.client.loadbalancer.InterceptorRetryPolicy(org.springframework.http.HttpRequest, org.springframework.cloud.client.loadbalancer.LoadBalancedRetryPolicy, org.springframework.cloud.client.loadbalancer.ServiceInstanceChooser, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field request:Lorg/springframework/http/HttpRequest;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field policy:Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicy;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field serviceInstanceChooser:Lorg/springframework/cloud/client/loadbalancer/ServiceInstanceChooser;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field serviceName:Ljava/lang/String;
      25: return

  public boolean canRetry(org.springframework.retry.RetryContext);
    Code:
       0: aload_1
       1: checkcast     #6                  // class org/springframework/cloud/client/loadbalancer/LoadBalancedRetryContext
       4: astore_2
       5: aload_2
       6: invokevirtual #7                  // Method org/springframework/cloud/client/loadbalancer/LoadBalancedRetryContext.getRetryCount:()I
       9: ifne          38
      12: aload_2
      13: invokevirtual #8                  // Method org/springframework/cloud/client/loadbalancer/LoadBalancedRetryContext.getServiceInstance:()Lorg/springframework/cloud/client/ServiceInstance;
      16: ifnonnull     38
      19: aload_2
      20: aload_0
      21: getfield      #4                  // Field serviceInstanceChooser:Lorg/springframework/cloud/client/loadbalancer/ServiceInstanceChooser;
      24: aload_0
      25: getfield      #5                  // Field serviceName:Ljava/lang/String;
      28: invokeinterface #9,  2            // InterfaceMethod org/springframework/cloud/client/loadbalancer/ServiceInstanceChooser.choose:(Ljava/lang/String;)Lorg/springframework/cloud/client/ServiceInstance;
      33: invokevirtual #10                 // Method org/springframework/cloud/client/loadbalancer/LoadBalancedRetryContext.setServiceInstance:(Lorg/springframework/cloud/client/ServiceInstance;)V
      36: iconst_1
      37: ireturn
      38: aload_0
      39: getfield      #3                  // Field policy:Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicy;
      42: aload_2
      43: invokeinterface #11,  2           // InterfaceMethod org/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicy.canRetryNextServer:(Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryContext;)Z
      48: ireturn

  public org.springframework.retry.RetryContext open(org.springframework.retry.RetryContext);
    Code:
       0: new           #6                  // class org/springframework/cloud/client/loadbalancer/LoadBalancedRetryContext
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field request:Lorg/springframework/http/HttpRequest;
       9: invokespecial #12                 // Method org/springframework/cloud/client/loadbalancer/LoadBalancedRetryContext."<init>":(Lorg/springframework/retry/RetryContext;Lorg/springframework/http/HttpRequest;)V
      12: areturn

  public void close(org.springframework.retry.RetryContext);
    Code:
       0: aload_0
       1: getfield      #3                  // Field policy:Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicy;
       4: aload_1
       5: checkcast     #6                  // class org/springframework/cloud/client/loadbalancer/LoadBalancedRetryContext
       8: invokeinterface #13,  2           // InterfaceMethod org/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicy.close:(Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryContext;)V
      13: return

  public void registerThrowable(org.springframework.retry.RetryContext, java.lang.Throwable);
    Code:
       0: aload_1
       1: checkcast     #6                  // class org/springframework/cloud/client/loadbalancer/LoadBalancedRetryContext
       4: astore_3
       5: aload_3
       6: aload_2
       7: invokevirtual #14                 // Method org/springframework/cloud/client/loadbalancer/LoadBalancedRetryContext.registerThrowable:(Ljava/lang/Throwable;)V
      10: aload_0
      11: getfield      #3                  // Field policy:Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicy;
      14: aload_3
      15: aload_2
      16: invokeinterface #15,  3           // InterfaceMethod org/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicy.registerThrowable:(Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryContext;Ljava/lang/Throwable;)V
      21: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #17                 // class org/springframework/cloud/client/loadbalancer/InterceptorRetryPolicy
      28: astore_2
      29: aload_0
      30: getfield      #2                  // Field request:Lorg/springframework/http/HttpRequest;
      33: aload_2
      34: getfield      #2                  // Field request:Lorg/springframework/http/HttpRequest;
      37: invokevirtual #18                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      40: ifne          45
      43: iconst_0
      44: ireturn
      45: aload_0
      46: getfield      #3                  // Field policy:Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicy;
      49: aload_2
      50: getfield      #3                  // Field policy:Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicy;
      53: invokevirtual #18                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      56: ifne          61
      59: iconst_0
      60: ireturn
      61: aload_0
      62: getfield      #4                  // Field serviceInstanceChooser:Lorg/springframework/cloud/client/loadbalancer/ServiceInstanceChooser;
      65: aload_2
      66: getfield      #4                  // Field serviceInstanceChooser:Lorg/springframework/cloud/client/loadbalancer/ServiceInstanceChooser;
      69: invokevirtual #18                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      72: ifne          77
      75: iconst_0
      76: ireturn
      77: aload_0
      78: getfield      #5                  // Field serviceName:Ljava/lang/String;
      81: aload_2
      82: getfield      #5                  // Field serviceName:Ljava/lang/String;
      85: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      88: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field request:Lorg/springframework/http/HttpRequest;
       4: invokevirtual #20                 // Method java/lang/Object.hashCode:()I
       7: istore_1
       8: bipush        31
      10: iload_1
      11: imul
      12: aload_0
      13: getfield      #3                  // Field policy:Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicy;
      16: invokevirtual #20                 // Method java/lang/Object.hashCode:()I
      19: iadd
      20: istore_1
      21: bipush        31
      23: iload_1
      24: imul
      25: aload_0
      26: getfield      #4                  // Field serviceInstanceChooser:Lorg/springframework/cloud/client/loadbalancer/ServiceInstanceChooser;
      29: invokevirtual #20                 // Method java/lang/Object.hashCode:()I
      32: iadd
      33: istore_1
      34: bipush        31
      36: iload_1
      37: imul
      38: aload_0
      39: getfield      #5                  // Field serviceName:Ljava/lang/String;
      42: invokevirtual #21                 // Method java/lang/String.hashCode:()I
      45: iadd
      46: istore_1
      47: iload_1
      48: ireturn
}
