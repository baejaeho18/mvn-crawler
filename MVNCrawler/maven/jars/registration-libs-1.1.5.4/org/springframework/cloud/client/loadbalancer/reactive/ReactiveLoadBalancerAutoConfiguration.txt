Compiled from "ReactiveLoadBalancerAutoConfiguration.java"
public class org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancerAutoConfiguration {
  private java.util.List<org.springframework.web.reactive.function.client.WebClient$Builder> webClientBuilders;

  public org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancerAutoConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/util/Collections.emptyList:()Ljava/util/List;
       8: putfield      #3                  // Field webClientBuilders:Ljava/util/List;
      11: return

  public java.util.List<org.springframework.web.reactive.function.client.WebClient$Builder> getBuilders();
    Code:
       0: aload_0
       1: getfield      #3                  // Field webClientBuilders:Ljava/util/List;
       4: areturn

  public org.springframework.beans.factory.SmartInitializingSingleton loadBalancedWebClientInitializer(java.util.List<org.springframework.cloud.client.loadbalancer.reactive.WebClientCustomizer>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #4,  0              // InvokeDynamic #0:afterSingletonsInstantiated:(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancerAutoConfiguration;Ljava/util/List;)Lorg/springframework/beans/factory/SmartInitializingSingleton;
       7: areturn

  public org.springframework.cloud.client.loadbalancer.reactive.WebClientCustomizer loadbalanceClientWebClientCustomizer(org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerExchangeFilterFunction);
    Code:
       0: aload_1
       1: invokedynamic #5,  0              // InvokeDynamic #1:customize:(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerExchangeFilterFunction;)Lorg/springframework/cloud/client/loadbalancer/reactive/WebClientCustomizer;
       6: areturn

  public org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerExchangeFilterFunction loadBalancerExchangeFilterFunction(org.springframework.cloud.client.loadbalancer.LoadBalancerClient);
    Code:
       0: new           #6                  // class org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerExchangeFilterFunction
       3: dup
       4: aload_1
       5: invokespecial #7                  // Method org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerExchangeFilterFunction."<init>":(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;)V
       8: areturn

  private static void lambda$loadbalanceClientWebClientCustomizer$1(org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerExchangeFilterFunction, org.springframework.web.reactive.function.client.WebClient$Builder);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #8,  2            // InterfaceMethod org/springframework/web/reactive/function/client/WebClient$Builder.filter:(Lorg/springframework/web/reactive/function/client/ExchangeFilterFunction;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
       7: pop
       8: return

  private void lambda$loadBalancedWebClientInitializer$0(java.util.List);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getBuilders:()Ljava/util/List;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          73
      19: aload_2
      20: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #13                 // class org/springframework/web/reactive/function/client/WebClient$Builder
      28: astore_3
      29: aload_1
      30: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      35: astore        4
      37: aload         4
      39: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          70
      47: aload         4
      49: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #14                 // class org/springframework/cloud/client/loadbalancer/reactive/WebClientCustomizer
      57: astore        5
      59: aload         5
      61: aload_3
      62: invokeinterface #15,  2           // InterfaceMethod org/springframework/cloud/client/loadbalancer/reactive/WebClientCustomizer.customize:(Lorg/springframework/web/reactive/function/client/WebClient$Builder;)V
      67: goto          37
      70: goto          10
      73: return
}
