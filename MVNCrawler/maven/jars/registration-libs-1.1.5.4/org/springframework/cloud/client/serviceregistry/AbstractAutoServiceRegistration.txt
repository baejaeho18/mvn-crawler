Compiled from "AbstractAutoServiceRegistration.java"
public abstract class org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration<R extends org.springframework.cloud.client.serviceregistry.Registration> implements org.springframework.cloud.client.serviceregistry.AutoServiceRegistration, org.springframework.context.ApplicationContextAware {
  private static final org.apache.commons.logging.Log logger;

  private boolean autoStartup;

  private java.util.concurrent.atomic.AtomicBoolean running;

  private int order;

  private org.springframework.context.ApplicationContext context;

  private org.springframework.core.env.Environment environment;

  private java.util.concurrent.atomic.AtomicInteger port;

  private final org.springframework.cloud.client.serviceregistry.ServiceRegistry<R> serviceRegistry;

  private org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties properties;

  protected org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration(org.springframework.cloud.client.serviceregistry.ServiceRegistry<R>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field autoStartup:Z
       9: aload_0
      10: new           #3                  // class java/util/concurrent/atomic/AtomicBoolean
      13: dup
      14: iconst_0
      15: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      18: putfield      #5                  // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
      21: aload_0
      22: iconst_0
      23: putfield      #6                  // Field order:I
      26: aload_0
      27: new           #7                  // class java/util/concurrent/atomic/AtomicInteger
      30: dup
      31: iconst_0
      32: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      35: putfield      #9                  // Field port:Ljava/util/concurrent/atomic/AtomicInteger;
      38: aload_0
      39: aload_1
      40: putfield      #10                 // Field serviceRegistry:Lorg/springframework/cloud/client/serviceregistry/ServiceRegistry;
      43: return

  protected org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration(org.springframework.cloud.client.serviceregistry.ServiceRegistry<R>, org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field autoStartup:Z
       9: aload_0
      10: new           #3                  // class java/util/concurrent/atomic/AtomicBoolean
      13: dup
      14: iconst_0
      15: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      18: putfield      #5                  // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
      21: aload_0
      22: iconst_0
      23: putfield      #6                  // Field order:I
      26: aload_0
      27: new           #7                  // class java/util/concurrent/atomic/AtomicInteger
      30: dup
      31: iconst_0
      32: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      35: putfield      #9                  // Field port:Ljava/util/concurrent/atomic/AtomicInteger;
      38: aload_0
      39: aload_1
      40: putfield      #10                 // Field serviceRegistry:Lorg/springframework/cloud/client/serviceregistry/ServiceRegistry;
      43: aload_0
      44: aload_2
      45: putfield      #11                 // Field properties:Lorg/springframework/cloud/client/serviceregistry/AutoServiceRegistrationProperties;
      48: return

  protected org.springframework.context.ApplicationContext getContext();
    Code:
       0: aload_0
       1: getfield      #12                 // Field context:Lorg/springframework/context/ApplicationContext;
       4: areturn

  public void bind(org.springframework.boot.web.context.WebServerInitializedEvent);
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method org/springframework/boot/web/context/WebServerInitializedEvent.getApplicationContext:()Lorg/springframework/boot/web/context/WebServerApplicationContext;
       4: astore_2
       5: aload_2
       6: instanceof    #14                 // class org/springframework/boot/web/context/ConfigurableWebServerApplicationContext
       9: ifeq          30
      12: ldc           #15                 // String management
      14: aload_2
      15: checkcast     #14                 // class org/springframework/boot/web/context/ConfigurableWebServerApplicationContext
      18: invokeinterface #16,  1           // InterfaceMethod org/springframework/boot/web/context/ConfigurableWebServerApplicationContext.getServerNamespace:()Ljava/lang/String;
      23: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      26: ifeq          30
      29: return
      30: aload_0
      31: getfield      #9                  // Field port:Ljava/util/concurrent/atomic/AtomicInteger;
      34: iconst_0
      35: aload_1
      36: invokevirtual #18                 // Method org/springframework/boot/web/context/WebServerInitializedEvent.getWebServer:()Lorg/springframework/boot/web/server/WebServer;
      39: invokeinterface #19,  1           // InterfaceMethod org/springframework/boot/web/server/WebServer.getPort:()I
      44: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      47: pop
      48: aload_0
      49: invokevirtual #21                 // Method start:()V
      52: return

  public void setApplicationContext(org.springframework.context.ApplicationContext) throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field context:Lorg/springframework/context/ApplicationContext;
       5: aload_0
       6: aload_0
       7: getfield      #12                 // Field context:Lorg/springframework/context/ApplicationContext;
      10: invokeinterface #22,  1           // InterfaceMethod org/springframework/context/ApplicationContext.getEnvironment:()Lorg/springframework/core/env/Environment;
      15: putfield      #23                 // Field environment:Lorg/springframework/core/env/Environment;
      18: return

  protected org.springframework.core.env.Environment getEnvironment();
    Code:
       0: aload_0
       1: getfield      #23                 // Field environment:Lorg/springframework/core/env/Environment;
       4: areturn

  protected java.util.concurrent.atomic.AtomicInteger getPort();
    Code:
       0: aload_0
       1: getfield      #9                  // Field port:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn

  public boolean isAutoStartup();
    Code:
       0: aload_0
       1: getfield      #2                  // Field autoStartup:Z
       4: ireturn

  public void start();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method isEnabled:()Z
       4: ifne          29
       7: getstatic     #25                 // Field logger:Lorg/apache/commons/logging/Log;
      10: invokeinterface #26,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      15: ifeq          28
      18: getstatic     #25                 // Field logger:Lorg/apache/commons/logging/Log;
      21: ldc           #27                 // String Discovery Lifecycle disabled. Not starting
      23: invokeinterface #28,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      28: return
      29: aload_0
      30: getfield      #5                  // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
      33: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      36: ifne          106
      39: aload_0
      40: getfield      #12                 // Field context:Lorg/springframework/context/ApplicationContext;
      43: new           #30                 // class org/springframework/cloud/client/discovery/event/InstancePreRegisteredEvent
      46: dup
      47: aload_0
      48: aload_0
      49: invokevirtual #31                 // Method getRegistration:()Lorg/springframework/cloud/client/serviceregistry/Registration;
      52: invokespecial #32                 // Method org/springframework/cloud/client/discovery/event/InstancePreRegisteredEvent."<init>":(Ljava/lang/Object;Lorg/springframework/cloud/client/serviceregistry/Registration;)V
      55: invokeinterface #33,  2           // InterfaceMethod org/springframework/context/ApplicationContext.publishEvent:(Lorg/springframework/context/ApplicationEvent;)V
      60: aload_0
      61: invokevirtual #34                 // Method register:()V
      64: aload_0
      65: invokevirtual #35                 // Method shouldRegisterManagement:()Z
      68: ifeq          75
      71: aload_0
      72: invokevirtual #36                 // Method registerManagement:()V
      75: aload_0
      76: getfield      #12                 // Field context:Lorg/springframework/context/ApplicationContext;
      79: new           #37                 // class org/springframework/cloud/client/discovery/event/InstanceRegisteredEvent
      82: dup
      83: aload_0
      84: aload_0
      85: invokevirtual #38                 // Method getConfiguration:()Ljava/lang/Object;
      88: invokespecial #39                 // Method org/springframework/cloud/client/discovery/event/InstanceRegisteredEvent."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      91: invokeinterface #33,  2           // InterfaceMethod org/springframework/context/ApplicationContext.publishEvent:(Lorg/springframework/context/ApplicationEvent;)V
      96: aload_0
      97: getfield      #5                  // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
     100: iconst_0
     101: iconst_1
     102: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
     105: pop
     106: return

  protected boolean shouldRegisterManagement();
    Code:
       0: aload_0
       1: getfield      #11                 // Field properties:Lorg/springframework/cloud/client/serviceregistry/AutoServiceRegistrationProperties;
       4: ifnull        17
       7: aload_0
       8: getfield      #11                 // Field properties:Lorg/springframework/cloud/client/serviceregistry/AutoServiceRegistrationProperties;
      11: invokevirtual #41                 // Method org/springframework/cloud/client/serviceregistry/AutoServiceRegistrationProperties.isRegisterManagement:()Z
      14: ifeq          40
      17: aload_0
      18: invokevirtual #42                 // Method getManagementPort:()Ljava/lang/Integer;
      21: ifnull        38
      24: aload_0
      25: getfield      #12                 // Field context:Lorg/springframework/context/ApplicationContext;
      28: invokestatic  #43                 // Method org/springframework/cloud/client/discovery/ManagementServerPortUtils.isDifferent:(Lorg/springframework/beans/factory/BeanFactory;)Z
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn
      40: iconst_0
      41: ireturn

  protected abstract java.lang.Object getConfiguration();

  protected abstract boolean isEnabled();

  protected java.lang.String getManagementServiceId();
    Code:
       0: new           #44                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #12                 // Field context:Lorg/springframework/context/ApplicationContext;
      11: invokeinterface #46,  1           // InterfaceMethod org/springframework/context/ApplicationContext.getId:()Ljava/lang/String;
      16: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #48                 // String :management
      21: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  protected java.lang.String getManagementServiceName();
    Code:
       0: new           #44                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #50                 // Method getAppName:()Ljava/lang/String;
      11: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #48                 // String :management
      16: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  protected java.lang.Integer getManagementPort();
    Code:
       0: aload_0
       1: getfield      #12                 // Field context:Lorg/springframework/context/ApplicationContext;
       4: invokestatic  #51                 // Method org/springframework/cloud/client/discovery/ManagementServerPortUtils.getPort:(Lorg/springframework/beans/factory/BeanFactory;)Ljava/lang/Integer;
       7: areturn

  protected java.lang.String getAppName();
    Code:
       0: aload_0
       1: getfield      #23                 // Field environment:Lorg/springframework/core/env/Environment;
       4: ldc           #52                 // String spring.application.name
       6: ldc           #53                 // String application
       8: invokeinterface #54,  3           // InterfaceMethod org/springframework/core/env/Environment.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      13: areturn

  public void destroy();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method stop:()V
       4: return

  public boolean isRunning();
    Code:
       0: aload_0
       1: getfield      #5                  // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  protected java.util.concurrent.atomic.AtomicBoolean getRunning();
    Code:
       0: aload_0
       1: getfield      #5                  // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn

  public int getOrder();
    Code:
       0: aload_0
       1: getfield      #6                  // Field order:I
       4: ireturn

  public int getPhase();
    Code:
       0: iconst_0
       1: ireturn

  protected org.springframework.cloud.client.serviceregistry.ServiceRegistry<R> getServiceRegistry();
    Code:
       0: aload_0
       1: getfield      #10                 // Field serviceRegistry:Lorg/springframework/cloud/client/serviceregistry/ServiceRegistry;
       4: areturn

  protected abstract R getRegistration();

  protected abstract R getManagementRegistration();

  protected void register();
    Code:
       0: aload_0
       1: getfield      #10                 // Field serviceRegistry:Lorg/springframework/cloud/client/serviceregistry/ServiceRegistry;
       4: aload_0
       5: invokevirtual #31                 // Method getRegistration:()Lorg/springframework/cloud/client/serviceregistry/Registration;
       8: invokeinterface #56,  2           // InterfaceMethod org/springframework/cloud/client/serviceregistry/ServiceRegistry.register:(Lorg/springframework/cloud/client/serviceregistry/Registration;)V
      13: return

  protected void registerManagement();
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method getManagementRegistration:()Lorg/springframework/cloud/client/serviceregistry/Registration;
       4: astore_1
       5: aload_1
       6: ifnull        19
       9: aload_0
      10: getfield      #10                 // Field serviceRegistry:Lorg/springframework/cloud/client/serviceregistry/ServiceRegistry;
      13: aload_1
      14: invokeinterface #56,  2           // InterfaceMethod org/springframework/cloud/client/serviceregistry/ServiceRegistry.register:(Lorg/springframework/cloud/client/serviceregistry/Registration;)V
      19: return

  protected void deregister();
    Code:
       0: aload_0
       1: getfield      #10                 // Field serviceRegistry:Lorg/springframework/cloud/client/serviceregistry/ServiceRegistry;
       4: aload_0
       5: invokevirtual #31                 // Method getRegistration:()Lorg/springframework/cloud/client/serviceregistry/Registration;
       8: invokeinterface #58,  2           // InterfaceMethod org/springframework/cloud/client/serviceregistry/ServiceRegistry.deregister:(Lorg/springframework/cloud/client/serviceregistry/Registration;)V
      13: return

  protected void deregisterManagement();
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method getManagementRegistration:()Lorg/springframework/cloud/client/serviceregistry/Registration;
       4: astore_1
       5: aload_1
       6: ifnull        19
       9: aload_0
      10: getfield      #10                 // Field serviceRegistry:Lorg/springframework/cloud/client/serviceregistry/ServiceRegistry;
      13: aload_1
      14: invokeinterface #58,  2           // InterfaceMethod org/springframework/cloud/client/serviceregistry/ServiceRegistry.deregister:(Lorg/springframework/cloud/client/serviceregistry/Registration;)V
      19: return

  public void stop();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method getRunning:()Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: iconst_0
       6: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          43
      12: aload_0
      13: invokevirtual #24                 // Method isEnabled:()Z
      16: ifeq          43
      19: aload_0
      20: invokevirtual #60                 // Method deregister:()V
      23: aload_0
      24: invokevirtual #35                 // Method shouldRegisterManagement:()Z
      27: ifeq          34
      30: aload_0
      31: invokevirtual #61                 // Method deregisterManagement:()V
      34: aload_0
      35: getfield      #10                 // Field serviceRegistry:Lorg/springframework/cloud/client/serviceregistry/ServiceRegistry;
      38: invokeinterface #62,  1           // InterfaceMethod org/springframework/cloud/client/serviceregistry/ServiceRegistry.close:()V
      43: return

  static {};
    Code:
       0: ldc           #63                 // class org/springframework/cloud/client/serviceregistry/AbstractAutoServiceRegistration
       2: invokestatic  #64                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #25                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
