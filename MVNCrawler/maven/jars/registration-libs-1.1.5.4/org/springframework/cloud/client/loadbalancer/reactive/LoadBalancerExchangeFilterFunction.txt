Compiled from "LoadBalancerExchangeFilterFunction.java"
public class org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerExchangeFilterFunction implements org.springframework.web.reactive.function.client.ExchangeFilterFunction {
  private static org.apache.commons.logging.Log logger;

  private final org.springframework.cloud.client.loadbalancer.LoadBalancerClient loadBalancerClient;

  public org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerExchangeFilterFunction(org.springframework.cloud.client.loadbalancer.LoadBalancerClient);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field loadBalancerClient:Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;
       9: return

  public reactor.core.publisher.Mono<org.springframework.web.reactive.function.client.ClientResponse> filter(org.springframework.web.reactive.function.client.ClientRequest, org.springframework.web.reactive.function.client.ExchangeFunction);
    Code:
       0: aload_1
       1: invokeinterface #3,  1            // InterfaceMethod org/springframework/web/reactive/function/client/ClientRequest.url:()Ljava/net/URI;
       6: astore_3
       7: aload_3
       8: invokevirtual #4                  // Method java/net/URI.getHost:()Ljava/lang/String;
      11: astore        4
      13: aload         4
      15: ifnonnull     68
      18: ldc           #5                  // String Request URI does not contain a valid hostname: %s
      20: iconst_1
      21: anewarray     #6                  // class java/lang/Object
      24: dup
      25: iconst_0
      26: aload_3
      27: invokevirtual #7                  // Method java/net/URI.toString:()Ljava/lang/String;
      30: aastore
      31: invokestatic  #8                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      34: astore        5
      36: getstatic     #9                  // Field logger:Lorg/apache/commons/logging/Log;
      39: aload         5
      41: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      46: getstatic     #11                 // Field org/springframework/http/HttpStatus.BAD_REQUEST:Lorg/springframework/http/HttpStatus;
      49: invokestatic  #12                 // InterfaceMethod org/springframework/web/reactive/function/client/ClientResponse.create:(Lorg/springframework/http/HttpStatus;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
      52: aload         5
      54: invokeinterface #13,  2           // InterfaceMethod org/springframework/web/reactive/function/client/ClientResponse$Builder.body:(Ljava/lang/String;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
      59: invokeinterface #14,  1           // InterfaceMethod org/springframework/web/reactive/function/client/ClientResponse$Builder.build:()Lorg/springframework/web/reactive/function/client/ClientResponse;
      64: invokestatic  #15                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      67: areturn
      68: aload_0
      69: getfield      #2                  // Field loadBalancerClient:Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;
      72: aload         4
      74: invokeinterface #16,  2           // InterfaceMethod org/springframework/cloud/client/loadbalancer/LoadBalancerClient.choose:(Ljava/lang/String;)Lorg/springframework/cloud/client/ServiceInstance;
      79: astore        5
      81: aload         5
      83: ifnonnull     134
      86: ldc           #17                 // String Load balancer does not contain an instance for the service %s
      88: iconst_1
      89: anewarray     #6                  // class java/lang/Object
      92: dup
      93: iconst_0
      94: aload         4
      96: aastore
      97: invokestatic  #8                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     100: astore        6
     102: getstatic     #9                  // Field logger:Lorg/apache/commons/logging/Log;
     105: aload         6
     107: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     112: getstatic     #18                 // Field org/springframework/http/HttpStatus.SERVICE_UNAVAILABLE:Lorg/springframework/http/HttpStatus;
     115: invokestatic  #12                 // InterfaceMethod org/springframework/web/reactive/function/client/ClientResponse.create:(Lorg/springframework/http/HttpStatus;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
     118: aload         6
     120: invokeinterface #13,  2           // InterfaceMethod org/springframework/web/reactive/function/client/ClientResponse$Builder.body:(Ljava/lang/String;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
     125: invokeinterface #14,  1           // InterfaceMethod org/springframework/web/reactive/function/client/ClientResponse$Builder.build:()Lorg/springframework/web/reactive/function/client/ClientResponse;
     130: invokestatic  #15                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
     133: areturn
     134: aload_0
     135: getfield      #2                  // Field loadBalancerClient:Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;
     138: aload         5
     140: aload_3
     141: invokeinterface #19,  3           // InterfaceMethod org/springframework/cloud/client/loadbalancer/LoadBalancerClient.reconstructURI:(Lorg/springframework/cloud/client/ServiceInstance;Ljava/net/URI;)Ljava/net/URI;
     146: astore        6
     148: aload_1
     149: invokeinterface #20,  1           // InterfaceMethod org/springframework/web/reactive/function/client/ClientRequest.method:()Lorg/springframework/http/HttpMethod;
     154: aload         6
     156: invokestatic  #21                 // InterfaceMethod org/springframework/web/reactive/function/client/ClientRequest.method:(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)Lorg/springframework/web/reactive/function/client/ClientRequest$Builder;
     159: aload_1
     160: invokedynamic #22,  0             // InvokeDynamic #0:accept:(Lorg/springframework/web/reactive/function/client/ClientRequest;)Ljava/util/function/Consumer;
     165: invokeinterface #23,  2           // InterfaceMethod org/springframework/web/reactive/function/client/ClientRequest$Builder.headers:(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/ClientRequest$Builder;
     170: aload_1
     171: invokedynamic #24,  0             // InvokeDynamic #1:accept:(Lorg/springframework/web/reactive/function/client/ClientRequest;)Ljava/util/function/Consumer;
     176: invokeinterface #25,  2           // InterfaceMethod org/springframework/web/reactive/function/client/ClientRequest$Builder.cookies:(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/ClientRequest$Builder;
     181: aload_1
     182: invokedynamic #26,  0             // InvokeDynamic #2:accept:(Lorg/springframework/web/reactive/function/client/ClientRequest;)Ljava/util/function/Consumer;
     187: invokeinterface #27,  2           // InterfaceMethod org/springframework/web/reactive/function/client/ClientRequest$Builder.attributes:(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/ClientRequest$Builder;
     192: aload_1
     193: invokeinterface #28,  1           // InterfaceMethod org/springframework/web/reactive/function/client/ClientRequest.body:()Lorg/springframework/web/reactive/function/BodyInserter;
     198: invokeinterface #29,  2           // InterfaceMethod org/springframework/web/reactive/function/client/ClientRequest$Builder.body:(Lorg/springframework/web/reactive/function/BodyInserter;)Lorg/springframework/web/reactive/function/client/ClientRequest$Builder;
     203: invokeinterface #30,  1           // InterfaceMethod org/springframework/web/reactive/function/client/ClientRequest$Builder.build:()Lorg/springframework/web/reactive/function/client/ClientRequest;
     208: astore        7
     210: aload_2
     211: aload         7
     213: invokeinterface #31,  2           // InterfaceMethod org/springframework/web/reactive/function/client/ExchangeFunction.exchange:(Lorg/springframework/web/reactive/function/client/ClientRequest;)Lreactor/core/publisher/Mono;
     218: areturn

  private static void lambda$filter$2(org.springframework.web.reactive.function.client.ClientRequest, java.util.Map);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #32,  1           // InterfaceMethod org/springframework/web/reactive/function/client/ClientRequest.attributes:()Ljava/util/Map;
       7: invokeinterface #33,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      12: return

  private static void lambda$filter$1(org.springframework.web.reactive.function.client.ClientRequest, org.springframework.util.MultiValueMap);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #34,  1           // InterfaceMethod org/springframework/web/reactive/function/client/ClientRequest.cookies:()Lorg/springframework/util/MultiValueMap;
       7: invokeinterface #35,  2           // InterfaceMethod org/springframework/util/MultiValueMap.addAll:(Lorg/springframework/util/MultiValueMap;)V
      12: return

  private static void lambda$filter$0(org.springframework.web.reactive.function.client.ClientRequest, org.springframework.http.HttpHeaders);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #36,  1           // InterfaceMethod org/springframework/web/reactive/function/client/ClientRequest.headers:()Lorg/springframework/http/HttpHeaders;
       7: invokevirtual #37                 // Method org/springframework/http/HttpHeaders.addAll:(Lorg/springframework/util/MultiValueMap;)V
      10: return

  static {};
    Code:
       0: ldc           #38                 // class org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerExchangeFilterFunction
       2: invokestatic  #39                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #9                  // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
