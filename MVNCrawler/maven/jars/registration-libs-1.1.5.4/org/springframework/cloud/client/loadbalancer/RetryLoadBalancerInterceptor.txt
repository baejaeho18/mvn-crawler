Compiled from "RetryLoadBalancerInterceptor.java"
public class org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor implements org.springframework.http.client.ClientHttpRequestInterceptor {
  private org.springframework.cloud.client.loadbalancer.LoadBalancerClient loadBalancer;

  private org.springframework.cloud.client.loadbalancer.LoadBalancerRetryProperties lbProperties;

  private org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory requestFactory;

  private org.springframework.cloud.client.loadbalancer.LoadBalancedRetryFactory lbRetryFactory;

  public org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor(org.springframework.cloud.client.loadbalancer.LoadBalancerClient, org.springframework.cloud.client.loadbalancer.LoadBalancerRetryProperties, org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory, org.springframework.cloud.client.loadbalancer.LoadBalancedRetryFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field loadBalancer:Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field lbProperties:Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field requestFactory:Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field lbRetryFactory:Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory;
      25: return

  public org.springframework.http.client.ClientHttpResponse intercept(org.springframework.http.HttpRequest, byte[], org.springframework.http.client.ClientHttpRequestExecution) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #6,  1            // InterfaceMethod org/springframework/http/HttpRequest.getURI:()Ljava/net/URI;
       6: astore        4
       8: aload         4
      10: invokevirtual #7                  // Method java/net/URI.getHost:()Ljava/lang/String;
      13: astore        5
      15: aload         5
      17: ifnull        24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: new           #8                  // class java/lang/StringBuilder
      28: dup
      29: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #10                 // String Request URI does not contain a valid hostname:
      34: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload         4
      39: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokestatic  #14                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      48: aload_0
      49: getfield      #5                  // Field lbRetryFactory:Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory;
      52: aload         5
      54: aload_0
      55: getfield      #2                  // Field loadBalancer:Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;
      58: invokeinterface #15,  3           // InterfaceMethod org/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory.createRetryPolicy:(Ljava/lang/String;Lorg/springframework/cloud/client/loadbalancer/ServiceInstanceChooser;)Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicy;
      63: astore        6
      65: aload_0
      66: aload         5
      68: aload_1
      69: aload         6
      71: invokespecial #16                 // Method createRetryTemplate:(Ljava/lang/String;Lorg/springframework/http/HttpRequest;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicy;)Lorg/springframework/retry/support/RetryTemplate;
      74: astore        7
      76: aload         7
      78: aload_0
      79: aload         5
      81: aload_1
      82: aload_2
      83: aload_3
      84: aload         6
      86: invokedynamic #17,  0             // InvokeDynamic #0:doWithRetry:(Lorg/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor;Ljava/lang/String;Lorg/springframework/http/HttpRequest;[BLorg/springframework/http/client/ClientHttpRequestExecution;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicy;)Lorg/springframework/retry/RetryCallback;
      91: new           #18                 // class org/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor$1
      94: dup
      95: aload_0
      96: invokespecial #19                 // Method org/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor$1."<init>":(Lorg/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor;)V
      99: invokevirtual #20                 // Method org/springframework/retry/support/RetryTemplate.execute:(Lorg/springframework/retry/RetryCallback;Lorg/springframework/retry/RecoveryCallback;)Ljava/lang/Object;
     102: checkcast     #21                 // class org/springframework/http/client/ClientHttpResponse
     105: areturn

  private org.springframework.retry.support.RetryTemplate createRetryTemplate(java.lang.String, org.springframework.http.HttpRequest, org.springframework.cloud.client.loadbalancer.LoadBalancedRetryPolicy);
    Code:
       0: new           #22                 // class org/springframework/retry/support/RetryTemplate
       3: dup
       4: invokespecial #23                 // Method org/springframework/retry/support/RetryTemplate."<init>":()V
       7: astore        4
       9: aload_0
      10: getfield      #5                  // Field lbRetryFactory:Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory;
      13: aload_1
      14: invokeinterface #24,  2           // InterfaceMethod org/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory.createBackOffPolicy:(Ljava/lang/String;)Lorg/springframework/retry/backoff/BackOffPolicy;
      19: astore        5
      21: aload         4
      23: aload         5
      25: ifnonnull     38
      28: new           #25                 // class org/springframework/retry/backoff/NoBackOffPolicy
      31: dup
      32: invokespecial #26                 // Method org/springframework/retry/backoff/NoBackOffPolicy."<init>":()V
      35: goto          40
      38: aload         5
      40: invokevirtual #27                 // Method org/springframework/retry/support/RetryTemplate.setBackOffPolicy:(Lorg/springframework/retry/backoff/BackOffPolicy;)V
      43: aload         4
      45: iconst_1
      46: invokevirtual #28                 // Method org/springframework/retry/support/RetryTemplate.setThrowLastExceptionOnExhausted:(Z)V
      49: aload_0
      50: getfield      #5                  // Field lbRetryFactory:Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory;
      53: aload_1
      54: invokeinterface #29,  2           // InterfaceMethod org/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory.createRetryListeners:(Ljava/lang/String;)[Lorg/springframework/retry/RetryListener;
      59: astore        6
      61: aload         6
      63: ifnull        79
      66: aload         6
      68: arraylength
      69: ifeq          79
      72: aload         4
      74: aload         6
      76: invokevirtual #30                 // Method org/springframework/retry/support/RetryTemplate.setListeners:([Lorg/springframework/retry/RetryListener;)V
      79: aload         4
      81: aload_0
      82: getfield      #3                  // Field lbProperties:Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;
      85: invokevirtual #31                 // Method org/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties.isEnabled:()Z
      88: ifeq          95
      91: aload_3
      92: ifnonnull     105
      95: new           #32                 // class org/springframework/retry/policy/NeverRetryPolicy
      98: dup
      99: invokespecial #33                 // Method org/springframework/retry/policy/NeverRetryPolicy."<init>":()V
     102: goto          119
     105: new           #34                 // class org/springframework/cloud/client/loadbalancer/InterceptorRetryPolicy
     108: dup
     109: aload_2
     110: aload_3
     111: aload_0
     112: getfield      #2                  // Field loadBalancer:Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;
     115: aload_1
     116: invokespecial #35                 // Method org/springframework/cloud/client/loadbalancer/InterceptorRetryPolicy."<init>":(Lorg/springframework/http/HttpRequest;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicy;Lorg/springframework/cloud/client/loadbalancer/ServiceInstanceChooser;Ljava/lang/String;)V
     119: invokevirtual #36                 // Method org/springframework/retry/support/RetryTemplate.setRetryPolicy:(Lorg/springframework/retry/RetryPolicy;)V
     122: aload         4
     124: areturn

  private org.springframework.http.client.ClientHttpResponse lambda$intercept$0(java.lang.String, org.springframework.http.HttpRequest, byte[], org.springframework.http.client.ClientHttpRequestExecution, org.springframework.cloud.client.loadbalancer.LoadBalancedRetryPolicy, org.springframework.retry.RetryContext) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore        7
       3: aload         6
       5: instanceof    #37                 // class org/springframework/cloud/client/loadbalancer/LoadBalancedRetryContext
       8: ifeq          25
      11: aload         6
      13: checkcast     #37                 // class org/springframework/cloud/client/loadbalancer/LoadBalancedRetryContext
      16: astore        8
      18: aload         8
      20: invokevirtual #38                 // Method org/springframework/cloud/client/loadbalancer/LoadBalancedRetryContext.getServiceInstance:()Lorg/springframework/cloud/client/ServiceInstance;
      23: astore        7
      25: aload         7
      27: ifnonnull     42
      30: aload_0
      31: getfield      #2                  // Field loadBalancer:Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;
      34: aload_1
      35: invokeinterface #39,  2           // InterfaceMethod org/springframework/cloud/client/loadbalancer/LoadBalancerClient.choose:(Ljava/lang/String;)Lorg/springframework/cloud/client/ServiceInstance;
      40: astore        7
      42: aload_0
      43: getfield      #2                  // Field loadBalancer:Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;
      46: aload_1
      47: aload         7
      49: aload_0
      50: getfield      #4                  // Field requestFactory:Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;
      53: aload_2
      54: aload_3
      55: aload         4
      57: invokevirtual #40                 // Method org/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory.createRequest:(Lorg/springframework/http/HttpRequest;[BLorg/springframework/http/client/ClientHttpRequestExecution;)Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequest;
      60: invokeinterface #41,  4           // InterfaceMethod org/springframework/cloud/client/loadbalancer/LoadBalancerClient.execute:(Ljava/lang/String;Lorg/springframework/cloud/client/ServiceInstance;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequest;)Ljava/lang/Object;
      65: checkcast     #21                 // class org/springframework/http/client/ClientHttpResponse
      68: astore        8
      70: aload         8
      72: invokeinterface #42,  1           // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getRawStatusCode:()I
      77: istore        9
      79: aload         5
      81: ifnull        128
      84: aload         5
      86: iload         9
      88: invokeinterface #43,  2           // InterfaceMethod org/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicy.retryableStatusCode:(I)Z
      93: ifeq          128
      96: aload         8
      98: invokeinterface #44,  1           // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getBody:()Ljava/io/InputStream;
     103: invokestatic  #45                 // Method org/springframework/util/StreamUtils.copyToByteArray:(Ljava/io/InputStream;)[B
     106: astore        10
     108: aload         8
     110: invokeinterface #46,  1           // InterfaceMethod org/springframework/http/client/ClientHttpResponse.close:()V
     115: new           #47                 // class org/springframework/cloud/client/loadbalancer/ClientHttpResponseStatusCodeException
     118: dup
     119: aload_1
     120: aload         8
     122: aload         10
     124: invokespecial #48                 // Method org/springframework/cloud/client/loadbalancer/ClientHttpResponseStatusCodeException."<init>":(Ljava/lang/String;Lorg/springframework/http/client/ClientHttpResponse;[B)V
     127: athrow
     128: aload         8
     130: areturn
}
