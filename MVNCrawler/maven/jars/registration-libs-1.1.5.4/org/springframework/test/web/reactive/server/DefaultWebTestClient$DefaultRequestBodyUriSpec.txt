Compiled from "DefaultWebTestClient.java"
class org.springframework.test.web.reactive.server.DefaultWebTestClient$DefaultRequestBodyUriSpec implements org.springframework.test.web.reactive.server.WebTestClient$RequestBodyUriSpec {
  private final org.springframework.web.reactive.function.client.WebClient$RequestBodyUriSpec bodySpec;

  private java.lang.String uriTemplate;

  private final java.lang.String requestId;

  final org.springframework.test.web.reactive.server.DefaultWebTestClient this$0;

  org.springframework.test.web.reactive.server.DefaultWebTestClient$DefaultRequestBodyUriSpec(org.springframework.test.web.reactive.server.DefaultWebTestClient, org.springframework.web.reactive.function.client.WebClient$RequestBodyUriSpec);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/test/web/reactive/server/DefaultWebTestClient;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field bodySpec:Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
      14: aload_0
      15: aload_1
      16: invokestatic  #4                  // Method org/springframework/test/web/reactive/server/DefaultWebTestClient.access$000:(Lorg/springframework/test/web/reactive/server/DefaultWebTestClient;)Ljava/util/concurrent/atomic/AtomicLong;
      19: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      22: invokestatic  #6                  // Method java/lang/String.valueOf:(J)Ljava/lang/String;
      25: putfield      #7                  // Field requestId:Ljava/lang/String;
      28: aload_0
      29: getfield      #3                  // Field bodySpec:Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
      32: ldc           #9                  // String WebTestClient-Request-Id
      34: iconst_1
      35: anewarray     #10                 // class java/lang/String
      38: dup
      39: iconst_0
      40: aload_0
      41: getfield      #7                  // Field requestId:Ljava/lang/String;
      44: aastore
      45: invokeinterface #11,  3           // InterfaceMethod org/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec.header:(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
      50: pop
      51: return

  public org.springframework.test.web.reactive.server.WebTestClient$RequestBodySpec uri(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bodySpec:Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
       4: aload_1
       5: aload_2
       6: invokeinterface #12,  3           // InterfaceMethod org/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec.uri:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
      11: pop
      12: aload_0
      13: aload_1
      14: putfield      #13                 // Field uriTemplate:Ljava/lang/String;
      17: aload_0
      18: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestBodySpec uri(java.lang.String, java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bodySpec:Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
       4: aload_1
       5: aload_2
       6: invokeinterface #14,  3           // InterfaceMethod org/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec.uri:(Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
      11: pop
      12: aload_0
      13: aload_1
      14: putfield      #13                 // Field uriTemplate:Ljava/lang/String;
      17: aload_0
      18: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestBodySpec uri(java.util.function.Function<org.springframework.web.util.UriBuilder, java.net.URI>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bodySpec:Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod org/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec.uri:(Ljava/util/function/Function;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
      10: pop
      11: aload_0
      12: aconst_null
      13: putfield      #13                 // Field uriTemplate:Ljava/lang/String;
      16: aload_0
      17: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestBodySpec uri(java.net.URI);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bodySpec:Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod org/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec.uri:(Ljava/net/URI;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
      10: pop
      11: aload_0
      12: aconst_null
      13: putfield      #13                 // Field uriTemplate:Ljava/lang/String;
      16: aload_0
      17: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestBodySpec header(java.lang.String, java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bodySpec:Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
       4: aload_1
       5: aload_2
       6: invokeinterface #11,  3           // InterfaceMethod org/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec.header:(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
      11: pop
      12: aload_0
      13: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestBodySpec headers(java.util.function.Consumer<org.springframework.http.HttpHeaders>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bodySpec:Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod org/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec.headers:(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
      10: pop
      11: aload_0
      12: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestBodySpec attribute(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bodySpec:Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
       4: aload_1
       5: aload_2
       6: invokeinterface #18,  3           // InterfaceMethod org/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec.attribute:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
      11: pop
      12: aload_0
      13: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestBodySpec attributes(java.util.function.Consumer<java.util.Map<java.lang.String, java.lang.Object>>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bodySpec:Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod org/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec.attributes:(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
      10: pop
      11: aload_0
      12: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestBodySpec accept(org.springframework.http.MediaType...);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bodySpec:Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
       4: aload_1
       5: invokeinterface #20,  2           // InterfaceMethod org/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec.accept:([Lorg/springframework/http/MediaType;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
      10: pop
      11: aload_0
      12: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestBodySpec acceptCharset(java.nio.charset.Charset...);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bodySpec:Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod org/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec.acceptCharset:([Ljava/nio/charset/Charset;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
      10: pop
      11: aload_0
      12: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestBodySpec contentType(org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bodySpec:Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod org/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec.contentType:(Lorg/springframework/http/MediaType;)Lorg/springframework/web/reactive/function/client/WebClient$RequestBodySpec;
      10: pop
      11: aload_0
      12: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestBodySpec contentLength(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bodySpec:Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
       4: lload_1
       5: invokeinterface #23,  3           // InterfaceMethod org/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec.contentLength:(J)Lorg/springframework/web/reactive/function/client/WebClient$RequestBodySpec;
      10: pop
      11: aload_0
      12: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestBodySpec cookie(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bodySpec:Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
       4: aload_1
       5: aload_2
       6: invokeinterface #24,  3           // InterfaceMethod org/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec.cookie:(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
      11: pop
      12: aload_0
      13: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestBodySpec cookies(java.util.function.Consumer<org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bodySpec:Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod org/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec.cookies:(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
      10: pop
      11: aload_0
      12: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestBodySpec ifModifiedSince(java.time.ZonedDateTime);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bodySpec:Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
       4: aload_1
       5: invokeinterface #26,  2           // InterfaceMethod org/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec.ifModifiedSince:(Ljava/time/ZonedDateTime;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
      10: pop
      11: aload_0
      12: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestBodySpec ifNoneMatch(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bodySpec:Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod org/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec.ifNoneMatch:([Ljava/lang/String;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
      10: pop
      11: aload_0
      12: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersSpec<?> body(org.springframework.web.reactive.function.BodyInserter<?, ? super org.springframework.http.client.reactive.ClientHttpRequest>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bodySpec:Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
       4: aload_1
       5: invokeinterface #28,  2           // InterfaceMethod org/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec.body:(Lorg/springframework/web/reactive/function/BodyInserter;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
      10: pop
      11: aload_0
      12: areturn

  public <T, S extends org.reactivestreams.Publisher<T>> org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersSpec<?> body(S, java.lang.Class<T>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bodySpec:Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
       4: aload_1
       5: aload_2
       6: invokeinterface #29,  3           // InterfaceMethod org/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec.body:(Lorg/reactivestreams/Publisher;Ljava/lang/Class;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
      11: pop
      12: aload_0
      13: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersSpec<?> syncBody(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bodySpec:Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod org/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec.syncBody:(Ljava/lang/Object;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
      10: pop
      11: aload_0
      12: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec exchange();
    Code:
       0: aload_0
       1: getfield      #3                  // Field bodySpec:Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
       4: invokeinterface #31,  1           // InterfaceMethod org/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec.exchange:()Lreactor/core/publisher/Mono;
       9: aload_0
      10: getfield      #1                  // Field this$0:Lorg/springframework/test/web/reactive/server/DefaultWebTestClient;
      13: invokestatic  #32                 // Method org/springframework/test/web/reactive/server/DefaultWebTestClient.access$100:(Lorg/springframework/test/web/reactive/server/DefaultWebTestClient;)Ljava/time/Duration;
      16: invokevirtual #33                 // Method reactor/core/publisher/Mono.block:(Ljava/time/Duration;)Ljava/lang/Object;
      19: checkcast     #34                 // class org/springframework/web/reactive/function/client/ClientResponse
      22: astore_1
      23: aload_1
      24: ifnull        31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ldc           #35                 // String No ClientResponse
      34: invokestatic  #36                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      37: aload_0
      38: getfield      #1                  // Field this$0:Lorg/springframework/test/web/reactive/server/DefaultWebTestClient;
      41: invokestatic  #37                 // Method org/springframework/test/web/reactive/server/DefaultWebTestClient.access$200:(Lorg/springframework/test/web/reactive/server/DefaultWebTestClient;)Lorg/springframework/test/web/reactive/server/WiretapConnector;
      44: aload_0
      45: getfield      #7                  // Field requestId:Ljava/lang/String;
      48: invokevirtual #38                 // Method org/springframework/test/web/reactive/server/WiretapConnector.claimRequest:(Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WiretapConnector$Info;
      51: astore_2
      52: new           #39                 // class org/springframework/test/web/reactive/server/DefaultWebTestClient$DefaultResponseSpec
      55: dup
      56: aload_2
      57: aload_1
      58: aload_0
      59: getfield      #13                 // Field uriTemplate:Ljava/lang/String;
      62: aload_0
      63: getfield      #1                  // Field this$0:Lorg/springframework/test/web/reactive/server/DefaultWebTestClient;
      66: invokestatic  #32                 // Method org/springframework/test/web/reactive/server/DefaultWebTestClient.access$100:(Lorg/springframework/test/web/reactive/server/DefaultWebTestClient;)Ljava/time/Duration;
      69: invokespecial #40                 // Method org/springframework/test/web/reactive/server/DefaultWebTestClient$DefaultResponseSpec."<init>":(Lorg/springframework/test/web/reactive/server/WiretapConnector$Info;Lorg/springframework/web/reactive/function/client/ClientResponse;Ljava/lang/String;Ljava/time/Duration;)V
      72: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersSpec attributes(java.util.function.Consumer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #41                 // Method attributes:(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;
       5: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersSpec attribute(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #42                 // Method attribute:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;
       6: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersSpec headers(java.util.function.Consumer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method headers:(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;
       5: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersSpec header(java.lang.String, java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #44                 // Method header:(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;
       6: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersSpec ifNoneMatch(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method ifNoneMatch:([Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;
       5: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersSpec ifModifiedSince(java.time.ZonedDateTime);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #46                 // Method ifModifiedSince:(Ljava/time/ZonedDateTime;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;
       5: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersSpec cookies(java.util.function.Consumer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #47                 // Method cookies:(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;
       5: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersSpec cookie(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #48                 // Method cookie:(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;
       6: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersSpec acceptCharset(java.nio.charset.Charset[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method acceptCharset:([Ljava/nio/charset/Charset;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;
       5: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersSpec accept(org.springframework.http.MediaType[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method accept:([Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;
       5: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersSpec uri(java.util.function.Function);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #51                 // Method uri:(Ljava/util/function/Function;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;
       5: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersSpec uri(java.lang.String, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #52                 // Method uri:(Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;
       6: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersSpec uri(java.lang.String, java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #53                 // Method uri:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;
       6: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersSpec uri(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #54                 // Method uri:(Ljava/net/URI;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;
       5: areturn
}
