Compiled from "StatusAssertions.java"
public class org.springframework.test.web.reactive.server.StatusAssertions {
  private final org.springframework.test.web.reactive.server.ExchangeResult exchangeResult;

  private final org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec responseSpec;

  org.springframework.test.web.reactive.server.StatusAssertions(org.springframework.test.web.reactive.server.ExchangeResult, org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field exchangeResult:Lorg/springframework/test/web/reactive/server/ExchangeResult;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field responseSpec:Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
      14: return

  public org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec isEqualTo(org.springframework.http.HttpStatus);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method org/springframework/http/HttpStatus.value:()I
       5: invokevirtual #5                  // Method isEqualTo:(I)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
       8: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec isEqualTo(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field exchangeResult:Lorg/springframework/test/web/reactive/server/ExchangeResult;
       4: invokevirtual #6                  // Method org/springframework/test/web/reactive/server/ExchangeResult.getStatus:()Lorg/springframework/http/HttpStatus;
       7: invokevirtual #4                  // Method org/springframework/http/HttpStatus.value:()I
      10: istore_2
      11: aload_0
      12: getfield      #2                  // Field exchangeResult:Lorg/springframework/test/web/reactive/server/ExchangeResult;
      15: iload_1
      16: iload_2
      17: invokedynamic #7,  0              // InvokeDynamic #0:run:(II)Ljava/lang/Runnable;
      22: invokevirtual #8                  // Method org/springframework/test/web/reactive/server/ExchangeResult.assertWithDiagnostics:(Ljava/lang/Runnable;)V
      25: aload_0
      26: getfield      #3                  // Field responseSpec:Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
      29: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec isOk();
    Code:
       0: aload_0
       1: getstatic     #9                  // Field org/springframework/http/HttpStatus.OK:Lorg/springframework/http/HttpStatus;
       4: invokespecial #10                 // Method assertStatusAndReturn:(Lorg/springframework/http/HttpStatus;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
       7: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec isCreated();
    Code:
       0: getstatic     #11                 // Field org/springframework/http/HttpStatus.CREATED:Lorg/springframework/http/HttpStatus;
       3: astore_1
       4: aload_0
       5: aload_1
       6: invokespecial #10                 // Method assertStatusAndReturn:(Lorg/springframework/http/HttpStatus;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
       9: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec isAccepted();
    Code:
       0: aload_0
       1: getstatic     #12                 // Field org/springframework/http/HttpStatus.ACCEPTED:Lorg/springframework/http/HttpStatus;
       4: invokespecial #10                 // Method assertStatusAndReturn:(Lorg/springframework/http/HttpStatus;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
       7: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec isNoContent();
    Code:
       0: aload_0
       1: getstatic     #13                 // Field org/springframework/http/HttpStatus.NO_CONTENT:Lorg/springframework/http/HttpStatus;
       4: invokespecial #10                 // Method assertStatusAndReturn:(Lorg/springframework/http/HttpStatus;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
       7: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec isFound();
    Code:
       0: aload_0
       1: getstatic     #14                 // Field org/springframework/http/HttpStatus.FOUND:Lorg/springframework/http/HttpStatus;
       4: invokespecial #10                 // Method assertStatusAndReturn:(Lorg/springframework/http/HttpStatus;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
       7: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec isSeeOther();
    Code:
       0: aload_0
       1: getstatic     #15                 // Field org/springframework/http/HttpStatus.SEE_OTHER:Lorg/springframework/http/HttpStatus;
       4: invokespecial #10                 // Method assertStatusAndReturn:(Lorg/springframework/http/HttpStatus;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
       7: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec isNotModified();
    Code:
       0: aload_0
       1: getstatic     #16                 // Field org/springframework/http/HttpStatus.NOT_MODIFIED:Lorg/springframework/http/HttpStatus;
       4: invokespecial #10                 // Method assertStatusAndReturn:(Lorg/springframework/http/HttpStatus;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
       7: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec isTemporaryRedirect();
    Code:
       0: aload_0
       1: getstatic     #17                 // Field org/springframework/http/HttpStatus.TEMPORARY_REDIRECT:Lorg/springframework/http/HttpStatus;
       4: invokespecial #10                 // Method assertStatusAndReturn:(Lorg/springframework/http/HttpStatus;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
       7: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec isPermanentRedirect();
    Code:
       0: aload_0
       1: getstatic     #18                 // Field org/springframework/http/HttpStatus.PERMANENT_REDIRECT:Lorg/springframework/http/HttpStatus;
       4: invokespecial #10                 // Method assertStatusAndReturn:(Lorg/springframework/http/HttpStatus;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
       7: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec isBadRequest();
    Code:
       0: aload_0
       1: getstatic     #19                 // Field org/springframework/http/HttpStatus.BAD_REQUEST:Lorg/springframework/http/HttpStatus;
       4: invokespecial #10                 // Method assertStatusAndReturn:(Lorg/springframework/http/HttpStatus;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
       7: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec isUnauthorized();
    Code:
       0: aload_0
       1: getstatic     #20                 // Field org/springframework/http/HttpStatus.UNAUTHORIZED:Lorg/springframework/http/HttpStatus;
       4: invokespecial #10                 // Method assertStatusAndReturn:(Lorg/springframework/http/HttpStatus;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
       7: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec isForbidden();
    Code:
       0: aload_0
       1: getstatic     #21                 // Field org/springframework/http/HttpStatus.FORBIDDEN:Lorg/springframework/http/HttpStatus;
       4: invokespecial #10                 // Method assertStatusAndReturn:(Lorg/springframework/http/HttpStatus;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
       7: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec isNotFound();
    Code:
       0: aload_0
       1: getstatic     #22                 // Field org/springframework/http/HttpStatus.NOT_FOUND:Lorg/springframework/http/HttpStatus;
       4: invokespecial #10                 // Method assertStatusAndReturn:(Lorg/springframework/http/HttpStatus;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
       7: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec reasonEquals(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field exchangeResult:Lorg/springframework/test/web/reactive/server/ExchangeResult;
       4: invokevirtual #6                  // Method org/springframework/test/web/reactive/server/ExchangeResult.getStatus:()Lorg/springframework/http/HttpStatus;
       7: invokevirtual #23                 // Method org/springframework/http/HttpStatus.getReasonPhrase:()Ljava/lang/String;
      10: astore_2
      11: ldc           #24                 // String Response status reason
      13: astore_3
      14: aload_0
      15: getfield      #2                  // Field exchangeResult:Lorg/springframework/test/web/reactive/server/ExchangeResult;
      18: aload_3
      19: aload_1
      20: aload_2
      21: invokedynamic #25,  0             // InvokeDynamic #1:run:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Runnable;
      26: invokevirtual #8                  // Method org/springframework/test/web/reactive/server/ExchangeResult.assertWithDiagnostics:(Ljava/lang/Runnable;)V
      29: aload_0
      30: getfield      #3                  // Field responseSpec:Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
      33: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec is1xxInformational();
    Code:
       0: aload_0
       1: getstatic     #26                 // Field org/springframework/http/HttpStatus$Series.INFORMATIONAL:Lorg/springframework/http/HttpStatus$Series;
       4: invokespecial #27                 // Method assertSeriesAndReturn:(Lorg/springframework/http/HttpStatus$Series;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
       7: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec is2xxSuccessful();
    Code:
       0: aload_0
       1: getstatic     #28                 // Field org/springframework/http/HttpStatus$Series.SUCCESSFUL:Lorg/springframework/http/HttpStatus$Series;
       4: invokespecial #27                 // Method assertSeriesAndReturn:(Lorg/springframework/http/HttpStatus$Series;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
       7: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec is3xxRedirection();
    Code:
       0: aload_0
       1: getstatic     #29                 // Field org/springframework/http/HttpStatus$Series.REDIRECTION:Lorg/springframework/http/HttpStatus$Series;
       4: invokespecial #27                 // Method assertSeriesAndReturn:(Lorg/springframework/http/HttpStatus$Series;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
       7: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec is4xxClientError();
    Code:
       0: aload_0
       1: getstatic     #30                 // Field org/springframework/http/HttpStatus$Series.CLIENT_ERROR:Lorg/springframework/http/HttpStatus$Series;
       4: invokespecial #27                 // Method assertSeriesAndReturn:(Lorg/springframework/http/HttpStatus$Series;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
       7: areturn

  public org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec is5xxServerError();
    Code:
       0: getstatic     #31                 // Field org/springframework/http/HttpStatus$Series.SERVER_ERROR:Lorg/springframework/http/HttpStatus$Series;
       3: astore_1
       4: aload_0
       5: aload_1
       6: invokespecial #27                 // Method assertSeriesAndReturn:(Lorg/springframework/http/HttpStatus$Series;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
       9: areturn

  private org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec assertStatusAndReturn(org.springframework.http.HttpStatus);
    Code:
       0: aload_0
       1: getfield      #2                  // Field exchangeResult:Lorg/springframework/test/web/reactive/server/ExchangeResult;
       4: invokevirtual #6                  // Method org/springframework/test/web/reactive/server/ExchangeResult.getStatus:()Lorg/springframework/http/HttpStatus;
       7: astore_2
       8: aload_0
       9: getfield      #2                  // Field exchangeResult:Lorg/springframework/test/web/reactive/server/ExchangeResult;
      12: aload_1
      13: aload_2
      14: invokedynamic #32,  0             // InvokeDynamic #2:run:(Lorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpStatus;)Ljava/lang/Runnable;
      19: invokevirtual #8                  // Method org/springframework/test/web/reactive/server/ExchangeResult.assertWithDiagnostics:(Ljava/lang/Runnable;)V
      22: aload_0
      23: getfield      #3                  // Field responseSpec:Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
      26: areturn

  private org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec assertSeriesAndReturn(org.springframework.http.HttpStatus$Series);
    Code:
       0: aload_0
       1: getfield      #2                  // Field exchangeResult:Lorg/springframework/test/web/reactive/server/ExchangeResult;
       4: invokevirtual #6                  // Method org/springframework/test/web/reactive/server/ExchangeResult.getStatus:()Lorg/springframework/http/HttpStatus;
       7: astore_2
       8: aload_0
       9: getfield      #2                  // Field exchangeResult:Lorg/springframework/test/web/reactive/server/ExchangeResult;
      12: aload_2
      13: aload_1
      14: invokedynamic #33,  0             // InvokeDynamic #3:run:(Lorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpStatus$Series;)Ljava/lang/Runnable;
      19: invokevirtual #8                  // Method org/springframework/test/web/reactive/server/ExchangeResult.assertWithDiagnostics:(Ljava/lang/Runnable;)V
      22: aload_0
      23: getfield      #3                  // Field responseSpec:Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
      26: areturn

  private static void lambda$assertSeriesAndReturn$3(org.springframework.http.HttpStatus, org.springframework.http.HttpStatus$Series);
    Code:
       0: new           #34                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #36                 // String Range for response status value
       9: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      16: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: aload_1
      20: aload_0
      21: invokevirtual #40                 // Method org/springframework/http/HttpStatus.series:()Lorg/springframework/http/HttpStatus$Series;
      24: invokestatic  #41                 // Method org/springframework/test/util/AssertionErrors.assertEquals:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      27: return

  private static void lambda$assertStatusAndReturn$2(org.springframework.http.HttpStatus, org.springframework.http.HttpStatus);
    Code:
       0: ldc           #42                 // String Status
       2: aload_0
       3: aload_1
       4: invokestatic  #41                 // Method org/springframework/test/util/AssertionErrors.assertEquals:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
       7: return

  private static void lambda$reasonEquals$1(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #41                 // Method org/springframework/test/util/AssertionErrors.assertEquals:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
       6: return

  private static void lambda$isEqualTo$0(int, int);
    Code:
       0: ldc           #42                 // String Status
       2: iload_0
       3: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       6: iload_1
       7: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      10: invokestatic  #41                 // Method org/springframework/test/util/AssertionErrors.assertEquals:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      13: return
}
