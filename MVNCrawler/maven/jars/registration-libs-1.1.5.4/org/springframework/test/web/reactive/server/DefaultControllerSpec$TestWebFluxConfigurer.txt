Compiled from "DefaultControllerSpec.java"
class org.springframework.test.web.reactive.server.DefaultControllerSpec$TestWebFluxConfigurer implements org.springframework.web.reactive.config.WebFluxConfigurer {
  private java.util.function.Consumer<org.springframework.web.reactive.accept.RequestedContentTypeResolverBuilder> contentTypeResolverConsumer;

  private java.util.function.Consumer<org.springframework.web.reactive.config.CorsRegistry> corsRegistryConsumer;

  private java.util.function.Consumer<org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer> argumentResolverConsumer;

  private java.util.function.Consumer<org.springframework.web.reactive.config.PathMatchConfigurer> pathMatchConsumer;

  private java.util.function.Consumer<org.springframework.http.codec.ServerCodecConfigurer> messageCodecsConsumer;

  private java.util.function.Consumer<org.springframework.format.FormatterRegistry> formattersConsumer;

  private org.springframework.validation.Validator validator;

  private java.util.function.Consumer<org.springframework.web.reactive.config.ViewResolverRegistry> viewResolversConsumer;

  final org.springframework.test.web.reactive.server.DefaultControllerSpec this$0;

  private org.springframework.test.web.reactive.server.DefaultControllerSpec$TestWebFluxConfigurer(org.springframework.test.web.reactive.server.DefaultControllerSpec);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field this$0:Lorg/springframework/test/web/reactive/server/DefaultControllerSpec;
       5: aload_0
       6: invokespecial #11                 // Method java/lang/Object."<init>":()V
       9: return

  public void configureContentTypeResolver(org.springframework.web.reactive.accept.RequestedContentTypeResolverBuilder);
    Code:
       0: aload_0
       1: getfield      #8                  // Field contentTypeResolverConsumer:Ljava/util/function/Consumer;
       4: ifnull        17
       7: aload_0
       8: getfield      #8                  // Field contentTypeResolverConsumer:Ljava/util/function/Consumer;
      11: aload_1
      12: invokeinterface #12,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      17: return

  public void addCorsMappings(org.springframework.web.reactive.config.CorsRegistry);
    Code:
       0: aload_0
       1: getfield      #7                  // Field corsRegistryConsumer:Ljava/util/function/Consumer;
       4: ifnull        17
       7: aload_0
       8: getfield      #7                  // Field corsRegistryConsumer:Ljava/util/function/Consumer;
      11: aload_1
      12: invokeinterface #12,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      17: return

  public void configurePathMatching(org.springframework.web.reactive.config.PathMatchConfigurer);
    Code:
       0: aload_0
       1: getfield      #5                  // Field pathMatchConsumer:Ljava/util/function/Consumer;
       4: ifnull        17
       7: aload_0
       8: getfield      #5                  // Field pathMatchConsumer:Ljava/util/function/Consumer;
      11: aload_1
      12: invokeinterface #12,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      17: return

  public void configureArgumentResolvers(org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer);
    Code:
       0: aload_0
       1: getfield      #6                  // Field argumentResolverConsumer:Ljava/util/function/Consumer;
       4: ifnull        17
       7: aload_0
       8: getfield      #6                  // Field argumentResolverConsumer:Ljava/util/function/Consumer;
      11: aload_1
      12: invokeinterface #12,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      17: return

  public void configureHttpMessageCodecs(org.springframework.http.codec.ServerCodecConfigurer);
    Code:
       0: aload_0
       1: getfield      #4                  // Field messageCodecsConsumer:Ljava/util/function/Consumer;
       4: ifnull        17
       7: aload_0
       8: getfield      #4                  // Field messageCodecsConsumer:Ljava/util/function/Consumer;
      11: aload_1
      12: invokeinterface #12,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      17: return

  public void addFormatters(org.springframework.format.FormatterRegistry);
    Code:
       0: aload_0
       1: getfield      #3                  // Field formattersConsumer:Ljava/util/function/Consumer;
       4: ifnull        17
       7: aload_0
       8: getfield      #3                  // Field formattersConsumer:Ljava/util/function/Consumer;
      11: aload_1
      12: invokeinterface #12,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      17: return

  public org.springframework.validation.Validator getValidator();
    Code:
       0: aload_0
       1: getfield      #2                  // Field validator:Lorg/springframework/validation/Validator;
       4: areturn

  public void configureViewResolvers(org.springframework.web.reactive.config.ViewResolverRegistry);
    Code:
       0: aload_0
       1: getfield      #1                  // Field viewResolversConsumer:Ljava/util/function/Consumer;
       4: ifnull        17
       7: aload_0
       8: getfield      #1                  // Field viewResolversConsumer:Ljava/util/function/Consumer;
      11: aload_1
      12: invokeinterface #12,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      17: return

  org.springframework.test.web.reactive.server.DefaultControllerSpec$TestWebFluxConfigurer(org.springframework.test.web.reactive.server.DefaultControllerSpec, org.springframework.test.web.reactive.server.DefaultControllerSpec$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method "<init>":(Lorg/springframework/test/web/reactive/server/DefaultControllerSpec;)V
       5: return

  static java.util.function.Consumer access$102(org.springframework.test.web.reactive.server.DefaultControllerSpec$TestWebFluxConfigurer, java.util.function.Consumer);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #8                  // Field contentTypeResolverConsumer:Ljava/util/function/Consumer;
       6: areturn

  static java.util.function.Consumer access$202(org.springframework.test.web.reactive.server.DefaultControllerSpec$TestWebFluxConfigurer, java.util.function.Consumer);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #7                  // Field corsRegistryConsumer:Ljava/util/function/Consumer;
       6: areturn

  static java.util.function.Consumer access$302(org.springframework.test.web.reactive.server.DefaultControllerSpec$TestWebFluxConfigurer, java.util.function.Consumer);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #6                  // Field argumentResolverConsumer:Ljava/util/function/Consumer;
       6: areturn

  static java.util.function.Consumer access$402(org.springframework.test.web.reactive.server.DefaultControllerSpec$TestWebFluxConfigurer, java.util.function.Consumer);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #5                  // Field pathMatchConsumer:Ljava/util/function/Consumer;
       6: areturn

  static java.util.function.Consumer access$502(org.springframework.test.web.reactive.server.DefaultControllerSpec$TestWebFluxConfigurer, java.util.function.Consumer);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field messageCodecsConsumer:Ljava/util/function/Consumer;
       6: areturn

  static java.util.function.Consumer access$602(org.springframework.test.web.reactive.server.DefaultControllerSpec$TestWebFluxConfigurer, java.util.function.Consumer);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field formattersConsumer:Ljava/util/function/Consumer;
       6: areturn

  static org.springframework.validation.Validator access$702(org.springframework.test.web.reactive.server.DefaultControllerSpec$TestWebFluxConfigurer, org.springframework.validation.Validator);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field validator:Lorg/springframework/validation/Validator;
       6: areturn

  static java.util.function.Consumer access$802(org.springframework.test.web.reactive.server.DefaultControllerSpec$TestWebFluxConfigurer, java.util.function.Consumer);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field viewResolversConsumer:Ljava/util/function/Consumer;
       6: areturn
}
