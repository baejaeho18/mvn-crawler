Compiled from "FluxExchangeResult.java"
public class org.springframework.test.web.reactive.server.FluxExchangeResult<T> extends org.springframework.test.web.reactive.server.ExchangeResult {
  private static final java.lang.IllegalStateException TIMEOUT_ERROR;

  private final reactor.core.publisher.Flux<T> body;

  private final java.time.Duration timeout;

  org.springframework.test.web.reactive.server.FluxExchangeResult(org.springframework.test.web.reactive.server.ExchangeResult, reactor.core.publisher.Flux<T>, java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/test/web/reactive/server/ExchangeResult."<init>":(Lorg/springframework/test/web/reactive/server/ExchangeResult;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field body:Lreactor/core/publisher/Flux;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field timeout:Ljava/time/Duration;
      15: return

  public reactor.core.publisher.Flux<T> getResponseBody();
    Code:
       0: aload_0
       1: getfield      #2                  // Field body:Lreactor/core/publisher/Flux;
       4: areturn

  public byte[] getResponseBodyContent();
    Code:
       0: aload_0
       1: getfield      #2                  // Field body:Lreactor/core/publisher/Flux;
       4: invokevirtual #4                  // Method reactor/core/publisher/Flux.ignoreElements:()Lreactor/core/publisher/Mono;
       7: aload_0
       8: getfield      #3                  // Field timeout:Ljava/time/Duration;
      11: getstatic     #5                  // Field TIMEOUT_ERROR:Ljava/lang/IllegalStateException;
      14: invokestatic  #6                  // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      17: invokevirtual #7                  // Method reactor/core/publisher/Mono.timeout:(Ljava/time/Duration;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      20: aload_0
      21: invokedynamic #8,  0              // InvokeDynamic #0:get:(Lorg/springframework/test/web/reactive/server/FluxExchangeResult;)Ljava/util/function/Supplier;
      26: invokestatic  #9                  // Method reactor/core/publisher/Mono.defer:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      29: invokevirtual #10                 // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      32: invokevirtual #11                 // Method reactor/core/publisher/Mono.block:()Ljava/lang/Object;
      35: checkcast     #12                 // class "[B"
      38: areturn

  public void consumeWith(java.util.function.Consumer<org.springframework.test.web.reactive.server.FluxExchangeResult<T>>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #13,  0             // InvokeDynamic #1:run:(Lorg/springframework/test/web/reactive/server/FluxExchangeResult;Ljava/util/function/Consumer;)Ljava/lang/Runnable;
       8: invokevirtual #14                 // Method assertWithDiagnostics:(Ljava/lang/Runnable;)V
      11: return

  private void lambda$consumeWith$1(java.util.function.Consumer);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #15,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
       7: return

  private reactor.core.publisher.Mono lambda$getResponseBodyContent$0();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method org/springframework/test/web/reactive/server/ExchangeResult.getResponseBodyContent:()[B
       4: invokestatic  #17                 // Method reactor/core/publisher/Mono.justOrEmpty:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
       7: areturn

  static {};
    Code:
       0: new           #18                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #19                 // String Response timeout: for infinite streams use getResponseBody() first with explicit cancellation, e.g. via take(n).
       6: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: putstatic     #5                  // Field TIMEOUT_ERROR:Ljava/lang/IllegalStateException;
      12: return
}
