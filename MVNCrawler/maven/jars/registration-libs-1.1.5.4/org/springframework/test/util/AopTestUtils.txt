Compiled from "AopTestUtils.java"
public abstract class org.springframework.test.util.AopTestUtils {
  public org.springframework.test.util.AopTestUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T> T getTargetObject(java.lang.Object);
    Code:
       0: aload_0
       1: ldc           #2                  // String Candidate must not be null
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #4                  // Method org/springframework/aop/support/AopUtils.isAopProxy:(Ljava/lang/Object;)Z
      10: ifeq          41
      13: aload_0
      14: instanceof    #5                  // class org/springframework/aop/framework/Advised
      17: ifeq          41
      20: aload_0
      21: checkcast     #5                  // class org/springframework/aop/framework/Advised
      24: invokeinterface #6,  1            // InterfaceMethod org/springframework/aop/framework/Advised.getTargetSource:()Lorg/springframework/aop/TargetSource;
      29: invokeinterface #7,  1            // InterfaceMethod org/springframework/aop/TargetSource.getTarget:()Ljava/lang/Object;
      34: astore_1
      35: aload_1
      36: ifnull        41
      39: aload_1
      40: areturn
      41: goto          56
      44: astore_1
      45: new           #9                  // class java/lang/IllegalStateException
      48: dup
      49: ldc           #10                 // String Failed to unwrap proxied object
      51: aload_1
      52: invokespecial #11                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      55: athrow
      56: aload_0
      57: areturn
    Exception table:
       from    to  target type
           6    40    44   Class java/lang/Throwable

  public static <T> T getUltimateTargetObject(java.lang.Object);
    Code:
       0: aload_0
       1: ldc           #2                  // String Candidate must not be null
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #4                  // Method org/springframework/aop/support/AopUtils.isAopProxy:(Ljava/lang/Object;)Z
      10: ifeq          44
      13: aload_0
      14: instanceof    #5                  // class org/springframework/aop/framework/Advised
      17: ifeq          44
      20: aload_0
      21: checkcast     #5                  // class org/springframework/aop/framework/Advised
      24: invokeinterface #6,  1            // InterfaceMethod org/springframework/aop/framework/Advised.getTargetSource:()Lorg/springframework/aop/TargetSource;
      29: invokeinterface #7,  1            // InterfaceMethod org/springframework/aop/TargetSource.getTarget:()Ljava/lang/Object;
      34: astore_1
      35: aload_1
      36: ifnull        44
      39: aload_1
      40: invokestatic  #12                 // Method getUltimateTargetObject:(Ljava/lang/Object;)Ljava/lang/Object;
      43: areturn
      44: goto          59
      47: astore_1
      48: new           #9                  // class java/lang/IllegalStateException
      51: dup
      52: ldc           #10                 // String Failed to unwrap proxied object
      54: aload_1
      55: invokespecial #11                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      58: athrow
      59: aload_0
      60: areturn
    Exception table:
       from    to  target type
           6    43    47   Class java/lang/Throwable
}
