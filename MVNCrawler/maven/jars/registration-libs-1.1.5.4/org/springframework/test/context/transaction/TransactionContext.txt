Compiled from "TransactionContext.java"
class org.springframework.test.context.transaction.TransactionContext {
  private static final org.apache.commons.logging.Log logger;

  private final org.springframework.test.context.TestContext testContext;

  private final org.springframework.transaction.TransactionDefinition transactionDefinition;

  private final org.springframework.transaction.PlatformTransactionManager transactionManager;

  private final boolean defaultRollback;

  private boolean flaggedForRollback;

  private org.springframework.transaction.TransactionStatus transactionStatus;

  private final java.util.concurrent.atomic.AtomicInteger transactionsStarted;

  org.springframework.test.context.transaction.TransactionContext(org.springframework.test.context.TestContext, org.springframework.transaction.PlatformTransactionManager, org.springframework.transaction.TransactionDefinition, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #4                  // Field transactionsStarted:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_0
      17: aload_1
      18: putfield      #5                  // Field testContext:Lorg/springframework/test/context/TestContext;
      21: aload_0
      22: aload_2
      23: putfield      #6                  // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
      26: aload_0
      27: aload_3
      28: putfield      #7                  // Field transactionDefinition:Lorg/springframework/transaction/TransactionDefinition;
      31: aload_0
      32: iload         4
      34: putfield      #8                  // Field defaultRollback:Z
      37: aload_0
      38: iload         4
      40: putfield      #9                  // Field flaggedForRollback:Z
      43: return

  org.springframework.transaction.TransactionStatus getTransactionStatus();
    Code:
       0: aload_0
       1: getfield      #10                 // Field transactionStatus:Lorg/springframework/transaction/TransactionStatus;
       4: areturn

  boolean isFlaggedForRollback();
    Code:
       0: aload_0
       1: getfield      #9                  // Field flaggedForRollback:Z
       4: ireturn

  void setFlaggedForRollback(boolean);
    Code:
       0: aload_0
       1: getfield      #10                 // Field transactionStatus:Lorg/springframework/transaction/TransactionStatus;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: aload_0
      13: invokedynamic #11,  0             // InvokeDynamic #0:get:(Lorg/springframework/test/context/transaction/TransactionContext;)Ljava/util/function/Supplier;
      18: invokestatic  #12                 // Method org/springframework/util/Assert.state:(ZLjava/util/function/Supplier;)V
      21: aload_0
      22: iload_1
      23: putfield      #9                  // Field flaggedForRollback:Z
      26: return

  void startTransaction();
    Code:
       0: aload_0
       1: getfield      #10                 // Field transactionStatus:Lorg/springframework/transaction/TransactionStatus;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #13                 // String Cannot start a new transaction without ending the existing transaction first
      14: invokestatic  #14                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: aload_0
      19: getfield      #8                  // Field defaultRollback:Z
      22: putfield      #9                  // Field flaggedForRollback:Z
      25: aload_0
      26: aload_0
      27: getfield      #6                  // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
      30: aload_0
      31: getfield      #7                  // Field transactionDefinition:Lorg/springframework/transaction/TransactionDefinition;
      34: invokeinterface #15,  2           // InterfaceMethod org/springframework/transaction/PlatformTransactionManager.getTransaction:(Lorg/springframework/transaction/TransactionDefinition;)Lorg/springframework/transaction/TransactionStatus;
      39: putfield      #10                 // Field transactionStatus:Lorg/springframework/transaction/TransactionStatus;
      42: aload_0
      43: getfield      #4                  // Field transactionsStarted:Ljava/util/concurrent/atomic/AtomicInteger;
      46: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      49: istore_1
      50: getstatic     #17                 // Field logger:Lorg/apache/commons/logging/Log;
      53: invokeinterface #18,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
      58: ifeq          109
      61: getstatic     #17                 // Field logger:Lorg/apache/commons/logging/Log;
      64: ldc           #19                 // String Began transaction (%s) for test context %s; transaction manager [%s]; rollback [%s]
      66: iconst_4
      67: anewarray     #20                 // class java/lang/Object
      70: dup
      71: iconst_0
      72: iload_1
      73: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      76: aastore
      77: dup
      78: iconst_1
      79: aload_0
      80: getfield      #5                  // Field testContext:Lorg/springframework/test/context/TestContext;
      83: aastore
      84: dup
      85: iconst_2
      86: aload_0
      87: getfield      #6                  // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
      90: aastore
      91: dup
      92: iconst_3
      93: aload_0
      94: getfield      #9                  // Field flaggedForRollback:Z
      97: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     100: aastore
     101: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     104: invokeinterface #24,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     109: return

  void endTransaction();
    Code:
       0: getstatic     #17                 // Field logger:Lorg/apache/commons/logging/Log;
       3: invokeinterface #25,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
       8: ifeq          52
      11: getstatic     #17                 // Field logger:Lorg/apache/commons/logging/Log;
      14: ldc           #26                 // String Ending transaction for test context %s; transaction status [%s]; rollback [%s]
      16: iconst_3
      17: anewarray     #20                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: getfield      #5                  // Field testContext:Lorg/springframework/test/context/TestContext;
      26: aastore
      27: dup
      28: iconst_1
      29: aload_0
      30: getfield      #10                 // Field transactionStatus:Lorg/springframework/transaction/TransactionStatus;
      33: aastore
      34: dup
      35: iconst_2
      36: aload_0
      37: getfield      #9                  // Field flaggedForRollback:Z
      40: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      43: aastore
      44: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      47: invokeinterface #27,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      52: aload_0
      53: getfield      #10                 // Field transactionStatus:Lorg/springframework/transaction/TransactionStatus;
      56: ifnull        63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: aload_0
      65: invokedynamic #28,  0             // InvokeDynamic #1:get:(Lorg/springframework/test/context/transaction/TransactionContext;)Ljava/util/function/Supplier;
      70: invokestatic  #12                 // Method org/springframework/util/Assert.state:(ZLjava/util/function/Supplier;)V
      73: aload_0
      74: getfield      #9                  // Field flaggedForRollback:Z
      77: ifeq          96
      80: aload_0
      81: getfield      #6                  // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
      84: aload_0
      85: getfield      #10                 // Field transactionStatus:Lorg/springframework/transaction/TransactionStatus;
      88: invokeinterface #29,  2           // InterfaceMethod org/springframework/transaction/PlatformTransactionManager.rollback:(Lorg/springframework/transaction/TransactionStatus;)V
      93: goto          109
      96: aload_0
      97: getfield      #6                  // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
     100: aload_0
     101: getfield      #10                 // Field transactionStatus:Lorg/springframework/transaction/TransactionStatus;
     104: invokeinterface #30,  2           // InterfaceMethod org/springframework/transaction/PlatformTransactionManager.commit:(Lorg/springframework/transaction/TransactionStatus;)V
     109: aload_0
     110: aconst_null
     111: putfield      #10                 // Field transactionStatus:Lorg/springframework/transaction/TransactionStatus;
     114: goto          125
     117: astore_1
     118: aload_0
     119: aconst_null
     120: putfield      #10                 // Field transactionStatus:Lorg/springframework/transaction/TransactionStatus;
     123: aload_1
     124: athrow
     125: getstatic     #17                 // Field logger:Lorg/apache/commons/logging/Log;
     128: invokeinterface #18,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
     133: ifeq          183
     136: getstatic     #17                 // Field logger:Lorg/apache/commons/logging/Log;
     139: new           #31                 // class java/lang/StringBuilder
     142: dup
     143: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     146: aload_0
     147: getfield      #9                  // Field flaggedForRollback:Z
     150: ifeq          158
     153: ldc           #33                 // String Rolled back
     155: goto          160
     158: ldc           #34                 // String Committed
     160: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     163: ldc           #36                 // String  transaction for test:
     165: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: aload_0
     169: getfield      #5                  // Field testContext:Lorg/springframework/test/context/TestContext;
     172: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     175: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     178: invokeinterface #24,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     183: return
    Exception table:
       from    to  target type
          73   109   117   any

  private java.lang.String lambda$endTransaction$1();
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #39                 // String Failed to end transaction - transaction does not exist:
       9: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field testContext:Lorg/springframework/test/context/TestContext;
      16: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  private java.lang.String lambda$setFlaggedForRollback$0();
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #40                 // String Failed to set rollback flag - transaction does not exist:
       9: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field testContext:Lorg/springframework/test/context/TestContext;
      16: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  static {};
    Code:
       0: ldc           #41                 // class org/springframework/test/context/transaction/TransactionContext
       2: invokestatic  #42                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #17                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
