Compiled from "PersistentEntities.java"
public class org.springframework.data.mapping.context.PersistentEntities implements org.springframework.data.util.Streamable<org.springframework.data.mapping.PersistentEntity<?, ? extends org.springframework.data.mapping.PersistentProperty<?>>> {
  private final org.springframework.data.util.Streamable<? extends org.springframework.data.mapping.context.MappingContext<?, ?>> contexts;

  public org.springframework.data.mapping.context.PersistentEntities(java.lang.Iterable<? extends org.springframework.data.mapping.context.MappingContext<?, ?>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String MappingContexts must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: invokestatic  #4                  // InterfaceMethod org/springframework/data/util/Streamable.of:(Ljava/lang/Iterable;)Lorg/springframework/data/util/Streamable;
      15: putfield      #5                  // Field contexts:Lorg/springframework/data/util/Streamable;
      18: return

  public java.util.Optional<org.springframework.data.mapping.PersistentEntity<?, ? extends org.springframework.data.mapping.PersistentProperty<?>>> getPersistentEntity(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field contexts:Lorg/springframework/data/util/Streamable;
       4: invokeinterface #6,  1            // InterfaceMethod org/springframework/data/util/Streamable.stream:()Ljava/util/stream/Stream;
       9: aload_1
      10: invokedynamic #7,  0              // InvokeDynamic #0:test:(Ljava/lang/Class;)Ljava/util/function/Predicate;
      15: invokeinterface #8,  2            // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      20: invokeinterface #9,  1            // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      25: aload_1
      26: invokedynamic #10,  0             // InvokeDynamic #1:apply:(Ljava/lang/Class;)Ljava/util/function/Function;
      31: invokevirtual #11                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      34: areturn

  public org.springframework.data.mapping.PersistentEntity<?, ? extends org.springframework.data.mapping.PersistentProperty<?>> getRequiredPersistentEntity(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #12                 // String Domain type must not be null!
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #13                 // Method getPersistentEntity:(Ljava/lang/Class;)Ljava/util/Optional;
      11: aload_1
      12: invokedynamic #14,  0             // InvokeDynamic #2:get:(Ljava/lang/Class;)Ljava/util/function/Supplier;
      17: invokevirtual #15                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      20: checkcast     #16                 // class org/springframework/data/mapping/PersistentEntity
      23: areturn

  public org.springframework.data.util.Streamable<org.springframework.data.util.TypeInformation<?>> getManagedTypes();
    Code:
       0: aload_0
       1: getfield      #5                  // Field contexts:Lorg/springframework/data/util/Streamable;
       4: invokeinterface #6,  1            // InterfaceMethod org/springframework/data/util/Streamable.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #17,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      14: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      19: invokestatic  #19                 // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      22: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      27: checkcast     #21                 // class java/lang/Iterable
      30: invokestatic  #4                  // InterfaceMethod org/springframework/data/util/Streamable.of:(Ljava/lang/Iterable;)Lorg/springframework/data/util/Streamable;
      33: areturn

  public java.util.Iterator<org.springframework.data.mapping.PersistentEntity<?, ? extends org.springframework.data.mapping.PersistentProperty<?>>> iterator();
    Code:
       0: aload_0
       1: getfield      #5                  // Field contexts:Lorg/springframework/data/util/Streamable;
       4: invokeinterface #6,  1            // InterfaceMethod org/springframework/data/util/Streamable.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #22,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      14: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      19: invokestatic  #23                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      22: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      27: checkcast     #24                 // class java/util/List
      30: invokeinterface #25,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      35: areturn

  private static java.util.stream.Stream lambda$iterator$4(org.springframework.data.mapping.context.MappingContext);
    Code:
       0: aload_0
       1: invokeinterface #26,  1           // InterfaceMethod org/springframework/data/mapping/context/MappingContext.getPersistentEntities:()Ljava/util/Collection;
       6: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      11: areturn

  private static java.util.stream.Stream lambda$getManagedTypes$3(org.springframework.data.mapping.context.MappingContext);
    Code:
       0: aload_0
       1: invokeinterface #28,  1           // InterfaceMethod org/springframework/data/mapping/context/MappingContext.getManagedTypes:()Ljava/util/Collection;
       6: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      11: areturn

  private static java.lang.IllegalArgumentException lambda$getRequiredPersistentEntity$2(java.lang.Class);
    Code:
       0: new           #29                 // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #30                 // String Couldn\'t find PersistentEntity for type %s!
       6: iconst_1
       7: anewarray     #31                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_0
      13: aastore
      14: invokestatic  #32                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      17: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: areturn

  private static org.springframework.data.mapping.PersistentEntity lambda$getPersistentEntity$1(java.lang.Class, org.springframework.data.mapping.context.MappingContext);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #34,  2           // InterfaceMethod org/springframework/data/mapping/context/MappingContext.getRequiredPersistentEntity:(Ljava/lang/Class;)Lorg/springframework/data/mapping/PersistentEntity;
       7: areturn

  private static boolean lambda$getPersistentEntity$0(java.lang.Class, org.springframework.data.mapping.context.MappingContext);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #35,  2           // InterfaceMethod org/springframework/data/mapping/context/MappingContext.hasPersistentEntityFor:(Ljava/lang/Class;)Z
       7: ireturn
}
