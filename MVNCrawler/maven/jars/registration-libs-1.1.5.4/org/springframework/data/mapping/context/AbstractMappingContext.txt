Compiled from "AbstractMappingContext.java"
public abstract class org.springframework.data.mapping.context.AbstractMappingContext<E extends org.springframework.data.mapping.model.MutablePersistentEntity<?, P>, P extends org.springframework.data.mapping.PersistentProperty<P>> implements org.springframework.data.mapping.context.MappingContext<E, P>, org.springframework.context.ApplicationEventPublisherAware, org.springframework.beans.factory.InitializingBean {
  private final java.util.Optional<E> NONE;

  private final java.util.Map<org.springframework.data.util.TypeInformation<?>, java.util.Optional<E>> persistentEntities;

  private final java.util.Map<org.springframework.data.mapping.context.AbstractMappingContext$TypeAndProperties, org.springframework.data.mapping.context.PersistentPropertyPath<P>> propertyPaths;

  private final org.springframework.data.mapping.model.PersistentPropertyAccessorFactory persistentPropertyAccessorFactory;

  private org.springframework.context.ApplicationEventPublisher applicationEventPublisher;

  private java.util.Set<? extends java.lang.Class<?>> initialEntitySet;

  private boolean strict;

  private org.springframework.data.mapping.model.SimpleTypeHolder simpleTypeHolder;

  private final java.util.concurrent.locks.ReentrantReadWriteLock lock;

  private final java.util.concurrent.locks.Lock read;

  private final java.util.concurrent.locks.Lock write;

  public org.springframework.data.mapping.context.AbstractMappingContext();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #3                  // Method java/util/Optional.empty:()Ljava/util/Optional;
       8: putfield      #4                  // Field NONE:Ljava/util/Optional;
      11: aload_0
      12: new           #5                  // class java/util/HashMap
      15: dup
      16: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      19: putfield      #7                  // Field persistentEntities:Ljava/util/Map;
      22: aload_0
      23: new           #8                  // class org/springframework/util/ConcurrentReferenceHashMap
      26: dup
      27: invokespecial #9                  // Method org/springframework/util/ConcurrentReferenceHashMap."<init>":()V
      30: putfield      #10                 // Field propertyPaths:Ljava/util/Map;
      33: aload_0
      34: new           #11                 // class org/springframework/data/mapping/model/ClassGeneratingPropertyAccessorFactory
      37: dup
      38: invokespecial #12                 // Method org/springframework/data/mapping/model/ClassGeneratingPropertyAccessorFactory."<init>":()V
      41: putfield      #13                 // Field persistentPropertyAccessorFactory:Lorg/springframework/data/mapping/model/PersistentPropertyAccessorFactory;
      44: aload_0
      45: new           #14                 // class java/util/HashSet
      48: dup
      49: invokespecial #15                 // Method java/util/HashSet."<init>":()V
      52: putfield      #16                 // Field initialEntitySet:Ljava/util/Set;
      55: aload_0
      56: iconst_0
      57: putfield      #17                 // Field strict:Z
      60: aload_0
      61: getstatic     #18                 // Field org/springframework/data/mapping/model/SimpleTypeHolder.DEFAULT:Lorg/springframework/data/mapping/model/SimpleTypeHolder;
      64: putfield      #1                  // Field simpleTypeHolder:Lorg/springframework/data/mapping/model/SimpleTypeHolder;
      67: aload_0
      68: new           #19                 // class java/util/concurrent/locks/ReentrantReadWriteLock
      71: dup
      72: invokespecial #20                 // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      75: putfield      #21                 // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      78: aload_0
      79: aload_0
      80: getfield      #21                 // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      83: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      86: putfield      #23                 // Field read:Ljava/util/concurrent/locks/Lock;
      89: aload_0
      90: aload_0
      91: getfield      #21                 // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      94: invokevirtual #24                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      97: putfield      #25                 // Field write:Ljava/util/concurrent/locks/Lock;
     100: return

  public void setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field applicationEventPublisher:Lorg/springframework/context/ApplicationEventPublisher;
       5: return

  public void setInitialEntitySet(java.util.Set<? extends java.lang.Class<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field initialEntitySet:Ljava/util/Set;
       5: return

  public void setStrict(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field strict:Z
       5: return

  public void setSimpleTypeHolder(org.springframework.data.mapping.model.SimpleTypeHolder);
    Code:
       0: aload_1
       1: ldc           #27                 // String SimpleTypeHolder must not be null!
       3: invokestatic  #28                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #1                  // Field simpleTypeHolder:Lorg/springframework/data/mapping/model/SimpleTypeHolder;
      11: return

  public java.util.Collection<E> getPersistentEntities();
    Code:
       0: aload_0
       1: getfield      #23                 // Field read:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #7                  // Field persistentEntities:Ljava/util/Map;
      13: invokeinterface #30,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      18: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      23: invokedynamic #32,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      28: invokeinterface #33,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      33: invokestatic  #34                 // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      36: invokeinterface #35,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      41: checkcast     #36                 // class java/util/Collection
      44: astore_1
      45: aload_0
      46: getfield      #23                 // Field read:Ljava/util/concurrent/locks/Lock;
      49: invokeinterface #37,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      54: aload_1
      55: areturn
      56: astore_2
      57: aload_0
      58: getfield      #23                 // Field read:Ljava/util/concurrent/locks/Lock;
      61: invokeinterface #37,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      66: aload_2
      67: athrow
    Exception table:
       from    to  target type
           0    45    56   any

  public E getPersistentEntity(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #38                 // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
       5: invokevirtual #39                 // Method getPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
       8: areturn

  public boolean hasPersistentEntityFor(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #40                 // String Type must not be null!
       3: invokestatic  #28                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #7                  // Field persistentEntities:Ljava/util/Map;
      10: aload_1
      11: invokestatic  #38                 // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
      14: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #42                 // class java/util/Optional
      22: astore_2
      23: aload_2
      24: ifnonnull     31
      27: iconst_0
      28: goto          35
      31: aload_2
      32: invokevirtual #43                 // Method java/util/Optional.isPresent:()Z
      35: ireturn

  public E getPersistentEntity(org.springframework.data.util.TypeInformation<?>);
    Code:
       0: aload_1
       1: ldc           #40                 // String Type must not be null!
       3: invokestatic  #28                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #23                 // Field read:Ljava/util/concurrent/locks/Lock;
      10: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      15: aload_0
      16: getfield      #7                  // Field persistentEntities:Ljava/util/Map;
      19: aload_1
      20: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #42                 // class java/util/Optional
      28: astore_2
      29: aload_2
      30: ifnull        53
      33: aload_2
      34: aconst_null
      35: invokevirtual #44                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #45                 // class org/springframework/data/mapping/model/MutablePersistentEntity
      41: astore_3
      42: aload_0
      43: getfield      #23                 // Field read:Ljava/util/concurrent/locks/Lock;
      46: invokeinterface #37,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      51: aload_3
      52: areturn
      53: aload_0
      54: getfield      #23                 // Field read:Ljava/util/concurrent/locks/Lock;
      57: invokeinterface #37,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      62: goto          79
      65: astore        4
      67: aload_0
      68: getfield      #23                 // Field read:Ljava/util/concurrent/locks/Lock;
      71: invokeinterface #37,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      76: aload         4
      78: athrow
      79: aload_0
      80: aload_1
      81: invokevirtual #46                 // Method shouldCreatePersistentEntityFor:(Lorg/springframework/data/util/TypeInformation;)Z
      84: ifne          139
      87: aload_0
      88: getfield      #25                 // Field write:Ljava/util/concurrent/locks/Lock;
      91: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      96: aload_0
      97: getfield      #7                  // Field persistentEntities:Ljava/util/Map;
     100: aload_1
     101: aload_0
     102: getfield      #4                  // Field NONE:Ljava/util/Optional;
     105: invokeinterface #47,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     110: pop
     111: aload_0
     112: getfield      #25                 // Field write:Ljava/util/concurrent/locks/Lock;
     115: invokeinterface #37,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     120: goto          137
     123: astore        5
     125: aload_0
     126: getfield      #25                 // Field write:Ljava/util/concurrent/locks/Lock;
     129: invokeinterface #37,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     134: aload         5
     136: athrow
     137: aconst_null
     138: areturn
     139: aload_0
     140: getfield      #17                 // Field strict:Z
     143: ifeq          173
     146: new           #48                 // class org/springframework/data/mapping/MappingException
     149: dup
     150: new           #49                 // class java/lang/StringBuilder
     153: dup
     154: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
     157: ldc           #51                 // String Unknown persistent entity
     159: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: aload_1
     163: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     166: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     169: invokespecial #55                 // Method org/springframework/data/mapping/MappingException."<init>":(Ljava/lang/String;)V
     172: athrow
     173: aload_0
     174: aload_1
     175: invokevirtual #56                 // Method addPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Ljava/util/Optional;
     178: aconst_null
     179: invokevirtual #44                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     182: checkcast     #45                 // class org/springframework/data/mapping/model/MutablePersistentEntity
     185: areturn
    Exception table:
       from    to  target type
           6    42    65   any
          65    67    65   any
          87   111   123   any
         123   125   123   any

  public E getPersistentEntity(P);
    Code:
       0: aload_1
       1: ldc           #57                 // String PersistentProperty must not be null!
       3: invokestatic  #28                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokeinterface #58,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isEntity:()Z
      12: ifne          17
      15: aconst_null
      16: areturn
      17: aload_1
      18: invokeinterface #59,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getTypeInformation:()Lorg/springframework/data/util/TypeInformation;
      23: astore_2
      24: aload_0
      25: aload_2
      26: invokeinterface #60,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getRequiredActualType:()Lorg/springframework/data/util/TypeInformation;
      31: invokevirtual #39                 // Method getPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
      34: areturn

  public org.springframework.data.mapping.context.PersistentPropertyPath<P> getPersistentPropertyPath(org.springframework.data.mapping.PropertyPath);
    Code:
       0: aload_1
       1: ldc           #61                 // String Property path must not be null!
       3: invokestatic  #28                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #62                 // Method org/springframework/data/mapping/PropertyPath.toDotPath:()Ljava/lang/String;
      11: aload_1
      12: invokevirtual #63                 // Method org/springframework/data/mapping/PropertyPath.getOwningType:()Lorg/springframework/data/util/TypeInformation;
      15: invokespecial #64                 // Method getPersistentPropertyPath:(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/context/PersistentPropertyPath;
      18: areturn

  public org.springframework.data.mapping.context.PersistentPropertyPath<P> getPersistentPropertyPath(java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #61                 // String Property path must not be null!
       3: invokestatic  #28                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #40                 // String Type must not be null!
       9: invokestatic  #28                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokestatic  #38                 // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
      18: invokespecial #64                 // Method getPersistentPropertyPath:(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/context/PersistentPropertyPath;
      21: areturn

  public org.springframework.data.mapping.context.PersistentPropertyPath<P> getPersistentPropertyPath(org.springframework.data.mapping.context.InvalidPersistentPropertyPath);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #65                 // Method org/springframework/data/mapping/context/InvalidPersistentPropertyPath.getResolvedPath:()Ljava/lang/String;
       5: aload_1
       6: invokevirtual #66                 // Method org/springframework/data/mapping/context/InvalidPersistentPropertyPath.getType:()Lorg/springframework/data/util/TypeInformation;
       9: invokespecial #64                 // Method getPersistentPropertyPath:(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/context/PersistentPropertyPath;
      12: areturn

  private org.springframework.data.mapping.context.PersistentPropertyPath<P> getPersistentPropertyPath(java.lang.String, org.springframework.data.util.TypeInformation<?>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field propertyPaths:Ljava/util/Map;
       4: aload_2
       5: aload_1
       6: invokestatic  #67                 // Method org/springframework/data/mapping/context/AbstractMappingContext$TypeAndProperties.of:(Lorg/springframework/data/util/TypeInformation;Ljava/lang/String;)Lorg/springframework/data/mapping/context/AbstractMappingContext$TypeAndProperties;
       9: aload_0
      10: invokedynamic #68,  0             // InvokeDynamic #1:apply:(Lorg/springframework/data/mapping/context/AbstractMappingContext;)Ljava/util/function/Function;
      15: invokeinterface #69,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      20: checkcast     #70                 // class org/springframework/data/mapping/context/PersistentPropertyPath
      23: areturn

  private org.springframework.data.mapping.context.PersistentPropertyPath<P> createPersistentPropertyPath(java.lang.String, org.springframework.data.util.TypeInformation<?>);
    Code:
       0: aload_1
       1: ldc           #71                 // String \\.
       3: invokevirtual #72                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: invokestatic  #73                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       9: astore_3
      10: invokestatic  #74                 // Method org/springframework/data/mapping/context/DefaultPersistentPropertyPath.empty:()Lorg/springframework/data/mapping/context/DefaultPersistentPropertyPath;
      13: astore        4
      15: aload_3
      16: invokeinterface #75,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      21: astore        5
      23: aload_0
      24: aload_2
      25: invokevirtual #76                 // Method getRequiredPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/PersistentEntity;
      28: checkcast     #45                 // class org/springframework/data/mapping/model/MutablePersistentEntity
      31: astore        6
      33: aload         5
      35: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          159
      43: aload         5
      45: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #79                 // class java/lang/String
      53: astore        7
      55: aload         4
      57: astore        8
      59: aload         6
      61: astore        9
      63: aload_0
      64: aload         4
      66: aload         5
      68: aload         7
      70: aload         6
      72: invokespecial #80                 // Method getPair:(Lorg/springframework/data/mapping/context/DefaultPersistentPropertyPath;Ljava/util/Iterator;Ljava/lang/String;Lorg/springframework/data/mapping/model/MutablePersistentEntity;)Lorg/springframework/data/util/Pair;
      75: astore        10
      77: aload         10
      79: ifnonnull     136
      82: aload_3
      83: ldc           #81                 // String .
      85: invokestatic  #82                 // Method org/springframework/util/StringUtils.collectionToDelimitedString:(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;
      88: astore        11
      90: aload         8
      92: invokevirtual #83                 // Method org/springframework/data/mapping/context/DefaultPersistentPropertyPath.toDotPath:()Ljava/lang/String;
      95: astore        12
      97: new           #84                 // class org/springframework/data/mapping/context/InvalidPersistentPropertyPath
     100: dup
     101: aload         11
     103: aload_2
     104: aload         7
     106: aload         12
     108: ldc           #85                 // String No property %s found on %s!
     110: iconst_2
     111: anewarray     #86                 // class java/lang/Object
     114: dup
     115: iconst_0
     116: aload         7
     118: aastore
     119: dup
     120: iconst_1
     121: aload         9
     123: invokeinterface #87,  1           // InterfaceMethod org/springframework/data/mapping/model/MutablePersistentEntity.getName:()Ljava/lang/String;
     128: aastore
     129: invokestatic  #88                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     132: invokespecial #89                 // Method org/springframework/data/mapping/context/InvalidPersistentPropertyPath."<init>":(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     135: athrow
     136: aload         10
     138: invokevirtual #90                 // Method org/springframework/data/util/Pair.getFirst:()Ljava/lang/Object;
     141: checkcast     #91                 // class org/springframework/data/mapping/context/DefaultPersistentPropertyPath
     144: astore        4
     146: aload         10
     148: invokevirtual #92                 // Method org/springframework/data/util/Pair.getSecond:()Ljava/lang/Object;
     151: checkcast     #45                 // class org/springframework/data/mapping/model/MutablePersistentEntity
     154: astore        6
     156: goto          33
     159: aload         4
     161: areturn

  private org.springframework.data.util.Pair<org.springframework.data.mapping.context.DefaultPersistentPropertyPath<P>, E> getPair(org.springframework.data.mapping.context.DefaultPersistentPropertyPath<P>, java.util.Iterator<java.lang.String>, java.lang.String, E);
    Code:
       0: aload         4
       2: aload_3
       3: invokeinterface #93,  2           // InterfaceMethod org/springframework/data/mapping/model/MutablePersistentEntity.getPersistentProperty:(Ljava/lang/String;)Lorg/springframework/data/mapping/PersistentProperty;
       8: astore        5
      10: aload         5
      12: ifnonnull     17
      15: aconst_null
      16: areturn
      17: aload         5
      19: invokeinterface #59,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getTypeInformation:()Lorg/springframework/data/util/TypeInformation;
      24: invokeinterface #60,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getRequiredActualType:()Lorg/springframework/data/util/TypeInformation;
      29: astore        6
      31: aload_1
      32: aload         5
      34: invokevirtual #94                 // Method org/springframework/data/mapping/context/DefaultPersistentPropertyPath.append:(Lorg/springframework/data/mapping/PersistentProperty;)Lorg/springframework/data/mapping/context/DefaultPersistentPropertyPath;
      37: aload_2
      38: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          58
      46: aload_0
      47: aload         6
      49: invokevirtual #76                 // Method getRequiredPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/PersistentEntity;
      52: checkcast     #45                 // class org/springframework/data/mapping/model/MutablePersistentEntity
      55: goto          60
      58: aload         4
      60: invokestatic  #95                 // Method org/springframework/data/util/Pair.of:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/util/Pair;
      63: areturn

  protected java.util.Optional<E> addPersistentEntity(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #38                 // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
       5: invokevirtual #56                 // Method addPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Ljava/util/Optional;
       8: areturn

  protected java.util.Optional<E> addPersistentEntity(org.springframework.data.util.TypeInformation<?>);
    Code:
       0: aload_1
       1: ldc           #96                 // String TypeInformation must not be null!
       3: invokestatic  #28                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #23                 // Field read:Ljava/util/concurrent/locks/Lock;
      10: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      15: aload_0
      16: getfield      #7                  // Field persistentEntities:Ljava/util/Map;
      19: aload_1
      20: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #42                 // class java/util/Optional
      28: astore_2
      29: aload_2
      30: ifnull        46
      33: aload_2
      34: astore_3
      35: aload_0
      36: getfield      #23                 // Field read:Ljava/util/concurrent/locks/Lock;
      39: invokeinterface #37,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      44: aload_3
      45: areturn
      46: aload_0
      47: getfield      #23                 // Field read:Ljava/util/concurrent/locks/Lock;
      50: invokeinterface #37,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      55: goto          72
      58: astore        4
      60: aload_0
      61: getfield      #23                 // Field read:Ljava/util/concurrent/locks/Lock;
      64: invokeinterface #37,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      69: aload         4
      71: athrow
      72: aload_1
      73: invokeinterface #97,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      78: astore_2
      79: aconst_null
      80: astore_3
      81: aload_0
      82: getfield      #25                 // Field write:Ljava/util/concurrent/locks/Lock;
      85: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      90: aload_0
      91: aload_1
      92: invokevirtual #98                 // Method createPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
      95: astore_3
      96: aload_0
      97: getfield      #7                  // Field persistentEntities:Ljava/util/Map;
     100: aload_1
     101: aload_3
     102: invokestatic  #99                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
     105: invokeinterface #47,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     110: pop
     111: aload_2
     112: invokestatic  #100                // Method org/springframework/beans/BeanUtils.getPropertyDescriptors:(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;
     115: astore        4
     117: new           #5                  // class java/util/HashMap
     120: dup
     121: invokespecial #6                  // Method java/util/HashMap."<init>":()V
     124: astore        5
     126: aload         4
     128: astore        6
     130: aload         6
     132: arraylength
     133: istore        7
     135: iconst_0
     136: istore        8
     138: iload         8
     140: iload         7
     142: if_icmpge     173
     145: aload         6
     147: iload         8
     149: aaload
     150: astore        9
     152: aload         5
     154: aload         9
     156: invokevirtual #101                // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
     159: aload         9
     161: invokeinterface #47,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     166: pop
     167: iinc          8, 1
     170: goto          138
     173: new           #102                // class org/springframework/data/mapping/context/AbstractMappingContext$PersistentPropertyCreator
     176: dup
     177: aload_0
     178: aload_3
     179: aload         5
     181: invokespecial #103                // Method org/springframework/data/mapping/context/AbstractMappingContext$PersistentPropertyCreator."<init>":(Lorg/springframework/data/mapping/context/AbstractMappingContext;Lorg/springframework/data/mapping/model/MutablePersistentEntity;Ljava/util/Map;)V
     184: astore        6
     186: aload_2
     187: aload         6
     189: getstatic     #104                // Field org/springframework/data/mapping/context/AbstractMappingContext$PersistentPropertyFilter.INSTANCE:Lorg/springframework/data/mapping/context/AbstractMappingContext$PersistentPropertyFilter;
     192: invokestatic  #105                // Method org/springframework/util/ReflectionUtils.doWithFields:(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$FieldCallback;Lorg/springframework/util/ReflectionUtils$FieldFilter;)V
     195: aload         6
     197: invokevirtual #106                // Method org/springframework/data/mapping/context/AbstractMappingContext$PersistentPropertyCreator.addPropertiesForRemainingDescriptors:()V
     200: aload_3
     201: invokeinterface #107,  1          // InterfaceMethod org/springframework/data/mapping/model/MutablePersistentEntity.verify:()V
     206: aload_0
     207: getfield      #13                 // Field persistentPropertyAccessorFactory:Lorg/springframework/data/mapping/model/PersistentPropertyAccessorFactory;
     210: aload_3
     211: invokeinterface #108,  2          // InterfaceMethod org/springframework/data/mapping/model/PersistentPropertyAccessorFactory.isSupported:(Lorg/springframework/data/mapping/PersistentEntity;)Z
     216: ifeq          229
     219: aload_3
     220: aload_0
     221: getfield      #13                 // Field persistentPropertyAccessorFactory:Lorg/springframework/data/mapping/model/PersistentPropertyAccessorFactory;
     224: invokeinterface #109,  2          // InterfaceMethod org/springframework/data/mapping/model/MutablePersistentEntity.setPersistentPropertyAccessorFactory:(Lorg/springframework/data/mapping/model/PersistentPropertyAccessorFactory;)V
     229: goto          248
     232: astore        6
     234: aload_0
     235: getfield      #7                  // Field persistentEntities:Ljava/util/Map;
     238: aload_1
     239: invokeinterface #110,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     244: pop
     245: aload         6
     247: athrow
     248: aload_0
     249: getfield      #25                 // Field write:Ljava/util/concurrent/locks/Lock;
     252: invokeinterface #37,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     257: goto          291
     260: astore        4
     262: new           #48                 // class org/springframework/data/mapping/MappingException
     265: dup
     266: aload         4
     268: invokevirtual #112                // Method org/springframework/beans/BeansException.getMessage:()Ljava/lang/String;
     271: aload         4
     273: invokespecial #113                // Method org/springframework/data/mapping/MappingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     276: athrow
     277: astore        10
     279: aload_0
     280: getfield      #25                 // Field write:Ljava/util/concurrent/locks/Lock;
     283: invokeinterface #37,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     288: aload         10
     290: athrow
     291: aload_0
     292: getfield      #26                 // Field applicationEventPublisher:Lorg/springframework/context/ApplicationEventPublisher;
     295: ifnull        320
     298: aload_3
     299: ifnull        320
     302: aload_0
     303: getfield      #26                 // Field applicationEventPublisher:Lorg/springframework/context/ApplicationEventPublisher;
     306: new           #114                // class org/springframework/data/mapping/context/MappingContextEvent
     309: dup
     310: aload_0
     311: aload_3
     312: invokespecial #115                // Method org/springframework/data/mapping/context/MappingContextEvent."<init>":(Lorg/springframework/data/mapping/context/MappingContext;Lorg/springframework/data/mapping/PersistentEntity;)V
     315: invokeinterface #116,  2          // InterfaceMethod org/springframework/context/ApplicationEventPublisher.publishEvent:(Lorg/springframework/context/ApplicationEvent;)V
     320: aload_3
     321: invokestatic  #99                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
     324: areturn
    Exception table:
       from    to  target type
           6    35    58   any
          58    60    58   any
         173   229   232   Class org/springframework/data/mapping/MappingException
          81   248   260   Class org/springframework/beans/BeansException
          81   248   277   any
         260   279   277   any

  public java.util.Collection<org.springframework.data.util.TypeInformation<?>> getManagedTypes();
    Code:
       0: aload_0
       1: getfield      #23                 // Field read:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: new           #14                 // class java/util/HashSet
      12: dup
      13: aload_0
      14: getfield      #7                  // Field persistentEntities:Ljava/util/Map;
      17: invokeinterface #117,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      22: invokespecial #118                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      25: invokestatic  #119                // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      28: astore_1
      29: aload_0
      30: getfield      #23                 // Field read:Ljava/util/concurrent/locks/Lock;
      33: invokeinterface #37,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      38: aload_1
      39: areturn
      40: astore_2
      41: aload_0
      42: getfield      #23                 // Field read:Ljava/util/concurrent/locks/Lock;
      45: invokeinterface #37,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      50: aload_2
      51: athrow
    Exception table:
       from    to  target type
           0    29    40   any

  protected abstract <T> E createPersistentEntity(org.springframework.data.util.TypeInformation<T>);

  protected abstract P createPersistentProperty(org.springframework.data.mapping.model.Property, E, org.springframework.data.mapping.model.SimpleTypeHolder);

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: invokevirtual #120                // Method initialize:()V
       4: return

  public void initialize();
    Code:
       0: aload_0
       1: getfield      #16                 // Field initialEntitySet:Ljava/util/Set;
       4: aload_0
       5: invokedynamic #121,  0            // InvokeDynamic #2:accept:(Lorg/springframework/data/mapping/context/AbstractMappingContext;)Ljava/util/function/Consumer;
      10: invokeinterface #122,  2          // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      15: return

  protected boolean shouldCreatePersistentEntityFor(org.springframework.data.util.TypeInformation<?>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field simpleTypeHolder:Lorg/springframework/data/mapping/model/SimpleTypeHolder;
       4: aload_1
       5: invokeinterface #97,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      10: invokevirtual #123                // Method org/springframework/data/mapping/model/SimpleTypeHolder.isSimpleType:(Ljava/lang/Class;)Z
      13: ifeq          18
      16: iconst_0
      17: ireturn
      18: aload_1
      19: invokeinterface #97,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      24: invokestatic  #124                // Method org/springframework/data/util/ReflectionUtils.isKotlinClass:(Ljava/lang/Class;)Z
      27: ifeq          42
      30: aload_1
      31: invokeinterface #97,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      36: invokestatic  #125                // Method org/springframework/data/util/ReflectionUtils.isSupportedKotlinClass:(Ljava/lang/Class;)Z
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  public org.springframework.data.mapping.PersistentEntity getPersistentEntity(org.springframework.data.mapping.PersistentProperty);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #126                // Method getPersistentEntity:(Lorg/springframework/data/mapping/PersistentProperty;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
       5: areturn

  public org.springframework.data.mapping.PersistentEntity getPersistentEntity(org.springframework.data.util.TypeInformation);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #39                 // Method getPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
       5: areturn

  public org.springframework.data.mapping.PersistentEntity getPersistentEntity(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #127                // Method getPersistentEntity:(Ljava/lang/Class;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
       5: areturn

  private org.springframework.data.mapping.context.PersistentPropertyPath lambda$getPersistentPropertyPath$1(org.springframework.data.mapping.context.AbstractMappingContext$TypeAndProperties);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #128                // Method org/springframework/data/mapping/context/AbstractMappingContext$TypeAndProperties.getPath:()Ljava/lang/String;
       5: aload_1
       6: invokevirtual #129                // Method org/springframework/data/mapping/context/AbstractMappingContext$TypeAndProperties.getType:()Lorg/springframework/data/util/TypeInformation;
       9: invokespecial #130                // Method createPersistentPropertyPath:(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/context/PersistentPropertyPath;
      12: areturn

  private static java.util.stream.Stream lambda$getPersistentEntities$0(java.util.Optional);
    Code:
       0: iconst_1
       1: anewarray     #42                 // class java/util/Optional
       4: dup
       5: iconst_0
       6: aload_0
       7: aastore
       8: invokestatic  #131                // InterfaceMethod org/springframework/data/util/Optionals.toStream:([Ljava/util/Optional;)Ljava/util/stream/Stream;
      11: areturn

  static org.springframework.data.mapping.model.SimpleTypeHolder access$000(org.springframework.data.mapping.context.AbstractMappingContext);
    Code:
       0: aload_0
       1: getfield      #1                  // Field simpleTypeHolder:Lorg/springframework/data/mapping/model/SimpleTypeHolder;
       4: areturn
}
