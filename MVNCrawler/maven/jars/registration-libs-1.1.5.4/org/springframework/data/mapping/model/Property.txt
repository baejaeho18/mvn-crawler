Compiled from "Property.java"
public class org.springframework.data.mapping.model.Property {
  private final java.util.Optional<java.lang.reflect.Field> field;

  private final java.util.Optional<java.beans.PropertyDescriptor> descriptor;

  private final java.lang.Class<?> rawType;

  private final org.springframework.data.util.Lazy<java.lang.Integer> hashCode;

  private final java.util.Optional<java.lang.reflect.Method> getter;

  private final java.util.Optional<java.lang.reflect.Method> setter;

  private final org.springframework.data.util.Lazy<java.lang.String> name;

  private final org.springframework.data.util.Lazy<java.lang.String> toString;

  private org.springframework.data.mapping.model.Property(org.springframework.data.util.TypeInformation<?>, java.util.Optional<java.lang.reflect.Field>, java.util.Optional<java.beans.PropertyDescriptor>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Type must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: iconst_2
      11: anewarray     #4                  // class java/util/Optional
      14: dup
      15: iconst_0
      16: aload_2
      17: aastore
      18: dup
      19: iconst_1
      20: aload_3
      21: aastore
      22: invokestatic  #5                  // InterfaceMethod org/springframework/data/util/Optionals.isAnyPresent:([Ljava/util/Optional;)Z
      25: ldc           #6                  // String Either field or descriptor has to be given!
      27: invokestatic  #7                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      30: aload_0
      31: aload_2
      32: putfield      #8                  // Field field:Ljava/util/Optional;
      35: aload_0
      36: aload_3
      37: putfield      #9                  // Field descriptor:Ljava/util/Optional;
      40: aload_0
      41: aload_0
      42: aload_1
      43: invokedynamic #10,  0             // InvokeDynamic #0:apply:(Lorg/springframework/data/util/TypeInformation;)Ljava/util/function/Function;
      48: aload_1
      49: invokedynamic #11,  0             // InvokeDynamic #1:apply:(Lorg/springframework/data/util/TypeInformation;)Ljava/util/function/Function;
      54: invokespecial #12                 // Method withFieldOrDescriptor:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/lang/Object;
      57: checkcast     #13                 // class java/lang/Class
      60: putfield      #14                 // Field rawType:Ljava/lang/Class;
      63: aload_0
      64: aload_0
      65: invokedynamic #15,  0             // InvokeDynamic #2:get:(Lorg/springframework/data/mapping/model/Property;)Ljava/util/function/Supplier;
      70: invokestatic  #16                 // Method org/springframework/data/util/Lazy.of:(Ljava/util/function/Supplier;)Lorg/springframework/data/util/Lazy;
      73: putfield      #17                 // Field hashCode:Lorg/springframework/data/util/Lazy;
      76: aload_0
      77: aload_0
      78: invokedynamic #18,  0             // InvokeDynamic #3:get:(Lorg/springframework/data/mapping/model/Property;)Ljava/util/function/Supplier;
      83: invokestatic  #16                 // Method org/springframework/data/util/Lazy.of:(Ljava/util/function/Supplier;)Lorg/springframework/data/util/Lazy;
      86: putfield      #19                 // Field name:Lorg/springframework/data/util/Lazy;
      89: aload_0
      90: aload_0
      91: invokedynamic #20,  0             // InvokeDynamic #4:get:(Lorg/springframework/data/mapping/model/Property;)Ljava/util/function/Supplier;
      96: invokestatic  #16                 // Method org/springframework/data/util/Lazy.of:(Ljava/util/function/Supplier;)Lorg/springframework/data/util/Lazy;
      99: putfield      #21                 // Field toString:Lorg/springframework/data/util/Lazy;
     102: aload_0
     103: aload_3
     104: invokedynamic #22,  0             // InvokeDynamic #5:apply:()Ljava/util/function/Function;
     109: invokevirtual #23                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
     112: aload_0
     113: invokedynamic #24,  0             // InvokeDynamic #6:test:(Lorg/springframework/data/mapping/model/Property;)Ljava/util/function/Predicate;
     118: invokevirtual #25                 // Method java/util/Optional.filter:(Ljava/util/function/Predicate;)Ljava/util/Optional;
     121: aload_0
     122: aload_1
     123: invokedynamic #26,  0             // InvokeDynamic #7:test:(Lorg/springframework/data/mapping/model/Property;Lorg/springframework/data/util/TypeInformation;)Ljava/util/function/Predicate;
     128: invokevirtual #25                 // Method java/util/Optional.filter:(Ljava/util/function/Predicate;)Ljava/util/Optional;
     131: putfield      #27                 // Field getter:Ljava/util/Optional;
     134: aload_0
     135: aload_3
     136: invokedynamic #28,  0             // InvokeDynamic #8:apply:()Ljava/util/function/Function;
     141: invokevirtual #23                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
     144: aload_0
     145: invokedynamic #29,  0             // InvokeDynamic #9:test:(Lorg/springframework/data/mapping/model/Property;)Ljava/util/function/Predicate;
     150: invokevirtual #25                 // Method java/util/Optional.filter:(Ljava/util/function/Predicate;)Ljava/util/Optional;
     153: aload_0
     154: aload_1
     155: invokedynamic #30,  0             // InvokeDynamic #10:test:(Lorg/springframework/data/mapping/model/Property;Lorg/springframework/data/util/TypeInformation;)Ljava/util/function/Predicate;
     160: invokevirtual #25                 // Method java/util/Optional.filter:(Ljava/util/function/Predicate;)Ljava/util/Optional;
     163: putfield      #31                 // Field setter:Ljava/util/Optional;
     166: return

  public static org.springframework.data.mapping.model.Property of(org.springframework.data.util.TypeInformation<?>, java.lang.reflect.Field);
    Code:
       0: aload_1
       1: ldc           #32                 // String Field must not be null!
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #33                 // class org/springframework/data/mapping/model/Property
       9: dup
      10: aload_0
      11: aload_1
      12: invokestatic  #34                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      15: invokestatic  #35                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      18: invokespecial #36                 // Method "<init>":(Lorg/springframework/data/util/TypeInformation;Ljava/util/Optional;Ljava/util/Optional;)V
      21: areturn

  public static org.springframework.data.mapping.model.Property of(org.springframework.data.util.TypeInformation<?>, java.lang.reflect.Field, java.beans.PropertyDescriptor);
    Code:
       0: aload_1
       1: ldc           #32                 // String Field must not be null!
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #37                 // String PropertyDescriptor must not be null!
       9: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: new           #33                 // class org/springframework/data/mapping/model/Property
      15: dup
      16: aload_0
      17: aload_1
      18: invokestatic  #34                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      21: aload_2
      22: invokestatic  #34                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      25: invokespecial #36                 // Method "<init>":(Lorg/springframework/data/util/TypeInformation;Ljava/util/Optional;Ljava/util/Optional;)V
      28: areturn

  public static org.springframework.data.mapping.model.Property of(org.springframework.data.util.TypeInformation<?>, java.beans.PropertyDescriptor);
    Code:
       0: aload_1
       1: ldc           #37                 // String PropertyDescriptor must not be null!
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #33                 // class org/springframework/data/mapping/model/Property
       9: dup
      10: aload_0
      11: invokestatic  #35                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      14: aload_1
      15: invokestatic  #34                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      18: invokespecial #36                 // Method "<init>":(Lorg/springframework/data/util/TypeInformation;Ljava/util/Optional;Ljava/util/Optional;)V
      21: areturn

  public static boolean supportsStandalone(java.beans.PropertyDescriptor);
    Code:
       0: aload_0
       1: ldc           #38                 // String PropertDescriptor must not be null!
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokevirtual #39                 // Method java/beans/PropertyDescriptor.getPropertyType:()Ljava/lang/Class;
      10: ifnull        17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public boolean isFieldBacked();
    Code:
       0: aload_0
       1: getfield      #8                  // Field field:Ljava/util/Optional;
       4: invokevirtual #40                 // Method java/util/Optional.isPresent:()Z
       7: ireturn

  public java.util.Optional<java.lang.reflect.Method> getGetter();
    Code:
       0: aload_0
       1: getfield      #27                 // Field getter:Ljava/util/Optional;
       4: areturn

  public java.util.Optional<java.lang.reflect.Method> getSetter();
    Code:
       0: aload_0
       1: getfield      #31                 // Field setter:Ljava/util/Optional;
       4: areturn

  public boolean hasAccessor();
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method getGetter:()Ljava/util/Optional;
       4: invokevirtual #40                 // Method java/util/Optional.isPresent:()Z
       7: ifne          20
      10: aload_0
      11: invokevirtual #42                 // Method getSetter:()Ljava/util/Optional;
      14: invokevirtual #40                 // Method java/util/Optional.isPresent:()Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #19                 // Field name:Lorg/springframework/data/util/Lazy;
       4: invokevirtual #43                 // Method org/springframework/data/util/Lazy.get:()Ljava/lang/Object;
       7: checkcast     #44                 // class java/lang/String
      10: areturn

  public java.lang.Class<?> getType();
    Code:
       0: aload_0
       1: getfield      #14                 // Field rawType:Ljava/lang/Class;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #33                 // class org/springframework/data/mapping/model/Property
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #33                 // class org/springframework/data/mapping/model/Property
      20: astore_2
      21: aload_0
      22: getfield      #8                  // Field field:Ljava/util/Optional;
      25: invokevirtual #40                 // Method java/util/Optional.isPresent:()Z
      28: ifeq          45
      31: aload_0
      32: getfield      #8                  // Field field:Ljava/util/Optional;
      35: aload_2
      36: getfield      #8                  // Field field:Ljava/util/Optional;
      39: invokevirtual #45                 // Method java/util/Optional.equals:(Ljava/lang/Object;)Z
      42: goto          56
      45: aload_0
      46: getfield      #9                  // Field descriptor:Ljava/util/Optional;
      49: aload_2
      50: getfield      #9                  // Field descriptor:Ljava/util/Optional;
      53: invokevirtual #45                 // Method java/util/Optional.equals:(Ljava/lang/Object;)Z
      56: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #17                 // Field hashCode:Lorg/springframework/data/util/Lazy;
       4: invokevirtual #43                 // Method org/springframework/data/util/Lazy.get:()Ljava/lang/Object;
       7: checkcast     #46                 // class java/lang/Integer
      10: invokevirtual #47                 // Method java/lang/Integer.intValue:()I
      13: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #21                 // Field toString:Lorg/springframework/data/util/Lazy;
       4: invokevirtual #43                 // Method org/springframework/data/util/Lazy.get:()Ljava/lang/Object;
       7: checkcast     #44                 // class java/lang/String
      10: areturn

  private <T> T withFieldOrDescriptor(java.util.function.Function<java.lang.Object, T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokespecial #12                 // Method withFieldOrDescriptor:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/lang/Object;
       6: areturn

  private <T> T withFieldOrDescriptor(java.util.function.Function<? super java.lang.reflect.Field, T>, java.util.function.Function<? super java.beans.PropertyDescriptor, T>);
    Code:
       0: iconst_2
       1: anewarray     #48                 // class java/util/function/Supplier
       4: dup
       5: iconst_0
       6: aload_0
       7: aload_1
       8: invokedynamic #49,  0             // InvokeDynamic #11:get:(Lorg/springframework/data/mapping/model/Property;Ljava/util/function/Function;)Ljava/util/function/Supplier;
      13: aastore
      14: dup
      15: iconst_1
      16: aload_0
      17: aload_2
      18: invokedynamic #50,  0             // InvokeDynamic #12:get:(Lorg/springframework/data/mapping/model/Property;Ljava/util/function/Function;)Ljava/util/function/Supplier;
      23: aastore
      24: invokestatic  #51                 // InterfaceMethod org/springframework/data/util/Optionals.firstNonEmpty:([Ljava/util/function/Supplier;)Ljava/util/Optional;
      27: invokedynamic #52,  0             // InvokeDynamic #13:get:()Ljava/util/function/Supplier;
      32: invokevirtual #53                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      35: areturn

  public java.util.Optional<java.lang.reflect.Field> getField();
    Code:
       0: aload_0
       1: getfield      #8                  // Field field:Ljava/util/Optional;
       4: areturn

  private static java.lang.IllegalStateException lambda$withFieldOrDescriptor$11();
    Code:
       0: new           #54                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #55                 // String Should not occur! Either field or descriptor has to be given
       6: invokespecial #56                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: areturn

  private java.util.Optional lambda$withFieldOrDescriptor$10(java.util.function.Function);
    Code:
       0: aload_0
       1: getfield      #9                  // Field descriptor:Ljava/util/Optional;
       4: aload_1
       5: invokevirtual #23                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
       8: areturn

  private java.util.Optional lambda$withFieldOrDescriptor$9(java.util.function.Function);
    Code:
       0: aload_0
       1: getfield      #8                  // Field field:Ljava/util/Optional;
       4: aload_1
       5: invokevirtual #23                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
       8: areturn

  private boolean lambda$new$8(org.springframework.data.util.TypeInformation, java.lang.reflect.Method);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #57,  2           // InterfaceMethod org/springframework/data/util/TypeInformation.getParameterTypes:(Ljava/lang/reflect/Method;)Ljava/util/List;
       7: iconst_0
       8: invokeinterface #58,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      13: checkcast     #59                 // class org/springframework/data/util/TypeInformation
      16: invokeinterface #60,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      21: aload_0
      22: invokevirtual #61                 // Method getType:()Ljava/lang/Class;
      25: invokevirtual #62                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      28: ireturn

  private boolean lambda$new$7(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method getType:()Ljava/lang/Class;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private boolean lambda$new$6(org.springframework.data.util.TypeInformation, java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method getType:()Ljava/lang/Class;
       4: aload_1
       5: aload_2
       6: invokeinterface #63,  2           // InterfaceMethod org/springframework/data/util/TypeInformation.getReturnType:(Ljava/lang/reflect/Method;)Lorg/springframework/data/util/TypeInformation;
      11: invokeinterface #60,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      16: invokevirtual #62                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      19: ireturn

  private boolean lambda$new$5(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method getType:()Ljava/lang/Class;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private java.lang.String lambda$new$4();
    Code:
       0: aload_0
       1: invokedynamic #64,  0             // InvokeDynamic #14:apply:()Ljava/util/function/Function;
       6: invokespecial #65                 // Method withFieldOrDescriptor:(Ljava/util/function/Function;)Ljava/lang/Object;
       9: checkcast     #44                 // class java/lang/String
      12: areturn

  private java.lang.String lambda$new$3();
    Code:
       0: aload_0
       1: invokedynamic #66,  0             // InvokeDynamic #15:apply:()Ljava/util/function/Function;
       6: invokedynamic #67,  0             // InvokeDynamic #16:apply:()Ljava/util/function/Function;
      11: invokespecial #12                 // Method withFieldOrDescriptor:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/lang/Object;
      14: checkcast     #44                 // class java/lang/String
      17: areturn

  private java.lang.Integer lambda$new$2();
    Code:
       0: aload_0
       1: invokedynamic #68,  0             // InvokeDynamic #17:apply:()Ljava/util/function/Function;
       6: invokespecial #65                 // Method withFieldOrDescriptor:(Ljava/util/function/Function;)Ljava/lang/Object;
       9: checkcast     #46                 // class java/lang/Integer
      12: areturn

  private static java.lang.Class lambda$new$1(org.springframework.data.util.TypeInformation, java.beans.PropertyDescriptor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
       5: invokeinterface #70,  2           // InterfaceMethod org/springframework/data/util/TypeInformation.getRequiredProperty:(Ljava/lang/String;)Lorg/springframework/data/util/TypeInformation;
      10: invokeinterface #60,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      15: areturn

  private static java.lang.Class lambda$new$0(org.springframework.data.util.TypeInformation, java.lang.reflect.Field);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #71                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
       5: invokeinterface #70,  2           // InterfaceMethod org/springframework/data/util/TypeInformation.getRequiredProperty:(Ljava/lang/String;)Lorg/springframework/data/util/TypeInformation;
      10: invokeinterface #60,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      15: areturn
}
