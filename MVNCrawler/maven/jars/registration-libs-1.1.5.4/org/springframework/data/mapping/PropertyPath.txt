Compiled from "PropertyPath.java"
public class org.springframework.data.mapping.PropertyPath implements org.springframework.data.util.Streamable<org.springframework.data.mapping.PropertyPath> {
  private static final java.lang.String PARSE_DEPTH_EXCEEDED;

  private static final java.lang.String DELIMITERS;

  private static final java.lang.String ALL_UPPERCASE;

  private static final java.util.regex.Pattern SPLITTER;

  private static final java.util.regex.Pattern SPLITTER_FOR_QUOTED;

  private static final java.util.Map<org.springframework.data.mapping.PropertyPath$Key, org.springframework.data.mapping.PropertyPath> CACHE;

  private final org.springframework.data.util.TypeInformation<?> owningType;

  private final java.lang.String name;

  private final org.springframework.data.util.TypeInformation<?> typeInformation;

  private final org.springframework.data.util.TypeInformation<?> actualTypeInformation;

  private final boolean isCollection;

  private org.springframework.data.mapping.PropertyPath next;

  org.springframework.data.mapping.PropertyPath(java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1                  // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
       6: invokestatic  #2                  // Method java/util/Collections.emptyList:()Ljava/util/List;
       9: invokespecial #3                  // Method "<init>":(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/util/List;)V
      12: return

  org.springframework.data.mapping.PropertyPath(java.lang.String, org.springframework.data.util.TypeInformation<?>, java.util.List<org.springframework.data.mapping.PropertyPath>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #5                  // String Name must not be null or empty!
       7: invokestatic  #6                  // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #7                  // String Owning type must not be null!
      13: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_3
      17: ldc           #9                  // String Perviously found properties must not be null!
      19: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_1
      23: ldc           #11                 // String [A-Z0-9._$]+
      25: invokevirtual #12                 // Method java/lang/String.matches:(Ljava/lang/String;)Z
      28: ifeq          35
      31: aload_1
      32: goto          39
      35: aload_1
      36: invokestatic  #13                 // Method org/springframework/util/StringUtils.uncapitalize:(Ljava/lang/String;)Ljava/lang/String;
      39: astore        4
      41: aload_2
      42: aload         4
      44: invokeinterface #14,  2           // InterfaceMethod org/springframework/data/util/TypeInformation.getProperty:(Ljava/lang/String;)Lorg/springframework/data/util/TypeInformation;
      49: astore        5
      51: aload         5
      53: ifnonnull     68
      56: new           #15                 // class org/springframework/data/mapping/PropertyReferenceException
      59: dup
      60: aload         4
      62: aload_2
      63: aload_3
      64: invokespecial #16                 // Method org/springframework/data/mapping/PropertyReferenceException."<init>":(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/util/List;)V
      67: athrow
      68: aload_0
      69: aload_2
      70: putfield      #17                 // Field owningType:Lorg/springframework/data/util/TypeInformation;
      73: aload_0
      74: aload         5
      76: putfield      #18                 // Field typeInformation:Lorg/springframework/data/util/TypeInformation;
      79: aload_0
      80: aload         5
      82: invokeinterface #19,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.isCollectionLike:()Z
      87: putfield      #20                 // Field isCollection:Z
      90: aload_0
      91: aload         4
      93: putfield      #21                 // Field name:Ljava/lang/String;
      96: aload_0
      97: aload         5
      99: invokeinterface #22,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getActualType:()Lorg/springframework/data/util/TypeInformation;
     104: ifnonnull     112
     107: aload         5
     109: goto          119
     112: aload         5
     114: invokeinterface #23,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getRequiredActualType:()Lorg/springframework/data/util/TypeInformation;
     119: putfield      #24                 // Field actualTypeInformation:Lorg/springframework/data/util/TypeInformation;
     122: return

  public org.springframework.data.util.TypeInformation<?> getOwningType();
    Code:
       0: aload_0
       1: getfield      #17                 // Field owningType:Lorg/springframework/data/util/TypeInformation;
       4: areturn

  public java.lang.String getSegment();
    Code:
       0: aload_0
       1: getfield      #21                 // Field name:Ljava/lang/String;
       4: areturn

  public org.springframework.data.mapping.PropertyPath getLeafProperty();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: invokevirtual #25                 // Method hasNext:()Z
       6: ifeq          17
       9: aload_1
      10: invokespecial #26                 // Method requiredNext:()Lorg/springframework/data/mapping/PropertyPath;
      13: astore_1
      14: goto          2
      17: aload_1
      18: areturn

  public java.lang.Class<?> getType();
    Code:
       0: aload_0
       1: getfield      #24                 // Field actualTypeInformation:Lorg/springframework/data/util/TypeInformation;
       4: invokeinterface #27,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
       9: areturn

  public org.springframework.data.mapping.PropertyPath next();
    Code:
       0: aload_0
       1: getfield      #28                 // Field next:Lorg/springframework/data/mapping/PropertyPath;
       4: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #28                 // Field next:Lorg/springframework/data/mapping/PropertyPath;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.String toDotPath();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method hasNext:()Z
       4: ifeq          40
       7: new           #29                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      14: aload_0
      15: invokevirtual #31                 // Method getSegment:()Ljava/lang/String;
      18: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #33                 // String .
      23: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: invokespecial #26                 // Method requiredNext:()Lorg/springframework/data/mapping/PropertyPath;
      30: invokevirtual #34                 // Method toDotPath:()Ljava/lang/String;
      33: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn
      40: aload_0
      41: invokevirtual #31                 // Method getSegment:()Ljava/lang/String;
      44: areturn

  public boolean isCollection();
    Code:
       0: aload_0
       1: getfield      #20                 // Field isCollection:Z
       4: ireturn

  public java.util.Iterator<org.springframework.data.mapping.PropertyPath> iterator();
    Code:
       0: new           #36                 // class org/springframework/data/mapping/PropertyPath$1
       3: dup
       4: aload_0
       5: invokespecial #37                 // Method org/springframework/data/mapping/PropertyPath$1."<init>":(Lorg/springframework/data/mapping/PropertyPath;)V
       8: areturn

  private org.springframework.data.mapping.PropertyPath requiredNext();
    Code:
       0: aload_0
       1: getfield      #28                 // Field next:Lorg/springframework/data/mapping/PropertyPath;
       4: astore_1
       5: aload_1
       6: ifnonnull     19
       9: new           #38                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #39                 // String No next path available! Clients should call hasNext() before invoking this method!
      15: invokespecial #40                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_1
      20: areturn

  public static org.springframework.data.mapping.PropertyPath from(java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
       5: invokestatic  #41                 // Method from:(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/PropertyPath;
       8: areturn

  public static org.springframework.data.mapping.PropertyPath from(java.lang.String, org.springframework.data.util.TypeInformation<?>);
    Code:
       0: aload_0
       1: ldc           #42                 // String Source must not be null or empty!
       3: invokestatic  #6                  // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #43                 // String TypeInformation must not be null or empty!
       9: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: getstatic     #44                 // Field CACHE:Ljava/util/Map;
      15: aload_1
      16: aload_0
      17: invokestatic  #45                 // Method org/springframework/data/mapping/PropertyPath$Key.of:(Lorg/springframework/data/util/TypeInformation;Ljava/lang/String;)Lorg/springframework/data/mapping/PropertyPath$Key;
      20: aload_0
      21: invokedynamic #46,  0             // InvokeDynamic #0:apply:(Ljava/lang/String;)Ljava/util/function/Function;
      26: invokeinterface #47,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      31: checkcast     #10                 // class org/springframework/data/mapping/PropertyPath
      34: areturn

  private static boolean isQuoted(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #48                 // String ^\\\\Q.*\\\\E$
       3: invokevirtual #12                 // Method java/lang/String.matches:(Ljava/lang/String;)Z
       6: ireturn

  private static org.springframework.data.mapping.PropertyPath create(java.lang.String, java.util.Stack<org.springframework.data.mapping.PropertyPath>);
    Code:
       0: aload_1
       1: invokevirtual #49                 // Method java/util/Stack.peek:()Ljava/lang/Object;
       4: checkcast     #10                 // class org/springframework/data/mapping/PropertyPath
       7: astore_2
       8: aload_0
       9: aload_2
      10: getfield      #18                 // Field typeInformation:Lorg/springframework/data/util/TypeInformation;
      13: invokeinterface #23,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getRequiredActualType:()Lorg/springframework/data/util/TypeInformation;
      18: aload_1
      19: invokestatic  #50                 // Method create:(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/util/List;)Lorg/springframework/data/mapping/PropertyPath;
      22: astore_3
      23: aload_2
      24: aload_3
      25: putfield      #28                 // Field next:Lorg/springframework/data/mapping/PropertyPath;
      28: aload_3
      29: areturn

  private static org.springframework.data.mapping.PropertyPath create(java.lang.String, org.springframework.data.util.TypeInformation<?>, java.util.List<org.springframework.data.mapping.PropertyPath>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #51                 // String
       4: aload_2
       5: invokestatic  #52                 // Method create:(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/lang/String;Ljava/util/List;)Lorg/springframework/data/mapping/PropertyPath;
       8: areturn

  private static org.springframework.data.mapping.PropertyPath create(java.lang.String, org.springframework.data.util.TypeInformation<?>, java.lang.String, java.util.List<org.springframework.data.mapping.PropertyPath>);
    Code:
       0: aload_3
       1: invokeinterface #53,  1           // InterfaceMethod java/util/List.size:()I
       6: sipush        1000
       9: if_icmple     22
      12: new           #54                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #55                 // String Trying to parse a path with depth greater than 1000! This has been disabled for security reasons to prevent parsing overflows.
      18: invokespecial #56                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aconst_null
      23: astore        4
      25: aconst_null
      26: astore        5
      28: new           #10                 // class org/springframework/data/mapping/PropertyPath
      31: dup
      32: aload_0
      33: aload_1
      34: aload_3
      35: invokespecial #3                  // Method "<init>":(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/util/List;)V
      38: astore        5
      40: aload_3
      41: invokeinterface #57,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      46: ifne          71
      49: aload_3
      50: aload_3
      51: invokeinterface #53,  1           // InterfaceMethod java/util/List.size:()I
      56: iconst_1
      57: isub
      58: invokeinterface #58,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      63: checkcast     #10                 // class org/springframework/data/mapping/PropertyPath
      66: aload         5
      68: putfield      #28                 // Field next:Lorg/springframework/data/mapping/PropertyPath;
      71: new           #59                 // class java/util/ArrayList
      74: dup
      75: aload_3
      76: invokespecial #60                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      79: astore        6
      81: aload         6
      83: aload         5
      85: invokeinterface #61,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      90: pop
      91: aload_2
      92: invokestatic  #62                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      95: ifeq          114
      98: aload         5
     100: aload_2
     101: aload         5
     103: getfield      #24                 // Field actualTypeInformation:Lorg/springframework/data/util/TypeInformation;
     106: aload         6
     108: invokestatic  #50                 // Method create:(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/util/List;)Lorg/springframework/data/mapping/PropertyPath;
     111: putfield      #28                 // Field next:Lorg/springframework/data/mapping/PropertyPath;
     114: aload         5
     116: areturn
     117: astore        6
     119: aload         5
     121: ifnull        127
     124: aload         6
     126: athrow
     127: aload         6
     129: astore        4
     131: ldc           #63                 // String \\p{Lu}+\\p{Ll}*$
     133: invokestatic  #64                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
     136: astore        6
     138: aload         6
     140: aload_0
     141: invokevirtual #65                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
     144: astore        7
     146: aload         7
     148: invokevirtual #66                 // Method java/util/regex/Matcher.find:()Z
     151: ifeq          233
     154: aload         7
     156: invokevirtual #67                 // Method java/util/regex/Matcher.start:()I
     159: ifeq          233
     162: aload         7
     164: invokevirtual #67                 // Method java/util/regex/Matcher.start:()I
     167: istore        8
     169: aload_0
     170: iconst_0
     171: iload         8
     173: invokevirtual #68                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     176: astore        9
     178: aload_0
     179: iload         8
     181: invokevirtual #69                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     184: astore        10
     186: aload         9
     188: aload_1
     189: new           #29                 // class java/lang/StringBuilder
     192: dup
     193: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     196: aload         10
     198: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     201: aload_2
     202: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     205: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     208: aload_3
     209: invokestatic  #52                 // Method create:(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/lang/String;Ljava/util/List;)Lorg/springframework/data/mapping/PropertyPath;
     212: areturn
     213: astore        11
     215: aload         11
     217: aload         4
     219: invokevirtual #70                 // Method org/springframework/data/mapping/PropertyReferenceException.hasDeeperResolutionDepthThan:(Lorg/springframework/data/mapping/PropertyReferenceException;)Z
     222: ifeq          230
     225: aload         11
     227: goto          232
     230: aload         4
     232: athrow
     233: aload         4
     235: athrow
    Exception table:
       from    to  target type
          28   116   117   Class org/springframework/data/mapping/PropertyReferenceException
         186   212   213   Class org/springframework/data/mapping/PropertyReferenceException

  public java.lang.String toString();
    Code:
       0: ldc           #71                 // String %s.%s
       2: iconst_2
       3: anewarray     #72                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #17                 // Field owningType:Lorg/springframework/data/util/TypeInformation;
      12: invokeinterface #27,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      17: invokevirtual #73                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      20: aastore
      21: dup
      22: iconst_1
      23: aload_0
      24: invokevirtual #34                 // Method toDotPath:()Ljava/lang/String;
      27: aastore
      28: invokestatic  #74                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      31: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #10                 // class org/springframework/data/mapping/PropertyPath
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #10                 // class org/springframework/data/mapping/PropertyPath
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #75                 // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #76                 // Method getOwningType:()Lorg/springframework/data/util/TypeInformation;
      35: astore_3
      36: aload_2
      37: invokevirtual #76                 // Method getOwningType:()Lorg/springframework/data/util/TypeInformation;
      40: astore        4
      42: aload_3
      43: ifnonnull     54
      46: aload         4
      48: ifnull        65
      51: goto          63
      54: aload_3
      55: aload         4
      57: invokevirtual #77                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifne          65
      63: iconst_0
      64: ireturn
      65: aload_0
      66: getfield      #21                 // Field name:Ljava/lang/String;
      69: astore        5
      71: aload_2
      72: getfield      #21                 // Field name:Ljava/lang/String;
      75: astore        6
      77: aload         5
      79: ifnonnull     90
      82: aload         6
      84: ifnull        102
      87: goto          100
      90: aload         5
      92: aload         6
      94: invokevirtual #77                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      97: ifne          102
     100: iconst_0
     101: ireturn
     102: aload_0
     103: invokevirtual #78                 // Method getTypeInformation:()Lorg/springframework/data/util/TypeInformation;
     106: astore        7
     108: aload_2
     109: invokevirtual #78                 // Method getTypeInformation:()Lorg/springframework/data/util/TypeInformation;
     112: astore        8
     114: aload         7
     116: ifnonnull     127
     119: aload         8
     121: ifnull        139
     124: goto          137
     127: aload         7
     129: aload         8
     131: invokevirtual #77                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     134: ifne          139
     137: iconst_0
     138: ireturn
     139: aload_0
     140: getfield      #24                 // Field actualTypeInformation:Lorg/springframework/data/util/TypeInformation;
     143: astore        9
     145: aload_2
     146: getfield      #24                 // Field actualTypeInformation:Lorg/springframework/data/util/TypeInformation;
     149: astore        10
     151: aload         9
     153: ifnonnull     164
     156: aload         10
     158: ifnull        176
     161: goto          174
     164: aload         9
     166: aload         10
     168: invokevirtual #77                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     171: ifne          176
     174: iconst_0
     175: ireturn
     176: aload_0
     177: invokevirtual #79                 // Method isCollection:()Z
     180: aload_2
     181: invokevirtual #79                 // Method isCollection:()Z
     184: if_icmpeq     189
     187: iconst_0
     188: ireturn
     189: aload_0
     190: getfield      #28                 // Field next:Lorg/springframework/data/mapping/PropertyPath;
     193: astore        11
     195: aload_2
     196: getfield      #28                 // Field next:Lorg/springframework/data/mapping/PropertyPath;
     199: astore        12
     201: aload         11
     203: ifnonnull     214
     206: aload         12
     208: ifnull        226
     211: goto          224
     214: aload         11
     216: aload         12
     218: invokevirtual #77                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     221: ifne          226
     224: iconst_0
     225: ireturn
     226: iconst_1
     227: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #10                 // class org/springframework/data/mapping/PropertyPath
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #76                 // Method getOwningType:()Lorg/springframework/data/util/TypeInformation;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #80                 // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: aload_0
      30: getfield      #21                 // Field name:Ljava/lang/String;
      33: astore        4
      35: iload_2
      36: bipush        59
      38: imul
      39: aload         4
      41: ifnonnull     49
      44: bipush        43
      46: goto          54
      49: aload         4
      51: invokevirtual #80                 // Method java/lang/Object.hashCode:()I
      54: iadd
      55: istore_2
      56: aload_0
      57: invokevirtual #78                 // Method getTypeInformation:()Lorg/springframework/data/util/TypeInformation;
      60: astore        5
      62: iload_2
      63: bipush        59
      65: imul
      66: aload         5
      68: ifnonnull     76
      71: bipush        43
      73: goto          81
      76: aload         5
      78: invokevirtual #80                 // Method java/lang/Object.hashCode:()I
      81: iadd
      82: istore_2
      83: aload_0
      84: getfield      #24                 // Field actualTypeInformation:Lorg/springframework/data/util/TypeInformation;
      87: astore        6
      89: iload_2
      90: bipush        59
      92: imul
      93: aload         6
      95: ifnonnull     103
      98: bipush        43
     100: goto          108
     103: aload         6
     105: invokevirtual #80                 // Method java/lang/Object.hashCode:()I
     108: iadd
     109: istore_2
     110: iload_2
     111: bipush        59
     113: imul
     114: aload_0
     115: invokevirtual #79                 // Method isCollection:()Z
     118: ifeq          126
     121: bipush        79
     123: goto          128
     126: bipush        97
     128: iadd
     129: istore_2
     130: aload_0
     131: getfield      #28                 // Field next:Lorg/springframework/data/mapping/PropertyPath;
     134: astore        7
     136: iload_2
     137: bipush        59
     139: imul
     140: aload         7
     142: ifnonnull     150
     145: bipush        43
     147: goto          155
     150: aload         7
     152: invokevirtual #80                 // Method java/lang/Object.hashCode:()I
     155: iadd
     156: istore_2
     157: iload_2
     158: ireturn

  public org.springframework.data.util.TypeInformation<?> getTypeInformation();
    Code:
       0: aload_0
       1: getfield      #18                 // Field typeInformation:Lorg/springframework/data/util/TypeInformation;
       4: areturn

  private static org.springframework.data.mapping.PropertyPath lambda$from$0(java.lang.String, org.springframework.data.mapping.PropertyPath$Key);
    Code:
       0: new           #59                 // class java/util/ArrayList
       3: dup
       4: invokespecial #81                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokestatic  #82                 // Method org/springframework/data/mapping/PropertyPath$Key.access$000:(Lorg/springframework/data/mapping/PropertyPath$Key;)Ljava/lang/String;
      12: invokestatic  #83                 // Method isQuoted:(Ljava/lang/String;)Z
      15: ifeq          45
      18: getstatic     #84                 // Field SPLITTER_FOR_QUOTED:Ljava/util/regex/Pattern;
      21: aload_1
      22: invokestatic  #82                 // Method org/springframework/data/mapping/PropertyPath$Key.access$000:(Lorg/springframework/data/mapping/PropertyPath$Key;)Ljava/lang/String;
      25: ldc           #85                 // String \\Q
      27: ldc           #51                 // String
      29: invokevirtual #86                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      32: ldc           #87                 // String \\E
      34: ldc           #51                 // String
      36: invokevirtual #86                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      39: invokevirtual #65                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      42: goto          73
      45: getstatic     #88                 // Field SPLITTER:Ljava/util/regex/Pattern;
      48: new           #29                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #89                 // String _
      57: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_1
      61: invokestatic  #82                 // Method org/springframework/data/mapping/PropertyPath$Key.access$000:(Lorg/springframework/data/mapping/PropertyPath$Key;)Ljava/lang/String;
      64: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokevirtual #65                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      73: astore_3
      74: aload_3
      75: invokevirtual #66                 // Method java/util/regex/Matcher.find:()Z
      78: ifeq          96
      81: aload_2
      82: aload_3
      83: iconst_1
      84: invokevirtual #90                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      87: invokeinterface #61,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      92: pop
      93: goto          74
      96: aload_2
      97: invokeinterface #91,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     102: astore        4
     104: aconst_null
     105: astore        5
     107: new           #92                 // class java/util/Stack
     110: dup
     111: invokespecial #93                 // Method java/util/Stack."<init>":()V
     114: astore        6
     116: aload         4
     118: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     123: ifeq          187
     126: aload         5
     128: ifnonnull     163
     131: aload         4
     133: invokeinterface #95,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     138: checkcast     #96                 // class java/lang/String
     141: aload_1
     142: invokestatic  #97                 // Method org/springframework/data/mapping/PropertyPath$Key.access$100:(Lorg/springframework/data/mapping/PropertyPath$Key;)Lorg/springframework/data/util/TypeInformation;
     145: aload         6
     147: invokestatic  #50                 // Method create:(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/util/List;)Lorg/springframework/data/mapping/PropertyPath;
     150: astore        5
     152: aload         6
     154: aload         5
     156: invokevirtual #98                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
     159: pop
     160: goto          116
     163: aload         6
     165: aload         4
     167: invokeinterface #95,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     172: checkcast     #96                 // class java/lang/String
     175: aload         6
     177: invokestatic  #99                 // Method create:(Ljava/lang/String;Ljava/util/Stack;)Lorg/springframework/data/mapping/PropertyPath;
     180: invokevirtual #98                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
     183: pop
     184: goto          116
     187: aload         5
     189: ifnonnull     213
     192: new           #38                 // class java/lang/IllegalStateException
     195: dup
     196: ldc           #100                // String Expected parsing to yield a PropertyPath from %s but got null!
     198: iconst_1
     199: anewarray     #72                 // class java/lang/Object
     202: dup
     203: iconst_0
     204: aload_0
     205: aastore
     206: invokestatic  #74                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     209: invokespecial #40                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     212: athrow
     213: aload         5
     215: areturn

  static {};
    Code:
       0: ldc           #101                // String (?:[%s]?([%s]*?[^%s]+))
       2: ldc           #102                // String %s
       4: ldc           #103                // String _\\.
       6: invokevirtual #104                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       9: invokestatic  #64                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      12: putstatic     #88                 // Field SPLITTER:Ljava/util/regex/Pattern;
      15: ldc           #101                // String (?:[%s]?([%s]*?[^%s]+))
      17: ldc           #102                // String %s
      19: ldc           #105                // String \\.
      21: invokevirtual #104                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      24: invokestatic  #64                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      27: putstatic     #84                 // Field SPLITTER_FOR_QUOTED:Ljava/util/regex/Pattern;
      30: new           #106                // class org/springframework/util/ConcurrentReferenceHashMap
      33: dup
      34: invokespecial #107                // Method org/springframework/util/ConcurrentReferenceHashMap."<init>":()V
      37: putstatic     #44                 // Field CACHE:Ljava/util/Map;
      40: return
}
