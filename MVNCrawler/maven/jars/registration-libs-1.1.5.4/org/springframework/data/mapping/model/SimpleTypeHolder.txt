Compiled from "SimpleTypeHolder.java"
public class org.springframework.data.mapping.model.SimpleTypeHolder {
  private static final java.util.Set<java.lang.Class<?>> DEFAULTS;

  public static final org.springframework.data.mapping.model.SimpleTypeHolder DEFAULT;

  private volatile java.util.Map<java.lang.Class<?>, java.lang.Boolean> simpleTypes;

  protected org.springframework.data.mapping.model.SimpleTypeHolder();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/util/Collections.emptySet:()Ljava/util/Set;
       4: iconst_1
       5: invokespecial #2                  // Method "<init>":(Ljava/util/Set;Z)V
       8: return

  public org.springframework.data.mapping.model.SimpleTypeHolder(java.util.Set<? extends java.lang.Class<?>>, boolean);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #4                  // String CustomSimpleTypes must not be null!
       7: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: new           #6                  // class java/util/WeakHashMap
      14: dup
      15: aload_1
      16: invokeinterface #7,  1            // InterfaceMethod java/util/Set.size:()I
      21: getstatic     #8                  // Field DEFAULTS:Ljava/util/Set;
      24: invokeinterface #7,  1            // InterfaceMethod java/util/Set.size:()I
      29: iadd
      30: invokespecial #9                  // Method java/util/WeakHashMap."<init>":(I)V
      33: putfield      #10                 // Field simpleTypes:Ljava/util/Map;
      36: aload_0
      37: aload_1
      38: invokespecial #11                 // Method register:(Ljava/util/Collection;)V
      41: iload_2
      42: ifeq          52
      45: aload_0
      46: getstatic     #8                  // Field DEFAULTS:Ljava/util/Set;
      49: invokespecial #11                 // Method register:(Ljava/util/Collection;)V
      52: return

  public org.springframework.data.mapping.model.SimpleTypeHolder(java.util.Set<? extends java.lang.Class<?>>, org.springframework.data.mapping.model.SimpleTypeHolder);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #4                  // String CustomSimpleTypes must not be null!
       7: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #12                 // String SourceTypeHolder must not be null!
      13: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: new           #6                  // class java/util/WeakHashMap
      20: dup
      21: aload_1
      22: invokeinterface #7,  1            // InterfaceMethod java/util/Set.size:()I
      27: aload_2
      28: getfield      #10                 // Field simpleTypes:Ljava/util/Map;
      31: invokeinterface #13,  1           // InterfaceMethod java/util/Map.size:()I
      36: iadd
      37: invokespecial #9                  // Method java/util/WeakHashMap."<init>":(I)V
      40: putfield      #10                 // Field simpleTypes:Ljava/util/Map;
      43: aload_0
      44: aload_1
      45: invokespecial #11                 // Method register:(Ljava/util/Collection;)V
      48: aload_0
      49: aload_2
      50: getfield      #10                 // Field simpleTypes:Ljava/util/Map;
      53: invokespecial #14                 // Method registerCachePositives:(Ljava/util/Map;)V
      56: return

  private void registerCachePositives(java.util.Map<java.lang.Class<?>, java.lang.Boolean>);
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          72
      21: aload_2
      22: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #19                 // class java/util/Map$Entry
      30: astore_3
      31: aload_3
      32: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      37: checkcast     #21                 // class java/lang/Boolean
      40: invokevirtual #22                 // Method java/lang/Boolean.booleanValue:()Z
      43: ifne          49
      46: goto          12
      49: aload_0
      50: getfield      #10                 // Field simpleTypes:Ljava/util/Map;
      53: aload_3
      54: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      59: iconst_1
      60: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      63: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: goto          12
      72: return

  public boolean isSimpleType(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #26                 // String Type must not be null!
       3: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #10                 // Field simpleTypes:Ljava/util/Map;
      10: astore_2
      11: aload_2
      12: aload_1
      13: invokeinterface #27,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #21                 // class java/lang/Boolean
      21: astore_3
      22: ldc           #28                 // class java/lang/Object
      24: aload_1
      25: invokevirtual #29                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      28: ifne          40
      31: ldc           #30                 // class java/lang/Enum
      33: aload_1
      34: invokevirtual #31                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      37: ifeq          42
      40: iconst_1
      41: ireturn
      42: aload_3
      43: ifnull        51
      46: aload_3
      47: invokevirtual #22                 // Method java/lang/Boolean.booleanValue:()Z
      50: ireturn
      51: aload_1
      52: invokevirtual #32                 // Method java/lang/Class.getName:()Ljava/lang/String;
      55: astore        4
      57: aload         4
      59: ldc           #33                 // String java.lang
      61: invokevirtual #34                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      64: ifne          79
      67: aload_1
      68: invokevirtual #32                 // Method java/lang/Class.getName:()Ljava/lang/String;
      71: ldc           #35                 // String java.time
      73: invokevirtual #34                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      76: ifeq          81
      79: iconst_1
      80: ireturn
      81: aload_2
      82: invokeinterface #36,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      87: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      92: astore        5
      94: aload         5
      96: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     101: ifeq          158
     104: aload         5
     106: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     111: checkcast     #37                 // class java/lang/Class
     114: astore        6
     116: aload         6
     118: aload_1
     119: invokevirtual #31                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     122: ifeq          155
     125: aload_2
     126: aload         6
     128: invokeinterface #27,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     133: checkcast     #21                 // class java/lang/Boolean
     136: astore_3
     137: aload_0
     138: aload_2
     139: aload_1
     140: aload_3
     141: invokevirtual #22                 // Method java/lang/Boolean.booleanValue:()Z
     144: invokestatic  #38                 // Method put:(Ljava/util/Map;Ljava/lang/Class;Z)Ljava/util/Map;
     147: putfield      #10                 // Field simpleTypes:Ljava/util/Map;
     150: aload_3
     151: invokevirtual #22                 // Method java/lang/Boolean.booleanValue:()Z
     154: ireturn
     155: goto          94
     158: aload_0
     159: aload_2
     160: aload_1
     161: iconst_0
     162: invokestatic  #38                 // Method put:(Ljava/util/Map;Ljava/lang/Class;Z)Ljava/util/Map;
     165: putfield      #10                 // Field simpleTypes:Ljava/util/Map;
     168: iconst_0
     169: ireturn

  private void register(java.util.Collection<? extends java.lang.Class<?>>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #39,  0             // InvokeDynamic #0:accept:(Lorg/springframework/data/mapping/model/SimpleTypeHolder;)Ljava/util/function/Consumer;
       7: invokeinterface #40,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      12: return

  private static java.util.Map<java.lang.Class<?>, java.lang.Boolean> put(java.util.Map<java.lang.Class<?>, java.lang.Boolean>, java.lang.Class<?>, boolean);
    Code:
       0: new           #6                  // class java/util/WeakHashMap
       3: dup
       4: aload_0
       5: invokespecial #41                 // Method java/util/WeakHashMap."<init>":(Ljava/util/Map;)V
       8: astore_3
       9: aload_3
      10: aload_1
      11: iload_2
      12: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: aload_3
      22: areturn

  private void lambda$register$0(java.lang.Class);
    Code:
       0: aload_0
       1: getfield      #10                 // Field simpleTypes:Ljava/util/Map;
       4: aload_1
       5: iconst_1
       6: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       9: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #21                 // class java/lang/Boolean
      17: pop
      18: return

  static {};
    Code:
       0: new           #42                 // class org/springframework/data/mapping/model/SimpleTypeHolder$1
       3: dup
       4: invokespecial #43                 // Method org/springframework/data/mapping/model/SimpleTypeHolder$1."<init>":()V
       7: putstatic     #8                  // Field DEFAULTS:Ljava/util/Set;
      10: new           #44                 // class org/springframework/data/mapping/model/SimpleTypeHolder
      13: dup
      14: invokespecial #45                 // Method "<init>":()V
      17: putstatic     #46                 // Field DEFAULT:Lorg/springframework/data/mapping/model/SimpleTypeHolder;
      20: return
}
