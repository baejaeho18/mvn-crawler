Compiled from "Range.java"
public final class org.springframework.data.domain.Range<T extends java.lang.Comparable<T>> {
  private static final org.springframework.data.domain.Range<?> UNBOUNDED;

  private final org.springframework.data.domain.Range$Bound<T> lowerBound;

  private final org.springframework.data.domain.Range$Bound<T> upperBound;

  public org.springframework.data.domain.Range(T, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: iconst_1
       5: invokespecial #2                  // Method "<init>":(Ljava/lang/Comparable;Ljava/lang/Comparable;ZZ)V
       8: return

  public org.springframework.data.domain.Range(T, T, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ifnonnull     15
       9: invokestatic  #4                  // Method org/springframework/data/domain/Range$Bound.unbounded:()Lorg/springframework/data/domain/Range$Bound;
      12: goto          30
      15: iload_3
      16: ifeq          26
      19: aload_1
      20: invokestatic  #5                  // Method org/springframework/data/domain/Range$Bound.inclusive:(Ljava/lang/Comparable;)Lorg/springframework/data/domain/Range$Bound;
      23: goto          30
      26: aload_1
      27: invokestatic  #6                  // Method org/springframework/data/domain/Range$Bound.exclusive:(Ljava/lang/Comparable;)Lorg/springframework/data/domain/Range$Bound;
      30: putfield      #7                  // Field lowerBound:Lorg/springframework/data/domain/Range$Bound;
      33: aload_0
      34: aload_2
      35: ifnonnull     44
      38: invokestatic  #4                  // Method org/springframework/data/domain/Range$Bound.unbounded:()Lorg/springframework/data/domain/Range$Bound;
      41: goto          60
      44: iload         4
      46: ifeq          56
      49: aload_2
      50: invokestatic  #5                  // Method org/springframework/data/domain/Range$Bound.inclusive:(Ljava/lang/Comparable;)Lorg/springframework/data/domain/Range$Bound;
      53: goto          60
      56: aload_2
      57: invokestatic  #6                  // Method org/springframework/data/domain/Range$Bound.exclusive:(Ljava/lang/Comparable;)Lorg/springframework/data/domain/Range$Bound;
      60: putfield      #8                  // Field upperBound:Lorg/springframework/data/domain/Range$Bound;
      63: return

  public static <T extends java.lang.Comparable<T>> org.springframework.data.domain.Range<T> unbounded();
    Code:
       0: getstatic     #9                  // Field UNBOUNDED:Lorg/springframework/data/domain/Range;
       3: areturn

  public static <T extends java.lang.Comparable<T>> org.springframework.data.domain.Range$RangeBuilder<T> from(org.springframework.data.domain.Range$Bound<T>);
    Code:
       0: aload_0
       1: ldc           #10                 // String Lower bound must not be null!
       3: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #12                 // class org/springframework/data/domain/Range$RangeBuilder
       9: dup
      10: aload_0
      11: invokespecial #13                 // Method org/springframework/data/domain/Range$RangeBuilder."<init>":(Lorg/springframework/data/domain/Range$Bound;)V
      14: areturn

  public static <T extends java.lang.Comparable<T>> org.springframework.data.domain.Range<T> of(org.springframework.data.domain.Range$Bound<T>, org.springframework.data.domain.Range$Bound<T>);
    Code:
       0: new           #14                 // class org/springframework/data/domain/Range
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #1                  // Method "<init>":(Lorg/springframework/data/domain/Range$Bound;Lorg/springframework/data/domain/Range$Bound;)V
       9: areturn

  public boolean isLowerInclusive();
    Code:
       0: aload_0
       1: getfield      #7                  // Field lowerBound:Lorg/springframework/data/domain/Range$Bound;
       4: invokevirtual #15                 // Method org/springframework/data/domain/Range$Bound.isInclusive:()Z
       7: ireturn

  public boolean isUpperInclusive();
    Code:
       0: aload_0
       1: getfield      #8                  // Field upperBound:Lorg/springframework/data/domain/Range$Bound;
       4: invokevirtual #15                 // Method org/springframework/data/domain/Range$Bound.isInclusive:()Z
       7: ireturn

  public boolean contains(T);
    Code:
       0: aload_1
       1: ldc           #16                 // String Reference value must not be null!
       3: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #7                  // Field lowerBound:Lorg/springframework/data/domain/Range$Bound;
      10: invokevirtual #17                 // Method org/springframework/data/domain/Range$Bound.getValue:()Ljava/util/Optional;
      13: aload_0
      14: aload_1
      15: invokedynamic #18,  0             // InvokeDynamic #0:apply:(Lorg/springframework/data/domain/Range;Ljava/lang/Comparable;)Ljava/util/function/Function;
      20: invokevirtual #19                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      23: iconst_1
      24: invokestatic  #20                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      27: invokevirtual #21                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #22                 // class java/lang/Boolean
      33: invokevirtual #23                 // Method java/lang/Boolean.booleanValue:()Z
      36: istore_2
      37: aload_0
      38: getfield      #8                  // Field upperBound:Lorg/springframework/data/domain/Range$Bound;
      41: invokevirtual #17                 // Method org/springframework/data/domain/Range$Bound.getValue:()Ljava/util/Optional;
      44: aload_0
      45: aload_1
      46: invokedynamic #24,  0             // InvokeDynamic #1:apply:(Lorg/springframework/data/domain/Range;Ljava/lang/Comparable;)Ljava/util/function/Function;
      51: invokevirtual #19                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      54: iconst_1
      55: invokestatic  #20                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      58: invokevirtual #21                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      61: checkcast     #22                 // class java/lang/Boolean
      64: invokevirtual #23                 // Method java/lang/Boolean.booleanValue:()Z
      67: istore_3
      68: iload_2
      69: ifeq          80
      72: iload_3
      73: ifeq          80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #25                 // String %s-%s
       2: iconst_2
       3: anewarray     #26                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #7                  // Field lowerBound:Lorg/springframework/data/domain/Range$Bound;
      12: invokevirtual #27                 // Method org/springframework/data/domain/Range$Bound.toPrefixString:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: aload_0
      19: getfield      #8                  // Field upperBound:Lorg/springframework/data/domain/Range$Bound;
      22: invokevirtual #28                 // Method org/springframework/data/domain/Range$Bound.toSuffixString:()Ljava/lang/String;
      25: aastore
      26: invokestatic  #29                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      29: areturn

  public org.springframework.data.domain.Range$Bound<T> getLowerBound();
    Code:
       0: aload_0
       1: getfield      #7                  // Field lowerBound:Lorg/springframework/data/domain/Range$Bound;
       4: areturn

  public org.springframework.data.domain.Range$Bound<T> getUpperBound();
    Code:
       0: aload_0
       1: getfield      #8                  // Field upperBound:Lorg/springframework/data/domain/Range$Bound;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #14                 // class org/springframework/data/domain/Range
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #14                 // class org/springframework/data/domain/Range
      20: astore_2
      21: aload_0
      22: invokevirtual #30                 // Method getLowerBound:()Lorg/springframework/data/domain/Range$Bound;
      25: astore_3
      26: aload_2
      27: invokevirtual #30                 // Method getLowerBound:()Lorg/springframework/data/domain/Range$Bound;
      30: astore        4
      32: aload_3
      33: ifnonnull     44
      36: aload         4
      38: ifnull        55
      41: goto          53
      44: aload_3
      45: aload         4
      47: invokevirtual #31                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      50: ifne          55
      53: iconst_0
      54: ireturn
      55: aload_0
      56: invokevirtual #32                 // Method getUpperBound:()Lorg/springframework/data/domain/Range$Bound;
      59: astore        5
      61: aload_2
      62: invokevirtual #32                 // Method getUpperBound:()Lorg/springframework/data/domain/Range$Bound;
      65: astore        6
      67: aload         5
      69: ifnonnull     80
      72: aload         6
      74: ifnull        92
      77: goto          90
      80: aload         5
      82: aload         6
      84: invokevirtual #31                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      87: ifne          92
      90: iconst_0
      91: ireturn
      92: iconst_1
      93: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #30                 // Method getLowerBound:()Lorg/springframework/data/domain/Range$Bound;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #33                 // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: aload_0
      30: invokevirtual #32                 // Method getUpperBound:()Lorg/springframework/data/domain/Range$Bound;
      33: astore        4
      35: iload_2
      36: bipush        59
      38: imul
      39: aload         4
      41: ifnonnull     49
      44: bipush        43
      46: goto          54
      49: aload         4
      51: invokevirtual #33                 // Method java/lang/Object.hashCode:()I
      54: iadd
      55: istore_2
      56: iload_2
      57: ireturn

  private org.springframework.data.domain.Range(org.springframework.data.domain.Range$Bound<T>, org.springframework.data.domain.Range$Bound<T>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #34                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #35                 // String lowerBound is null
      14: invokespecial #36                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_2
      19: ifnonnull     32
      22: new           #34                 // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #37                 // String upperBound is null
      28: invokespecial #36                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_0
      33: aload_1
      34: putfield      #7                  // Field lowerBound:Lorg/springframework/data/domain/Range$Bound;
      37: aload_0
      38: aload_2
      39: putfield      #8                  // Field upperBound:Lorg/springframework/data/domain/Range$Bound;
      42: return

  private java.lang.Boolean lambda$contains$1(java.lang.Comparable, java.lang.Comparable);
    Code:
       0: aload_0
       1: getfield      #8                  // Field upperBound:Lorg/springframework/data/domain/Range$Bound;
       4: invokevirtual #15                 // Method org/springframework/data/domain/Range$Bound.isInclusive:()Z
       7: ifeq          28
      10: aload_2
      11: aload_1
      12: invokeinterface #38,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
      17: iflt          24
      20: iconst_1
      21: goto          43
      24: iconst_0
      25: goto          43
      28: aload_2
      29: aload_1
      30: invokeinterface #38,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
      35: ifle          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: invokestatic  #20                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      46: areturn

  private java.lang.Boolean lambda$contains$0(java.lang.Comparable, java.lang.Comparable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field lowerBound:Lorg/springframework/data/domain/Range$Bound;
       4: invokevirtual #15                 // Method org/springframework/data/domain/Range$Bound.isInclusive:()Z
       7: ifeq          28
      10: aload_2
      11: aload_1
      12: invokeinterface #38,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
      17: ifgt          24
      20: iconst_1
      21: goto          43
      24: iconst_0
      25: goto          43
      28: aload_2
      29: aload_1
      30: invokeinterface #38,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
      35: ifge          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: invokestatic  #20                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      46: areturn

  org.springframework.data.domain.Range(org.springframework.data.domain.Range$Bound, org.springframework.data.domain.Range$Bound, org.springframework.data.domain.Range$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method "<init>":(Lorg/springframework/data/domain/Range$Bound;Lorg/springframework/data/domain/Range$Bound;)V
       6: return

  static {};
    Code:
       0: invokestatic  #4                  // Method org/springframework/data/domain/Range$Bound.unbounded:()Lorg/springframework/data/domain/Range$Bound;
       3: invokestatic  #39                 // Method org/springframework/data/domain/Range$Bound.access$000:()Lorg/springframework/data/domain/Range$Bound;
       6: invokestatic  #40                 // Method of:(Lorg/springframework/data/domain/Range$Bound;Lorg/springframework/data/domain/Range$Bound;)Lorg/springframework/data/domain/Range;
       9: putstatic     #9                  // Field UNBOUNDED:Lorg/springframework/data/domain/Range;
      12: return
}
