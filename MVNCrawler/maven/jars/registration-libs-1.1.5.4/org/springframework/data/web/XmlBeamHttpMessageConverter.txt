Compiled from "XmlBeamHttpMessageConverter.java"
public class org.springframework.data.web.XmlBeamHttpMessageConverter extends org.springframework.http.converter.AbstractHttpMessageConverter<java.lang.Object> {
  private final org.xmlbeam.XBProjector projectionFactory;

  private final java.util.Map<java.lang.Class<?>, java.lang.Boolean> supportedTypesCache;

  public org.springframework.data.web.XmlBeamHttpMessageConverter();
    Code:
       0: aload_0
       1: new           #1                  // class org/xmlbeam/XBProjector
       4: dup
       5: new           #2                  // class org/springframework/data/web/XmlBeamHttpMessageConverter$1
       8: dup
       9: invokespecial #3                  // Method org/springframework/data/web/XmlBeamHttpMessageConverter$1."<init>":()V
      12: iconst_0
      13: anewarray     #4                  // class org/xmlbeam/XBProjector$Flags
      16: invokespecial #5                  // Method org/xmlbeam/XBProjector."<init>":(Lorg/xmlbeam/config/XMLFactoriesConfig;[Lorg/xmlbeam/XBProjector$Flags;)V
      19: invokespecial #6                  // Method "<init>":(Lorg/xmlbeam/XBProjector;)V
      22: return

  public org.springframework.data.web.XmlBeamHttpMessageConverter(org.xmlbeam.XBProjector);
    Code:
       0: aload_0
       1: iconst_2
       2: anewarray     #7                  // class org/springframework/http/MediaType
       5: dup
       6: iconst_0
       7: getstatic     #8                  // Field org/springframework/http/MediaType.APPLICATION_XML:Lorg/springframework/http/MediaType;
      10: aastore
      11: dup
      12: iconst_1
      13: ldc           #9                  // String application/*+xml
      15: invokestatic  #10                 // Method org/springframework/http/MediaType.parseMediaType:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      18: aastore
      19: invokespecial #11                 // Method org/springframework/http/converter/AbstractHttpMessageConverter."<init>":([Lorg/springframework/http/MediaType;)V
      22: aload_0
      23: new           #12                 // class org/springframework/util/ConcurrentReferenceHashMap
      26: dup
      27: invokespecial #13                 // Method org/springframework/util/ConcurrentReferenceHashMap."<init>":()V
      30: putfield      #14                 // Field supportedTypesCache:Ljava/util/Map;
      33: aload_1
      34: ldc           #15                 // String XBProjector must not be null!
      36: invokestatic  #16                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      39: aload_0
      40: aload_1
      41: putfield      #17                 // Field projectionFactory:Lorg/xmlbeam/XBProjector;
      44: return

  protected boolean supports(java.lang.Class<?>);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method org/springframework/core/ResolvableType.forType:(Ljava/lang/reflect/Type;)Lorg/springframework/core/ResolvableType;
       4: ldc           #19                 // class java/lang/Object
       6: invokevirtual #20                 // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
       9: astore_2
      10: aload_0
      11: getfield      #14                 // Field supportedTypesCache:Ljava/util/Map;
      14: aload_2
      15: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #22                 // class java/lang/Boolean
      23: astore_3
      24: aload_3
      25: ifnull        33
      28: aload_3
      29: invokevirtual #23                 // Method java/lang/Boolean.booleanValue:()Z
      32: ireturn
      33: aload_2
      34: invokevirtual #24                 // Method java/lang/Class.isInterface:()Z
      37: ifeq          53
      40: aload_2
      41: ldc           #25                 // class org/springframework/data/web/ProjectedPayload
      43: invokestatic  #26                 // Method org/springframework/core/annotation/AnnotationUtils.findAnnotation:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      46: ifnull        53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: invokestatic  #27                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      57: astore_3
      58: aload_0
      59: getfield      #14                 // Field supportedTypesCache:Ljava/util/Map;
      62: aload_2
      63: aload_3
      64: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      69: pop
      70: aload_3
      71: invokevirtual #23                 // Method java/lang/Boolean.booleanValue:()Z
      74: ireturn

  public boolean canWrite(java.lang.Class<?>, org.springframework.http.MediaType);
    Code:
       0: iconst_0
       1: ireturn

  protected java.lang.Object readInternal(java.lang.Class<? extends java.lang.Object>, org.springframework.http.HttpInputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotReadableException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field projectionFactory:Lorg/xmlbeam/XBProjector;
       4: invokevirtual #29                 // Method org/xmlbeam/XBProjector.io:()Lorg/xmlbeam/io/ProjectionIO;
       7: aload_2
       8: invokeinterface #30,  1           // InterfaceMethod org/springframework/http/HttpInputMessage.getBody:()Ljava/io/InputStream;
      13: invokeinterface #31,  2           // InterfaceMethod org/xmlbeam/io/ProjectionIO.stream:(Ljava/io/InputStream;)Lorg/xmlbeam/io/StreamInput;
      18: aload_1
      19: invokevirtual #32                 // Method org/xmlbeam/io/StreamInput.read:(Ljava/lang/Class;)Ljava/lang/Object;
      22: areturn
      23: astore_3
      24: aload_3
      25: invokevirtual #34                 // Method java/lang/RuntimeException.getCause:()Ljava/lang/Throwable;
      28: astore        4
      30: ldc           #35                 // class org/xml/sax/SAXParseException
      32: aload         4
      34: invokevirtual #36                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      37: ifeq          52
      40: new           #37                 // class org/springframework/http/converter/HttpMessageNotReadableException
      43: dup
      44: ldc           #38                 // String Cannot read input message!
      46: aload         4
      48: invokespecial #39                 // Method org/springframework/http/converter/HttpMessageNotReadableException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      51: athrow
      52: aload_3
      53: athrow
    Exception table:
       from    to  target type
           0    22    23   Class java/lang/RuntimeException

  protected void writeInternal(java.lang.Object, org.springframework.http.HttpOutputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotWritableException;
    Code:
       0: return
}
