Compiled from "CustomConversions.java"
public final class org.springframework.data.convert.CustomConversions$StoreConversions {
  public static final org.springframework.data.convert.CustomConversions$StoreConversions NONE;

  private final org.springframework.data.mapping.model.SimpleTypeHolder storeTypeHolder;

  private final java.util.Collection<?> storeConverters;

  public static org.springframework.data.convert.CustomConversions$StoreConversions of(org.springframework.data.mapping.model.SimpleTypeHolder, java.lang.Object...);
    Code:
       0: aload_0
       1: ldc           #2                  // String SimpleTypeHolder must not be null!
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #4                  // String Converters must not be null!
       9: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: new           #5                  // class org/springframework/data/convert/CustomConversions$StoreConversions
      15: dup
      16: aload_0
      17: aload_1
      18: invokestatic  #6                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      21: invokespecial #7                  // Method "<init>":(Lorg/springframework/data/mapping/model/SimpleTypeHolder;Ljava/util/Collection;)V
      24: areturn

  public static org.springframework.data.convert.CustomConversions$StoreConversions of(org.springframework.data.mapping.model.SimpleTypeHolder, java.util.Collection<?>);
    Code:
       0: aload_0
       1: ldc           #2                  // String SimpleTypeHolder must not be null!
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #4                  // String Converters must not be null!
       9: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: new           #5                  // class org/springframework/data/convert/CustomConversions$StoreConversions
      15: dup
      16: aload_0
      17: aload_1
      18: invokespecial #7                  // Method "<init>":(Lorg/springframework/data/mapping/model/SimpleTypeHolder;Ljava/util/Collection;)V
      21: areturn

  public org.springframework.data.util.Streamable<org.springframework.data.convert.CustomConversions$ConverterRegistration> getRegistrationsFor(java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #8                  // String Converter must not be null!
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: astore_2
      11: aload_2
      12: ldc           #10                 // class org/springframework/data/convert/WritingConverter
      14: invokevirtual #11                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      17: istore_3
      18: aload_2
      19: ldc           #12                 // class org/springframework/data/convert/ReadingConverter
      21: invokevirtual #11                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      24: istore        4
      26: aload_1
      27: instanceof    #13                 // class org/springframework/data/convert/ConverterBuilder$ConverterAware
      30: ifeq          44
      33: aload_0
      34: aload_1
      35: invokedynamic #14,  0             // InvokeDynamic #0:get:(Lorg/springframework/data/convert/CustomConversions$StoreConversions;Ljava/lang/Object;)Ljava/util/function/Supplier;
      40: invokestatic  #15                 // InterfaceMethod org/springframework/data/util/Streamable.of:(Ljava/util/function/Supplier;)Lorg/springframework/data/util/Streamable;
      43: areturn
      44: aload_1
      45: instanceof    #16                 // class org/springframework/core/convert/converter/GenericConverter
      48: ifeq          98
      51: ldc           #16                 // class org/springframework/core/convert/converter/GenericConverter
      53: aload_1
      54: invokevirtual #17                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      57: checkcast     #16                 // class org/springframework/core/convert/converter/GenericConverter
      60: invokeinterface #18,  1           // InterfaceMethod org/springframework/core/convert/converter/GenericConverter.getConvertibleTypes:()Ljava/util/Set;
      65: astore        5
      67: aload         5
      69: ifnonnull     78
      72: invokestatic  #19                 // InterfaceMethod org/springframework/data/util/Streamable.empty:()Lorg/springframework/data/util/Streamable;
      75: goto          97
      78: aload         5
      80: invokestatic  #20                 // InterfaceMethod org/springframework/data/util/Streamable.of:(Ljava/lang/Iterable;)Lorg/springframework/data/util/Streamable;
      83: aload_0
      84: iload         4
      86: iload_3
      87: invokedynamic #21,  0             // InvokeDynamic #1:apply:(Lorg/springframework/data/convert/CustomConversions$StoreConversions;ZZ)Ljava/util/function/Function;
      92: invokeinterface #22,  2           // InterfaceMethod org/springframework/data/util/Streamable.map:(Ljava/util/function/Function;)Lorg/springframework/data/util/Streamable;
      97: areturn
      98: aload_1
      99: instanceof    #23                 // class org/springframework/core/convert/converter/ConverterFactory
     102: ifeq          116
     105: aload_0
     106: aload_1
     107: ldc           #23                 // class org/springframework/core/convert/converter/ConverterFactory
     109: iload         4
     111: iload_3
     112: invokespecial #24                 // Method getRegistrationFor:(Ljava/lang/Object;Ljava/lang/Class;ZZ)Lorg/springframework/data/util/Streamable;
     115: areturn
     116: aload_1
     117: instanceof    #25                 // class org/springframework/core/convert/converter/Converter
     120: ifeq          134
     123: aload_0
     124: aload_1
     125: ldc           #25                 // class org/springframework/core/convert/converter/Converter
     127: iload         4
     129: iload_3
     130: invokespecial #24                 // Method getRegistrationFor:(Ljava/lang/Object;Ljava/lang/Class;ZZ)Lorg/springframework/data/util/Streamable;
     133: areturn
     134: new           #26                 // class java/lang/IllegalArgumentException
     137: dup
     138: ldc           #27                 // String Unsupported converter type %s!
     140: iconst_1
     141: anewarray     #28                 // class java/lang/Object
     144: dup
     145: iconst_0
     146: aload_1
     147: aastore
     148: invokestatic  #29                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     151: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     154: athrow

  private org.springframework.data.util.Streamable<org.springframework.data.convert.CustomConversions$ConverterRegistration> getRegistrationFor(java.lang.Object, java.lang.Class<?>, boolean, boolean);
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: astore        5
       6: aload         5
       8: aload_2
       9: invokestatic  #31                 // Method org/springframework/core/GenericTypeResolver.resolveTypeArguments:(Ljava/lang/Class;Ljava/lang/Class;)[Ljava/lang/Class;
      12: astore        6
      14: aload         6
      16: ifnonnull     41
      19: new           #32                 // class java/lang/IllegalStateException
      22: dup
      23: ldc           #33                 // String Couldn\'t resolve type arguments for %s!
      25: iconst_1
      26: anewarray     #28                 // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload         5
      33: aastore
      34: invokestatic  #29                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      37: invokespecial #34                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: iconst_1
      42: anewarray     #35                 // class org/springframework/data/convert/CustomConversions$ConverterRegistration
      45: dup
      46: iconst_0
      47: aload_0
      48: aload         6
      50: iconst_0
      51: aaload
      52: aload         6
      54: iconst_1
      55: aaload
      56: iload_3
      57: iload         4
      59: invokespecial #36                 // Method register:(Ljava/lang/Class;Ljava/lang/Class;ZZ)Lorg/springframework/data/convert/CustomConversions$ConverterRegistration;
      62: aastore
      63: invokestatic  #37                 // InterfaceMethod org/springframework/data/util/Streamable.of:([Ljava/lang/Object;)Lorg/springframework/data/util/Streamable;
      66: areturn

  private org.springframework.data.convert.CustomConversions$ConverterRegistration register(java.lang.Class<?>, java.lang.Class<?>, boolean, boolean);
    Code:
       0: aload_0
       1: new           #38                 // class org/springframework/core/convert/converter/GenericConverter$ConvertiblePair
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #39                 // Method org/springframework/core/convert/converter/GenericConverter$ConvertiblePair."<init>":(Ljava/lang/Class;Ljava/lang/Class;)V
      10: iload_3
      11: iload         4
      13: invokespecial #40                 // Method register:(Lorg/springframework/core/convert/converter/GenericConverter$ConvertiblePair;ZZ)Lorg/springframework/data/convert/CustomConversions$ConverterRegistration;
      16: areturn

  private org.springframework.data.convert.CustomConversions$ConverterRegistration register(org.springframework.core.convert.converter.GenericConverter$ConvertiblePair, boolean, boolean);
    Code:
       0: new           #35                 // class org/springframework/data/convert/CustomConversions$ConverterRegistration
       3: dup
       4: aload_1
       5: aload_0
       6: iload_2
       7: iload_3
       8: aconst_null
       9: invokespecial #41                 // Method org/springframework/data/convert/CustomConversions$ConverterRegistration."<init>":(Lorg/springframework/core/convert/converter/GenericConverter$ConvertiblePair;Lorg/springframework/data/convert/CustomConversions$StoreConversions;ZZLorg/springframework/data/convert/CustomConversions$1;)V
      12: areturn

  private boolean isStoreSimpleType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #42                 // Field storeTypeHolder:Lorg/springframework/data/mapping/model/SimpleTypeHolder;
       4: aload_1
       5: invokevirtual #43                 // Method org/springframework/data/mapping/model/SimpleTypeHolder.isSimpleType:(Ljava/lang/Class;)Z
       8: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #5                  // class org/springframework/data/convert/CustomConversions$StoreConversions
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #5                  // class org/springframework/data/convert/CustomConversions$StoreConversions
      20: astore_2
      21: aload_0
      22: invokevirtual #44                 // Method getStoreTypeHolder:()Lorg/springframework/data/mapping/model/SimpleTypeHolder;
      25: astore_3
      26: aload_2
      27: invokevirtual #44                 // Method getStoreTypeHolder:()Lorg/springframework/data/mapping/model/SimpleTypeHolder;
      30: astore        4
      32: aload_3
      33: ifnonnull     44
      36: aload         4
      38: ifnull        55
      41: goto          53
      44: aload_3
      45: aload         4
      47: invokevirtual #45                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      50: ifne          55
      53: iconst_0
      54: ireturn
      55: aload_0
      56: invokevirtual #46                 // Method getStoreConverters:()Ljava/util/Collection;
      59: astore        5
      61: aload_2
      62: invokevirtual #46                 // Method getStoreConverters:()Ljava/util/Collection;
      65: astore        6
      67: aload         5
      69: ifnonnull     80
      72: aload         6
      74: ifnull        92
      77: goto          90
      80: aload         5
      82: aload         6
      84: invokevirtual #45                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      87: ifne          92
      90: iconst_0
      91: ireturn
      92: iconst_1
      93: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #44                 // Method getStoreTypeHolder:()Lorg/springframework/data/mapping/model/SimpleTypeHolder;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #47                 // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: aload_0
      30: invokevirtual #46                 // Method getStoreConverters:()Ljava/util/Collection;
      33: astore        4
      35: iload_2
      36: bipush        59
      38: imul
      39: aload         4
      41: ifnonnull     49
      44: bipush        43
      46: goto          54
      49: aload         4
      51: invokevirtual #47                 // Method java/lang/Object.hashCode:()I
      54: iadd
      55: istore_2
      56: iload_2
      57: ireturn

  public java.lang.String toString();
    Code:
       0: new           #48                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #50                 // String CustomConversions.StoreConversions(storeTypeHolder=
       9: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #44                 // Method getStoreTypeHolder:()Lorg/springframework/data/mapping/model/SimpleTypeHolder;
      16: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #53                 // String , storeConverters=
      21: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #46                 // Method getStoreConverters:()Ljava/util/Collection;
      28: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #54                 // String )
      33: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  org.springframework.data.mapping.model.SimpleTypeHolder getStoreTypeHolder();
    Code:
       0: aload_0
       1: getfield      #42                 // Field storeTypeHolder:Lorg/springframework/data/mapping/model/SimpleTypeHolder;
       4: areturn

  java.util.Collection<?> getStoreConverters();
    Code:
       0: aload_0
       1: getfield      #56                 // Field storeConverters:Ljava/util/Collection;
       4: areturn

  private org.springframework.data.convert.CustomConversions$StoreConversions(org.springframework.data.mapping.model.SimpleTypeHolder, java.util.Collection<?>);
    Code:
       0: aload_0
       1: invokespecial #57                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #42                 // Field storeTypeHolder:Lorg/springframework/data/mapping/model/SimpleTypeHolder;
       9: aload_0
      10: aload_2
      11: putfield      #56                 // Field storeConverters:Ljava/util/Collection;
      14: return

  private org.springframework.data.convert.CustomConversions$ConverterRegistration lambda$getRegistrationsFor$2(boolean, boolean, org.springframework.core.convert.converter.GenericConverter$ConvertiblePair);
    Code:
       0: aload_0
       1: aload_3
       2: iload_1
       3: iload_2
       4: invokespecial #40                 // Method register:(Lorg/springframework/core/convert/converter/GenericConverter$ConvertiblePair;ZZ)Lorg/springframework/data/convert/CustomConversions$ConverterRegistration;
       7: areturn

  private java.util.stream.Stream lambda$getRegistrationsFor$1(java.lang.Object);
    Code:
       0: ldc           #13                 // class org/springframework/data/convert/ConverterBuilder$ConverterAware
       2: aload_1
       3: invokevirtual #17                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
       6: checkcast     #13                 // class org/springframework/data/convert/ConverterBuilder$ConverterAware
       9: invokeinterface #58,  1           // InterfaceMethod org/springframework/data/convert/ConverterBuilder$ConverterAware.getConverters:()Ljava/util/Set;
      14: invokeinterface #59,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      19: aload_0
      20: invokedynamic #60,  0             // InvokeDynamic #2:apply:(Lorg/springframework/data/convert/CustomConversions$StoreConversions;)Ljava/util/function/Function;
      25: invokeinterface #61,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      30: areturn

  private java.util.stream.Stream lambda$null$0(org.springframework.core.convert.converter.GenericConverter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #62                 // Method getRegistrationsFor:(Ljava/lang/Object;)Lorg/springframework/data/util/Streamable;
       5: invokeinterface #63,  1           // InterfaceMethod org/springframework/data/util/Streamable.stream:()Ljava/util/stream/Stream;
      10: areturn

  static boolean access$000(org.springframework.data.convert.CustomConversions$StoreConversions, java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method isStoreSimpleType:(Ljava/lang/Class;)Z
       5: ireturn

  static {};
    Code:
       0: getstatic     #64                 // Field org/springframework/data/mapping/model/SimpleTypeHolder.DEFAULT:Lorg/springframework/data/mapping/model/SimpleTypeHolder;
       3: invokestatic  #65                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       6: invokestatic  #66                 // Method of:(Lorg/springframework/data/mapping/model/SimpleTypeHolder;Ljava/util/Collection;)Lorg/springframework/data/convert/CustomConversions$StoreConversions;
       9: putstatic     #67                 // Field NONE:Lorg/springframework/data/convert/CustomConversions$StoreConversions;
      12: return
}
