Compiled from "ReactiveRepositoryInformation.java"
public class org.springframework.data.repository.core.support.ReactiveRepositoryInformation extends org.springframework.data.repository.core.support.DefaultRepositoryInformation {
  public org.springframework.data.repository.core.support.ReactiveRepositoryInformation(org.springframework.data.repository.core.RepositoryMetadata, java.lang.Class<?>, org.springframework.data.repository.core.support.RepositoryComposition);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload_1
       5: invokestatic  #1                  // InterfaceMethod org/springframework/data/repository/core/support/MethodLookups.forReactiveTypes:(Lorg/springframework/data/repository/core/RepositoryMetadata;)Lorg/springframework/data/repository/core/support/MethodLookup;
       8: invokevirtual #2                  // Method org/springframework/data/repository/core/support/RepositoryComposition.withMethodLookup:(Lorg/springframework/data/repository/core/support/MethodLookup;)Lorg/springframework/data/repository/core/support/RepositoryComposition;
      11: invokespecial #3                  // Method org/springframework/data/repository/core/support/DefaultRepositoryInformation."<init>":(Lorg/springframework/data/repository/core/RepositoryMetadata;Ljava/lang/Class;Lorg/springframework/data/repository/core/support/RepositoryComposition;)V
      14: return

  public boolean isReactiveRepository();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/springframework/data/repository/core/support/DefaultRepositoryInformation.isReactiveRepository:()Z
       4: ireturn

  public java.util.Set getAlternativeDomainTypes();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/springframework/data/repository/core/support/DefaultRepositoryInformation.getAlternativeDomainTypes:()Ljava/util/Set;
       4: areturn

  public boolean isPagingRepository();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/springframework/data/repository/core/support/DefaultRepositoryInformation.isPagingRepository:()Z
       4: ireturn

  public org.springframework.data.repository.core.CrudMethods getCrudMethods();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method org/springframework/data/repository/core/support/DefaultRepositoryInformation.getCrudMethods:()Lorg/springframework/data/repository/core/CrudMethods;
       4: areturn

  public java.lang.Class getReturnedDomainClass(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method org/springframework/data/repository/core/support/DefaultRepositoryInformation.getReturnedDomainClass:(Ljava/lang/reflect/Method;)Ljava/lang/Class;
       5: areturn

  public java.lang.Class getRepositoryInterface();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method org/springframework/data/repository/core/support/DefaultRepositoryInformation.getRepositoryInterface:()Ljava/lang/Class;
       4: areturn

  public boolean hasCustomMethod();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method org/springframework/data/repository/core/support/DefaultRepositoryInformation.hasCustomMethod:()Z
       4: ireturn

  public boolean isBaseClassMethod(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method org/springframework/data/repository/core/support/DefaultRepositoryInformation.isBaseClassMethod:(Ljava/lang/reflect/Method;)Z
       5: ireturn

  public boolean isQueryMethod(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method org/springframework/data/repository/core/support/DefaultRepositoryInformation.isQueryMethod:(Ljava/lang/reflect/Method;)Z
       5: ireturn

  public boolean isCustomMethod(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method org/springframework/data/repository/core/support/DefaultRepositoryInformation.isCustomMethod:(Ljava/lang/reflect/Method;)Z
       5: ireturn

  public org.springframework.data.util.Streamable getQueryMethods();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method org/springframework/data/repository/core/support/DefaultRepositoryInformation.getQueryMethods:()Lorg/springframework/data/util/Streamable;
       4: areturn

  public java.lang.reflect.Method getTargetClassMethod(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method org/springframework/data/repository/core/support/DefaultRepositoryInformation.getTargetClassMethod:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
       5: areturn

  public java.lang.Class getRepositoryBaseClass();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method org/springframework/data/repository/core/support/DefaultRepositoryInformation.getRepositoryBaseClass:()Ljava/lang/Class;
       4: areturn

  public java.lang.Class getIdType();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method org/springframework/data/repository/core/support/DefaultRepositoryInformation.getIdType:()Ljava/lang/Class;
       4: areturn

  public java.lang.Class getDomainType();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method org/springframework/data/repository/core/support/DefaultRepositoryInformation.getDomainType:()Ljava/lang/Class;
       4: areturn
}
