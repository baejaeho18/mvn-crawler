Compiled from "RepositoryBeanDefinitionBuilder.java"
class org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder {
  private static final org.slf4j.Logger LOGGER;

  private final org.springframework.beans.factory.support.BeanDefinitionRegistry registry;

  private final org.springframework.data.repository.config.RepositoryConfigurationExtension extension;

  private final org.springframework.core.io.ResourceLoader resourceLoader;

  private final org.springframework.core.type.classreading.MetadataReaderFactory metadataReaderFactory;

  private final org.springframework.data.repository.config.CustomRepositoryImplementationDetector implementationDetector;

  public org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder(org.springframework.beans.factory.support.BeanDefinitionRegistry, org.springframework.data.repository.config.RepositoryConfigurationExtension, org.springframework.core.io.ResourceLoader, org.springframework.core.env.Environment);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_2
       5: ldc           #2                  // String RepositoryConfigurationExtension must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_3
      11: ldc           #4                  // String ResourceLoader must not be null!
      13: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload         4
      18: ldc           #5                  // String Environment must not be null!
      20: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      23: aload_0
      24: aload_1
      25: putfield      #6                  // Field registry:Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
      28: aload_0
      29: aload_2
      30: putfield      #7                  // Field extension:Lorg/springframework/data/repository/config/RepositoryConfigurationExtension;
      33: aload_0
      34: aload_3
      35: putfield      #8                  // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
      38: aload_0
      39: new           #9                  // class org/springframework/core/type/classreading/CachingMetadataReaderFactory
      42: dup
      43: aload_3
      44: invokespecial #10                 // Method org/springframework/core/type/classreading/CachingMetadataReaderFactory."<init>":(Lorg/springframework/core/io/ResourceLoader;)V
      47: putfield      #11                 // Field metadataReaderFactory:Lorg/springframework/core/type/classreading/MetadataReaderFactory;
      50: aload_0
      51: new           #12                 // class org/springframework/data/repository/config/CustomRepositoryImplementationDetector
      54: dup
      55: aload_0
      56: getfield      #11                 // Field metadataReaderFactory:Lorg/springframework/core/type/classreading/MetadataReaderFactory;
      59: aload         4
      61: aload_3
      62: invokespecial #13                 // Method org/springframework/data/repository/config/CustomRepositoryImplementationDetector."<init>":(Lorg/springframework/core/type/classreading/MetadataReaderFactory;Lorg/springframework/core/env/Environment;Lorg/springframework/core/io/ResourceLoader;)V
      65: putfield      #14                 // Field implementationDetector:Lorg/springframework/data/repository/config/CustomRepositoryImplementationDetector;
      68: return

  public org.springframework.beans.factory.support.BeanDefinitionBuilder build(org.springframework.data.repository.config.RepositoryConfiguration<?>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field registry:Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
       4: ldc           #15                 // String BeanDefinitionRegistry must not be null!
       6: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       9: aload_0
      10: getfield      #8                  // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
      13: ldc           #4                  // String ResourceLoader must not be null!
      15: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_1
      19: invokeinterface #16,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getRepositoryFactoryBeanClassName:()Ljava/lang/String;
      24: invokestatic  #17                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.rootBeanDefinition:(Ljava/lang/String;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
      27: astore_2
      28: aload_2
      29: invokevirtual #18                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.getRawBeanDefinition:()Lorg/springframework/beans/factory/support/AbstractBeanDefinition;
      32: aload_1
      33: invokeinterface #19,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getSource:()Ljava/lang/Object;
      38: invokevirtual #20                 // Method org/springframework/beans/factory/support/AbstractBeanDefinition.setSource:(Ljava/lang/Object;)V
      41: aload_2
      42: aload_1
      43: invokeinterface #21,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getRepositoryInterface:()Ljava/lang/String;
      48: invokevirtual #22                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addConstructorArgValue:(Ljava/lang/Object;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
      51: pop
      52: aload_2
      53: ldc           #23                 // String queryLookupStrategyKey
      55: aload_1
      56: invokeinterface #24,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getQueryLookupStrategyKey:()Ljava/lang/Object;
      61: invokevirtual #25                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addPropertyValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
      64: pop
      65: aload_2
      66: ldc           #26                 // String lazyInit
      68: aload_1
      69: invokeinterface #27,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.isLazyInit:()Z
      74: invokestatic  #28                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      77: invokevirtual #25                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addPropertyValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
      80: pop
      81: aload_1
      82: invokeinterface #29,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getRepositoryBaseClassName:()Ljava/util/Optional;
      87: aload_2
      88: invokedynamic #30,  0             // InvokeDynamic #0:accept:(Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)Ljava/util/function/Consumer;
      93: invokevirtual #31                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      96: new           #32                 // class org/springframework/data/repository/config/NamedQueriesBeanDefinitionBuilder
      99: dup
     100: aload_0
     101: getfield      #7                  // Field extension:Lorg/springframework/data/repository/config/RepositoryConfigurationExtension;
     104: invokeinterface #33,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationExtension.getDefaultNamedQueryLocation:()Ljava/lang/String;
     109: invokespecial #34                 // Method org/springframework/data/repository/config/NamedQueriesBeanDefinitionBuilder."<init>":(Ljava/lang/String;)V
     112: astore_3
     113: aload_1
     114: invokeinterface #35,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getNamedQueriesLocation:()Ljava/util/Optional;
     119: aload_3
     120: dup
     121: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     124: pop
     125: invokedynamic #37,  0             // InvokeDynamic #1:accept:(Lorg/springframework/data/repository/config/NamedQueriesBeanDefinitionBuilder;)Ljava/util/function/Consumer;
     130: invokevirtual #31                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     133: aload_2
     134: ldc           #38                 // String namedQueries
     136: aload_3
     137: aload_1
     138: invokeinterface #19,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getSource:()Ljava/lang/Object;
     143: invokevirtual #39                 // Method org/springframework/data/repository/config/NamedQueriesBeanDefinitionBuilder.build:(Ljava/lang/Object;)Lorg/springframework/beans/factory/config/BeanDefinition;
     146: invokevirtual #25                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addPropertyValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
     149: pop
     150: aload_0
     151: aload_1
     152: invokespecial #40                 // Method registerCustomImplementation:(Lorg/springframework/data/repository/config/RepositoryConfiguration;)Ljava/util/Optional;
     155: aload_2
     156: invokedynamic #41,  0             // InvokeDynamic #2:accept:(Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)Ljava/util/function/Consumer;
     161: invokevirtual #31                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     164: ldc           #42                 // class org/springframework/data/repository/core/support/RepositoryFragmentsFactoryBean
     166: invokestatic  #43                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.rootBeanDefinition:(Ljava/lang/Class;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
     169: astore        4
     171: aload_0
     172: aload_1
     173: invokespecial #44                 // Method registerRepositoryFragmentsImplementation:(Lorg/springframework/data/repository/config/RepositoryConfiguration;)Ljava/util/stream/Stream;
     176: invokedynamic #45,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
     181: invokeinterface #46,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     186: invokestatic  #47                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
     189: invokeinterface #48,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     194: checkcast     #49                 // class java/util/List
     197: astore        5
     199: aload         4
     201: aload         5
     203: invokevirtual #22                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addConstructorArgValue:(Ljava/lang/Object;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
     206: pop
     207: aload_2
     208: ldc           #50                 // String repositoryFragments
     210: aload         4
     212: aload_1
     213: invokeinterface #19,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getSource:()Ljava/lang/Object;
     218: invokestatic  #51                 // Method org/springframework/data/config/ParsingUtils.getSourceBeanDefinition:(Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Ljava/lang/Object;)Lorg/springframework/beans/factory/support/AbstractBeanDefinition;
     221: invokevirtual #25                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addPropertyValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
     224: pop
     225: new           #52                 // class org/springframework/beans/factory/support/RootBeanDefinition
     228: dup
     229: ldc           #53                 // class org/springframework/data/repository/query/ExtensionAwareEvaluationContextProvider
     231: invokespecial #54                 // Method org/springframework/beans/factory/support/RootBeanDefinition."<init>":(Ljava/lang/Class;)V
     234: astore        6
     236: aload         6
     238: aload_1
     239: invokeinterface #19,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getSource:()Ljava/lang/Object;
     244: invokevirtual #55                 // Method org/springframework/beans/factory/support/RootBeanDefinition.setSource:(Ljava/lang/Object;)V
     247: aload_2
     248: ldc           #56                 // String evaluationContextProvider
     250: aload         6
     252: invokevirtual #25                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addPropertyValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
     255: pop
     256: aload_2
     257: areturn

  private java.util.Optional<java.lang.String> registerCustomImplementation(org.springframework.data.repository.config.RepositoryConfiguration<?>);
    Code:
       0: aload_1
       1: invokeinterface #57,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getImplementationBeanName:()Ljava/lang/String;
       6: astore_2
       7: aload_0
       8: getfield      #6                  // Field registry:Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
      11: aload_2
      12: invokeinterface #58,  2           // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.containsBeanDefinition:(Ljava/lang/String;)Z
      17: ifeq          25
      20: aload_2
      21: invokestatic  #59                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      24: areturn
      25: aload_0
      26: getfield      #14                 // Field implementationDetector:Lorg/springframework/data/repository/config/CustomRepositoryImplementationDetector;
      29: aload_1
      30: invokevirtual #60                 // Method org/springframework/data/repository/config/CustomRepositoryImplementationDetector.detectCustomImplementation:(Lorg/springframework/data/repository/config/RepositoryConfiguration;)Ljava/util/Optional;
      33: astore_3
      34: aload_3
      35: aload_0
      36: aload_1
      37: aload_2
      38: invokedynamic #61,  0             // InvokeDynamic #4:apply:(Lorg/springframework/data/repository/config/RepositoryBeanDefinitionBuilder;Lorg/springframework/data/repository/config/RepositoryConfiguration;Ljava/lang/String;)Ljava/util/function/Function;
      43: invokevirtual #62                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      46: areturn

  private java.util.stream.Stream<org.springframework.data.repository.config.RepositoryFragmentConfiguration> registerRepositoryFragmentsImplementation(org.springframework.data.repository.config.RepositoryConfiguration<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #21,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getRepositoryInterface:()Ljava/lang/String;
       7: invokespecial #63                 // Method getClassMetadata:(Ljava/lang/String;)Lorg/springframework/core/type/ClassMetadata;
      10: astore_2
      11: aload_2
      12: invokeinterface #64,  1           // InterfaceMethod org/springframework/core/type/ClassMetadata.getInterfaceNames:()[Ljava/lang/String;
      17: invokestatic  #65                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      20: aload_0
      21: invokedynamic #66,  0             // InvokeDynamic #5:test:(Lorg/springframework/data/repository/config/RepositoryBeanDefinitionBuilder;)Ljava/util/function/Predicate;
      26: invokeinterface #67,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      31: aload_1
      32: invokedynamic #68,  0             // InvokeDynamic #6:apply:(Lorg/springframework/data/repository/config/RepositoryConfiguration;)Ljava/util/function/Function;
      37: invokeinterface #46,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      42: aload_0
      43: invokedynamic #69,  0             // InvokeDynamic #7:apply:(Lorg/springframework/data/repository/config/RepositoryBeanDefinitionBuilder;)Ljava/util/function/Function;
      48: invokeinterface #46,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      53: invokedynamic #70,  0             // InvokeDynamic #8:apply:()Ljava/util/function/Function;
      58: invokeinterface #71,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      63: aload_0
      64: aload_1
      65: invokedynamic #72,  0             // InvokeDynamic #9:accept:(Lorg/springframework/data/repository/config/RepositoryBeanDefinitionBuilder;Lorg/springframework/data/repository/config/RepositoryConfiguration;)Ljava/util/function/Consumer;
      70: invokeinterface #73,  2           // InterfaceMethod java/util/stream/Stream.peek:(Ljava/util/function/Consumer;)Ljava/util/stream/Stream;
      75: aload_0
      76: aload_1
      77: invokedynamic #74,  0             // InvokeDynamic #10:accept:(Lorg/springframework/data/repository/config/RepositoryBeanDefinitionBuilder;Lorg/springframework/data/repository/config/RepositoryConfiguration;)Ljava/util/function/Consumer;
      82: invokeinterface #73,  2           // InterfaceMethod java/util/stream/Stream.peek:(Ljava/util/function/Consumer;)Ljava/util/stream/Stream;
      87: areturn

  private java.util.Optional<org.springframework.data.repository.config.RepositoryFragmentConfiguration> detectRepositoryFragmentConfiguration(org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder$FragmentMetadata);
    Code:
       0: aload_1
       1: invokevirtual #75                 // Method org/springframework/data/repository/config/RepositoryBeanDefinitionBuilder$FragmentMetadata.getFragmentImplementationClassName:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #14                 // Field implementationDetector:Lorg/springframework/data/repository/config/CustomRepositoryImplementationDetector;
       9: aload_2
      10: aconst_null
      11: aload_1
      12: invokevirtual #76                 // Method org/springframework/data/repository/config/RepositoryBeanDefinitionBuilder$FragmentMetadata.getBasePackages:()Ljava/lang/Iterable;
      15: aload_1
      16: invokevirtual #77                 // Method org/springframework/data/repository/config/RepositoryBeanDefinitionBuilder$FragmentMetadata.getExclusions:()Ljava/util/List;
      19: aload_1
      20: invokevirtual #78                 // Method org/springframework/data/repository/config/RepositoryBeanDefinitionBuilder$FragmentMetadata.getBeanNameGenerator:()Ljava/util/function/Function;
      23: invokevirtual #79                 // Method org/springframework/data/repository/config/CustomRepositoryImplementationDetector.detectCustomImplementation:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/util/Optional;
      26: astore_3
      27: aload_3
      28: aload_1
      29: invokedynamic #80,  0             // InvokeDynamic #11:apply:(Lorg/springframework/data/repository/config/RepositoryBeanDefinitionBuilder$FragmentMetadata;)Ljava/util/function/Function;
      34: invokevirtual #62                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      37: areturn

  private void potentiallyRegisterFragmentImplementation(org.springframework.data.repository.config.RepositoryConfiguration<?>, org.springframework.data.repository.config.RepositoryFragmentConfiguration);
    Code:
       0: aload_2
       1: invokevirtual #81                 // Method org/springframework/data/repository/config/RepositoryFragmentConfiguration.getImplementationBeanName:()Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: getfield      #6                  // Field registry:Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
       9: aload_3
      10: invokeinterface #58,  2           // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.containsBeanDefinition:(Ljava/lang/String;)Z
      15: ifeq          19
      18: return
      19: getstatic     #82                 // Field LOGGER:Lorg/slf4j/Logger;
      22: invokeinterface #83,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      27: ifeq          58
      30: getstatic     #82                 // Field LOGGER:Lorg/slf4j/Logger;
      33: ldc           #84                 // String Registering repository fragment implementation: %s %s
      35: iconst_2
      36: anewarray     #85                 // class java/lang/Object
      39: dup
      40: iconst_0
      41: aload_3
      42: aastore
      43: dup
      44: iconst_1
      45: aload_2
      46: invokevirtual #86                 // Method org/springframework/data/repository/config/RepositoryFragmentConfiguration.getClassName:()Ljava/lang/String;
      49: aastore
      50: invokestatic  #87                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      53: invokeinterface #88,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      58: aload_2
      59: invokevirtual #89                 // Method org/springframework/data/repository/config/RepositoryFragmentConfiguration.getBeanDefinition:()Ljava/util/Optional;
      62: aload_0
      63: aload_1
      64: aload_3
      65: invokedynamic #90,  0             // InvokeDynamic #12:accept:(Lorg/springframework/data/repository/config/RepositoryBeanDefinitionBuilder;Lorg/springframework/data/repository/config/RepositoryConfiguration;Ljava/lang/String;)Ljava/util/function/Consumer;
      70: invokevirtual #31                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      73: return

  private void potentiallyRegisterRepositoryFragment(org.springframework.data.repository.config.RepositoryConfiguration<?>, org.springframework.data.repository.config.RepositoryFragmentConfiguration);
    Code:
       0: aload_2
       1: invokevirtual #91                 // Method org/springframework/data/repository/config/RepositoryFragmentConfiguration.getFragmentBeanName:()Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: getfield      #6                  // Field registry:Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
       9: aload_3
      10: invokeinterface #58,  2           // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.containsBeanDefinition:(Ljava/lang/String;)Z
      15: ifeq          19
      18: return
      19: getstatic     #82                 // Field LOGGER:Lorg/slf4j/Logger;
      22: invokeinterface #83,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      27: ifeq          57
      30: getstatic     #82                 // Field LOGGER:Lorg/slf4j/Logger;
      33: new           #92                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #93                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #94                 // String Registering repository fragment:
      42: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_3
      46: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokeinterface #88,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      57: ldc           #97                 // class org/springframework/data/repository/core/support/RepositoryFragment
      59: ldc           #98                 // String implemented
      61: invokestatic  #99                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.rootBeanDefinition:(Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
      64: astore        4
      66: aload         4
      68: aload_2
      69: invokevirtual #100                // Method org/springframework/data/repository/config/RepositoryFragmentConfiguration.getInterfaceName:()Ljava/lang/String;
      72: invokevirtual #22                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addConstructorArgValue:(Ljava/lang/Object;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
      75: pop
      76: aload         4
      78: aload_2
      79: invokevirtual #81                 // Method org/springframework/data/repository/config/RepositoryFragmentConfiguration.getImplementationBeanName:()Ljava/lang/String;
      82: invokevirtual #101                // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addConstructorArgReference:(Ljava/lang/String;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
      85: pop
      86: aload_0
      87: getfield      #6                  // Field registry:Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
      90: aload_3
      91: aload         4
      93: aload_1
      94: invokeinterface #19,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getSource:()Ljava/lang/Object;
      99: invokestatic  #51                 // Method org/springframework/data/config/ParsingUtils.getSourceBeanDefinition:(Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Ljava/lang/Object;)Lorg/springframework/beans/factory/support/AbstractBeanDefinition;
     102: invokeinterface #102,  3          // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.registerBeanDefinition:(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;)V
     107: return

  private org.springframework.core.type.ClassMetadata getClassMetadata(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field metadataReaderFactory:Lorg/springframework/core/type/classreading/MetadataReaderFactory;
       4: aload_1
       5: invokeinterface #103,  2          // InterfaceMethod org/springframework/core/type/classreading/MetadataReaderFactory.getMetadataReader:(Ljava/lang/String;)Lorg/springframework/core/type/classreading/MetadataReader;
      10: invokeinterface #104,  1          // InterfaceMethod org/springframework/core/type/classreading/MetadataReader.getClassMetadata:()Lorg/springframework/core/type/ClassMetadata;
      15: areturn
      16: astore_2
      17: new           #106                // class org/springframework/beans/factory/BeanDefinitionStoreException
      20: dup
      21: ldc           #107                // String Cannot parse %s metadata.
      23: iconst_1
      24: anewarray     #85                 // class java/lang/Object
      27: dup
      28: iconst_0
      29: aload_1
      30: aastore
      31: invokestatic  #87                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      34: aload_2
      35: invokespecial #108                // Method org/springframework/beans/factory/BeanDefinitionStoreException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      38: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  private void lambda$potentiallyRegisterFragmentImplementation$10(org.springframework.data.repository.config.RepositoryConfiguration, java.lang.String, org.springframework.beans.factory.support.AbstractBeanDefinition);
    Code:
       0: aload_3
       1: aload_1
       2: invokeinterface #19,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getSource:()Ljava/lang/Object;
       7: invokevirtual #20                 // Method org/springframework/beans/factory/support/AbstractBeanDefinition.setSource:(Ljava/lang/Object;)V
      10: aload_0
      11: getfield      #6                  // Field registry:Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
      14: aload_2
      15: aload_3
      16: invokeinterface #102,  3          // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.registerBeanDefinition:(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;)V
      21: return

  private static org.springframework.data.repository.config.RepositoryFragmentConfiguration lambda$detectRepositoryFragmentConfiguration$9(org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder$FragmentMetadata, org.springframework.beans.factory.support.AbstractBeanDefinition);
    Code:
       0: new           #109                // class org/springframework/data/repository/config/RepositoryFragmentConfiguration
       3: dup
       4: aload_0
       5: invokevirtual #110                // Method org/springframework/data/repository/config/RepositoryBeanDefinitionBuilder$FragmentMetadata.getFragmentInterfaceName:()Ljava/lang/String;
       8: aload_1
       9: invokespecial #111                // Method org/springframework/data/repository/config/RepositoryFragmentConfiguration."<init>":(Ljava/lang/String;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;)V
      12: areturn

  private void lambda$registerRepositoryFragmentsImplementation$8(org.springframework.data.repository.config.RepositoryConfiguration, org.springframework.data.repository.config.RepositoryFragmentConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #112                // Method potentiallyRegisterRepositoryFragment:(Lorg/springframework/data/repository/config/RepositoryConfiguration;Lorg/springframework/data/repository/config/RepositoryFragmentConfiguration;)V
       6: return

  private void lambda$registerRepositoryFragmentsImplementation$7(org.springframework.data.repository.config.RepositoryConfiguration, org.springframework.data.repository.config.RepositoryFragmentConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #113                // Method potentiallyRegisterFragmentImplementation:(Lorg/springframework/data/repository/config/RepositoryConfiguration;Lorg/springframework/data/repository/config/RepositoryFragmentConfiguration;)V
       6: return

  private static java.util.stream.Stream lambda$registerRepositoryFragmentsImplementation$6(java.util.Optional);
    Code:
       0: iconst_1
       1: anewarray     #114                // class java/util/Optional
       4: dup
       5: iconst_0
       6: aload_0
       7: aastore
       8: invokestatic  #115                // InterfaceMethod org/springframework/data/util/Optionals.toStream:([Ljava/util/Optional;)Ljava/util/stream/Stream;
      11: areturn

  private java.util.Optional lambda$registerRepositoryFragmentsImplementation$5(org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder$FragmentMetadata);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #116                // Method detectRepositoryFragmentConfiguration:(Lorg/springframework/data/repository/config/RepositoryBeanDefinitionBuilder$FragmentMetadata;)Ljava/util/Optional;
       5: areturn

  private static org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder$FragmentMetadata lambda$registerRepositoryFragmentsImplementation$4(org.springframework.data.repository.config.RepositoryConfiguration, java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #117                // Method org/springframework/data/repository/config/RepositoryBeanDefinitionBuilder$FragmentMetadata.of:(Ljava/lang/String;Lorg/springframework/data/repository/config/RepositoryConfiguration;)Lorg/springframework/data/repository/config/RepositoryBeanDefinitionBuilder$FragmentMetadata;
       5: areturn

  private boolean lambda$registerRepositoryFragmentsImplementation$3(java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #11                 // Field metadataReaderFactory:Lorg/springframework/core/type/classreading/MetadataReaderFactory;
       5: invokestatic  #118                // Method org/springframework/data/repository/config/RepositoryBeanDefinitionBuilder$FragmentMetadata.isCandidate:(Ljava/lang/String;Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Z
       8: ireturn

  private java.lang.String lambda$registerCustomImplementation$2(org.springframework.data.repository.config.RepositoryConfiguration, java.lang.String, org.springframework.beans.factory.support.AbstractBeanDefinition);
    Code:
       0: getstatic     #82                 // Field LOGGER:Lorg/slf4j/Logger;
       3: invokeinterface #83,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          55
      11: getstatic     #82                 // Field LOGGER:Lorg/slf4j/Logger;
      14: new           #92                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #93                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #119                // String Registering custom repository implementation:
      23: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokeinterface #57,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getImplementationBeanName:()Ljava/lang/String;
      32: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #120                // String
      37: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_3
      41: invokevirtual #121                // Method org/springframework/beans/factory/support/AbstractBeanDefinition.getBeanClassName:()Ljava/lang/String;
      44: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokeinterface #88,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      55: aload_3
      56: aload_1
      57: invokeinterface #19,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getSource:()Ljava/lang/Object;
      62: invokevirtual #20                 // Method org/springframework/beans/factory/support/AbstractBeanDefinition.setSource:(Ljava/lang/Object;)V
      65: aload_0
      66: getfield      #6                  // Field registry:Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
      69: aload_2
      70: aload_3
      71: invokeinterface #102,  3          // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.registerBeanDefinition:(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;)V
      76: aload_2
      77: areturn

  private static void lambda$build$1(org.springframework.beans.factory.support.BeanDefinitionBuilder, java.lang.String);
    Code:
       0: aload_0
       1: ldc           #122                // String customImplementation
       3: aload_1
       4: invokevirtual #123                // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addPropertyReference:(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
       7: pop
       8: aload_0
       9: aload_1
      10: invokevirtual #124                // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addDependsOn:(Ljava/lang/String;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
      13: pop
      14: return

  private static void lambda$build$0(org.springframework.beans.factory.support.BeanDefinitionBuilder, java.lang.String);
    Code:
       0: aload_0
       1: ldc           #125                // String repositoryBaseClass
       3: aload_1
       4: invokevirtual #25                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addPropertyValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
       7: pop
       8: return

  static {};
    Code:
       0: ldc           #126                // class org/springframework/data/repository/config/RepositoryBeanDefinitionBuilder
       2: invokestatic  #127                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #82                 // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
