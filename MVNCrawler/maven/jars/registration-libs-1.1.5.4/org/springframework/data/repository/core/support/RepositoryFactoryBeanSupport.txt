Compiled from "RepositoryFactoryBeanSupport.java"
public abstract class org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport<T extends org.springframework.data.repository.Repository<S, ID>, S, ID> implements org.springframework.beans.factory.InitializingBean, org.springframework.data.repository.core.support.RepositoryFactoryInformation<S, ID>, org.springframework.beans.factory.FactoryBean<T>, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.BeanFactoryAware, org.springframework.context.ApplicationEventPublisherAware {
  private final java.lang.Class<? extends T> repositoryInterface;

  private org.springframework.data.repository.core.support.RepositoryFactorySupport factory;

  private org.springframework.data.repository.query.QueryLookupStrategy$Key queryLookupStrategyKey;

  private java.util.Optional<java.lang.Class<?>> repositoryBaseClass;

  private java.util.Optional<java.lang.Object> customImplementation;

  private java.util.Optional<org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments> repositoryFragments;

  private org.springframework.data.repository.core.NamedQueries namedQueries;

  private java.util.Optional<org.springframework.data.mapping.context.MappingContext<?, ?>> mappingContext;

  private java.lang.ClassLoader classLoader;

  private org.springframework.beans.factory.BeanFactory beanFactory;

  private boolean lazyInit;

  private org.springframework.data.repository.query.EvaluationContextProvider evaluationContextProvider;

  private org.springframework.context.ApplicationEventPublisher publisher;

  private org.springframework.data.util.Lazy<T> repository;

  private org.springframework.data.repository.core.RepositoryMetadata repositoryMetadata;

  protected org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport(java.lang.Class<? extends T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
       8: putfield      #3                  // Field repositoryBaseClass:Ljava/util/Optional;
      11: aload_0
      12: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      15: putfield      #4                  // Field customImplementation:Ljava/util/Optional;
      18: aload_0
      19: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      22: putfield      #5                  // Field repositoryFragments:Ljava/util/Optional;
      25: aload_0
      26: iconst_0
      27: putfield      #6                  // Field lazyInit:Z
      30: aload_0
      31: getstatic     #7                  // Field org/springframework/data/repository/query/DefaultEvaluationContextProvider.INSTANCE:Lorg/springframework/data/repository/query/DefaultEvaluationContextProvider;
      34: putfield      #8                  // Field evaluationContextProvider:Lorg/springframework/data/repository/query/EvaluationContextProvider;
      37: aload_1
      38: ldc           #9                  // String Repository interface must not be null!
      40: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      43: aload_0
      44: aload_1
      45: putfield      #11                 // Field repositoryInterface:Ljava/lang/Class;
      48: return

  public void setRepositoryBaseClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #12                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       5: putfield      #3                  // Field repositoryBaseClass:Ljava/util/Optional;
       8: return

  public void setQueryLookupStrategyKey(org.springframework.data.repository.query.QueryLookupStrategy$Key);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field queryLookupStrategyKey:Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;
       5: return

  public void setCustomImplementation(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #12                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       5: putfield      #4                  // Field customImplementation:Ljava/util/Optional;
       8: return

  public void setRepositoryFragments(org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #12                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       5: putfield      #5                  // Field repositoryFragments:Ljava/util/Optional;
       8: return

  public void setNamedQueries(org.springframework.data.repository.core.NamedQueries);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field namedQueries:Lorg/springframework/data/repository/core/NamedQueries;
       5: return

  protected void setMappingContext(org.springframework.data.mapping.context.MappingContext<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #12                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       5: putfield      #15                 // Field mappingContext:Ljava/util/Optional;
       8: return

  public void setEvaluationContextProvider(org.springframework.data.repository.query.EvaluationContextProvider);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     11
       5: getstatic     #7                  // Field org/springframework/data/repository/query/DefaultEvaluationContextProvider.INSTANCE:Lorg/springframework/data/repository/query/DefaultEvaluationContextProvider;
       8: goto          12
      11: aload_1
      12: putfield      #8                  // Field evaluationContextProvider:Lorg/springframework/data/repository/query/EvaluationContextProvider;
      15: return

  public void setLazyInit(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field lazyInit:Z
       5: return

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field classLoader:Ljava/lang/ClassLoader;
       5: return

  public void setBeanFactory(org.springframework.beans.factory.BeanFactory) throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       5: return

  public void setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field publisher:Lorg/springframework/context/ApplicationEventPublisher;
       5: return

  public org.springframework.data.repository.core.EntityInformation<S, ID> getEntityInformation();
    Code:
       0: aload_0
       1: getfield      #19                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
       4: aload_0
       5: getfield      #20                 // Field repositoryMetadata:Lorg/springframework/data/repository/core/RepositoryMetadata;
       8: invokeinterface #21,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.getDomainType:()Ljava/lang/Class;
      13: invokevirtual #22                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.getEntityInformation:(Ljava/lang/Class;)Lorg/springframework/data/repository/core/EntityInformation;
      16: areturn

  public org.springframework.data.repository.core.RepositoryInformation getRepositoryInformation();
    Code:
       0: aload_0
       1: getfield      #4                  // Field customImplementation:Ljava/util/Optional;
       4: invokedynamic #23,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
       9: invokevirtual #24                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      12: invokestatic  #25                 // Method org/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments.empty:()Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;
      15: invokevirtual #26                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #27                 // class org/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments
      21: astore_1
      22: aload_0
      23: getfield      #19                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      26: aload_0
      27: getfield      #20                 // Field repositoryMetadata:Lorg/springframework/data/repository/core/RepositoryMetadata;
      30: aload_1
      31: invokevirtual #28                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.getRepositoryInformation:(Lorg/springframework/data/repository/core/RepositoryMetadata;Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;)Lorg/springframework/data/repository/core/RepositoryInformation;
      34: areturn

  public org.springframework.data.mapping.PersistentEntity<?, ?> getPersistentEntity();
    Code:
       0: aload_0
       1: getfield      #15                 // Field mappingContext:Ljava/util/Optional;
       4: invokedynamic #29,  0             // InvokeDynamic #1:get:()Ljava/util/function/Supplier;
       9: invokevirtual #30                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      12: checkcast     #31                 // class org/springframework/data/mapping/context/MappingContext
      15: aload_0
      16: getfield      #20                 // Field repositoryMetadata:Lorg/springframework/data/repository/core/RepositoryMetadata;
      19: invokeinterface #21,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.getDomainType:()Ljava/lang/Class;
      24: invokeinterface #32,  2           // InterfaceMethod org/springframework/data/mapping/context/MappingContext.getRequiredPersistentEntity:(Ljava/lang/Class;)Lorg/springframework/data/mapping/PersistentEntity;
      29: areturn

  public java.util.List<org.springframework.data.repository.query.QueryMethod> getQueryMethods();
    Code:
       0: aload_0
       1: getfield      #19                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
       4: invokevirtual #33                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.getQueryMethods:()Ljava/util/List;
       7: areturn

  public T getObject();
    Code:
       0: aload_0
       1: getfield      #34                 // Field repository:Lorg/springframework/data/util/Lazy;
       4: invokevirtual #35                 // Method org/springframework/data/util/Lazy.get:()Ljava/lang/Object;
       7: checkcast     #36                 // class org/springframework/data/repository/Repository
      10: areturn

  public java.lang.Class<? extends T> getObjectType();
    Code:
       0: aload_0
       1: getfield      #11                 // Field repositoryInterface:Ljava/lang/Class;
       4: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #37                 // Method createRepositoryFactory:()Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
       5: putfield      #19                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
       8: aload_0
       9: getfield      #19                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      12: aload_0
      13: getfield      #13                 // Field queryLookupStrategyKey:Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;
      16: invokevirtual #38                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.setQueryLookupStrategyKey:(Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;)V
      19: aload_0
      20: getfield      #19                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      23: aload_0
      24: getfield      #14                 // Field namedQueries:Lorg/springframework/data/repository/core/NamedQueries;
      27: invokevirtual #39                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.setNamedQueries:(Lorg/springframework/data/repository/core/NamedQueries;)V
      30: aload_0
      31: getfield      #19                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      34: aload_0
      35: getfield      #8                  // Field evaluationContextProvider:Lorg/springframework/data/repository/query/EvaluationContextProvider;
      38: invokevirtual #40                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.setEvaluationContextProvider:(Lorg/springframework/data/repository/query/EvaluationContextProvider;)V
      41: aload_0
      42: getfield      #19                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      45: aload_0
      46: getfield      #16                 // Field classLoader:Ljava/lang/ClassLoader;
      49: invokevirtual #41                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.setBeanClassLoader:(Ljava/lang/ClassLoader;)V
      52: aload_0
      53: getfield      #19                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      56: aload_0
      57: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      60: invokevirtual #42                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.setBeanFactory:(Lorg/springframework/beans/factory/BeanFactory;)V
      63: aload_0
      64: getfield      #18                 // Field publisher:Lorg/springframework/context/ApplicationEventPublisher;
      67: ifnull        88
      70: aload_0
      71: getfield      #19                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      74: new           #43                 // class org/springframework/data/repository/core/support/EventPublishingRepositoryProxyPostProcessor
      77: dup
      78: aload_0
      79: getfield      #18                 // Field publisher:Lorg/springframework/context/ApplicationEventPublisher;
      82: invokespecial #44                 // Method org/springframework/data/repository/core/support/EventPublishingRepositoryProxyPostProcessor."<init>":(Lorg/springframework/context/ApplicationEventPublisher;)V
      85: invokevirtual #45                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.addRepositoryProxyPostProcessor:(Lorg/springframework/data/repository/core/support/RepositoryProxyPostProcessor;)V
      88: aload_0
      89: getfield      #3                  // Field repositoryBaseClass:Ljava/util/Optional;
      92: aload_0
      93: getfield      #19                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      96: dup
      97: invokevirtual #46                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     100: pop
     101: invokedynamic #47,  0             // InvokeDynamic #2:accept:(Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;)Ljava/util/function/Consumer;
     106: invokevirtual #48                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     109: aload_0
     110: getfield      #4                  // Field customImplementation:Ljava/util/Optional;
     113: invokedynamic #49,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
     118: invokevirtual #24                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
     121: invokedynamic #50,  0             // InvokeDynamic #4:get:()Ljava/util/function/Supplier;
     126: invokevirtual #51                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
     129: checkcast     #27                 // class org/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments
     132: astore_1
     133: aload_0
     134: getfield      #5                  // Field repositoryFragments:Ljava/util/Optional;
     137: invokedynamic #50,  0             // InvokeDynamic #4:get:()Ljava/util/function/Supplier;
     142: invokevirtual #51                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
     145: checkcast     #27                 // class org/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments
     148: aload_1
     149: invokevirtual #52                 // Method org/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments.append:(Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;)Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;
     152: astore_2
     153: aload_0
     154: aload_0
     155: getfield      #19                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
     158: aload_0
     159: getfield      #11                 // Field repositoryInterface:Ljava/lang/Class;
     162: invokevirtual #53                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.getRepositoryMetadata:(Ljava/lang/Class;)Lorg/springframework/data/repository/core/RepositoryMetadata;
     165: putfield      #20                 // Field repositoryMetadata:Lorg/springframework/data/repository/core/RepositoryMetadata;
     168: aload_0
     169: aload_0
     170: aload_2
     171: invokedynamic #54,  0             // InvokeDynamic #5:get:(Lorg/springframework/data/repository/core/support/RepositoryFactoryBeanSupport;Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;)Ljava/util/function/Supplier;
     176: invokestatic  #55                 // Method org/springframework/data/util/Lazy.of:(Ljava/util/function/Supplier;)Lorg/springframework/data/util/Lazy;
     179: putfield      #34                 // Field repository:Lorg/springframework/data/util/Lazy;
     182: aload_0
     183: getfield      #6                  // Field lazyInit:Z
     186: ifne          197
     189: aload_0
     190: getfield      #34                 // Field repository:Lorg/springframework/data/util/Lazy;
     193: invokevirtual #35                 // Method org/springframework/data/util/Lazy.get:()Ljava/lang/Object;
     196: pop
     197: return

  protected abstract org.springframework.data.repository.core.support.RepositoryFactorySupport createRepositoryFactory();

  public java.lang.Object getObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method getObject:()Lorg/springframework/data/repository/Repository;
       4: areturn

  private org.springframework.data.repository.Repository lambda$afterPropertiesSet$3(org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments);
    Code:
       0: aload_0
       1: getfield      #19                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
       4: aload_0
       5: getfield      #11                 // Field repositoryInterface:Ljava/lang/Class;
       8: aload_1
       9: invokevirtual #57                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.getRepository:(Ljava/lang/Class;Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;)Ljava/lang/Object;
      12: checkcast     #36                 // class org/springframework/data/repository/Repository
      15: areturn

  private static org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments lambda$afterPropertiesSet$2(java.lang.Object);
    Code:
       0: iconst_1
       1: anewarray     #58                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: aastore
       8: invokestatic  #59                 // Method org/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments.just:([Ljava/lang/Object;)Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;
      11: areturn

  private static java.lang.IllegalStateException lambda$getPersistentEntity$1();
    Code:
       0: new           #60                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #61                 // String No MappingContext available!
       6: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: areturn

  private static org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments lambda$getRepositoryInformation$0(java.lang.Object);
    Code:
       0: iconst_1
       1: anewarray     #58                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: aastore
       8: invokestatic  #59                 // Method org/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments.just:([Ljava/lang/Object;)Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;
      11: areturn
}
