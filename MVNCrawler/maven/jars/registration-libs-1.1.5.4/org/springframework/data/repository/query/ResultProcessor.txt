Compiled from "ResultProcessor.java"
public class org.springframework.data.repository.query.ResultProcessor {
  private final org.springframework.data.repository.query.QueryMethod method;

  private final org.springframework.data.repository.query.ResultProcessor$ProjectingConverter converter;

  private final org.springframework.data.projection.ProjectionFactory factory;

  private final org.springframework.data.repository.query.ReturnedType type;

  org.springframework.data.repository.query.ResultProcessor(org.springframework.data.repository.query.QueryMethod, org.springframework.data.projection.ProjectionFactory);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_1
       4: invokevirtual #1                  // Method org/springframework/data/repository/query/QueryMethod.getReturnedObjectType:()Ljava/lang/Class;
       7: invokespecial #2                  // Method "<init>":(Lorg/springframework/data/repository/query/QueryMethod;Lorg/springframework/data/projection/ProjectionFactory;Ljava/lang/Class;)V
      10: return

  private org.springframework.data.repository.query.ResultProcessor(org.springframework.data.repository.query.QueryMethod, org.springframework.data.projection.ProjectionFactory, java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #4                  // String QueryMethod must not be null!
       7: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #6                  // String ProjectionFactory must not be null!
      13: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_3
      17: ldc           #7                  // String Type must not be null!
      19: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_0
      23: aload_1
      24: putfield      #8                  // Field method:Lorg/springframework/data/repository/query/QueryMethod;
      27: aload_0
      28: aload_3
      29: aload_1
      30: invokevirtual #9                  // Method org/springframework/data/repository/query/QueryMethod.getDomainClass:()Ljava/lang/Class;
      33: aload_2
      34: invokestatic  #10                 // Method org/springframework/data/repository/query/ReturnedType.of:(Ljava/lang/Class;Ljava/lang/Class;Lorg/springframework/data/projection/ProjectionFactory;)Lorg/springframework/data/repository/query/ReturnedType;
      37: putfield      #11                 // Field type:Lorg/springframework/data/repository/query/ReturnedType;
      40: aload_0
      41: new           #12                 // class org/springframework/data/repository/query/ResultProcessor$ProjectingConverter
      44: dup
      45: aload_0
      46: getfield      #11                 // Field type:Lorg/springframework/data/repository/query/ReturnedType;
      49: aload_2
      50: invokespecial #13                 // Method org/springframework/data/repository/query/ResultProcessor$ProjectingConverter."<init>":(Lorg/springframework/data/repository/query/ReturnedType;Lorg/springframework/data/projection/ProjectionFactory;)V
      53: putfield      #14                 // Field converter:Lorg/springframework/data/repository/query/ResultProcessor$ProjectingConverter;
      56: aload_0
      57: aload_2
      58: putfield      #15                 // Field factory:Lorg/springframework/data/projection/ProjectionFactory;
      61: return

  public org.springframework.data.repository.query.ResultProcessor withDynamicProjection(org.springframework.data.repository.query.ParameterAccessor);
    Code:
       0: aload_1
       1: ldc           #16                 // String Parameter accessor must not be null!
       3: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokeinterface #17,  1           // InterfaceMethod org/springframework/data/repository/query/ParameterAccessor.getDynamicProjection:()Ljava/util/Optional;
      12: aload_0
      13: invokedynamic #18,  0             // InvokeDynamic #0:apply:(Lorg/springframework/data/repository/query/ResultProcessor;)Ljava/util/function/Function;
      18: invokevirtual #19                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      21: aload_0
      22: invokevirtual #20                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #21                 // class org/springframework/data/repository/query/ResultProcessor
      28: areturn

  public org.springframework.data.repository.query.ReturnedType getReturnedType();
    Code:
       0: aload_0
       1: getfield      #11                 // Field type:Lorg/springframework/data/repository/query/ReturnedType;
       4: areturn

  public <T> T processResult(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #22                 // Field org/springframework/data/repository/query/ResultProcessor$NoOpConverter.INSTANCE:Lorg/springframework/data/repository/query/ResultProcessor$NoOpConverter;
       5: invokevirtual #23                 // Method processResult:(Ljava/lang/Object;Lorg/springframework/core/convert/converter/Converter;)Ljava/lang/Object;
       8: areturn

  public <T> T processResult(java.lang.Object, org.springframework.core.convert.converter.Converter<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_1
       1: ifnull        25
       4: aload_0
       5: getfield      #11                 // Field type:Lorg/springframework/data/repository/query/ReturnedType;
       8: aload_1
       9: invokevirtual #24                 // Method org/springframework/data/repository/query/ReturnedType.isInstance:(Ljava/lang/Object;)Z
      12: ifne          25
      15: aload_0
      16: getfield      #11                 // Field type:Lorg/springframework/data/repository/query/ReturnedType;
      19: invokevirtual #25                 // Method org/springframework/data/repository/query/ReturnedType.isProjecting:()Z
      22: ifne          27
      25: aload_1
      26: areturn
      27: aload_2
      28: ldc           #26                 // String Preparing converter must not be null!
      30: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      33: aload_0
      34: getfield      #11                 // Field type:Lorg/springframework/data/repository/query/ReturnedType;
      37: invokevirtual #27                 // Method org/springframework/data/repository/query/ReturnedType.getReturnedType:()Ljava/lang/Class;
      40: aload_2
      41: invokestatic  #28                 // Method org/springframework/data/repository/query/ResultProcessor$ChainingConverter.of:(Ljava/lang/Class;Lorg/springframework/core/convert/converter/Converter;)Lorg/springframework/data/repository/query/ResultProcessor$ChainingConverter;
      44: aload_0
      45: getfield      #14                 // Field converter:Lorg/springframework/data/repository/query/ResultProcessor$ProjectingConverter;
      48: invokevirtual #29                 // Method org/springframework/data/repository/query/ResultProcessor$ChainingConverter.and:(Lorg/springframework/core/convert/converter/Converter;)Lorg/springframework/data/repository/query/ResultProcessor$ChainingConverter;
      51: astore_3
      52: aload_1
      53: instanceof    #30                 // class org/springframework/data/domain/Slice
      56: ifeq          69
      59: aload_0
      60: getfield      #8                  // Field method:Lorg/springframework/data/repository/query/QueryMethod;
      63: invokevirtual #31                 // Method org/springframework/data/repository/query/QueryMethod.isPageQuery:()Z
      66: ifne          79
      69: aload_0
      70: getfield      #8                  // Field method:Lorg/springframework/data/repository/query/QueryMethod;
      73: invokevirtual #32                 // Method org/springframework/data/repository/query/QueryMethod.isSliceQuery:()Z
      76: ifeq          100
      79: aload_1
      80: checkcast     #30                 // class org/springframework/data/domain/Slice
      83: aload_3
      84: dup
      85: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      88: pop
      89: invokedynamic #34,  0             // InvokeDynamic #1:apply:(Lorg/springframework/data/repository/query/ResultProcessor$ChainingConverter;)Ljava/util/function/Function;
      94: invokeinterface #35,  2           // InterfaceMethod org/springframework/data/domain/Slice.map:(Ljava/util/function/Function;)Lorg/springframework/data/domain/Slice;
      99: areturn
     100: aload_1
     101: instanceof    #36                 // class java/util/Collection
     104: ifeq          195
     107: aload_0
     108: getfield      #8                  // Field method:Lorg/springframework/data/repository/query/QueryMethod;
     111: invokevirtual #37                 // Method org/springframework/data/repository/query/QueryMethod.isCollectionQuery:()Z
     114: ifeq          195
     117: aload_1
     118: checkcast     #36                 // class java/util/Collection
     121: astore        4
     123: aload         4
     125: invokestatic  #38                 // Method createCollectionFor:(Ljava/util/Collection;)Ljava/util/Collection;
     128: astore        5
     130: aload         4
     132: invokeinterface #39,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     137: astore        6
     139: aload         6
     141: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     146: ifeq          192
     149: aload         6
     151: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     156: astore        7
     158: aload         5
     160: aload_0
     161: getfield      #11                 // Field type:Lorg/springframework/data/repository/query/ReturnedType;
     164: aload         7
     166: invokevirtual #24                 // Method org/springframework/data/repository/query/ReturnedType.isInstance:(Ljava/lang/Object;)Z
     169: ifeq          177
     172: aload         7
     174: goto          183
     177: aload_3
     178: aload         7
     180: invokevirtual #42                 // Method org/springframework/data/repository/query/ResultProcessor$ChainingConverter.convert:(Ljava/lang/Object;)Ljava/lang/Object;
     183: invokeinterface #43,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     188: pop
     189: goto          139
     192: aload         5
     194: areturn
     195: aload_1
     196: instanceof    #44                 // class java/util/stream/Stream
     199: ifeq          229
     202: aload_0
     203: getfield      #8                  // Field method:Lorg/springframework/data/repository/query/QueryMethod;
     206: invokevirtual #45                 // Method org/springframework/data/repository/query/QueryMethod.isStreamQuery:()Z
     209: ifeq          229
     212: aload_1
     213: checkcast     #44                 // class java/util/stream/Stream
     216: aload_0
     217: aload_3
     218: invokedynamic #46,  0             // InvokeDynamic #2:apply:(Lorg/springframework/data/repository/query/ResultProcessor;Lorg/springframework/data/repository/query/ResultProcessor$ChainingConverter;)Ljava/util/function/Function;
     223: invokeinterface #47,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     228: areturn
     229: aload_1
     230: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     233: invokestatic  #48                 // Method org/springframework/data/repository/util/ReactiveWrapperConverters.supports:(Ljava/lang/Class;)Z
     236: ifeq          255
     239: aload_1
     240: aload_3
     241: dup
     242: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     245: pop
     246: invokedynamic #34,  0             // InvokeDynamic #1:apply:(Lorg/springframework/data/repository/query/ResultProcessor$ChainingConverter;)Ljava/util/function/Function;
     251: invokestatic  #49                 // Method org/springframework/data/repository/util/ReactiveWrapperConverters.map:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
     254: areturn
     255: aload_3
     256: aload_1
     257: invokevirtual #42                 // Method org/springframework/data/repository/query/ResultProcessor$ChainingConverter.convert:(Ljava/lang/Object;)Ljava/lang/Object;
     260: areturn

  private org.springframework.data.repository.query.ResultProcessor withType(java.lang.Class<?>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field method:Lorg/springframework/data/repository/query/QueryMethod;
       5: invokevirtual #9                  // Method org/springframework/data/repository/query/QueryMethod.getDomainClass:()Ljava/lang/Class;
       8: aload_0
       9: getfield      #15                 // Field factory:Lorg/springframework/data/projection/ProjectionFactory;
      12: invokestatic  #10                 // Method org/springframework/data/repository/query/ReturnedType.of:(Ljava/lang/Class;Ljava/lang/Class;Lorg/springframework/data/projection/ProjectionFactory;)Lorg/springframework/data/repository/query/ReturnedType;
      15: astore_2
      16: new           #21                 // class org/springframework/data/repository/query/ResultProcessor
      19: dup
      20: aload_0
      21: getfield      #8                  // Field method:Lorg/springframework/data/repository/query/QueryMethod;
      24: aload_0
      25: getfield      #14                 // Field converter:Lorg/springframework/data/repository/query/ResultProcessor$ProjectingConverter;
      28: aload_2
      29: invokevirtual #50                 // Method org/springframework/data/repository/query/ResultProcessor$ProjectingConverter.withType:(Lorg/springframework/data/repository/query/ReturnedType;)Lorg/springframework/data/repository/query/ResultProcessor$ProjectingConverter;
      32: aload_0
      33: getfield      #15                 // Field factory:Lorg/springframework/data/projection/ProjectionFactory;
      36: aload_2
      37: invokespecial #51                 // Method "<init>":(Lorg/springframework/data/repository/query/QueryMethod;Lorg/springframework/data/repository/query/ResultProcessor$ProjectingConverter;Lorg/springframework/data/projection/ProjectionFactory;Lorg/springframework/data/repository/query/ReturnedType;)V
      40: areturn

  private static java.util.Collection<java.lang.Object> createCollectionFor(java.util.Collection<?>);
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: aload_0
       5: invokeinterface #52,  1           // InterfaceMethod java/util/Collection.size:()I
      10: invokestatic  #53                 // Method org/springframework/core/CollectionFactory.createCollection:(Ljava/lang/Class;I)Ljava/util/Collection;
      13: areturn
      14: astore_1
      15: aload_0
      16: aload_0
      17: invokeinterface #52,  1           // InterfaceMethod java/util/Collection.size:()I
      22: invokestatic  #55                 // Method org/springframework/core/CollectionFactory.createApproximateCollection:(Ljava/lang/Object;I)Ljava/util/Collection;
      25: areturn
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/RuntimeException

  private org.springframework.data.repository.query.ResultProcessor(org.springframework.data.repository.query.QueryMethod, org.springframework.data.repository.query.ResultProcessor$ProjectingConverter, org.springframework.data.projection.ProjectionFactory, org.springframework.data.repository.query.ReturnedType);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #8                  // Field method:Lorg/springframework/data/repository/query/QueryMethod;
       9: aload_0
      10: aload_2
      11: putfield      #14                 // Field converter:Lorg/springframework/data/repository/query/ResultProcessor$ProjectingConverter;
      14: aload_0
      15: aload_3
      16: putfield      #15                 // Field factory:Lorg/springframework/data/projection/ProjectionFactory;
      19: aload_0
      20: aload         4
      22: putfield      #11                 // Field type:Lorg/springframework/data/repository/query/ReturnedType;
      25: return

  private java.lang.Object lambda$processResult$0(org.springframework.data.repository.query.ResultProcessor$ChainingConverter, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #11                 // Field type:Lorg/springframework/data/repository/query/ReturnedType;
       4: aload_2
       5: invokevirtual #24                 // Method org/springframework/data/repository/query/ReturnedType.isInstance:(Ljava/lang/Object;)Z
       8: ifeq          15
      11: aload_2
      12: goto          20
      15: aload_1
      16: aload_2
      17: invokevirtual #42                 // Method org/springframework/data/repository/query/ResultProcessor$ChainingConverter.convert:(Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn
}
