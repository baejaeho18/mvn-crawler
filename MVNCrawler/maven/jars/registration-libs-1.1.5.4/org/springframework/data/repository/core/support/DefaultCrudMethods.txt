Compiled from "DefaultCrudMethods.java"
public class org.springframework.data.repository.core.support.DefaultCrudMethods implements org.springframework.data.repository.core.CrudMethods {
  private static final java.lang.String FIND_ONE;

  private static final java.lang.String SAVE;

  private static final java.lang.String FIND_ALL;

  private static final java.lang.String DELETE;

  private static final java.lang.String DELETE_BY_ID;

  private final java.util.Optional<java.lang.reflect.Method> findAllMethod;

  private final java.util.Optional<java.lang.reflect.Method> findOneMethod;

  private final java.util.Optional<java.lang.reflect.Method> saveMethod;

  private final java.util.Optional<java.lang.reflect.Method> deleteMethod;

  public org.springframework.data.repository.core.support.DefaultCrudMethods(org.springframework.data.repository.core.RepositoryMetadata);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String RepositoryInformation must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: invokestatic  #4                  // Method selectMostSuitableFindOneMethod:(Lorg/springframework/data/repository/core/RepositoryMetadata;)Ljava/util/Optional;
      15: putfield      #5                  // Field findOneMethod:Ljava/util/Optional;
      18: aload_0
      19: aload_1
      20: invokestatic  #6                  // Method selectMostSuitableFindAllMethod:(Lorg/springframework/data/repository/core/RepositoryMetadata;)Ljava/util/Optional;
      23: putfield      #7                  // Field findAllMethod:Ljava/util/Optional;
      26: aload_0
      27: aload_1
      28: invokestatic  #8                  // Method selectMostSuitableDeleteMethod:(Lorg/springframework/data/repository/core/RepositoryMetadata;)Ljava/util/Optional;
      31: putfield      #9                  // Field deleteMethod:Ljava/util/Optional;
      34: aload_0
      35: aload_1
      36: invokestatic  #10                 // Method selectMostSuitableSaveMethod:(Lorg/springframework/data/repository/core/RepositoryMetadata;)Ljava/util/Optional;
      39: putfield      #11                 // Field saveMethod:Ljava/util/Optional;
      42: return

  private static java.util.Optional<java.lang.reflect.Method> selectMostSuitableSaveMethod(org.springframework.data.repository.core.RepositoryMetadata);
    Code:
       0: iconst_2
       1: anewarray     #12                 // class java/lang/Class
       4: dup
       5: iconst_0
       6: aload_0
       7: invokeinterface #13,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.getDomainType:()Ljava/lang/Class;
      12: aastore
      13: dup
      14: iconst_1
      15: ldc           #14                 // class java/lang/Object
      17: aastore
      18: invokestatic  #15                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      21: invokeinterface #16,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      26: aload_0
      27: invokedynamic #17,  0             // InvokeDynamic #0:apply:(Lorg/springframework/data/repository/core/RepositoryMetadata;)Ljava/util/function/Function;
      32: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      37: aload_0
      38: invokedynamic #19,  0             // InvokeDynamic #1:apply:(Lorg/springframework/data/repository/core/RepositoryMetadata;)Ljava/util/function/Function;
      43: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      48: invokeinterface #20,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      53: areturn

  private static java.util.Optional<java.lang.reflect.Method> selectMostSuitableDeleteMethod(org.springframework.data.repository.core.RepositoryMetadata);
    Code:
       0: iconst_5
       1: anewarray     #21                 // class org/springframework/data/util/Pair
       4: dup
       5: iconst_0
       6: ldc           #23                 // String delete
       8: aload_0
       9: invokeinterface #13,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.getDomainType:()Ljava/lang/Class;
      14: invokestatic  #24                 // Method org/springframework/data/util/Pair.of:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/util/Pair;
      17: aastore
      18: dup
      19: iconst_1
      20: ldc           #25                 // String deleteById
      22: aload_0
      23: invokeinterface #26,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.getIdType:()Ljava/lang/Class;
      28: invokestatic  #24                 // Method org/springframework/data/util/Pair.of:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/util/Pair;
      31: aastore
      32: dup
      33: iconst_2
      34: ldc           #23                 // String delete
      36: ldc           #14                 // class java/lang/Object
      38: invokestatic  #24                 // Method org/springframework/data/util/Pair.of:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/util/Pair;
      41: aastore
      42: dup
      43: iconst_3
      44: ldc           #25                 // String deleteById
      46: ldc           #14                 // class java/lang/Object
      48: invokestatic  #24                 // Method org/springframework/data/util/Pair.of:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/util/Pair;
      51: aastore
      52: dup
      53: iconst_4
      54: ldc           #23                 // String delete
      56: ldc           #27                 // class java/lang/Iterable
      58: invokestatic  #24                 // Method org/springframework/data/util/Pair.of:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/util/Pair;
      61: aastore
      62: invokestatic  #28                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      65: astore_1
      66: aload_0
      67: invokeinterface #29,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.getRepositoryInterface:()Ljava/lang/Class;
      72: astore_2
      73: aload_1
      74: aload_2
      75: invokedynamic #30,  0             // InvokeDynamic #2:apply:(Ljava/lang/Class;)Ljava/util/function/Function;
      80: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      85: aload_2
      86: invokedynamic #31,  0             // InvokeDynamic #3:apply:(Ljava/lang/Class;)Ljava/util/function/Function;
      91: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      96: invokeinterface #20,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
     101: areturn

  private static java.util.Optional<java.lang.reflect.Method> selectMostSuitableFindAllMethod(org.springframework.data.repository.core.RepositoryMetadata);
    Code:
       0: aload_0
       1: invokeinterface #29,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.getRepositoryInterface:()Ljava/lang/Class;
       6: astore_1
       7: aload_1
       8: invokedynamic #32,  0             // InvokeDynamic #4:get:(Ljava/lang/Class;)Ljava/util/function/Supplier;
      13: astore_2
      14: aload_1
      15: invokedynamic #33,  0             // InvokeDynamic #5:get:(Ljava/lang/Class;)Ljava/util/function/Supplier;
      20: astore_3
      21: iconst_2
      22: anewarray     #34                 // class java/util/function/Supplier
      25: dup
      26: iconst_0
      27: aload_2
      28: aastore
      29: dup
      30: iconst_1
      31: aload_3
      32: aastore
      33: invokestatic  #35                 // InterfaceMethod org/springframework/data/util/Optionals.firstNonEmpty:([Ljava/util/function/Supplier;)Ljava/util/Optional;
      36: areturn

  private static java.util.Optional<java.lang.reflect.Method> selectMostSuitableFindOneMethod(org.springframework.data.repository.core.RepositoryMetadata);
    Code:
       0: iconst_2
       1: anewarray     #12                 // class java/lang/Class
       4: dup
       5: iconst_0
       6: aload_0
       7: invokeinterface #26,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.getIdType:()Ljava/lang/Class;
      12: aastore
      13: dup
      14: iconst_1
      15: ldc           #14                 // class java/lang/Object
      17: aastore
      18: invokestatic  #15                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      21: invokeinterface #16,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      26: aload_0
      27: invokedynamic #36,  0             // InvokeDynamic #6:apply:(Lorg/springframework/data/repository/core/RepositoryMetadata;)Ljava/util/function/Function;
      32: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      37: aload_0
      38: invokedynamic #37,  0             // InvokeDynamic #7:apply:(Lorg/springframework/data/repository/core/RepositoryMetadata;)Ljava/util/function/Function;
      43: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      48: invokeinterface #20,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      53: areturn

  private static java.util.Optional<java.lang.reflect.Method> getMostSpecificMethod(java.lang.reflect.Method, java.lang.Class<?>);
    Code:
       0: iconst_1
       1: anewarray     #38                 // class java/util/Optional
       4: dup
       5: iconst_0
       6: aload_0
       7: aload_1
       8: invokestatic  #39                 // Method org/springframework/util/ClassUtils.getMostSpecificMethod:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/reflect/Method;
      11: invokestatic  #40                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      14: aastore
      15: invokestatic  #41                 // InterfaceMethod org/springframework/data/util/Optionals.toStream:([Ljava/util/Optional;)Ljava/util/stream/Stream;
      18: invokedynamic #42,  0             // InvokeDynamic #8:apply:()Ljava/util/function/Function;
      23: invokeinterface #43,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      28: invokedynamic #44,  0             // InvokeDynamic #9:accept:()Ljava/util/function/Consumer;
      33: invokeinterface #45,  2           // InterfaceMethod java/util/stream/Stream.peek:(Ljava/util/function/Consumer;)Ljava/util/stream/Stream;
      38: invokeinterface #20,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      43: areturn

  public java.util.Optional<java.lang.reflect.Method> getSaveMethod();
    Code:
       0: aload_0
       1: getfield      #11                 // Field saveMethod:Ljava/util/Optional;
       4: areturn

  public boolean hasSaveMethod();
    Code:
       0: aload_0
       1: getfield      #11                 // Field saveMethod:Ljava/util/Optional;
       4: invokevirtual #46                 // Method java/util/Optional.isPresent:()Z
       7: ireturn

  public java.util.Optional<java.lang.reflect.Method> getFindAllMethod();
    Code:
       0: aload_0
       1: getfield      #7                  // Field findAllMethod:Ljava/util/Optional;
       4: areturn

  public boolean hasFindAllMethod();
    Code:
       0: aload_0
       1: getfield      #7                  // Field findAllMethod:Ljava/util/Optional;
       4: invokevirtual #46                 // Method java/util/Optional.isPresent:()Z
       7: ireturn

  public java.util.Optional<java.lang.reflect.Method> getFindOneMethod();
    Code:
       0: aload_0
       1: getfield      #5                  // Field findOneMethod:Ljava/util/Optional;
       4: areturn

  public boolean hasFindOneMethod();
    Code:
       0: aload_0
       1: getfield      #5                  // Field findOneMethod:Ljava/util/Optional;
       4: invokevirtual #46                 // Method java/util/Optional.isPresent:()Z
       7: ireturn

  public boolean hasDelete();
    Code:
       0: aload_0
       1: getfield      #9                  // Field deleteMethod:Ljava/util/Optional;
       4: invokevirtual #46                 // Method java/util/Optional.isPresent:()Z
       7: ireturn

  public java.util.Optional<java.lang.reflect.Method> getDeleteMethod();
    Code:
       0: aload_0
       1: getfield      #9                  // Field deleteMethod:Ljava/util/Optional;
       4: areturn

  private static java.util.Optional<java.lang.reflect.Method> findMethod(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #47                 // Method org/springframework/util/ReflectionUtils.findMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
       6: invokestatic  #40                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       9: areturn

  private static void lambda$getMostSpecificMethod$12(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokestatic  #48                 // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Method;)V
       4: return

  private static java.lang.reflect.Method lambda$getMostSpecificMethod$11(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokestatic  #49                 // Method org/springframework/core/BridgeMethodResolver.findBridgedMethod:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
       4: areturn

  private static java.util.stream.Stream lambda$selectMostSuitableFindOneMethod$10(org.springframework.data.repository.core.RepositoryMetadata, java.lang.reflect.Method);
    Code:
       0: iconst_1
       1: anewarray     #38                 // class java/util/Optional
       4: dup
       5: iconst_0
       6: aload_1
       7: aload_0
       8: invokeinterface #29,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.getRepositoryInterface:()Ljava/lang/Class;
      13: invokestatic  #50                 // Method getMostSpecificMethod:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/util/Optional;
      16: aastore
      17: invokestatic  #41                 // InterfaceMethod org/springframework/data/util/Optionals.toStream:([Ljava/util/Optional;)Ljava/util/stream/Stream;
      20: areturn

  private static java.util.stream.Stream lambda$selectMostSuitableFindOneMethod$9(org.springframework.data.repository.core.RepositoryMetadata, java.lang.Class);
    Code:
       0: iconst_1
       1: anewarray     #38                 // class java/util/Optional
       4: dup
       5: iconst_0
       6: aload_0
       7: invokeinterface #29,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.getRepositoryInterface:()Ljava/lang/Class;
      12: ldc           #51                 // String findById
      14: iconst_1
      15: anewarray     #12                 // class java/lang/Class
      18: dup
      19: iconst_0
      20: aload_1
      21: aastore
      22: invokestatic  #52                 // Method findMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/util/Optional;
      25: aastore
      26: invokestatic  #41                 // InterfaceMethod org/springframework/data/util/Optionals.toStream:([Ljava/util/Optional;)Ljava/util/stream/Stream;
      29: areturn

  private static java.util.Optional lambda$selectMostSuitableFindAllMethod$8(java.lang.Class);
    Code:
       0: aload_0
       1: ldc           #53                 // String findAll
       3: iconst_0
       4: anewarray     #12                 // class java/lang/Class
       7: invokestatic  #52                 // Method findMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/util/Optional;
      10: aload_0
      11: invokedynamic #54,  0             // InvokeDynamic #10:apply:(Ljava/lang/Class;)Ljava/util/function/Function;
      16: invokevirtual #55                 // Method java/util/Optional.flatMap:(Ljava/util/function/Function;)Ljava/util/Optional;
      19: areturn

  private static java.util.Optional lambda$null$7(java.lang.Class, java.lang.reflect.Method);
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #50                 // Method getMostSpecificMethod:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/util/Optional;
       5: areturn

  private static java.util.Optional lambda$selectMostSuitableFindAllMethod$6(java.lang.Class);
    Code:
       0: iconst_2
       1: anewarray     #12                 // class java/lang/Class
       4: dup
       5: iconst_0
       6: ldc           #56                 // class org/springframework/data/domain/Pageable
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #57                 // class org/springframework/data/domain/Sort
      13: aastore
      14: invokestatic  #28                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      17: aload_0
      18: invokedynamic #58,  0             // InvokeDynamic #11:apply:(Ljava/lang/Class;)Ljava/util/function/Function;
      23: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      28: aload_0
      29: invokedynamic #59,  0             // InvokeDynamic #12:apply:(Ljava/lang/Class;)Ljava/util/function/Function;
      34: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      39: invokeinterface #20,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      44: areturn

  private static java.util.stream.Stream lambda$null$5(java.lang.Class, java.lang.reflect.Method);
    Code:
       0: iconst_1
       1: anewarray     #38                 // class java/util/Optional
       4: dup
       5: iconst_0
       6: aload_1
       7: aload_0
       8: invokestatic  #50                 // Method getMostSpecificMethod:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/util/Optional;
      11: aastore
      12: invokestatic  #41                 // InterfaceMethod org/springframework/data/util/Optionals.toStream:([Ljava/util/Optional;)Ljava/util/stream/Stream;
      15: areturn

  private static java.util.stream.Stream lambda$null$4(java.lang.Class, java.lang.Class);
    Code:
       0: iconst_1
       1: anewarray     #38                 // class java/util/Optional
       4: dup
       5: iconst_0
       6: aload_0
       7: ldc           #53                 // String findAll
       9: iconst_1
      10: anewarray     #12                 // class java/lang/Class
      13: dup
      14: iconst_0
      15: aload_1
      16: aastore
      17: invokestatic  #52                 // Method findMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/util/Optional;
      20: aastore
      21: invokestatic  #41                 // InterfaceMethod org/springframework/data/util/Optionals.toStream:([Ljava/util/Optional;)Ljava/util/stream/Stream;
      24: areturn

  private static java.util.stream.Stream lambda$selectMostSuitableDeleteMethod$3(java.lang.Class, java.lang.reflect.Method);
    Code:
       0: iconst_1
       1: anewarray     #38                 // class java/util/Optional
       4: dup
       5: iconst_0
       6: aload_1
       7: aload_0
       8: invokestatic  #50                 // Method getMostSpecificMethod:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/util/Optional;
      11: aastore
      12: invokestatic  #41                 // InterfaceMethod org/springframework/data/util/Optionals.toStream:([Ljava/util/Optional;)Ljava/util/stream/Stream;
      15: areturn

  private static java.util.stream.Stream lambda$selectMostSuitableDeleteMethod$2(java.lang.Class, org.springframework.data.util.Pair);
    Code:
       0: iconst_1
       1: anewarray     #38                 // class java/util/Optional
       4: dup
       5: iconst_0
       6: aload_0
       7: aload_1
       8: invokevirtual #60                 // Method org/springframework/data/util/Pair.getFirst:()Ljava/lang/Object;
      11: checkcast     #61                 // class java/lang/String
      14: iconst_1
      15: anewarray     #12                 // class java/lang/Class
      18: dup
      19: iconst_0
      20: aload_1
      21: invokevirtual #62                 // Method org/springframework/data/util/Pair.getSecond:()Ljava/lang/Object;
      24: checkcast     #12                 // class java/lang/Class
      27: aastore
      28: invokestatic  #52                 // Method findMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/util/Optional;
      31: aastore
      32: invokestatic  #41                 // InterfaceMethod org/springframework/data/util/Optionals.toStream:([Ljava/util/Optional;)Ljava/util/stream/Stream;
      35: areturn

  private static java.util.stream.Stream lambda$selectMostSuitableSaveMethod$1(org.springframework.data.repository.core.RepositoryMetadata, java.lang.reflect.Method);
    Code:
       0: iconst_1
       1: anewarray     #38                 // class java/util/Optional
       4: dup
       5: iconst_0
       6: aload_1
       7: aload_0
       8: invokeinterface #29,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.getRepositoryInterface:()Ljava/lang/Class;
      13: invokestatic  #50                 // Method getMostSpecificMethod:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/util/Optional;
      16: aastore
      17: invokestatic  #41                 // InterfaceMethod org/springframework/data/util/Optionals.toStream:([Ljava/util/Optional;)Ljava/util/stream/Stream;
      20: areturn

  private static java.util.stream.Stream lambda$selectMostSuitableSaveMethod$0(org.springframework.data.repository.core.RepositoryMetadata, java.lang.Class);
    Code:
       0: iconst_1
       1: anewarray     #38                 // class java/util/Optional
       4: dup
       5: iconst_0
       6: aload_0
       7: invokeinterface #29,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.getRepositoryInterface:()Ljava/lang/Class;
      12: ldc           #63                 // String save
      14: iconst_1
      15: anewarray     #12                 // class java/lang/Class
      18: dup
      19: iconst_0
      20: aload_1
      21: aastore
      22: invokestatic  #52                 // Method findMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/util/Optional;
      25: aastore
      26: invokestatic  #41                 // InterfaceMethod org/springframework/data/util/Optionals.toStream:([Ljava/util/Optional;)Ljava/util/stream/Stream;
      29: areturn
}
