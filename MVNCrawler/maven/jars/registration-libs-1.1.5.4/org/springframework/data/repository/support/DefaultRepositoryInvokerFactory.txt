Compiled from "DefaultRepositoryInvokerFactory.java"
public class org.springframework.data.repository.support.DefaultRepositoryInvokerFactory implements org.springframework.data.repository.support.RepositoryInvokerFactory {
  private final org.springframework.data.repository.support.Repositories repositories;

  private final org.springframework.core.convert.ConversionService conversionService;

  private final java.util.Map<java.lang.Class<?>, org.springframework.data.repository.support.RepositoryInvoker> invokers;

  public org.springframework.data.repository.support.DefaultRepositoryInvokerFactory(org.springframework.data.repository.support.Repositories);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class org/springframework/format/support/DefaultFormattingConversionService
       5: dup
       6: invokespecial #2                  // Method org/springframework/format/support/DefaultFormattingConversionService."<init>":()V
       9: invokespecial #3                  // Method "<init>":(Lorg/springframework/data/repository/support/Repositories;Lorg/springframework/core/convert/ConversionService;)V
      12: return

  public org.springframework.data.repository.support.DefaultRepositoryInvokerFactory(org.springframework.data.repository.support.Repositories, org.springframework.core.convert.ConversionService);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #5                  // String Repositories must not be null!
       7: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #7                  // String ConversionService must not be null!
      13: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: aload_1
      18: putfield      #8                  // Field repositories:Lorg/springframework/data/repository/support/Repositories;
      21: aload_0
      22: aload_2
      23: putfield      #9                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      26: aload_0
      27: new           #10                 // class java/util/HashMap
      30: dup
      31: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      34: putfield      #12                 // Field invokers:Ljava/util/Map;
      37: return

  public org.springframework.data.repository.support.RepositoryInvoker getInvokerFor(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field invokers:Ljava/util/Map;
       4: aload_1
       5: aload_0
       6: invokedynamic #13,  0             // InvokeDynamic #0:apply:(Lorg/springframework/data/repository/support/DefaultRepositoryInvokerFactory;)Ljava/util/function/Function;
      11: invokeinterface #14,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      16: checkcast     #15                 // class org/springframework/data/repository/support/RepositoryInvoker
      19: areturn

  private org.springframework.data.repository.support.RepositoryInvoker prepareInvokers(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field repositories:Lorg/springframework/data/repository/support/Repositories;
       4: aload_1
       5: invokevirtual #16                 // Method org/springframework/data/repository/support/Repositories.getRepositoryInformationFor:(Ljava/lang/Class;)Ljava/util/Optional;
       8: astore_2
       9: aload_0
      10: getfield      #8                  // Field repositories:Lorg/springframework/data/repository/support/Repositories;
      13: aload_1
      14: invokevirtual #17                 // Method org/springframework/data/repository/support/Repositories.getRepositoryFor:(Ljava/lang/Class;)Ljava/util/Optional;
      17: astore_3
      18: aload_2
      19: aload_3
      20: aload_0
      21: invokedynamic #18,  0             // InvokeDynamic #1:apply:(Lorg/springframework/data/repository/support/DefaultRepositoryInvokerFactory;)Ljava/util/function/BiFunction;
      26: invokestatic  #19                 // InterfaceMethod org/springframework/data/util/Optionals.mapIfAllPresent:(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/function/BiFunction;)Ljava/util/Optional;
      29: aload_1
      30: invokedynamic #20,  0             // InvokeDynamic #2:get:(Ljava/lang/Class;)Ljava/util/function/Supplier;
      35: invokevirtual #21                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      38: checkcast     #15                 // class org/springframework/data/repository/support/RepositoryInvoker
      41: areturn

  protected org.springframework.data.repository.support.RepositoryInvoker createInvoker(org.springframework.data.repository.core.RepositoryInformation, java.lang.Object);
    Code:
       0: aload_2
       1: instanceof    #22                 // class org/springframework/data/repository/PagingAndSortingRepository
       4: ifeq          24
       7: new           #23                 // class org/springframework/data/repository/support/PagingAndSortingRepositoryInvoker
      10: dup
      11: aload_2
      12: checkcast     #22                 // class org/springframework/data/repository/PagingAndSortingRepository
      15: aload_1
      16: aload_0
      17: getfield      #9                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      20: invokespecial #24                 // Method org/springframework/data/repository/support/PagingAndSortingRepositoryInvoker."<init>":(Lorg/springframework/data/repository/PagingAndSortingRepository;Lorg/springframework/data/repository/core/RepositoryMetadata;Lorg/springframework/core/convert/ConversionService;)V
      23: areturn
      24: aload_2
      25: instanceof    #25                 // class org/springframework/data/repository/CrudRepository
      28: ifeq          48
      31: new           #26                 // class org/springframework/data/repository/support/CrudRepositoryInvoker
      34: dup
      35: aload_2
      36: checkcast     #25                 // class org/springframework/data/repository/CrudRepository
      39: aload_1
      40: aload_0
      41: getfield      #9                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      44: invokespecial #27                 // Method org/springframework/data/repository/support/CrudRepositoryInvoker."<init>":(Lorg/springframework/data/repository/CrudRepository;Lorg/springframework/data/repository/core/RepositoryMetadata;Lorg/springframework/core/convert/ConversionService;)V
      47: areturn
      48: new           #28                 // class org/springframework/data/repository/support/ReflectionRepositoryInvoker
      51: dup
      52: aload_2
      53: aload_1
      54: aload_0
      55: getfield      #9                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      58: invokespecial #29                 // Method org/springframework/data/repository/support/ReflectionRepositoryInvoker."<init>":(Ljava/lang/Object;Lorg/springframework/data/repository/core/RepositoryMetadata;Lorg/springframework/core/convert/ConversionService;)V
      61: areturn

  private static java.lang.IllegalArgumentException lambda$prepareInvokers$0(java.lang.Class);
    Code:
       0: new           #30                 // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #31                 // String No repository found for domain type: %s
       6: iconst_1
       7: anewarray     #32                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_0
      13: aastore
      14: invokestatic  #33                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      17: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: areturn
}
