Compiled from "RepositoryFactorySupport.java"
public abstract class org.springframework.data.repository.core.support.RepositoryFactorySupport implements org.springframework.beans.factory.BeanClassLoaderAware,org.springframework.beans.factory.BeanFactoryAware {
  private static final java.util.function.BiFunction<java.lang.reflect.Method, java.lang.Object[], java.lang.Object[]> REACTIVE_ARGS_CONVERTER;

  private final java.util.Map<org.springframework.data.repository.core.support.RepositoryFactorySupport$RepositoryInformationCacheKey, org.springframework.data.repository.core.RepositoryInformation> repositoryInformationCache;

  private final java.util.List<org.springframework.data.repository.core.support.RepositoryProxyPostProcessor> postProcessors;

  private java.util.Optional<java.lang.Class<?>> repositoryBaseClass;

  private org.springframework.data.repository.query.QueryLookupStrategy$Key queryLookupStrategyKey;

  private java.util.List<org.springframework.data.repository.core.support.QueryCreationListener<?>> queryPostProcessors;

  private org.springframework.data.repository.core.NamedQueries namedQueries;

  private java.lang.ClassLoader classLoader;

  private org.springframework.data.repository.query.EvaluationContextProvider evaluationContextProvider;

  private org.springframework.beans.factory.BeanFactory beanFactory;

  private final org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryCollectingQueryCreationListener collectingListener;

  public org.springframework.data.repository.core.support.RepositoryFactorySupport();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class org/springframework/data/repository/core/support/RepositoryFactorySupport$QueryCollectingQueryCreationListener
       8: dup
       9: aconst_null
      10: invokespecial #7                  // Method org/springframework/data/repository/core/support/RepositoryFactorySupport$QueryCollectingQueryCreationListener."<init>":(Lorg/springframework/data/repository/core/support/RepositoryFactorySupport$1;)V
      13: putfield      #8                  // Field collectingListener:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport$QueryCollectingQueryCreationListener;
      16: aload_0
      17: new           #9                  // class org/springframework/util/ConcurrentReferenceHashMap
      20: dup
      21: bipush        16
      23: getstatic     #10                 // Field org/springframework/util/ConcurrentReferenceHashMap$ReferenceType.WEAK:Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceType;
      26: invokespecial #11                 // Method org/springframework/util/ConcurrentReferenceHashMap."<init>":(ILorg/springframework/util/ConcurrentReferenceHashMap$ReferenceType;)V
      29: putfield      #12                 // Field repositoryInformationCache:Ljava/util/Map;
      32: aload_0
      33: new           #13                 // class java/util/ArrayList
      36: dup
      37: invokespecial #14                 // Method java/util/ArrayList."<init>":()V
      40: putfield      #15                 // Field postProcessors:Ljava/util/List;
      43: aload_0
      44: invokestatic  #16                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      47: putfield      #17                 // Field repositoryBaseClass:Ljava/util/Optional;
      50: aload_0
      51: getstatic     #18                 // Field org/springframework/data/repository/core/support/PropertiesBasedNamedQueries.EMPTY:Lorg/springframework/data/repository/core/NamedQueries;
      54: putfield      #2                  // Field namedQueries:Lorg/springframework/data/repository/core/NamedQueries;
      57: aload_0
      58: invokestatic  #19                 // Method org/springframework/util/ClassUtils.getDefaultClassLoader:()Ljava/lang/ClassLoader;
      61: putfield      #20                 // Field classLoader:Ljava/lang/ClassLoader;
      64: aload_0
      65: getstatic     #21                 // Field org/springframework/data/repository/query/DefaultEvaluationContextProvider.INSTANCE:Lorg/springframework/data/repository/query/DefaultEvaluationContextProvider;
      68: putfield      #3                  // Field evaluationContextProvider:Lorg/springframework/data/repository/query/EvaluationContextProvider;
      71: aload_0
      72: new           #13                 // class java/util/ArrayList
      75: dup
      76: invokespecial #14                 // Method java/util/ArrayList."<init>":()V
      79: putfield      #1                  // Field queryPostProcessors:Ljava/util/List;
      82: aload_0
      83: getfield      #1                  // Field queryPostProcessors:Ljava/util/List;
      86: aload_0
      87: getfield      #8                  // Field collectingListener:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport$QueryCollectingQueryCreationListener;
      90: invokeinterface #22,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      95: pop
      96: return

  public void setQueryLookupStrategyKey(org.springframework.data.repository.query.QueryLookupStrategy$Key);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field queryLookupStrategyKey:Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;
       5: return

  public void setNamedQueries(org.springframework.data.repository.core.NamedQueries);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     11
       5: getstatic     #18                 // Field org/springframework/data/repository/core/support/PropertiesBasedNamedQueries.EMPTY:Lorg/springframework/data/repository/core/NamedQueries;
       8: goto          12
      11: aload_1
      12: putfield      #2                  // Field namedQueries:Lorg/springframework/data/repository/core/NamedQueries;
      15: return

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     11
       5: invokestatic  #19                 // Method org/springframework/util/ClassUtils.getDefaultClassLoader:()Ljava/lang/ClassLoader;
       8: goto          12
      11: aload_1
      12: putfield      #20                 // Field classLoader:Ljava/lang/ClassLoader;
      15: return

  public void setBeanFactory(org.springframework.beans.factory.BeanFactory) throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       5: return

  public void setEvaluationContextProvider(org.springframework.data.repository.query.EvaluationContextProvider);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     11
       5: getstatic     #21                 // Field org/springframework/data/repository/query/DefaultEvaluationContextProvider.INSTANCE:Lorg/springframework/data/repository/query/DefaultEvaluationContextProvider;
       8: goto          12
      11: aload_1
      12: putfield      #3                  // Field evaluationContextProvider:Lorg/springframework/data/repository/query/EvaluationContextProvider;
      15: return

  public void setRepositoryBaseClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #24                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       5: putfield      #17                 // Field repositoryBaseClass:Ljava/util/Optional;
       8: return

  public void addQueryCreationListener(org.springframework.data.repository.core.support.QueryCreationListener<?>);
    Code:
       0: aload_1
       1: ldc           #25                 // String Listener must not be null!
       3: invokestatic  #26                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #1                  // Field queryPostProcessors:Ljava/util/List;
      10: aload_1
      11: invokeinterface #22,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: return

  public void addRepositoryProxyPostProcessor(org.springframework.data.repository.core.support.RepositoryProxyPostProcessor);
    Code:
       0: aload_1
       1: ldc           #27                 // String RepositoryProxyPostProcessor must not be null!
       3: invokestatic  #26                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #15                 // Field postProcessors:Ljava/util/List;
      10: aload_1
      11: invokeinterface #22,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: return

  protected org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments getRepositoryFragments(org.springframework.data.repository.core.RepositoryMetadata);
    Code:
       0: invokestatic  #28                 // Method org/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments.empty:()Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;
       3: areturn

  private org.springframework.data.repository.core.support.RepositoryComposition getRepositoryComposition(org.springframework.data.repository.core.RepositoryMetadata);
    Code:
       0: invokestatic  #29                 // Method org/springframework/data/repository/core/support/RepositoryComposition.empty:()Lorg/springframework/data/repository/core/support/RepositoryComposition;
       3: astore_2
       4: aload_1
       5: invokeinterface #30,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.isReactiveRepository:()Z
      10: ifeq          28
      13: aload_2
      14: aload_1
      15: invokestatic  #31                 // InterfaceMethod org/springframework/data/repository/core/support/MethodLookups.forReactiveTypes:(Lorg/springframework/data/repository/core/RepositoryMetadata;)Lorg/springframework/data/repository/core/support/MethodLookup;
      18: invokevirtual #32                 // Method org/springframework/data/repository/core/support/RepositoryComposition.withMethodLookup:(Lorg/springframework/data/repository/core/support/MethodLookup;)Lorg/springframework/data/repository/core/support/RepositoryComposition;
      21: getstatic     #33                 // Field REACTIVE_ARGS_CONVERTER:Ljava/util/function/BiFunction;
      24: invokevirtual #34                 // Method org/springframework/data/repository/core/support/RepositoryComposition.withArgumentConverter:(Ljava/util/function/BiFunction;)Lorg/springframework/data/repository/core/support/RepositoryComposition;
      27: areturn
      28: aload_2
      29: aload_1
      30: invokestatic  #35                 // InterfaceMethod org/springframework/data/repository/core/support/MethodLookups.forRepositoryTypes:(Lorg/springframework/data/repository/core/RepositoryMetadata;)Lorg/springframework/data/repository/core/support/MethodLookup;
      33: invokevirtual #32                 // Method org/springframework/data/repository/core/support/RepositoryComposition.withMethodLookup:(Lorg/springframework/data/repository/core/support/MethodLookup;)Lorg/springframework/data/repository/core/support/RepositoryComposition;
      36: areturn

  public <T> T getRepository(java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #28                 // Method org/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments.empty:()Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;
       5: invokevirtual #36                 // Method getRepository:(Ljava/lang/Class;Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;)Ljava/lang/Object;
       8: areturn

  public <T> T getRepository(java.lang.Class<T>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: anewarray     #37                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_2
       9: aastore
      10: invokestatic  #38                 // Method org/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments.just:([Ljava/lang/Object;)Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;
      13: invokevirtual #36                 // Method getRepository:(Ljava/lang/Class;Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;)Ljava/lang/Object;
      16: areturn

  public <T> T getRepository(java.lang.Class<T>, org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments);
    Code:
       0: aload_1
       1: ldc           #39                 // String Repository interface must not be null!
       3: invokestatic  #26                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #40                 // String RepositoryFragments must not be null!
       9: invokestatic  #26                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_1
      14: invokevirtual #41                 // Method getRepositoryMetadata:(Ljava/lang/Class;)Lorg/springframework/data/repository/core/RepositoryMetadata;
      17: astore_3
      18: aload_0
      19: aload_3
      20: aload_2
      21: invokespecial #42                 // Method getRepositoryComposition:(Lorg/springframework/data/repository/core/RepositoryMetadata;Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;)Lorg/springframework/data/repository/core/support/RepositoryComposition;
      24: astore        4
      26: aload_0
      27: aload_3
      28: aload         4
      30: invokespecial #43                 // Method getRepositoryInformation:(Lorg/springframework/data/repository/core/RepositoryMetadata;Lorg/springframework/data/repository/core/support/RepositoryComposition;)Lorg/springframework/data/repository/core/RepositoryInformation;
      33: astore        5
      35: aload_0
      36: aload         5
      38: aload         4
      40: invokespecial #44                 // Method validate:(Lorg/springframework/data/repository/core/RepositoryInformation;Lorg/springframework/data/repository/core/support/RepositoryComposition;)V
      43: aload_0
      44: aload         5
      46: invokevirtual #45                 // Method getTargetRepository:(Lorg/springframework/data/repository/core/RepositoryInformation;)Ljava/lang/Object;
      49: astore        6
      51: new           #46                 // class org/springframework/aop/framework/ProxyFactory
      54: dup
      55: invokespecial #47                 // Method org/springframework/aop/framework/ProxyFactory."<init>":()V
      58: astore        7
      60: aload         7
      62: aload         6
      64: invokevirtual #48                 // Method org/springframework/aop/framework/ProxyFactory.setTarget:(Ljava/lang/Object;)V
      67: aload         7
      69: iconst_3
      70: anewarray     #49                 // class java/lang/Class
      73: dup
      74: iconst_0
      75: aload_1
      76: aastore
      77: dup
      78: iconst_1
      79: ldc           #50                 // class org/springframework/data/repository/Repository
      81: aastore
      82: dup
      83: iconst_2
      84: ldc           #51                 // class org/springframework/transaction/interceptor/TransactionalProxy
      86: aastore
      87: invokevirtual #52                 // Method org/springframework/aop/framework/ProxyFactory.setInterfaces:([Ljava/lang/Class;)V
      90: aload_1
      91: invokestatic  #53                 // Method org/springframework/data/repository/core/support/MethodInvocationValidator.supports:(Ljava/lang/Class;)Z
      94: ifeq          109
      97: aload         7
      99: new           #54                 // class org/springframework/data/repository/core/support/MethodInvocationValidator
     102: dup
     103: invokespecial #55                 // Method org/springframework/data/repository/core/support/MethodInvocationValidator."<init>":()V
     106: invokevirtual #56                 // Method org/springframework/aop/framework/ProxyFactory.addAdvice:(Lorg/aopalliance/aop/Advice;)V
     109: aload         7
     111: getstatic     #57                 // Field org/springframework/data/repository/core/support/SurroundingTransactionDetectorMethodInterceptor.INSTANCE:Lorg/springframework/data/repository/core/support/SurroundingTransactionDetectorMethodInterceptor;
     114: invokevirtual #56                 // Method org/springframework/aop/framework/ProxyFactory.addAdvice:(Lorg/aopalliance/aop/Advice;)V
     117: aload         7
     119: getstatic     #58                 // Field org/springframework/aop/interceptor/ExposeInvocationInterceptor.ADVISOR:Lorg/springframework/aop/Advisor;
     122: invokevirtual #59                 // Method org/springframework/aop/framework/ProxyFactory.addAdvisor:(Lorg/springframework/aop/Advisor;)V
     125: aload_0
     126: getfield      #15                 // Field postProcessors:Ljava/util/List;
     129: aload         7
     131: aload         5
     133: invokedynamic #60,  0             // InvokeDynamic #0:accept:(Lorg/springframework/aop/framework/ProxyFactory;Lorg/springframework/data/repository/core/RepositoryInformation;)Ljava/util/function/Consumer;
     138: invokeinterface #61,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
     143: aload         7
     145: new           #62                 // class org/springframework/data/projection/DefaultMethodInvokingMethodInterceptor
     148: dup
     149: invokespecial #63                 // Method org/springframework/data/projection/DefaultMethodInvokingMethodInterceptor."<init>":()V
     152: invokevirtual #56                 // Method org/springframework/aop/framework/ProxyFactory.addAdvice:(Lorg/aopalliance/aop/Advice;)V
     155: aload_0
     156: aload_0
     157: getfield      #20                 // Field classLoader:Ljava/lang/ClassLoader;
     160: aload_0
     161: getfield      #23                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
     164: invokevirtual #64                 // Method getProjectionFactory:(Ljava/lang/ClassLoader;Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/data/projection/ProjectionFactory;
     167: astore        8
     169: aload         7
     171: new           #65                 // class org/springframework/data/repository/core/support/RepositoryFactorySupport$QueryExecutorMethodInterceptor
     174: dup
     175: aload_0
     176: aload         5
     178: aload         8
     180: invokespecial #66                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport$QueryExecutorMethodInterceptor."<init>":(Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;Lorg/springframework/data/repository/core/RepositoryInformation;Lorg/springframework/data/projection/ProjectionFactory;)V
     183: invokevirtual #56                 // Method org/springframework/aop/framework/ProxyFactory.addAdvice:(Lorg/aopalliance/aop/Advice;)V
     186: aload         4
     188: aload         6
     190: invokestatic  #67                 // InterfaceMethod org/springframework/data/repository/core/support/RepositoryFragment.implemented:(Ljava/lang/Object;)Lorg/springframework/data/repository/core/support/RepositoryFragment;
     193: invokevirtual #68                 // Method org/springframework/data/repository/core/support/RepositoryComposition.append:(Lorg/springframework/data/repository/core/support/RepositoryFragment;)Lorg/springframework/data/repository/core/support/RepositoryComposition;
     196: astore        4
     198: aload         7
     200: new           #69                 // class org/springframework/data/repository/core/support/RepositoryFactorySupport$ImplementationMethodExecutionInterceptor
     203: dup
     204: aload_0
     205: aload         4
     207: invokespecial #70                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport$ImplementationMethodExecutionInterceptor."<init>":(Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;Lorg/springframework/data/repository/core/support/RepositoryComposition;)V
     210: invokevirtual #56                 // Method org/springframework/aop/framework/ProxyFactory.addAdvice:(Lorg/aopalliance/aop/Advice;)V
     213: aload         7
     215: aload_0
     216: getfield      #20                 // Field classLoader:Ljava/lang/ClassLoader;
     219: invokevirtual #71                 // Method org/springframework/aop/framework/ProxyFactory.getProxy:(Ljava/lang/ClassLoader;)Ljava/lang/Object;
     222: areturn

  protected org.springframework.data.projection.ProjectionFactory getProjectionFactory(java.lang.ClassLoader, org.springframework.beans.factory.BeanFactory);
    Code:
       0: new           #72                 // class org/springframework/data/projection/SpelAwareProxyProjectionFactory
       3: dup
       4: invokespecial #73                 // Method org/springframework/data/projection/SpelAwareProxyProjectionFactory."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_1
      10: invokevirtual #74                 // Method org/springframework/data/projection/SpelAwareProxyProjectionFactory.setBeanClassLoader:(Ljava/lang/ClassLoader;)V
      13: aload_3
      14: aload_2
      15: invokevirtual #75                 // Method org/springframework/data/projection/SpelAwareProxyProjectionFactory.setBeanFactory:(Lorg/springframework/beans/factory/BeanFactory;)V
      18: aload_3
      19: areturn

  protected org.springframework.data.repository.core.RepositoryMetadata getRepositoryMetadata(java.lang.Class<?>);
    Code:
       0: aload_1
       1: invokestatic  #76                 // Method org/springframework/data/repository/core/support/AbstractRepositoryMetadata.getMetadata:(Ljava/lang/Class;)Lorg/springframework/data/repository/core/RepositoryMetadata;
       4: areturn

  protected org.springframework.data.repository.core.RepositoryInformation getRepositoryInformation(org.springframework.data.repository.core.RepositoryMetadata, org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokespecial #42                 // Method getRepositoryComposition:(Lorg/springframework/data/repository/core/RepositoryMetadata;Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;)Lorg/springframework/data/repository/core/support/RepositoryComposition;
       8: invokespecial #43                 // Method getRepositoryInformation:(Lorg/springframework/data/repository/core/RepositoryMetadata;Lorg/springframework/data/repository/core/support/RepositoryComposition;)Lorg/springframework/data/repository/core/RepositoryInformation;
      11: areturn

  private org.springframework.data.repository.core.support.RepositoryComposition getRepositoryComposition(org.springframework.data.repository.core.RepositoryMetadata, org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments);
    Code:
       0: aload_1
       1: ldc           #77                 // String RepositoryMetadata must not be null!
       3: invokestatic  #26                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #40                 // String RepositoryFragments must not be null!
       9: invokestatic  #26                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_1
      14: invokespecial #78                 // Method getRepositoryComposition:(Lorg/springframework/data/repository/core/RepositoryMetadata;)Lorg/springframework/data/repository/core/support/RepositoryComposition;
      17: astore_3
      18: aload_0
      19: aload_1
      20: invokevirtual #79                 // Method getRepositoryFragments:(Lorg/springframework/data/repository/core/RepositoryMetadata;)Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;
      23: astore        4
      25: aload_3
      26: aload_2
      27: invokevirtual #80                 // Method org/springframework/data/repository/core/support/RepositoryComposition.append:(Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;)Lorg/springframework/data/repository/core/support/RepositoryComposition;
      30: aload         4
      32: invokevirtual #80                 // Method org/springframework/data/repository/core/support/RepositoryComposition.append:(Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;)Lorg/springframework/data/repository/core/support/RepositoryComposition;
      35: areturn

  private org.springframework.data.repository.core.RepositoryInformation getRepositoryInformation(org.springframework.data.repository.core.RepositoryMetadata, org.springframework.data.repository.core.support.RepositoryComposition);
    Code:
       0: new           #81                 // class org/springframework/data/repository/core/support/RepositoryFactorySupport$RepositoryInformationCacheKey
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #82                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport$RepositoryInformationCacheKey."<init>":(Lorg/springframework/data/repository/core/RepositoryMetadata;Lorg/springframework/data/repository/core/support/RepositoryComposition;)V
       9: astore_3
      10: aload_0
      11: getfield      #12                 // Field repositoryInformationCache:Ljava/util/Map;
      14: aload_3
      15: aload_0
      16: aload_1
      17: aload_2
      18: invokedynamic #83,  0             // InvokeDynamic #1:apply:(Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;Lorg/springframework/data/repository/core/RepositoryMetadata;Lorg/springframework/data/repository/core/support/RepositoryComposition;)Ljava/util/function/Function;
      23: invokeinterface #84,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      28: checkcast     #85                 // class org/springframework/data/repository/core/RepositoryInformation
      31: areturn

  protected java.util.List<org.springframework.data.repository.query.QueryMethod> getQueryMethods();
    Code:
       0: aload_0
       1: getfield      #8                  // Field collectingListener:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport$QueryCollectingQueryCreationListener;
       4: invokevirtual #86                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport$QueryCollectingQueryCreationListener.getQueryMethods:()Ljava/util/List;
       7: areturn

  public abstract <T, ID> org.springframework.data.repository.core.EntityInformation<T, ID> getEntityInformation(java.lang.Class<T>);

  protected abstract java.lang.Object getTargetRepository(org.springframework.data.repository.core.RepositoryInformation);

  protected abstract java.lang.Class<?> getRepositoryBaseClass(org.springframework.data.repository.core.RepositoryMetadata);

  protected java.util.Optional<org.springframework.data.repository.query.QueryLookupStrategy> getQueryLookupStrategy(org.springframework.data.repository.query.QueryLookupStrategy$Key, org.springframework.data.repository.query.EvaluationContextProvider);
    Code:
       0: invokestatic  #16                 // Method java/util/Optional.empty:()Ljava/util/Optional;
       3: areturn

  private void validate(org.springframework.data.repository.core.RepositoryInformation, org.springframework.data.repository.core.support.RepositoryComposition);
    Code:
       0: aload_1
       1: invokeinterface #87,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryInformation.hasCustomMethod:()Z
       6: ifeq          46
       9: aload_2
      10: invokevirtual #88                 // Method org/springframework/data/repository/core/support/RepositoryComposition.isEmpty:()Z
      13: ifeq          42
      16: new           #89                 // class java/lang/IllegalArgumentException
      19: dup
      20: ldc           #90                 // String You have custom methods in %s but not provided a custom implementation!
      22: iconst_1
      23: anewarray     #37                 // class java/lang/Object
      26: dup
      27: iconst_0
      28: aload_1
      29: invokeinterface #91,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryInformation.getRepositoryInterface:()Ljava/lang/Class;
      34: aastore
      35: invokestatic  #92                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      38: invokespecial #93                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_2
      43: invokevirtual #94                 // Method org/springframework/data/repository/core/support/RepositoryComposition.validateImplementation:()V
      46: aload_0
      47: aload_1
      48: invokevirtual #95                 // Method validate:(Lorg/springframework/data/repository/core/RepositoryMetadata;)V
      51: return

  protected void validate(org.springframework.data.repository.core.RepositoryMetadata);
    Code:
       0: return

  protected final <R> R getTargetRepositoryViaReflection(org.springframework.data.repository.core.RepositoryInformation, java.lang.Object...);
    Code:
       0: aload_1
       1: invokeinterface #96,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryInformation.getRepositoryBaseClass:()Ljava/lang/Class;
       6: astore_3
       7: aload_0
       8: aload_3
       9: aload_2
      10: invokevirtual #97                 // Method getTargetRepositoryViaReflection:(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  protected final <R> R getTargetRepositoryViaReflection(java.lang.Class<?>, java.lang.Object...);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #98                 // Method org/springframework/data/util/ReflectionUtils.findConstructor:(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/util/Optional;
       5: astore_3
       6: aload_3
       7: aload_2
       8: invokedynamic #99,  0             // InvokeDynamic #2:apply:([Ljava/lang/Object;)Ljava/util/function/Function;
      13: invokevirtual #100                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      16: aload_1
      17: aload_2
      18: invokedynamic #101,  0            // InvokeDynamic #3:get:(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/util/function/Supplier;
      23: invokevirtual #102                // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      26: areturn

  private static java.lang.IllegalStateException lambda$getTargetRepositoryViaReflection$4(java.lang.Class, java.lang.Object[]);
    Code:
       0: new           #103                // class java/lang/IllegalStateException
       3: dup
       4: ldc           #104                // String No suitable constructor found on %s to match the given arguments: %s. Make sure you implement a constructor taking these
       6: iconst_2
       7: anewarray     #37                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_0
      13: aastore
      14: dup
      15: iconst_1
      16: aload_1
      17: invokestatic  #105                // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      20: invokedynamic #106,  0            // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      25: invokeinterface #107,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      30: invokestatic  #108                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      33: invokeinterface #109,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      38: aastore
      39: invokestatic  #92                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      42: invokespecial #110                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      45: areturn

  private static java.lang.Object lambda$getTargetRepositoryViaReflection$3(java.lang.Object[], java.lang.reflect.Constructor);
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #111                // Method org/springframework/beans/BeanUtils.instantiateClass:(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  private org.springframework.data.repository.core.RepositoryInformation lambda$getRepositoryInformation$2(org.springframework.data.repository.core.RepositoryMetadata, org.springframework.data.repository.core.support.RepositoryComposition, org.springframework.data.repository.core.support.RepositoryFactorySupport$RepositoryInformationCacheKey);
    Code:
       0: aload_0
       1: getfield      #17                 // Field repositoryBaseClass:Ljava/util/Optional;
       4: aload_0
       5: aload_1
       6: invokevirtual #112                // Method getRepositoryBaseClass:(Lorg/springframework/data/repository/core/RepositoryMetadata;)Ljava/lang/Class;
       9: invokevirtual #113                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #49                 // class java/lang/Class
      15: astore        4
      17: new           #114                // class org/springframework/data/repository/core/support/DefaultRepositoryInformation
      20: dup
      21: aload_1
      22: aload         4
      24: aload_2
      25: invokespecial #115                // Method org/springframework/data/repository/core/support/DefaultRepositoryInformation."<init>":(Lorg/springframework/data/repository/core/RepositoryMetadata;Ljava/lang/Class;Lorg/springframework/data/repository/core/support/RepositoryComposition;)V
      28: areturn

  private static void lambda$getRepository$1(org.springframework.aop.framework.ProxyFactory, org.springframework.data.repository.core.RepositoryInformation, org.springframework.data.repository.core.support.RepositoryProxyPostProcessor);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokeinterface #116,  3          // InterfaceMethod org/springframework/data/repository/core/support/RepositoryProxyPostProcessor.postProcess:(Lorg/springframework/aop/framework/ProxyFactory;Lorg/springframework/data/repository/core/RepositoryInformation;)V
       8: return

  private static java.lang.Object[] lambda$static$0(java.lang.reflect.Method, java.lang.Object[]);
    Code:
       0: invokestatic  #117                // Method org/springframework/data/repository/util/ReactiveWrappers.isAvailable:()Z
       3: ifeq          101
       6: aload_0
       7: invokevirtual #118                // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      10: astore_2
      11: aload_1
      12: arraylength
      13: anewarray     #37                 // class java/lang/Object
      16: astore_3
      17: iconst_0
      18: istore        4
      20: iload         4
      22: aload_2
      23: arraylength
      24: if_icmpge     99
      27: aload_2
      28: iload         4
      30: aaload
      31: astore        5
      33: aload_1
      34: iload         4
      36: aaload
      37: astore        6
      39: aload         6
      41: ifnonnull     47
      44: goto          93
      47: aload         5
      49: aload         6
      51: invokevirtual #119                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      54: invokevirtual #120                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      57: ifne          87
      60: aload         6
      62: invokevirtual #119                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      65: aload         5
      67: invokestatic  #121                // Method org/springframework/data/repository/util/ReactiveWrapperConverters.canConvert:(Ljava/lang/Class;Ljava/lang/Class;)Z
      70: ifeq          87
      73: aload_3
      74: iload         4
      76: aload         6
      78: aload         5
      80: invokestatic  #122                // Method org/springframework/data/repository/util/ReactiveWrapperConverters.toWrapper:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      83: aastore
      84: goto          93
      87: aload_3
      88: iload         4
      90: aload         6
      92: aastore
      93: iinc          4, 1
      96: goto          20
      99: aload_3
     100: areturn
     101: aload_1
     102: areturn

  static org.springframework.data.repository.query.QueryLookupStrategy$Key access$100(org.springframework.data.repository.core.support.RepositoryFactorySupport);
    Code:
       0: aload_0
       1: getfield      #4                  // Field queryLookupStrategyKey:Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;
       4: areturn

  static org.springframework.data.repository.query.EvaluationContextProvider access$200(org.springframework.data.repository.core.support.RepositoryFactorySupport);
    Code:
       0: aload_0
       1: getfield      #3                  // Field evaluationContextProvider:Lorg/springframework/data/repository/query/EvaluationContextProvider;
       4: areturn

  static org.springframework.data.repository.core.NamedQueries access$300(org.springframework.data.repository.core.support.RepositoryFactorySupport);
    Code:
       0: aload_0
       1: getfield      #2                  // Field namedQueries:Lorg/springframework/data/repository/core/NamedQueries;
       4: areturn

  static java.util.List access$400(org.springframework.data.repository.core.support.RepositoryFactorySupport);
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryPostProcessors:Ljava/util/List;
       4: areturn

  static {};
    Code:
       0: invokedynamic #123,  0            // InvokeDynamic #5:apply:()Ljava/util/function/BiFunction;
       5: putstatic     #33                 // Field REACTIVE_ARGS_CONVERTER:Ljava/util/function/BiFunction;
       8: return
}
