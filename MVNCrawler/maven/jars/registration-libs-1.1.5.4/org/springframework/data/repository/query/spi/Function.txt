Compiled from "Function.java"
public class org.springframework.data.repository.query.spi.Function {
  private final java.lang.reflect.Method method;

  private final java.lang.Object target;

  public org.springframework.data.repository.query.spi.Function(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Ljava/lang/reflect/Method;Ljava/lang/Object;)V
       6: aload_1
       7: invokevirtual #2                  // Method java/lang/reflect/Method.getModifiers:()I
      10: invokestatic  #3                  // Method java/lang/reflect/Modifier.isStatic:(I)Z
      13: ldc           #4                  // String Method must be static!
      15: invokestatic  #5                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      18: return

  public org.springframework.data.repository.query.spi.Function(java.lang.reflect.Method, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #7                  // String Method must not be null!
       7: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ifnonnull     24
      14: aload_1
      15: invokevirtual #2                  // Method java/lang/reflect/Method.getModifiers:()I
      18: invokestatic  #3                  // Method java/lang/reflect/Modifier.isStatic:(I)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ldc           #9                  // String Method must either be static or a non-static one with a target object!
      31: invokestatic  #5                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      34: aload_0
      35: aload_1
      36: putfield      #10                 // Field method:Ljava/lang/reflect/Method;
      39: aload_0
      40: aload_2
      41: putfield      #11                 // Field target:Ljava/lang/Object;
      44: return

  public java.lang.Object invoke(java.lang.Object[]) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #10                 // Field method:Ljava/lang/reflect/Method;
       4: aload_0
       5: getfield      #11                 // Field target:Ljava/lang/Object;
       8: aload_1
       9: invokevirtual #12                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #10                 // Field method:Ljava/lang/reflect/Method;
       4: invokevirtual #13                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
       7: areturn

  public java.lang.Class<?> getDeclaringClass();
    Code:
       0: aload_0
       1: getfield      #10                 // Field method:Ljava/lang/reflect/Method;
       4: invokevirtual #14                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
       7: areturn

  public boolean supports(java.util.List<org.springframework.core.convert.TypeDescriptor>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field method:Ljava/lang/reflect/Method;
       4: invokevirtual #15                 // Method java/lang/reflect/Method.getParameterCount:()I
       7: aload_1
       8: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      13: if_icmpeq     18
      16: iconst_0
      17: ireturn
      18: aload_0
      19: getfield      #10                 // Field method:Ljava/lang/reflect/Method;
      22: invokevirtual #17                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      25: astore_2
      26: iconst_0
      27: istore_3
      28: iload_3
      29: aload_2
      30: arraylength
      31: if_icmpge     64
      34: aload_2
      35: iload_3
      36: aaload
      37: aload_1
      38: iload_3
      39: invokeinterface #18,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      44: checkcast     #19                 // class org/springframework/core/convert/TypeDescriptor
      47: invokevirtual #20                 // Method org/springframework/core/convert/TypeDescriptor.getType:()Ljava/lang/Class;
      50: invokestatic  #21                 // Method org/springframework/util/TypeUtils.isAssignable:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z
      53: ifne          58
      56: iconst_0
      57: ireturn
      58: iinc          3, 1
      61: goto          28
      64: iconst_1
      65: ireturn

  public int getParameterCount();
    Code:
       0: aload_0
       1: getfield      #10                 // Field method:Ljava/lang/reflect/Method;
       4: invokevirtual #15                 // Method java/lang/reflect/Method.getParameterCount:()I
       7: ireturn

  public boolean supportsExact(java.util.List<org.springframework.core.convert.TypeDescriptor>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field method:Ljava/lang/reflect/Method;
       4: invokevirtual #15                 // Method java/lang/reflect/Method.getParameterCount:()I
       7: aload_1
       8: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      13: if_icmpeq     18
      16: iconst_0
      17: ireturn
      18: aload_0
      19: getfield      #10                 // Field method:Ljava/lang/reflect/Method;
      22: invokevirtual #17                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      25: astore_2
      26: iconst_0
      27: istore_3
      28: iload_3
      29: aload_2
      30: arraylength
      31: if_icmpge     61
      34: aload_2
      35: iload_3
      36: aaload
      37: aload_1
      38: iload_3
      39: invokeinterface #18,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      44: checkcast     #19                 // class org/springframework/core/convert/TypeDescriptor
      47: invokevirtual #20                 // Method org/springframework/core/convert/TypeDescriptor.getType:()Ljava/lang/Class;
      50: if_acmpeq     55
      53: iconst_0
      54: ireturn
      55: iinc          3, 1
      58: goto          28
      61: iconst_1
      62: ireturn

  public boolean isSignatureEqual(org.springframework.data.repository.query.spi.Function);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method getName:()Ljava/lang/String;
       4: aload_1
       5: invokevirtual #22                 // Method getName:()Ljava/lang/String;
       8: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      11: ifeq          38
      14: aload_0
      15: getfield      #10                 // Field method:Ljava/lang/reflect/Method;
      18: invokevirtual #17                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      21: aload_1
      22: getfield      #10                 // Field method:Ljava/lang/reflect/Method;
      25: invokevirtual #17                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      28: invokestatic  #24                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn
}
