Compiled from "PartTree.java"
class org.springframework.data.repository.query.parser.PartTree$Subject {
  private static final java.lang.String DISTINCT;

  private static final java.util.regex.Pattern COUNT_BY_TEMPLATE;

  private static final java.util.regex.Pattern EXISTS_BY_TEMPLATE;

  private static final java.util.regex.Pattern DELETE_BY_TEMPLATE;

  private static final java.lang.String LIMITING_QUERY_PATTERN;

  private static final java.util.regex.Pattern LIMITED_QUERY_TEMPLATE;

  private final boolean distinct;

  private final boolean count;

  private final boolean exists;

  private final boolean delete;

  private final java.util.Optional<java.lang.Integer> maxResults;

  public org.springframework.data.repository.query.parser.PartTree$Subject(java.util.Optional<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokedynamic #3,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      11: invokevirtual #4                  // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      14: iconst_0
      15: invokestatic  #5                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      18: invokevirtual #6                  // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #7                  // class java/lang/Boolean
      24: invokevirtual #8                  // Method java/lang/Boolean.booleanValue:()Z
      27: putfield      #9                  // Field distinct:Z
      30: aload_0
      31: aload_0
      32: aload_1
      33: getstatic     #10                 // Field COUNT_BY_TEMPLATE:Ljava/util/regex/Pattern;
      36: invokespecial #11                 // Method matches:(Ljava/util/Optional;Ljava/util/regex/Pattern;)Z
      39: putfield      #12                 // Field count:Z
      42: aload_0
      43: aload_0
      44: aload_1
      45: getstatic     #13                 // Field EXISTS_BY_TEMPLATE:Ljava/util/regex/Pattern;
      48: invokespecial #11                 // Method matches:(Ljava/util/Optional;Ljava/util/regex/Pattern;)Z
      51: putfield      #14                 // Field exists:Z
      54: aload_0
      55: aload_0
      56: aload_1
      57: getstatic     #15                 // Field DELETE_BY_TEMPLATE:Ljava/util/regex/Pattern;
      60: invokespecial #11                 // Method matches:(Ljava/util/Optional;Ljava/util/regex/Pattern;)Z
      63: putfield      #16                 // Field delete:Z
      66: aload_0
      67: aload_0
      68: aload_1
      69: invokespecial #17                 // Method returnMaxResultsIfFirstKSubjectOrNull:(Ljava/util/Optional;)Ljava/util/Optional;
      72: putfield      #18                 // Field maxResults:Ljava/util/Optional;
      75: return

  private java.util.Optional<java.lang.Integer> returnMaxResultsIfFirstKSubjectOrNull(java.util.Optional<java.lang.String>);
    Code:
       0: aload_1
       1: invokedynamic #19,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
       6: invokevirtual #4                  // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
       9: areturn

  public boolean isDelete();
    Code:
       0: aload_0
       1: getfield      #16                 // Field delete:Z
       4: ireturn

  public boolean isCountProjection();
    Code:
       0: aload_0
       1: getfield      #12                 // Field count:Z
       4: ireturn

  public boolean isExistsProjection();
    Code:
       0: aload_0
       1: getfield      #14                 // Field exists:Z
       4: ireturn

  public boolean isDistinct();
    Code:
       0: aload_0
       1: getfield      #9                  // Field distinct:Z
       4: ireturn

  public java.util.Optional<java.lang.Integer> getMaxResults();
    Code:
       0: aload_0
       1: getfield      #18                 // Field maxResults:Ljava/util/Optional;
       4: areturn

  private boolean matches(java.util.Optional<java.lang.String>, java.util.regex.Pattern);
    Code:
       0: aload_1
       1: aload_2
       2: invokedynamic #20,  0             // InvokeDynamic #2:apply:(Ljava/util/regex/Pattern;)Ljava/util/function/Function;
       7: invokevirtual #4                  // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      10: iconst_0
      11: invokestatic  #5                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: invokevirtual #6                  // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #7                  // class java/lang/Boolean
      20: invokevirtual #8                  // Method java/lang/Boolean.booleanValue:()Z
      23: ireturn

  private static java.lang.Boolean lambda$matches$2(java.util.regex.Pattern, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       5: invokevirtual #22                 // Method java/util/regex/Matcher.find:()Z
       8: invokestatic  #5                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      11: areturn

  private static java.lang.Integer lambda$returnMaxResultsIfFirstKSubjectOrNull$1(java.lang.String);
    Code:
       0: getstatic     #23                 // Field LIMITED_QUERY_TEMPLATE:Ljava/util/regex/Pattern;
       3: aload_0
       4: invokevirtual #21                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: astore_1
       8: aload_1
       9: invokevirtual #22                 // Method java/util/regex/Matcher.find:()Z
      12: ifne          17
      15: aconst_null
      16: areturn
      17: aload_1
      18: iconst_4
      19: invokevirtual #24                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      22: invokestatic  #25                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      25: ifeq          42
      28: aload_1
      29: iconst_4
      30: invokevirtual #24                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      33: invokestatic  #26                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      36: invokevirtual #27                 // Method java/lang/Integer.intValue:()I
      39: goto          43
      42: iconst_1
      43: invokestatic  #28                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      46: areturn

  private static java.lang.Boolean lambda$new$0(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #30                 // String Distinct
       3: invokevirtual #31                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       6: invokestatic  #5                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       9: areturn

  static {};
    Code:
       0: ldc           #32                 // String ^count(\\p{Lu}.*?)??By
       2: invokestatic  #33                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #10                 // Field COUNT_BY_TEMPLATE:Ljava/util/regex/Pattern;
       8: ldc           #34                 // String ^(exists)(\\p{Lu}.*?)??By
      10: invokestatic  #33                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      13: putstatic     #13                 // Field EXISTS_BY_TEMPLATE:Ljava/util/regex/Pattern;
      16: ldc           #35                 // String ^(delete|remove)(\\p{Lu}.*?)??By
      18: invokestatic  #33                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      21: putstatic     #15                 // Field DELETE_BY_TEMPLATE:Ljava/util/regex/Pattern;
      24: ldc           #36                 // String ^(find|read|get|query|stream)(Distinct)?(First|Top)(\\d*)?(\\p{Lu}.*?)??By
      26: invokestatic  #33                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      29: putstatic     #23                 // Field LIMITED_QUERY_TEMPLATE:Ljava/util/regex/Pattern;
      32: return
}
