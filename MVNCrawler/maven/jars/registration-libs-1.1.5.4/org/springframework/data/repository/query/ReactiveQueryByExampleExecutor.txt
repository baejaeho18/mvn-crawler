Compiled from "ReactiveQueryByExampleExecutor.java"
public interface org.springframework.data.repository.query.ReactiveQueryByExampleExecutor<T> {
  public abstract <S extends T> reactor.core.publisher.Mono<S> findOne(org.springframework.data.domain.Example<S>);

  public abstract <S extends T> reactor.core.publisher.Flux<S> findAll(org.springframework.data.domain.Example<S>);

  public abstract <S extends T> reactor.core.publisher.Flux<S> findAll(org.springframework.data.domain.Example<S>, org.springframework.data.domain.Sort);

  public abstract <S extends T> reactor.core.publisher.Mono<java.lang.Long> count(org.springframework.data.domain.Example<S>);

  public abstract <S extends T> reactor.core.publisher.Mono<java.lang.Boolean> exists(org.springframework.data.domain.Example<S>);
}
