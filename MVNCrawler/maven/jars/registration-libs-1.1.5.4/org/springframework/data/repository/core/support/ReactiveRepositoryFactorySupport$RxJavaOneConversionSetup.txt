Compiled from "ReactiveRepositoryFactorySupport.java"
class org.springframework.data.repository.core.support.ReactiveRepositoryFactorySupport$RxJavaOneConversionSetup {
  private static final boolean REACTIVE_STREAMS_PRESENT;

  private org.springframework.data.repository.core.support.ReactiveRepositoryFactorySupport$RxJavaOneConversionSetup();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  private static void validate(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;
       4: invokestatic  #5                  // Method org/springframework/data/repository/util/ReactiveWrappers.supports:(Ljava/lang/Class;)Z
       7: ifeq          73
      10: ldc           #6                  // class org/reactivestreams/Publisher
      12: aload_0
      13: invokevirtual #4                  // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;
      16: invokestatic  #7                  // Method org/springframework/util/ClassUtils.isAssignable:(Ljava/lang/Class;Ljava/lang/Class;)Z
      19: ifne          73
      22: aload_0
      23: invokevirtual #4                  // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;
      26: invokestatic  #8                  // Method org/springframework/data/repository/util/ReactiveWrapperConverters.supports:(Ljava/lang/Class;)Z
      29: ifne          73
      32: new           #9                  // class org/springframework/dao/InvalidDataAccessApiUsageException
      35: dup
      36: ldc           #10                 // String No reactive type converter found for type %s used in %s, method %s.
      38: iconst_3
      39: anewarray     #11                 // class java/lang/Object
      42: dup
      43: iconst_0
      44: aload_0
      45: invokevirtual #4                  // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;
      48: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
      51: aastore
      52: dup
      53: iconst_1
      54: aload_0
      55: invokevirtual #13                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      58: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
      61: aastore
      62: dup
      63: iconst_2
      64: aload_0
      65: aastore
      66: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      69: invokespecial #15                 // Method org/springframework/dao/InvalidDataAccessApiUsageException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: aload_0
      74: invokevirtual #16                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      77: invokestatic  #17                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      80: invokedynamic #18,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      85: invokeinterface #19,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      90: invokedynamic #20,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      95: invokeinterface #19,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     100: invokedynamic #21,  0             // InvokeDynamic #2:test:()Ljava/util/function/Predicate;
     105: invokeinterface #19,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     110: aload_0
     111: invokedynamic #22,  0             // InvokeDynamic #3:accept:(Ljava/lang/reflect/Method;)Ljava/util/function/Consumer;
     116: invokeinterface #23,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
     121: return

  private static void lambda$validate$2(java.lang.reflect.Method, java.lang.Class);
    Code:
       0: new           #9                  // class org/springframework/dao/InvalidDataAccessApiUsageException
       3: dup
       4: ldc           #10                 // String No reactive type converter found for type %s used in %s, method %s.
       6: iconst_3
       7: anewarray     #11                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_1
      13: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
      16: aastore
      17: dup
      18: iconst_1
      19: aload_0
      20: invokevirtual #13                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      23: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
      26: aastore
      27: dup
      28: iconst_2
      29: aload_0
      30: aastore
      31: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      34: invokespecial #15                 // Method org/springframework/dao/InvalidDataAccessApiUsageException."<init>":(Ljava/lang/String;)V
      37: athrow

  private static boolean lambda$validate$1(java.lang.Class);
    Code:
       0: aload_0
       1: invokestatic  #8                  // Method org/springframework/data/repository/util/ReactiveWrapperConverters.supports:(Ljava/lang/Class;)Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private static boolean lambda$validate$0(java.lang.Class);
    Code:
       0: ldc           #6                  // class org/reactivestreams/Publisher
       2: aload_0
       3: invokestatic  #7                  // Method org/springframework/util/ClassUtils.isAssignable:(Ljava/lang/Class;Ljava/lang/Class;)Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  static boolean access$000();
    Code:
       0: getstatic     #2                  // Field REACTIVE_STREAMS_PRESENT:Z
       3: ireturn

  static void access$100(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method validate:(Ljava/lang/reflect/Method;)V
       4: return

  static {};
    Code:
       0: ldc           #24                 // String org.reactivestreams.Publisher
       2: ldc           #25                 // class org/springframework/data/repository/core/support/ReactiveRepositoryFactorySupport$RxJavaOneConversionSetup
       4: invokevirtual #26                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       7: invokestatic  #27                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      10: putstatic     #2                  // Field REACTIVE_STREAMS_PRESENT:Z
      13: return
}
