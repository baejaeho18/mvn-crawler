Compiled from "RepositoryFactorySupport.java"
public class org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor implements org.aopalliance.intercept.MethodInterceptor {
  private final java.util.Map<java.lang.reflect.Method, org.springframework.data.repository.query.RepositoryQuery> queries;

  private final org.springframework.data.repository.core.support.QueryExecutionResultHandler resultHandler;

  final org.springframework.data.repository.core.support.RepositoryFactorySupport this$0;

  public org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor(org.springframework.data.repository.core.support.RepositoryFactorySupport, org.springframework.data.repository.core.RepositoryInformation, org.springframework.data.projection.ProjectionFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #3                  // class org/springframework/data/repository/core/support/QueryExecutionResultHandler
      13: dup
      14: invokespecial #4                  // Method org/springframework/data/repository/core/support/QueryExecutionResultHandler."<init>":()V
      17: putfield      #5                  // Field resultHandler:Lorg/springframework/data/repository/core/support/QueryExecutionResultHandler;
      20: aload_1
      21: aload_1
      22: invokestatic  #6                  // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.access$100:(Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;)Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;
      25: aload_1
      26: invokestatic  #7                  // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.access$200:(Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;)Lorg/springframework/data/repository/query/EvaluationContextProvider;
      29: invokevirtual #8                  // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.getQueryLookupStrategy:(Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;Lorg/springframework/data/repository/query/EvaluationContextProvider;)Ljava/util/Optional;
      32: astore        4
      34: aload         4
      36: invokevirtual #9                  // Method java/util/Optional.isPresent:()Z
      39: ifne          61
      42: aload_2
      43: invokeinterface #10,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryInformation.hasQueryMethods:()Z
      48: ifeq          61
      51: new           #11                 // class java/lang/IllegalStateException
      54: dup
      55: ldc           #12                 // String You have defined query method in the repository but you don\'t have any query lookup strategy defined. The infrastructure apparently does not support query methods!
      57: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: aload_0
      62: aload         4
      64: aload_0
      65: aload_2
      66: aload_3
      67: invokedynamic #14,  0             // InvokeDynamic #0:apply:(Lorg/springframework/data/repository/core/support/RepositoryFactorySupport$QueryExecutorMethodInterceptor;Lorg/springframework/data/repository/core/RepositoryInformation;Lorg/springframework/data/projection/ProjectionFactory;)Ljava/util/function/Function;
      72: invokevirtual #15                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      75: invokestatic  #16                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      78: invokevirtual #17                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      81: checkcast     #18                 // class java/util/Map
      84: putfield      #19                 // Field queries:Ljava/util/Map;
      87: return

  private java.util.Map<java.lang.reflect.Method, org.springframework.data.repository.query.RepositoryQuery> mapMethodsToQuery(org.springframework.data.repository.core.RepositoryInformation, org.springframework.data.repository.query.QueryLookupStrategy, org.springframework.data.projection.ProjectionFactory);
    Code:
       0: aload_1
       1: invokeinterface #20,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryInformation.getQueryMethods:()Lorg/springframework/data/util/Streamable;
       6: invokeinterface #21,  1           // InterfaceMethod org/springframework/data/util/Streamable.stream:()Ljava/util/stream/Stream;
      11: aload_0
      12: aload_1
      13: aload_2
      14: aload_3
      15: invokedynamic #22,  0             // InvokeDynamic #1:apply:(Lorg/springframework/data/repository/core/support/RepositoryFactorySupport$QueryExecutorMethodInterceptor;Lorg/springframework/data/repository/core/RepositoryInformation;Lorg/springframework/data/repository/query/QueryLookupStrategy;Lorg/springframework/data/projection/ProjectionFactory;)Ljava/util/function/Function;
      20: invokeinterface #23,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      25: aload_0
      26: invokedynamic #24,  0             // InvokeDynamic #2:accept:(Lorg/springframework/data/repository/core/support/RepositoryFactorySupport$QueryExecutorMethodInterceptor;)Ljava/util/function/Consumer;
      31: invokeinterface #25,  2           // InterfaceMethod java/util/stream/Stream.peek:(Ljava/util/function/Consumer;)Ljava/util/stream/Stream;
      36: invokestatic  #26                 // Method org/springframework/data/util/Pair.toMap:()Ljava/util/stream/Collector;
      39: invokeinterface #27,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      44: checkcast     #18                 // class java/util/Map
      47: areturn

  private org.springframework.data.util.Pair<java.lang.reflect.Method, org.springframework.data.repository.query.RepositoryQuery> lookupQuery(java.lang.reflect.Method, org.springframework.data.repository.core.RepositoryInformation, org.springframework.data.repository.query.QueryLookupStrategy, org.springframework.data.projection.ProjectionFactory);
    Code:
       0: aload_1
       1: aload_3
       2: aload_1
       3: aload_2
       4: aload         4
       6: aload_0
       7: getfield      #1                  // Field this$0:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      10: invokestatic  #28                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.access$300:(Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;)Lorg/springframework/data/repository/core/NamedQueries;
      13: invokeinterface #29,  5           // InterfaceMethod org/springframework/data/repository/query/QueryLookupStrategy.resolveQuery:(Ljava/lang/reflect/Method;Lorg/springframework/data/repository/core/RepositoryMetadata;Lorg/springframework/data/projection/ProjectionFactory;Lorg/springframework/data/repository/core/NamedQueries;)Lorg/springframework/data/repository/query/RepositoryQuery;
      18: invokestatic  #30                 // Method org/springframework/data/util/Pair.of:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/util/Pair;
      21: areturn

  private void invokeListeners(org.springframework.data.repository.query.RepositoryQuery);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
       4: invokestatic  #31                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.access$400:(Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;)Ljava/util/List;
       7: invokeinterface #32,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          83
      22: aload_2
      23: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #35                 // class org/springframework/data/repository/core/support/QueryCreationListener
      31: astore_3
      32: ldc           #35                 // class org/springframework/data/repository/core/support/QueryCreationListener
      34: aload_3
      35: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      38: invokestatic  #37                 // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      41: iconst_1
      42: newarray       int
      44: dup
      45: iconst_0
      46: iconst_0
      47: iastore
      48: invokevirtual #38                 // Method org/springframework/core/ResolvableType.getGeneric:([I)Lorg/springframework/core/ResolvableType;
      51: astore        4
      53: aload         4
      55: ifnull        80
      58: aload         4
      60: aload_1
      61: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      64: invokestatic  #39                 // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      67: invokevirtual #40                 // Method org/springframework/core/ResolvableType.isAssignableFrom:(Lorg/springframework/core/ResolvableType;)Z
      70: ifeq          80
      73: aload_3
      74: aload_1
      75: invokeinterface #41,  2           // InterfaceMethod org/springframework/data/repository/core/support/QueryCreationListener.onCreation:(Lorg/springframework/data/repository/query/RepositoryQuery;)V
      80: goto          13
      83: return

  public java.lang.Object invoke(org.aopalliance.intercept.MethodInvocation) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #42                 // Method doInvoke:(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
       5: astore_2
       6: aload_0
       7: getfield      #5                  // Field resultHandler:Lorg/springframework/data/repository/core/support/QueryExecutionResultHandler;
      10: aload_2
      11: aload_1
      12: invokeinterface #43,  1           // InterfaceMethod org/aopalliance/intercept/MethodInvocation.getMethod:()Ljava/lang/reflect/Method;
      17: invokevirtual #44                 // Method org/springframework/data/repository/core/support/QueryExecutionResultHandler.postProcessInvocationResult:(Ljava/lang/Object;Ljava/lang/reflect/Method;)Ljava/lang/Object;
      20: areturn

  private java.lang.Object doInvoke(org.aopalliance.intercept.MethodInvocation) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: invokeinterface #43,  1           // InterfaceMethod org/aopalliance/intercept/MethodInvocation.getMethod:()Ljava/lang/reflect/Method;
       6: astore_2
       7: aload_1
       8: invokeinterface #45,  1           // InterfaceMethod org/aopalliance/intercept/MethodInvocation.getArguments:()[Ljava/lang/Object;
      13: astore_3
      14: aload_0
      15: aload_2
      16: invokespecial #46                 // Method hasQueryFor:(Ljava/lang/reflect/Method;)Z
      19: ifeq          42
      22: aload_0
      23: getfield      #19                 // Field queries:Ljava/util/Map;
      26: aload_2
      27: invokeinterface #47,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #48                 // class org/springframework/data/repository/query/RepositoryQuery
      35: aload_3
      36: invokeinterface #49,  2           // InterfaceMethod org/springframework/data/repository/query/RepositoryQuery.execute:([Ljava/lang/Object;)Ljava/lang/Object;
      41: areturn
      42: aload_1
      43: invokeinterface #50,  1           // InterfaceMethod org/aopalliance/intercept/MethodInvocation.proceed:()Ljava/lang/Object;
      48: areturn

  private boolean hasQueryFor(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: getfield      #19                 // Field queries:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #51,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  private void lambda$mapMethodsToQuery$2(org.springframework.data.util.Pair);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #52                 // Method org/springframework/data/util/Pair.getSecond:()Ljava/lang/Object;
       5: checkcast     #48                 // class org/springframework/data/repository/query/RepositoryQuery
       8: invokespecial #53                 // Method invokeListeners:(Lorg/springframework/data/repository/query/RepositoryQuery;)V
      11: return

  private org.springframework.data.util.Pair lambda$mapMethodsToQuery$1(org.springframework.data.repository.core.RepositoryInformation, org.springframework.data.repository.query.QueryLookupStrategy, org.springframework.data.projection.ProjectionFactory, java.lang.reflect.Method);
    Code:
       0: aload_0
       1: aload         4
       3: aload_1
       4: aload_2
       5: aload_3
       6: invokespecial #54                 // Method lookupQuery:(Ljava/lang/reflect/Method;Lorg/springframework/data/repository/core/RepositoryInformation;Lorg/springframework/data/repository/query/QueryLookupStrategy;Lorg/springframework/data/projection/ProjectionFactory;)Lorg/springframework/data/util/Pair;
       9: areturn

  private java.util.Map lambda$new$0(org.springframework.data.repository.core.RepositoryInformation, org.springframework.data.projection.ProjectionFactory, org.springframework.data.repository.query.QueryLookupStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload_2
       4: invokespecial #55                 // Method mapMethodsToQuery:(Lorg/springframework/data/repository/core/RepositoryInformation;Lorg/springframework/data/repository/query/QueryLookupStrategy;Lorg/springframework/data/projection/ProjectionFactory;)Ljava/util/Map;
       7: areturn
}
