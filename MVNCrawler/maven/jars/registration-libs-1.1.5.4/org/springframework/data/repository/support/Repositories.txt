Compiled from "Repositories.java"
public class org.springframework.data.repository.support.Repositories implements java.lang.Iterable<java.lang.Class<?>> {
  static final org.springframework.data.repository.support.Repositories NONE;

  private static final org.springframework.data.repository.core.support.RepositoryFactoryInformation<java.lang.Object, java.lang.Object> EMPTY_REPOSITORY_FACTORY_INFO;

  private static final java.lang.String DOMAIN_TYPE_MUST_NOT_BE_NULL;

  private final java.util.Optional<org.springframework.beans.factory.BeanFactory> beanFactory;

  private final java.util.Map<java.lang.Class<?>, java.lang.String> repositoryBeanNames;

  private final java.util.Map<java.lang.Class<?>, org.springframework.data.repository.core.support.RepositoryFactoryInformation<java.lang.Object, java.lang.Object>> repositoryFactoryInfos;

  private org.springframework.data.repository.support.Repositories();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
       8: putfield      #3                  // Field beanFactory:Ljava/util/Optional;
      11: aload_0
      12: invokestatic  #4                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      15: putfield      #5                  // Field repositoryBeanNames:Ljava/util/Map;
      18: aload_0
      19: invokestatic  #4                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      22: putfield      #6                  // Field repositoryFactoryInfos:Ljava/util/Map;
      25: return

  public org.springframework.data.repository.support.Repositories(org.springframework.beans.factory.ListableBeanFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #7                  // String ListableBeanFactory must not be null!
       7: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: invokestatic  #9                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      15: putfield      #3                  // Field beanFactory:Ljava/util/Optional;
      18: aload_0
      19: new           #10                 // class java/util/HashMap
      22: dup
      23: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      26: putfield      #6                  // Field repositoryFactoryInfos:Ljava/util/Map;
      29: aload_0
      30: new           #10                 // class java/util/HashMap
      33: dup
      34: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      37: putfield      #5                  // Field repositoryBeanNames:Ljava/util/Map;
      40: aload_0
      41: aload_1
      42: invokespecial #12                 // Method populateRepositoryFactoryInformation:(Lorg/springframework/beans/factory/ListableBeanFactory;)V
      45: return

  private void populateRepositoryFactoryInformation(org.springframework.beans.factory.ListableBeanFactory);
    Code:
       0: aload_1
       1: ldc           #13                 // class org/springframework/data/repository/core/support/RepositoryFactoryInformation
       3: iconst_0
       4: iconst_0
       5: invokestatic  #14                 // Method org/springframework/beans/factory/BeanFactoryUtils.beanNamesForTypeIncludingAncestors:(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Class;ZZ)[Ljava/lang/String;
       8: astore_2
       9: aload_2
      10: arraylength
      11: istore_3
      12: iconst_0
      13: istore        4
      15: iload         4
      17: iload_3
      18: if_icmpge     39
      21: aload_2
      22: iload         4
      24: aaload
      25: astore        5
      27: aload_0
      28: aload         5
      30: invokespecial #15                 // Method cacheRepositoryFactory:(Ljava/lang/String;)V
      33: iinc          4, 1
      36: goto          15
      39: return

  private synchronized void cacheRepositoryFactory(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field beanFactory:Ljava/util/Optional;
       4: invokevirtual #16                 // Method java/util/Optional.get:()Ljava/lang/Object;
       7: checkcast     #17                 // class org/springframework/beans/factory/BeanFactory
      10: aload_1
      11: ldc           #13                 // class org/springframework/data/repository/core/support/RepositoryFactoryInformation
      13: invokeinterface #18,  3           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      18: checkcast     #13                 // class org/springframework/data/repository/core/support/RepositoryFactoryInformation
      21: astore_2
      22: aload_2
      23: invokeinterface #19,  1           // InterfaceMethod org/springframework/data/repository/core/support/RepositoryFactoryInformation.getRepositoryInformation:()Lorg/springframework/data/repository/core/RepositoryInformation;
      28: invokeinterface #20,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryInformation.getDomainType:()Ljava/lang/Class;
      33: invokestatic  #21                 // Method org/springframework/util/ClassUtils.getUserClass:(Ljava/lang/Class;)Ljava/lang/Class;
      36: astore_3
      37: aload_2
      38: invokeinterface #19,  1           // InterfaceMethod org/springframework/data/repository/core/support/RepositoryFactoryInformation.getRepositoryInformation:()Lorg/springframework/data/repository/core/RepositoryInformation;
      43: astore        4
      45: aload         4
      47: invokeinterface #22,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryInformation.getAlternativeDomainTypes:()Ljava/util/Set;
      52: astore        5
      54: aload_1
      55: invokestatic  #23                 // Method org/springframework/beans/factory/BeanFactoryUtils.transformedBeanName:(Ljava/lang/String;)Ljava/lang/String;
      58: astore        6
      60: new           #24                 // class java/util/HashSet
      63: dup
      64: aload         5
      66: invokeinterface #25,  1           // InterfaceMethod java/util/Set.size:()I
      71: iconst_1
      72: iadd
      73: invokespecial #26                 // Method java/util/HashSet."<init>":(I)V
      76: astore        7
      78: aload         7
      80: aload_3
      81: invokeinterface #27,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      86: pop
      87: aload         7
      89: aload         5
      91: invokeinterface #28,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      96: pop
      97: aload         7
      99: invokeinterface #29,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     104: astore        8
     106: aload         8
     108: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     113: ifeq          158
     116: aload         8
     118: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     123: checkcast     #32                 // class java/lang/Class
     126: astore        9
     128: aload_0
     129: getfield      #6                  // Field repositoryFactoryInfos:Ljava/util/Map;
     132: aload         9
     134: aload_2
     135: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     140: pop
     141: aload_0
     142: getfield      #5                  // Field repositoryBeanNames:Ljava/util/Map;
     145: aload         9
     147: aload         6
     149: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     154: pop
     155: goto          106
     158: return

  public boolean hasRepositoryFor(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #35                 // String Domain type must not be null!
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokestatic  #21                 // Method org/springframework/util/ClassUtils.getUserClass:(Ljava/lang/Class;)Ljava/lang/Class;
      10: astore_2
      11: aload_0
      12: getfield      #6                  // Field repositoryFactoryInfos:Ljava/util/Map;
      15: aload_2
      16: invokeinterface #36,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      21: ireturn

  public java.util.Optional<java.lang.Object> getRepositoryFor(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #35                 // String Domain type must not be null!
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokestatic  #21                 // Method org/springframework/util/ClassUtils.getUserClass:(Ljava/lang/Class;)Ljava/lang/Class;
      10: astore_2
      11: aload_0
      12: getfield      #5                  // Field repositoryBeanNames:Ljava/util/Map;
      15: aload_2
      16: invokeinterface #37,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: invokestatic  #38                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      24: astore_3
      25: aload_0
      26: getfield      #3                  // Field beanFactory:Ljava/util/Optional;
      29: aload_3
      30: invokedynamic #39,  0             // InvokeDynamic #0:apply:(Ljava/util/Optional;)Ljava/util/function/Function;
      35: invokevirtual #40                 // Method java/util/Optional.flatMap:(Ljava/util/function/Function;)Ljava/util/Optional;
      38: areturn

  private org.springframework.data.repository.core.support.RepositoryFactoryInformation<java.lang.Object, java.lang.Object> getRepositoryFactoryInfoFor(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #35                 // String Domain type must not be null!
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokestatic  #21                 // Method org/springframework/util/ClassUtils.getUserClass:(Ljava/lang/Class;)Ljava/lang/Class;
      10: astore_2
      11: aload_0
      12: getfield      #6                  // Field repositoryFactoryInfos:Ljava/util/Map;
      15: aload_2
      16: invokeinterface #37,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #13                 // class org/springframework/data/repository/core/support/RepositoryFactoryInformation
      24: astore_3
      25: aload_3
      26: ifnull        31
      29: aload_3
      30: areturn
      31: aload_2
      32: ldc           #41                 // class java/lang/Object
      34: invokevirtual #42                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      37: ifne          49
      40: aload_0
      41: aload_2
      42: invokevirtual #43                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      45: invokespecial #44                 // Method getRepositoryFactoryInfoFor:(Ljava/lang/Class;)Lorg/springframework/data/repository/core/support/RepositoryFactoryInformation;
      48: areturn
      49: getstatic     #45                 // Field EMPTY_REPOSITORY_FACTORY_INFO:Lorg/springframework/data/repository/core/support/RepositoryFactoryInformation;
      52: areturn

  public <T, S> org.springframework.data.repository.core.EntityInformation<T, S> getEntityInformationFor(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #35                 // String Domain type must not be null!
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokespecial #44                 // Method getRepositoryFactoryInfoFor:(Ljava/lang/Class;)Lorg/springframework/data/repository/core/support/RepositoryFactoryInformation;
      11: invokeinterface #46,  1           // InterfaceMethod org/springframework/data/repository/core/support/RepositoryFactoryInformation.getEntityInformation:()Lorg/springframework/data/repository/core/EntityInformation;
      16: areturn

  public java.util.Optional<org.springframework.data.repository.core.RepositoryInformation> getRepositoryInformationFor(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #35                 // String Domain type must not be null!
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokespecial #44                 // Method getRepositoryFactoryInfoFor:(Ljava/lang/Class;)Lorg/springframework/data/repository/core/support/RepositoryFactoryInformation;
      11: astore_2
      12: aload_2
      13: getstatic     #45                 // Field EMPTY_REPOSITORY_FACTORY_INFO:Lorg/springframework/data/repository/core/support/RepositoryFactoryInformation;
      16: if_acmpne     25
      19: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      22: goto          34
      25: aload_2
      26: invokeinterface #19,  1           // InterfaceMethod org/springframework/data/repository/core/support/RepositoryFactoryInformation.getRepositoryInformation:()Lorg/springframework/data/repository/core/RepositoryInformation;
      31: invokestatic  #9                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      34: areturn

  public org.springframework.data.repository.core.RepositoryInformation getRequiredRepositoryInformation(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #47                 // Method getRepositoryInformationFor:(Ljava/lang/Class;)Ljava/util/Optional;
       5: aload_1
       6: invokedynamic #48,  0             // InvokeDynamic #1:get:(Ljava/lang/Class;)Ljava/util/function/Supplier;
      11: invokevirtual #49                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      14: checkcast     #50                 // class org/springframework/data/repository/core/RepositoryInformation
      17: areturn

  public java.util.Optional<org.springframework.data.repository.core.RepositoryInformation> getRepositoryInformation(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field repositoryFactoryInfos:Ljava/util/Map;
       4: invokeinterface #51,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #52,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      14: invokedynamic #53,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      19: invokeinterface #54,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      24: aload_1
      25: invokedynamic #55,  0             // InvokeDynamic #3:test:(Ljava/lang/Class;)Ljava/util/function/Predicate;
      30: invokeinterface #56,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      35: invokeinterface #57,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      40: areturn

  public org.springframework.data.mapping.PersistentEntity<?, ?> getPersistentEntity(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #35                 // String Domain type must not be null!
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokespecial #44                 // Method getRepositoryFactoryInfoFor:(Ljava/lang/Class;)Lorg/springframework/data/repository/core/support/RepositoryFactoryInformation;
      11: invokeinterface #58,  1           // InterfaceMethod org/springframework/data/repository/core/support/RepositoryFactoryInformation.getPersistentEntity:()Lorg/springframework/data/mapping/PersistentEntity;
      16: areturn

  public java.util.List<org.springframework.data.repository.query.QueryMethod> getQueryMethodsFor(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #35                 // String Domain type must not be null!
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokespecial #44                 // Method getRepositoryFactoryInfoFor:(Ljava/lang/Class;)Lorg/springframework/data/repository/core/support/RepositoryFactoryInformation;
      11: invokeinterface #59,  1           // InterfaceMethod org/springframework/data/repository/core/support/RepositoryFactoryInformation.getQueryMethods:()Ljava/util/List;
      16: areturn

  public java.util.Iterator<java.lang.Class<?>> iterator();
    Code:
       0: aload_0
       1: getfield      #6                  // Field repositoryFactoryInfos:Ljava/util/Map;
       4: invokeinterface #60,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokeinterface #29,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: areturn

  private static boolean lambda$getRepositoryInformation$2(java.lang.Class, org.springframework.data.repository.core.RepositoryInformation);
    Code:
       0: aload_1
       1: invokeinterface #61,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryInformation.getRepositoryInterface:()Ljava/lang/Class;
       6: aload_0
       7: invokevirtual #42                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      10: ireturn

  private static java.lang.IllegalArgumentException lambda$getRequiredRepositoryInformation$1(java.lang.Class);
    Code:
       0: new           #62                 // class java/lang/IllegalArgumentException
       3: dup
       4: new           #63                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #65                 // String No required RepositoryInformation found for domain type
      13: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #67                 // Method java/lang/Class.getName:()Ljava/lang/String;
      20: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #68                 // String !
      25: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #70                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: areturn

  private static java.util.Optional lambda$getRepositoryFor$0(java.util.Optional, org.springframework.beans.factory.BeanFactory);
    Code:
       0: aload_0
       1: aload_1
       2: dup
       3: invokevirtual #71                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: pop
       7: invokedynamic #72,  0             // InvokeDynamic #4:apply:(Lorg/springframework/beans/factory/BeanFactory;)Ljava/util/function/Function;
      12: invokevirtual #73                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      15: areturn

  static {};
    Code:
       0: new           #34                 // class org/springframework/data/repository/support/Repositories
       3: dup
       4: invokespecial #74                 // Method "<init>":()V
       7: putstatic     #75                 // Field NONE:Lorg/springframework/data/repository/support/Repositories;
      10: getstatic     #76                 // Field org/springframework/data/repository/support/Repositories$EmptyRepositoryFactoryInformation.INSTANCE:Lorg/springframework/data/repository/support/Repositories$EmptyRepositoryFactoryInformation;
      13: putstatic     #45                 // Field EMPTY_REPOSITORY_FACTORY_INFO:Lorg/springframework/data/repository/core/support/RepositoryFactoryInformation;
      16: return
}
