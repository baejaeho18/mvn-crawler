Compiled from "DefaultMethodInvokingMethodInterceptor.java"
final class org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor$MethodHandleLookup$1 extends org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor$MethodHandleLookup {
  private final java.util.Optional<java.lang.reflect.Constructor<java.lang.invoke.MethodHandles$Lookup>> constructor;

  org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor$MethodHandleLookup$1(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #1                  // Method org/springframework/data/projection/DefaultMethodInvokingMethodInterceptor$MethodHandleLookup."<init>":(Ljava/lang/String;ILorg/springframework/data/projection/DefaultMethodInvokingMethodInterceptor$1;)V
       7: aload_0
       8: invokestatic  #2                  // Method org/springframework/data/projection/DefaultMethodInvokingMethodInterceptor$MethodHandleLookup.access$100:()Ljava/util/Optional;
      11: putfield      #3                  // Field constructor:Ljava/util/Optional;
      14: return

  java.lang.invoke.MethodHandle lookup(java.lang.reflect.Method) throws java.lang.ReflectiveOperationException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field constructor:Ljava/util/Optional;
       4: invokedynamic #4,  0              // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
       9: invokevirtual #5                  // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      12: checkcast     #6                  // class java/lang/reflect/Constructor
      15: astore_2
      16: aload_2
      17: iconst_1
      18: anewarray     #7                  // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: invokevirtual #8                  // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      27: aastore
      28: invokevirtual #9                  // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #10                 // class java/lang/invoke/MethodHandles$Lookup
      34: aload_1
      35: aload_1
      36: invokevirtual #8                  // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      39: invokevirtual #11                 // Method java/lang/invoke/MethodHandles$Lookup.unreflectSpecial:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;
      42: areturn

  boolean isAvailable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field constructor:Ljava/util/Optional;
       4: invokevirtual #12                 // Method java/util/Optional.isPresent:()Z
       7: ireturn

  private static java.lang.IllegalStateException lambda$lookup$0();
    Code:
       0: new           #13                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #14                 // String Could not obtain MethodHandles.lookup constructor
       6: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: areturn
}
