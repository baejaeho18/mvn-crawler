Compiled from "DefaultProjectionInformation.java"
class org.springframework.data.projection.DefaultProjectionInformation implements org.springframework.data.projection.ProjectionInformation {
  private final java.lang.Class<?> projectionType;

  private final java.util.List<java.beans.PropertyDescriptor> properties;

  org.springframework.data.projection.DefaultProjectionInformation(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #3                  // String Projection type must not be null!
       7: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #5                  // Field projectionType:Ljava/lang/Class;
      15: aload_0
      16: new           #6                  // class org/springframework/data/projection/DefaultProjectionInformation$PropertyDescriptorSource
      19: dup
      20: aload_1
      21: invokespecial #7                  // Method org/springframework/data/projection/DefaultProjectionInformation$PropertyDescriptorSource."<init>":(Ljava/lang/Class;)V
      24: invokevirtual #8                  // Method org/springframework/data/projection/DefaultProjectionInformation$PropertyDescriptorSource.getDescriptors:()Ljava/util/List;
      27: putfield      #9                  // Field properties:Ljava/util/List;
      30: return

  public java.lang.Class<?> getType();
    Code:
       0: aload_0
       1: getfield      #5                  // Field projectionType:Ljava/lang/Class;
       4: areturn

  public java.util.List<java.beans.PropertyDescriptor> getInputProperties();
    Code:
       0: aload_0
       1: getfield      #9                  // Field properties:Ljava/util/List;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: aload_0
      10: invokedynamic #11,  0             // InvokeDynamic #0:test:(Lorg/springframework/data/projection/DefaultProjectionInformation;)Ljava/util/function/Predicate;
      15: invokeinterface #12,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      20: invokeinterface #13,  1           // InterfaceMethod java/util/stream/Stream.distinct:()Ljava/util/stream/Stream;
      25: invokestatic  #14                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      28: invokeinterface #15,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      33: checkcast     #16                 // class java/util/List
      36: areturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #9                  // Field properties:Ljava/util/List;
       4: aload_0
       5: invokevirtual #17                 // Method getInputProperties:()Ljava/util/List;
       8: invokeinterface #18,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      13: ireturn

  protected boolean isInputProperty(java.beans.PropertyDescriptor);
    Code:
       0: iconst_1
       1: ireturn

  private static boolean hasDefaultGetter(java.beans.PropertyDescriptor);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method java/beans/PropertyDescriptor.getReadMethod:()Ljava/lang/reflect/Method;
       4: astore_1
       5: aload_1
       6: ifnull        20
       9: aload_1
      10: invokevirtual #20                 // Method java/lang/reflect/Method.isDefault:()Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  static boolean access$000(java.beans.PropertyDescriptor);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method hasDefaultGetter:(Ljava/beans/PropertyDescriptor;)Z
       4: ireturn
}
