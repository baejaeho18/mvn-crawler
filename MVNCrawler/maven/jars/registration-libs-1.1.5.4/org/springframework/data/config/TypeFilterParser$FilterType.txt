Compiled from "TypeFilterParser.java"
abstract class org.springframework.data.config.TypeFilterParser$FilterType extends java.lang.Enum<org.springframework.data.config.TypeFilterParser$FilterType> {
  public static final org.springframework.data.config.TypeFilterParser$FilterType ANNOTATION;

  public static final org.springframework.data.config.TypeFilterParser$FilterType ASSIGNABLE;

  public static final org.springframework.data.config.TypeFilterParser$FilterType ASPECTJ;

  public static final org.springframework.data.config.TypeFilterParser$FilterType REGEX;

  public static final org.springframework.data.config.TypeFilterParser$FilterType CUSTOM;

  private static final org.springframework.data.config.TypeFilterParser$FilterType[] $VALUES;

  public static org.springframework.data.config.TypeFilterParser$FilterType[] values();
    Code:
       0: getstatic     #2                  // Field $VALUES:[Lorg/springframework/data/config/TypeFilterParser$FilterType;
       3: invokevirtual #3                  // Method "[Lorg/springframework/data/config/TypeFilterParser$FilterType;".clone:()Ljava/lang/Object;
       6: checkcast     #4                  // class "[Lorg/springframework/data/config/TypeFilterParser$FilterType;"
       9: areturn

  public static org.springframework.data.config.TypeFilterParser$FilterType valueOf(java.lang.String);
    Code:
       0: ldc           #5                  // class org/springframework/data/config/TypeFilterParser$FilterType
       2: aload_0
       3: invokestatic  #6                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #5                  // class org/springframework/data/config/TypeFilterParser$FilterType
       9: areturn

  private org.springframework.data.config.TypeFilterParser$FilterType();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #7                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  abstract org.springframework.core.type.filter.TypeFilter getFilter(java.lang.String, java.lang.ClassLoader) throws java.lang.ClassNotFoundException;

  static org.springframework.data.config.TypeFilterParser$FilterType fromString(java.lang.String);
    Code:
       0: invokestatic  #8                  // Method values:()[Lorg/springframework/data/config/TypeFilterParser$FilterType;
       3: astore_1
       4: aload_1
       5: arraylength
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_2
      11: if_icmpge     40
      14: aload_1
      15: iload_3
      16: aaload
      17: astore        4
      19: aload         4
      21: invokevirtual #9                  // Method name:()Ljava/lang/String;
      24: aload_0
      25: invokevirtual #10                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      28: ifeq          34
      31: aload         4
      33: areturn
      34: iinc          3, 1
      37: goto          9
      40: new           #11                 // class java/lang/IllegalArgumentException
      43: dup
      44: new           #12                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #14                 // String Unsupported filter type:
      53: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow

  org.springframework.data.config.TypeFilterParser$FilterType(java.lang.String, int, org.springframework.data.config.TypeFilterParser$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method "<init>":(Ljava/lang/String;I)V
       6: return

  static {};
    Code:
       0: new           #18                 // class org/springframework/data/config/TypeFilterParser$FilterType$1
       3: dup
       4: ldc           #19                 // String ANNOTATION
       6: iconst_0
       7: invokespecial #20                 // Method org/springframework/data/config/TypeFilterParser$FilterType$1."<init>":(Ljava/lang/String;I)V
      10: putstatic     #21                 // Field ANNOTATION:Lorg/springframework/data/config/TypeFilterParser$FilterType;
      13: new           #22                 // class org/springframework/data/config/TypeFilterParser$FilterType$2
      16: dup
      17: ldc           #23                 // String ASSIGNABLE
      19: iconst_1
      20: invokespecial #24                 // Method org/springframework/data/config/TypeFilterParser$FilterType$2."<init>":(Ljava/lang/String;I)V
      23: putstatic     #25                 // Field ASSIGNABLE:Lorg/springframework/data/config/TypeFilterParser$FilterType;
      26: new           #26                 // class org/springframework/data/config/TypeFilterParser$FilterType$3
      29: dup
      30: ldc           #27                 // String ASPECTJ
      32: iconst_2
      33: invokespecial #28                 // Method org/springframework/data/config/TypeFilterParser$FilterType$3."<init>":(Ljava/lang/String;I)V
      36: putstatic     #29                 // Field ASPECTJ:Lorg/springframework/data/config/TypeFilterParser$FilterType;
      39: new           #30                 // class org/springframework/data/config/TypeFilterParser$FilterType$4
      42: dup
      43: ldc           #31                 // String REGEX
      45: iconst_3
      46: invokespecial #32                 // Method org/springframework/data/config/TypeFilterParser$FilterType$4."<init>":(Ljava/lang/String;I)V
      49: putstatic     #33                 // Field REGEX:Lorg/springframework/data/config/TypeFilterParser$FilterType;
      52: new           #34                 // class org/springframework/data/config/TypeFilterParser$FilterType$5
      55: dup
      56: ldc           #35                 // String CUSTOM
      58: iconst_4
      59: invokespecial #36                 // Method org/springframework/data/config/TypeFilterParser$FilterType$5."<init>":(Ljava/lang/String;I)V
      62: putstatic     #37                 // Field CUSTOM:Lorg/springframework/data/config/TypeFilterParser$FilterType;
      65: iconst_5
      66: anewarray     #5                  // class org/springframework/data/config/TypeFilterParser$FilterType
      69: dup
      70: iconst_0
      71: getstatic     #21                 // Field ANNOTATION:Lorg/springframework/data/config/TypeFilterParser$FilterType;
      74: aastore
      75: dup
      76: iconst_1
      77: getstatic     #25                 // Field ASSIGNABLE:Lorg/springframework/data/config/TypeFilterParser$FilterType;
      80: aastore
      81: dup
      82: iconst_2
      83: getstatic     #29                 // Field ASPECTJ:Lorg/springframework/data/config/TypeFilterParser$FilterType;
      86: aastore
      87: dup
      88: iconst_3
      89: getstatic     #33                 // Field REGEX:Lorg/springframework/data/config/TypeFilterParser$FilterType;
      92: aastore
      93: dup
      94: iconst_4
      95: getstatic     #37                 // Field CUSTOM:Lorg/springframework/data/config/TypeFilterParser$FilterType;
      98: aastore
      99: putstatic     #2                  // Field $VALUES:[Lorg/springframework/data/config/TypeFilterParser$FilterType;
     102: return
}
