Compiled from "AnnotationRevisionMetadata.java"
public class org.springframework.data.history.AnnotationRevisionMetadata<N extends java.lang.Number & java.lang.Comparable<N>> implements org.springframework.data.history.RevisionMetadata<N> {
  private final java.lang.Object entity;

  private final org.springframework.data.util.Lazy<java.util.Optional<N>> revisionNumber;

  private final org.springframework.data.util.Lazy<java.util.Optional<java.lang.Object>> revisionDate;

  public org.springframework.data.history.AnnotationRevisionMetadata(java.lang.Object, java.lang.Class<? extends java.lang.annotation.Annotation>, java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Entity must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #4                  // String Revision number annotation must not be null!
      13: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_3
      17: ldc           #5                  // String Revision time stamp annotation must not be null!
      19: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_0
      23: aload_1
      24: putfield      #6                  // Field entity:Ljava/lang/Object;
      27: aload_0
      28: aload_1
      29: aload_2
      30: invokestatic  #7                  // Method detectAnnotation:(Ljava/lang/Object;Ljava/lang/Class;)Lorg/springframework/data/util/Lazy;
      33: putfield      #8                  // Field revisionNumber:Lorg/springframework/data/util/Lazy;
      36: aload_0
      37: aload_1
      38: aload_3
      39: invokestatic  #7                  // Method detectAnnotation:(Ljava/lang/Object;Ljava/lang/Class;)Lorg/springframework/data/util/Lazy;
      42: putfield      #9                  // Field revisionDate:Lorg/springframework/data/util/Lazy;
      45: return

  public java.util.Optional<N> getRevisionNumber();
    Code:
       0: aload_0
       1: getfield      #8                  // Field revisionNumber:Lorg/springframework/data/util/Lazy;
       4: invokevirtual #10                 // Method org/springframework/data/util/Lazy.get:()Ljava/lang/Object;
       7: checkcast     #11                 // class java/util/Optional
      10: areturn

  public java.util.Optional<java.time.LocalDateTime> getRevisionDate();
    Code:
       0: aload_0
       1: getfield      #9                  // Field revisionDate:Lorg/springframework/data/util/Lazy;
       4: invokevirtual #10                 // Method org/springframework/data/util/Lazy.get:()Ljava/lang/Object;
       7: checkcast     #11                 // class java/util/Optional
      10: invokedynamic #12,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      15: invokevirtual #13                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      18: areturn

  public <T> T getDelegate();
    Code:
       0: aload_0
       1: getfield      #6                  // Field entity:Ljava/lang/Object;
       4: areturn

  private static <T> org.springframework.data.util.Lazy<java.util.Optional<T>> detectAnnotation(java.lang.Object, java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #14,  0             // InvokeDynamic #1:get:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/util/function/Supplier;
       7: invokestatic  #15                 // Method org/springframework/data/util/Lazy.of:(Ljava/util/function/Supplier;)Lorg/springframework/data/util/Lazy;
      10: areturn

  private static java.time.LocalDateTime convertToLocalDateTime(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #16                 // class java/time/LocalDateTime
       4: ifeq          12
       7: aload_0
       8: checkcast     #16                 // class java/time/LocalDateTime
      11: areturn
      12: aload_0
      13: invokestatic  #17                 // Method convertToInstant:(Ljava/lang/Object;)Ljava/time/Instant;
      16: invokestatic  #18                 // Method java/time/ZoneOffset.systemDefault:()Ljava/time/ZoneId;
      19: invokestatic  #19                 // Method java/time/LocalDateTime.ofInstant:(Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/LocalDateTime;
      22: areturn

  private static java.time.Instant convertToInstant(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #20                 // class java/time/Instant
       4: ifeq          12
       7: aload_0
       8: checkcast     #20                 // class java/time/Instant
      11: areturn
      12: aload_0
      13: instanceof    #16                 // class java/time/LocalDateTime
      16: ifeq          33
      19: aload_0
      20: checkcast     #16                 // class java/time/LocalDateTime
      23: invokestatic  #18                 // Method java/time/ZoneOffset.systemDefault:()Ljava/time/ZoneId;
      26: invokevirtual #21                 // Method java/time/LocalDateTime.atZone:(Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
      29: invokevirtual #22                 // Method java/time/ZonedDateTime.toInstant:()Ljava/time/Instant;
      32: areturn
      33: aload_0
      34: instanceof    #23                 // class java/lang/Long
      37: ifeq          51
      40: aload_0
      41: checkcast     #23                 // class java/lang/Long
      44: invokevirtual #24                 // Method java/lang/Long.longValue:()J
      47: invokestatic  #25                 // Method java/time/Instant.ofEpochMilli:(J)Ljava/time/Instant;
      50: areturn
      51: new           #26                 // class java/lang/IllegalArgumentException
      54: dup
      55: ldc           #27                 // String Can\'t convert %s to Instant!
      57: iconst_1
      58: anewarray     #28                 // class java/lang/Object
      61: dup
      62: iconst_0
      63: aload_0
      64: aastore
      65: invokestatic  #29                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      68: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      71: athrow

  private static java.util.Optional lambda$detectAnnotation$0(java.lang.Class, java.lang.Object);
    Code:
       0: new           #31                 // class org/springframework/data/util/AnnotationDetectionFieldCallback
       3: dup
       4: aload_0
       5: invokespecial #32                 // Method org/springframework/data/util/AnnotationDetectionFieldCallback."<init>":(Ljava/lang/Class;)V
       8: astore_2
       9: aload_1
      10: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: aload_2
      14: invokestatic  #34                 // Method org/springframework/util/ReflectionUtils.doWithFields:(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$FieldCallback;)V
      17: aload_2
      18: aload_1
      19: invokevirtual #35                 // Method org/springframework/data/util/AnnotationDetectionFieldCallback.getValue:(Ljava/lang/Object;)Ljava/lang/Object;
      22: invokestatic  #36                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      25: areturn
}
