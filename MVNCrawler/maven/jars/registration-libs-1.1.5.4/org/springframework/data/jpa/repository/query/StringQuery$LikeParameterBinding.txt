Compiled from "StringQuery.java"
class org.springframework.data.jpa.repository.query.StringQuery$LikeParameterBinding extends org.springframework.data.jpa.repository.query.StringQuery$ParameterBinding {
  private static final java.util.List<org.springframework.data.repository.query.parser.Part$Type> SUPPORTED_TYPES;

  private final org.springframework.data.repository.query.parser.Part$Type type;

  org.springframework.data.jpa.repository.query.StringQuery$LikeParameterBinding(java.lang.String, org.springframework.data.repository.query.parser.Part$Type);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Lorg/springframework/data/repository/query/parser/Part$Type;Ljava/lang/String;)V
       7: return

  org.springframework.data.jpa.repository.query.StringQuery$LikeParameterBinding(java.lang.String, org.springframework.data.repository.query.parser.Part$Type, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_3
       4: invokespecial #3                  // Method org/springframework/data/jpa/repository/query/StringQuery$ParameterBinding."<init>":(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;)V
       7: aload_1
       8: ldc           #4                  // String Name must not be null or empty!
      10: invokestatic  #5                  // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      13: aload_2
      14: ldc           #6                  // String Type must not be null!
      16: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      19: getstatic     #8                  // Field SUPPORTED_TYPES:Ljava/util/List;
      22: aload_2
      23: invokeinterface #9,  2            // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      28: ldc           #10                 // String Type must be one of %s!
      30: iconst_1
      31: anewarray     #11                 // class java/lang/Object
      34: dup
      35: iconst_0
      36: getstatic     #8                  // Field SUPPORTED_TYPES:Ljava/util/List;
      39: invokestatic  #12                 // Method org/springframework/util/StringUtils.collectionToCommaDelimitedString:(Ljava/util/Collection;)Ljava/lang/String;
      42: aastore
      43: invokestatic  #13                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      46: invokestatic  #14                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      49: aload_0
      50: aload_2
      51: putfield      #15                 // Field type:Lorg/springframework/data/repository/query/parser/Part$Type;
      54: return

  org.springframework.data.jpa.repository.query.StringQuery$LikeParameterBinding(int, org.springframework.data.repository.query.parser.Part$Type);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aconst_null
       4: invokespecial #16                 // Method "<init>":(ILorg/springframework/data/repository/query/parser/Part$Type;Ljava/lang/String;)V
       7: return

  org.springframework.data.jpa.repository.query.StringQuery$LikeParameterBinding(int, org.springframework.data.repository.query.parser.Part$Type, java.lang.String);
    Code:
       0: aload_0
       1: aconst_null
       2: iload_1
       3: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       6: aload_3
       7: invokespecial #3                  // Method org/springframework/data/jpa/repository/query/StringQuery$ParameterBinding."<init>":(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;)V
      10: iload_1
      11: ifle          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #18                 // String Position must be greater than zero!
      21: invokestatic  #14                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      24: aload_2
      25: ldc           #6                  // String Type must not be null!
      27: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      30: getstatic     #8                  // Field SUPPORTED_TYPES:Ljava/util/List;
      33: aload_2
      34: invokeinterface #9,  2            // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      39: ldc           #10                 // String Type must be one of %s!
      41: iconst_1
      42: anewarray     #11                 // class java/lang/Object
      45: dup
      46: iconst_0
      47: getstatic     #8                  // Field SUPPORTED_TYPES:Ljava/util/List;
      50: invokestatic  #12                 // Method org/springframework/util/StringUtils.collectionToCommaDelimitedString:(Ljava/util/Collection;)Ljava/lang/String;
      53: aastore
      54: invokestatic  #13                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      57: invokestatic  #14                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      60: aload_0
      61: aload_2
      62: putfield      #15                 // Field type:Lorg/springframework/data/repository/query/parser/Part$Type;
      65: return

  public org.springframework.data.repository.query.parser.Part$Type getType();
    Code:
       0: aload_0
       1: getfield      #15                 // Field type:Lorg/springframework/data/repository/query/parser/Part$Type;
       4: areturn

  public java.lang.Object prepare(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: getstatic     #19                 // Field org/springframework/data/jpa/repository/query/StringQuery$1.$SwitchMap$org$springframework$data$repository$query$parser$Part$Type:[I
       9: aload_0
      10: getfield      #15                 // Field type:Lorg/springframework/data/repository/query/parser/Part$Type;
      13: invokevirtual #20                 // Method org/springframework/data/repository/query/parser/Part$Type.ordinal:()I
      16: iaload
      17: tableswitch   { // 1 to 4
                     1: 48
                     2: 65
                     3: 82
                     4: 99
               default: 99
          }
      48: ldc           #21                 // String %s%%
      50: iconst_1
      51: anewarray     #11                 // class java/lang/Object
      54: dup
      55: iconst_0
      56: aload_1
      57: invokevirtual #22                 // Method java/lang/Object.toString:()Ljava/lang/String;
      60: aastore
      61: invokestatic  #13                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      64: areturn
      65: ldc           #23                 // String %%%s
      67: iconst_1
      68: anewarray     #11                 // class java/lang/Object
      71: dup
      72: iconst_0
      73: aload_1
      74: invokevirtual #22                 // Method java/lang/Object.toString:()Ljava/lang/String;
      77: aastore
      78: invokestatic  #13                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      81: areturn
      82: ldc           #24                 // String %%%s%%
      84: iconst_1
      85: anewarray     #11                 // class java/lang/Object
      88: dup
      89: iconst_0
      90: aload_1
      91: invokevirtual #22                 // Method java/lang/Object.toString:()Ljava/lang/String;
      94: aastore
      95: invokestatic  #13                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      98: areturn
      99: aload_1
     100: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #25                 // class org/springframework/data/jpa/repository/query/StringQuery$LikeParameterBinding
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #25                 // class org/springframework/data/jpa/repository/query/StringQuery$LikeParameterBinding
      13: astore_2
      14: aload_0
      15: aload_1
      16: invokespecial #26                 // Method org/springframework/data/jpa/repository/query/StringQuery$ParameterBinding.equals:(Ljava/lang/Object;)Z
      19: ifeq          40
      22: aload_0
      23: getfield      #15                 // Field type:Lorg/springframework/data/repository/query/parser/Part$Type;
      26: aload_2
      27: getfield      #15                 // Field type:Lorg/springframework/data/repository/query/parser/Part$Type;
      30: invokevirtual #27                 // Method org/springframework/data/repository/query/parser/Part$Type.equals:(Ljava/lang/Object;)Z
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method org/springframework/data/jpa/repository/query/StringQuery$ParameterBinding.hashCode:()I
       4: istore_1
       5: iload_1
       6: aload_0
       7: getfield      #15                 // Field type:Lorg/springframework/data/repository/query/parser/Part$Type;
      10: invokestatic  #29                 // Method org/springframework/util/ObjectUtils.nullSafeHashCode:(Ljava/lang/Object;)I
      13: iadd
      14: istore_1
      15: iload_1
      16: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #30                 // String LikeBinding [name: %s, position: %d, type: %s]
       2: iconst_3
       3: anewarray     #11                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #31                 // Method getName:()Ljava/lang/String;
      12: aastore
      13: dup
      14: iconst_1
      15: aload_0
      16: invokevirtual #32                 // Method getPosition:()Ljava/lang/Integer;
      19: aastore
      20: dup
      21: iconst_2
      22: aload_0
      23: getfield      #15                 // Field type:Lorg/springframework/data/repository/query/parser/Part$Type;
      26: aastore
      27: invokestatic  #13                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      30: areturn

  private static org.springframework.data.repository.query.parser.Part$Type getLikeTypeFrom(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #33                 // String Expression must not be null or empty!
       3: invokestatic  #5                  // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: ldc           #34                 // String %.*%
       9: invokevirtual #35                 // Method java/lang/String.matches:(Ljava/lang/String;)Z
      12: ifeq          19
      15: getstatic     #36                 // Field org/springframework/data/repository/query/parser/Part$Type.CONTAINING:Lorg/springframework/data/repository/query/parser/Part$Type;
      18: areturn
      19: aload_0
      20: ldc           #37                 // String %
      22: invokevirtual #38                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      25: ifeq          32
      28: getstatic     #39                 // Field org/springframework/data/repository/query/parser/Part$Type.ENDING_WITH:Lorg/springframework/data/repository/query/parser/Part$Type;
      31: areturn
      32: aload_0
      33: ldc           #37                 // String %
      35: invokevirtual #40                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      38: ifeq          45
      41: getstatic     #41                 // Field org/springframework/data/repository/query/parser/Part$Type.STARTING_WITH:Lorg/springframework/data/repository/query/parser/Part$Type;
      44: areturn
      45: getstatic     #42                 // Field org/springframework/data/repository/query/parser/Part$Type.LIKE:Lorg/springframework/data/repository/query/parser/Part$Type;
      48: areturn

  static org.springframework.data.repository.query.parser.Part$Type access$100(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method getLikeTypeFrom:(Ljava/lang/String;)Lorg/springframework/data/repository/query/parser/Part$Type;
       4: areturn

  static {};
    Code:
       0: iconst_4
       1: anewarray     #43                 // class org/springframework/data/repository/query/parser/Part$Type
       4: dup
       5: iconst_0
       6: getstatic     #36                 // Field org/springframework/data/repository/query/parser/Part$Type.CONTAINING:Lorg/springframework/data/repository/query/parser/Part$Type;
       9: aastore
      10: dup
      11: iconst_1
      12: getstatic     #41                 // Field org/springframework/data/repository/query/parser/Part$Type.STARTING_WITH:Lorg/springframework/data/repository/query/parser/Part$Type;
      15: aastore
      16: dup
      17: iconst_2
      18: getstatic     #39                 // Field org/springframework/data/repository/query/parser/Part$Type.ENDING_WITH:Lorg/springframework/data/repository/query/parser/Part$Type;
      21: aastore
      22: dup
      23: iconst_3
      24: getstatic     #42                 // Field org/springframework/data/repository/query/parser/Part$Type.LIKE:Lorg/springframework/data/repository/query/parser/Part$Type;
      27: aastore
      28: invokestatic  #44                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      31: putstatic     #8                  // Field SUPPORTED_TYPES:Ljava/util/List;
      34: return
}
