Compiled from "JpaPersistentPropertyImpl.java"
class org.springframework.data.jpa.mapping.JpaPersistentPropertyImpl extends org.springframework.data.mapping.model.AnnotationBasedPersistentProperty<org.springframework.data.jpa.mapping.JpaPersistentProperty> implements org.springframework.data.jpa.mapping.JpaPersistentProperty {
  private static final java.util.Collection<java.lang.Class<? extends java.lang.annotation.Annotation>> ASSOCIATION_ANNOTATIONS;

  private static final java.util.Collection<java.lang.Class<? extends java.lang.annotation.Annotation>> ID_ANNOTATIONS;

  private static final java.util.Collection<java.lang.Class<? extends java.lang.annotation.Annotation>> UPDATEABLE_ANNOTATIONS;

  private final java.lang.Boolean usePropertyAccess;

  private final org.springframework.data.util.TypeInformation<?> associationTargetType;

  private final boolean updateable;

  private final org.springframework.data.jpa.util.JpaMetamodel metamodel;

  private final org.springframework.data.util.Lazy<java.lang.Boolean> isIdProperty;

  public org.springframework.data.jpa.mapping.JpaPersistentPropertyImpl(javax.persistence.metamodel.Metamodel, org.springframework.data.mapping.model.Property, org.springframework.data.mapping.PersistentEntity<?, org.springframework.data.jpa.mapping.JpaPersistentProperty>, org.springframework.data.mapping.model.SimpleTypeHolder);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: aload         4
       5: invokespecial #1                  // Method org/springframework/data/mapping/model/AnnotationBasedPersistentProperty."<init>":(Lorg/springframework/data/mapping/model/Property;Lorg/springframework/data/mapping/PersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;)V
       8: aload_1
       9: ldc           #2                  // String Metamodel must not be null!
      11: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      14: aload_0
      15: aload_0
      16: invokespecial #4                  // Method detectPropertyAccess:()Ljava/lang/Boolean;
      19: putfield      #5                  // Field usePropertyAccess:Ljava/lang/Boolean;
      22: aload_0
      23: aload_0
      24: invokespecial #6                  // Method detectAssociationTargetType:()Lorg/springframework/data/util/TypeInformation;
      27: putfield      #7                  // Field associationTargetType:Lorg/springframework/data/util/TypeInformation;
      30: aload_0
      31: aload_0
      32: invokespecial #8                  // Method detectUpdatability:()Z
      35: putfield      #9                  // Field updateable:Z
      38: aload_0
      39: new           #10                 // class org/springframework/data/jpa/util/JpaMetamodel
      42: dup
      43: aload_1
      44: invokespecial #11                 // Method org/springframework/data/jpa/util/JpaMetamodel."<init>":(Ljavax/persistence/metamodel/Metamodel;)V
      47: putfield      #12                 // Field metamodel:Lorg/springframework/data/jpa/util/JpaMetamodel;
      50: aload_0
      51: aload_0
      52: invokedynamic #13,  0             // InvokeDynamic #0:get:(Lorg/springframework/data/jpa/mapping/JpaPersistentPropertyImpl;)Ljava/util/function/Supplier;
      57: invokestatic  #14                 // Method org/springframework/data/util/Lazy.of:(Ljava/util/function/Supplier;)Lorg/springframework/data/util/Lazy;
      60: putfield      #15                 // Field isIdProperty:Lorg/springframework/data/util/Lazy;
      63: return

  public java.lang.Class<?> getActualType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field associationTargetType:Lorg/springframework/data/util/TypeInformation;
       4: ifnull        19
       7: aload_0
       8: getfield      #7                  // Field associationTargetType:Lorg/springframework/data/util/TypeInformation;
      11: invokeinterface #16,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      16: goto          23
      19: aload_0
      20: invokespecial #17                 // Method org/springframework/data/mapping/model/AnnotationBasedPersistentProperty.getActualType:()Ljava/lang/Class;
      23: areturn

  public java.lang.Iterable<? extends org.springframework.data.util.TypeInformation<?>> getPersistentEntityType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field associationTargetType:Lorg/springframework/data/util/TypeInformation;
       4: ifnull        17
       7: aload_0
       8: getfield      #7                  // Field associationTargetType:Lorg/springframework/data/util/TypeInformation;
      11: invokestatic  #18                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      14: goto          21
      17: aload_0
      18: invokespecial #19                 // Method org/springframework/data/mapping/model/AnnotationBasedPersistentProperty.getPersistentEntityType:()Ljava/lang/Iterable;
      21: areturn

  public boolean isIdProperty();
    Code:
       0: aload_0
       1: getfield      #15                 // Field isIdProperty:Lorg/springframework/data/util/Lazy;
       4: invokevirtual #20                 // Method org/springframework/data/util/Lazy.get:()Ljava/lang/Object;
       7: checkcast     #21                 // class java/lang/Boolean
      10: invokevirtual #22                 // Method java/lang/Boolean.booleanValue:()Z
      13: ireturn

  public boolean isEntity();
    Code:
       0: aload_0
       1: getfield      #12                 // Field metamodel:Lorg/springframework/data/jpa/util/JpaMetamodel;
       4: aload_0
       5: invokevirtual #23                 // Method getActualType:()Ljava/lang/Class;
       8: invokevirtual #24                 // Method org/springframework/data/jpa/util/JpaMetamodel.isJpaManaged:(Ljava/lang/Class;)Z
      11: ireturn

  public boolean isAssociation();
    Code:
       0: getstatic     #25                 // Field ASSOCIATION_ANNOTATIONS:Ljava/util/Collection;
       3: invokeinterface #26,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore_1
       9: aload_1
      10: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          41
      18: aload_1
      19: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #29                 // class java/lang/Class
      27: astore_2
      28: aload_0
      29: aload_2
      30: invokevirtual #30                 // Method findAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      33: ifnull        38
      36: iconst_1
      37: ireturn
      38: goto          9
      41: aload_0
      42: invokevirtual #31                 // Method getType:()Ljava/lang/Class;
      45: ldc           #32                 // class javax/persistence/Embeddable
      47: invokevirtual #33                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      50: ireturn

  public boolean isTransient();
    Code:
       0: aload_0
       1: ldc           #34                 // class javax/persistence/Transient
       3: invokevirtual #35                 // Method isAnnotationPresent:(Ljava/lang/Class;)Z
       6: ifne          16
       9: aload_0
      10: invokespecial #36                 // Method org/springframework/data/mapping/model/AnnotationBasedPersistentProperty.isTransient:()Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  protected org.springframework.data.mapping.Association<org.springframework.data.jpa.mapping.JpaPersistentProperty> createAssociation();
    Code:
       0: new           #37                 // class org/springframework/data/mapping/Association
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #38                 // Method org/springframework/data/mapping/Association."<init>":(Lorg/springframework/data/mapping/PersistentProperty;Lorg/springframework/data/mapping/PersistentProperty;)V
       9: areturn

  public boolean usePropertyAccess();
    Code:
       0: aload_0
       1: getfield      #5                  // Field usePropertyAccess:Ljava/lang/Boolean;
       4: ifnull        17
       7: aload_0
       8: getfield      #5                  // Field usePropertyAccess:Ljava/lang/Boolean;
      11: invokevirtual #22                 // Method java/lang/Boolean.booleanValue:()Z
      14: goto          21
      17: aload_0
      18: invokespecial #39                 // Method org/springframework/data/mapping/model/AnnotationBasedPersistentProperty.usePropertyAccess:()Z
      21: ireturn

  public boolean isVersionProperty();
    Code:
       0: aload_0
       1: ldc           #40                 // class javax/persistence/Version
       3: invokevirtual #35                 // Method isAnnotationPresent:(Ljava/lang/Class;)Z
       6: ireturn

  public boolean isWritable();
    Code:
       0: aload_0
       1: getfield      #9                  // Field updateable:Z
       4: ifeq          18
       7: aload_0
       8: invokespecial #41                 // Method org/springframework/data/mapping/model/AnnotationBasedPersistentProperty.isWritable:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private java.lang.Boolean detectPropertyAccess();
    Code:
       0: aload_0
       1: ldc           #42                 // class org/springframework/data/annotation/AccessType
       3: invokevirtual #30                 // Method findAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       6: checkcast     #42                 // class org/springframework/data/annotation/AccessType
       9: astore_1
      10: aload_1
      11: ifnull        30
      14: getstatic     #43                 // Field org/springframework/data/annotation/AccessType$Type.PROPERTY:Lorg/springframework/data/annotation/AccessType$Type;
      17: aload_1
      18: invokeinterface #44,  1           // InterfaceMethod org/springframework/data/annotation/AccessType.value:()Lorg/springframework/data/annotation/AccessType$Type;
      23: invokevirtual #45                 // Method org/springframework/data/annotation/AccessType$Type.equals:(Ljava/lang/Object;)Z
      26: invokestatic  #46                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      29: areturn
      30: aload_0
      31: ldc           #47                 // class javax/persistence/Access
      33: invokevirtual #30                 // Method findAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      36: checkcast     #47                 // class javax/persistence/Access
      39: astore_2
      40: aload_2
      41: ifnull        60
      44: getstatic     #48                 // Field javax/persistence/AccessType.PROPERTY:Ljavax/persistence/AccessType;
      47: aload_2
      48: invokeinterface #49,  1           // InterfaceMethod javax/persistence/Access.value:()Ljavax/persistence/AccessType;
      53: invokevirtual #50                 // Method javax/persistence/AccessType.equals:(Ljava/lang/Object;)Z
      56: invokestatic  #46                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      59: areturn
      60: aload_0
      61: ldc           #42                 // class org/springframework/data/annotation/AccessType
      63: invokevirtual #51                 // Method findPropertyOrOwnerAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      66: checkcast     #42                 // class org/springframework/data/annotation/AccessType
      69: astore_1
      70: aload_1
      71: ifnull        90
      74: getstatic     #43                 // Field org/springframework/data/annotation/AccessType$Type.PROPERTY:Lorg/springframework/data/annotation/AccessType$Type;
      77: aload_1
      78: invokeinterface #44,  1           // InterfaceMethod org/springframework/data/annotation/AccessType.value:()Lorg/springframework/data/annotation/AccessType$Type;
      83: invokevirtual #45                 // Method org/springframework/data/annotation/AccessType$Type.equals:(Ljava/lang/Object;)Z
      86: invokestatic  #46                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      89: areturn
      90: aload_0
      91: ldc           #47                 // class javax/persistence/Access
      93: invokevirtual #51                 // Method findPropertyOrOwnerAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      96: checkcast     #47                 // class javax/persistence/Access
      99: astore_2
     100: aload_2
     101: ifnull        120
     104: getstatic     #48                 // Field javax/persistence/AccessType.PROPERTY:Ljavax/persistence/AccessType;
     107: aload_2
     108: invokeinterface #49,  1           // InterfaceMethod javax/persistence/Access.value:()Ljavax/persistence/AccessType;
     113: invokevirtual #50                 // Method javax/persistence/AccessType.equals:(Ljava/lang/Object;)Z
     116: invokestatic  #46                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     119: areturn
     120: aconst_null
     121: areturn

  private org.springframework.data.util.TypeInformation<?> detectAssociationTargetType();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method isAssociation:()Z
       4: ifne          9
       7: aconst_null
       8: areturn
       9: getstatic     #25                 // Field ASSOCIATION_ANNOTATIONS:Ljava/util/Collection;
      12: invokeinterface #26,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      17: astore_1
      18: aload_1
      19: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          86
      27: aload_1
      28: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #29                 // class java/lang/Class
      36: astore_2
      37: aload_0
      38: aload_2
      39: invokevirtual #30                 // Method findAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      42: astore_3
      43: aload_3
      44: ifnonnull     50
      47: goto          18
      50: aload_3
      51: ldc           #53                 // String targetEntity
      53: invokestatic  #54                 // Method org/springframework/core/annotation/AnnotationUtils.getValue:(Ljava/lang/annotation/Annotation;Ljava/lang/String;)Ljava/lang/Object;
      56: astore        4
      58: aload         4
      60: ifnull        18
      63: aload         4
      65: getstatic     #55                 // Field java/lang/Void.TYPE:Ljava/lang/Class;
      68: invokevirtual #56                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      71: ifeq          77
      74: goto          18
      77: aload         4
      79: checkcast     #29                 // class java/lang/Class
      82: invokestatic  #57                 // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
      85: areturn
      86: aconst_null
      87: areturn

  private boolean detectUpdatability();
    Code:
       0: getstatic     #58                 // Field UPDATEABLE_ANNOTATIONS:Ljava/util/Collection;
       3: invokeinterface #26,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore_1
       9: aload_1
      10: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          54
      18: aload_1
      19: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #29                 // class java/lang/Class
      27: astore_2
      28: aload_0
      29: aload_2
      30: invokevirtual #30                 // Method findAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      33: astore_3
      34: aload_3
      35: ifnonnull     41
      38: goto          9
      41: aload_3
      42: ldc           #59                 // String updatable
      44: invokestatic  #54                 // Method org/springframework/core/annotation/AnnotationUtils.getValue:(Ljava/lang/annotation/Annotation;Ljava/lang/String;)Ljava/lang/Object;
      47: checkcast     #21                 // class java/lang/Boolean
      50: invokevirtual #22                 // Method java/lang/Boolean.booleanValue:()Z
      53: ireturn
      54: iconst_1
      55: ireturn

  private java.lang.Boolean lambda$new$1();
    Code:
       0: getstatic     #60                 // Field ID_ANNOTATIONS:Ljava/util/Collection;
       3: invokeinterface #61,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       8: aload_0
       9: invokedynamic #62,  0             // InvokeDynamic #1:test:(Lorg/springframework/data/jpa/mapping/JpaPersistentPropertyImpl;)Ljava/util/function/Predicate;
      14: invokeinterface #63,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      19: ifne          49
      22: aload_0
      23: getfield      #12                 // Field metamodel:Lorg/springframework/data/jpa/util/JpaMetamodel;
      26: aload_0
      27: invokevirtual #64                 // Method getOwner:()Lorg/springframework/data/mapping/PersistentEntity;
      30: invokeinterface #65,  1           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.getType:()Ljava/lang/Class;
      35: aload_0
      36: invokevirtual #66                 // Method getName:()Ljava/lang/String;
      39: aload_0
      40: invokevirtual #31                 // Method getType:()Ljava/lang/Class;
      43: invokevirtual #67                 // Method org/springframework/data/jpa/util/JpaMetamodel.isSingleIdAttribute:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Z
      46: ifeq          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: invokestatic  #46                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      57: areturn

  private boolean lambda$null$0(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #35                 // Method isAnnotationPresent:(Ljava/lang/Class;)Z
       5: ireturn

  static {};
    Code:
       0: new           #68                 // class java/util/HashSet
       3: dup
       4: invokespecial #69                 // Method java/util/HashSet."<init>":()V
       7: astore_0
       8: aload_0
       9: ldc           #70                 // class javax/persistence/OneToMany
      11: invokeinterface #71,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: ldc           #72                 // class javax/persistence/OneToOne
      20: invokeinterface #71,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      25: pop
      26: aload_0
      27: ldc           #73                 // class javax/persistence/ManyToMany
      29: invokeinterface #71,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      34: pop
      35: aload_0
      36: ldc           #74                 // class javax/persistence/ManyToOne
      38: invokeinterface #71,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      43: pop
      44: aload_0
      45: ldc           #75                 // class javax/persistence/Embedded
      47: invokeinterface #71,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      52: pop
      53: aload_0
      54: invokestatic  #76                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      57: putstatic     #25                 // Field ASSOCIATION_ANNOTATIONS:Ljava/util/Collection;
      60: new           #68                 // class java/util/HashSet
      63: dup
      64: invokespecial #69                 // Method java/util/HashSet."<init>":()V
      67: astore_0
      68: aload_0
      69: ldc           #77                 // class javax/persistence/Id
      71: invokeinterface #71,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      76: pop
      77: aload_0
      78: ldc           #78                 // class javax/persistence/EmbeddedId
      80: invokeinterface #71,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      85: pop
      86: aload_0
      87: invokestatic  #76                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      90: putstatic     #60                 // Field ID_ANNOTATIONS:Ljava/util/Collection;
      93: new           #68                 // class java/util/HashSet
      96: dup
      97: invokespecial #69                 // Method java/util/HashSet."<init>":()V
     100: astore_0
     101: aload_0
     102: ldc           #79                 // class javax/persistence/Column
     104: invokeinterface #71,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     109: pop
     110: aload_0
     111: ldc           #80                 // class javax/persistence/OrderColumn
     113: invokeinterface #71,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     118: pop
     119: aload_0
     120: invokestatic  #76                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
     123: putstatic     #58                 // Field UPDATEABLE_ANNOTATIONS:Ljava/util/Collection;
     126: return
}
