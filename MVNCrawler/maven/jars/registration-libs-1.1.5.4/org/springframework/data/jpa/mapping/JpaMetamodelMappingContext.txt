Compiled from "JpaMetamodelMappingContext.java"
public class org.springframework.data.jpa.mapping.JpaMetamodelMappingContext extends org.springframework.data.mapping.context.AbstractMappingContext<org.springframework.data.jpa.mapping.JpaPersistentEntityImpl<?>, org.springframework.data.jpa.mapping.JpaPersistentProperty> {
  private final java.util.Set<javax.persistence.metamodel.Metamodel> models;

  private final org.springframework.data.jpa.provider.PersistenceProvider persistenceProvider;

  public org.springframework.data.jpa.mapping.JpaMetamodelMappingContext(java.util.Set<javax.persistence.metamodel.Metamodel>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/data/mapping/context/AbstractMappingContext."<init>":()V
       4: aload_1
       5: ldc           #2                  // String JPA metamodel must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_1
      11: ldc           #4                  // String At least one JPA metamodel must be present!
      13: invokestatic  #5                  // Method org/springframework/util/Assert.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)V
      16: aload_0
      17: aload_1
      18: putfield      #6                  // Field models:Ljava/util/Set;
      21: aload_0
      22: aload_1
      23: invokeinterface #7,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      28: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #9                  // class javax/persistence/metamodel/Metamodel
      36: invokestatic  #10                 // Method org/springframework/data/jpa/provider/PersistenceProvider.fromMetamodel:(Ljavax/persistence/metamodel/Metamodel;)Lorg/springframework/data/jpa/provider/PersistenceProvider;
      39: putfield      #11                 // Field persistenceProvider:Lorg/springframework/data/jpa/provider/PersistenceProvider;
      42: return

  protected <T> org.springframework.data.jpa.mapping.JpaPersistentEntityImpl<?> createPersistentEntity(org.springframework.data.util.TypeInformation<T>);
    Code:
       0: new           #12                 // class org/springframework/data/jpa/mapping/JpaPersistentEntityImpl
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #11                 // Field persistenceProvider:Lorg/springframework/data/jpa/provider/PersistenceProvider;
       9: invokespecial #13                 // Method org/springframework/data/jpa/mapping/JpaPersistentEntityImpl."<init>":(Lorg/springframework/data/util/TypeInformation;Lorg/springframework/data/jpa/provider/ProxyIdAccessor;)V
      12: areturn

  protected org.springframework.data.jpa.mapping.JpaPersistentProperty createPersistentProperty(org.springframework.data.mapping.model.Property, org.springframework.data.jpa.mapping.JpaPersistentEntityImpl<?>, org.springframework.data.mapping.model.SimpleTypeHolder);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #14                 // Method org/springframework/data/jpa/mapping/JpaPersistentEntityImpl.getType:()Ljava/lang/Class;
       5: invokespecial #15                 // Method getMetamodelFor:(Ljava/lang/Class;)Ljavax/persistence/metamodel/Metamodel;
       8: astore        4
      10: aload         4
      12: ifnonnull     39
      15: new           #16                 // class java/lang/IllegalStateException
      18: dup
      19: ldc           #17                 // String Metamodel for %s not available!
      21: iconst_1
      22: anewarray     #18                 // class java/lang/Object
      25: dup
      26: iconst_0
      27: aload_2
      28: invokevirtual #14                 // Method org/springframework/data/jpa/mapping/JpaPersistentEntityImpl.getType:()Ljava/lang/Class;
      31: aastore
      32: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      35: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: new           #21                 // class org/springframework/data/jpa/mapping/JpaPersistentPropertyImpl
      42: dup
      43: aload         4
      45: aload_1
      46: aload_2
      47: aload_3
      48: invokespecial #22                 // Method org/springframework/data/jpa/mapping/JpaPersistentPropertyImpl."<init>":(Ljavax/persistence/metamodel/Metamodel;Lorg/springframework/data/mapping/model/Property;Lorg/springframework/data/mapping/PersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;)V
      51: areturn

  protected boolean shouldCreatePersistentEntityFor(org.springframework.data.util.TypeInformation<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #23,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
       7: invokespecial #15                 // Method getMetamodelFor:(Ljava/lang/Class;)Ljavax/persistence/metamodel/Metamodel;
      10: ifnull        17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  private javax.persistence.metamodel.Metamodel getMetamodelFor(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field models:Ljava/util/Set;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          98
      19: aload_2
      20: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #9                  // class javax/persistence/metamodel/Metamodel
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokeinterface #25,  2           // InterfaceMethod javax/persistence/metamodel/Metamodel.managedType:(Ljava/lang/Class;)Ljavax/persistence/metamodel/ManagedType;
      36: pop
      37: aload_3
      38: areturn
      39: astore        4
      41: aload_3
      42: invokeinterface #27,  1           // InterfaceMethod javax/persistence/metamodel/Metamodel.getManagedTypes:()Ljava/util/Set;
      47: invokeinterface #7,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      52: astore        5
      54: aload         5
      56: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      61: ifeq          95
      64: aload         5
      66: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: checkcast     #28                 // class javax/persistence/metamodel/ManagedType
      74: astore        6
      76: aload_1
      77: aload         6
      79: invokeinterface #29,  1           // InterfaceMethod javax/persistence/metamodel/ManagedType.getJavaType:()Ljava/lang/Class;
      84: invokevirtual #30                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      87: ifeq          92
      90: aload_3
      91: areturn
      92: goto          54
      95: goto          10
      98: aconst_null
      99: areturn
    Exception table:
       from    to  target type
          29    38    39   Class java/lang/IllegalArgumentException

  protected org.springframework.data.mapping.PersistentProperty createPersistentProperty(org.springframework.data.mapping.model.Property, org.springframework.data.mapping.model.MutablePersistentEntity, org.springframework.data.mapping.model.SimpleTypeHolder);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #12                 // class org/springframework/data/jpa/mapping/JpaPersistentEntityImpl
       6: aload_3
       7: invokevirtual #31                 // Method createPersistentProperty:(Lorg/springframework/data/mapping/model/Property;Lorg/springframework/data/jpa/mapping/JpaPersistentEntityImpl;Lorg/springframework/data/mapping/model/SimpleTypeHolder;)Lorg/springframework/data/jpa/mapping/JpaPersistentProperty;
      10: areturn

  protected org.springframework.data.mapping.model.MutablePersistentEntity createPersistentEntity(org.springframework.data.util.TypeInformation);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method createPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/jpa/mapping/JpaPersistentEntityImpl;
       5: areturn
}
