Compiled from "NamedQuery.java"
final class org.springframework.data.jpa.repository.query.NamedQuery extends org.springframework.data.jpa.repository.query.AbstractJpaQuery {
  private static final java.lang.String CANNOT_EXTRACT_QUERY;

  private static final org.slf4j.Logger LOG;

  private final java.lang.String queryName;

  private final java.lang.String countQueryName;

  private final java.lang.String countProjection;

  private final org.springframework.data.jpa.provider.QueryExtractor extractor;

  private final boolean namedCountQueryIsPresent;

  private org.springframework.data.jpa.repository.query.NamedQuery(org.springframework.data.jpa.repository.query.JpaQueryMethod, javax.persistence.EntityManager);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/springframework/data/jpa/repository/query/AbstractJpaQuery."<init>":(Lorg/springframework/data/jpa/repository/query/JpaQueryMethod;Ljavax/persistence/EntityManager;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #2                  // Method org/springframework/data/jpa/repository/query/JpaQueryMethod.getNamedQueryName:()Ljava/lang/String;
      11: putfield      #3                  // Field queryName:Ljava/lang/String;
      14: aload_0
      15: aload_1
      16: invokevirtual #4                  // Method org/springframework/data/jpa/repository/query/JpaQueryMethod.getNamedCountQueryName:()Ljava/lang/String;
      19: putfield      #5                  // Field countQueryName:Ljava/lang/String;
      22: aload_0
      23: aload_1
      24: invokevirtual #6                  // Method org/springframework/data/jpa/repository/query/JpaQueryMethod.getQueryExtractor:()Lorg/springframework/data/jpa/provider/QueryExtractor;
      27: putfield      #7                  // Field extractor:Lorg/springframework/data/jpa/provider/QueryExtractor;
      30: aload_0
      31: aload_1
      32: invokevirtual #8                  // Method org/springframework/data/jpa/repository/query/JpaQueryMethod.getCountQueryProjection:()Ljava/lang/String;
      35: putfield      #9                  // Field countProjection:Ljava/lang/String;
      38: aload_1
      39: invokevirtual #10                 // Method org/springframework/data/jpa/repository/query/JpaQueryMethod.getParameters:()Lorg/springframework/data/jpa/repository/query/JpaParameters;
      42: astore_3
      43: aload_3
      44: invokevirtual #11                 // Method org/springframework/data/repository/query/Parameters.hasSortParameter:()Z
      47: ifeq          71
      50: new           #12                 // class java/lang/IllegalStateException
      53: dup
      54: ldc           #13                 // String Finder method %s is backed by a NamedQuery and must not contain a sort parameter as we cannot modify the query! Use @Query instead!
      56: iconst_1
      57: anewarray     #14                 // class java/lang/Object
      60: dup
      61: iconst_0
      62: aload_1
      63: aastore
      64: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      67: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload_0
      72: aload_2
      73: aload_0
      74: getfield      #5                  // Field countQueryName:Ljava/lang/String;
      77: invokestatic  #17                 // Method hasNamedQuery:(Ljavax/persistence/EntityManager;Ljava/lang/String;)Z
      80: putfield      #18                 // Field namedCountQueryIsPresent:Z
      83: aload_0
      84: getfield      #18                 // Field namedCountQueryIsPresent:Z
      87: ifne          104
      90: aload_1
      91: invokevirtual #10                 // Method org/springframework/data/jpa/repository/query/JpaQueryMethod.getParameters:()Lorg/springframework/data/jpa/repository/query/JpaParameters;
      94: invokevirtual #19                 // Method org/springframework/data/jpa/repository/query/JpaParameters.hasPageableParameter:()Z
      97: ifeq          104
     100: iconst_1
     101: goto          105
     104: iconst_0
     105: istore        4
     107: aload_0
     108: getfield      #7                  // Field extractor:Lorg/springframework/data/jpa/provider/QueryExtractor;
     111: invokeinterface #20,  1           // InterfaceMethod org/springframework/data/jpa/provider/QueryExtractor.canExtractQuery:()Z
     116: ifne          123
     119: iconst_1
     120: goto          124
     123: iconst_0
     124: istore        5
     126: iload         4
     128: ifeq          143
     131: iload         5
     133: ifeq          143
     136: aload_1
     137: ldc           #22                 // String Your persistence provider does not support extracting the JPQL query from a named query thus you can\'t use Pageable inside your query method. Make sure you have a JpaDialect configured at your EntityManagerFactoryBean as this affects discovering the concrete persistence provider.
     139: invokestatic  #23                 // Method org/springframework/data/repository/query/QueryCreationException.create:(Lorg/springframework/data/repository/query/QueryMethod;Ljava/lang/String;)Lorg/springframework/data/repository/query/QueryCreationException;
     142: athrow
     143: aload_3
     144: invokevirtual #24                 // Method org/springframework/data/repository/query/Parameters.hasPageableParameter:()Z
     147: ifeq          161
     150: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
     153: ldc           #26                 // String Finder method {} is backed by a NamedQuery but contains a Pageable parameter! Sorting delivered via this Pageable will not be applied!
     155: aload_1
     156: invokeinterface #27,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     161: return

  private static boolean hasNamedQuery(javax.persistence.EntityManager, java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #28,  1           // InterfaceMethod javax/persistence/EntityManager.getEntityManagerFactory:()Ljavax/persistence/EntityManagerFactory;
       6: invokeinterface #29,  1           // InterfaceMethod javax/persistence/EntityManagerFactory.createEntityManager:()Ljavax/persistence/EntityManager;
      11: astore_2
      12: aload_2
      13: aload_1
      14: invokeinterface #30,  2           // InterfaceMethod javax/persistence/EntityManager.createNamedQuery:(Ljava/lang/String;)Ljavax/persistence/Query;
      19: pop
      20: iconst_1
      21: istore_3
      22: aload_2
      23: invokeinterface #31,  1           // InterfaceMethod javax/persistence/EntityManager.close:()V
      28: iload_3
      29: ireturn
      30: astore_3
      31: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      34: ldc           #33                 // String Did not find named query {}
      36: aload_1
      37: invokeinterface #34,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      42: iconst_0
      43: istore        4
      45: aload_2
      46: invokeinterface #31,  1           // InterfaceMethod javax/persistence/EntityManager.close:()V
      51: iload         4
      53: ireturn
      54: astore        5
      56: aload_2
      57: invokeinterface #31,  1           // InterfaceMethod javax/persistence/EntityManager.close:()V
      62: aload         5
      64: athrow
    Exception table:
       from    to  target type
          12    22    30   Class java/lang/IllegalArgumentException
          12    22    54   any
          30    45    54   any
          54    56    54   any

  public static org.springframework.data.repository.query.RepositoryQuery lookupFrom(org.springframework.data.jpa.repository.query.JpaQueryMethod, javax.persistence.EntityManager);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method org/springframework/data/jpa/repository/query/JpaQueryMethod.getNamedQueryName:()Ljava/lang/String;
       4: astore_2
       5: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
       8: ldc           #35                 // String Looking up named query {}
      10: aload_2
      11: invokeinterface #34,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      16: aload_1
      17: aload_2
      18: invokestatic  #17                 // Method hasNamedQuery:(Ljavax/persistence/EntityManager;Ljava/lang/String;)Z
      21: ifne          26
      24: aconst_null
      25: areturn
      26: new           #21                 // class org/springframework/data/jpa/repository/query/NamedQuery
      29: dup
      30: aload_0
      31: aload_1
      32: invokespecial #36                 // Method "<init>":(Lorg/springframework/data/jpa/repository/query/JpaQueryMethod;Ljavax/persistence/EntityManager;)V
      35: astore_3
      36: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      39: ldc           #37                 // String Found named query {}!
      41: aload_2
      42: invokeinterface #34,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      47: aload_3
      48: areturn
      49: astore_3
      50: aconst_null
      51: areturn
    Exception table:
       from    to  target type
          26    48    49   Class java/lang/IllegalArgumentException

  protected javax.persistence.Query doCreateQuery(java.lang.Object[]);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getEntityManager:()Ljavax/persistence/EntityManager;
       4: astore_2
       5: aload_0
       6: invokevirtual #39                 // Method getTypeToRead:()Ljava/util/Optional;
       9: aload_0
      10: aload_2
      11: invokedynamic #40,  0             // InvokeDynamic #0:apply:(Lorg/springframework/data/jpa/repository/query/NamedQuery;Ljavax/persistence/EntityManager;)Ljava/util/function/Function;
      16: invokevirtual #41                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      19: aload_0
      20: aload_2
      21: invokedynamic #42,  0             // InvokeDynamic #1:get:(Lorg/springframework/data/jpa/repository/query/NamedQuery;Ljavax/persistence/EntityManager;)Ljava/util/function/Supplier;
      26: invokevirtual #43                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      29: checkcast     #44                 // class javax/persistence/Query
      32: astore_3
      33: aload_0
      34: getfield      #45                 // Field parameterBinder:Lorg/springframework/data/util/Lazy;
      37: invokevirtual #46                 // Method org/springframework/data/util/Lazy.get:()Ljava/lang/Object;
      40: checkcast     #47                 // class org/springframework/data/jpa/repository/query/ParameterBinder
      43: aload_3
      44: aload_1
      45: invokevirtual #48                 // Method org/springframework/data/jpa/repository/query/ParameterBinder.bindAndPrepare:(Ljavax/persistence/Query;[Ljava/lang/Object;)Ljavax/persistence/Query;
      48: areturn

  protected javax.persistence.TypedQuery<java.lang.Long> doCreateCountQuery(java.lang.Object[]);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getEntityManager:()Ljavax/persistence/EntityManager;
       4: astore_2
       5: aload_0
       6: getfield      #18                 // Field namedCountQueryIsPresent:Z
       9: ifeq          28
      12: aload_2
      13: aload_0
      14: getfield      #5                  // Field countQueryName:Ljava/lang/String;
      17: ldc           #49                 // class java/lang/Long
      19: invokeinterface #50,  3           // InterfaceMethod javax/persistence/EntityManager.createNamedQuery:(Ljava/lang/String;Ljava/lang/Class;)Ljavax/persistence/TypedQuery;
      24: astore_3
      25: goto          93
      28: aload_0
      29: aload_1
      30: invokevirtual #51                 // Method createQuery:([Ljava/lang/Object;)Ljavax/persistence/Query;
      33: astore        4
      35: aload_0
      36: getfield      #7                  // Field extractor:Lorg/springframework/data/jpa/provider/QueryExtractor;
      39: aload         4
      41: invokeinterface #52,  2           // InterfaceMethod org/springframework/data/jpa/provider/QueryExtractor.extractQueryString:(Ljavax/persistence/Query;)Ljava/lang/String;
      46: astore        5
      48: aload         5
      50: ifnonnull     75
      53: new           #12                 // class java/lang/IllegalStateException
      56: dup
      57: ldc           #53                 // String Cannot extract query string for query %s is null!
      59: iconst_1
      60: anewarray     #14                 // class java/lang/Object
      63: dup
      64: iconst_0
      65: aload         4
      67: aastore
      68: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      71: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      74: athrow
      75: aload_2
      76: aload         5
      78: aload_0
      79: getfield      #9                  // Field countProjection:Ljava/lang/String;
      82: invokestatic  #54                 // Method org/springframework/data/jpa/repository/query/QueryUtils.createCountQueryFor:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      85: ldc           #49                 // class java/lang/Long
      87: invokeinterface #55,  3           // InterfaceMethod javax/persistence/EntityManager.createQuery:(Ljava/lang/String;Ljava/lang/Class;)Ljavax/persistence/TypedQuery;
      92: astore_3
      93: aload_0
      94: getfield      #45                 // Field parameterBinder:Lorg/springframework/data/util/Lazy;
      97: invokevirtual #46                 // Method org/springframework/data/util/Lazy.get:()Ljava/lang/Object;
     100: checkcast     #47                 // class org/springframework/data/jpa/repository/query/ParameterBinder
     103: aload_3
     104: aload_1
     105: getstatic     #56                 // Field org/springframework/data/jpa/repository/query/QueryParameterSetter$ErrorHandling.LENIENT:Lorg/springframework/data/jpa/repository/query/QueryParameterSetter$ErrorHandling;
     108: invokevirtual #57                 // Method org/springframework/data/jpa/repository/query/ParameterBinder.bind:(Ljavax/persistence/Query;[Ljava/lang/Object;Lorg/springframework/data/jpa/repository/query/QueryParameterSetter$ErrorHandling;)Ljavax/persistence/Query;
     111: checkcast     #58                 // class javax/persistence/TypedQuery
     114: areturn

  protected javax.persistence.Query doCreateCountQuery(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #59                 // Method doCreateCountQuery:([Ljava/lang/Object;)Ljavax/persistence/TypedQuery;
       5: areturn

  private javax.persistence.Query lambda$doCreateQuery$1(javax.persistence.EntityManager);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field queryName:Ljava/lang/String;
       5: invokeinterface #30,  2           // InterfaceMethod javax/persistence/EntityManager.createNamedQuery:(Ljava/lang/String;)Ljavax/persistence/Query;
      10: areturn

  private javax.persistence.Query lambda$doCreateQuery$0(javax.persistence.EntityManager, java.lang.Class);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field queryName:Ljava/lang/String;
       5: aload_2
       6: invokeinterface #50,  3           // InterfaceMethod javax/persistence/EntityManager.createNamedQuery:(Ljava/lang/String;Ljava/lang/Class;)Ljavax/persistence/TypedQuery;
      11: areturn

  static {};
    Code:
       0: ldc           #21                 // class org/springframework/data/jpa/repository/query/NamedQuery
       2: invokestatic  #60                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
