Compiled from "Version.java"
public class org.springframework.data.util.Version implements java.lang.Comparable<org.springframework.data.util.Version> {
  private static final java.lang.String VERSION_PARSE_ERROR;

  private final int major;

  private final int minor;

  private final int bugfix;

  private final int build;

  public org.springframework.data.util.Version(int...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Parts must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_1
      11: arraylength
      12: ifle          25
      15: aload_1
      16: arraylength
      17: iconst_5
      18: if_icmpge     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ldc           #4                  // String Invalid parts length. 0 < %s < 5
      28: iconst_1
      29: anewarray     #5                  // class java/lang/Object
      32: dup
      33: iconst_0
      34: aload_1
      35: arraylength
      36: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: aastore
      40: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      43: invokestatic  #8                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      46: aload_0
      47: aload_1
      48: iconst_0
      49: iaload
      50: putfield      #9                  // Field major:I
      53: aload_0
      54: aload_1
      55: arraylength
      56: iconst_1
      57: if_icmple     66
      60: aload_1
      61: iconst_1
      62: iaload
      63: goto          67
      66: iconst_0
      67: putfield      #10                 // Field minor:I
      70: aload_0
      71: aload_1
      72: arraylength
      73: iconst_2
      74: if_icmple     83
      77: aload_1
      78: iconst_2
      79: iaload
      80: goto          84
      83: iconst_0
      84: putfield      #11                 // Field bugfix:I
      87: aload_0
      88: aload_1
      89: arraylength
      90: iconst_3
      91: if_icmple     100
      94: aload_1
      95: iconst_3
      96: iaload
      97: goto          101
     100: iconst_0
     101: putfield      #12                 // Field build:I
     104: aload_0
     105: getfield      #9                  // Field major:I
     108: iflt          115
     111: iconst_1
     112: goto          116
     115: iconst_0
     116: ldc           #13                 // String Major version must be greater or equal zero!
     118: invokestatic  #8                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
     121: aload_0
     122: getfield      #10                 // Field minor:I
     125: iflt          132
     128: iconst_1
     129: goto          133
     132: iconst_0
     133: ldc           #14                 // String Minor version must be greater or equal zero!
     135: invokestatic  #8                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
     138: aload_0
     139: getfield      #11                 // Field bugfix:I
     142: iflt          149
     145: iconst_1
     146: goto          150
     149: iconst_0
     150: ldc           #15                 // String Bugfix version must be greater or equal zero!
     152: invokestatic  #8                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
     155: aload_0
     156: getfield      #12                 // Field build:I
     159: iflt          166
     162: iconst_1
     163: goto          167
     166: iconst_0
     167: ldc           #16                 // String Build version must be greater or equal zero!
     169: invokestatic  #8                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
     172: return

  public static org.springframework.data.util.Version parse(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #17                 // String Version must not be null o empty!
       3: invokestatic  #18                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: invokevirtual #19                 // Method java/lang/String.trim:()Ljava/lang/String;
      10: ldc           #20                 // String \\.
      12: invokevirtual #21                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      15: astore_1
      16: aload_1
      17: arraylength
      18: newarray       int
      20: astore_2
      21: iconst_0
      22: istore_3
      23: iload_3
      24: aload_1
      25: arraylength
      26: if_icmpge     110
      29: iload_3
      30: aload_1
      31: arraylength
      32: iconst_1
      33: isub
      34: if_icmpne     50
      37: aload_1
      38: iload_3
      39: aaload
      40: ldc           #22                 // String \\D.*
      42: ldc           #23                 // String
      44: invokevirtual #24                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      47: goto          53
      50: aload_1
      51: iload_3
      52: aaload
      53: astore        4
      55: aload         4
      57: invokestatic  #25                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      60: ifeq          104
      63: aload_2
      64: iload_3
      65: aload         4
      67: invokestatic  #26                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      70: iastore
      71: goto          104
      74: astore        5
      76: new           #27                 // class java/lang/IllegalArgumentException
      79: dup
      80: ldc           #29                 // String Invalid version string! Could not parse segment %s within %s.
      82: iconst_2
      83: anewarray     #5                  // class java/lang/Object
      86: dup
      87: iconst_0
      88: aload         4
      90: aastore
      91: dup
      92: iconst_1
      93: aload_0
      94: aastore
      95: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      98: aload         5
     100: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     103: athrow
     104: iinc          3, 1
     107: goto          23
     110: new           #28                 // class org/springframework/data/util/Version
     113: dup
     114: aload_2
     115: invokespecial #31                 // Method "<init>":([I)V
     118: areturn
    Exception table:
       from    to  target type
          63    71    74   Class java/lang/IllegalArgumentException

  public boolean isGreaterThan(org.springframework.data.util.Version);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method compareTo:(Lorg/springframework/data/util/Version;)I
       5: ifle          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isGreaterThanOrEqualTo(org.springframework.data.util.Version);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method compareTo:(Lorg/springframework/data/util/Version;)I
       5: iflt          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean is(org.springframework.data.util.Version);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #33                 // Method equals:(Ljava/lang/Object;)Z
       5: ireturn

  public boolean isLessThan(org.springframework.data.util.Version);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method compareTo:(Lorg/springframework/data/util/Version;)I
       5: ifge          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isLessThanOrEqualTo(org.springframework.data.util.Version);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method compareTo:(Lorg/springframework/data/util/Version;)I
       5: ifgt          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public int compareTo(org.springframework.data.util.Version);
    Code:
       0: aload_0
       1: getfield      #9                  // Field major:I
       4: aload_1
       5: getfield      #9                  // Field major:I
       8: if_icmpeq     21
      11: aload_0
      12: getfield      #9                  // Field major:I
      15: aload_1
      16: getfield      #9                  // Field major:I
      19: isub
      20: ireturn
      21: aload_0
      22: getfield      #10                 // Field minor:I
      25: aload_1
      26: getfield      #10                 // Field minor:I
      29: if_icmpeq     42
      32: aload_0
      33: getfield      #10                 // Field minor:I
      36: aload_1
      37: getfield      #10                 // Field minor:I
      40: isub
      41: ireturn
      42: aload_0
      43: getfield      #11                 // Field bugfix:I
      46: aload_1
      47: getfield      #11                 // Field bugfix:I
      50: if_icmpeq     63
      53: aload_0
      54: getfield      #11                 // Field bugfix:I
      57: aload_1
      58: getfield      #11                 // Field bugfix:I
      61: isub
      62: ireturn
      63: aload_0
      64: getfield      #12                 // Field build:I
      67: aload_1
      68: getfield      #12                 // Field build:I
      71: if_icmpeq     84
      74: aload_0
      75: getfield      #12                 // Field build:I
      78: aload_1
      79: getfield      #12                 // Field build:I
      82: isub
      83: ireturn
      84: iconst_0
      85: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #28                 // class org/springframework/data/util/Version
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #28                 // class org/springframework/data/util/Version
      20: astore_2
      21: aload_0
      22: getfield      #9                  // Field major:I
      25: aload_2
      26: getfield      #9                  // Field major:I
      29: if_icmpne     69
      32: aload_0
      33: getfield      #10                 // Field minor:I
      36: aload_2
      37: getfield      #10                 // Field minor:I
      40: if_icmpne     69
      43: aload_0
      44: getfield      #11                 // Field bugfix:I
      47: aload_2
      48: getfield      #11                 // Field bugfix:I
      51: if_icmpne     69
      54: aload_0
      55: getfield      #12                 // Field build:I
      58: aload_2
      59: getfield      #12                 // Field build:I
      62: if_icmpne     69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: istore_1
       3: iload_1
       4: bipush        31
       6: aload_0
       7: getfield      #9                  // Field major:I
      10: imul
      11: iadd
      12: istore_1
      13: iload_1
      14: bipush        31
      16: aload_0
      17: getfield      #10                 // Field minor:I
      20: imul
      21: iadd
      22: istore_1
      23: iload_1
      24: bipush        31
      26: aload_0
      27: getfield      #11                 // Field bugfix:I
      30: imul
      31: iadd
      32: istore_1
      33: iload_1
      34: bipush        31
      36: aload_0
      37: getfield      #12                 // Field build:I
      40: imul
      41: iadd
      42: istore_1
      43: iload_1
      44: ireturn

  public java.lang.String toString();
    Code:
       0: new           #34                 // class java/util/ArrayList
       3: dup
       4: invokespecial #35                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #9                  // Field major:I
      13: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      16: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_1
      23: aload_0
      24: getfield      #10                 // Field minor:I
      27: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      30: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      35: pop
      36: aload_0
      37: getfield      #12                 // Field build:I
      40: ifne          50
      43: aload_0
      44: getfield      #11                 // Field bugfix:I
      47: ifeq          64
      50: aload_1
      51: aload_0
      52: getfield      #11                 // Field bugfix:I
      55: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      58: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      63: pop
      64: aload_0
      65: getfield      #12                 // Field build:I
      68: ifeq          85
      71: aload_1
      72: aload_0
      73: getfield      #12                 // Field build:I
      76: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      79: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      84: pop
      85: aload_1
      86: ldc           #37                 // String .
      88: invokestatic  #38                 // Method org/springframework/util/StringUtils.collectionToDelimitedString:(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;
      91: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #28                 // class org/springframework/data/util/Version
       5: invokevirtual #32                 // Method compareTo:(Lorg/springframework/data/util/Version;)I
       8: ireturn
}
