Compiled from "TransactionSynchronizationManager.java"
public abstract class org.springframework.transaction.support.TransactionSynchronizationManager {
  private static final org.apache.commons.logging.Log logger;

  private static final java.lang.ThreadLocal<java.util.Map<java.lang.Object, java.lang.Object>> resources;

  private static final java.lang.ThreadLocal<java.util.Set<org.springframework.transaction.support.TransactionSynchronization>> synchronizations;

  private static final java.lang.ThreadLocal<java.lang.String> currentTransactionName;

  private static final java.lang.ThreadLocal<java.lang.Boolean> currentTransactionReadOnly;

  private static final java.lang.ThreadLocal<java.lang.Integer> currentTransactionIsolationLevel;

  private static final java.lang.ThreadLocal<java.lang.Boolean> actualTransactionActive;

  public org.springframework.transaction.support.TransactionSynchronizationManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.util.Map<java.lang.Object, java.lang.Object> getResourceMap();
    Code:
       0: getstatic     #2                  // Field resources:Ljava/lang/ThreadLocal;
       3: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #4                  // class java/util/Map
       9: astore_0
      10: aload_0
      11: ifnull        21
      14: aload_0
      15: invokestatic  #5                  // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      18: goto          24
      21: invokestatic  #6                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      24: areturn

  public static boolean hasResource(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method org/springframework/transaction/support/TransactionSynchronizationUtils.unwrapResourceIfNecessary:(Ljava/lang/Object;)Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: invokestatic  #8                  // Method doGetResource:(Ljava/lang/Object;)Ljava/lang/Object;
       9: astore_2
      10: aload_2
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public static java.lang.Object getResource(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method org/springframework/transaction/support/TransactionSynchronizationUtils.unwrapResourceIfNecessary:(Ljava/lang/Object;)Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: invokestatic  #8                  // Method doGetResource:(Ljava/lang/Object;)Ljava/lang/Object;
       9: astore_2
      10: aload_2
      11: ifnull        80
      14: getstatic     #9                  // Field logger:Lorg/apache/commons/logging/Log;
      17: invokeinterface #10,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      22: ifeq          80
      25: getstatic     #9                  // Field logger:Lorg/apache/commons/logging/Log;
      28: new           #11                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #13                 // String Retrieved value [
      37: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_2
      41: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: ldc           #16                 // String ] for key [
      46: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_1
      50: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      53: ldc           #17                 // String ] bound to thread [
      55: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokestatic  #18                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      61: invokevirtual #19                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      64: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc           #20                 // String ]
      69: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokeinterface #22,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      80: aload_2
      81: areturn

  private static java.lang.Object doGetResource(java.lang.Object);
    Code:
       0: getstatic     #2                  // Field resources:Ljava/lang/ThreadLocal;
       3: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #4                  // class java/util/Map
       9: astore_1
      10: aload_1
      11: ifnonnull     16
      14: aconst_null
      15: areturn
      16: aload_1
      17: aload_0
      18: invokeinterface #23,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: astore_2
      24: aload_2
      25: instanceof    #24                 // class org/springframework/transaction/support/ResourceHolder
      28: ifeq          68
      31: aload_2
      32: checkcast     #24                 // class org/springframework/transaction/support/ResourceHolder
      35: invokeinterface #25,  1           // InterfaceMethod org/springframework/transaction/support/ResourceHolder.isVoid:()Z
      40: ifeq          68
      43: aload_1
      44: aload_0
      45: invokeinterface #26,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: aload_1
      52: invokeinterface #27,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      57: ifeq          66
      60: getstatic     #2                  // Field resources:Ljava/lang/ThreadLocal;
      63: invokevirtual #28                 // Method java/lang/ThreadLocal.remove:()V
      66: aconst_null
      67: astore_2
      68: aload_2
      69: areturn

  public static void bindResource(java.lang.Object, java.lang.Object) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method org/springframework/transaction/support/TransactionSynchronizationUtils.unwrapResourceIfNecessary:(Ljava/lang/Object;)Ljava/lang/Object;
       4: astore_2
       5: aload_1
       6: ldc           #29                 // String Value must not be null
       8: invokestatic  #30                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      11: getstatic     #2                  // Field resources:Ljava/lang/ThreadLocal;
      14: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      17: checkcast     #4                  // class java/util/Map
      20: astore_3
      21: aload_3
      22: ifnonnull     40
      25: new           #31                 // class java/util/HashMap
      28: dup
      29: invokespecial #32                 // Method java/util/HashMap."<init>":()V
      32: astore_3
      33: getstatic     #2                  // Field resources:Ljava/lang/ThreadLocal;
      36: aload_3
      37: invokevirtual #33                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      40: aload_3
      41: aload_2
      42: aload_1
      43: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: astore        4
      50: aload         4
      52: instanceof    #24                 // class org/springframework/transaction/support/ResourceHolder
      55: ifeq          74
      58: aload         4
      60: checkcast     #24                 // class org/springframework/transaction/support/ResourceHolder
      63: invokeinterface #25,  1           // InterfaceMethod org/springframework/transaction/support/ResourceHolder.isVoid:()Z
      68: ifeq          74
      71: aconst_null
      72: astore        4
      74: aload         4
      76: ifnull        135
      79: new           #35                 // class java/lang/IllegalStateException
      82: dup
      83: new           #11                 // class java/lang/StringBuilder
      86: dup
      87: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      90: ldc           #36                 // String Already value [
      92: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: aload         4
      97: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     100: ldc           #16                 // String ] for key [
     102: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload_2
     106: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     109: ldc           #17                 // String ] bound to thread [
     111: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: invokestatic  #18                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     117: invokevirtual #19                 // Method java/lang/Thread.getName:()Ljava/lang/String;
     120: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: ldc           #20                 // String ]
     125: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     131: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     134: athrow
     135: getstatic     #9                  // Field logger:Lorg/apache/commons/logging/Log;
     138: invokeinterface #10,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
     143: ifeq          201
     146: getstatic     #9                  // Field logger:Lorg/apache/commons/logging/Log;
     149: new           #11                 // class java/lang/StringBuilder
     152: dup
     153: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     156: ldc           #38                 // String Bound value [
     158: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: aload_1
     162: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     165: ldc           #16                 // String ] for key [
     167: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: aload_2
     171: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     174: ldc           #39                 // String ] to thread [
     176: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: invokestatic  #18                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     182: invokevirtual #19                 // Method java/lang/Thread.getName:()Ljava/lang/String;
     185: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     188: ldc           #20                 // String ]
     190: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     193: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     196: invokeinterface #22,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     201: return

  public static java.lang.Object unbindResource(java.lang.Object) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method org/springframework/transaction/support/TransactionSynchronizationUtils.unwrapResourceIfNecessary:(Ljava/lang/Object;)Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: invokestatic  #40                 // Method doUnbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
       9: astore_2
      10: aload_2
      11: ifnonnull     60
      14: new           #35                 // class java/lang/IllegalStateException
      17: dup
      18: new           #11                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #41                 // String No value for key [
      27: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: ldc           #17                 // String ] bound to thread [
      36: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokestatic  #18                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      42: invokevirtual #19                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      45: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #20                 // String ]
      50: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: aload_2
      61: areturn

  public static java.lang.Object unbindResourceIfPossible(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method org/springframework/transaction/support/TransactionSynchronizationUtils.unwrapResourceIfNecessary:(Ljava/lang/Object;)Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: invokestatic  #40                 // Method doUnbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  private static java.lang.Object doUnbindResource(java.lang.Object);
    Code:
       0: getstatic     #2                  // Field resources:Ljava/lang/ThreadLocal;
       3: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #4                  // class java/util/Map
       9: astore_1
      10: aload_1
      11: ifnonnull     16
      14: aconst_null
      15: areturn
      16: aload_1
      17: aload_0
      18: invokeinterface #26,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      23: astore_2
      24: aload_1
      25: invokeinterface #27,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      30: ifeq          39
      33: getstatic     #2                  // Field resources:Ljava/lang/ThreadLocal;
      36: invokevirtual #28                 // Method java/lang/ThreadLocal.remove:()V
      39: aload_2
      40: instanceof    #24                 // class org/springframework/transaction/support/ResourceHolder
      43: ifeq          60
      46: aload_2
      47: checkcast     #24                 // class org/springframework/transaction/support/ResourceHolder
      50: invokeinterface #25,  1           // InterfaceMethod org/springframework/transaction/support/ResourceHolder.isVoid:()Z
      55: ifeq          60
      58: aconst_null
      59: astore_2
      60: aload_2
      61: ifnull        130
      64: getstatic     #9                  // Field logger:Lorg/apache/commons/logging/Log;
      67: invokeinterface #10,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      72: ifeq          130
      75: getstatic     #9                  // Field logger:Lorg/apache/commons/logging/Log;
      78: new           #11                 // class java/lang/StringBuilder
      81: dup
      82: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      85: ldc           #42                 // String Removed value [
      87: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_2
      91: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      94: ldc           #16                 // String ] for key [
      96: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload_0
     100: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     103: ldc           #43                 // String ] from thread [
     105: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: invokestatic  #18                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     111: invokevirtual #19                 // Method java/lang/Thread.getName:()Ljava/lang/String;
     114: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: ldc           #20                 // String ]
     119: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     125: invokeinterface #22,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     130: aload_2
     131: areturn

  public static boolean isSynchronizationActive();
    Code:
       0: getstatic     #44                 // Field synchronizations:Ljava/lang/ThreadLocal;
       3: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public static void initSynchronization() throws java.lang.IllegalStateException;
    Code:
       0: invokestatic  #45                 // Method isSynchronizationActive:()Z
       3: ifeq          16
       6: new           #35                 // class java/lang/IllegalStateException
       9: dup
      10: ldc           #46                 // String Cannot activate transaction synchronization - already active
      12: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: getstatic     #9                  // Field logger:Lorg/apache/commons/logging/Log;
      19: ldc           #47                 // String Initializing transaction synchronization
      21: invokeinterface #22,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      26: getstatic     #44                 // Field synchronizations:Ljava/lang/ThreadLocal;
      29: new           #48                 // class java/util/LinkedHashSet
      32: dup
      33: invokespecial #49                 // Method java/util/LinkedHashSet."<init>":()V
      36: invokevirtual #33                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      39: return

  public static void registerSynchronization(org.springframework.transaction.support.TransactionSynchronization) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc           #50                 // String TransactionSynchronization must not be null
       3: invokestatic  #30                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: invokestatic  #45                 // Method isSynchronizationActive:()Z
       9: ifne          22
      12: new           #35                 // class java/lang/IllegalStateException
      15: dup
      16: ldc           #51                 // String Transaction synchronization is not active
      18: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: getstatic     #44                 // Field synchronizations:Ljava/lang/ThreadLocal;
      25: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      28: checkcast     #52                 // class java/util/Set
      31: aload_0
      32: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      37: pop
      38: return

  public static java.util.List<org.springframework.transaction.support.TransactionSynchronization> getSynchronizations() throws java.lang.IllegalStateException;
    Code:
       0: getstatic     #44                 // Field synchronizations:Ljava/lang/ThreadLocal;
       3: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #52                 // class java/util/Set
       9: astore_0
      10: aload_0
      11: ifnonnull     24
      14: new           #35                 // class java/lang/IllegalStateException
      17: dup
      18: ldc           #51                 // String Transaction synchronization is not active
      20: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: invokeinterface #54,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      30: ifeq          37
      33: invokestatic  #55                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      36: areturn
      37: new           #56                 // class java/util/ArrayList
      40: dup
      41: aload_0
      42: invokespecial #57                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      45: astore_1
      46: aload_1
      47: invokestatic  #58                 // Method org/springframework/core/annotation/AnnotationAwareOrderComparator.sort:(Ljava/util/List;)V
      50: aload_1
      51: invokestatic  #59                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      54: areturn

  public static void clearSynchronization() throws java.lang.IllegalStateException;
    Code:
       0: invokestatic  #45                 // Method isSynchronizationActive:()Z
       3: ifne          16
       6: new           #35                 // class java/lang/IllegalStateException
       9: dup
      10: ldc           #60                 // String Cannot deactivate transaction synchronization - not active
      12: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: getstatic     #9                  // Field logger:Lorg/apache/commons/logging/Log;
      19: ldc           #61                 // String Clearing transaction synchronization
      21: invokeinterface #22,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      26: getstatic     #44                 // Field synchronizations:Ljava/lang/ThreadLocal;
      29: invokevirtual #28                 // Method java/lang/ThreadLocal.remove:()V
      32: return

  public static void setCurrentTransactionName(java.lang.String);
    Code:
       0: getstatic     #62                 // Field currentTransactionName:Ljava/lang/ThreadLocal;
       3: aload_0
       4: invokevirtual #33                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
       7: return

  public static java.lang.String getCurrentTransactionName();
    Code:
       0: getstatic     #62                 // Field currentTransactionName:Ljava/lang/ThreadLocal;
       3: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #63                 // class java/lang/String
       9: areturn

  public static void setCurrentTransactionReadOnly(boolean);
    Code:
       0: getstatic     #64                 // Field currentTransactionReadOnly:Ljava/lang/ThreadLocal;
       3: iload_0
       4: ifeq          13
       7: getstatic     #65                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      10: goto          14
      13: aconst_null
      14: invokevirtual #33                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      17: return

  public static boolean isCurrentTransactionReadOnly();
    Code:
       0: getstatic     #64                 // Field currentTransactionReadOnly:Ljava/lang/ThreadLocal;
       3: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public static void setCurrentTransactionIsolationLevel(java.lang.Integer);
    Code:
       0: getstatic     #66                 // Field currentTransactionIsolationLevel:Ljava/lang/ThreadLocal;
       3: aload_0
       4: invokevirtual #33                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
       7: return

  public static java.lang.Integer getCurrentTransactionIsolationLevel();
    Code:
       0: getstatic     #66                 // Field currentTransactionIsolationLevel:Ljava/lang/ThreadLocal;
       3: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #67                 // class java/lang/Integer
       9: areturn

  public static void setActualTransactionActive(boolean);
    Code:
       0: getstatic     #68                 // Field actualTransactionActive:Ljava/lang/ThreadLocal;
       3: iload_0
       4: ifeq          13
       7: getstatic     #65                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      10: goto          14
      13: aconst_null
      14: invokevirtual #33                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      17: return

  public static boolean isActualTransactionActive();
    Code:
       0: getstatic     #68                 // Field actualTransactionActive:Ljava/lang/ThreadLocal;
       3: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public static void clear();
    Code:
       0: getstatic     #44                 // Field synchronizations:Ljava/lang/ThreadLocal;
       3: invokevirtual #28                 // Method java/lang/ThreadLocal.remove:()V
       6: getstatic     #62                 // Field currentTransactionName:Ljava/lang/ThreadLocal;
       9: invokevirtual #28                 // Method java/lang/ThreadLocal.remove:()V
      12: getstatic     #64                 // Field currentTransactionReadOnly:Ljava/lang/ThreadLocal;
      15: invokevirtual #28                 // Method java/lang/ThreadLocal.remove:()V
      18: getstatic     #66                 // Field currentTransactionIsolationLevel:Ljava/lang/ThreadLocal;
      21: invokevirtual #28                 // Method java/lang/ThreadLocal.remove:()V
      24: getstatic     #68                 // Field actualTransactionActive:Ljava/lang/ThreadLocal;
      27: invokevirtual #28                 // Method java/lang/ThreadLocal.remove:()V
      30: return

  static {};
    Code:
       0: ldc           #69                 // class org/springframework/transaction/support/TransactionSynchronizationManager
       2: invokestatic  #70                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #9                  // Field logger:Lorg/apache/commons/logging/Log;
       8: new           #71                 // class org/springframework/core/NamedThreadLocal
      11: dup
      12: ldc           #72                 // String Transactional resources
      14: invokespecial #73                 // Method org/springframework/core/NamedThreadLocal."<init>":(Ljava/lang/String;)V
      17: putstatic     #2                  // Field resources:Ljava/lang/ThreadLocal;
      20: new           #71                 // class org/springframework/core/NamedThreadLocal
      23: dup
      24: ldc           #74                 // String Transaction synchronizations
      26: invokespecial #73                 // Method org/springframework/core/NamedThreadLocal."<init>":(Ljava/lang/String;)V
      29: putstatic     #44                 // Field synchronizations:Ljava/lang/ThreadLocal;
      32: new           #71                 // class org/springframework/core/NamedThreadLocal
      35: dup
      36: ldc           #75                 // String Current transaction name
      38: invokespecial #73                 // Method org/springframework/core/NamedThreadLocal."<init>":(Ljava/lang/String;)V
      41: putstatic     #62                 // Field currentTransactionName:Ljava/lang/ThreadLocal;
      44: new           #71                 // class org/springframework/core/NamedThreadLocal
      47: dup
      48: ldc           #76                 // String Current transaction read-only status
      50: invokespecial #73                 // Method org/springframework/core/NamedThreadLocal."<init>":(Ljava/lang/String;)V
      53: putstatic     #64                 // Field currentTransactionReadOnly:Ljava/lang/ThreadLocal;
      56: new           #71                 // class org/springframework/core/NamedThreadLocal
      59: dup
      60: ldc           #77                 // String Current transaction isolation level
      62: invokespecial #73                 // Method org/springframework/core/NamedThreadLocal."<init>":(Ljava/lang/String;)V
      65: putstatic     #66                 // Field currentTransactionIsolationLevel:Ljava/lang/ThreadLocal;
      68: new           #71                 // class org/springframework/core/NamedThreadLocal
      71: dup
      72: ldc           #78                 // String Actual transaction active
      74: invokespecial #73                 // Method org/springframework/core/NamedThreadLocal."<init>":(Ljava/lang/String;)V
      77: putstatic     #68                 // Field actualTransactionActive:Ljava/lang/ThreadLocal;
      80: return
}
