Compiled from "AsyncRequestInterceptor.java"
class org.springframework.orm.hibernate5.support.AsyncRequestInterceptor implements org.springframework.web.context.request.async.CallableProcessingInterceptor,org.springframework.web.context.request.async.DeferredResultProcessingInterceptor {
  private static final org.apache.commons.logging.Log logger;

  private final org.hibernate.SessionFactory sessionFactory;

  private final org.springframework.orm.hibernate5.SessionHolder sessionHolder;

  private volatile boolean timeoutInProgress;

  private volatile boolean errorInProgress;

  public org.springframework.orm.hibernate5.support.AsyncRequestInterceptor(org.hibernate.SessionFactory, org.springframework.orm.hibernate5.SessionHolder);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field sessionHolder:Lorg/springframework/orm/hibernate5/SessionHolder;
      14: return

  public <T> void preProcess(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable<T>);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method bindSession:()V
       4: return

  public void bindSession();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #5                  // Field timeoutInProgress:Z
       5: aload_0
       6: iconst_0
       7: putfield      #6                  // Field errorInProgress:Z
      10: aload_0
      11: getfield      #2                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
      14: aload_0
      15: getfield      #3                  // Field sessionHolder:Lorg/springframework/orm/hibernate5/SessionHolder;
      18: invokestatic  #7                  // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
      21: return

  public <T> void postProcess(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable<T>, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
       4: invokestatic  #8                  // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
       7: pop
       8: return

  public <T> java.lang.Object handleTimeout(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable<T>);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field timeoutInProgress:Z
       5: getstatic     #9                  // Field RESULT_NONE:Ljava/lang/Object;
       8: areturn

  public <T> java.lang.Object handleError(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable<T>, java.lang.Throwable);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #6                  // Field errorInProgress:Z
       5: getstatic     #9                  // Field RESULT_NONE:Ljava/lang/Object;
       8: areturn

  public <T> void afterCompletion(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable<T>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method closeSession:()V
       4: return

  private void closeSession();
    Code:
       0: aload_0
       1: getfield      #5                  // Field timeoutInProgress:Z
       4: ifne          14
       7: aload_0
       8: getfield      #6                  // Field errorInProgress:Z
      11: ifeq          34
      14: getstatic     #11                 // Field logger:Lorg/apache/commons/logging/Log;
      17: ldc           #12                 // String Closing Hibernate Session after async request timeout/error
      19: invokeinterface #13,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      24: aload_0
      25: getfield      #3                  // Field sessionHolder:Lorg/springframework/orm/hibernate5/SessionHolder;
      28: invokevirtual #14                 // Method org/springframework/orm/hibernate5/SessionHolder.getSession:()Lorg/hibernate/Session;
      31: invokestatic  #15                 // Method org/springframework/orm/hibernate5/SessionFactoryUtils.closeSession:(Lorg/hibernate/Session;)V
      34: return

  public <T> boolean handleTimeout(org.springframework.web.context.request.NativeWebRequest, org.springframework.web.context.request.async.DeferredResult<T>);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field timeoutInProgress:Z
       5: iconst_1
       6: ireturn

  public <T> boolean handleError(org.springframework.web.context.request.NativeWebRequest, org.springframework.web.context.request.async.DeferredResult<T>, java.lang.Throwable);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #6                  // Field errorInProgress:Z
       5: iconst_1
       6: ireturn

  public <T> void afterCompletion(org.springframework.web.context.request.NativeWebRequest, org.springframework.web.context.request.async.DeferredResult<T>);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method closeSession:()V
       4: return

  static {};
    Code:
       0: ldc           #16                 // class org/springframework/orm/hibernate5/support/AsyncRequestInterceptor
       2: invokestatic  #17                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #11                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
