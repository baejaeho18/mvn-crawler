Compiled from "HibernateTransactionManager.java"
public class org.springframework.orm.hibernate5.HibernateTransactionManager extends org.springframework.transaction.support.AbstractPlatformTransactionManager implements org.springframework.transaction.support.ResourceTransactionManager,org.springframework.beans.factory.BeanFactoryAware,org.springframework.beans.factory.InitializingBean {
  private org.hibernate.SessionFactory sessionFactory;

  private javax.sql.DataSource dataSource;

  private boolean autodetectDataSource;

  private boolean prepareConnection;

  private boolean allowResultAccessAfterCompletion;

  private boolean hibernateManagedSession;

  private java.lang.Object entityInterceptor;

  private org.springframework.beans.factory.BeanFactory beanFactory;

  public org.springframework.orm.hibernate5.HibernateTransactionManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/transaction/support/AbstractPlatformTransactionManager."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field autodetectDataSource:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field prepareConnection:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field allowResultAccessAfterCompletion:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field hibernateManagedSession:Z
      24: return

  public org.springframework.orm.hibernate5.HibernateTransactionManager(org.hibernate.SessionFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/transaction/support/AbstractPlatformTransactionManager."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field autodetectDataSource:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field prepareConnection:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field allowResultAccessAfterCompletion:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field hibernateManagedSession:Z
      24: aload_0
      25: aload_1
      26: putfield      #6                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
      29: aload_0
      30: invokevirtual #7                  // Method afterPropertiesSet:()V
      33: return

  public void setSessionFactory(org.hibernate.SessionFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
       5: return

  public org.hibernate.SessionFactory getSessionFactory();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
       4: areturn

  protected final org.hibernate.SessionFactory obtainSessionFactory();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ldc           #9                  // String No SessionFactory set
      16: invokestatic  #10                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      19: aload_1
      20: areturn

  public void setDataSource(javax.sql.DataSource);
    Code:
       0: aload_1
       1: ifnull        25
       4: aload_1
       5: instanceof    #11                 // class org/springframework/jdbc/datasource/TransactionAwareDataSourceProxy
       8: ifeq          25
      11: aload_0
      12: aload_1
      13: checkcast     #11                 // class org/springframework/jdbc/datasource/TransactionAwareDataSourceProxy
      16: invokevirtual #12                 // Method org/springframework/jdbc/datasource/TransactionAwareDataSourceProxy.getTargetDataSource:()Ljavax/sql/DataSource;
      19: putfield      #13                 // Field dataSource:Ljavax/sql/DataSource;
      22: goto          30
      25: aload_0
      26: aload_1
      27: putfield      #13                 // Field dataSource:Ljavax/sql/DataSource;
      30: return

  public javax.sql.DataSource getDataSource();
    Code:
       0: aload_0
       1: getfield      #13                 // Field dataSource:Ljavax/sql/DataSource;
       4: areturn

  public void setAutodetectDataSource(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field autodetectDataSource:Z
       5: return

  public void setPrepareConnection(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field prepareConnection:Z
       5: return

  public void setAllowResultAccessAfterCompletion(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field allowResultAccessAfterCompletion:Z
       5: return

  public void setHibernateManagedSession(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field hibernateManagedSession:Z
       5: return

  public void setEntityInterceptorBeanName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field entityInterceptor:Ljava/lang/Object;
       5: return

  public void setEntityInterceptor(org.hibernate.Interceptor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field entityInterceptor:Ljava/lang/Object;
       5: return

  public org.hibernate.Interceptor getEntityInterceptor() throws java.lang.IllegalStateException, org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field entityInterceptor:Ljava/lang/Object;
       4: instanceof    #15                 // class org/hibernate/Interceptor
       7: ifeq          18
      10: aload_0
      11: getfield      #14                 // Field entityInterceptor:Ljava/lang/Object;
      14: checkcast     #15                 // class org/hibernate/Interceptor
      17: areturn
      18: aload_0
      19: getfield      #14                 // Field entityInterceptor:Ljava/lang/Object;
      22: instanceof    #16                 // class java/lang/String
      25: ifeq          69
      28: aload_0
      29: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      32: ifnonnull     45
      35: new           #18                 // class java/lang/IllegalStateException
      38: dup
      39: ldc           #19                 // String Cannot get entity interceptor via bean name if no bean factory set
      41: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: getfield      #14                 // Field entityInterceptor:Ljava/lang/Object;
      49: checkcast     #16                 // class java/lang/String
      52: astore_1
      53: aload_0
      54: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      57: aload_1
      58: ldc           #15                 // class org/hibernate/Interceptor
      60: invokeinterface #21,  3           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      65: checkcast     #15                 // class org/hibernate/Interceptor
      68: areturn
      69: aconst_null
      70: areturn

  public void setBeanFactory(org.springframework.beans.factory.BeanFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       5: return

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
       4: ifnonnull     17
       7: new           #22                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #23                 // String Property \'sessionFactory\' is required
      13: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #14                 // Field entityInterceptor:Ljava/lang/Object;
      21: instanceof    #16                 // class java/lang/String
      24: ifeq          44
      27: aload_0
      28: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      31: ifnonnull     44
      34: new           #22                 // class java/lang/IllegalArgumentException
      37: dup
      38: ldc           #25                 // String Property \'beanFactory\' is required for \'entityInterceptorBeanName\'
      40: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_0
      45: getfield      #2                  // Field autodetectDataSource:Z
      48: ifeq          120
      51: aload_0
      52: invokevirtual #26                 // Method getDataSource:()Ljavax/sql/DataSource;
      55: ifnonnull     120
      58: aload_0
      59: invokevirtual #8                  // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
      62: invokestatic  #27                 // Method org/springframework/orm/hibernate5/SessionFactoryUtils.getDataSource:(Lorg/hibernate/SessionFactory;)Ljavax/sql/DataSource;
      65: astore_1
      66: aload_1
      67: ifnull        120
      70: aload_0
      71: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
      74: invokeinterface #29,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
      79: ifeq          115
      82: aload_0
      83: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
      86: new           #30                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #32                 // String Using DataSource [
      95: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_1
      99: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     102: ldc           #35                 // String ] of Hibernate SessionFactory for HibernateTransactionManager
     104: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: invokeinterface #37,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     115: aload_0
     116: aload_1
     117: invokevirtual #38                 // Method setDataSource:(Ljavax/sql/DataSource;)V
     120: return

  public java.lang.Object getResourceFactory();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method obtainSessionFactory:()Lorg/hibernate/SessionFactory;
       4: areturn

  protected java.lang.Object doGetTransaction();
    Code:
       0: new           #40                 // class org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #41                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject."<init>":(Lorg/springframework/orm/hibernate5/HibernateTransactionManager;Lorg/springframework/orm/hibernate5/HibernateTransactionManager$1;)V
       9: astore_1
      10: aload_1
      11: aload_0
      12: invokevirtual #42                 // Method isNestedTransactionAllowed:()Z
      15: invokevirtual #43                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.setSavepointAllowed:(Z)V
      18: aload_0
      19: invokevirtual #39                 // Method obtainSessionFactory:()Lorg/hibernate/SessionFactory;
      22: astore_2
      23: aload_2
      24: invokestatic  #44                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #45                 // class org/springframework/orm/hibernate5/SessionHolder
      30: astore_3
      31: aload_3
      32: ifnull        91
      35: aload_0
      36: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
      39: invokeinterface #46,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      44: ifeq          83
      47: aload_0
      48: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
      51: new           #30                 // class java/lang/StringBuilder
      54: dup
      55: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      58: ldc           #47                 // String Found thread-bound Session [
      60: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_3
      64: invokevirtual #48                 // Method org/springframework/orm/hibernate5/SessionHolder.getSession:()Lorg/hibernate/Session;
      67: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      70: ldc           #49                 // String ] for Hibernate transaction
      72: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: invokeinterface #50,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      83: aload_1
      84: aload_3
      85: invokevirtual #51                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.setSessionHolder:(Lorg/springframework/orm/hibernate5/SessionHolder;)V
      88: goto          175
      91: aload_0
      92: getfield      #5                  // Field hibernateManagedSession:Z
      95: ifeq          175
      98: aload_2
      99: invokeinterface #52,  1           // InterfaceMethod org/hibernate/SessionFactory.getCurrentSession:()Lorg/hibernate/Session;
     104: astore        4
     106: aload_0
     107: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
     110: invokeinterface #46,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     115: ifeq          152
     118: aload_0
     119: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
     122: new           #30                 // class java/lang/StringBuilder
     125: dup
     126: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
     129: ldc           #53                 // String Found Hibernate-managed Session [
     131: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload         4
     136: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     139: ldc           #54                 // String ] for Spring-managed transaction
     141: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     147: invokeinterface #50,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     152: aload_1
     153: aload         4
     155: invokevirtual #55                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.setExistingSession:(Lorg/hibernate/Session;)V
     158: goto          175
     161: astore        4
     163: new           #57                 // class org/springframework/dao/DataAccessResourceFailureException
     166: dup
     167: ldc           #58                 // String Could not obtain Hibernate-managed Session for Spring-managed transaction
     169: aload         4
     171: invokespecial #59                 // Method org/springframework/dao/DataAccessResourceFailureException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     174: athrow
     175: aload_0
     176: invokevirtual #26                 // Method getDataSource:()Ljavax/sql/DataSource;
     179: ifnull        200
     182: aload_0
     183: invokevirtual #26                 // Method getDataSource:()Ljavax/sql/DataSource;
     186: invokestatic  #44                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
     189: checkcast     #60                 // class org/springframework/jdbc/datasource/ConnectionHolder
     192: astore        4
     194: aload_1
     195: aload         4
     197: invokevirtual #61                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.setConnectionHolder:(Lorg/springframework/jdbc/datasource/ConnectionHolder;)V
     200: aload_1
     201: areturn
    Exception table:
       from    to  target type
          98   158   161   Class org/hibernate/HibernateException

  protected boolean isExistingTransaction(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #40                 // class org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject
       4: astore_2
       5: aload_2
       6: invokevirtual #62                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.hasSpringManagedTransaction:()Z
       9: ifne          26
      12: aload_0
      13: getfield      #5                  // Field hibernateManagedSession:Z
      16: ifeq          30
      19: aload_2
      20: invokevirtual #63                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.hasHibernateManagedTransaction:()Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  protected void doBegin(java.lang.Object, org.springframework.transaction.TransactionDefinition);
    Code:
       0: aload_1
       1: checkcast     #40                 // class org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject
       4: astore_3
       5: aload_3
       6: invokevirtual #64                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.hasConnectionHolder:()Z
       9: ifeq          32
      12: aload_3
      13: invokevirtual #65                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.getConnectionHolder:()Lorg/springframework/jdbc/datasource/ConnectionHolder;
      16: invokevirtual #66                 // Method org/springframework/jdbc/datasource/ConnectionHolder.isSynchronizedWithTransaction:()Z
      19: ifne          32
      22: new           #67                 // class org/springframework/transaction/IllegalTransactionStateException
      25: dup
      26: ldc           #68                 // String Pre-bound JDBC Connection found! HibernateTransactionManager does not support running within DataSourceTransactionManager if told to manage the DataSource itself. It is recommended to use a single HibernateTransactionManager for all transactions on a single DataSource, no matter whether Hibernate or JDBC access.
      28: invokespecial #69                 // Method org/springframework/transaction/IllegalTransactionStateException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aconst_null
      33: astore        4
      35: aload_3
      36: invokevirtual #70                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.hasSessionHolder:()Z
      39: ifeq          52
      42: aload_3
      43: invokevirtual #71                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate5/SessionHolder;
      46: invokevirtual #72                 // Method org/springframework/orm/hibernate5/SessionHolder.isSynchronizedWithTransaction:()Z
      49: ifeq          150
      52: aload_0
      53: invokevirtual #73                 // Method getEntityInterceptor:()Lorg/hibernate/Interceptor;
      56: astore        5
      58: aload         5
      60: ifnull        87
      63: aload_0
      64: invokevirtual #39                 // Method obtainSessionFactory:()Lorg/hibernate/SessionFactory;
      67: invokeinterface #74,  1           // InterfaceMethod org/hibernate/SessionFactory.withOptions:()Lorg/hibernate/SessionBuilder;
      72: aload         5
      74: invokeinterface #75,  2           // InterfaceMethod org/hibernate/SessionBuilder.interceptor:(Lorg/hibernate/Interceptor;)Lorg/hibernate/SessionBuilder;
      79: invokeinterface #76,  1           // InterfaceMethod org/hibernate/SessionBuilder.openSession:()Lorg/hibernate/Session;
      84: goto          96
      87: aload_0
      88: invokevirtual #39                 // Method obtainSessionFactory:()Lorg/hibernate/SessionFactory;
      91: invokeinterface #77,  1           // InterfaceMethod org/hibernate/SessionFactory.openSession:()Lorg/hibernate/Session;
      96: astore        6
      98: aload_0
      99: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
     102: invokeinterface #46,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     107: ifeq          144
     110: aload_0
     111: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
     114: new           #30                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #78                 // String Opened new Session [
     123: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload         6
     128: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     131: ldc           #49                 // String ] for Hibernate transaction
     133: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: invokeinterface #50,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     144: aload_3
     145: aload         6
     147: invokevirtual #79                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.setSession:(Lorg/hibernate/Session;)V
     150: aload_3
     151: invokevirtual #71                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate5/SessionHolder;
     154: invokevirtual #48                 // Method org/springframework/orm/hibernate5/SessionHolder.getSession:()Lorg/hibernate/Session;
     157: astore        4
     159: aload_0
     160: getfield      #3                  // Field prepareConnection:Z
     163: ifeq          296
     166: aload_0
     167: aload         4
     169: invokevirtual #80                 // Method isSameConnectionForEntireSession:(Lorg/hibernate/Session;)Z
     172: ifeq          296
     175: aload_0
     176: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
     179: invokeinterface #46,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     184: ifeq          221
     187: aload_0
     188: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
     191: new           #30                 // class java/lang/StringBuilder
     194: dup
     195: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
     198: ldc           #81                 // String Preparing JDBC Connection of Hibernate Session [
     200: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: aload         4
     205: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     208: ldc           #82                 // String ]
     210: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     213: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     216: invokeinterface #50,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     221: aload         4
     223: checkcast     #83                 // class org/hibernate/engine/spi/SessionImplementor
     226: invokeinterface #84,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.connection:()Ljava/sql/Connection;
     231: astore        5
     233: aload         5
     235: aload_2
     236: invokestatic  #85                 // Method org/springframework/jdbc/datasource/DataSourceUtils.prepareConnectionForTransaction:(Ljava/sql/Connection;Lorg/springframework/transaction/TransactionDefinition;)Ljava/lang/Integer;
     239: astore        6
     241: aload_3
     242: aload         6
     244: invokevirtual #86                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.setPreviousIsolationLevel:(Ljava/lang/Integer;)V
     247: aload_0
     248: getfield      #4                  // Field allowResultAccessAfterCompletion:Z
     251: ifeq          293
     254: aload_3
     255: invokevirtual #87                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.isNewSession:()Z
     258: ifne          293
     261: aload         5
     263: invokeinterface #88,  1           // InterfaceMethod java/sql/Connection.getHoldability:()I
     268: istore        7
     270: iload         7
     272: iconst_1
     273: if_icmpeq     293
     276: aload_3
     277: iload         7
     279: invokestatic  #90                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     282: invokevirtual #91                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.setPreviousHoldability:(Ljava/lang/Integer;)V
     285: aload         5
     287: iconst_1
     288: invokeinterface #92,  2           // InterfaceMethod java/sql/Connection.setHoldability:(I)V
     293: goto          362
     296: aload_2
     297: invokeinterface #93,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.getIsolationLevel:()I
     302: iconst_m1
     303: if_icmpeq     316
     306: new           #95                 // class org/springframework/transaction/InvalidIsolationLevelException
     309: dup
     310: ldc           #96                 // String HibernateTransactionManager is not allowed to support custom isolation levels: make sure that its \'prepareConnection\' flag is on (the default) and that the Hibernate connection release mode is set to \'on_close\' (the default for JDBC).
     312: invokespecial #97                 // Method org/springframework/transaction/InvalidIsolationLevelException."<init>":(Ljava/lang/String;)V
     315: athrow
     316: aload_0
     317: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
     320: invokeinterface #46,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     325: ifeq          362
     328: aload_0
     329: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
     332: new           #30                 // class java/lang/StringBuilder
     335: dup
     336: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
     339: ldc           #98                 // String Not preparing JDBC Connection of Hibernate Session [
     341: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     344: aload         4
     346: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     349: ldc           #82                 // String ]
     351: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     354: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     357: invokeinterface #50,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     362: aload_2
     363: invokeinterface #99,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.isReadOnly:()Z
     368: ifeq          388
     371: aload_3
     372: invokevirtual #87                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.isNewSession:()Z
     375: ifeq          388
     378: aload         4
     380: getstatic     #100                // Field org/hibernate/FlushMode.MANUAL:Lorg/hibernate/FlushMode;
     383: invokeinterface #101,  2          // InterfaceMethod org/hibernate/Session.setFlushMode:(Lorg/hibernate/FlushMode;)V
     388: aload_2
     389: invokeinterface #99,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.isReadOnly:()Z
     394: ifne          441
     397: aload_3
     398: invokevirtual #87                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.isNewSession:()Z
     401: ifne          441
     404: aload         4
     406: invokestatic  #102                // Method org/springframework/orm/hibernate5/SessionFactoryUtils.getFlushMode:(Lorg/hibernate/Session;)Lorg/hibernate/FlushMode;
     409: astore        5
     411: getstatic     #100                // Field org/hibernate/FlushMode.MANUAL:Lorg/hibernate/FlushMode;
     414: aload         5
     416: invokevirtual #103                // Method org/hibernate/FlushMode.equals:(Ljava/lang/Object;)Z
     419: ifeq          441
     422: aload         4
     424: getstatic     #104                // Field org/hibernate/FlushMode.AUTO:Lorg/hibernate/FlushMode;
     427: invokeinterface #101,  2          // InterfaceMethod org/hibernate/Session.setFlushMode:(Lorg/hibernate/FlushMode;)V
     432: aload_3
     433: invokevirtual #71                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate5/SessionHolder;
     436: aload         5
     438: invokevirtual #105                // Method org/springframework/orm/hibernate5/SessionHolder.setPreviousFlushMode:(Lorg/hibernate/FlushMode;)V
     441: aload_0
     442: aload_2
     443: invokevirtual #106                // Method determineTimeout:(Lorg/springframework/transaction/TransactionDefinition;)I
     446: istore        6
     448: iload         6
     450: iconst_m1
     451: if_icmpeq     482
     454: aload         4
     456: invokeinterface #107,  1          // InterfaceMethod org/hibernate/Session.getTransaction:()Lorg/hibernate/Transaction;
     461: astore        5
     463: aload         5
     465: iload         6
     467: invokeinterface #108,  2          // InterfaceMethod org/hibernate/Transaction.setTimeout:(I)V
     472: aload         5
     474: invokeinterface #109,  1          // InterfaceMethod org/hibernate/Transaction.begin:()V
     479: goto          491
     482: aload         4
     484: invokeinterface #110,  1          // InterfaceMethod org/hibernate/Session.beginTransaction:()Lorg/hibernate/Transaction;
     489: astore        5
     491: aload_3
     492: invokevirtual #71                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate5/SessionHolder;
     495: aload         5
     497: invokevirtual #111                // Method org/springframework/orm/hibernate5/SessionHolder.setTransaction:(Lorg/hibernate/Transaction;)V
     500: aload_0
     501: invokevirtual #26                 // Method getDataSource:()Ljavax/sql/DataSource;
     504: ifnull        604
     507: aload         4
     509: checkcast     #83                 // class org/hibernate/engine/spi/SessionImplementor
     512: invokeinterface #84,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.connection:()Ljava/sql/Connection;
     517: astore        7
     519: new           #60                 // class org/springframework/jdbc/datasource/ConnectionHolder
     522: dup
     523: aload         7
     525: invokespecial #112                // Method org/springframework/jdbc/datasource/ConnectionHolder."<init>":(Ljava/sql/Connection;)V
     528: astore        8
     530: iload         6
     532: iconst_m1
     533: if_icmpeq     543
     536: aload         8
     538: iload         6
     540: invokevirtual #113                // Method org/springframework/jdbc/datasource/ConnectionHolder.setTimeoutInSeconds:(I)V
     543: aload_0
     544: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
     547: invokeinterface #46,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     552: ifeq          589
     555: aload_0
     556: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
     559: new           #30                 // class java/lang/StringBuilder
     562: dup
     563: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
     566: ldc           #114                // String Exposing Hibernate transaction as JDBC transaction [
     568: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     571: aload         7
     573: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     576: ldc           #82                 // String ]
     578: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     581: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     584: invokeinterface #50,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     589: aload_0
     590: invokevirtual #26                 // Method getDataSource:()Ljavax/sql/DataSource;
     593: aload         8
     595: invokestatic  #115                // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
     598: aload_3
     599: aload         8
     601: invokevirtual #61                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.setConnectionHolder:(Lorg/springframework/jdbc/datasource/ConnectionHolder;)V
     604: aload_3
     605: invokevirtual #116                // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.isNewSessionHolder:()Z
     608: ifeq          622
     611: aload_0
     612: invokevirtual #39                 // Method obtainSessionFactory:()Lorg/hibernate/SessionFactory;
     615: aload_3
     616: invokevirtual #71                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate5/SessionHolder;
     619: invokestatic  #115                // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
     622: aload_3
     623: invokevirtual #71                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate5/SessionHolder;
     626: iconst_1
     627: invokevirtual #117                // Method org/springframework/orm/hibernate5/SessionHolder.setSynchronizedWithTransaction:(Z)V
     630: goto          745
     633: astore        5
     635: aload_3
     636: invokevirtual #87                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.isNewSession:()Z
     639: ifeq          733
     642: aload         4
     644: ifnull        677
     647: aload         4
     649: invokeinterface #107,  1          // InterfaceMethod org/hibernate/Session.getTransaction:()Lorg/hibernate/Transaction;
     654: invokeinterface #119,  1          // InterfaceMethod org/hibernate/Transaction.getStatus:()Lorg/hibernate/resource/transaction/spi/TransactionStatus;
     659: getstatic     #120                // Field org/hibernate/resource/transaction/spi/TransactionStatus.ACTIVE:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
     662: if_acmpne     677
     665: aload         4
     667: invokeinterface #107,  1          // InterfaceMethod org/hibernate/Session.getTransaction:()Lorg/hibernate/Transaction;
     672: invokeinterface #121,  1          // InterfaceMethod org/hibernate/Transaction.rollback:()V
     677: aload         4
     679: invokestatic  #122                // Method org/springframework/orm/hibernate5/SessionFactoryUtils.closeSession:(Lorg/hibernate/Session;)V
     682: aload_3
     683: aconst_null
     684: invokevirtual #51                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.setSessionHolder:(Lorg/springframework/orm/hibernate5/SessionHolder;)V
     687: goto          733
     690: astore        6
     692: aload_0
     693: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
     696: ldc           #123                // String Could not rollback Session after failed transaction begin
     698: aload         5
     700: invokeinterface #124,  3          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     705: aload         4
     707: invokestatic  #122                // Method org/springframework/orm/hibernate5/SessionFactoryUtils.closeSession:(Lorg/hibernate/Session;)V
     710: aload_3
     711: aconst_null
     712: invokevirtual #51                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.setSessionHolder:(Lorg/springframework/orm/hibernate5/SessionHolder;)V
     715: goto          733
     718: astore        9
     720: aload         4
     722: invokestatic  #122                // Method org/springframework/orm/hibernate5/SessionFactoryUtils.closeSession:(Lorg/hibernate/Session;)V
     725: aload_3
     726: aconst_null
     727: invokevirtual #51                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.setSessionHolder:(Lorg/springframework/orm/hibernate5/SessionHolder;)V
     730: aload         9
     732: athrow
     733: new           #125                // class org/springframework/transaction/CannotCreateTransactionException
     736: dup
     737: ldc           #126                // String Could not open Hibernate Session for transaction
     739: aload         5
     741: invokespecial #127                // Method org/springframework/transaction/CannotCreateTransactionException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     744: athrow
     745: return
    Exception table:
       from    to  target type
          35   630   633   Class java/lang/Throwable
         642   677   690   Class java/lang/Throwable
         642   677   718   any
         690   705   718   any
         718   720   718   any

  protected java.lang.Object doSuspend(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #40                 // class org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject
       4: astore_2
       5: aload_2
       6: aconst_null
       7: invokevirtual #51                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.setSessionHolder:(Lorg/springframework/orm/hibernate5/SessionHolder;)V
      10: aload_0
      11: invokevirtual #39                 // Method obtainSessionFactory:()Lorg/hibernate/SessionFactory;
      14: invokestatic  #128                // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #45                 // class org/springframework/orm/hibernate5/SessionHolder
      20: astore_3
      21: aload_2
      22: aconst_null
      23: invokevirtual #61                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.setConnectionHolder:(Lorg/springframework/jdbc/datasource/ConnectionHolder;)V
      26: aconst_null
      27: astore        4
      29: aload_0
      30: invokevirtual #26                 // Method getDataSource:()Ljavax/sql/DataSource;
      33: ifnull        48
      36: aload_0
      37: invokevirtual #26                 // Method getDataSource:()Ljavax/sql/DataSource;
      40: invokestatic  #128                // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #60                 // class org/springframework/jdbc/datasource/ConnectionHolder
      46: astore        4
      48: new           #129                // class org/springframework/orm/hibernate5/HibernateTransactionManager$SuspendedResourcesHolder
      51: dup
      52: aload_3
      53: aload         4
      55: aconst_null
      56: invokespecial #130                // Method org/springframework/orm/hibernate5/HibernateTransactionManager$SuspendedResourcesHolder."<init>":(Lorg/springframework/orm/hibernate5/SessionHolder;Lorg/springframework/jdbc/datasource/ConnectionHolder;Lorg/springframework/orm/hibernate5/HibernateTransactionManager$1;)V
      59: areturn

  protected void doResume(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method obtainSessionFactory:()Lorg/hibernate/SessionFactory;
       4: astore_3
       5: aload_2
       6: checkcast     #129                // class org/springframework/orm/hibernate5/HibernateTransactionManager$SuspendedResourcesHolder
       9: astore        4
      11: aload_3
      12: invokestatic  #131                // Method org/springframework/transaction/support/TransactionSynchronizationManager.hasResource:(Ljava/lang/Object;)Z
      15: ifeq          23
      18: aload_3
      19: invokestatic  #128                // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: aload_3
      24: aload         4
      26: invokestatic  #132                // Method org/springframework/orm/hibernate5/HibernateTransactionManager$SuspendedResourcesHolder.access$200:(Lorg/springframework/orm/hibernate5/HibernateTransactionManager$SuspendedResourcesHolder;)Lorg/springframework/orm/hibernate5/SessionHolder;
      29: invokestatic  #115                // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
      32: aload_0
      33: invokevirtual #26                 // Method getDataSource:()Ljavax/sql/DataSource;
      36: ifnull        59
      39: aload         4
      41: invokestatic  #133                // Method org/springframework/orm/hibernate5/HibernateTransactionManager$SuspendedResourcesHolder.access$300:(Lorg/springframework/orm/hibernate5/HibernateTransactionManager$SuspendedResourcesHolder;)Lorg/springframework/jdbc/datasource/ConnectionHolder;
      44: ifnull        59
      47: aload_0
      48: invokevirtual #26                 // Method getDataSource:()Ljavax/sql/DataSource;
      51: aload         4
      53: invokestatic  #133                // Method org/springframework/orm/hibernate5/HibernateTransactionManager$SuspendedResourcesHolder.access$300:(Lorg/springframework/orm/hibernate5/HibernateTransactionManager$SuspendedResourcesHolder;)Lorg/springframework/jdbc/datasource/ConnectionHolder;
      56: invokestatic  #115                // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
      59: return

  protected void doCommit(org.springframework.transaction.support.DefaultTransactionStatus);
    Code:
       0: aload_1
       1: invokevirtual #134                // Method org/springframework/transaction/support/DefaultTransactionStatus.getTransaction:()Ljava/lang/Object;
       4: checkcast     #40                 // class org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject
       7: astore_2
       8: aload_2
       9: invokevirtual #71                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate5/SessionHolder;
      12: invokevirtual #135                // Method org/springframework/orm/hibernate5/SessionHolder.getTransaction:()Lorg/hibernate/Transaction;
      15: astore_3
      16: aload_3
      17: ifnull        24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ldc           #136                // String No Hibernate transaction
      27: invokestatic  #10                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      30: aload_1
      31: invokevirtual #137                // Method org/springframework/transaction/support/DefaultTransactionStatus.isDebug:()Z
      34: ifeq          76
      37: aload_0
      38: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
      41: new           #30                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #138                // String Committing Hibernate transaction on Session [
      50: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_2
      54: invokevirtual #71                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate5/SessionHolder;
      57: invokevirtual #48                 // Method org/springframework/orm/hibernate5/SessionHolder.getSession:()Lorg/hibernate/Session;
      60: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: ldc           #82                 // String ]
      65: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokeinterface #50,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      76: aload_3
      77: invokeinterface #139,  1          // InterfaceMethod org/hibernate/Transaction.commit:()V
      82: goto          137
      85: astore        4
      87: new           #141                // class org/springframework/transaction/TransactionSystemException
      90: dup
      91: ldc           #142                // String Could not commit Hibernate transaction
      93: aload         4
      95: invokespecial #143                // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      98: athrow
      99: astore        4
     101: aload_0
     102: aload         4
     104: invokevirtual #144                // Method convertHibernateAccessException:(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
     107: athrow
     108: astore        4
     110: aload         4
     112: invokevirtual #146                // Method javax/persistence/PersistenceException.getCause:()Ljava/lang/Throwable;
     115: instanceof    #56                 // class org/hibernate/HibernateException
     118: ifeq          134
     121: aload_0
     122: aload         4
     124: invokevirtual #146                // Method javax/persistence/PersistenceException.getCause:()Ljava/lang/Throwable;
     127: checkcast     #56                 // class org/hibernate/HibernateException
     130: invokevirtual #144                // Method convertHibernateAccessException:(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
     133: athrow
     134: aload         4
     136: athrow
     137: return
    Exception table:
       from    to  target type
          76    82    85   Class org/hibernate/TransactionException
          76    82    99   Class org/hibernate/HibernateException
          76    82   108   Class javax/persistence/PersistenceException

  protected void doRollback(org.springframework.transaction.support.DefaultTransactionStatus);
    Code:
       0: aload_1
       1: invokevirtual #134                // Method org/springframework/transaction/support/DefaultTransactionStatus.getTransaction:()Ljava/lang/Object;
       4: checkcast     #40                 // class org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject
       7: astore_2
       8: aload_2
       9: invokevirtual #71                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate5/SessionHolder;
      12: invokevirtual #135                // Method org/springframework/orm/hibernate5/SessionHolder.getTransaction:()Lorg/hibernate/Transaction;
      15: astore_3
      16: aload_3
      17: ifnull        24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ldc           #136                // String No Hibernate transaction
      27: invokestatic  #10                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      30: aload_1
      31: invokevirtual #137                // Method org/springframework/transaction/support/DefaultTransactionStatus.isDebug:()Z
      34: ifeq          76
      37: aload_0
      38: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
      41: new           #30                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #147                // String Rolling back Hibernate transaction on Session [
      50: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_2
      54: invokevirtual #71                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate5/SessionHolder;
      57: invokevirtual #48                 // Method org/springframework/orm/hibernate5/SessionHolder.getSession:()Lorg/hibernate/Session;
      60: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: ldc           #82                 // String ]
      65: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokeinterface #50,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      76: aload_3
      77: invokeinterface #121,  1          // InterfaceMethod org/hibernate/Transaction.rollback:()V
      82: aload_2
      83: invokevirtual #87                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.isNewSession:()Z
      86: ifne          194
      89: aload_0
      90: getfield      #5                  // Field hibernateManagedSession:Z
      93: ifne          194
      96: aload_2
      97: invokevirtual #71                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate5/SessionHolder;
     100: invokevirtual #48                 // Method org/springframework/orm/hibernate5/SessionHolder.getSession:()Lorg/hibernate/Session;
     103: invokeinterface #148,  1          // InterfaceMethod org/hibernate/Session.clear:()V
     108: goto          194
     111: astore        4
     113: new           #141                // class org/springframework/transaction/TransactionSystemException
     116: dup
     117: ldc           #149                // String Could not roll back Hibernate transaction
     119: aload         4
     121: invokespecial #143                // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     124: athrow
     125: astore        4
     127: aload_0
     128: aload         4
     130: invokevirtual #144                // Method convertHibernateAccessException:(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
     133: athrow
     134: astore        4
     136: aload         4
     138: invokevirtual #146                // Method javax/persistence/PersistenceException.getCause:()Ljava/lang/Throwable;
     141: instanceof    #56                 // class org/hibernate/HibernateException
     144: ifeq          160
     147: aload_0
     148: aload         4
     150: invokevirtual #146                // Method javax/persistence/PersistenceException.getCause:()Ljava/lang/Throwable;
     153: checkcast     #56                 // class org/hibernate/HibernateException
     156: invokevirtual #144                // Method convertHibernateAccessException:(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
     159: athrow
     160: aload         4
     162: athrow
     163: astore        5
     165: aload_2
     166: invokevirtual #87                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.isNewSession:()Z
     169: ifne          191
     172: aload_0
     173: getfield      #5                  // Field hibernateManagedSession:Z
     176: ifne          191
     179: aload_2
     180: invokevirtual #71                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate5/SessionHolder;
     183: invokevirtual #48                 // Method org/springframework/orm/hibernate5/SessionHolder.getSession:()Lorg/hibernate/Session;
     186: invokeinterface #148,  1          // InterfaceMethod org/hibernate/Session.clear:()V
     191: aload         5
     193: athrow
     194: return
    Exception table:
       from    to  target type
          76    82   111   Class org/hibernate/TransactionException
          76    82   125   Class org/hibernate/HibernateException
          76    82   134   Class javax/persistence/PersistenceException
          76    82   163   any
         111   165   163   any

  protected void doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus);
    Code:
       0: aload_1
       1: invokevirtual #134                // Method org/springframework/transaction/support/DefaultTransactionStatus.getTransaction:()Ljava/lang/Object;
       4: checkcast     #40                 // class org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject
       7: astore_2
       8: aload_1
       9: invokevirtual #137                // Method org/springframework/transaction/support/DefaultTransactionStatus.isDebug:()Z
      12: ifeq          54
      15: aload_0
      16: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
      19: new           #30                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #150                // String Setting Hibernate transaction on Session [
      28: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_2
      32: invokevirtual #71                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate5/SessionHolder;
      35: invokevirtual #48                 // Method org/springframework/orm/hibernate5/SessionHolder.getSession:()Lorg/hibernate/Session;
      38: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: ldc           #151                // String ] rollback-only
      43: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokeinterface #50,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      54: aload_2
      55: invokevirtual #152                // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.setRollbackOnly:()V
      58: return

  protected void doCleanupAfterCompletion(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #40                 // class org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject
       4: astore_2
       5: aload_2
       6: invokevirtual #116                // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.isNewSessionHolder:()Z
       9: ifeq          20
      12: aload_0
      13: invokevirtual #39                 // Method obtainSessionFactory:()Lorg/hibernate/SessionFactory;
      16: invokestatic  #128                // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_0
      21: invokevirtual #26                 // Method getDataSource:()Ljavax/sql/DataSource;
      24: ifnull        35
      27: aload_0
      28: invokevirtual #26                 // Method getDataSource:()Ljavax/sql/DataSource;
      31: invokestatic  #128                // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_2
      36: invokevirtual #71                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate5/SessionHolder;
      39: invokevirtual #48                 // Method org/springframework/orm/hibernate5/SessionHolder.getSession:()Lorg/hibernate/Session;
      42: astore_3
      43: aload_0
      44: getfield      #3                  // Field prepareConnection:Z
      47: ifeq          137
      50: aload_0
      51: aload_3
      52: invokevirtual #153                // Method isPhysicallyConnected:(Lorg/hibernate/Session;)Z
      55: ifeq          137
      58: aload_3
      59: checkcast     #83                 // class org/hibernate/engine/spi/SessionImplementor
      62: invokeinterface #84,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.connection:()Ljava/sql/Connection;
      67: astore        4
      69: aload_2
      70: invokevirtual #154                // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.getPreviousHoldability:()Ljava/lang/Integer;
      73: astore        5
      75: aload         5
      77: ifnull        92
      80: aload         4
      82: aload         5
      84: invokevirtual #155                // Method java/lang/Integer.intValue:()I
      87: invokeinterface #92,  2           // InterfaceMethod java/sql/Connection.setHoldability:(I)V
      92: aload         4
      94: aload_2
      95: invokevirtual #156                // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.getPreviousIsolationLevel:()Ljava/lang/Integer;
      98: invokestatic  #157                // Method org/springframework/jdbc/datasource/DataSourceUtils.resetConnectionAfterTransaction:(Ljava/sql/Connection;Ljava/lang/Integer;)V
     101: goto          137
     104: astore        4
     106: aload_0
     107: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
     110: ldc           #158                // String Could not access JDBC Connection of Hibernate Session
     112: aload         4
     114: invokeinterface #124,  3          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     119: goto          137
     122: astore        4
     124: aload_0
     125: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
     128: ldc           #159                // String Could not reset JDBC Connection after transaction
     130: aload         4
     132: invokeinterface #124,  3          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     137: aload_2
     138: invokevirtual #87                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.isNewSession:()Z
     141: ifeq          196
     144: aload_0
     145: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
     148: invokeinterface #46,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     153: ifeq          189
     156: aload_0
     157: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
     160: new           #30                 // class java/lang/StringBuilder
     163: dup
     164: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
     167: ldc           #160                // String Closing Hibernate Session [
     169: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: aload_3
     173: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     176: ldc           #161                // String ] after transaction
     178: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     181: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     184: invokeinterface #50,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     189: aload_3
     190: invokestatic  #122                // Method org/springframework/orm/hibernate5/SessionFactoryUtils.closeSession:(Lorg/hibernate/Session;)V
     193: goto          283
     196: aload_0
     197: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
     200: invokeinterface #46,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     205: ifeq          241
     208: aload_0
     209: getfield      #28                 // Field logger:Lorg/apache/commons/logging/Log;
     212: new           #30                 // class java/lang/StringBuilder
     215: dup
     216: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
     219: ldc           #162                // String Not closing pre-bound Hibernate Session [
     221: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     224: aload_3
     225: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     228: ldc           #161                // String ] after transaction
     230: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     233: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     236: invokeinterface #50,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     241: aload_2
     242: invokevirtual #71                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate5/SessionHolder;
     245: invokevirtual #163                // Method org/springframework/orm/hibernate5/SessionHolder.getPreviousFlushMode:()Lorg/hibernate/FlushMode;
     248: ifnull        264
     251: aload_3
     252: aload_2
     253: invokevirtual #71                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate5/SessionHolder;
     256: invokevirtual #163                // Method org/springframework/orm/hibernate5/SessionHolder.getPreviousFlushMode:()Lorg/hibernate/FlushMode;
     259: invokeinterface #101,  2          // InterfaceMethod org/hibernate/Session.setFlushMode:(Lorg/hibernate/FlushMode;)V
     264: aload_0
     265: getfield      #4                  // Field allowResultAccessAfterCompletion:Z
     268: ifne          283
     271: aload_0
     272: getfield      #5                  // Field hibernateManagedSession:Z
     275: ifne          283
     278: aload_0
     279: aload_3
     280: invokevirtual #164                // Method disconnectOnCompletion:(Lorg/hibernate/Session;)V
     283: aload_2
     284: invokevirtual #71                 // Method org/springframework/orm/hibernate5/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate5/SessionHolder;
     287: invokevirtual #165                // Method org/springframework/orm/hibernate5/SessionHolder.clear:()V
     290: return
    Exception table:
       from    to  target type
          58   101   104   Class org/hibernate/HibernateException
          58   101   122   Class java/lang/Throwable

  protected void disconnectOnCompletion(org.hibernate.Session);
    Code:
       0: aload_1
       1: invokeinterface #166,  1          // InterfaceMethod org/hibernate/Session.disconnect:()Ljava/sql/Connection;
       6: pop
       7: return

  protected boolean isSameConnectionForEntireSession(org.hibernate.Session);
    Code:
       0: aload_1
       1: instanceof    #83                 // class org/hibernate/engine/spi/SessionImplementor
       4: ifne          9
       7: iconst_1
       8: ireturn
       9: aload_1
      10: checkcast     #83                 // class org/hibernate/engine/spi/SessionImplementor
      13: invokeinterface #167,  1          // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.getJdbcCoordinator:()Lorg/hibernate/engine/jdbc/spi/JdbcCoordinator;
      18: invokeinterface #168,  1          // InterfaceMethod org/hibernate/engine/jdbc/spi/JdbcCoordinator.getConnectionReleaseMode:()Lorg/hibernate/ConnectionReleaseMode;
      23: astore_2
      24: getstatic     #169                // Field org/hibernate/ConnectionReleaseMode.ON_CLOSE:Lorg/hibernate/ConnectionReleaseMode;
      27: aload_2
      28: invokevirtual #170                // Method org/hibernate/ConnectionReleaseMode.equals:(Ljava/lang/Object;)Z
      31: ireturn

  protected boolean isPhysicallyConnected(org.hibernate.Session);
    Code:
       0: aload_1
       1: instanceof    #83                 // class org/hibernate/engine/spi/SessionImplementor
       4: ifne          14
       7: aload_1
       8: invokeinterface #171,  1          // InterfaceMethod org/hibernate/Session.isConnected:()Z
      13: ireturn
      14: aload_1
      15: checkcast     #83                 // class org/hibernate/engine/spi/SessionImplementor
      18: invokeinterface #167,  1          // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.getJdbcCoordinator:()Lorg/hibernate/engine/jdbc/spi/JdbcCoordinator;
      23: invokeinterface #172,  1          // InterfaceMethod org/hibernate/engine/jdbc/spi/JdbcCoordinator.getLogicalConnection:()Lorg/hibernate/resource/jdbc/spi/LogicalConnectionImplementor;
      28: invokeinterface #173,  1          // InterfaceMethod org/hibernate/resource/jdbc/spi/LogicalConnectionImplementor.isPhysicallyConnected:()Z
      33: ireturn

  protected org.springframework.dao.DataAccessException convertHibernateAccessException(org.hibernate.HibernateException);
    Code:
       0: aload_1
       1: invokestatic  #174                // Method org/springframework/orm/hibernate5/SessionFactoryUtils.convertHibernateAccessException:(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
       4: areturn
}
