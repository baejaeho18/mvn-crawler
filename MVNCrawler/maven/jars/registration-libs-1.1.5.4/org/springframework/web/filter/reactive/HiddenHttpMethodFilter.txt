Compiled from "HiddenHttpMethodFilter.java"
public class org.springframework.web.filter.reactive.HiddenHttpMethodFilter implements org.springframework.web.server.WebFilter {
  public static final java.lang.String DEFAULT_METHOD_PARAMETER_NAME;

  private java.lang.String methodParamName;

  public org.springframework.web.filter.reactive.HiddenHttpMethodFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // String _method
       7: putfield      #4                  // Field methodParamName:Ljava/lang/String;
      10: return

  public void setMethodParamName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #5                  // String \'methodParamName\' must not be empty
       3: invokestatic  #6                  // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #4                  // Field methodParamName:Ljava/lang/String;
      11: return

  public reactor.core.publisher.Mono<java.lang.Void> filter(org.springframework.web.server.ServerWebExchange, org.springframework.web.server.WebFilterChain);
    Code:
       0: aload_1
       1: invokeinterface #7,  1            // InterfaceMethod org/springframework/web/server/ServerWebExchange.getRequest:()Lorg/springframework/http/server/reactive/ServerHttpRequest;
       6: invokeinterface #8,  1            // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getMethod:()Lorg/springframework/http/HttpMethod;
      11: getstatic     #9                  // Field org/springframework/http/HttpMethod.POST:Lorg/springframework/http/HttpMethod;
      14: if_acmpeq     25
      17: aload_2
      18: aload_1
      19: invokeinterface #10,  2           // InterfaceMethod org/springframework/web/server/WebFilterChain.filter:(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
      24: areturn
      25: aload_1
      26: invokeinterface #11,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getFormData:()Lreactor/core/publisher/Mono;
      31: aload_0
      32: aload_1
      33: invokedynamic #12,  0             // InvokeDynamic #0:apply:(Lorg/springframework/web/filter/reactive/HiddenHttpMethodFilter;Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/function/Function;
      38: invokevirtual #13                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      41: aload_2
      42: dup
      43: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      46: pop
      47: invokedynamic #15,  0             // InvokeDynamic #1:apply:(Lorg/springframework/web/server/WebFilterChain;)Ljava/util/function/Function;
      52: invokevirtual #16                 // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      55: areturn

  private org.springframework.web.server.ServerWebExchange mapExchange(org.springframework.web.server.ServerWebExchange, java.lang.String);
    Code:
       0: aload_2
       1: getstatic     #17                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
       4: invokevirtual #18                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
       7: invokestatic  #19                 // Method org/springframework/http/HttpMethod.resolve:(Ljava/lang/String;)Lorg/springframework/http/HttpMethod;
      10: astore_3
      11: aload_3
      12: aload_2
      13: invokedynamic #20,  0             // InvokeDynamic #2:get:(Ljava/lang/String;)Ljava/util/function/Supplier;
      18: invokestatic  #21                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/util/function/Supplier;)V
      21: aload_1
      22: invokeinterface #22,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.mutate:()Lorg/springframework/web/server/ServerWebExchange$Builder;
      27: aload_3
      28: invokedynamic #23,  0             // InvokeDynamic #3:accept:(Lorg/springframework/http/HttpMethod;)Ljava/util/function/Consumer;
      33: invokeinterface #24,  2           // InterfaceMethod org/springframework/web/server/ServerWebExchange$Builder.request:(Ljava/util/function/Consumer;)Lorg/springframework/web/server/ServerWebExchange$Builder;
      38: invokeinterface #25,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange$Builder.build:()Lorg/springframework/web/server/ServerWebExchange;
      43: areturn

  private static void lambda$mapExchange$2(org.springframework.http.HttpMethod, org.springframework.http.server.reactive.ServerHttpRequest$Builder);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #26,  2           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest$Builder.method:(Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/server/reactive/ServerHttpRequest$Builder;
       7: pop
       8: return

  private static java.lang.String lambda$mapExchange$1(java.lang.String);
    Code:
       0: new           #27                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #29                 // String HttpMethod \'
       9: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #31                 // String \' not supported
      18: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: areturn

  private org.springframework.web.server.ServerWebExchange lambda$filter$0(org.springframework.web.server.ServerWebExchange, org.springframework.util.MultiValueMap);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #4                  // Field methodParamName:Ljava/lang/String;
       5: invokeinterface #33,  2           // InterfaceMethod org/springframework/util/MultiValueMap.getFirst:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #34                 // class java/lang/String
      13: astore_3
      14: aload_3
      15: invokestatic  #35                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      18: ifeq          30
      21: aload_0
      22: aload_1
      23: aload_3
      24: invokespecial #36                 // Method mapExchange:(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/String;)Lorg/springframework/web/server/ServerWebExchange;
      27: goto          31
      30: aload_1
      31: areturn
}
