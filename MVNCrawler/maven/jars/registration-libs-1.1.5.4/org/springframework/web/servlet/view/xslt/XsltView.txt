Compiled from "XsltView.java"
public class org.springframework.web.servlet.view.xslt.XsltView extends org.springframework.web.servlet.view.AbstractUrlBasedView {
  private java.lang.Class<? extends javax.xml.transform.TransformerFactory> transformerFactoryClass;

  private java.lang.String sourceKey;

  private javax.xml.transform.URIResolver uriResolver;

  private javax.xml.transform.ErrorListener errorListener;

  private boolean indent;

  private java.util.Properties outputProperties;

  private boolean cacheTemplates;

  private javax.xml.transform.TransformerFactory transformerFactory;

  private javax.xml.transform.Templates cachedTemplates;

  public org.springframework.web.servlet.view.xslt.XsltView();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/servlet/view/AbstractUrlBasedView."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/util/xml/SimpleTransformErrorListener
       8: dup
       9: aload_0
      10: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
      13: invokespecial #4                  // Method org/springframework/util/xml/SimpleTransformErrorListener."<init>":(Lorg/apache/commons/logging/Log;)V
      16: putfield      #5                  // Field errorListener:Ljavax/xml/transform/ErrorListener;
      19: aload_0
      20: iconst_1
      21: putfield      #6                  // Field indent:Z
      24: aload_0
      25: iconst_1
      26: putfield      #7                  // Field cacheTemplates:Z
      29: return

  public void setTransformerFactoryClass(java.lang.Class<? extends javax.xml.transform.TransformerFactory>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field transformerFactoryClass:Ljava/lang/Class;
       5: return

  public void setSourceKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field sourceKey:Ljava/lang/String;
       5: return

  public void setUriResolver(javax.xml.transform.URIResolver);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field uriResolver:Ljavax/xml/transform/URIResolver;
       5: return

  public void setErrorListener(javax.xml.transform.ErrorListener);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        9
       5: aload_1
       6: goto          20
       9: new           #2                  // class org/springframework/util/xml/SimpleTransformErrorListener
      12: dup
      13: aload_0
      14: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
      17: invokespecial #4                  // Method org/springframework/util/xml/SimpleTransformErrorListener."<init>":(Lorg/apache/commons/logging/Log;)V
      20: putfield      #5                  // Field errorListener:Ljavax/xml/transform/ErrorListener;
      23: return

  public void setIndent(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field indent:Z
       5: return

  public void setOutputProperties(java.util.Properties);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field outputProperties:Ljava/util/Properties;
       5: return

  public void setCacheTemplates(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field cacheTemplates:Z
       5: return

  protected void initApplicationContext() throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #8                  // Field transformerFactoryClass:Ljava/lang/Class;
       6: invokevirtual #12                 // Method newTransformerFactory:(Ljava/lang/Class;)Ljavax/xml/transform/TransformerFactory;
       9: putfield      #13                 // Field transformerFactory:Ljavax/xml/transform/TransformerFactory;
      12: aload_0
      13: getfield      #13                 // Field transformerFactory:Ljavax/xml/transform/TransformerFactory;
      16: aload_0
      17: getfield      #5                  // Field errorListener:Ljavax/xml/transform/ErrorListener;
      20: invokevirtual #14                 // Method javax/xml/transform/TransformerFactory.setErrorListener:(Ljavax/xml/transform/ErrorListener;)V
      23: aload_0
      24: getfield      #10                 // Field uriResolver:Ljavax/xml/transform/URIResolver;
      27: ifnull        41
      30: aload_0
      31: getfield      #13                 // Field transformerFactory:Ljavax/xml/transform/TransformerFactory;
      34: aload_0
      35: getfield      #10                 // Field uriResolver:Ljavax/xml/transform/URIResolver;
      38: invokevirtual #15                 // Method javax/xml/transform/TransformerFactory.setURIResolver:(Ljavax/xml/transform/URIResolver;)V
      41: aload_0
      42: getfield      #7                  // Field cacheTemplates:Z
      45: ifeq          56
      48: aload_0
      49: aload_0
      50: invokespecial #16                 // Method loadTemplates:()Ljavax/xml/transform/Templates;
      53: putfield      #17                 // Field cachedTemplates:Ljavax/xml/transform/Templates;
      56: return

  protected javax.xml.transform.TransformerFactory newTransformerFactory(java.lang.Class<? extends javax.xml.transform.TransformerFactory>);
    Code:
       0: aload_1
       1: ifnull        35
       4: aload_1
       5: iconst_0
       6: anewarray     #18                 // class java/lang/Class
       9: invokestatic  #19                 // Method org/springframework/util/ReflectionUtils.accessibleConstructor:(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      12: iconst_0
      13: anewarray     #20                 // class java/lang/Object
      16: invokevirtual #21                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #22                 // class javax/xml/transform/TransformerFactory
      22: areturn
      23: astore_2
      24: new           #24                 // class javax/xml/transform/TransformerFactoryConfigurationError
      27: dup
      28: aload_2
      29: ldc           #25                 // String Could not instantiate TransformerFactory
      31: invokespecial #26                 // Method javax/xml/transform/TransformerFactoryConfigurationError."<init>":(Ljava/lang/Exception;Ljava/lang/String;)V
      34: athrow
      35: invokestatic  #27                 // Method javax/xml/transform/TransformerFactory.newInstance:()Ljavax/xml/transform/TransformerFactory;
      38: areturn
    Exception table:
       from    to  target type
           4    22    23   Class java/lang/Exception

  protected final javax.xml.transform.TransformerFactory getTransformerFactory();
    Code:
       0: aload_0
       1: getfield      #13                 // Field transformerFactory:Ljavax/xml/transform/TransformerFactory;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #28                 // String No TransformerFactory available
      14: invokestatic  #29                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: getfield      #13                 // Field transformerFactory:Ljavax/xml/transform/TransformerFactory;
      21: areturn

  protected void renderMergedOutputModel(java.util.Map<java.lang.String, java.lang.Object>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #17                 // Field cachedTemplates:Ljavax/xml/transform/Templates;
       4: astore        4
       6: aload         4
       8: ifnonnull     17
      11: aload_0
      12: invokespecial #16                 // Method loadTemplates:()Ljavax/xml/transform/Templates;
      15: astore        4
      17: aload_0
      18: aload         4
      20: invokevirtual #30                 // Method createTransformer:(Ljavax/xml/transform/Templates;)Ljavax/xml/transform/Transformer;
      23: astore        5
      25: aload_0
      26: aload_1
      27: aload_3
      28: aload         5
      30: invokevirtual #31                 // Method configureTransformer:(Ljava/util/Map;Ljavax/servlet/http/HttpServletResponse;Ljavax/xml/transform/Transformer;)V
      33: aload_0
      34: aload_1
      35: aload_3
      36: aload         5
      38: invokevirtual #32                 // Method configureResponse:(Ljava/util/Map;Ljavax/servlet/http/HttpServletResponse;Ljavax/xml/transform/Transformer;)V
      41: aconst_null
      42: astore        6
      44: aload_0
      45: aload_1
      46: invokevirtual #33                 // Method locateSource:(Ljava/util/Map;)Ljavax/xml/transform/Source;
      49: astore        6
      51: aload         6
      53: ifnonnull     83
      56: new           #34                 // class java/lang/IllegalArgumentException
      59: dup
      60: new           #35                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      67: ldc           #37                 // String Unable to locate Source object in model:
      69: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_1
      73: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      76: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      82: athrow
      83: aload         5
      85: aload         6
      87: aload_0
      88: aload_3
      89: invokevirtual #42                 // Method createResult:(Ljavax/servlet/http/HttpServletResponse;)Ljavax/xml/transform/Result;
      92: invokevirtual #43                 // Method javax/xml/transform/Transformer.transform:(Ljavax/xml/transform/Source;Ljavax/xml/transform/Result;)V
      95: aload_0
      96: aload         6
      98: invokespecial #44                 // Method closeSourceIfNecessary:(Ljavax/xml/transform/Source;)V
     101: goto          115
     104: astore        7
     106: aload_0
     107: aload         6
     109: invokespecial #44                 // Method closeSourceIfNecessary:(Ljavax/xml/transform/Source;)V
     112: aload         7
     114: athrow
     115: return
    Exception table:
       from    to  target type
          44    95   104   any
         104   106   104   any

  protected javax.xml.transform.Result createResult(javax.servlet.http.HttpServletResponse) throws java.lang.Exception;
    Code:
       0: new           #45                 // class javax/xml/transform/stream/StreamResult
       3: dup
       4: aload_1
       5: invokeinterface #46,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getOutputStream:()Ljavax/servlet/ServletOutputStream;
      10: invokespecial #47                 // Method javax/xml/transform/stream/StreamResult."<init>":(Ljava/io/OutputStream;)V
      13: areturn

  protected javax.xml.transform.Source locateSource(java.util.Map<java.lang.String, java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #9                  // Field sourceKey:Ljava/lang/String;
       4: ifnull        22
       7: aload_0
       8: aload_1
       9: aload_0
      10: getfield      #9                  // Field sourceKey:Ljava/lang/String;
      13: invokeinterface #48,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: invokevirtual #49                 // Method convertSource:(Ljava/lang/Object;)Ljavax/xml/transform/Source;
      21: areturn
      22: aload_1
      23: invokeinterface #50,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      28: aload_0
      29: invokevirtual #51                 // Method getSourceTypes:()[Ljava/lang/Class;
      32: invokestatic  #52                 // Method org/springframework/util/CollectionUtils.findValueOfType:(Ljava/util/Collection;[Ljava/lang/Class;)Ljava/lang/Object;
      35: astore_2
      36: aload_2
      37: ifnull        48
      40: aload_0
      41: aload_2
      42: invokevirtual #49                 // Method convertSource:(Ljava/lang/Object;)Ljavax/xml/transform/Source;
      45: goto          49
      48: aconst_null
      49: areturn

  protected java.lang.Class<?>[] getSourceTypes();
    Code:
       0: bipush        6
       2: anewarray     #18                 // class java/lang/Class
       5: dup
       6: iconst_0
       7: ldc           #53                 // class javax/xml/transform/Source
       9: aastore
      10: dup
      11: iconst_1
      12: ldc           #54                 // class org/w3c/dom/Document
      14: aastore
      15: dup
      16: iconst_2
      17: ldc           #55                 // class org/w3c/dom/Node
      19: aastore
      20: dup
      21: iconst_3
      22: ldc           #56                 // class java/io/Reader
      24: aastore
      25: dup
      26: iconst_4
      27: ldc           #57                 // class java/io/InputStream
      29: aastore
      30: dup
      31: iconst_5
      32: ldc           #58                 // class org/springframework/core/io/Resource
      34: aastore
      35: areturn

  protected javax.xml.transform.Source convertSource(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_1
       1: instanceof    #53                 // class javax/xml/transform/Source
       4: ifeq          12
       7: aload_1
       8: checkcast     #53                 // class javax/xml/transform/Source
      11: areturn
      12: aload_1
      13: instanceof    #54                 // class org/w3c/dom/Document
      16: ifeq          36
      19: new           #59                 // class javax/xml/transform/dom/DOMSource
      22: dup
      23: aload_1
      24: checkcast     #54                 // class org/w3c/dom/Document
      27: invokeinterface #60,  1           // InterfaceMethod org/w3c/dom/Document.getDocumentElement:()Lorg/w3c/dom/Element;
      32: invokespecial #61                 // Method javax/xml/transform/dom/DOMSource."<init>":(Lorg/w3c/dom/Node;)V
      35: areturn
      36: aload_1
      37: instanceof    #55                 // class org/w3c/dom/Node
      40: ifeq          55
      43: new           #59                 // class javax/xml/transform/dom/DOMSource
      46: dup
      47: aload_1
      48: checkcast     #55                 // class org/w3c/dom/Node
      51: invokespecial #61                 // Method javax/xml/transform/dom/DOMSource."<init>":(Lorg/w3c/dom/Node;)V
      54: areturn
      55: aload_1
      56: instanceof    #56                 // class java/io/Reader
      59: ifeq          74
      62: new           #62                 // class javax/xml/transform/stream/StreamSource
      65: dup
      66: aload_1
      67: checkcast     #56                 // class java/io/Reader
      70: invokespecial #63                 // Method javax/xml/transform/stream/StreamSource."<init>":(Ljava/io/Reader;)V
      73: areturn
      74: aload_1
      75: instanceof    #57                 // class java/io/InputStream
      78: ifeq          93
      81: new           #62                 // class javax/xml/transform/stream/StreamSource
      84: dup
      85: aload_1
      86: checkcast     #57                 // class java/io/InputStream
      89: invokespecial #64                 // Method javax/xml/transform/stream/StreamSource."<init>":(Ljava/io/InputStream;)V
      92: areturn
      93: aload_1
      94: instanceof    #58                 // class org/springframework/core/io/Resource
      97: ifeq          128
     100: aload_1
     101: checkcast     #58                 // class org/springframework/core/io/Resource
     104: astore_2
     105: new           #62                 // class javax/xml/transform/stream/StreamSource
     108: dup
     109: aload_2
     110: invokeinterface #65,  1           // InterfaceMethod org/springframework/core/io/Resource.getInputStream:()Ljava/io/InputStream;
     115: aload_2
     116: invokeinterface #66,  1           // InterfaceMethod org/springframework/core/io/Resource.getURI:()Ljava/net/URI;
     121: invokevirtual #67                 // Method java/net/URI.toASCIIString:()Ljava/lang/String;
     124: invokespecial #68                 // Method javax/xml/transform/stream/StreamSource."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
     127: areturn
     128: new           #34                 // class java/lang/IllegalArgumentException
     131: dup
     132: new           #35                 // class java/lang/StringBuilder
     135: dup
     136: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     139: ldc           #69                 // String Value \'
     141: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: aload_1
     145: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     148: ldc           #70                 // String \' cannot be converted to XSLT Source
     150: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     156: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     159: athrow

  protected void configureTransformer(java.util.Map<java.lang.String, java.lang.Object>, javax.servlet.http.HttpServletResponse, javax.xml.transform.Transformer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokevirtual #71                 // Method copyModelParameters:(Ljava/util/Map;Ljavax/xml/transform/Transformer;)V
       6: aload_0
       7: aload_3
       8: invokevirtual #72                 // Method copyOutputProperties:(Ljavax/xml/transform/Transformer;)V
      11: aload_0
      12: aload_3
      13: invokevirtual #73                 // Method configureIndentation:(Ljavax/xml/transform/Transformer;)V
      16: return

  protected final void configureIndentation(javax.xml.transform.Transformer);
    Code:
       0: aload_0
       1: getfield      #6                  // Field indent:Z
       4: ifeq          14
       7: aload_1
       8: invokestatic  #74                 // Method org/springframework/util/xml/TransformerUtils.enableIndenting:(Ljavax/xml/transform/Transformer;)V
      11: goto          18
      14: aload_1
      15: invokestatic  #75                 // Method org/springframework/util/xml/TransformerUtils.disableIndenting:(Ljavax/xml/transform/Transformer;)V
      18: return

  protected final void copyOutputProperties(javax.xml.transform.Transformer);
    Code:
       0: aload_0
       1: getfield      #11                 // Field outputProperties:Ljava/util/Properties;
       4: ifnull        50
       7: aload_0
       8: getfield      #11                 // Field outputProperties:Ljava/util/Properties;
      11: invokevirtual #76                 // Method java/util/Properties.propertyNames:()Ljava/util/Enumeration;
      14: astore_2
      15: aload_2
      16: invokeinterface #77,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      21: ifeq          50
      24: aload_2
      25: invokeinterface #78,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      30: checkcast     #79                 // class java/lang/String
      33: astore_3
      34: aload_1
      35: aload_3
      36: aload_0
      37: getfield      #11                 // Field outputProperties:Ljava/util/Properties;
      40: aload_3
      41: invokevirtual #80                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      44: invokevirtual #81                 // Method javax/xml/transform/Transformer.setOutputProperty:(Ljava/lang/String;Ljava/lang/String;)V
      47: goto          15
      50: return

  protected final void copyModelParameters(java.util.Map<java.lang.String, java.lang.Object>, javax.xml.transform.Transformer);
    Code:
       0: aload_1
       1: aload_2
       2: dup
       3: invokevirtual #82                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: pop
       7: invokedynamic #83,  0             // InvokeDynamic #0:accept:(Ljavax/xml/transform/Transformer;)Ljava/util/function/BiConsumer;
      12: invokeinterface #84,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      17: return

  protected void configureResponse(java.util.Map<java.lang.String, java.lang.Object>, javax.servlet.http.HttpServletResponse, javax.xml.transform.Transformer);
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method getContentType:()Ljava/lang/String;
       4: astore        4
       6: aload_3
       7: ldc           #87                 // String media-type
       9: invokevirtual #88                 // Method javax/xml/transform/Transformer.getOutputProperty:(Ljava/lang/String;)Ljava/lang/String;
      12: astore        5
      14: aload_3
      15: ldc           #89                 // String encoding
      17: invokevirtual #88                 // Method javax/xml/transform/Transformer.getOutputProperty:(Ljava/lang/String;)Ljava/lang/String;
      20: astore        6
      22: aload         5
      24: invokestatic  #90                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      27: ifeq          34
      30: aload         5
      32: astore        4
      34: aload         6
      36: invokestatic  #90                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      39: ifeq          87
      42: aload         4
      44: ifnull        87
      47: aload         4
      49: invokevirtual #91                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      52: ldc           #93                 // String ;charset=
      54: invokevirtual #94                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      57: ifne          87
      60: new           #35                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      67: aload         4
      69: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: ldc           #93                 // String ;charset=
      74: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload         6
      79: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: astore        4
      87: aload_2
      88: aload         4
      90: invokeinterface #95,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setContentType:(Ljava/lang/String;)V
      95: return

  private javax.xml.transform.Templates loadTemplates() throws org.springframework.context.ApplicationContextException;
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method getStylesheetSource:()Ljavax/xml/transform/Source;
       4: astore_1
       5: aload_0
       6: invokevirtual #97                 // Method getTransformerFactory:()Ljavax/xml/transform/TransformerFactory;
       9: aload_1
      10: invokevirtual #98                 // Method javax/xml/transform/TransformerFactory.newTemplates:(Ljavax/xml/transform/Source;)Ljavax/xml/transform/Templates;
      13: astore_2
      14: aload_0
      15: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
      18: invokeinterface #99,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      23: ifeq          59
      26: aload_0
      27: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
      30: new           #35                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #100                // String Loading templates \'
      39: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_2
      43: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      46: ldc           #101                // String \'
      48: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokeinterface #102,  2          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      59: aload_2
      60: astore_3
      61: aload_0
      62: aload_1
      63: invokespecial #44                 // Method closeSourceIfNecessary:(Ljavax/xml/transform/Source;)V
      66: aload_3
      67: areturn
      68: astore_2
      69: new           #104                // class org/springframework/context/ApplicationContextException
      72: dup
      73: new           #35                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      80: ldc           #105                // String Can\'t load stylesheet from \'
      82: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_0
      86: invokevirtual #106                // Method getUrl:()Ljava/lang/String;
      89: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #101                // String \'
      94: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: aload_2
     101: invokespecial #107                // Method org/springframework/context/ApplicationContextException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     104: athrow
     105: astore        4
     107: aload_0
     108: aload_1
     109: invokespecial #44                 // Method closeSourceIfNecessary:(Ljavax/xml/transform/Source;)V
     112: aload         4
     114: athrow
    Exception table:
       from    to  target type
           5    61    68   Class javax/xml/transform/TransformerConfigurationException
           5    61   105   any
          68   107   105   any

  protected javax.xml.transform.Transformer createTransformer(javax.xml.transform.Templates) throws javax.xml.transform.TransformerConfigurationException;
    Code:
       0: aload_1
       1: invokeinterface #108,  1          // InterfaceMethod javax/xml/transform/Templates.newTransformer:()Ljavax/xml/transform/Transformer;
       6: astore_2
       7: aload_0
       8: getfield      #10                 // Field uriResolver:Ljavax/xml/transform/URIResolver;
      11: ifnull        22
      14: aload_2
      15: aload_0
      16: getfield      #10                 // Field uriResolver:Ljavax/xml/transform/URIResolver;
      19: invokevirtual #109                // Method javax/xml/transform/Transformer.setURIResolver:(Ljavax/xml/transform/URIResolver;)V
      22: aload_2
      23: areturn

  protected javax.xml.transform.Source getStylesheetSource();
    Code:
       0: aload_0
       1: invokevirtual #106                // Method getUrl:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ldc           #110                // String \'url\' not set
      16: invokestatic  #29                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      19: aload_0
      20: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
      23: invokeinterface #99,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      28: ifeq          64
      31: aload_0
      32: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
      35: new           #35                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #111                // String Loading XSLT stylesheet from \'
      44: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_1
      48: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #101                // String \'
      53: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokeinterface #102,  2          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      64: aload_0
      65: invokevirtual #112                // Method obtainApplicationContext:()Lorg/springframework/context/ApplicationContext;
      68: aload_1
      69: invokeinterface #113,  2          // InterfaceMethod org/springframework/context/ApplicationContext.getResource:(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
      74: astore_2
      75: new           #62                 // class javax/xml/transform/stream/StreamSource
      78: dup
      79: aload_2
      80: invokeinterface #65,  1           // InterfaceMethod org/springframework/core/io/Resource.getInputStream:()Ljava/io/InputStream;
      85: aload_2
      86: invokeinterface #66,  1           // InterfaceMethod org/springframework/core/io/Resource.getURI:()Ljava/net/URI;
      91: invokevirtual #67                 // Method java/net/URI.toASCIIString:()Ljava/lang/String;
      94: invokespecial #68                 // Method javax/xml/transform/stream/StreamSource."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
      97: areturn
      98: astore_2
      99: new           #104                // class org/springframework/context/ApplicationContextException
     102: dup
     103: new           #35                 // class java/lang/StringBuilder
     106: dup
     107: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     110: ldc           #115                // String Can\'t load XSLT stylesheet from \'
     112: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: aload_1
     116: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: ldc           #101                // String \'
     121: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: aload_2
     128: invokespecial #107                // Method org/springframework/context/ApplicationContextException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     131: athrow
    Exception table:
       from    to  target type
          64    97    98   Class java/io/IOException

  private void closeSourceIfNecessary(javax.xml.transform.Source);
    Code:
       0: aload_1
       1: instanceof    #62                 // class javax/xml/transform/stream/StreamSource
       4: ifeq          48
       7: aload_1
       8: checkcast     #62                 // class javax/xml/transform/stream/StreamSource
      11: astore_2
      12: aload_2
      13: invokevirtual #116                // Method javax/xml/transform/stream/StreamSource.getReader:()Ljava/io/Reader;
      16: ifnull        30
      19: aload_2
      20: invokevirtual #116                // Method javax/xml/transform/stream/StreamSource.getReader:()Ljava/io/Reader;
      23: invokevirtual #117                // Method java/io/Reader.close:()V
      26: goto          30
      29: astore_3
      30: aload_2
      31: invokevirtual #118                // Method javax/xml/transform/stream/StreamSource.getInputStream:()Ljava/io/InputStream;
      34: ifnull        48
      37: aload_2
      38: invokevirtual #118                // Method javax/xml/transform/stream/StreamSource.getInputStream:()Ljava/io/InputStream;
      41: invokevirtual #119                // Method java/io/InputStream.close:()V
      44: goto          48
      47: astore_3
      48: return
    Exception table:
       from    to  target type
          19    26    29   Class java/io/IOException
          37    44    47   Class java/io/IOException
}
