Compiled from "ReactiveTypeHandler.java"
class org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler {
  private static final long STREAMING_TIMEOUT_VALUE;

  private static org.apache.commons.logging.Log logger;

  private final org.springframework.core.ReactiveAdapterRegistry reactiveRegistry;

  private final org.springframework.core.task.TaskExecutor taskExecutor;

  private final org.springframework.web.accept.ContentNegotiationManager contentNegotiationManager;

  public org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler();
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/springframework/core/ReactiveAdapterRegistry.getSharedInstance:()Lorg/springframework/core/ReactiveAdapterRegistry;
       4: new           #3                  // class org/springframework/core/task/SyncTaskExecutor
       7: dup
       8: invokespecial #4                  // Method org/springframework/core/task/SyncTaskExecutor."<init>":()V
      11: new           #5                  // class org/springframework/web/accept/ContentNegotiationManager
      14: dup
      15: invokespecial #6                  // Method org/springframework/web/accept/ContentNegotiationManager."<init>":()V
      18: invokespecial #7                  // Method "<init>":(Lorg/springframework/core/ReactiveAdapterRegistry;Lorg/springframework/core/task/TaskExecutor;Lorg/springframework/web/accept/ContentNegotiationManager;)V
      21: return

  org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler(org.springframework.core.ReactiveAdapterRegistry, org.springframework.core.task.TaskExecutor, org.springframework.web.accept.ContentNegotiationManager);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #9                  // String ReactiveAdapterRegistry is required
       7: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #11                 // String TaskExecutor is required
      13: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_3
      17: ldc           #12                 // String ContentNegotiationManager is required
      19: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_0
      23: aload_1
      24: putfield      #13                 // Field reactiveRegistry:Lorg/springframework/core/ReactiveAdapterRegistry;
      27: aload_0
      28: aload_2
      29: putfield      #14                 // Field taskExecutor:Lorg/springframework/core/task/TaskExecutor;
      32: aload_0
      33: aload_3
      34: putfield      #15                 // Field contentNegotiationManager:Lorg/springframework/web/accept/ContentNegotiationManager;
      37: return

  public boolean isReactiveType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field reactiveRegistry:Lorg/springframework/core/ReactiveAdapterRegistry;
       4: invokevirtual #16                 // Method org/springframework/core/ReactiveAdapterRegistry.hasAdapters:()Z
       7: ifeq          25
      10: aload_0
      11: getfield      #13                 // Field reactiveRegistry:Lorg/springframework/core/ReactiveAdapterRegistry;
      14: aload_1
      15: invokevirtual #17                 // Method org/springframework/core/ReactiveAdapterRegistry.getAdapter:(Ljava/lang/Class;)Lorg/springframework/core/ReactiveAdapter;
      18: ifnull        25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter handleValue(java.lang.Object, org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ldc           #18                 // String Expected return value
       3: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #13                 // Field reactiveRegistry:Lorg/springframework/core/ReactiveAdapterRegistry;
      10: aload_1
      11: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #17                 // Method org/springframework/core/ReactiveAdapterRegistry.getAdapter:(Ljava/lang/Class;)Lorg/springframework/core/ReactiveAdapter;
      17: astore        5
      19: aload         5
      21: ifnull        28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: new           #20                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #22                 // String Unexpected return value:
      38: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_1
      42: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokestatic  #26                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      51: aload_2
      52: invokestatic  #27                 // Method org/springframework/core/ResolvableType.forMethodParameter:(Lorg/springframework/core/MethodParameter;)Lorg/springframework/core/ResolvableType;
      55: iconst_1
      56: newarray       int
      58: dup
      59: iconst_0
      60: iconst_0
      61: iastore
      62: invokevirtual #28                 // Method org/springframework/core/ResolvableType.getGeneric:([I)Lorg/springframework/core/ResolvableType;
      65: astore        6
      67: aload         6
      69: ldc           #29                 // class java/lang/Object
      71: invokevirtual #30                 // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
      74: astore        7
      76: aload_0
      77: aload         4
      79: invokespecial #31                 // Method getMediaTypes:(Lorg/springframework/web/context/request/NativeWebRequest;)Ljava/util/Collection;
      82: astore        8
      84: aload         8
      86: invokeinterface #32,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      91: invokedynamic #33,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      96: invokeinterface #34,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     101: invokeinterface #35,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
     106: astore        9
     108: aload         5
     110: invokevirtual #36                 // Method org/springframework/core/ReactiveAdapter.isMultiValue:()Z
     113: ifeq          299
     116: aload         8
     118: invokeinterface #32,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
     123: getstatic     #37                 // Field org/springframework/http/MediaType.TEXT_EVENT_STREAM:Lorg/springframework/http/MediaType;
     126: dup
     127: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     130: pop
     131: invokedynamic #38,  0             // InvokeDynamic #1:test:(Lorg/springframework/http/MediaType;)Ljava/util/function/Predicate;
     136: invokeinterface #39,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
     141: ifne          154
     144: ldc           #40                 // class org/springframework/http/codec/ServerSentEvent
     146: aload         7
     148: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     151: ifeq          191
     154: new           #42                 // class org/springframework/web/servlet/mvc/method/annotation/SseEmitter
     157: dup
     158: ldc2_w        #44                 // long -1l
     161: invokestatic  #46                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     164: invokespecial #47                 // Method org/springframework/web/servlet/mvc/method/annotation/SseEmitter."<init>":(Ljava/lang/Long;)V
     167: astore        10
     169: new           #48                 // class org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$SseEmitterSubscriber
     172: dup
     173: aload         10
     175: aload_0
     176: getfield      #14                 // Field taskExecutor:Lorg/springframework/core/task/TaskExecutor;
     179: invokespecial #49                 // Method org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$SseEmitterSubscriber."<init>":(Lorg/springframework/web/servlet/mvc/method/annotation/SseEmitter;Lorg/springframework/core/task/TaskExecutor;)V
     182: aload         5
     184: aload_1
     185: invokevirtual #50                 // Method org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$SseEmitterSubscriber.connect:(Lorg/springframework/core/ReactiveAdapter;Ljava/lang/Object;)V
     188: aload         10
     190: areturn
     191: ldc           #51                 // class java/lang/CharSequence
     193: aload         7
     195: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     198: ifeq          240
     201: aload_0
     202: aload         9
     204: getstatic     #52                 // Field org/springframework/http/MediaType.TEXT_PLAIN:Lorg/springframework/http/MediaType;
     207: invokevirtual #53                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     210: checkcast     #54                 // class org/springframework/http/MediaType
     213: invokespecial #55                 // Method getEmitter:(Lorg/springframework/http/MediaType;)Lorg/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitter;
     216: astore        10
     218: new           #56                 // class org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$TextEmitterSubscriber
     221: dup
     222: aload         10
     224: aload_0
     225: getfield      #14                 // Field taskExecutor:Lorg/springframework/core/task/TaskExecutor;
     228: invokespecial #57                 // Method org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$TextEmitterSubscriber."<init>":(Lorg/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitter;Lorg/springframework/core/task/TaskExecutor;)V
     231: aload         5
     233: aload_1
     234: invokevirtual #58                 // Method org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$TextEmitterSubscriber.connect:(Lorg/springframework/core/ReactiveAdapter;Ljava/lang/Object;)V
     237: aload         10
     239: areturn
     240: aload         8
     242: invokeinterface #32,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
     247: getstatic     #59                 // Field org/springframework/http/MediaType.APPLICATION_STREAM_JSON:Lorg/springframework/http/MediaType;
     250: dup
     251: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     254: pop
     255: invokedynamic #38,  0             // InvokeDynamic #1:test:(Lorg/springframework/http/MediaType;)Ljava/util/function/Predicate;
     260: invokeinterface #39,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
     265: ifeq          299
     268: aload_0
     269: getstatic     #59                 // Field org/springframework/http/MediaType.APPLICATION_STREAM_JSON:Lorg/springframework/http/MediaType;
     272: invokespecial #55                 // Method getEmitter:(Lorg/springframework/http/MediaType;)Lorg/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitter;
     275: astore        10
     277: new           #60                 // class org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$JsonEmitterSubscriber
     280: dup
     281: aload         10
     283: aload_0
     284: getfield      #14                 // Field taskExecutor:Lorg/springframework/core/task/TaskExecutor;
     287: invokespecial #61                 // Method org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$JsonEmitterSubscriber."<init>":(Lorg/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitter;Lorg/springframework/core/task/TaskExecutor;)V
     290: aload         5
     292: aload_1
     293: invokevirtual #62                 // Method org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$JsonEmitterSubscriber.connect:(Lorg/springframework/core/ReactiveAdapter;Ljava/lang/Object;)V
     296: aload         10
     298: areturn
     299: new           #63                 // class org/springframework/web/context/request/async/DeferredResult
     302: dup
     303: invokespecial #64                 // Method org/springframework/web/context/request/async/DeferredResult."<init>":()V
     306: astore        10
     308: new           #65                 // class org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$DeferredResultSubscriber
     311: dup
     312: aload         10
     314: aload         5
     316: aload         6
     318: invokespecial #66                 // Method org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$DeferredResultSubscriber."<init>":(Lorg/springframework/web/context/request/async/DeferredResult;Lorg/springframework/core/ReactiveAdapter;Lorg/springframework/core/ResolvableType;)V
     321: aload         5
     323: aload_1
     324: invokevirtual #67                 // Method org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$DeferredResultSubscriber.connect:(Lorg/springframework/core/ReactiveAdapter;Ljava/lang/Object;)V
     327: aload         4
     329: invokestatic  #68                 // Method org/springframework/web/context/request/async/WebAsyncUtils.getAsyncManager:(Lorg/springframework/web/context/request/WebRequest;)Lorg/springframework/web/context/request/async/WebAsyncManager;
     332: aload         10
     334: iconst_1
     335: anewarray     #29                 // class java/lang/Object
     338: dup
     339: iconst_0
     340: aload_3
     341: aastore
     342: invokevirtual #69                 // Method org/springframework/web/context/request/async/WebAsyncManager.startDeferredResultProcessing:(Lorg/springframework/web/context/request/async/DeferredResult;[Ljava/lang/Object;)V
     345: aconst_null
     346: areturn

  private java.util.Collection<org.springframework.http.MediaType> getMediaTypes(org.springframework.web.context.request.NativeWebRequest) throws org.springframework.web.HttpMediaTypeNotAcceptableException;
    Code:
       0: aload_1
       1: getstatic     #70                 // Field org/springframework/web/servlet/HandlerMapping.PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE:Ljava/lang/String;
       4: iconst_0
       5: invokeinterface #72,  3           // InterfaceMethod org/springframework/web/context/request/NativeWebRequest.getAttribute:(Ljava/lang/String;I)Ljava/lang/Object;
      10: checkcast     #73                 // class java/util/Collection
      13: astore_2
      14: aload_2
      15: invokestatic  #74                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
      18: ifeq          32
      21: aload_0
      22: getfield      #15                 // Field contentNegotiationManager:Lorg/springframework/web/accept/ContentNegotiationManager;
      25: aload_1
      26: invokevirtual #75                 // Method org/springframework/web/accept/ContentNegotiationManager.resolveMediaTypes:(Lorg/springframework/web/context/request/NativeWebRequest;)Ljava/util/List;
      29: goto          33
      32: aload_2
      33: areturn

  private org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter getEmitter(org.springframework.http.MediaType);
    Code:
       0: new           #76                 // class org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$1
       3: dup
       4: aload_0
       5: ldc2_w        #44                 // long -1l
       8: invokestatic  #46                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      11: aload_1
      12: invokespecial #77                 // Method org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$1."<init>":(Lorg/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler;Ljava/lang/Long;Lorg/springframework/http/MediaType;)V
      15: areturn

  static org.apache.commons.logging.Log access$000();
    Code:
       0: getstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
       3: areturn

  static {};
    Code:
       0: ldc           #43                 // class org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler
       2: invokestatic  #78                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
