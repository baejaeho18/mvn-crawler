Compiled from "AbstractMessageConverterMethodArgumentResolver.java"
public abstract class org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver implements org.springframework.web.method.support.HandlerMethodArgumentResolver {
  private static final java.util.Set<org.springframework.http.HttpMethod> SUPPORTED_METHODS;

  private static final java.lang.Object NO_VALUE;

  protected final org.apache.commons.logging.Log logger;

  protected final java.util.List<org.springframework.http.converter.HttpMessageConverter<?>> messageConverters;

  protected final java.util.List<org.springframework.http.MediaType> allSupportedMediaTypes;

  private final org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain advice;

  public org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver(java.util.List<org.springframework.http.converter.HttpMessageConverter<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Ljava/util/List;Ljava/util/List;)V
       6: return

  public org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver(java.util.List<org.springframework.http.converter.HttpMessageConverter<?>>, java.util.List<java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #4                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_1
      16: ldc           #6                  // String \'messageConverters\' must not be empty
      18: invokestatic  #7                  // Method org/springframework/util/Assert.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)V
      21: aload_0
      22: aload_1
      23: putfield      #8                  // Field messageConverters:Ljava/util/List;
      26: aload_0
      27: aload_1
      28: invokestatic  #9                  // Method getAllSupportedMediaTypes:(Ljava/util/List;)Ljava/util/List;
      31: putfield      #10                 // Field allSupportedMediaTypes:Ljava/util/List;
      34: aload_0
      35: new           #11                 // class org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyAdviceChain
      38: dup
      39: aload_2
      40: invokespecial #12                 // Method org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyAdviceChain."<init>":(Ljava/util/List;)V
      43: putfield      #13                 // Field advice:Lorg/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyAdviceChain;
      46: return

  private static java.util.List<org.springframework.http.MediaType> getAllSupportedMediaTypes(java.util.List<org.springframework.http.converter.HttpMessageConverter<?>>);
    Code:
       0: new           #14                 // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #15                 // Method java/util/LinkedHashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          50
      24: aload_2
      25: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #19                 // class org/springframework/http/converter/HttpMessageConverter
      33: astore_3
      34: aload_1
      35: aload_3
      36: invokeinterface #20,  1           // InterfaceMethod org/springframework/http/converter/HttpMessageConverter.getSupportedMediaTypes:()Ljava/util/List;
      41: invokeinterface #21,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      46: pop
      47: goto          15
      50: new           #22                 // class java/util/ArrayList
      53: dup
      54: aload_1
      55: invokespecial #23                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      58: astore_2
      59: aload_2
      60: invokestatic  #24                 // Method org/springframework/http/MediaType.sortBySpecificity:(Ljava/util/List;)V
      63: aload_2
      64: invokestatic  #25                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      67: areturn

  org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain getAdvice();
    Code:
       0: aload_0
       1: getfield      #13                 // Field advice:Lorg/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyAdviceChain;
       4: areturn

  protected <T> java.lang.Object readWithMessageConverters(org.springframework.web.context.request.NativeWebRequest, org.springframework.core.MethodParameter, java.lang.reflect.Type) throws java.io.IOException, org.springframework.web.HttpMediaTypeNotSupportedException, org.springframework.http.converter.HttpMessageNotReadableException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method createInputMessage:(Lorg/springframework/web/context/request/NativeWebRequest;)Lorg/springframework/http/server/ServletServerHttpRequest;
       5: astore        4
       7: aload_0
       8: aload         4
      10: aload_2
      11: aload_3
      12: invokevirtual #27                 // Method readWithMessageConverters:(Lorg/springframework/http/HttpInputMessage;Lorg/springframework/core/MethodParameter;Ljava/lang/reflect/Type;)Ljava/lang/Object;
      15: areturn

  protected <T> java.lang.Object readWithMessageConverters(org.springframework.http.HttpInputMessage, org.springframework.core.MethodParameter, java.lang.reflect.Type) throws java.io.IOException, org.springframework.web.HttpMediaTypeNotSupportedException, org.springframework.http.converter.HttpMessageNotReadableException;
    Code:
       0: iconst_0
       1: istore        5
       3: aload_1
       4: invokeinterface #28,  1           // InterfaceMethod org/springframework/http/HttpInputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
       9: invokevirtual #29                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      12: astore        4
      14: goto          32
      17: astore        6
      19: new           #31                 // class org/springframework/web/HttpMediaTypeNotSupportedException
      22: dup
      23: aload         6
      25: invokevirtual #32                 // Method org/springframework/http/InvalidMediaTypeException.getMessage:()Ljava/lang/String;
      28: invokespecial #33                 // Method org/springframework/web/HttpMediaTypeNotSupportedException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload         4
      34: ifnonnull     45
      37: iconst_1
      38: istore        5
      40: getstatic     #34                 // Field org/springframework/http/MediaType.APPLICATION_OCTET_STREAM:Lorg/springframework/http/MediaType;
      43: astore        4
      45: aload_2
      46: invokevirtual #35                 // Method org/springframework/core/MethodParameter.getContainingClass:()Ljava/lang/Class;
      49: astore        6
      51: aload_3
      52: instanceof    #36                 // class java/lang/Class
      55: ifeq          65
      58: aload_3
      59: checkcast     #36                 // class java/lang/Class
      62: goto          66
      65: aconst_null
      66: astore        7
      68: aload         7
      70: ifnonnull     86
      73: aload_2
      74: invokestatic  #37                 // Method org/springframework/core/ResolvableType.forMethodParameter:(Lorg/springframework/core/MethodParameter;)Lorg/springframework/core/ResolvableType;
      77: astore        8
      79: aload         8
      81: invokevirtual #38                 // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
      84: astore        7
      86: aload_1
      87: instanceof    #39                 // class org/springframework/http/HttpRequest
      90: ifeq          105
      93: aload_1
      94: checkcast     #39                 // class org/springframework/http/HttpRequest
      97: invokeinterface #40,  1           // InterfaceMethod org/springframework/http/HttpRequest.getMethod:()Lorg/springframework/http/HttpMethod;
     102: goto          106
     105: aconst_null
     106: astore        8
     108: getstatic     #41                 // Field NO_VALUE:Ljava/lang/Object;
     111: astore        9
     113: new           #42                 // class org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver$EmptyBodyCheckingHttpInputMessage
     116: dup
     117: aload_1
     118: invokespecial #43                 // Method org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver$EmptyBodyCheckingHttpInputMessage."<init>":(Lorg/springframework/http/HttpInputMessage;)V
     121: astore        10
     123: aload_0
     124: getfield      #8                  // Field messageConverters:Ljava/util/List;
     127: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     132: astore        11
     134: aload         11
     136: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     141: ifeq          387
     144: aload         11
     146: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     151: checkcast     #19                 // class org/springframework/http/converter/HttpMessageConverter
     154: astore        12
     156: aload         12
     158: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
     161: astore        13
     163: aload         12
     165: instanceof    #44                 // class org/springframework/http/converter/GenericHttpMessageConverter
     168: ifeq          179
     171: aload         12
     173: checkcast     #44                 // class org/springframework/http/converter/GenericHttpMessageConverter
     176: goto          180
     179: aconst_null
     180: astore        14
     182: aload         14
     184: ifnull        205
     187: aload         14
     189: aload_3
     190: aload         6
     192: aload         4
     194: invokeinterface #45,  4           // InterfaceMethod org/springframework/http/converter/GenericHttpMessageConverter.canRead:(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
     199: ifeq          384
     202: goto          224
     205: aload         7
     207: ifnull        384
     210: aload         12
     212: aload         7
     214: aload         4
     216: invokeinterface #46,  3           // InterfaceMethod org/springframework/http/converter/HttpMessageConverter.canRead:(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
     221: ifeq          384
     224: aload_0
     225: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
     228: invokeinterface #47,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     233: ifeq          289
     236: aload_0
     237: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
     240: new           #48                 // class java/lang/StringBuilder
     243: dup
     244: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
     247: ldc           #50                 // String Read [
     249: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     252: aload_3
     253: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     256: ldc           #53                 // String ] as \"
     258: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     261: aload         4
     263: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     266: ldc           #54                 // String \" with [
     268: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     271: aload         12
     273: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     276: ldc           #55                 // String ]
     278: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     284: invokeinterface #57,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     289: aload         10
     291: invokevirtual #58                 // Method org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver$EmptyBodyCheckingHttpInputMessage.hasBody:()Z
     294: ifeq          365
     297: aload_0
     298: invokevirtual #59                 // Method getAdvice:()Lorg/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyAdviceChain;
     301: aload         10
     303: aload_2
     304: aload_3
     305: aload         13
     307: invokevirtual #60                 // Method org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyAdviceChain.beforeBodyRead:(Lorg/springframework/http/HttpInputMessage;Lorg/springframework/core/MethodParameter;Ljava/lang/reflect/Type;Ljava/lang/Class;)Lorg/springframework/http/HttpInputMessage;
     310: astore        15
     312: aload         14
     314: ifnull        332
     317: aload         14
     319: aload_3
     320: aload         6
     322: aload         15
     324: invokeinterface #61,  4           // InterfaceMethod org/springframework/http/converter/GenericHttpMessageConverter.read:(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
     329: goto          343
     332: aload         12
     334: aload         7
     336: aload         15
     338: invokeinterface #62,  3           // InterfaceMethod org/springframework/http/converter/HttpMessageConverter.read:(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
     343: astore        9
     345: aload_0
     346: invokevirtual #59                 // Method getAdvice:()Lorg/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyAdviceChain;
     349: aload         9
     351: aload         15
     353: aload_2
     354: aload_3
     355: aload         13
     357: invokevirtual #63                 // Method org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyAdviceChain.afterBodyRead:(Ljava/lang/Object;Lorg/springframework/http/HttpInputMessage;Lorg/springframework/core/MethodParameter;Ljava/lang/reflect/Type;Ljava/lang/Class;)Ljava/lang/Object;
     360: astore        9
     362: goto          387
     365: aload_0
     366: invokevirtual #59                 // Method getAdvice:()Lorg/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyAdviceChain;
     369: aconst_null
     370: aload         10
     372: aload_2
     373: aload_3
     374: aload         13
     376: invokevirtual #64                 // Method org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyAdviceChain.handleEmptyBody:(Ljava/lang/Object;Lorg/springframework/http/HttpInputMessage;Lorg/springframework/core/MethodParameter;Ljava/lang/reflect/Type;Ljava/lang/Class;)Ljava/lang/Object;
     379: astore        9
     381: goto          387
     384: goto          134
     387: goto          404
     390: astore        11
     392: new           #66                 // class org/springframework/http/converter/HttpMessageNotReadableException
     395: dup
     396: ldc           #67                 // String I/O error while reading input message
     398: aload         11
     400: invokespecial #68                 // Method org/springframework/http/converter/HttpMessageNotReadableException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     403: athrow
     404: aload         9
     406: getstatic     #41                 // Field NO_VALUE:Ljava/lang/Object;
     409: if_acmpne     459
     412: aload         8
     414: ifnull        443
     417: getstatic     #69                 // Field SUPPORTED_METHODS:Ljava/util/Set;
     420: aload         8
     422: invokeinterface #70,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     427: ifeq          443
     430: iload         5
     432: ifeq          445
     435: aload         10
     437: invokevirtual #58                 // Method org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver$EmptyBodyCheckingHttpInputMessage.hasBody:()Z
     440: ifne          445
     443: aconst_null
     444: areturn
     445: new           #31                 // class org/springframework/web/HttpMediaTypeNotSupportedException
     448: dup
     449: aload         4
     451: aload_0
     452: getfield      #10                 // Field allSupportedMediaTypes:Ljava/util/List;
     455: invokespecial #71                 // Method org/springframework/web/HttpMediaTypeNotSupportedException."<init>":(Lorg/springframework/http/MediaType;Ljava/util/List;)V
     458: athrow
     459: aload         9
     461: areturn
    Exception table:
       from    to  target type
           3    14    17   Class org/springframework/http/InvalidMediaTypeException
         113   387   390   Class java/io/IOException

  protected org.springframework.http.server.ServletServerHttpRequest createInputMessage(org.springframework.web.context.request.NativeWebRequest);
    Code:
       0: aload_1
       1: ldc           #72                 // class javax/servlet/http/HttpServletRequest
       3: invokeinterface #73,  2           // InterfaceMethod org/springframework/web/context/request/NativeWebRequest.getNativeRequest:(Ljava/lang/Class;)Ljava/lang/Object;
       8: checkcast     #72                 // class javax/servlet/http/HttpServletRequest
      11: astore_2
      12: aload_2
      13: ifnull        20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ldc           #74                 // String No HttpServletRequest
      23: invokestatic  #75                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      26: new           #76                 // class org/springframework/http/server/ServletServerHttpRequest
      29: dup
      30: aload_2
      31: invokespecial #77                 // Method org/springframework/http/server/ServletServerHttpRequest."<init>":(Ljavax/servlet/http/HttpServletRequest;)V
      34: areturn

  protected void validateIfApplicable(org.springframework.web.bind.WebDataBinder, org.springframework.core.MethodParameter);
    Code:
       0: aload_2
       1: invokevirtual #78                 // Method org/springframework/core/MethodParameter.getParameterAnnotations:()[Ljava/lang/annotation/Annotation;
       4: astore_3
       5: aload_3
       6: astore        4
       8: aload         4
      10: arraylength
      11: istore        5
      13: iconst_0
      14: istore        6
      16: iload         6
      18: iload         5
      20: if_icmpge     132
      23: aload         4
      25: iload         6
      27: aaload
      28: astore        7
      30: aload         7
      32: ldc           #79                 // class org/springframework/validation/annotation/Validated
      34: invokestatic  #80                 // Method org/springframework/core/annotation/AnnotationUtils.getAnnotation:(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      37: checkcast     #79                 // class org/springframework/validation/annotation/Validated
      40: astore        8
      42: aload         8
      44: ifnonnull     65
      47: aload         7
      49: invokeinterface #81,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      54: invokevirtual #82                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      57: ldc           #83                 // String Valid
      59: invokevirtual #84                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      62: ifeq          126
      65: aload         8
      67: ifnull        80
      70: aload         8
      72: invokeinterface #85,  1           // InterfaceMethod org/springframework/validation/annotation/Validated.value:()[Ljava/lang/Class;
      77: goto          85
      80: aload         7
      82: invokestatic  #86                 // Method org/springframework/core/annotation/AnnotationUtils.getValue:(Ljava/lang/annotation/Annotation;)Ljava/lang/Object;
      85: astore        9
      87: aload         9
      89: instanceof    #87                 // class "[Ljava/lang/Object;"
      92: ifeq          106
      95: aload         9
      97: checkcast     #87                 // class "[Ljava/lang/Object;"
     100: checkcast     #87                 // class "[Ljava/lang/Object;"
     103: goto          115
     106: iconst_1
     107: anewarray     #88                 // class java/lang/Object
     110: dup
     111: iconst_0
     112: aload         9
     114: aastore
     115: astore        10
     117: aload_1
     118: aload         10
     120: invokevirtual #89                 // Method org/springframework/web/bind/WebDataBinder.validate:([Ljava/lang/Object;)V
     123: goto          132
     126: iinc          6, 1
     129: goto          16
     132: return

  protected boolean isBindExceptionRequired(org.springframework.web.bind.WebDataBinder, org.springframework.core.MethodParameter);
    Code:
       0: aload_2
       1: invokevirtual #90                 // Method org/springframework/core/MethodParameter.getParameterIndex:()I
       4: istore_3
       5: aload_2
       6: invokevirtual #91                 // Method org/springframework/core/MethodParameter.getExecutable:()Ljava/lang/reflect/Executable;
       9: invokevirtual #92                 // Method java/lang/reflect/Executable.getParameterTypes:()[Ljava/lang/Class;
      12: astore        4
      14: aload         4
      16: arraylength
      17: iload_3
      18: iconst_1
      19: iadd
      20: if_icmple     41
      23: ldc           #93                 // class org/springframework/validation/Errors
      25: aload         4
      27: iload_3
      28: iconst_1
      29: iadd
      30: aaload
      31: invokevirtual #94                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      34: ifeq          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: istore        5
      44: iload         5
      46: ifne          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ireturn

  protected java.lang.Object adaptArgumentIfNecessary(java.lang.Object, org.springframework.core.MethodParameter);
    Code:
       0: aload_2
       1: invokevirtual #95                 // Method org/springframework/core/MethodParameter.getParameterType:()Ljava/lang/Class;
       4: ldc           #96                 // class java/util/Optional
       6: if_acmpne     59
       9: aload_1
      10: ifnull        50
      13: aload_1
      14: instanceof    #97                 // class java/util/Collection
      17: ifeq          32
      20: aload_1
      21: checkcast     #97                 // class java/util/Collection
      24: invokeinterface #98,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      29: ifne          50
      32: aload_1
      33: instanceof    #87                 // class "[Ljava/lang/Object;"
      36: ifeq          54
      39: aload_1
      40: checkcast     #87                 // class "[Ljava/lang/Object;"
      43: checkcast     #87                 // class "[Ljava/lang/Object;"
      46: arraylength
      47: ifne          54
      50: invokestatic  #99                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      53: areturn
      54: aload_1
      55: invokestatic  #100                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      58: areturn
      59: aload_1
      60: areturn

  static {};
    Code:
       0: getstatic     #101                // Field org/springframework/http/HttpMethod.POST:Lorg/springframework/http/HttpMethod;
       3: getstatic     #102                // Field org/springframework/http/HttpMethod.PUT:Lorg/springframework/http/HttpMethod;
       6: getstatic     #103                // Field org/springframework/http/HttpMethod.PATCH:Lorg/springframework/http/HttpMethod;
       9: invokestatic  #104                // Method java/util/EnumSet.of:(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
      12: putstatic     #69                 // Field SUPPORTED_METHODS:Ljava/util/Set;
      15: new           #88                 // class java/lang/Object
      18: dup
      19: invokespecial #2                  // Method java/lang/Object."<init>":()V
      22: putstatic     #41                 // Field NO_VALUE:Ljava/lang/Object;
      25: return
}
