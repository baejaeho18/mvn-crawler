Compiled from "ProducesRequestCondition.java"
class org.springframework.web.servlet.mvc.condition.ProducesRequestCondition$ProduceMediaTypeExpression extends org.springframework.web.servlet.mvc.condition.AbstractMediaTypeExpression {
  org.springframework.web.servlet.mvc.condition.ProducesRequestCondition$ProduceMediaTypeExpression(org.springframework.http.MediaType, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method org/springframework/web/servlet/mvc/condition/AbstractMediaTypeExpression."<init>":(Lorg/springframework/http/MediaType;Z)V
       6: return

  org.springframework.web.servlet.mvc.condition.ProducesRequestCondition$ProduceMediaTypeExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/springframework/web/servlet/mvc/condition/AbstractMediaTypeExpression."<init>":(Ljava/lang/String;)V
       5: return

  public final boolean match(java.util.List<org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method matchMediaType:(Ljava/util/List;)Z
       5: istore_2
       6: aload_0
       7: invokevirtual #4                  // Method isNegated:()Z
      10: ifne          17
      13: iload_2
      14: goto          26
      17: iload_2
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  private boolean matchMediaType(java.util.List<org.springframework.http.MediaType>);
    Code:
       0: aload_1
       1: invokeinterface #5,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          42
      16: aload_2
      17: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #8                  // class org/springframework/http/MediaType
      25: astore_3
      26: aload_0
      27: invokevirtual #9                  // Method getMediaType:()Lorg/springframework/http/MediaType;
      30: aload_3
      31: invokevirtual #10                 // Method org/springframework/http/MediaType.isCompatibleWith:(Lorg/springframework/http/MediaType;)Z
      34: ifeq          39
      37: iconst_1
      38: ireturn
      39: goto          7
      42: iconst_0
      43: ireturn
}
