Compiled from "MappingMediaTypeFileExtensionResolver.java"
public class org.springframework.web.accept.MappingMediaTypeFileExtensionResolver implements org.springframework.web.accept.MediaTypeFileExtensionResolver {
  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.springframework.http.MediaType> mediaTypes;

  private final org.springframework.util.MultiValueMap<org.springframework.http.MediaType, java.lang.String> fileExtensions;

  private final java.util.List<java.lang.String> allFileExtensions;

  public org.springframework.web.accept.MappingMediaTypeFileExtensionResolver(java.util.Map<java.lang.String, org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: bipush        64
      11: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      14: putfield      #4                  // Field mediaTypes:Ljava/util/concurrent/ConcurrentMap;
      17: aload_0
      18: new           #5                  // class org/springframework/util/LinkedMultiValueMap
      21: dup
      22: invokespecial #6                  // Method org/springframework/util/LinkedMultiValueMap."<init>":()V
      25: putfield      #7                  // Field fileExtensions:Lorg/springframework/util/MultiValueMap;
      28: aload_0
      29: new           #8                  // class java/util/LinkedList
      32: dup
      33: invokespecial #9                  // Method java/util/LinkedList."<init>":()V
      36: putfield      #10                 // Field allFileExtensions:Ljava/util/List;
      39: aload_1
      40: ifnull        55
      43: aload_1
      44: aload_0
      45: invokedynamic #11,  0             // InvokeDynamic #0:accept:(Lorg/springframework/web/accept/MappingMediaTypeFileExtensionResolver;)Ljava/util/function/BiConsumer;
      50: invokeinterface #12,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      55: return

  public java.util.Map<java.lang.String, org.springframework.http.MediaType> getMediaTypes();
    Code:
       0: aload_0
       1: getfield      #4                  // Field mediaTypes:Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  protected java.util.List<org.springframework.http.MediaType> getAllMediaTypes();
    Code:
       0: new           #13                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #4                  // Field mediaTypes:Ljava/util/concurrent/ConcurrentMap;
       8: invokeinterface #14,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      13: invokespecial #15                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      16: areturn

  protected void addMapping(java.lang.String, org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: getfield      #4                  // Field mediaTypes:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #16,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #17                 // class org/springframework/http/MediaType
      14: astore_3
      15: aload_3
      16: ifnonnull     41
      19: aload_0
      20: getfield      #7                  // Field fileExtensions:Lorg/springframework/util/MultiValueMap;
      23: aload_2
      24: aload_1
      25: invokeinterface #18,  3           // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      30: aload_0
      31: getfield      #10                 // Field allFileExtensions:Ljava/util/List;
      34: aload_1
      35: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      40: pop
      41: return

  public java.util.List<java.lang.String> resolveFileExtensions(org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: getfield      #7                  // Field fileExtensions:Lorg/springframework/util/MultiValueMap;
       4: aload_1
       5: invokeinterface #20,  2           // InterfaceMethod org/springframework/util/MultiValueMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #21                 // class java/util/List
      13: astore_2
      14: aload_2
      15: ifnull        22
      18: aload_2
      19: goto          25
      22: invokestatic  #22                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      25: areturn

  public java.util.List<java.lang.String> getAllFileExtensions();
    Code:
       0: aload_0
       1: getfield      #10                 // Field allFileExtensions:Ljava/util/List;
       4: invokestatic  #23                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  protected org.springframework.http.MediaType lookupMediaType(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field mediaTypes:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: getstatic     #24                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
       8: invokevirtual #25                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      11: invokeinterface #26,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #17                 // class org/springframework/http/MediaType
      19: areturn

  private void lambda$new$0(java.lang.String, org.springframework.http.MediaType);
    Code:
       0: aload_1
       1: getstatic     #24                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
       4: invokevirtual #25                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
       7: astore_3
       8: aload_0
       9: getfield      #4                  // Field mediaTypes:Ljava/util/concurrent/ConcurrentMap;
      12: aload_3
      13: aload_2
      14: invokeinterface #27,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_0
      21: getfield      #7                  // Field fileExtensions:Lorg/springframework/util/MultiValueMap;
      24: aload_2
      25: aload_3
      26: invokeinterface #18,  3           // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      31: aload_0
      32: getfield      #10                 // Field allFileExtensions:Ljava/util/List;
      35: aload_3
      36: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      41: pop
      42: return
}
