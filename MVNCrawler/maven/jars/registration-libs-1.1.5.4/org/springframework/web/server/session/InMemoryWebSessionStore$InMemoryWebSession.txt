Compiled from "InMemoryWebSessionStore.java"
class org.springframework.web.server.session.InMemoryWebSessionStore$InMemoryWebSession implements org.springframework.web.server.WebSession {
  private final java.util.concurrent.atomic.AtomicReference<java.lang.String> id;

  private final java.util.Map<java.lang.String, java.lang.Object> attributes;

  private final java.time.Instant creationTime;

  private volatile java.time.Instant lastAccessTime;

  private volatile java.time.Duration maxIdleTime;

  private final java.util.concurrent.atomic.AtomicReference<org.springframework.web.server.session.InMemoryWebSessionStore$State> state;

  final org.springframework.web.server.session.InMemoryWebSessionStore this$0;

  public org.springframework.web.server.session.InMemoryWebSessionStore$InMemoryWebSession(org.springframework.web.server.session.InMemoryWebSessionStore);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field this$0:Lorg/springframework/web/server/session/InMemoryWebSessionStore;
       5: aload_0
       6: invokespecial #4                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #5                  // class java/util/concurrent/atomic/AtomicReference
      13: dup
      14: invokestatic  #6                  // Method org/springframework/web/server/session/InMemoryWebSessionStore.access$200:()Lorg/springframework/util/IdGenerator;
      17: invokeinterface #7,  1            // InterfaceMethod org/springframework/util/IdGenerator.generateId:()Ljava/util/UUID;
      22: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      25: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      28: putfield      #10                 // Field id:Ljava/util/concurrent/atomic/AtomicReference;
      31: aload_0
      32: new           #11                 // class java/util/concurrent/ConcurrentHashMap
      35: dup
      36: invokespecial #12                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      39: putfield      #13                 // Field attributes:Ljava/util/Map;
      42: aload_0
      43: ldc2_w        #14                 // long 30l
      46: invokestatic  #16                 // Method java/time/Duration.ofMinutes:(J)Ljava/time/Duration;
      49: putfield      #17                 // Field maxIdleTime:Ljava/time/Duration;
      52: aload_0
      53: new           #5                  // class java/util/concurrent/atomic/AtomicReference
      56: dup
      57: getstatic     #18                 // Field org/springframework/web/server/session/InMemoryWebSessionStore$State.NEW:Lorg/springframework/web/server/session/InMemoryWebSessionStore$State;
      60: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      63: putfield      #19                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      66: aload_0
      67: aload_1
      68: invokevirtual #20                 // Method org/springframework/web/server/session/InMemoryWebSessionStore.getClock:()Ljava/time/Clock;
      71: invokestatic  #21                 // Method java/time/Instant.now:(Ljava/time/Clock;)Ljava/time/Instant;
      74: putfield      #22                 // Field creationTime:Ljava/time/Instant;
      77: aload_0
      78: aload_0
      79: getfield      #22                 // Field creationTime:Ljava/time/Instant;
      82: putfield      #23                 // Field lastAccessTime:Ljava/time/Instant;
      85: return

  public java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #10                 // Field id:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #25                 // class java/lang/String
      10: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getAttributes();
    Code:
       0: aload_0
       1: getfield      #13                 // Field attributes:Ljava/util/Map;
       4: areturn

  public java.time.Instant getCreationTime();
    Code:
       0: aload_0
       1: getfield      #22                 // Field creationTime:Ljava/time/Instant;
       4: areturn

  public java.time.Instant getLastAccessTime();
    Code:
       0: aload_0
       1: getfield      #23                 // Field lastAccessTime:Ljava/time/Instant;
       4: areturn

  public void setMaxIdleTime(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field maxIdleTime:Ljava/time/Duration;
       5: return

  public java.time.Duration getMaxIdleTime();
    Code:
       0: aload_0
       1: getfield      #17                 // Field maxIdleTime:Ljava/time/Duration;
       4: areturn

  public void start();
    Code:
       0: aload_0
       1: getfield      #19                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
       4: getstatic     #18                 // Field org/springframework/web/server/session/InMemoryWebSessionStore$State.NEW:Lorg/springframework/web/server/session/InMemoryWebSessionStore$State;
       7: getstatic     #26                 // Field org/springframework/web/server/session/InMemoryWebSessionStore$State.STARTED:Lorg/springframework/web/server/session/InMemoryWebSessionStore$State;
      10: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      13: pop
      14: return

  public boolean isStarted();
    Code:
       0: aload_0
       1: getfield      #19                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #28                 // class org/springframework/web/server/session/InMemoryWebSessionStore$State
      10: getstatic     #26                 // Field org/springframework/web/server/session/InMemoryWebSessionStore$State.STARTED:Lorg/springframework/web/server/session/InMemoryWebSessionStore$State;
      13: invokevirtual #29                 // Method org/springframework/web/server/session/InMemoryWebSessionStore$State.equals:(Ljava/lang/Object;)Z
      16: ifne          31
      19: aload_0
      20: invokevirtual #30                 // Method getAttributes:()Ljava/util/Map;
      23: invokeinterface #31,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      28: ifne          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  public reactor.core.publisher.Mono<java.lang.Void> changeSessionId();
    Code:
       0: aload_0
       1: getfield      #10                 // Field id:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #25                 // class java/lang/String
      10: astore_1
      11: aload_0
      12: getfield      #3                  // Field this$0:Lorg/springframework/web/server/session/InMemoryWebSessionStore;
      15: invokestatic  #32                 // Method org/springframework/web/server/session/InMemoryWebSessionStore.access$300:(Lorg/springframework/web/server/session/InMemoryWebSessionStore;)Ljava/util/concurrent/ConcurrentMap;
      18: aload_1
      19: invokeinterface #33,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: invokestatic  #6                  // Method org/springframework/web/server/session/InMemoryWebSessionStore.access$200:()Lorg/springframework/util/IdGenerator;
      28: invokeinterface #7,  1            // InterfaceMethod org/springframework/util/IdGenerator.generateId:()Ljava/util/UUID;
      33: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      36: astore_2
      37: aload_0
      38: getfield      #10                 // Field id:Ljava/util/concurrent/atomic/AtomicReference;
      41: aload_2
      42: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      45: aload_0
      46: getfield      #3                  // Field this$0:Lorg/springframework/web/server/session/InMemoryWebSessionStore;
      49: invokestatic  #32                 // Method org/springframework/web/server/session/InMemoryWebSessionStore.access$300:(Lorg/springframework/web/server/session/InMemoryWebSessionStore;)Ljava/util/concurrent/ConcurrentMap;
      52: aload_0
      53: invokevirtual #35                 // Method getId:()Ljava/lang/String;
      56: aload_0
      57: invokeinterface #36,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      62: pop
      63: invokestatic  #37                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      66: areturn

  public reactor.core.publisher.Mono<java.lang.Void> invalidate();
    Code:
       0: aload_0
       1: getfield      #19                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
       4: getstatic     #38                 // Field org/springframework/web/server/session/InMemoryWebSessionStore$State.EXPIRED:Lorg/springframework/web/server/session/InMemoryWebSessionStore$State;
       7: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #30                 // Method getAttributes:()Ljava/util/Map;
      14: invokeinterface #39,  1           // InterfaceMethod java/util/Map.clear:()V
      19: aload_0
      20: getfield      #3                  // Field this$0:Lorg/springframework/web/server/session/InMemoryWebSessionStore;
      23: invokestatic  #32                 // Method org/springframework/web/server/session/InMemoryWebSessionStore.access$300:(Lorg/springframework/web/server/session/InMemoryWebSessionStore;)Ljava/util/concurrent/ConcurrentMap;
      26: aload_0
      27: getfield      #10                 // Field id:Ljava/util/concurrent/atomic/AtomicReference;
      30: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      33: invokeinterface #33,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: invokestatic  #37                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      42: areturn

  public reactor.core.publisher.Mono<java.lang.Void> save();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getAttributes:()Ljava/util/Map;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ifne          26
      12: aload_0
      13: getfield      #19                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      16: getstatic     #18                 // Field org/springframework/web/server/session/InMemoryWebSessionStore$State.NEW:Lorg/springframework/web/server/session/InMemoryWebSessionStore$State;
      19: getstatic     #26                 // Field org/springframework/web/server/session/InMemoryWebSessionStore$State.STARTED:Lorg/springframework/web/server/session/InMemoryWebSessionStore$State;
      22: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      25: pop
      26: aload_0
      27: getfield      #3                  // Field this$0:Lorg/springframework/web/server/session/InMemoryWebSessionStore;
      30: invokestatic  #32                 // Method org/springframework/web/server/session/InMemoryWebSessionStore.access$300:(Lorg/springframework/web/server/session/InMemoryWebSessionStore;)Ljava/util/concurrent/ConcurrentMap;
      33: aload_0
      34: invokevirtual #35                 // Method getId:()Ljava/lang/String;
      37: aload_0
      38: invokeinterface #36,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: invokestatic  #37                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      47: areturn

  public boolean isExpired();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field this$0:Lorg/springframework/web/server/session/InMemoryWebSessionStore;
       5: invokevirtual #20                 // Method org/springframework/web/server/session/InMemoryWebSessionStore.getClock:()Ljava/time/Clock;
       8: invokestatic  #21                 // Method java/time/Instant.now:(Ljava/time/Clock;)Ljava/time/Instant;
      11: invokespecial #2                  // Method isExpired:(Ljava/time/Instant;)Z
      14: ireturn

  private boolean isExpired(java.time.Instant);
    Code:
       0: aload_0
       1: getfield      #19                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #28                 // class org/springframework/web/server/session/InMemoryWebSessionStore$State
      10: getstatic     #38                 // Field org/springframework/web/server/session/InMemoryWebSessionStore$State.EXPIRED:Lorg/springframework/web/server/session/InMemoryWebSessionStore$State;
      13: invokevirtual #29                 // Method org/springframework/web/server/session/InMemoryWebSessionStore$State.equals:(Ljava/lang/Object;)Z
      16: ifeq          21
      19: iconst_1
      20: ireturn
      21: aload_0
      22: aload_1
      23: invokespecial #40                 // Method checkExpired:(Ljava/time/Instant;)Z
      26: ifeq          41
      29: aload_0
      30: getfield      #19                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      33: getstatic     #38                 // Field org/springframework/web/server/session/InMemoryWebSessionStore$State.EXPIRED:Lorg/springframework/web/server/session/InMemoryWebSessionStore$State;
      36: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      39: iconst_1
      40: ireturn
      41: iconst_0
      42: ireturn

  private boolean checkExpired(java.time.Instant);
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method isStarted:()Z
       4: ifeq          39
       7: aload_0
       8: getfield      #17                 // Field maxIdleTime:Ljava/time/Duration;
      11: invokevirtual #42                 // Method java/time/Duration.isNegative:()Z
      14: ifne          39
      17: aload_1
      18: aload_0
      19: getfield      #17                 // Field maxIdleTime:Ljava/time/Duration;
      22: invokevirtual #43                 // Method java/time/Instant.minus:(Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant;
      25: aload_0
      26: getfield      #23                 // Field lastAccessTime:Ljava/time/Instant;
      29: invokevirtual #44                 // Method java/time/Instant.isAfter:(Ljava/time/Instant;)Z
      32: ifeq          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn

  private void updateLastAccessTime(java.time.Instant);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field lastAccessTime:Ljava/time/Instant;
       5: return

  static boolean access$000(org.springframework.web.server.session.InMemoryWebSessionStore$InMemoryWebSession, java.time.Instant);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method isExpired:(Ljava/time/Instant;)Z
       5: ireturn

  static void access$100(org.springframework.web.server.session.InMemoryWebSessionStore$InMemoryWebSession, java.time.Instant);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method updateLastAccessTime:(Ljava/time/Instant;)V
       5: return
}
