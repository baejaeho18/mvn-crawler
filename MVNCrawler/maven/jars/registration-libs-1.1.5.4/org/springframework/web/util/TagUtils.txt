Compiled from "TagUtils.java"
public abstract class org.springframework.web.util.TagUtils {
  public static final java.lang.String SCOPE_PAGE;

  public static final java.lang.String SCOPE_REQUEST;

  public static final java.lang.String SCOPE_SESSION;

  public static final java.lang.String SCOPE_APPLICATION;

  public org.springframework.web.util.TagUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static int getScope(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #2                  // String Scope to search for cannot be null
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: ldc           #5                  // String request
       9: invokevirtual #6                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: ifeq          17
      15: iconst_2
      16: ireturn
      17: aload_0
      18: ldc           #8                  // String session
      20: invokevirtual #6                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      23: ifeq          28
      26: iconst_3
      27: ireturn
      28: aload_0
      29: ldc           #9                  // String application
      31: invokevirtual #6                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      34: ifeq          39
      37: iconst_4
      38: ireturn
      39: iconst_1
      40: ireturn

  public static boolean hasAncestorOfType(javax.servlet.jsp.tagext.Tag, java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #10                 // String Tag cannot be null
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #11                 // String Ancestor tag class cannot be null
       9: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: ldc           #12                 // class javax/servlet/jsp/tagext/Tag
      14: aload_1
      15: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      18: ifne          56
      21: new           #14                 // class java/lang/IllegalArgumentException
      24: dup
      25: new           #15                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #17                 // String Class \'
      34: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_1
      38: invokevirtual #19                 // Method java/lang/Class.getName:()Ljava/lang/String;
      41: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #20                 // String \' is not a valid Tag type
      46: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: invokeinterface #23,  1           // InterfaceMethod javax/servlet/jsp/tagext/Tag.getParent:()Ljavax/servlet/jsp/tagext/Tag;
      62: astore_2
      63: aload_2
      64: ifnull        90
      67: aload_1
      68: aload_2
      69: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      72: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      75: ifeq          80
      78: iconst_1
      79: ireturn
      80: aload_2
      81: invokeinterface #23,  1           // InterfaceMethod javax/servlet/jsp/tagext/Tag.getParent:()Ljavax/servlet/jsp/tagext/Tag;
      86: astore_2
      87: goto          63
      90: iconst_0
      91: ireturn

  public static void assertHasAncestorOfType(javax.servlet.jsp.tagext.Tag, java.lang.Class<?>, java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: ldc           #25                 // String \'tagName\' must not be empty
       3: invokestatic  #26                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_3
       7: ldc           #27                 // String \'ancestorTagName\' must not be empty
       9: invokestatic  #26                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      12: aload_0
      13: aload_1
      14: invokestatic  #28                 // Method hasAncestorOfType:(Ljavax/servlet/jsp/tagext/Tag;Ljava/lang/Class;)Z
      17: ifne          61
      20: new           #29                 // class java/lang/IllegalStateException
      23: dup
      24: new           #15                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #30                 // String The \'
      33: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_2
      37: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: ldc           #31                 // String \' tag can only be used inside a valid \'
      42: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_3
      46: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #32                 // String \' tag.
      51: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokespecial #33                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: return
}
