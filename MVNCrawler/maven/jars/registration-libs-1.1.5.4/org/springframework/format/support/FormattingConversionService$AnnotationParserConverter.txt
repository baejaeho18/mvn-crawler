Compiled from "FormattingConversionService.java"
class org.springframework.format.support.FormattingConversionService$AnnotationParserConverter implements org.springframework.core.convert.converter.ConditionalGenericConverter {
  private final java.lang.Class<? extends java.lang.annotation.Annotation> annotationType;

  private final org.springframework.format.AnnotationFormatterFactory annotationFormatterFactory;

  private final java.lang.Class<?> fieldType;

  final org.springframework.format.support.FormattingConversionService this$0;

  public org.springframework.format.support.FormattingConversionService$AnnotationParserConverter(java.lang.Class<? extends java.lang.annotation.Annotation>, org.springframework.format.AnnotationFormatterFactory<?>, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/format/support/FormattingConversionService;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field annotationType:Ljava/lang/Class;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field annotationFormatterFactory:Lorg/springframework/format/AnnotationFormatterFactory;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field fieldType:Ljava/lang/Class;
      25: return

  public java.util.Set<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair> getConvertibleTypes();
    Code:
       0: new           #6                  // class org/springframework/core/convert/converter/GenericConverter$ConvertiblePair
       3: dup
       4: ldc           #7                  // class java/lang/String
       6: aload_0
       7: getfield      #5                  // Field fieldType:Ljava/lang/Class;
      10: invokespecial #8                  // Method org/springframework/core/convert/converter/GenericConverter$ConvertiblePair."<init>":(Ljava/lang/Class;Ljava/lang/Class;)V
      13: invokestatic  #9                  // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      16: areturn

  public boolean matches(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #3                  // Field annotationType:Ljava/lang/Class;
       5: invokevirtual #10                 // Method org/springframework/core/convert/TypeDescriptor.hasAnnotation:(Ljava/lang/Class;)Z
       8: ireturn

  public java.lang.Object convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_3
       1: aload_0
       2: getfield      #3                  // Field annotationType:Ljava/lang/Class;
       5: invokevirtual #11                 // Method org/springframework/core/convert/TypeDescriptor.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       8: astore        4
      10: aload         4
      12: ifnonnull     57
      15: new           #12                 // class java/lang/IllegalStateException
      18: dup
      19: new           #13                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #15                 // String Expected [
      28: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #3                  // Field annotationType:Ljava/lang/Class;
      35: invokevirtual #17                 // Method java/lang/Class.getName:()Ljava/lang/String;
      38: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #18                 // String ] to be present on
      43: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_3
      47: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: new           #22                 // class org/springframework/format/support/FormattingConversionService$AnnotationConverterKey
      60: dup
      61: aload         4
      63: aload_3
      64: invokevirtual #23                 // Method org/springframework/core/convert/TypeDescriptor.getObjectType:()Ljava/lang/Class;
      67: invokespecial #24                 // Method org/springframework/format/support/FormattingConversionService$AnnotationConverterKey."<init>":(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)V
      70: astore        5
      72: aload_0
      73: getfield      #1                  // Field this$0:Lorg/springframework/format/support/FormattingConversionService;
      76: invokestatic  #25                 // Method org/springframework/format/support/FormattingConversionService.access$100:(Lorg/springframework/format/support/FormattingConversionService;)Ljava/util/Map;
      79: aload         5
      81: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      86: checkcast     #27                 // class org/springframework/core/convert/converter/GenericConverter
      89: astore        6
      91: aload         6
      93: ifnonnull     153
      96: aload_0
      97: getfield      #4                  // Field annotationFormatterFactory:Lorg/springframework/format/AnnotationFormatterFactory;
     100: aload         5
     102: invokevirtual #28                 // Method org/springframework/format/support/FormattingConversionService$AnnotationConverterKey.getAnnotation:()Ljava/lang/annotation/Annotation;
     105: aload         5
     107: invokevirtual #29                 // Method org/springframework/format/support/FormattingConversionService$AnnotationConverterKey.getFieldType:()Ljava/lang/Class;
     110: invokeinterface #30,  3           // InterfaceMethod org/springframework/format/AnnotationFormatterFactory.getParser:(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Lorg/springframework/format/Parser;
     115: astore        7
     117: new           #31                 // class org/springframework/format/support/FormattingConversionService$ParserConverter
     120: dup
     121: aload_0
     122: getfield      #5                  // Field fieldType:Ljava/lang/Class;
     125: aload         7
     127: aload_0
     128: getfield      #1                  // Field this$0:Lorg/springframework/format/support/FormattingConversionService;
     131: invokespecial #32                 // Method org/springframework/format/support/FormattingConversionService$ParserConverter."<init>":(Ljava/lang/Class;Lorg/springframework/format/Parser;Lorg/springframework/core/convert/ConversionService;)V
     134: astore        6
     136: aload_0
     137: getfield      #1                  // Field this$0:Lorg/springframework/format/support/FormattingConversionService;
     140: invokestatic  #25                 // Method org/springframework/format/support/FormattingConversionService.access$100:(Lorg/springframework/format/support/FormattingConversionService;)Ljava/util/Map;
     143: aload         5
     145: aload         6
     147: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     152: pop
     153: aload         6
     155: aload_1
     156: aload_2
     157: aload_3
     158: invokeinterface #34,  4           // InterfaceMethod org/springframework/core/convert/converter/GenericConverter.convert:(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;
     163: areturn

  public java.lang.String toString();
    Code:
       0: new           #13                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #7                  // class java/lang/String
       9: invokevirtual #17                 // Method java/lang/Class.getName:()Ljava/lang/String;
      12: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #35                 // String  -> @
      17: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_0
      21: getfield      #3                  // Field annotationType:Ljava/lang/Class;
      24: invokevirtual #17                 // Method java/lang/Class.getName:()Ljava/lang/String;
      27: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #36                 // String
      32: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #5                  // Field fieldType:Ljava/lang/Class;
      39: invokevirtual #17                 // Method java/lang/Class.getName:()Ljava/lang/String;
      42: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #37                 // String :
      47: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_0
      51: getfield      #4                  // Field annotationFormatterFactory:Lorg/springframework/format/AnnotationFormatterFactory;
      54: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: areturn
}
