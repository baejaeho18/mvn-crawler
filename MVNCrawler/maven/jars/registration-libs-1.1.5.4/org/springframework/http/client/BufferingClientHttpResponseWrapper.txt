Compiled from "BufferingClientHttpResponseWrapper.java"
final class org.springframework.http.client.BufferingClientHttpResponseWrapper implements org.springframework.http.client.ClientHttpResponse {
  private final org.springframework.http.client.ClientHttpResponse response;

  private byte[] body;

  org.springframework.http.client.BufferingClientHttpResponseWrapper(org.springframework.http.client.ClientHttpResponse);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field response:Lorg/springframework/http/client/ClientHttpResponse;
       9: return

  public org.springframework.http.HttpStatus getStatusCode() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field response:Lorg/springframework/http/client/ClientHttpResponse;
       4: invokeinterface #3,  1            // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getStatusCode:()Lorg/springframework/http/HttpStatus;
       9: areturn

  public int getRawStatusCode() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field response:Lorg/springframework/http/client/ClientHttpResponse;
       4: invokeinterface #4,  1            // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getRawStatusCode:()I
       9: ireturn

  public java.lang.String getStatusText() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field response:Lorg/springframework/http/client/ClientHttpResponse;
       4: invokeinterface #5,  1            // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getStatusText:()Ljava/lang/String;
       9: areturn

  public org.springframework.http.HttpHeaders getHeaders();
    Code:
       0: aload_0
       1: getfield      #2                  // Field response:Lorg/springframework/http/client/ClientHttpResponse;
       4: invokeinterface #6,  1            // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getHeaders:()Lorg/springframework/http/HttpHeaders;
       9: areturn

  public java.io.InputStream getBody() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field body:[B
       4: ifnonnull     23
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field response:Lorg/springframework/http/client/ClientHttpResponse;
      12: invokeinterface #8,  1            // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getBody:()Ljava/io/InputStream;
      17: invokestatic  #9                  // Method org/springframework/util/StreamUtils.copyToByteArray:(Ljava/io/InputStream;)[B
      20: putfield      #7                  // Field body:[B
      23: new           #10                 // class java/io/ByteArrayInputStream
      26: dup
      27: aload_0
      28: getfield      #7                  // Field body:[B
      31: invokespecial #11                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      34: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field response:Lorg/springframework/http/client/ClientHttpResponse;
       4: invokeinterface #12,  1           // InterfaceMethod org/springframework/http/client/ClientHttpResponse.close:()V
       9: return
}
