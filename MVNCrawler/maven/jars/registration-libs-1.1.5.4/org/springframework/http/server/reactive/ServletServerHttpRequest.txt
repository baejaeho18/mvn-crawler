Compiled from "ServletServerHttpRequest.java"
class org.springframework.http.server.reactive.ServletServerHttpRequest extends org.springframework.http.server.reactive.AbstractServerHttpRequest {
  private static final java.lang.String X509_CERTIFICATE_ATTRIBUTE;

  private static final java.lang.String SSL_SESSION_ID_ATTRIBUTE;

  static final org.springframework.core.io.buffer.DataBuffer EOF_BUFFER;

  protected final org.apache.commons.logging.Log logger;

  private final javax.servlet.http.HttpServletRequest request;

  private final org.springframework.http.server.reactive.ServletServerHttpRequest$RequestBodyPublisher bodyPublisher;

  private final java.lang.Object cookieLock;

  private final org.springframework.core.io.buffer.DataBufferFactory bufferFactory;

  private final byte[] buffer;

  public org.springframework.http.server.reactive.ServletServerHttpRequest(javax.servlet.http.HttpServletRequest, javax.servlet.AsyncContext, java.lang.String, org.springframework.core.io.buffer.DataBufferFactory, int) throws java.io.IOException, java.net.URISyntaxException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method initUri:(Ljavax/servlet/http/HttpServletRequest;)Ljava/net/URI;
       5: new           #3                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      12: aload_1
      13: invokeinterface #5,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.getContextPath:()Ljava/lang/String;
      18: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_3
      22: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: aload_1
      29: invokestatic  #8                  // Method initHeaders:(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/http/HttpHeaders;
      32: invokespecial #9                  // Method org/springframework/http/server/reactive/AbstractServerHttpRequest."<init>":(Ljava/net/URI;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;)V
      35: aload_0
      36: aload_0
      37: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      40: invokestatic  #11                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      43: putfield      #12                 // Field logger:Lorg/apache/commons/logging/Log;
      46: aload_0
      47: new           #13                 // class java/lang/Object
      50: dup
      51: invokespecial #14                 // Method java/lang/Object."<init>":()V
      54: putfield      #15                 // Field cookieLock:Ljava/lang/Object;
      57: aload         4
      59: ldc           #16                 // String \'bufferFactory\' must not be null
      61: invokestatic  #17                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      64: iload         5
      66: ifle          73
      69: iconst_1
      70: goto          74
      73: iconst_0
      74: ldc           #18                 // String \'bufferSize\' must be higher than 0
      76: invokestatic  #19                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      79: aload_0
      80: aload_1
      81: putfield      #20                 // Field request:Ljavax/servlet/http/HttpServletRequest;
      84: aload_0
      85: aload         4
      87: putfield      #21                 // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      90: aload_0
      91: iload         5
      93: newarray       byte
      95: putfield      #22                 // Field buffer:[B
      98: aload_2
      99: new           #23                 // class org/springframework/http/server/reactive/ServletServerHttpRequest$RequestAsyncListener
     102: dup
     103: aload_0
     104: aconst_null
     105: invokespecial #24                 // Method org/springframework/http/server/reactive/ServletServerHttpRequest$RequestAsyncListener."<init>":(Lorg/springframework/http/server/reactive/ServletServerHttpRequest;Lorg/springframework/http/server/reactive/ServletServerHttpRequest$1;)V
     108: invokeinterface #25,  2           // InterfaceMethod javax/servlet/AsyncContext.addListener:(Ljavax/servlet/AsyncListener;)V
     113: aload_1
     114: invokeinterface #26,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getInputStream:()Ljavax/servlet/ServletInputStream;
     119: astore        6
     121: aload_0
     122: new           #27                 // class org/springframework/http/server/reactive/ServletServerHttpRequest$RequestBodyPublisher
     125: dup
     126: aload_0
     127: aload         6
     129: invokespecial #28                 // Method org/springframework/http/server/reactive/ServletServerHttpRequest$RequestBodyPublisher."<init>":(Lorg/springframework/http/server/reactive/ServletServerHttpRequest;Ljavax/servlet/ServletInputStream;)V
     132: putfield      #1                  // Field bodyPublisher:Lorg/springframework/http/server/reactive/ServletServerHttpRequest$RequestBodyPublisher;
     135: aload_0
     136: getfield      #1                  // Field bodyPublisher:Lorg/springframework/http/server/reactive/ServletServerHttpRequest$RequestBodyPublisher;
     139: invokevirtual #29                 // Method org/springframework/http/server/reactive/ServletServerHttpRequest$RequestBodyPublisher.registerReadListener:()V
     142: return

  private static java.net.URI initUri(javax.servlet.http.HttpServletRequest) throws java.net.URISyntaxException;
    Code:
       0: aload_0
       1: ldc           #30                 // String \'request\' must not be null
       3: invokestatic  #17                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokeinterface #31,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRequestURL:()Ljava/lang/StringBuffer;
      12: astore_1
      13: aload_0
      14: invokeinterface #32,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
      19: astore_2
      20: aload_2
      21: invokestatic  #33                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      24: ifeq          38
      27: aload_1
      28: bipush        63
      30: invokevirtual #34                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      33: aload_2
      34: invokevirtual #35                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      37: pop
      38: new           #36                 // class java/net/URI
      41: dup
      42: aload_1
      43: invokevirtual #37                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      46: invokespecial #38                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      49: areturn

  private static org.springframework.http.HttpHeaders initHeaders(javax.servlet.http.HttpServletRequest);
    Code:
       0: new           #39                 // class org/springframework/http/HttpHeaders
       3: dup
       4: invokespecial #40                 // Method org/springframework/http/HttpHeaders."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #41,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeaderNames:()Ljava/util/Enumeration;
      14: astore_2
      15: aload_2
      16: invokeinterface #42,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      21: ifeq          74
      24: aload_2
      25: invokeinterface #43,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      30: checkcast     #44                 // class java/lang/String
      33: astore_3
      34: aload_0
      35: aload_3
      36: invokeinterface #45,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeaders:(Ljava/lang/String;)Ljava/util/Enumeration;
      41: astore        4
      43: aload         4
      45: invokeinterface #42,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      50: ifeq          71
      53: aload_1
      54: aload_3
      55: aload         4
      57: invokeinterface #43,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      62: checkcast     #44                 // class java/lang/String
      65: invokevirtual #46                 // Method org/springframework/http/HttpHeaders.add:(Ljava/lang/String;Ljava/lang/String;)V
      68: goto          43
      71: goto          15
      74: aload_1
      75: invokevirtual #47                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      78: astore_2
      79: aload_2
      80: ifnonnull     107
      83: aload_0
      84: invokeinterface #48,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getContentType:()Ljava/lang/String;
      89: astore_3
      90: aload_3
      91: invokestatic  #49                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      94: ifeq          107
      97: aload_3
      98: invokestatic  #50                 // Method org/springframework/http/MediaType.parseMediaType:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
     101: astore_2
     102: aload_1
     103: aload_2
     104: invokevirtual #51                 // Method org/springframework/http/HttpHeaders.setContentType:(Lorg/springframework/http/MediaType;)V
     107: aload_2
     108: ifnull        194
     111: aload_2
     112: invokevirtual #52                 // Method org/springframework/http/MediaType.getCharset:()Ljava/nio/charset/Charset;
     115: ifnonnull     194
     118: aload_0
     119: invokeinterface #53,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getCharacterEncoding:()Ljava/lang/String;
     124: astore_3
     125: aload_3
     126: invokestatic  #49                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
     129: ifeq          194
     132: aload_3
     133: invokestatic  #54                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     136: astore        4
     138: new           #55                 // class org/springframework/util/LinkedCaseInsensitiveMap
     141: dup
     142: invokespecial #56                 // Method org/springframework/util/LinkedCaseInsensitiveMap."<init>":()V
     145: astore        5
     147: aload         5
     149: aload_2
     150: invokevirtual #57                 // Method org/springframework/http/MediaType.getParameters:()Ljava/util/Map;
     153: invokeinterface #58,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     158: aload         5
     160: ldc           #59                 // String charset
     162: aload         4
     164: invokevirtual #60                 // Method java/nio/charset/Charset.toString:()Ljava/lang/String;
     167: invokeinterface #61,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     172: pop
     173: aload_1
     174: new           #62                 // class org/springframework/http/MediaType
     177: dup
     178: aload_2
     179: invokevirtual #63                 // Method org/springframework/http/MediaType.getType:()Ljava/lang/String;
     182: aload_2
     183: invokevirtual #64                 // Method org/springframework/http/MediaType.getSubtype:()Ljava/lang/String;
     186: aload         5
     188: invokespecial #65                 // Method org/springframework/http/MediaType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
     191: invokevirtual #51                 // Method org/springframework/http/HttpHeaders.setContentType:(Lorg/springframework/http/MediaType;)V
     194: aload_1
     195: invokevirtual #66                 // Method org/springframework/http/HttpHeaders.getContentLength:()J
     198: ldc2_w        #67                 // long -1l
     201: lcmp
     202: ifne          223
     205: aload_0
     206: invokeinterface #69,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getContentLength:()I
     211: istore_3
     212: iload_3
     213: iconst_m1
     214: if_icmpeq     223
     217: aload_1
     218: iload_3
     219: i2l
     220: invokevirtual #70                 // Method org/springframework/http/HttpHeaders.setContentLength:(J)V
     223: aload_1
     224: areturn

  public java.lang.String getMethodValue();
    Code:
       0: aload_0
       1: getfield      #20                 // Field request:Ljavax/servlet/http/HttpServletRequest;
       4: invokeinterface #71,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getMethod:()Ljava/lang/String;
       9: areturn

  protected org.springframework.util.MultiValueMap<java.lang.String, org.springframework.http.HttpCookie> initCookies();
    Code:
       0: new           #72                 // class org/springframework/util/LinkedMultiValueMap
       3: dup
       4: invokespecial #73                 // Method org/springframework/util/LinkedMultiValueMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #15                 // Field cookieLock:Ljava/lang/Object;
      12: dup
      13: astore_3
      14: monitorenter
      15: aload_0
      16: getfield      #20                 // Field request:Ljavax/servlet/http/HttpServletRequest;
      19: invokeinterface #74,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getCookies:()[Ljavax/servlet/http/Cookie;
      24: astore_2
      25: aload_3
      26: monitorexit
      27: goto          37
      30: astore        4
      32: aload_3
      33: monitorexit
      34: aload         4
      36: athrow
      37: aload_2
      38: ifnull        102
      41: aload_2
      42: astore_3
      43: aload_3
      44: arraylength
      45: istore        4
      47: iconst_0
      48: istore        5
      50: iload         5
      52: iload         4
      54: if_icmpge     102
      57: aload_3
      58: iload         5
      60: aaload
      61: astore        6
      63: aload         6
      65: invokevirtual #75                 // Method javax/servlet/http/Cookie.getName:()Ljava/lang/String;
      68: astore        7
      70: new           #76                 // class org/springframework/http/HttpCookie
      73: dup
      74: aload         7
      76: aload         6
      78: invokevirtual #77                 // Method javax/servlet/http/Cookie.getValue:()Ljava/lang/String;
      81: invokespecial #78                 // Method org/springframework/http/HttpCookie."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      84: astore        8
      86: aload_1
      87: aload         7
      89: aload         8
      91: invokeinterface #79,  3           // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      96: iinc          5, 1
      99: goto          50
     102: aload_1
     103: areturn
    Exception table:
       from    to  target type
          15    27    30   any
          30    34    30   any

  public java.net.InetSocketAddress getRemoteAddress();
    Code:
       0: new           #80                 // class java/net/InetSocketAddress
       3: dup
       4: aload_0
       5: getfield      #20                 // Field request:Ljavax/servlet/http/HttpServletRequest;
       8: invokeinterface #81,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRemoteHost:()Ljava/lang/String;
      13: aload_0
      14: getfield      #20                 // Field request:Ljavax/servlet/http/HttpServletRequest;
      17: invokeinterface #82,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRemotePort:()I
      22: invokespecial #83                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      25: areturn

  protected org.springframework.http.server.reactive.SslInfo initSslInfo();
    Code:
       0: aload_0
       1: getfield      #20                 // Field request:Ljavax/servlet/http/HttpServletRequest;
       4: invokeinterface #84,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.isSecure:()Z
       9: ifne          14
      12: aconst_null
      13: areturn
      14: new           #85                 // class org/springframework/http/server/reactive/DefaultSslInfo
      17: dup
      18: aload_0
      19: getfield      #20                 // Field request:Ljavax/servlet/http/HttpServletRequest;
      22: ldc           #87                 // String javax.servlet.request.ssl_session_id
      24: invokeinterface #88,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      29: checkcast     #44                 // class java/lang/String
      32: aload_0
      33: getfield      #20                 // Field request:Ljavax/servlet/http/HttpServletRequest;
      36: ldc           #89                 // String javax.servlet.request.X509Certificate
      38: invokeinterface #88,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      43: checkcast     #90                 // class "[Ljava/security/cert/X509Certificate;"
      46: checkcast     #90                 // class "[Ljava/security/cert/X509Certificate;"
      49: invokespecial #91                 // Method org/springframework/http/server/reactive/DefaultSslInfo."<init>":(Ljava/lang/String;[Ljava/security/cert/X509Certificate;)V
      52: areturn

  public reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> getBody();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bodyPublisher:Lorg/springframework/http/server/reactive/ServletServerHttpRequest$RequestBodyPublisher;
       4: invokestatic  #92                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
       7: areturn

  org.springframework.core.io.buffer.DataBuffer readFromInputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field request:Ljavax/servlet/http/HttpServletRequest;
       4: invokeinterface #26,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getInputStream:()Ljavax/servlet/ServletInputStream;
       9: aload_0
      10: getfield      #22                 // Field buffer:[B
      13: invokevirtual #93                 // Method javax/servlet/ServletInputStream.read:([B)I
      16: istore_1
      17: aload_0
      18: getfield      #12                 // Field logger:Lorg/apache/commons/logging/Log;
      21: invokeinterface #94,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      26: ifeq          72
      29: aload_0
      30: getfield      #12                 // Field logger:Lorg/apache/commons/logging/Log;
      33: new           #3                  // class java/lang/StringBuilder
      36: dup
      37: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #95                 // String InputStream read returned
      42: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: iload_1
      46: invokevirtual #96                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      49: iload_1
      50: iconst_m1
      51: if_icmpeq     59
      54: ldc           #97                 // String  bytes
      56: goto          61
      59: ldc           #98                 // String
      61: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokeinterface #99,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      72: iload_1
      73: ifle          102
      76: aload_0
      77: getfield      #21                 // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      80: iload_1
      81: invokeinterface #100,  2          // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.allocateBuffer:(I)Lorg/springframework/core/io/buffer/DataBuffer;
      86: astore_2
      87: aload_2
      88: aload_0
      89: getfield      #22                 // Field buffer:[B
      92: iconst_0
      93: iload_1
      94: invokeinterface #101,  4          // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:([BII)Lorg/springframework/core/io/buffer/DataBuffer;
      99: pop
     100: aload_2
     101: areturn
     102: iload_1
     103: iconst_m1
     104: if_icmpne     111
     107: getstatic     #102                // Field EOF_BUFFER:Lorg/springframework/core/io/buffer/DataBuffer;
     110: areturn
     111: aconst_null
     112: areturn

  public <T> T getNativeRequest();
    Code:
       0: aload_0
       1: getfield      #20                 // Field request:Ljavax/servlet/http/HttpServletRequest;
       4: areturn

  static org.springframework.http.server.reactive.ServletServerHttpRequest$RequestBodyPublisher access$100(org.springframework.http.server.reactive.ServletServerHttpRequest);
    Code:
       0: aload_0
       1: getfield      #1                  // Field bodyPublisher:Lorg/springframework/http/server/reactive/ServletServerHttpRequest$RequestBodyPublisher;
       4: areturn

  static {};
    Code:
       0: new           #103                // class org/springframework/core/io/buffer/DefaultDataBufferFactory
       3: dup
       4: invokespecial #104                // Method org/springframework/core/io/buffer/DefaultDataBufferFactory."<init>":()V
       7: iconst_0
       8: invokevirtual #105                // Method org/springframework/core/io/buffer/DefaultDataBufferFactory.allocateBuffer:(I)Lorg/springframework/core/io/buffer/DefaultDataBuffer;
      11: putstatic     #102                // Field EOF_BUFFER:Lorg/springframework/core/io/buffer/DataBuffer;
      14: return
}
