Compiled from "AbstractListenerReadPublisher.java"
final class org.springframework.http.server.reactive.AbstractListenerReadPublisher$ReadSubscription implements org.reactivestreams.Subscription {
  final org.springframework.http.server.reactive.AbstractListenerReadPublisher this$0;

  private org.springframework.http.server.reactive.AbstractListenerReadPublisher$ReadSubscription(org.springframework.http.server.reactive.AbstractListenerReadPublisher);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: return

  public final void request(long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher;
       4: getfield      #4                  // Field org/springframework/http/server/reactive/AbstractListenerReadPublisher.logger:Lorg/apache/commons/logging/Log;
       7: invokeinterface #5,  1            // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      12: ifeq          51
      15: aload_0
      16: getfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher;
      19: getfield      #4                  // Field org/springframework/http/server/reactive/AbstractListenerReadPublisher.logger:Lorg/apache/commons/logging/Log;
      22: new           #6                  // class java/lang/StringBuilder
      25: dup
      26: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #8                  // String Signal request(
      31: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: lload_1
      35: invokevirtual #10                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      38: ldc           #11                 // String )
      40: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokeinterface #13,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      51: aload_0
      52: getfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher;
      55: invokestatic  #14                 // Method org/springframework/http/server/reactive/AbstractListenerReadPublisher.access$100:(Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher;)Ljava/util/concurrent/atomic/AtomicReference;
      58: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      61: checkcast     #16                 // class org/springframework/http/server/reactive/AbstractListenerReadPublisher$State
      64: aload_0
      65: getfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher;
      68: lload_1
      69: invokevirtual #17                 // Method org/springframework/http/server/reactive/AbstractListenerReadPublisher$State.request:(Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher;J)V
      72: return

  public final void cancel();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher;
       4: getfield      #4                  // Field org/springframework/http/server/reactive/AbstractListenerReadPublisher.logger:Lorg/apache/commons/logging/Log;
       7: invokeinterface #5,  1            // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      12: ifeq          29
      15: aload_0
      16: getfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher;
      19: getfield      #4                  // Field org/springframework/http/server/reactive/AbstractListenerReadPublisher.logger:Lorg/apache/commons/logging/Log;
      22: ldc           #18                 // String Signal cancel()
      24: invokeinterface #13,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      29: aload_0
      30: getfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher;
      33: invokestatic  #14                 // Method org/springframework/http/server/reactive/AbstractListenerReadPublisher.access$100:(Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher;)Ljava/util/concurrent/atomic/AtomicReference;
      36: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      39: checkcast     #16                 // class org/springframework/http/server/reactive/AbstractListenerReadPublisher$State
      42: aload_0
      43: getfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher;
      46: invokevirtual #19                 // Method org/springframework/http/server/reactive/AbstractListenerReadPublisher$State.cancel:(Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher;)V
      49: return

  org.springframework.http.server.reactive.AbstractListenerReadPublisher$ReadSubscription(org.springframework.http.server.reactive.AbstractListenerReadPublisher, org.springframework.http.server.reactive.AbstractListenerReadPublisher$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/springframework/http/server/reactive/AbstractListenerReadPublisher;)V
       5: return
}
