Compiled from "AbstractListenerWriteProcessor.java"
class org.springframework.http.server.reactive.AbstractListenerWriteProcessor$State extends java.lang.Enum<org.springframework.http.server.reactive.AbstractListenerWriteProcessor$State> {
  public static final org.springframework.http.server.reactive.AbstractListenerWriteProcessor$State UNSUBSCRIBED;

  public static final org.springframework.http.server.reactive.AbstractListenerWriteProcessor$State REQUESTED;

  public static final org.springframework.http.server.reactive.AbstractListenerWriteProcessor$State RECEIVED;

  public static final org.springframework.http.server.reactive.AbstractListenerWriteProcessor$State WRITING;

  public static final org.springframework.http.server.reactive.AbstractListenerWriteProcessor$State COMPLETED;

  private static final org.springframework.http.server.reactive.AbstractListenerWriteProcessor$State[] $VALUES;

  public static org.springframework.http.server.reactive.AbstractListenerWriteProcessor$State[] values();
    Code:
       0: getstatic     #2                  // Field $VALUES:[Lorg/springframework/http/server/reactive/AbstractListenerWriteProcessor$State;
       3: invokevirtual #3                  // Method "[Lorg/springframework/http/server/reactive/AbstractListenerWriteProcessor$State;".clone:()Ljava/lang/Object;
       6: checkcast     #4                  // class "[Lorg/springframework/http/server/reactive/AbstractListenerWriteProcessor$State;"
       9: areturn

  public static org.springframework.http.server.reactive.AbstractListenerWriteProcessor$State valueOf(java.lang.String);
    Code:
       0: ldc           #5                  // class org/springframework/http/server/reactive/AbstractListenerWriteProcessor$State
       2: aload_0
       3: invokestatic  #6                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #5                  // class org/springframework/http/server/reactive/AbstractListenerWriteProcessor$State
       9: areturn

  private org.springframework.http.server.reactive.AbstractListenerWriteProcessor$State();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #7                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public <T> void onSubscribe(org.springframework.http.server.reactive.AbstractListenerWriteProcessor<T>, org.reactivestreams.Subscription);
    Code:
       0: aload_2
       1: invokeinterface #8,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       6: return

  public <T> void onNext(org.springframework.http.server.reactive.AbstractListenerWriteProcessor<T>, T);
    Code:
       0: new           #9                  // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #10                 // Method toString:()Ljava/lang/String;
       8: invokespecial #11                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      11: athrow

  public <T> void onError(org.springframework.http.server.reactive.AbstractListenerWriteProcessor<T>, java.lang.Throwable);
    Code:
       0: aload_1
       1: aload_0
       2: getstatic     #12                 // Field COMPLETED:Lorg/springframework/http/server/reactive/AbstractListenerWriteProcessor$State;
       5: invokestatic  #13                 // Method org/springframework/http/server/reactive/AbstractListenerWriteProcessor.access$100:(Lorg/springframework/http/server/reactive/AbstractListenerWriteProcessor;Lorg/springframework/http/server/reactive/AbstractListenerWriteProcessor$State;Lorg/springframework/http/server/reactive/AbstractListenerWriteProcessor$State;)Z
       8: ifeq          26
      11: aload_1
      12: invokevirtual #14                 // Method org/springframework/http/server/reactive/AbstractListenerWriteProcessor.writingComplete:()V
      15: aload_1
      16: invokestatic  #15                 // Method org/springframework/http/server/reactive/AbstractListenerWriteProcessor.access$700:(Lorg/springframework/http/server/reactive/AbstractListenerWriteProcessor;)Lorg/springframework/http/server/reactive/WriteResultPublisher;
      19: aload_2
      20: invokevirtual #16                 // Method org/springframework/http/server/reactive/WriteResultPublisher.publishError:(Ljava/lang/Throwable;)V
      23: goto          41
      26: aload_1
      27: invokestatic  #17                 // Method org/springframework/http/server/reactive/AbstractListenerWriteProcessor.access$800:(Lorg/springframework/http/server/reactive/AbstractListenerWriteProcessor;)Ljava/util/concurrent/atomic/AtomicReference;
      30: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      33: checkcast     #5                  // class org/springframework/http/server/reactive/AbstractListenerWriteProcessor$State
      36: aload_1
      37: aload_2
      38: invokevirtual #19                 // Method onError:(Lorg/springframework/http/server/reactive/AbstractListenerWriteProcessor;Ljava/lang/Throwable;)V
      41: return

  public <T> void onComplete(org.springframework.http.server.reactive.AbstractListenerWriteProcessor<T>);
    Code:
       0: new           #9                  // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #10                 // Method toString:()Ljava/lang/String;
       8: invokespecial #11                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      11: athrow

  public <T> void onWritePossible(org.springframework.http.server.reactive.AbstractListenerWriteProcessor<T>);
    Code:
       0: return

  org.springframework.http.server.reactive.AbstractListenerWriteProcessor$State(java.lang.String, int, org.springframework.http.server.reactive.AbstractListenerWriteProcessor$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method "<init>":(Ljava/lang/String;I)V
       6: return

  static {};
    Code:
       0: new           #20                 // class org/springframework/http/server/reactive/AbstractListenerWriteProcessor$State$1
       3: dup
       4: ldc           #21                 // String UNSUBSCRIBED
       6: iconst_0
       7: invokespecial #22                 // Method org/springframework/http/server/reactive/AbstractListenerWriteProcessor$State$1."<init>":(Ljava/lang/String;I)V
      10: putstatic     #23                 // Field UNSUBSCRIBED:Lorg/springframework/http/server/reactive/AbstractListenerWriteProcessor$State;
      13: new           #24                 // class org/springframework/http/server/reactive/AbstractListenerWriteProcessor$State$2
      16: dup
      17: ldc           #25                 // String REQUESTED
      19: iconst_1
      20: invokespecial #26                 // Method org/springframework/http/server/reactive/AbstractListenerWriteProcessor$State$2."<init>":(Ljava/lang/String;I)V
      23: putstatic     #27                 // Field REQUESTED:Lorg/springframework/http/server/reactive/AbstractListenerWriteProcessor$State;
      26: new           #28                 // class org/springframework/http/server/reactive/AbstractListenerWriteProcessor$State$3
      29: dup
      30: ldc           #29                 // String RECEIVED
      32: iconst_2
      33: invokespecial #30                 // Method org/springframework/http/server/reactive/AbstractListenerWriteProcessor$State$3."<init>":(Ljava/lang/String;I)V
      36: putstatic     #31                 // Field RECEIVED:Lorg/springframework/http/server/reactive/AbstractListenerWriteProcessor$State;
      39: new           #32                 // class org/springframework/http/server/reactive/AbstractListenerWriteProcessor$State$4
      42: dup
      43: ldc           #33                 // String WRITING
      45: iconst_3
      46: invokespecial #34                 // Method org/springframework/http/server/reactive/AbstractListenerWriteProcessor$State$4."<init>":(Ljava/lang/String;I)V
      49: putstatic     #35                 // Field WRITING:Lorg/springframework/http/server/reactive/AbstractListenerWriteProcessor$State;
      52: new           #36                 // class org/springframework/http/server/reactive/AbstractListenerWriteProcessor$State$5
      55: dup
      56: ldc           #37                 // String COMPLETED
      58: iconst_4
      59: invokespecial #38                 // Method org/springframework/http/server/reactive/AbstractListenerWriteProcessor$State$5."<init>":(Ljava/lang/String;I)V
      62: putstatic     #12                 // Field COMPLETED:Lorg/springframework/http/server/reactive/AbstractListenerWriteProcessor$State;
      65: iconst_5
      66: anewarray     #5                  // class org/springframework/http/server/reactive/AbstractListenerWriteProcessor$State
      69: dup
      70: iconst_0
      71: getstatic     #23                 // Field UNSUBSCRIBED:Lorg/springframework/http/server/reactive/AbstractListenerWriteProcessor$State;
      74: aastore
      75: dup
      76: iconst_1
      77: getstatic     #27                 // Field REQUESTED:Lorg/springframework/http/server/reactive/AbstractListenerWriteProcessor$State;
      80: aastore
      81: dup
      82: iconst_2
      83: getstatic     #31                 // Field RECEIVED:Lorg/springframework/http/server/reactive/AbstractListenerWriteProcessor$State;
      86: aastore
      87: dup
      88: iconst_3
      89: getstatic     #35                 // Field WRITING:Lorg/springframework/http/server/reactive/AbstractListenerWriteProcessor$State;
      92: aastore
      93: dup
      94: iconst_4
      95: getstatic     #12                 // Field COMPLETED:Lorg/springframework/http/server/reactive/AbstractListenerWriteProcessor$State;
      98: aastore
      99: putstatic     #2                  // Field $VALUES:[Lorg/springframework/http/server/reactive/AbstractListenerWriteProcessor$State;
     102: return
}
