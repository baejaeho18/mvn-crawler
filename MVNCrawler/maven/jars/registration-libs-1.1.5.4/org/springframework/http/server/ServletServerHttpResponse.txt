Compiled from "ServletServerHttpResponse.java"
public class org.springframework.http.server.ServletServerHttpResponse implements org.springframework.http.server.ServerHttpResponse {
  private final javax.servlet.http.HttpServletResponse servletResponse;

  private final org.springframework.http.HttpHeaders headers;

  private boolean headersWritten;

  private boolean bodyUsed;

  public org.springframework.http.server.ServletServerHttpResponse(javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field headersWritten:Z
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field bodyUsed:Z
      14: aload_1
      15: ldc           #5                  // String HttpServletResponse must not be null
      17: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      20: aload_0
      21: aload_1
      22: putfield      #1                  // Field servletResponse:Ljavax/servlet/http/HttpServletResponse;
      25: aload_0
      26: new           #7                  // class org/springframework/http/server/ServletServerHttpResponse$ServletResponseHttpHeaders
      29: dup
      30: aload_0
      31: aconst_null
      32: invokespecial #8                  // Method org/springframework/http/server/ServletServerHttpResponse$ServletResponseHttpHeaders."<init>":(Lorg/springframework/http/server/ServletServerHttpResponse;Lorg/springframework/http/server/ServletServerHttpResponse$1;)V
      35: putfield      #9                  // Field headers:Lorg/springframework/http/HttpHeaders;
      38: return

  public javax.servlet.http.HttpServletResponse getServletResponse();
    Code:
       0: aload_0
       1: getfield      #1                  // Field servletResponse:Ljavax/servlet/http/HttpServletResponse;
       4: areturn

  public void setStatusCode(org.springframework.http.HttpStatus);
    Code:
       0: aload_1
       1: ldc           #10                 // String HttpStatus must not be null
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #1                  // Field servletResponse:Ljavax/servlet/http/HttpServletResponse;
      10: aload_1
      11: invokevirtual #11                 // Method org/springframework/http/HttpStatus.value:()I
      14: invokeinterface #12,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setStatus:(I)V
      19: return

  public org.springframework.http.HttpHeaders getHeaders();
    Code:
       0: aload_0
       1: getfield      #3                  // Field headersWritten:Z
       4: ifeq          17
       7: aload_0
       8: getfield      #9                  // Field headers:Lorg/springframework/http/HttpHeaders;
      11: invokestatic  #13                 // Method org/springframework/http/HttpHeaders.readOnlyHttpHeaders:(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/HttpHeaders;
      14: goto          21
      17: aload_0
      18: getfield      #9                  // Field headers:Lorg/springframework/http/HttpHeaders;
      21: areturn

  public java.io.OutputStream getBody() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field bodyUsed:Z
       5: aload_0
       6: invokespecial #14                 // Method writeHeaders:()V
       9: aload_0
      10: getfield      #1                  // Field servletResponse:Ljavax/servlet/http/HttpServletResponse;
      13: invokeinterface #15,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getOutputStream:()Ljavax/servlet/ServletOutputStream;
      18: areturn

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #14                 // Method writeHeaders:()V
       4: aload_0
       5: getfield      #4                  // Field bodyUsed:Z
       8: ifeq          20
      11: aload_0
      12: getfield      #1                  // Field servletResponse:Ljavax/servlet/http/HttpServletResponse;
      15: invokeinterface #16,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.flushBuffer:()V
      20: return

  public void close();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method writeHeaders:()V
       4: return

  private void writeHeaders();
    Code:
       0: aload_0
       1: getfield      #3                  // Field headersWritten:Z
       4: ifne          123
       7: aload_0
       8: invokevirtual #17                 // Method getHeaders:()Lorg/springframework/http/HttpHeaders;
      11: aload_0
      12: invokedynamic #18,  0             // InvokeDynamic #0:accept:(Lorg/springframework/http/server/ServletServerHttpResponse;)Ljava/util/function/BiConsumer;
      17: invokevirtual #19                 // Method org/springframework/http/HttpHeaders.forEach:(Ljava/util/function/BiConsumer;)V
      20: aload_0
      21: getfield      #1                  // Field servletResponse:Ljavax/servlet/http/HttpServletResponse;
      24: invokeinterface #20,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getContentType:()Ljava/lang/String;
      29: ifnonnull     61
      32: aload_0
      33: getfield      #9                  // Field headers:Lorg/springframework/http/HttpHeaders;
      36: invokevirtual #21                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      39: ifnull        61
      42: aload_0
      43: getfield      #1                  // Field servletResponse:Ljavax/servlet/http/HttpServletResponse;
      46: aload_0
      47: getfield      #9                  // Field headers:Lorg/springframework/http/HttpHeaders;
      50: invokevirtual #21                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      53: invokevirtual #22                 // Method org/springframework/http/MediaType.toString:()Ljava/lang/String;
      56: invokeinterface #23,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setContentType:(Ljava/lang/String;)V
      61: aload_0
      62: getfield      #1                  // Field servletResponse:Ljavax/servlet/http/HttpServletResponse;
      65: invokeinterface #24,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getCharacterEncoding:()Ljava/lang/String;
      70: ifnonnull     118
      73: aload_0
      74: getfield      #9                  // Field headers:Lorg/springframework/http/HttpHeaders;
      77: invokevirtual #21                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      80: ifnull        118
      83: aload_0
      84: getfield      #9                  // Field headers:Lorg/springframework/http/HttpHeaders;
      87: invokevirtual #21                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      90: invokevirtual #25                 // Method org/springframework/http/MediaType.getCharset:()Ljava/nio/charset/Charset;
      93: ifnull        118
      96: aload_0
      97: getfield      #1                  // Field servletResponse:Ljavax/servlet/http/HttpServletResponse;
     100: aload_0
     101: getfield      #9                  // Field headers:Lorg/springframework/http/HttpHeaders;
     104: invokevirtual #21                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
     107: invokevirtual #25                 // Method org/springframework/http/MediaType.getCharset:()Ljava/nio/charset/Charset;
     110: invokevirtual #26                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
     113: invokeinterface #27,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setCharacterEncoding:(Ljava/lang/String;)V
     118: aload_0
     119: iconst_1
     120: putfield      #3                  // Field headersWritten:Z
     123: return

  private void lambda$writeHeaders$0(java.lang.String, java.util.List);
    Code:
       0: aload_2
       1: invokeinterface #28,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          42
      16: aload_3
      17: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #31                 // class java/lang/String
      25: astore        4
      27: aload_0
      28: getfield      #1                  // Field servletResponse:Ljavax/servlet/http/HttpServletResponse;
      31: aload_1
      32: aload         4
      34: invokeinterface #32,  3           // InterfaceMethod javax/servlet/http/HttpServletResponse.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      39: goto          7
      42: return

  static javax.servlet.http.HttpServletResponse access$100(org.springframework.http.server.ServletServerHttpResponse);
    Code:
       0: aload_0
       1: getfield      #1                  // Field servletResponse:Ljavax/servlet/http/HttpServletResponse;
       4: areturn
}
