Compiled from "WriteResultPublisher.java"
final class org.springframework.http.server.reactive.WriteResultPublisher$WriteResultSubscription implements org.reactivestreams.Subscription {
  private final org.springframework.http.server.reactive.WriteResultPublisher publisher;

  public org.springframework.http.server.reactive.WriteResultPublisher$WriteResultSubscription(org.springframework.http.server.reactive.WriteResultPublisher);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field publisher:Lorg/springframework/http/server/reactive/WriteResultPublisher;
       9: return

  public final void request(long);
    Code:
       0: invokestatic  #3                  // Method org/springframework/http/server/reactive/WriteResultPublisher.access$000:()Lorg/apache/commons/logging/Log;
       3: invokeinterface #4,  1            // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
       8: ifeq          45
      11: invokestatic  #3                  // Method org/springframework/http/server/reactive/WriteResultPublisher.access$000:()Lorg/apache/commons/logging/Log;
      14: new           #5                  // class java/lang/StringBuilder
      17: dup
      18: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      21: aload_0
      22: invokespecial #7                  // Method state:()Lorg/springframework/http/server/reactive/WriteResultPublisher$State;
      25: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: ldc           #9                  // String  request:
      30: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: lload_1
      34: invokevirtual #11                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      37: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokeinterface #13,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      45: aload_0
      46: invokespecial #7                  // Method state:()Lorg/springframework/http/server/reactive/WriteResultPublisher$State;
      49: aload_0
      50: getfield      #2                  // Field publisher:Lorg/springframework/http/server/reactive/WriteResultPublisher;
      53: lload_1
      54: invokevirtual #14                 // Method org/springframework/http/server/reactive/WriteResultPublisher$State.request:(Lorg/springframework/http/server/reactive/WriteResultPublisher;J)V
      57: return

  public final void cancel();
    Code:
       0: invokestatic  #3                  // Method org/springframework/http/server/reactive/WriteResultPublisher.access$000:()Lorg/apache/commons/logging/Log;
       3: invokeinterface #4,  1            // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
       8: ifeq          41
      11: invokestatic  #3                  // Method org/springframework/http/server/reactive/WriteResultPublisher.access$000:()Lorg/apache/commons/logging/Log;
      14: new           #5                  // class java/lang/StringBuilder
      17: dup
      18: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      21: aload_0
      22: invokespecial #7                  // Method state:()Lorg/springframework/http/server/reactive/WriteResultPublisher$State;
      25: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: ldc           #15                 // String  cancel
      30: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokeinterface #13,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      41: aload_0
      42: invokespecial #7                  // Method state:()Lorg/springframework/http/server/reactive/WriteResultPublisher$State;
      45: aload_0
      46: getfield      #2                  // Field publisher:Lorg/springframework/http/server/reactive/WriteResultPublisher;
      49: invokevirtual #16                 // Method org/springframework/http/server/reactive/WriteResultPublisher$State.cancel:(Lorg/springframework/http/server/reactive/WriteResultPublisher;)V
      52: return

  private org.springframework.http.server.reactive.WriteResultPublisher$State state();
    Code:
       0: aload_0
       1: getfield      #2                  // Field publisher:Lorg/springframework/http/server/reactive/WriteResultPublisher;
       4: invokestatic  #17                 // Method org/springframework/http/server/reactive/WriteResultPublisher.access$100:(Lorg/springframework/http/server/reactive/WriteResultPublisher;)Ljava/util/concurrent/atomic/AtomicReference;
       7: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      10: checkcast     #19                 // class org/springframework/http/server/reactive/WriteResultPublisher$State
      13: areturn
}
