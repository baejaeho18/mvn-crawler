Compiled from "ReactorServerHttpResponse.java"
class org.springframework.http.server.reactive.ReactorServerHttpResponse extends org.springframework.http.server.reactive.AbstractServerHttpResponse implements org.springframework.http.ZeroCopyHttpOutputMessage {
  private final reactor.ipc.netty.http.server.HttpServerResponse response;

  public org.springframework.http.server.reactive.ReactorServerHttpResponse(reactor.ipc.netty.http.server.HttpServerResponse, org.springframework.core.io.buffer.DataBufferFactory);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method org/springframework/http/server/reactive/AbstractServerHttpResponse."<init>":(Lorg/springframework/core/io/buffer/DataBufferFactory;)V
       5: aload_1
       6: ldc           #2                  // String HttpServerResponse must not be null
       8: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field response:Lreactor/ipc/netty/http/server/HttpServerResponse;
      16: return

  public <T> T getNativeResponse();
    Code:
       0: aload_0
       1: getfield      #4                  // Field response:Lreactor/ipc/netty/http/server/HttpServerResponse;
       4: areturn

  protected void applyStatusCode();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getStatusCodeValue:()Ljava/lang/Integer;
       4: astore_1
       5: aload_1
       6: ifnull        26
       9: aload_0
      10: getfield      #4                  // Field response:Lreactor/ipc/netty/http/server/HttpServerResponse;
      13: aload_1
      14: invokevirtual #6                  // Method java/lang/Integer.intValue:()I
      17: invokestatic  #7                  // Method io/netty/handler/codec/http/HttpResponseStatus.valueOf:(I)Lio/netty/handler/codec/http/HttpResponseStatus;
      20: invokeinterface #8,  2            // InterfaceMethod reactor/ipc/netty/http/server/HttpServerResponse.status:(Lio/netty/handler/codec/http/HttpResponseStatus;)Lreactor/ipc/netty/http/server/HttpServerResponse;
      25: pop
      26: return

  protected reactor.core.publisher.Mono<java.lang.Void> writeWithInternal(org.reactivestreams.Publisher<? extends org.springframework.core.io.buffer.DataBuffer>);
    Code:
       0: aload_1
       1: invokestatic  #9                  // Method toByteBufs:(Lorg/reactivestreams/Publisher;)Lorg/reactivestreams/Publisher;
       4: astore_2
       5: aload_0
       6: getfield      #4                  // Field response:Lreactor/ipc/netty/http/server/HttpServerResponse;
       9: aload_2
      10: invokeinterface #10,  2           // InterfaceMethod reactor/ipc/netty/http/server/HttpServerResponse.send:(Lorg/reactivestreams/Publisher;)Lreactor/ipc/netty/NettyOutbound;
      15: invokeinterface #11,  1           // InterfaceMethod reactor/ipc/netty/NettyOutbound.then:()Lreactor/core/publisher/Mono;
      20: areturn

  protected reactor.core.publisher.Mono<java.lang.Void> writeAndFlushWithInternal(org.reactivestreams.Publisher<? extends org.reactivestreams.Publisher<? extends org.springframework.core.io.buffer.DataBuffer>>);
    Code:
       0: aload_1
       1: invokestatic  #12                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
       4: invokedynamic #13,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
       9: invokevirtual #14                 // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      12: astore_2
      13: aload_0
      14: getfield      #4                  // Field response:Lreactor/ipc/netty/http/server/HttpServerResponse;
      17: aload_2
      18: invokeinterface #15,  2           // InterfaceMethod reactor/ipc/netty/http/server/HttpServerResponse.sendGroups:(Lorg/reactivestreams/Publisher;)Lreactor/ipc/netty/NettyOutbound;
      23: invokeinterface #11,  1           // InterfaceMethod reactor/ipc/netty/NettyOutbound.then:()Lreactor/core/publisher/Mono;
      28: areturn

  protected void applyHeaders();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method getHeaders:()Lorg/springframework/http/HttpHeaders;
       4: aload_0
       5: invokedynamic #17,  0             // InvokeDynamic #1:accept:(Lorg/springframework/http/server/reactive/ReactorServerHttpResponse;)Ljava/util/function/BiConsumer;
      10: invokevirtual #18                 // Method org/springframework/http/HttpHeaders.forEach:(Ljava/util/function/BiConsumer;)V
      13: return

  protected void applyCookies();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getCookies:()Lorg/springframework/util/MultiValueMap;
       4: invokeinterface #20,  1           // InterfaceMethod org/springframework/util/MultiValueMap.keySet:()Ljava/util/Set;
       9: invokeinterface #21,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          196
      24: aload_1
      25: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #24                 // class java/lang/String
      33: astore_2
      34: aload_0
      35: invokevirtual #19                 // Method getCookies:()Lorg/springframework/util/MultiValueMap;
      38: aload_2
      39: invokeinterface #25,  2           // InterfaceMethod org/springframework/util/MultiValueMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #26                 // class java/util/List
      47: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      52: astore_3
      53: aload_3
      54: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          193
      62: aload_3
      63: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: checkcast     #28                 // class org/springframework/http/ResponseCookie
      71: astore        4
      73: new           #29                 // class io/netty/handler/codec/http/cookie/DefaultCookie
      76: dup
      77: aload_2
      78: aload         4
      80: invokevirtual #30                 // Method org/springframework/http/ResponseCookie.getValue:()Ljava/lang/String;
      83: invokespecial #31                 // Method io/netty/handler/codec/http/cookie/DefaultCookie."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      86: astore        5
      88: aload         4
      90: invokevirtual #32                 // Method org/springframework/http/ResponseCookie.getMaxAge:()Ljava/time/Duration;
      93: invokevirtual #33                 // Method java/time/Duration.isNegative:()Z
      96: ifne          114
      99: aload         5
     101: aload         4
     103: invokevirtual #32                 // Method org/springframework/http/ResponseCookie.getMaxAge:()Ljava/time/Duration;
     106: invokevirtual #34                 // Method java/time/Duration.getSeconds:()J
     109: invokeinterface #35,  3           // InterfaceMethod io/netty/handler/codec/http/cookie/Cookie.setMaxAge:(J)V
     114: aload         4
     116: invokevirtual #36                 // Method org/springframework/http/ResponseCookie.getDomain:()Ljava/lang/String;
     119: ifnull        134
     122: aload         5
     124: aload         4
     126: invokevirtual #36                 // Method org/springframework/http/ResponseCookie.getDomain:()Ljava/lang/String;
     129: invokeinterface #37,  2           // InterfaceMethod io/netty/handler/codec/http/cookie/Cookie.setDomain:(Ljava/lang/String;)V
     134: aload         4
     136: invokevirtual #38                 // Method org/springframework/http/ResponseCookie.getPath:()Ljava/lang/String;
     139: ifnull        154
     142: aload         5
     144: aload         4
     146: invokevirtual #38                 // Method org/springframework/http/ResponseCookie.getPath:()Ljava/lang/String;
     149: invokeinterface #39,  2           // InterfaceMethod io/netty/handler/codec/http/cookie/Cookie.setPath:(Ljava/lang/String;)V
     154: aload         5
     156: aload         4
     158: invokevirtual #40                 // Method org/springframework/http/ResponseCookie.isSecure:()Z
     161: invokeinterface #41,  2           // InterfaceMethod io/netty/handler/codec/http/cookie/Cookie.setSecure:(Z)V
     166: aload         5
     168: aload         4
     170: invokevirtual #42                 // Method org/springframework/http/ResponseCookie.isHttpOnly:()Z
     173: invokeinterface #43,  2           // InterfaceMethod io/netty/handler/codec/http/cookie/Cookie.setHttpOnly:(Z)V
     178: aload_0
     179: getfield      #4                  // Field response:Lreactor/ipc/netty/http/server/HttpServerResponse;
     182: aload         5
     184: invokeinterface #44,  2           // InterfaceMethod reactor/ipc/netty/http/server/HttpServerResponse.addCookie:(Lio/netty/handler/codec/http/cookie/Cookie;)Lreactor/ipc/netty/http/server/HttpServerResponse;
     189: pop
     190: goto          53
     193: goto          15
     196: return

  public reactor.core.publisher.Mono<java.lang.Void> writeWith(java.io.File, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: lload         4
       6: invokedynamic #45,  0             // InvokeDynamic #2:get:(Lorg/springframework/http/server/reactive/ReactorServerHttpResponse;Ljava/io/File;JJ)Ljava/util/function/Supplier;
      11: invokevirtual #46                 // Method doCommit:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      14: areturn

  private static org.reactivestreams.Publisher<io.netty.buffer.ByteBuf> toByteBufs(org.reactivestreams.Publisher<? extends org.springframework.core.io.buffer.DataBuffer>);
    Code:
       0: aload_0
       1: invokestatic  #12                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
       4: invokedynamic #47,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
       9: invokevirtual #14                 // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      12: areturn

  private reactor.core.publisher.Mono lambda$writeWith$1(java.io.File, long, long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field response:Lreactor/ipc/netty/http/server/HttpServerResponse;
       4: aload_1
       5: invokevirtual #48                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       8: lload_2
       9: lload         4
      11: invokeinterface #49,  6           // InterfaceMethod reactor/ipc/netty/http/server/HttpServerResponse.sendFile:(Ljava/nio/file/Path;JJ)Lreactor/ipc/netty/NettyOutbound;
      16: invokeinterface #11,  1           // InterfaceMethod reactor/ipc/netty/NettyOutbound.then:()Lreactor/core/publisher/Mono;
      21: areturn

  private void lambda$applyHeaders$0(java.lang.String, java.util.List);
    Code:
       0: aload_2
       1: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          46
      16: aload_3
      17: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #24                 // class java/lang/String
      25: astore        4
      27: aload_0
      28: getfield      #4                  // Field response:Lreactor/ipc/netty/http/server/HttpServerResponse;
      31: invokeinterface #50,  1           // InterfaceMethod reactor/ipc/netty/http/server/HttpServerResponse.responseHeaders:()Lio/netty/handler/codec/http/HttpHeaders;
      36: aload_1
      37: aload         4
      39: invokevirtual #51                 // Method io/netty/handler/codec/http/HttpHeaders.add:(Ljava/lang/String;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      42: pop
      43: goto          7
      46: return
}
