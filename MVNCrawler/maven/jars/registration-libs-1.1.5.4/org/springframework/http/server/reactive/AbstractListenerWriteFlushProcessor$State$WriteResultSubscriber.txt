Compiled from "AbstractListenerWriteFlushProcessor.java"
class org.springframework.http.server.reactive.AbstractListenerWriteFlushProcessor$State$WriteResultSubscriber implements org.reactivestreams.Subscriber<java.lang.Void> {
  private final org.springframework.http.server.reactive.AbstractListenerWriteFlushProcessor<?> processor;

  public org.springframework.http.server.reactive.AbstractListenerWriteFlushProcessor$State$WriteResultSubscriber(org.springframework.http.server.reactive.AbstractListenerWriteFlushProcessor<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field processor:Lorg/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor;
       9: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_1
       1: ldc2_w        #4                  // long 9223372036854775807l
       4: invokeinterface #6,  3            // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
       9: return

  public void onNext(java.lang.Void);
    Code:
       0: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field processor:Lorg/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor;
       4: invokevirtual #7                  // Method org/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor.cancel:()V
       7: aload_0
       8: getfield      #2                  // Field processor:Lorg/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor;
      11: aload_1
      12: invokevirtual #8                  // Method org/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor.onError:(Ljava/lang/Throwable;)V
      15: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field processor:Lorg/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor;
       4: getfield      #9                  // Field org/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor.logger:Lorg/apache/commons/logging/Log;
       7: invokeinterface #10,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      12: ifeq          52
      15: aload_0
      16: getfield      #2                  // Field processor:Lorg/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor;
      19: getfield      #9                  // Field org/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor.logger:Lorg/apache/commons/logging/Log;
      22: new           #11                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      29: aload_0
      30: getfield      #2                  // Field processor:Lorg/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor;
      33: invokestatic  #13                 // Method org/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor.access$400:(Lorg/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor;)Ljava/util/concurrent/atomic/AtomicReference;
      36: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: ldc           #15                 // String  writeComplete
      41: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      52: aload_0
      53: getfield      #2                  // Field processor:Lorg/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor;
      56: invokestatic  #13                 // Method org/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor.access$400:(Lorg/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor;)Ljava/util/concurrent/atomic/AtomicReference;
      59: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      62: checkcast     #20                 // class org/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor$State
      65: aload_0
      66: getfield      #2                  // Field processor:Lorg/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor;
      69: invokevirtual #21                 // Method org/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor$State.writeComplete:(Lorg/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor;)V
      72: return

  public void onNext(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class java/lang/Void
       5: invokevirtual #23                 // Method onNext:(Ljava/lang/Void;)V
       8: return
}
