Compiled from "SynchronossPartHttpMessageReader.java"
class org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader$SynchronossPart extends org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader$AbstractSynchronossPart {
  private final org.synchronoss.cloud.nio.stream.storage.StreamStorage storage;

  org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader$SynchronossPart(org.springframework.http.HttpHeaders, org.synchronoss.cloud.nio.stream.storage.StreamStorage, org.springframework.core.io.buffer.DataBufferFactory);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokespecial #1                  // Method org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$AbstractSynchronossPart."<init>":(Lorg/springframework/http/HttpHeaders;Lorg/springframework/core/io/buffer/DataBufferFactory;)V
       6: aload_2
       7: ldc           #2                  // String \'storage\' is required
       9: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_2
      14: putfield      #4                  // Field storage:Lorg/synchronoss/cloud/nio/stream/storage/StreamStorage;
      17: return

  public reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> content();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getStorage:()Lorg/synchronoss/cloud/nio/stream/storage/StreamStorage;
       4: dup
       5: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: pop
       9: invokedynamic #7,  0              // InvokeDynamic #0:call:(Lorg/synchronoss/cloud/nio/stream/storage/StreamStorage;)Ljava/util/concurrent/Callable;
      14: aload_0
      15: invokevirtual #8                  // Method getBufferFactory:()Lorg/springframework/core/io/buffer/DataBufferFactory;
      18: sipush        4096
      21: invokestatic  #9                  // Method org/springframework/core/io/buffer/DataBufferUtils.readInputStream:(Ljava/util/concurrent/Callable;Lorg/springframework/core/io/buffer/DataBufferFactory;I)Lreactor/core/publisher/Flux;
      24: areturn

  protected org.synchronoss.cloud.nio.stream.storage.StreamStorage getStorage();
    Code:
       0: aload_0
       1: getfield      #4                  // Field storage:Lorg/synchronoss/cloud/nio/stream/storage/StreamStorage;
       4: areturn
}
