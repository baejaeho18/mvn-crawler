Compiled from "Jackson2CodecSupport.java"
public abstract class org.springframework.http.codec.json.Jackson2CodecSupport {
  public static final java.lang.String JSON_VIEW_HINT;

  private static final java.lang.String JSON_VIEW_HINT_ERROR;

  private static final java.util.List<org.springframework.util.MimeType> DEFAULT_MIME_TYPES;

  private final com.fasterxml.jackson.databind.ObjectMapper objectMapper;

  private final java.util.List<org.springframework.util.MimeType> mimeTypes;

  protected org.springframework.http.codec.json.Jackson2CodecSupport(com.fasterxml.jackson.databind.ObjectMapper, org.springframework.util.MimeType...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String ObjectMapper must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      15: aload_0
      16: aload_2
      17: invokestatic  #5                  // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
      20: ifne          33
      23: aload_2
      24: invokestatic  #6                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      27: invokestatic  #7                  // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      30: goto          36
      33: getstatic     #8                  // Field DEFAULT_MIME_TYPES:Ljava/util/List;
      36: putfield      #9                  // Field mimeTypes:Ljava/util/List;
      39: return

  public com.fasterxml.jackson.databind.ObjectMapper getObjectMapper();
    Code:
       0: aload_0
       1: getfield      #4                  // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
       4: areturn

  protected java.util.List<org.springframework.util.MimeType> getMimeTypes();
    Code:
       0: aload_0
       1: getfield      #9                  // Field mimeTypes:Ljava/util/List;
       4: areturn

  protected boolean supportsMimeType(org.springframework.util.MimeType);
    Code:
       0: aload_1
       1: ifnull        27
       4: aload_0
       5: getfield      #9                  // Field mimeTypes:Ljava/util/List;
       8: invokeinterface #10,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      13: aload_1
      14: invokedynamic #11,  0             // InvokeDynamic #0:test:(Lorg/springframework/util/MimeType;)Ljava/util/function/Predicate;
      19: invokeinterface #12,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  protected com.fasterxml.jackson.databind.JavaType getJavaType(java.lang.reflect.Type, java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
       4: invokevirtual #13                 // Method com/fasterxml/jackson/databind/ObjectMapper.getTypeFactory:()Lcom/fasterxml/jackson/databind/type/TypeFactory;
       7: astore_3
       8: aload_3
       9: aload_1
      10: aload_2
      11: invokestatic  #14                 // Method org/springframework/core/GenericTypeResolver.resolveType:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Ljava/lang/reflect/Type;
      14: invokevirtual #15                 // Method com/fasterxml/jackson/databind/type/TypeFactory.constructType:(Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JavaType;
      17: areturn

  protected java.util.Map<java.lang.String, java.lang.Object> getHints(org.springframework.core.ResolvableType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method getParameter:(Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/MethodParameter;
       5: astore_2
       6: aload_2
       7: ifnull        78
      10: aload_0
      11: aload_2
      12: ldc           #17                 // class com/fasterxml/jackson/annotation/JsonView
      14: invokevirtual #18                 // Method getAnnotation:(Lorg/springframework/core/MethodParameter;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      17: checkcast     #17                 // class com/fasterxml/jackson/annotation/JsonView
      20: astore_3
      21: aload_3
      22: ifnull        78
      25: aload_3
      26: invokeinterface #19,  1           // InterfaceMethod com/fasterxml/jackson/annotation/JsonView.value:()[Ljava/lang/Class;
      31: astore        4
      33: aload         4
      35: arraylength
      36: iconst_1
      37: if_icmpne     44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: new           #20                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #23                 // String @JsonView only supported for write hints with exactly 1 class argument:
      54: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_2
      58: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      61: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokestatic  #27                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      67: getstatic     #28                 // Field JSON_VIEW_HINT:Ljava/lang/String;
      70: aload         4
      72: iconst_0
      73: aaload
      74: invokestatic  #29                 // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
      77: areturn
      78: invokestatic  #30                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      81: areturn

  protected org.springframework.core.MethodParameter getParameter(org.springframework.core.ResolvableType);
    Code:
       0: aload_1
       1: invokevirtual #31                 // Method org/springframework/core/ResolvableType.getSource:()Ljava/lang/Object;
       4: instanceof    #32                 // class org/springframework/core/MethodParameter
       7: ifeq          20
      10: aload_1
      11: invokevirtual #31                 // Method org/springframework/core/ResolvableType.getSource:()Ljava/lang/Object;
      14: checkcast     #32                 // class org/springframework/core/MethodParameter
      17: goto          21
      20: aconst_null
      21: areturn

  protected abstract <A extends java.lang.annotation.Annotation> A getAnnotation(org.springframework.core.MethodParameter, java.lang.Class<A>);

  private static boolean lambda$supportsMimeType$0(org.springframework.util.MimeType, org.springframework.util.MimeType);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #33                 // Method org/springframework/util/MimeType.isCompatibleWith:(Lorg/springframework/util/MimeType;)Z
       5: ireturn

  static {};
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #22                 // class org/springframework/http/codec/json/Jackson2CodecSupport
       9: invokevirtual #34                 // Method java/lang/Class.getName:()Ljava/lang/String;
      12: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #35                 // String .jsonView
      17: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: putstatic     #28                 // Field JSON_VIEW_HINT:Ljava/lang/String;
      26: iconst_2
      27: anewarray     #36                 // class org/springframework/util/MimeType
      30: dup
      31: iconst_0
      32: new           #36                 // class org/springframework/util/MimeType
      35: dup
      36: ldc           #37                 // String application
      38: ldc           #38                 // String json
      40: getstatic     #39                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      43: invokespecial #40                 // Method org/springframework/util/MimeType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
      46: aastore
      47: dup
      48: iconst_1
      49: new           #36                 // class org/springframework/util/MimeType
      52: dup
      53: ldc           #37                 // String application
      55: ldc           #41                 // String *+json
      57: getstatic     #39                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      60: invokespecial #40                 // Method org/springframework/util/MimeType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
      63: aastore
      64: invokestatic  #6                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      67: invokestatic  #7                  // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      70: putstatic     #8                  // Field DEFAULT_MIME_TYPES:Ljava/util/List;
      73: return
}
