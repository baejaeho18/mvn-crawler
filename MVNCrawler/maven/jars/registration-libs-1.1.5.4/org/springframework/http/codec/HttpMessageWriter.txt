Compiled from "HttpMessageWriter.java"
public interface org.springframework.http.codec.HttpMessageWriter<T> {
  public abstract java.util.List<org.springframework.http.MediaType> getWritableMediaTypes();

  public abstract boolean canWrite(org.springframework.core.ResolvableType, org.springframework.http.MediaType);

  public abstract reactor.core.publisher.Mono<java.lang.Void> write(org.reactivestreams.Publisher<? extends T>, org.springframework.core.ResolvableType, org.springframework.http.MediaType, org.springframework.http.ReactiveHttpOutputMessage, java.util.Map<java.lang.String, java.lang.Object>);

  public default reactor.core.publisher.Mono<java.lang.Void> write(org.reactivestreams.Publisher<? extends T>, org.springframework.core.ResolvableType, org.springframework.core.ResolvableType, org.springframework.http.MediaType, org.springframework.http.server.reactive.ServerHttpRequest, org.springframework.http.server.reactive.ServerHttpResponse, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload         4
       5: aload         6
       7: aload         7
       9: invokeinterface #1,  6            // InterfaceMethod write:(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
      14: areturn
}
