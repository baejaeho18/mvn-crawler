Compiled from "AbstractJackson2Encoder.java"
public abstract class org.springframework.http.codec.json.AbstractJackson2Encoder extends org.springframework.http.codec.json.Jackson2CodecSupport implements org.springframework.http.codec.HttpMessageEncoder<java.lang.Object> {
  private static final byte[] NEWLINE_SEPARATOR;

  private static final java.util.Map<org.springframework.http.MediaType, byte[]> STREAM_SEPARATORS;

  private final java.util.List<org.springframework.http.MediaType> streamingMediaTypes;

  protected org.springframework.http.codec.json.AbstractJackson2Encoder(com.fasterxml.jackson.databind.ObjectMapper, org.springframework.util.MimeType...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/springframework/http/codec/json/Jackson2CodecSupport."<init>":(Lcom/fasterxml/jackson/databind/ObjectMapper;[Lorg/springframework/util/MimeType;)V
       6: aload_0
       7: new           #2                  // class java/util/ArrayList
      10: dup
      11: iconst_1
      12: invokespecial #3                  // Method java/util/ArrayList."<init>":(I)V
      15: putfield      #4                  // Field streamingMediaTypes:Ljava/util/List;
      18: return

  public void setStreamingMediaTypes(java.util.List<org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field streamingMediaTypes:Ljava/util/List;
       4: invokeinterface #5,  1            // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: getfield      #4                  // Field streamingMediaTypes:Ljava/util/List;
      13: aload_1
      14: invokeinterface #6,  2            // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: return

  public boolean canEncode(org.springframework.core.ResolvableType, org.springframework.util.MimeType);
    Code:
       0: aload_1
       1: ldc           #7                  // class java/lang/Object
       3: invokevirtual #8                  // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
       6: astore_3
       7: aload_0
       8: aload_2
       9: invokevirtual #9                  // Method supportsMimeType:(Lorg/springframework/util/MimeType;)Z
      12: ifeq          49
      15: ldc           #7                  // class java/lang/Object
      17: aload_3
      18: if_acmpeq     45
      21: ldc           #10                 // class java/lang/String
      23: aload_1
      24: aload_3
      25: invokevirtual #8                  // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
      28: invokevirtual #11                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      31: ifne          49
      34: aload_0
      35: invokevirtual #12                 // Method getObjectMapper:()Lcom/fasterxml/jackson/databind/ObjectMapper;
      38: aload_3
      39: invokevirtual #13                 // Method com/fasterxml/jackson/databind/ObjectMapper.canSerialize:(Ljava/lang/Class;)Z
      42: ifeq          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn

  public reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> encode(org.reactivestreams.Publisher<?>, org.springframework.core.io.buffer.DataBufferFactory, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: ldc           #14                 // String \'inputStream\' must not be null
       3: invokestatic  #15                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #16                 // String \'bufferFactory\' must not be null
       9: invokestatic  #15                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #17                 // String \'elementType\' must not be null
      15: invokestatic  #15                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_0
      19: aload         4
      21: invokevirtual #18                 // Method getJsonEncoding:(Lorg/springframework/util/MimeType;)Lcom/fasterxml/jackson/core/JsonEncoding;
      24: astore        6
      26: aload_1
      27: instanceof    #19                 // class reactor/core/publisher/Mono
      30: ifeq          55
      33: aload_1
      34: invokestatic  #20                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      37: aload_0
      38: aload         4
      40: aload_2
      41: aload_3
      42: aload         5
      44: aload         6
      46: invokedynamic #21,  0             // InvokeDynamic #0:apply:(Lorg/springframework/http/codec/json/AbstractJackson2Encoder;Lorg/springframework/util/MimeType;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Ljava/util/Map;Lcom/fasterxml/jackson/core/JsonEncoding;)Ljava/util/function/Function;
      51: invokevirtual #22                 // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      54: areturn
      55: aload_0
      56: getfield      #4                  // Field streamingMediaTypes:Ljava/util/List;
      59: invokeinterface #23,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      64: astore        7
      66: aload         7
      68: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      73: ifeq          143
      76: aload         7
      78: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      83: checkcast     #26                 // class org/springframework/http/MediaType
      86: astore        8
      88: aload         8
      90: aload         4
      92: invokevirtual #27                 // Method org/springframework/http/MediaType.isCompatibleWith:(Lorg/springframework/util/MimeType;)Z
      95: ifeq          140
      98: getstatic     #28                 // Field STREAM_SEPARATORS:Ljava/util/Map;
     101: aload         8
     103: getstatic     #29                 // Field NEWLINE_SEPARATOR:[B
     106: invokeinterface #30,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     111: checkcast     #31                 // class "[B"
     114: astore        9
     116: aload_1
     117: invokestatic  #20                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
     120: aload_0
     121: aload         4
     123: aload_2
     124: aload_3
     125: aload         5
     127: aload         6
     129: aload         9
     131: invokedynamic #32,  0             // InvokeDynamic #1:apply:(Lorg/springframework/http/codec/json/AbstractJackson2Encoder;Lorg/springframework/util/MimeType;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Ljava/util/Map;Lcom/fasterxml/jackson/core/JsonEncoding;[B)Ljava/util/function/Function;
     136: invokevirtual #22                 // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
     139: areturn
     140: goto          66
     143: ldc           #33                 // class java/util/List
     145: iconst_1
     146: anewarray     #34                 // class org/springframework/core/ResolvableType
     149: dup
     150: iconst_0
     151: aload_3
     152: aastore
     153: invokestatic  #35                 // Method org/springframework/core/ResolvableType.forClassWithGenerics:(Ljava/lang/Class;[Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;
     156: astore        7
     158: aload_1
     159: invokestatic  #20                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
     162: invokevirtual #36                 // Method reactor/core/publisher/Flux.collectList:()Lreactor/core/publisher/Mono;
     165: aload_0
     166: aload         4
     168: aload_2
     169: aload         7
     171: aload         5
     173: aload         6
     175: invokedynamic #37,  0             // InvokeDynamic #2:apply:(Lorg/springframework/http/codec/json/AbstractJackson2Encoder;Lorg/springframework/util/MimeType;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Ljava/util/Map;Lcom/fasterxml/jackson/core/JsonEncoding;)Ljava/util/function/Function;
     180: invokevirtual #38                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
     183: invokevirtual #39                 // Method reactor/core/publisher/Mono.flux:()Lreactor/core/publisher/Flux;
     186: areturn

  private org.springframework.core.io.buffer.DataBuffer encodeValue(java.lang.Object, org.springframework.util.MimeType, org.springframework.core.io.buffer.DataBufferFactory, org.springframework.core.ResolvableType, java.util.Map<java.lang.String, java.lang.Object>, com.fasterxml.jackson.core.JsonEncoding);
    Code:
       0: aload_0
       1: aload         4
       3: invokevirtual #40                 // Method org/springframework/core/ResolvableType.getType:()Ljava/lang/reflect/Type;
       6: aconst_null
       7: invokevirtual #41                 // Method getJavaType:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/JavaType;
      10: astore        7
      12: aload         5
      14: ifnull        33
      17: aload         5
      19: getstatic     #42                 // Field org/springframework/http/codec/json/Jackson2CodecSupport.JSON_VIEW_HINT:Ljava/lang/String;
      22: invokeinterface #43,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #44                 // class java/lang/Class
      30: goto          34
      33: aconst_null
      34: astore        8
      36: aload         8
      38: ifnull        53
      41: aload_0
      42: invokevirtual #12                 // Method getObjectMapper:()Lcom/fasterxml/jackson/databind/ObjectMapper;
      45: aload         8
      47: invokevirtual #45                 // Method com/fasterxml/jackson/databind/ObjectMapper.writerWithView:(Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/ObjectWriter;
      50: goto          60
      53: aload_0
      54: invokevirtual #12                 // Method getObjectMapper:()Lcom/fasterxml/jackson/databind/ObjectMapper;
      57: invokevirtual #46                 // Method com/fasterxml/jackson/databind/ObjectMapper.writer:()Lcom/fasterxml/jackson/databind/ObjectWriter;
      60: astore        9
      62: aload         7
      64: invokevirtual #47                 // Method com/fasterxml/jackson/databind/JavaType.isContainerType:()Z
      67: ifeq          79
      70: aload         9
      72: aload         7
      74: invokevirtual #48                 // Method com/fasterxml/jackson/databind/ObjectWriter.forType:(Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/ObjectWriter;
      77: astore        9
      79: aload_0
      80: aload         9
      82: aload_2
      83: aload         4
      85: aload         5
      87: invokevirtual #49                 // Method customizeWriter:(Lcom/fasterxml/jackson/databind/ObjectWriter;Lorg/springframework/util/MimeType;Lorg/springframework/core/ResolvableType;Ljava/util/Map;)Lcom/fasterxml/jackson/databind/ObjectWriter;
      90: astore        9
      92: aload_3
      93: invokeinterface #50,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.allocateBuffer:()Lorg/springframework/core/io/buffer/DataBuffer;
      98: astore        10
     100: aload         10
     102: invokeinterface #51,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.asOutputStream:()Ljava/io/OutputStream;
     107: astore        11
     109: aload_0
     110: invokevirtual #12                 // Method getObjectMapper:()Lcom/fasterxml/jackson/databind/ObjectMapper;
     113: invokevirtual #52                 // Method com/fasterxml/jackson/databind/ObjectMapper.getFactory:()Lcom/fasterxml/jackson/core/JsonFactory;
     116: aload         11
     118: aload         6
     120: invokevirtual #53                 // Method com/fasterxml/jackson/core/JsonFactory.createGenerator:(Ljava/io/OutputStream;Lcom/fasterxml/jackson/core/JsonEncoding;)Lcom/fasterxml/jackson/core/JsonGenerator;
     123: astore        12
     125: aload         9
     127: aload         12
     129: aload_1
     130: invokevirtual #54                 // Method com/fasterxml/jackson/databind/ObjectWriter.writeValue:(Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/Object;)V
     133: goto          220
     136: astore        12
     138: new           #56                 // class org/springframework/core/codec/CodecException
     141: dup
     142: new           #57                 // class java/lang/StringBuilder
     145: dup
     146: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     149: ldc           #59                 // String Type definition error:
     151: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: aload         12
     156: invokevirtual #61                 // Method com/fasterxml/jackson/databind/exc/InvalidDefinitionException.getType:()Lcom/fasterxml/jackson/databind/JavaType;
     159: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     162: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     165: aload         12
     167: invokespecial #64                 // Method org/springframework/core/codec/CodecException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     170: athrow
     171: astore        12
     173: new           #66                 // class org/springframework/core/codec/EncodingException
     176: dup
     177: new           #57                 // class java/lang/StringBuilder
     180: dup
     181: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
     184: ldc           #67                 // String JSON encoding error:
     186: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     189: aload         12
     191: invokevirtual #68                 // Method com/fasterxml/jackson/core/JsonProcessingException.getOriginalMessage:()Ljava/lang/String;
     194: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     200: aload         12
     202: invokespecial #69                 // Method org/springframework/core/codec/EncodingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     205: athrow
     206: astore        12
     208: new           #71                 // class java/lang/IllegalStateException
     211: dup
     212: ldc           #72                 // String Unexpected I/O error while writing to data buffer
     214: aload         12
     216: invokespecial #73                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     219: athrow
     220: aload         10
     222: areturn
    Exception table:
       from    to  target type
         109   133   136   Class com/fasterxml/jackson/databind/exc/InvalidDefinitionException
         109   133   171   Class com/fasterxml/jackson/core/JsonProcessingException
         109   133   206   Class java/io/IOException

  protected com.fasterxml.jackson.databind.ObjectWriter customizeWriter(com.fasterxml.jackson.databind.ObjectWriter, org.springframework.util.MimeType, org.springframework.core.ResolvableType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: areturn

  protected com.fasterxml.jackson.core.JsonEncoding getJsonEncoding(org.springframework.util.MimeType);
    Code:
       0: aload_1
       1: ifnull        64
       4: aload_1
       5: invokevirtual #74                 // Method org/springframework/util/MimeType.getCharset:()Ljava/nio/charset/Charset;
       8: ifnull        64
      11: aload_1
      12: invokevirtual #74                 // Method org/springframework/util/MimeType.getCharset:()Ljava/nio/charset/Charset;
      15: astore_2
      16: invokestatic  #75                 // Method com/fasterxml/jackson/core/JsonEncoding.values:()[Lcom/fasterxml/jackson/core/JsonEncoding;
      19: astore_3
      20: aload_3
      21: arraylength
      22: istore        4
      24: iconst_0
      25: istore        5
      27: iload         5
      29: iload         4
      31: if_icmpge     64
      34: aload_3
      35: iload         5
      37: aaload
      38: astore        6
      40: aload_2
      41: invokevirtual #76                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      44: aload         6
      46: invokevirtual #77                 // Method com/fasterxml/jackson/core/JsonEncoding.getJavaName:()Ljava/lang/String;
      49: invokevirtual #78                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      52: ifeq          58
      55: aload         6
      57: areturn
      58: iinc          5, 1
      61: goto          27
      64: getstatic     #79                 // Field com/fasterxml/jackson/core/JsonEncoding.UTF8:Lcom/fasterxml/jackson/core/JsonEncoding;
      67: areturn

  public java.util.List<org.springframework.util.MimeType> getEncodableMimeTypes();
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method getMimeTypes:()Ljava/util/List;
       4: areturn

  public java.util.List<org.springframework.http.MediaType> getStreamingMediaTypes();
    Code:
       0: aload_0
       1: getfield      #4                  // Field streamingMediaTypes:Ljava/util/List;
       4: invokestatic  #81                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getEncodeHints(org.springframework.core.ResolvableType, org.springframework.core.ResolvableType, org.springframework.http.MediaType, org.springframework.http.server.reactive.ServerHttpRequest, org.springframework.http.server.reactive.ServerHttpResponse);
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_0
       5: aload_1
       6: invokevirtual #82                 // Method getHints:(Lorg/springframework/core/ResolvableType;)Ljava/util/Map;
       9: goto          15
      12: invokestatic  #83                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      15: areturn

  protected <A extends java.lang.annotation.Annotation> A getAnnotation(org.springframework.core.MethodParameter, java.lang.Class<A>);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #84                 // Method org/springframework/core/MethodParameter.getMethodAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       5: areturn

  private org.springframework.core.io.buffer.DataBuffer lambda$encode$2(org.springframework.util.MimeType, org.springframework.core.io.buffer.DataBufferFactory, org.springframework.core.ResolvableType, java.util.Map, com.fasterxml.jackson.core.JsonEncoding, java.util.List);
    Code:
       0: aload_0
       1: aload         6
       3: aload_1
       4: aload_2
       5: aload_3
       6: aload         4
       8: aload         5
      10: invokespecial #85                 // Method encodeValue:(Ljava/lang/Object;Lorg/springframework/util/MimeType;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Ljava/util/Map;Lcom/fasterxml/jackson/core/JsonEncoding;)Lorg/springframework/core/io/buffer/DataBuffer;
      13: areturn

  private org.springframework.core.io.buffer.DataBuffer lambda$encode$1(org.springframework.util.MimeType, org.springframework.core.io.buffer.DataBufferFactory, org.springframework.core.ResolvableType, java.util.Map, com.fasterxml.jackson.core.JsonEncoding, byte[], java.lang.Object);
    Code:
       0: aload_0
       1: aload         7
       3: aload_1
       4: aload_2
       5: aload_3
       6: aload         4
       8: aload         5
      10: invokespecial #85                 // Method encodeValue:(Ljava/lang/Object;Lorg/springframework/util/MimeType;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Ljava/util/Map;Lcom/fasterxml/jackson/core/JsonEncoding;)Lorg/springframework/core/io/buffer/DataBuffer;
      13: astore        8
      15: aload         6
      17: ifnull        30
      20: aload         8
      22: aload         6
      24: invokeinterface #86,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:([B)Lorg/springframework/core/io/buffer/DataBuffer;
      29: pop
      30: aload         8
      32: areturn

  private org.springframework.core.io.buffer.DataBuffer lambda$encode$0(org.springframework.util.MimeType, org.springframework.core.io.buffer.DataBufferFactory, org.springframework.core.ResolvableType, java.util.Map, com.fasterxml.jackson.core.JsonEncoding, java.lang.Object);
    Code:
       0: aload_0
       1: aload         6
       3: aload_1
       4: aload_2
       5: aload_3
       6: aload         4
       8: aload         5
      10: invokespecial #85                 // Method encodeValue:(Ljava/lang/Object;Lorg/springframework/util/MimeType;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Ljava/util/Map;Lcom/fasterxml/jackson/core/JsonEncoding;)Lorg/springframework/core/io/buffer/DataBuffer;
      13: areturn

  static {};
    Code:
       0: iconst_1
       1: newarray       byte
       3: dup
       4: iconst_0
       5: bipush        10
       7: bastore
       8: putstatic     #29                 // Field NEWLINE_SEPARATOR:[B
      11: new           #87                 // class java/util/HashMap
      14: dup
      15: invokespecial #88                 // Method java/util/HashMap."<init>":()V
      18: putstatic     #28                 // Field STREAM_SEPARATORS:Ljava/util/Map;
      21: getstatic     #28                 // Field STREAM_SEPARATORS:Ljava/util/Map;
      24: getstatic     #89                 // Field org/springframework/http/MediaType.APPLICATION_STREAM_JSON:Lorg/springframework/http/MediaType;
      27: getstatic     #29                 // Field NEWLINE_SEPARATOR:[B
      30: invokeinterface #90,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: getstatic     #28                 // Field STREAM_SEPARATORS:Ljava/util/Map;
      39: ldc           #91                 // String application/stream+x-jackson-smile
      41: invokestatic  #92                 // Method org/springframework/http/MediaType.parseMediaType:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      44: iconst_0
      45: newarray       byte
      47: invokeinterface #90,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      52: pop
      53: return
}
