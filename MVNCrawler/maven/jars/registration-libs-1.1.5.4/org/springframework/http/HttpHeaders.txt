Compiled from "HttpHeaders.java"
public class org.springframework.http.HttpHeaders implements org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>, java.io.Serializable {
  private static final long serialVersionUID;

  public static final org.springframework.http.HttpHeaders EMPTY;

  public static final java.lang.String ACCEPT;

  public static final java.lang.String ACCEPT_CHARSET;

  public static final java.lang.String ACCEPT_ENCODING;

  public static final java.lang.String ACCEPT_LANGUAGE;

  public static final java.lang.String ACCEPT_RANGES;

  public static final java.lang.String ACCESS_CONTROL_ALLOW_CREDENTIALS;

  public static final java.lang.String ACCESS_CONTROL_ALLOW_HEADERS;

  public static final java.lang.String ACCESS_CONTROL_ALLOW_METHODS;

  public static final java.lang.String ACCESS_CONTROL_ALLOW_ORIGIN;

  public static final java.lang.String ACCESS_CONTROL_EXPOSE_HEADERS;

  public static final java.lang.String ACCESS_CONTROL_MAX_AGE;

  public static final java.lang.String ACCESS_CONTROL_REQUEST_HEADERS;

  public static final java.lang.String ACCESS_CONTROL_REQUEST_METHOD;

  public static final java.lang.String AGE;

  public static final java.lang.String ALLOW;

  public static final java.lang.String AUTHORIZATION;

  public static final java.lang.String CACHE_CONTROL;

  public static final java.lang.String CONNECTION;

  public static final java.lang.String CONTENT_ENCODING;

  public static final java.lang.String CONTENT_DISPOSITION;

  public static final java.lang.String CONTENT_LANGUAGE;

  public static final java.lang.String CONTENT_LENGTH;

  public static final java.lang.String CONTENT_LOCATION;

  public static final java.lang.String CONTENT_RANGE;

  public static final java.lang.String CONTENT_TYPE;

  public static final java.lang.String COOKIE;

  public static final java.lang.String DATE;

  public static final java.lang.String ETAG;

  public static final java.lang.String EXPECT;

  public static final java.lang.String EXPIRES;

  public static final java.lang.String FROM;

  public static final java.lang.String HOST;

  public static final java.lang.String IF_MATCH;

  public static final java.lang.String IF_MODIFIED_SINCE;

  public static final java.lang.String IF_NONE_MATCH;

  public static final java.lang.String IF_RANGE;

  public static final java.lang.String IF_UNMODIFIED_SINCE;

  public static final java.lang.String LAST_MODIFIED;

  public static final java.lang.String LINK;

  public static final java.lang.String LOCATION;

  public static final java.lang.String MAX_FORWARDS;

  public static final java.lang.String ORIGIN;

  public static final java.lang.String PRAGMA;

  public static final java.lang.String PROXY_AUTHENTICATE;

  public static final java.lang.String PROXY_AUTHORIZATION;

  public static final java.lang.String RANGE;

  public static final java.lang.String REFERER;

  public static final java.lang.String RETRY_AFTER;

  public static final java.lang.String SERVER;

  public static final java.lang.String SET_COOKIE;

  public static final java.lang.String SET_COOKIE2;

  public static final java.lang.String TE;

  public static final java.lang.String TRAILER;

  public static final java.lang.String TRANSFER_ENCODING;

  public static final java.lang.String UPGRADE;

  public static final java.lang.String USER_AGENT;

  public static final java.lang.String VARY;

  public static final java.lang.String VIA;

  public static final java.lang.String WARNING;

  public static final java.lang.String WWW_AUTHENTICATE;

  private static final java.util.regex.Pattern ETAG_HEADER_VALUE_PATTERN;

  private static final java.text.DecimalFormatSymbols DECIMAL_FORMAT_SYMBOLS;

  private static final java.time.ZoneId GMT;

  private static final java.time.format.DateTimeFormatter[] DATE_FORMATTERS;

  private final java.util.Map<java.lang.String, java.util.List<java.lang.String>> headers;

  private final boolean readOnly;

  public org.springframework.http.HttpHeaders();
    Code:
       0: aload_0
       1: new           #1                  // class org/springframework/util/LinkedCaseInsensitiveMap
       4: dup
       5: bipush        8
       7: getstatic     #2                  // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      10: invokespecial #3                  // Method org/springframework/util/LinkedCaseInsensitiveMap."<init>":(ILjava/util/Locale;)V
      13: iconst_0
      14: invokespecial #4                  // Method "<init>":(Ljava/util/Map;Z)V
      17: return

  private org.springframework.http.HttpHeaders(java.util.Map<java.lang.String, java.util.List<java.lang.String>>, boolean);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: iload_2
       5: ifeq          48
       8: new           #1                  // class org/springframework/util/LinkedCaseInsensitiveMap
      11: dup
      12: aload_1
      13: invokeinterface #6,  1            // InterfaceMethod java/util/Map.size:()I
      18: getstatic     #2                  // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      21: invokespecial #3                  // Method org/springframework/util/LinkedCaseInsensitiveMap."<init>":(ILjava/util/Locale;)V
      24: astore_3
      25: aload_1
      26: aload_3
      27: invokedynamic #7,  0              // InvokeDynamic #0:accept:(Ljava/util/Map;)Ljava/util/function/BiConsumer;
      32: invokeinterface #8,  2            // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      37: aload_0
      38: aload_3
      39: invokestatic  #9                  // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      42: putfield      #10                 // Field headers:Ljava/util/Map;
      45: goto          53
      48: aload_0
      49: aload_1
      50: putfield      #10                 // Field headers:Ljava/util/Map;
      53: aload_0
      54: iload_2
      55: putfield      #11                 // Field readOnly:Z
      58: return

  public void setAccept(java.util.List<org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: ldc           #13                 // String Accept
       3: aload_1
       4: invokestatic  #14                 // Method org/springframework/http/MediaType.toString:(Ljava/util/Collection;)Ljava/lang/String;
       7: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public java.util.List<org.springframework.http.MediaType> getAccept();
    Code:
       0: aload_0
       1: ldc           #13                 // String Accept
       3: invokevirtual #16                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       6: invokestatic  #17                 // Method org/springframework/http/MediaType.parseMediaTypes:(Ljava/util/List;)Ljava/util/List;
       9: areturn

  public void setAcceptLanguage(java.util.List<java.util.Locale$LanguageRange>);
    Code:
       0: aload_1
       1: ldc           #18                 // String \'languages\' must not be null
       3: invokestatic  #19                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #20                 // class java/text/DecimalFormat
       9: dup
      10: ldc           #21                 // String 0.0
      12: getstatic     #22                 // Field DECIMAL_FORMAT_SYMBOLS:Ljava/text/DecimalFormatSymbols;
      15: invokespecial #23                 // Method java/text/DecimalFormat."<init>":(Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V
      18: astore_2
      19: aload_1
      20: invokeinterface #24,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      25: aload_2
      26: invokedynamic #25,  0             // InvokeDynamic #1:apply:(Ljava/text/DecimalFormat;)Ljava/util/function/Function;
      31: invokeinterface #26,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      36: invokestatic  #27                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      39: invokeinterface #28,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      44: checkcast     #29                 // class java/util/List
      47: astore_3
      48: aload_0
      49: ldc           #30                 // String Accept-Language
      51: aload_0
      52: aload_3
      53: invokevirtual #31                 // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
      56: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      59: return

  public java.util.List<java.util.Locale$LanguageRange> getAcceptLanguage();
    Code:
       0: aload_0
       1: ldc           #30                 // String Accept-Language
       3: invokevirtual #32                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: invokestatic  #33                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      11: ifeq          21
      14: aload_1
      15: invokestatic  #34                 // Method java/util/Locale$LanguageRange.parse:(Ljava/lang/String;)Ljava/util/List;
      18: goto          24
      21: invokestatic  #35                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      24: areturn

  public void setAcceptLanguageAsLocales(java.util.List<java.util.Locale>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #24,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       7: invokedynamic #36,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      12: invokeinterface #26,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      17: invokestatic  #27                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      20: invokeinterface #28,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      25: checkcast     #29                 // class java/util/List
      28: invokevirtual #37                 // Method setAcceptLanguage:(Ljava/util/List;)V
      31: return

  public java.util.List<java.util.Locale> getAcceptLanguageAsLocales();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getAcceptLanguage:()Ljava/util/List;
       4: astore_1
       5: aload_1
       6: invokeinterface #39,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      11: ifeq          18
      14: invokestatic  #35                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      17: areturn
      18: aload_1
      19: invokeinterface #24,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      24: invokedynamic #40,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      29: invokeinterface #26,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      34: invokedynamic #41,  0             // InvokeDynamic #4:test:()Ljava/util/function/Predicate;
      39: invokeinterface #42,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      44: invokestatic  #27                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      47: invokeinterface #28,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      52: checkcast     #29                 // class java/util/List
      55: areturn

  public void setAccessControlAllowCredentials(boolean);
    Code:
       0: aload_0
       1: ldc           #43                 // String Access-Control-Allow-Credentials
       3: iload_1
       4: invokestatic  #44                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       7: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public boolean getAccessControlAllowCredentials();
    Code:
       0: aload_0
       1: ldc           #43                 // String Access-Control-Allow-Credentials
       3: invokevirtual #32                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: invokestatic  #45                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
       9: ireturn

  public void setAccessControlAllowHeaders(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: ldc           #46                 // String Access-Control-Allow-Headers
       3: aload_0
       4: aload_1
       5: invokevirtual #31                 // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
       8: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public java.util.List<java.lang.String> getAccessControlAllowHeaders();
    Code:
       0: aload_0
       1: ldc           #46                 // String Access-Control-Allow-Headers
       3: invokevirtual #47                 // Method getValuesAsList:(Ljava/lang/String;)Ljava/util/List;
       6: areturn

  public void setAccessControlAllowMethods(java.util.List<org.springframework.http.HttpMethod>);
    Code:
       0: aload_0
       1: ldc           #48                 // String Access-Control-Allow-Methods
       3: aload_1
       4: invokestatic  #49                 // Method org/springframework/util/StringUtils.collectionToCommaDelimitedString:(Ljava/util/Collection;)Ljava/lang/String;
       7: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public java.util.List<org.springframework.http.HttpMethod> getAccessControlAllowMethods();
    Code:
       0: new           #50                 // class java/util/ArrayList
       3: dup
       4: invokespecial #51                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: ldc           #48                 // String Access-Control-Allow-Methods
      11: invokevirtual #32                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
      14: astore_2
      15: aload_2
      16: ifnull        78
      19: aload_2
      20: ldc           #52                 // String ,
      22: invokestatic  #53                 // Method org/springframework/util/StringUtils.tokenizeToStringArray:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
      25: astore_3
      26: aload_3
      27: astore        4
      29: aload         4
      31: arraylength
      32: istore        5
      34: iconst_0
      35: istore        6
      37: iload         6
      39: iload         5
      41: if_icmpge     78
      44: aload         4
      46: iload         6
      48: aaload
      49: astore        7
      51: aload         7
      53: invokestatic  #54                 // Method org/springframework/http/HttpMethod.resolve:(Ljava/lang/String;)Lorg/springframework/http/HttpMethod;
      56: astore        8
      58: aload         8
      60: ifnull        72
      63: aload_1
      64: aload         8
      66: invokeinterface #55,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      71: pop
      72: iinc          6, 1
      75: goto          37
      78: aload_1
      79: areturn

  public void setAccessControlAllowOrigin(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #56                 // String Access-Control-Allow-Origin
       3: aload_1
       4: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getAccessControlAllowOrigin();
    Code:
       0: aload_0
       1: ldc           #56                 // String Access-Control-Allow-Origin
       3: invokevirtual #57                 // Method getFieldValues:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setAccessControlExposeHeaders(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: ldc           #58                 // String Access-Control-Expose-Headers
       3: aload_0
       4: aload_1
       5: invokevirtual #31                 // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
       8: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public java.util.List<java.lang.String> getAccessControlExposeHeaders();
    Code:
       0: aload_0
       1: ldc           #58                 // String Access-Control-Expose-Headers
       3: invokevirtual #47                 // Method getValuesAsList:(Ljava/lang/String;)Ljava/util/List;
       6: areturn

  public void setAccessControlMaxAge(long);
    Code:
       0: aload_0
       1: ldc           #59                 // String Access-Control-Max-Age
       3: lload_1
       4: invokestatic  #60                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
       7: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public long getAccessControlMaxAge();
    Code:
       0: aload_0
       1: ldc           #59                 // String Access-Control-Max-Age
       3: invokevirtual #32                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        18
      11: aload_1
      12: invokestatic  #61                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      15: goto          21
      18: ldc2_w        #62                 // long -1l
      21: lreturn

  public void setAccessControlRequestHeaders(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: ldc           #64                 // String Access-Control-Request-Headers
       3: aload_0
       4: aload_1
       5: invokevirtual #31                 // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
       8: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public java.util.List<java.lang.String> getAccessControlRequestHeaders();
    Code:
       0: aload_0
       1: ldc           #64                 // String Access-Control-Request-Headers
       3: invokevirtual #47                 // Method getValuesAsList:(Ljava/lang/String;)Ljava/util/List;
       6: areturn

  public void setAccessControlRequestMethod(org.springframework.http.HttpMethod);
    Code:
       0: aload_0
       1: ldc           #65                 // String Access-Control-Request-Method
       3: aload_1
       4: ifnull        14
       7: aload_1
       8: invokevirtual #66                 // Method org/springframework/http/HttpMethod.name:()Ljava/lang/String;
      11: goto          15
      14: aconst_null
      15: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      18: return

  public org.springframework.http.HttpMethod getAccessControlRequestMethod();
    Code:
       0: aload_0
       1: ldc           #65                 // String Access-Control-Request-Method
       3: invokevirtual #32                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: invokestatic  #54                 // Method org/springframework/http/HttpMethod.resolve:(Ljava/lang/String;)Lorg/springframework/http/HttpMethod;
       9: areturn

  public void setAcceptCharset(java.util.List<java.nio.charset.Charset>);
    Code:
       0: new           #67                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #68                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #69,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          70
      24: aload_3
      25: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #72                 // class java/nio/charset/Charset
      33: astore        4
      35: aload_2
      36: aload         4
      38: invokevirtual #73                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      41: getstatic     #2                  // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      44: invokevirtual #74                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      47: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: pop
      51: aload_3
      52: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          67
      60: aload_2
      61: ldc           #76                 // String ,
      63: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: pop
      67: goto          15
      70: aload_0
      71: ldc           #77                 // String Accept-Charset
      73: aload_2
      74: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      80: return

  public java.util.List<java.nio.charset.Charset> getAcceptCharset();
    Code:
       0: aload_0
       1: ldc           #77                 // String Accept-Charset
       3: invokevirtual #32                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        115
      11: aload_1
      12: ldc           #52                 // String ,
      14: invokestatic  #53                 // Method org/springframework/util/StringUtils.tokenizeToStringArray:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
      17: astore_2
      18: new           #50                 // class java/util/ArrayList
      21: dup
      22: aload_2
      23: arraylength
      24: invokespecial #79                 // Method java/util/ArrayList."<init>":(I)V
      27: astore_3
      28: aload_2
      29: astore        4
      31: aload         4
      33: arraylength
      34: istore        5
      36: iconst_0
      37: istore        6
      39: iload         6
      41: iload         5
      43: if_icmpge     113
      46: aload         4
      48: iload         6
      50: aaload
      51: astore        7
      53: aload         7
      55: bipush        59
      57: invokevirtual #80                 // Method java/lang/String.indexOf:(I)I
      60: istore        8
      62: iload         8
      64: iconst_m1
      65: if_icmpne     75
      68: aload         7
      70: astore        9
      72: goto          85
      75: aload         7
      77: iconst_0
      78: iload         8
      80: invokevirtual #81                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      83: astore        9
      85: aload         9
      87: ldc           #82                 // String *
      89: invokevirtual #83                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      92: ifne          107
      95: aload_3
      96: aload         9
      98: invokestatic  #84                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     101: invokeinterface #55,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     106: pop
     107: iinc          6, 1
     110: goto          39
     113: aload_3
     114: areturn
     115: invokestatic  #35                 // Method java/util/Collections.emptyList:()Ljava/util/List;
     118: areturn

  public void setAllow(java.util.Set<org.springframework.http.HttpMethod>);
    Code:
       0: aload_0
       1: ldc           #85                 // String Allow
       3: aload_1
       4: invokestatic  #49                 // Method org/springframework/util/StringUtils.collectionToCommaDelimitedString:(Ljava/util/Collection;)Ljava/lang/String;
       7: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public java.util.Set<org.springframework.http.HttpMethod> getAllow();
    Code:
       0: aload_0
       1: ldc           #85                 // String Allow
       3: invokevirtual #32                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: invokestatic  #86                 // Method org/springframework/util/StringUtils.isEmpty:(Ljava/lang/Object;)Z
      11: ifne          88
      14: aload_1
      15: ldc           #52                 // String ,
      17: invokestatic  #53                 // Method org/springframework/util/StringUtils.tokenizeToStringArray:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
      20: astore_2
      21: new           #50                 // class java/util/ArrayList
      24: dup
      25: aload_2
      26: arraylength
      27: invokespecial #79                 // Method java/util/ArrayList."<init>":(I)V
      30: astore_3
      31: aload_2
      32: astore        4
      34: aload         4
      36: arraylength
      37: istore        5
      39: iconst_0
      40: istore        6
      42: iload         6
      44: iload         5
      46: if_icmpge     83
      49: aload         4
      51: iload         6
      53: aaload
      54: astore        7
      56: aload         7
      58: invokestatic  #54                 // Method org/springframework/http/HttpMethod.resolve:(Ljava/lang/String;)Lorg/springframework/http/HttpMethod;
      61: astore        8
      63: aload         8
      65: ifnull        77
      68: aload_3
      69: aload         8
      71: invokeinterface #55,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      76: pop
      77: iinc          6, 1
      80: goto          42
      83: aload_3
      84: invokestatic  #87                 // Method java/util/EnumSet.copyOf:(Ljava/util/Collection;)Ljava/util/EnumSet;
      87: areturn
      88: ldc           #88                 // class org/springframework/http/HttpMethod
      90: invokestatic  #89                 // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
      93: areturn

  public void setCacheControl(org.springframework.http.CacheControl);
    Code:
       0: aload_0
       1: ldc           #90                 // String Cache-Control
       3: aload_1
       4: invokevirtual #91                 // Method org/springframework/http/CacheControl.getHeaderValue:()Ljava/lang/String;
       7: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public void setCacheControl(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #90                 // String Cache-Control
       3: aload_1
       4: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getCacheControl();
    Code:
       0: aload_0
       1: ldc           #90                 // String Cache-Control
       3: invokevirtual #57                 // Method getFieldValues:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setConnection(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #92                 // String Connection
       3: aload_1
       4: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public void setConnection(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: ldc           #92                 // String Connection
       3: aload_0
       4: aload_1
       5: invokevirtual #31                 // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
       8: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public java.util.List<java.lang.String> getConnection();
    Code:
       0: aload_0
       1: ldc           #92                 // String Connection
       3: invokevirtual #47                 // Method getValuesAsList:(Ljava/lang/String;)Ljava/util/List;
       6: areturn

  public void setContentDispositionFormData(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #93                 // String \'name\' must not be null
       3: invokestatic  #19                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: ldc           #94                 // String form-data
       8: invokestatic  #95                 // Method org/springframework/http/ContentDisposition.builder:(Ljava/lang/String;)Lorg/springframework/http/ContentDisposition$Builder;
      11: aload_1
      12: invokeinterface #96,  2           // InterfaceMethod org/springframework/http/ContentDisposition$Builder.name:(Ljava/lang/String;)Lorg/springframework/http/ContentDisposition$Builder;
      17: astore_3
      18: aload_2
      19: ifnull        30
      22: aload_3
      23: aload_2
      24: invokeinterface #97,  2           // InterfaceMethod org/springframework/http/ContentDisposition$Builder.filename:(Ljava/lang/String;)Lorg/springframework/http/ContentDisposition$Builder;
      29: pop
      30: aload_0
      31: aload_3
      32: invokeinterface #98,  1           // InterfaceMethod org/springframework/http/ContentDisposition$Builder.build:()Lorg/springframework/http/ContentDisposition;
      37: invokevirtual #99                 // Method setContentDisposition:(Lorg/springframework/http/ContentDisposition;)V
      40: return

  public void setContentDisposition(org.springframework.http.ContentDisposition);
    Code:
       0: aload_0
       1: ldc           #100                // String Content-Disposition
       3: aload_1
       4: invokevirtual #101                // Method org/springframework/http/ContentDisposition.toString:()Ljava/lang/String;
       7: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public org.springframework.http.ContentDisposition getContentDisposition();
    Code:
       0: aload_0
       1: ldc           #100                // String Content-Disposition
       3: invokevirtual #32                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        16
      11: aload_1
      12: invokestatic  #102                // Method org/springframework/http/ContentDisposition.parse:(Ljava/lang/String;)Lorg/springframework/http/ContentDisposition;
      15: areturn
      16: invokestatic  #103                // Method org/springframework/http/ContentDisposition.empty:()Lorg/springframework/http/ContentDisposition;
      19: areturn

  public void setContentLanguage(java.util.Locale);
    Code:
       0: aload_0
       1: ldc           #104                // String Content-Language
       3: aload_1
       4: ifnull        14
       7: aload_1
       8: invokevirtual #105                // Method java/util/Locale.toLanguageTag:()Ljava/lang/String;
      11: goto          15
      14: aconst_null
      15: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      18: return

  public java.util.Locale getContentLanguage();
    Code:
       0: aload_0
       1: ldc           #104                // String Content-Language
       3: invokevirtual #47                 // Method getValuesAsList:(Ljava/lang/String;)Ljava/util/List;
       6: invokeinterface #24,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      11: invokeinterface #106,  1          // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      16: invokedynamic #107,  0            // InvokeDynamic #5:apply:()Ljava/util/function/Function;
      21: invokevirtual #108                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      24: aconst_null
      25: invokevirtual #109                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #110                // class java/util/Locale
      31: areturn

  public void setContentLength(long);
    Code:
       0: aload_0
       1: ldc           #111                // String Content-Length
       3: lload_1
       4: invokestatic  #60                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
       7: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public long getContentLength();
    Code:
       0: aload_0
       1: ldc           #111                // String Content-Length
       3: invokevirtual #32                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        18
      11: aload_1
      12: invokestatic  #61                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      15: goto          21
      18: ldc2_w        #62                 // long -1l
      21: lreturn

  public void setContentType(org.springframework.http.MediaType);
    Code:
       0: aload_1
       1: ifnull        51
       4: aload_1
       5: invokevirtual #112                // Method org/springframework/http/MediaType.isWildcardType:()Z
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ldc           #113                // String \'Content-Type\' cannot contain wildcard type \'*\'
      18: invokestatic  #114                // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      21: aload_1
      22: invokevirtual #115                // Method org/springframework/http/MediaType.isWildcardSubtype:()Z
      25: ifne          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ldc           #116                // String \'Content-Type\' cannot contain wildcard subtype \'*\'
      35: invokestatic  #114                // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      38: aload_0
      39: ldc           #117                // String Content-Type
      41: aload_1
      42: invokevirtual #118                // Method org/springframework/http/MediaType.toString:()Ljava/lang/String;
      45: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      48: goto          58
      51: aload_0
      52: ldc           #117                // String Content-Type
      54: aconst_null
      55: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      58: return

  public org.springframework.http.MediaType getContentType();
    Code:
       0: aload_0
       1: ldc           #117                // String Content-Type
       3: invokevirtual #32                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: invokestatic  #119                // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      11: ifeq          21
      14: aload_1
      15: invokestatic  #120                // Method org/springframework/http/MediaType.parseMediaType:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      18: goto          22
      21: aconst_null
      22: areturn

  public void setDate(long);
    Code:
       0: aload_0
       1: ldc           #121                // String Date
       3: lload_1
       4: invokevirtual #122                // Method setDate:(Ljava/lang/String;J)V
       7: return

  public long getDate();
    Code:
       0: aload_0
       1: ldc           #121                // String Date
       3: invokevirtual #123                // Method getFirstDate:(Ljava/lang/String;)J
       6: lreturn

  public void setETag(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        43
       4: aload_1
       5: ldc           #124                // String \"
       7: invokevirtual #125                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      10: ifne          22
      13: aload_1
      14: ldc           #126                // String W/
      16: invokevirtual #125                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ldc           #127                // String Invalid ETag: does not start with W/ or \"
      29: invokestatic  #114                // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      32: aload_1
      33: ldc           #124                // String \"
      35: invokevirtual #128                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      38: ldc           #129                // String Invalid ETag: does not end with \"
      40: invokestatic  #114                // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      43: aload_0
      44: ldc           #130                // String ETag
      46: aload_1
      47: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      50: return

  public java.lang.String getETag();
    Code:
       0: aload_0
       1: ldc           #130                // String ETag
       3: invokevirtual #32                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setExpires(java.time.ZonedDateTime);
    Code:
       0: aload_0
       1: ldc           #131                // String Expires
       3: aload_1
       4: invokevirtual #132                // Method setZonedDateTime:(Ljava/lang/String;Ljava/time/ZonedDateTime;)V
       7: return

  public void setExpires(long);
    Code:
       0: aload_0
       1: ldc           #131                // String Expires
       3: lload_1
       4: invokevirtual #122                // Method setDate:(Ljava/lang/String;J)V
       7: return

  public long getExpires();
    Code:
       0: aload_0
       1: ldc           #131                // String Expires
       3: iconst_0
       4: invokespecial #133                // Method getFirstDate:(Ljava/lang/String;Z)J
       7: lreturn

  public void setHost(java.net.InetSocketAddress);
    Code:
       0: aload_1
       1: ifnull        52
       4: aload_1
       5: invokevirtual #134                // Method java/net/InetSocketAddress.getHostString:()Ljava/lang/String;
       8: astore_2
       9: aload_1
      10: invokevirtual #135                // Method java/net/InetSocketAddress.getPort:()I
      13: istore_3
      14: iload_3
      15: ifeq          42
      18: new           #67                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #68                 // Method java/lang/StringBuilder."<init>":()V
      25: aload_2
      26: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #136                // String :
      31: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: iload_3
      35: invokevirtual #137                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      38: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: astore_2
      42: aload_0
      43: ldc           #138                // String Host
      45: aload_2
      46: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      49: goto          59
      52: aload_0
      53: ldc           #138                // String Host
      55: aconst_null
      56: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      59: return

  public java.net.InetSocketAddress getHost();
    Code:
       0: aload_0
       1: ldc           #138                // String Host
       3: invokevirtual #32                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aconst_null
      14: astore_2
      15: iconst_0
      16: istore_3
      17: aload_1
      18: ldc           #139                // String [
      20: invokevirtual #125                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      23: ifeq          41
      26: aload_1
      27: bipush        58
      29: aload_1
      30: bipush        93
      32: invokevirtual #80                 // Method java/lang/String.indexOf:(I)I
      35: invokevirtual #140                // Method java/lang/String.indexOf:(II)I
      38: goto          47
      41: aload_1
      42: bipush        58
      44: invokevirtual #141                // Method java/lang/String.lastIndexOf:(I)I
      47: istore        4
      49: iload         4
      51: iconst_m1
      52: if_icmpeq     84
      55: aload_1
      56: iconst_0
      57: iload         4
      59: invokevirtual #81                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      62: astore_2
      63: aload_1
      64: iload         4
      66: iconst_1
      67: iadd
      68: invokevirtual #142                // Method java/lang/String.substring:(I)Ljava/lang/String;
      71: astore        5
      73: aload         5
      75: invokestatic  #143                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      78: istore_3
      79: goto          84
      82: astore        6
      84: aload_2
      85: ifnonnull     90
      88: aload_1
      89: astore_2
      90: aload_2
      91: iload_3
      92: invokestatic  #145                // Method java/net/InetSocketAddress.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;
      95: areturn
    Exception table:
       from    to  target type
          73    79    82   Class java/lang/NumberFormatException

  public void setIfMatch(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #146                // String If-Match
       3: aload_1
       4: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public void setIfMatch(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: ldc           #146                // String If-Match
       3: aload_0
       4: aload_1
       5: invokevirtual #31                 // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
       8: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public java.util.List<java.lang.String> getIfMatch();
    Code:
       0: aload_0
       1: ldc           #146                // String If-Match
       3: invokevirtual #147                // Method getETagValuesAsList:(Ljava/lang/String;)Ljava/util/List;
       6: areturn

  public void setIfModifiedSince(long);
    Code:
       0: aload_0
       1: ldc           #148                // String If-Modified-Since
       3: lload_1
       4: invokevirtual #122                // Method setDate:(Ljava/lang/String;J)V
       7: return

  public long getIfModifiedSince();
    Code:
       0: aload_0
       1: ldc           #148                // String If-Modified-Since
       3: iconst_0
       4: invokespecial #133                // Method getFirstDate:(Ljava/lang/String;Z)J
       7: lreturn

  public void setIfNoneMatch(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #149                // String If-None-Match
       3: aload_1
       4: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public void setIfNoneMatch(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: ldc           #149                // String If-None-Match
       3: aload_0
       4: aload_1
       5: invokevirtual #31                 // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
       8: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public java.util.List<java.lang.String> getIfNoneMatch();
    Code:
       0: aload_0
       1: ldc           #149                // String If-None-Match
       3: invokevirtual #147                // Method getETagValuesAsList:(Ljava/lang/String;)Ljava/util/List;
       6: areturn

  public void setIfUnmodifiedSince(long);
    Code:
       0: aload_0
       1: ldc           #150                // String If-Unmodified-Since
       3: lload_1
       4: invokevirtual #122                // Method setDate:(Ljava/lang/String;J)V
       7: return

  public long getIfUnmodifiedSince();
    Code:
       0: aload_0
       1: ldc           #150                // String If-Unmodified-Since
       3: iconst_0
       4: invokespecial #133                // Method getFirstDate:(Ljava/lang/String;Z)J
       7: lreturn

  public void setLastModified(long);
    Code:
       0: aload_0
       1: ldc           #151                // String Last-Modified
       3: lload_1
       4: invokevirtual #122                // Method setDate:(Ljava/lang/String;J)V
       7: return

  public long getLastModified();
    Code:
       0: aload_0
       1: ldc           #151                // String Last-Modified
       3: iconst_0
       4: invokespecial #133                // Method getFirstDate:(Ljava/lang/String;Z)J
       7: lreturn

  public void setLocation(java.net.URI);
    Code:
       0: aload_0
       1: ldc           #152                // String Location
       3: aload_1
       4: ifnull        14
       7: aload_1
       8: invokevirtual #153                // Method java/net/URI.toASCIIString:()Ljava/lang/String;
      11: goto          15
      14: aconst_null
      15: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      18: return

  public java.net.URI getLocation();
    Code:
       0: aload_0
       1: ldc           #152                // String Location
       3: invokevirtual #32                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        18
      11: aload_1
      12: invokestatic  #154                // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
      15: goto          19
      18: aconst_null
      19: areturn

  public void setOrigin(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #155                // String Origin
       3: aload_1
       4: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getOrigin();
    Code:
       0: aload_0
       1: ldc           #155                // String Origin
       3: invokevirtual #32                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setPragma(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #156                // String Pragma
       3: aload_1
       4: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getPragma();
    Code:
       0: aload_0
       1: ldc           #156                // String Pragma
       3: invokevirtual #32                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setRange(java.util.List<org.springframework.http.HttpRange>);
    Code:
       0: aload_1
       1: invokestatic  #157                // Method org/springframework/http/HttpRange.toString:(Ljava/util/Collection;)Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: ldc           #158                // String Range
       8: aload_2
       9: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public java.util.List<org.springframework.http.HttpRange> getRange();
    Code:
       0: aload_0
       1: ldc           #158                // String Range
       3: invokevirtual #32                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: invokestatic  #159                // Method org/springframework/http/HttpRange.parseRanges:(Ljava/lang/String;)Ljava/util/List;
      11: areturn

  public void setUpgrade(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #160                // String Upgrade
       3: aload_1
       4: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getUpgrade();
    Code:
       0: aload_0
       1: ldc           #160                // String Upgrade
       3: invokevirtual #32                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setVary(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: ldc           #161                // String Vary
       3: aload_0
       4: aload_1
       5: invokevirtual #31                 // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
       8: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public java.util.List<java.lang.String> getVary();
    Code:
       0: aload_0
       1: ldc           #161                // String Vary
       3: invokevirtual #47                 // Method getValuesAsList:(Ljava/lang/String;)Ljava/util/List;
       6: areturn

  public void setZonedDateTime(java.lang.String, java.time.ZonedDateTime);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #162                // Field DATE_FORMATTERS:[Ljava/time/format/DateTimeFormatter;
       5: iconst_0
       6: aaload
       7: aload_2
       8: invokevirtual #163                // Method java/time/format/DateTimeFormatter.format:(Ljava/time/temporal/TemporalAccessor;)Ljava/lang/String;
      11: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      14: return

  public void setDate(java.lang.String, long);
    Code:
       0: lload_2
       1: invokestatic  #164                // Method java/time/Instant.ofEpochMilli:(J)Ljava/time/Instant;
       4: astore        4
       6: aload         4
       8: getstatic     #165                // Field GMT:Ljava/time/ZoneId;
      11: invokestatic  #166                // Method java/time/ZonedDateTime.ofInstant:(Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
      14: astore        5
      16: aload_0
      17: aload_1
      18: getstatic     #162                // Field DATE_FORMATTERS:[Ljava/time/format/DateTimeFormatter;
      21: iconst_0
      22: aaload
      23: aload         5
      25: invokevirtual #163                // Method java/time/format/DateTimeFormatter.format:(Ljava/time/temporal/TemporalAccessor;)Ljava/lang/String;
      28: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      31: return

  public long getFirstDate(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #133                // Method getFirstDate:(Ljava/lang/String;Z)J
       6: lreturn

  private long getFirstDate(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #167                // Method getFirstZonedDateTime:(Ljava/lang/String;Z)Ljava/time/ZonedDateTime;
       6: astore_3
       7: aload_3
       8: ifnull        21
      11: aload_3
      12: invokevirtual #168                // Method java/time/ZonedDateTime.toInstant:()Ljava/time/Instant;
      15: invokevirtual #169                // Method java/time/Instant.toEpochMilli:()J
      18: goto          24
      21: ldc2_w        #62                 // long -1l
      24: lreturn

  public java.time.ZonedDateTime getFirstZonedDateTime(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #167                // Method getFirstZonedDateTime:(Ljava/lang/String;Z)Ljava/time/ZonedDateTime;
       6: areturn

  private java.time.ZonedDateTime getFirstZonedDateTime(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_3
      13: invokevirtual #170                // Method java/lang/String.length:()I
      16: iconst_3
      17: if_icmplt     84
      20: aload_3
      21: bipush        59
      23: invokevirtual #80                 // Method java/lang/String.indexOf:(I)I
      26: istore        4
      28: iload         4
      30: iconst_m1
      31: if_icmpeq     42
      34: aload_3
      35: iconst_0
      36: iload         4
      38: invokevirtual #81                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      41: astore_3
      42: getstatic     #162                // Field DATE_FORMATTERS:[Ljava/time/format/DateTimeFormatter;
      45: astore        5
      47: aload         5
      49: arraylength
      50: istore        6
      52: iconst_0
      53: istore        7
      55: iload         7
      57: iload         6
      59: if_icmpge     84
      62: aload         5
      64: iload         7
      66: aaload
      67: astore        8
      69: aload_3
      70: aload         8
      72: invokestatic  #171                // Method java/time/ZonedDateTime.parse:(Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/ZonedDateTime;
      75: areturn
      76: astore        9
      78: iinc          7, 1
      81: goto          55
      84: iload_2
      85: ifeq          129
      88: new           #173                // class java/lang/IllegalArgumentException
      91: dup
      92: new           #67                 // class java/lang/StringBuilder
      95: dup
      96: invokespecial #68                 // Method java/lang/StringBuilder."<init>":()V
      99: ldc           #174                // String Cannot parse date value \"
     101: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_3
     105: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: ldc           #175                // String \" for \"
     110: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_1
     114: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: ldc           #176                // String \" header
     119: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     125: invokespecial #177                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     128: athrow
     129: aconst_null
     130: areturn
    Exception table:
       from    to  target type
          69    75    76   Class java/time/format/DateTimeParseException

  public java.util.List<java.lang.String> getValuesAsList(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       5: astore_2
       6: aload_2
       7: ifnull        108
      10: new           #50                 // class java/util/ArrayList
      13: dup
      14: invokespecial #51                 // Method java/util/ArrayList."<init>":()V
      17: astore_3
      18: aload_2
      19: invokeinterface #69,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      24: astore        4
      26: aload         4
      28: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          106
      36: aload         4
      38: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #178                // class java/lang/String
      46: astore        5
      48: aload         5
      50: ifnull        103
      53: aload         5
      55: ldc           #52                 // String ,
      57: invokestatic  #53                 // Method org/springframework/util/StringUtils.tokenizeToStringArray:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
      60: astore        6
      62: aload         6
      64: astore        7
      66: aload         7
      68: arraylength
      69: istore        8
      71: iconst_0
      72: istore        9
      74: iload         9
      76: iload         8
      78: if_icmpge     103
      81: aload         7
      83: iload         9
      85: aaload
      86: astore        10
      88: aload_3
      89: aload         10
      91: invokeinterface #55,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      96: pop
      97: iinc          9, 1
     100: goto          74
     103: goto          26
     106: aload_3
     107: areturn
     108: invokestatic  #35                 // Method java/util/Collections.emptyList:()Ljava/util/List;
     111: areturn

  protected java.util.List<java.lang.String> getETagValuesAsList(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       5: astore_2
       6: aload_2
       7: ifnull        171
      10: new           #50                 // class java/util/ArrayList
      13: dup
      14: invokespecial #51                 // Method java/util/ArrayList."<init>":()V
      17: astore_3
      18: aload_2
      19: invokeinterface #69,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      24: astore        4
      26: aload         4
      28: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          169
      36: aload         4
      38: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #178                // class java/lang/String
      46: astore        5
      48: aload         5
      50: ifnull        166
      53: getstatic     #179                // Field ETAG_HEADER_VALUE_PATTERN:Ljava/util/regex/Pattern;
      56: aload         5
      58: invokevirtual #180                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      61: astore        6
      63: aload         6
      65: invokevirtual #181                // Method java/util/regex/Matcher.find:()Z
      68: ifeq          115
      71: ldc           #82                 // String *
      73: aload         6
      75: invokevirtual #182                // Method java/util/regex/Matcher.group:()Ljava/lang/String;
      78: invokevirtual #83                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      81: ifeq          99
      84: aload_3
      85: aload         6
      87: invokevirtual #182                // Method java/util/regex/Matcher.group:()Ljava/lang/String;
      90: invokeinterface #55,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      95: pop
      96: goto          63
      99: aload_3
     100: aload         6
     102: iconst_1
     103: invokevirtual #183                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     106: invokeinterface #55,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     111: pop
     112: goto          63
     115: aload_3
     116: invokeinterface #39,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     121: ifeq          166
     124: new           #173                // class java/lang/IllegalArgumentException
     127: dup
     128: new           #67                 // class java/lang/StringBuilder
     131: dup
     132: invokespecial #68                 // Method java/lang/StringBuilder."<init>":()V
     135: ldc           #184                // String Could not parse header \'
     137: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: aload_1
     141: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: ldc           #185                // String \' with value \'
     146: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: aload         5
     151: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: ldc           #186                // String \'
     156: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     162: invokespecial #177                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     165: athrow
     166: goto          26
     169: aload_3
     170: areturn
     171: invokestatic  #35                 // Method java/util/Collections.emptyList:()Ljava/util/List;
     174: areturn

  protected java.lang.String getFieldValues(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       5: astore_2
       6: aload_2
       7: ifnull        18
      10: aload_0
      11: aload_2
      12: invokevirtual #31                 // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
      15: goto          19
      18: aconst_null
      19: areturn

  protected java.lang.String toCommaDelimitedString(java.util.List<java.lang.String>);
    Code:
       0: new           #67                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #68                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #69,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          61
      24: aload_3
      25: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #178                // class java/lang/String
      33: astore        4
      35: aload_2
      36: aload         4
      38: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: pop
      42: aload_3
      43: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          58
      51: aload_2
      52: ldc           #76                 // String ,
      54: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: pop
      58: goto          15
      61: aload_2
      62: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: areturn

  public java.lang.String getFirst(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #187,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #29                 // class java/util/List
      13: astore_2
      14: aload_2
      15: ifnull        31
      18: aload_2
      19: iconst_0
      20: invokeinterface #188,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: checkcast     #178                // class java/lang/String
      28: goto          32
      31: aconst_null
      32: areturn

  public void add(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokedynamic #189,  0            // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      10: invokeinterface #190,  3          // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      15: checkcast     #29                 // class java/util/List
      18: astore_3
      19: aload_3
      20: aload_2
      21: invokeinterface #55,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      26: pop
      27: return

  public void addAll(java.lang.String, java.util.List<? extends java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokedynamic #191,  0            // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      10: invokeinterface #190,  3          // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      15: checkcast     #29                 // class java/util/List
      18: astore_3
      19: aload_3
      20: aload_2
      21: invokeinterface #192,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      26: pop
      27: return

  public void addAll(org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #193,  0            // InvokeDynamic #8:accept:(Lorg/springframework/http/HttpHeaders;)Ljava/util/function/BiConsumer;
       7: invokeinterface #194,  2          // InterfaceMethod org/springframework/util/MultiValueMap.forEach:(Ljava/util/function/BiConsumer;)V
      12: return

  public void set(java.lang.String, java.lang.String);
    Code:
       0: new           #195                // class java/util/LinkedList
       3: dup
       4: invokespecial #196                // Method java/util/LinkedList."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_2
      10: invokeinterface #55,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      15: pop
      16: aload_0
      17: getfield      #10                 // Field headers:Ljava/util/Map;
      20: aload_1
      21: aload_3
      22: invokeinterface #197,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: return

  public void setAll(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #198,  0            // InvokeDynamic #9:accept:(Lorg/springframework/http/HttpHeaders;)Ljava/util/function/BiConsumer;
       7: invokeinterface #8,  2            // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      12: return

  public java.util.Map<java.lang.String, java.lang.String> toSingleValueMap();
    Code:
       0: new           #199                // class java/util/LinkedHashMap
       3: dup
       4: aload_0
       5: getfield      #10                 // Field headers:Ljava/util/Map;
       8: invokeinterface #6,  1            // InterfaceMethod java/util/Map.size:()I
      13: invokespecial #200                // Method java/util/LinkedHashMap."<init>":(I)V
      16: astore_1
      17: aload_0
      18: getfield      #10                 // Field headers:Ljava/util/Map;
      21: aload_1
      22: invokedynamic #201,  0            // InvokeDynamic #10:accept:(Ljava/util/LinkedHashMap;)Ljava/util/function/BiConsumer;
      27: invokeinterface #8,  2            // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      32: aload_1
      33: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Ljava/util/Map;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Ljava/util/Map;
       4: invokeinterface #202,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #203,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #204,  2          // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.List<java.lang.String> get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #187,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #29                 // class java/util/List
      13: areturn

  public java.util.List<java.lang.String> put(java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #197,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #29                 // class java/util/List
      14: areturn

  public java.util.List<java.lang.String> remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #205,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #29                 // class java/util/List
      13: areturn

  public void putAll(java.util.Map<? extends java.lang.String, ? extends java.util.List<java.lang.String>>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #206,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      10: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Ljava/util/Map;
       4: invokeinterface #207,  1          // InterfaceMethod java/util/Map.clear:()V
       9: return

  public java.util.Set<java.lang.String> keySet();
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Ljava/util/Map;
       4: invokeinterface #208,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public java.util.Collection<java.util.List<java.lang.String>> values();
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Ljava/util/Map;
       4: invokeinterface #209,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  public java.util.Set<java.util.Map$Entry<java.lang.String, java.util.List<java.lang.String>>> entrySet();
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Ljava/util/Map;
       4: invokeinterface #210,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #12                 // class org/springframework/http/HttpHeaders
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #12                 // class org/springframework/http/HttpHeaders
      20: astore_2
      21: aload_0
      22: getfield      #10                 // Field headers:Ljava/util/Map;
      25: aload_2
      26: getfield      #10                 // Field headers:Ljava/util/Map;
      29: invokeinterface #211,  2          // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      34: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Ljava/util/Map;
       4: invokeinterface #212,  1          // InterfaceMethod java/util/Map.hashCode:()I
       9: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Ljava/util/Map;
       4: invokevirtual #213                // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public static org.springframework.http.HttpHeaders readOnlyHttpHeaders(org.springframework.http.HttpHeaders);
    Code:
       0: aload_0
       1: ldc           #214                // String HttpHeaders must not be null
       3: invokestatic  #19                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #11                 // Field readOnly:Z
      10: ifeq          17
      13: aload_0
      14: goto          26
      17: new           #12                 // class org/springframework/http/HttpHeaders
      20: dup
      21: aload_0
      22: iconst_1
      23: invokespecial #4                  // Method "<init>":(Ljava/util/Map;Z)V
      26: areturn

  public void set(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #178                // class java/lang/String
       5: aload_2
       6: checkcast     #178                // class java/lang/String
       9: invokevirtual #15                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public void addAll(java.lang.Object, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #178                // class java/lang/String
       5: aload_2
       6: invokevirtual #215                // Method addAll:(Ljava/lang/String;Ljava/util/List;)V
       9: return

  public void add(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #178                // class java/lang/String
       5: aload_2
       6: checkcast     #178                // class java/lang/String
       9: invokevirtual #216                // Method add:(Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public java.lang.Object getFirst(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #178                // class java/lang/String
       5: invokevirtual #32                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #217                // Method remove:(Ljava/lang/Object;)Ljava/util/List;
       5: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #178                // class java/lang/String
       5: aload_2
       6: checkcast     #29                 // class java/util/List
       9: invokevirtual #218                // Method put:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
      12: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       5: areturn

  private static void lambda$toSingleValueMap$7(java.util.LinkedHashMap, java.lang.String, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokeinterface #188,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
       9: invokevirtual #219                // Method java/util/LinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #178                // class java/lang/String
      15: pop
      16: return

  private static java.util.List lambda$addAll$6(java.lang.String);
    Code:
       0: new           #195                // class java/util/LinkedList
       3: dup
       4: invokespecial #196                // Method java/util/LinkedList."<init>":()V
       7: areturn

  private static java.util.List lambda$add$5(java.lang.String);
    Code:
       0: new           #195                // class java/util/LinkedList
       3: dup
       4: invokespecial #196                // Method java/util/LinkedList."<init>":()V
       7: areturn

  private static boolean lambda$getAcceptLanguageAsLocales$4(java.util.Locale);
    Code:
       0: aload_0
       1: invokevirtual #220                // Method java/util/Locale.getDisplayName:()Ljava/lang/String;
       4: invokestatic  #33                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       7: ireturn

  private static java.util.Locale lambda$getAcceptLanguageAsLocales$3(java.util.Locale$LanguageRange);
    Code:
       0: aload_0
       1: invokevirtual #221                // Method java/util/Locale$LanguageRange.getRange:()Ljava/lang/String;
       4: invokestatic  #222                // Method java/util/Locale.forLanguageTag:(Ljava/lang/String;)Ljava/util/Locale;
       7: areturn

  private static java.util.Locale$LanguageRange lambda$setAcceptLanguageAsLocales$2(java.util.Locale);
    Code:
       0: new           #223                // class java/util/Locale$LanguageRange
       3: dup
       4: aload_0
       5: invokevirtual #105                // Method java/util/Locale.toLanguageTag:()Ljava/lang/String;
       8: invokespecial #224                // Method java/util/Locale$LanguageRange."<init>":(Ljava/lang/String;)V
      11: areturn

  private static java.lang.String lambda$setAcceptLanguage$1(java.text.DecimalFormat, java.util.Locale$LanguageRange);
    Code:
       0: aload_1
       1: invokevirtual #225                // Method java/util/Locale$LanguageRange.getWeight:()D
       4: dconst_1
       5: dcmpl
       6: ifne          16
       9: aload_1
      10: invokevirtual #221                // Method java/util/Locale$LanguageRange.getRange:()Ljava/lang/String;
      13: goto          49
      16: new           #67                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #68                 // Method java/lang/StringBuilder."<init>":()V
      23: aload_1
      24: invokevirtual #221                // Method java/util/Locale$LanguageRange.getRange:()Ljava/lang/String;
      27: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #226                // String ;q=
      32: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: aload_1
      37: invokevirtual #225                // Method java/util/Locale$LanguageRange.getWeight:()D
      40: invokevirtual #227                // Method java/text/DecimalFormat.format:(D)Ljava/lang/String;
      43: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: areturn

  private static void lambda$new$0(java.util.Map, java.lang.String, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #228                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       6: invokeinterface #197,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #29                 // class java/util/List
      14: pop
      15: return

  static {};
    Code:
       0: new           #12                 // class org/springframework/http/HttpHeaders
       3: dup
       4: new           #199                // class java/util/LinkedHashMap
       7: dup
       8: iconst_0
       9: invokespecial #200                // Method java/util/LinkedHashMap."<init>":(I)V
      12: iconst_1
      13: invokespecial #4                  // Method "<init>":(Ljava/util/Map;Z)V
      16: putstatic     #229                // Field EMPTY:Lorg/springframework/http/HttpHeaders;
      19: ldc           #230                // String \\*|\\s*((W\\/)?(\"[^\"]*\"))\\s*,?
      21: invokestatic  #231                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      24: putstatic     #179                // Field ETAG_HEADER_VALUE_PATTERN:Ljava/util/regex/Pattern;
      27: new           #232                // class java/text/DecimalFormatSymbols
      30: dup
      31: getstatic     #2                  // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      34: invokespecial #233                // Method java/text/DecimalFormatSymbols."<init>":(Ljava/util/Locale;)V
      37: putstatic     #22                 // Field DECIMAL_FORMAT_SYMBOLS:Ljava/text/DecimalFormatSymbols;
      40: ldc           #234                // String GMT
      42: invokestatic  #235                // Method java/time/ZoneId.of:(Ljava/lang/String;)Ljava/time/ZoneId;
      45: putstatic     #165                // Field GMT:Ljava/time/ZoneId;
      48: iconst_3
      49: anewarray     #236                // class java/time/format/DateTimeFormatter
      52: dup
      53: iconst_0
      54: getstatic     #237                // Field java/time/format/DateTimeFormatter.RFC_1123_DATE_TIME:Ljava/time/format/DateTimeFormatter;
      57: aastore
      58: dup
      59: iconst_1
      60: ldc           #238                // String EEEE, dd-MMM-yy HH:mm:ss zz
      62: getstatic     #239                // Field java/util/Locale.US:Ljava/util/Locale;
      65: invokestatic  #240                // Method java/time/format/DateTimeFormatter.ofPattern:(Ljava/lang/String;Ljava/util/Locale;)Ljava/time/format/DateTimeFormatter;
      68: aastore
      69: dup
      70: iconst_2
      71: ldc           #241                // String EEE MMM dd HH:mm:ss yyyy
      73: getstatic     #239                // Field java/util/Locale.US:Ljava/util/Locale;
      76: invokestatic  #240                // Method java/time/format/DateTimeFormatter.ofPattern:(Ljava/lang/String;Ljava/util/Locale;)Ljava/time/format/DateTimeFormatter;
      79: getstatic     #165                // Field GMT:Ljava/time/ZoneId;
      82: invokevirtual #242                // Method java/time/format/DateTimeFormatter.withZone:(Ljava/time/ZoneId;)Ljava/time/format/DateTimeFormatter;
      85: aastore
      86: putstatic     #162                // Field DATE_FORMATTERS:[Ljava/time/format/DateTimeFormatter;
      89: return
}
