Compiled from "MarshallingHttpMessageConverter.java"
public class org.springframework.http.converter.xml.MarshallingHttpMessageConverter extends org.springframework.http.converter.xml.AbstractXmlHttpMessageConverter<java.lang.Object> {
  private org.springframework.oxm.Marshaller marshaller;

  private org.springframework.oxm.Unmarshaller unmarshaller;

  public org.springframework.http.converter.xml.MarshallingHttpMessageConverter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/http/converter/xml/AbstractXmlHttpMessageConverter."<init>":()V
       4: return

  public org.springframework.http.converter.xml.MarshallingHttpMessageConverter(org.springframework.oxm.Marshaller);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/http/converter/xml/AbstractXmlHttpMessageConverter."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Marshaller must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field marshaller:Lorg/springframework/oxm/Marshaller;
      15: aload_1
      16: instanceof    #5                  // class org/springframework/oxm/Unmarshaller
      19: ifeq          30
      22: aload_0
      23: aload_1
      24: checkcast     #5                  // class org/springframework/oxm/Unmarshaller
      27: putfield      #6                  // Field unmarshaller:Lorg/springframework/oxm/Unmarshaller;
      30: return

  public org.springframework.http.converter.xml.MarshallingHttpMessageConverter(org.springframework.oxm.Marshaller, org.springframework.oxm.Unmarshaller);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/http/converter/xml/AbstractXmlHttpMessageConverter."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Marshaller must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #7                  // String Unmarshaller must not be null
      13: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: aload_1
      18: putfield      #4                  // Field marshaller:Lorg/springframework/oxm/Marshaller;
      21: aload_0
      22: aload_2
      23: putfield      #6                  // Field unmarshaller:Lorg/springframework/oxm/Unmarshaller;
      26: return

  public void setMarshaller(org.springframework.oxm.Marshaller);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field marshaller:Lorg/springframework/oxm/Marshaller;
       5: return

  public void setUnmarshaller(org.springframework.oxm.Unmarshaller);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field unmarshaller:Lorg/springframework/oxm/Unmarshaller;
       5: return

  public boolean canRead(java.lang.Class<?>, org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #8                  // Method canRead:(Lorg/springframework/http/MediaType;)Z
       5: ifeq          32
       8: aload_0
       9: getfield      #6                  // Field unmarshaller:Lorg/springframework/oxm/Unmarshaller;
      12: ifnull        32
      15: aload_0
      16: getfield      #6                  // Field unmarshaller:Lorg/springframework/oxm/Unmarshaller;
      19: aload_1
      20: invokeinterface #9,  2            // InterfaceMethod org/springframework/oxm/Unmarshaller.supports:(Ljava/lang/Class;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public boolean canWrite(java.lang.Class<?>, org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #10                 // Method canWrite:(Lorg/springframework/http/MediaType;)Z
       5: ifeq          32
       8: aload_0
       9: getfield      #4                  // Field marshaller:Lorg/springframework/oxm/Marshaller;
      12: ifnull        32
      15: aload_0
      16: getfield      #4                  // Field marshaller:Lorg/springframework/oxm/Marshaller;
      19: aload_1
      20: invokeinterface #11,  2           // InterfaceMethod org/springframework/oxm/Marshaller.supports:(Ljava/lang/Class;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  protected boolean supports(java.lang.Class<?>);
    Code:
       0: new           #12                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected java.lang.Object readFromSource(java.lang.Class<?>, org.springframework.http.HttpHeaders, javax.xml.transform.Source) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field unmarshaller:Lorg/springframework/oxm/Unmarshaller;
       4: ldc           #14                 // String Property \'unmarshaller\' is required
       6: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       9: aload_0
      10: getfield      #6                  // Field unmarshaller:Lorg/springframework/oxm/Unmarshaller;
      13: aload_3
      14: invokeinterface #15,  2           // InterfaceMethod org/springframework/oxm/Unmarshaller.unmarshal:(Ljavax/xml/transform/Source;)Ljava/lang/Object;
      19: astore        4
      21: aload_1
      22: aload         4
      24: invokevirtual #16                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      27: ifne          41
      30: new           #17                 // class org/springframework/beans/TypeMismatchException
      33: dup
      34: aload         4
      36: aload_1
      37: invokespecial #18                 // Method org/springframework/beans/TypeMismatchException."<init>":(Ljava/lang/Object;Ljava/lang/Class;)V
      40: athrow
      41: aload         4
      43: areturn
      44: astore        4
      46: new           #20                 // class org/springframework/http/converter/HttpMessageNotReadableException
      49: dup
      50: new           #21                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #23                 // String Could not read [
      59: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_1
      63: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      66: ldc           #26                 // String ]
      68: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: aload         4
      76: invokespecial #28                 // Method org/springframework/http/converter/HttpMessageNotReadableException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      79: athrow
    Exception table:
       from    to  target type
           9    43    44   Class org/springframework/oxm/UnmarshallingFailureException

  protected void writeToResult(java.lang.Object, org.springframework.http.HttpHeaders, javax.xml.transform.Result) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field marshaller:Lorg/springframework/oxm/Marshaller;
       4: ldc           #29                 // String Property \'marshaller\' is required
       6: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       9: aload_0
      10: getfield      #4                  // Field marshaller:Lorg/springframework/oxm/Marshaller;
      13: aload_1
      14: aload_3
      15: invokeinterface #30,  3           // InterfaceMethod org/springframework/oxm/Marshaller.marshal:(Ljava/lang/Object;Ljavax/xml/transform/Result;)V
      20: goto          59
      23: astore        4
      25: new           #32                 // class org/springframework/http/converter/HttpMessageNotWritableException
      28: dup
      29: new           #21                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #33                 // String Could not write [
      38: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_1
      42: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: ldc           #26                 // String ]
      47: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: aload         4
      55: invokespecial #34                 // Method org/springframework/http/converter/HttpMessageNotWritableException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      58: athrow
      59: return
    Exception table:
       from    to  target type
           9    20    23   Class org/springframework/oxm/MarshallingFailureException
}
