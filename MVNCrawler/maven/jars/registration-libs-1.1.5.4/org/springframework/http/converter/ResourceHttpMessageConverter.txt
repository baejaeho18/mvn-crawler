Compiled from "ResourceHttpMessageConverter.java"
public class org.springframework.http.converter.ResourceHttpMessageConverter extends org.springframework.http.converter.AbstractHttpMessageConverter<org.springframework.core.io.Resource> {
  private final boolean supportsReadStreaming;

  public org.springframework.http.converter.ResourceHttpMessageConverter();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field org/springframework/http/MediaType.ALL:Lorg/springframework/http/MediaType;
       4: invokespecial #2                  // Method org/springframework/http/converter/AbstractHttpMessageConverter."<init>":(Lorg/springframework/http/MediaType;)V
       7: aload_0
       8: iconst_1
       9: putfield      #3                  // Field supportsReadStreaming:Z
      12: return

  public org.springframework.http.converter.ResourceHttpMessageConverter(boolean);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field org/springframework/http/MediaType.ALL:Lorg/springframework/http/MediaType;
       4: invokespecial #2                  // Method org/springframework/http/converter/AbstractHttpMessageConverter."<init>":(Lorg/springframework/http/MediaType;)V
       7: aload_0
       8: iload_1
       9: putfield      #3                  // Field supportsReadStreaming:Z
      12: return

  protected boolean supports(java.lang.Class<?>);
    Code:
       0: ldc           #4                  // class org/springframework/core/io/Resource
       2: aload_1
       3: invokevirtual #5                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ireturn

  protected org.springframework.core.io.Resource readInternal(java.lang.Class<? extends org.springframework.core.io.Resource>, org.springframework.http.HttpInputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotReadableException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field supportsReadStreaming:Z
       4: ifeq          29
       7: ldc           #6                  // class org/springframework/core/io/InputStreamResource
       9: aload_1
      10: if_acmpne     29
      13: new           #7                  // class org/springframework/http/converter/ResourceHttpMessageConverter$1
      16: dup
      17: aload_0
      18: aload_2
      19: invokeinterface #8,  1            // InterfaceMethod org/springframework/http/HttpInputMessage.getBody:()Ljava/io/InputStream;
      24: aload_2
      25: invokespecial #9                  // Method org/springframework/http/converter/ResourceHttpMessageConverter$1."<init>":(Lorg/springframework/http/converter/ResourceHttpMessageConverter;Ljava/io/InputStream;Lorg/springframework/http/HttpInputMessage;)V
      28: areturn
      29: ldc           #4                  // class org/springframework/core/io/Resource
      31: aload_1
      32: if_acmpeq     44
      35: ldc           #10                 // class org/springframework/core/io/ByteArrayResource
      37: aload_1
      38: invokevirtual #5                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      41: ifeq          65
      44: aload_2
      45: invokeinterface #8,  1            // InterfaceMethod org/springframework/http/HttpInputMessage.getBody:()Ljava/io/InputStream;
      50: invokestatic  #11                 // Method org/springframework/util/StreamUtils.copyToByteArray:(Ljava/io/InputStream;)[B
      53: astore_3
      54: new           #12                 // class org/springframework/http/converter/ResourceHttpMessageConverter$2
      57: dup
      58: aload_0
      59: aload_3
      60: aload_2
      61: invokespecial #13                 // Method org/springframework/http/converter/ResourceHttpMessageConverter$2."<init>":(Lorg/springframework/http/converter/ResourceHttpMessageConverter;[BLorg/springframework/http/HttpInputMessage;)V
      64: areturn
      65: new           #14                 // class java/lang/IllegalStateException
      68: dup
      69: new           #15                 // class java/lang/StringBuilder
      72: dup
      73: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      76: ldc           #17                 // String Unsupported resource class:
      78: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_1
      82: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      85: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      91: athrow

  protected org.springframework.http.MediaType getDefaultContentType(org.springframework.core.io.Resource);
    Code:
       0: aload_1
       1: invokestatic  #22                 // Method org/springframework/http/MediaTypeFactory.getMediaType:(Lorg/springframework/core/io/Resource;)Ljava/util/Optional;
       4: getstatic     #23                 // Field org/springframework/http/MediaType.APPLICATION_OCTET_STREAM:Lorg/springframework/http/MediaType;
       7: invokevirtual #24                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #25                 // class org/springframework/http/MediaType
      13: areturn

  protected java.lang.Long getContentLength(org.springframework.core.io.Resource, org.springframework.http.MediaType) throws java.io.IOException;
    Code:
       0: ldc           #6                  // class org/springframework/core/io/InputStreamResource
       2: aload_1
       3: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: if_acmpne     11
       9: aconst_null
      10: areturn
      11: aload_1
      12: invokeinterface #27,  1           // InterfaceMethod org/springframework/core/io/Resource.contentLength:()J
      17: lstore_3
      18: lload_3
      19: lconst_0
      20: lcmp
      21: ifge          28
      24: aconst_null
      25: goto          32
      28: lload_3
      29: invokestatic  #28                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      32: areturn

  protected void writeInternal(org.springframework.core.io.Resource, org.springframework.http.HttpOutputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotWritableException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #29                 // Method writeContent:(Lorg/springframework/core/io/Resource;Lorg/springframework/http/HttpOutputMessage;)V
       6: return

  protected void writeContent(org.springframework.core.io.Resource, org.springframework.http.HttpOutputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotWritableException;
    Code:
       0: aload_1
       1: invokeinterface #30,  1           // InterfaceMethod org/springframework/core/io/Resource.getInputStream:()Ljava/io/InputStream;
       6: astore_3
       7: aload_3
       8: aload_2
       9: invokeinterface #31,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getBody:()Ljava/io/OutputStream;
      14: invokestatic  #32                 // Method org/springframework/util/StreamUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I
      17: pop
      18: aload_3
      19: invokevirtual #33                 // Method java/io/InputStream.close:()V
      22: goto          58
      25: astore        4
      27: goto          58
      30: astore        4
      32: aload_3
      33: invokevirtual #33                 // Method java/io/InputStream.close:()V
      36: goto          58
      39: astore        4
      41: goto          58
      44: astore        5
      46: aload_3
      47: invokevirtual #33                 // Method java/io/InputStream.close:()V
      50: goto          55
      53: astore        6
      55: aload         5
      57: athrow
      58: goto          62
      61: astore_3
      62: return
    Exception table:
       from    to  target type
          18    22    25   Class java/lang/Throwable
           7    18    30   Class java/lang/NullPointerException
          32    36    39   Class java/lang/Throwable
           7    18    44   any
          30    32    44   any
          46    50    53   Class java/lang/Throwable
          44    46    44   any
           0    58    61   Class java/io/FileNotFoundException

  protected void writeInternal(java.lang.Object, org.springframework.http.HttpOutputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotWritableException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #4                  // class org/springframework/core/io/Resource
       5: aload_2
       6: invokevirtual #37                 // Method writeInternal:(Lorg/springframework/core/io/Resource;Lorg/springframework/http/HttpOutputMessage;)V
       9: return

  protected java.lang.Object readInternal(java.lang.Class, org.springframework.http.HttpInputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotReadableException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #38                 // Method readInternal:(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Lorg/springframework/core/io/Resource;
       6: areturn

  protected java.lang.Long getContentLength(java.lang.Object, org.springframework.http.MediaType) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #4                  // class org/springframework/core/io/Resource
       5: aload_2
       6: invokevirtual #39                 // Method getContentLength:(Lorg/springframework/core/io/Resource;Lorg/springframework/http/MediaType;)Ljava/lang/Long;
       9: areturn

  protected org.springframework.http.MediaType getDefaultContentType(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #4                  // class org/springframework/core/io/Resource
       5: invokevirtual #40                 // Method getDefaultContentType:(Lorg/springframework/core/io/Resource;)Lorg/springframework/http/MediaType;
       8: areturn
}
