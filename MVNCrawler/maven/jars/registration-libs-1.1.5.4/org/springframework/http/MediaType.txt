Compiled from "MediaType.java"
public class org.springframework.http.MediaType extends org.springframework.util.MimeType implements java.io.Serializable {
  private static final long serialVersionUID;

  public static final org.springframework.http.MediaType ALL;

  public static final java.lang.String ALL_VALUE;

  public static final org.springframework.http.MediaType APPLICATION_ATOM_XML;

  public static final java.lang.String APPLICATION_ATOM_XML_VALUE;

  public static final org.springframework.http.MediaType APPLICATION_FORM_URLENCODED;

  public static final java.lang.String APPLICATION_FORM_URLENCODED_VALUE;

  public static final org.springframework.http.MediaType APPLICATION_JSON;

  public static final java.lang.String APPLICATION_JSON_VALUE;

  public static final org.springframework.http.MediaType APPLICATION_JSON_UTF8;

  public static final java.lang.String APPLICATION_JSON_UTF8_VALUE;

  public static final org.springframework.http.MediaType APPLICATION_OCTET_STREAM;

  public static final java.lang.String APPLICATION_OCTET_STREAM_VALUE;

  public static final org.springframework.http.MediaType APPLICATION_PDF;

  public static final java.lang.String APPLICATION_PDF_VALUE;

  public static final org.springframework.http.MediaType APPLICATION_PROBLEM_JSON;

  public static final java.lang.String APPLICATION_PROBLEM_JSON_VALUE;

  public static final org.springframework.http.MediaType APPLICATION_PROBLEM_JSON_UTF8;

  public static final java.lang.String APPLICATION_PROBLEM_JSON_UTF8_VALUE;

  public static final org.springframework.http.MediaType APPLICATION_PROBLEM_XML;

  public static final java.lang.String APPLICATION_PROBLEM_XML_VALUE;

  public static final org.springframework.http.MediaType APPLICATION_RSS_XML;

  public static final java.lang.String APPLICATION_RSS_XML_VALUE;

  public static final org.springframework.http.MediaType APPLICATION_STREAM_JSON;

  public static final java.lang.String APPLICATION_STREAM_JSON_VALUE;

  public static final org.springframework.http.MediaType APPLICATION_XHTML_XML;

  public static final java.lang.String APPLICATION_XHTML_XML_VALUE;

  public static final org.springframework.http.MediaType APPLICATION_XML;

  public static final java.lang.String APPLICATION_XML_VALUE;

  public static final org.springframework.http.MediaType IMAGE_GIF;

  public static final java.lang.String IMAGE_GIF_VALUE;

  public static final org.springframework.http.MediaType IMAGE_JPEG;

  public static final java.lang.String IMAGE_JPEG_VALUE;

  public static final org.springframework.http.MediaType IMAGE_PNG;

  public static final java.lang.String IMAGE_PNG_VALUE;

  public static final org.springframework.http.MediaType MULTIPART_FORM_DATA;

  public static final java.lang.String MULTIPART_FORM_DATA_VALUE;

  public static final org.springframework.http.MediaType TEXT_EVENT_STREAM;

  public static final java.lang.String TEXT_EVENT_STREAM_VALUE;

  public static final org.springframework.http.MediaType TEXT_HTML;

  public static final java.lang.String TEXT_HTML_VALUE;

  public static final org.springframework.http.MediaType TEXT_MARKDOWN;

  public static final java.lang.String TEXT_MARKDOWN_VALUE;

  public static final org.springframework.http.MediaType TEXT_PLAIN;

  public static final java.lang.String TEXT_PLAIN_VALUE;

  public static final org.springframework.http.MediaType TEXT_XML;

  public static final java.lang.String TEXT_XML_VALUE;

  private static final java.lang.String PARAM_QUALITY_FACTOR;

  public static final java.util.Comparator<org.springframework.http.MediaType> QUALITY_VALUE_COMPARATOR;

  public static final java.util.Comparator<org.springframework.http.MediaType> SPECIFICITY_COMPARATOR;

  public org.springframework.http.MediaType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/util/MimeType."<init>":(Ljava/lang/String;)V
       5: return

  public org.springframework.http.MediaType(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       6: invokespecial #3                  // Method org/springframework/util/MimeType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
       9: return

  public org.springframework.http.MediaType(java.lang.String, java.lang.String, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #4                  // Method org/springframework/util/MimeType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
       7: return

  public org.springframework.http.MediaType(java.lang.String, java.lang.String, double);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc           #6                  // String q
       5: dload_3
       6: invokestatic  #7                  // Method java/lang/Double.toString:(D)Ljava/lang/String;
       9: invokestatic  #8                  // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
      12: invokespecial #9                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
      15: return

  public org.springframework.http.MediaType(org.springframework.http.MediaType, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #10                 // Method org/springframework/util/MimeType."<init>":(Lorg/springframework/util/MimeType;Ljava/nio/charset/Charset;)V
       6: return

  public org.springframework.http.MediaType(org.springframework.http.MediaType, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method getType:()Ljava/lang/String;
       5: aload_1
       6: invokevirtual #12                 // Method getSubtype:()Ljava/lang/String;
       9: aload_2
      10: invokespecial #3                  // Method org/springframework/util/MimeType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
      13: return

  public org.springframework.http.MediaType(java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #3                  // Method org/springframework/util/MimeType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
       7: return

  protected void checkParameters(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #13                 // Method org/springframework/util/MimeType.checkParameters:(Ljava/lang/String;Ljava/lang/String;)V
       6: ldc           #6                  // String q
       8: aload_1
       9: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: ifeq          70
      15: aload_0
      16: aload_2
      17: invokevirtual #15                 // Method unquote:(Ljava/lang/String;)Ljava/lang/String;
      20: astore_2
      21: aload_2
      22: invokestatic  #16                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
      25: dstore_3
      26: dload_3
      27: dconst_0
      28: dcmpl
      29: iflt          42
      32: dload_3
      33: dconst_1
      34: dcmpg
      35: ifgt          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: new           #17                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      50: ldc           #19                 // String Invalid quality value \"
      52: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_2
      56: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: ldc           #21                 // String \": should be between 0.0 and 1.0
      61: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokestatic  #23                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      70: return

  public double getQualityValue();
    Code:
       0: aload_0
       1: ldc           #6                  // String q
       3: invokevirtual #24                 // Method getParameter:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: aload_1
      13: invokevirtual #15                 // Method unquote:(Ljava/lang/String;)Ljava/lang/String;
      16: invokestatic  #16                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
      19: goto          23
      22: dconst_1
      23: dreturn

  public boolean includes(org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method org/springframework/util/MimeType.includes:(Lorg/springframework/util/MimeType;)Z
       5: ireturn

  public boolean isCompatibleWith(org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #26                 // Method org/springframework/util/MimeType.isCompatibleWith:(Lorg/springframework/util/MimeType;)Z
       5: ireturn

  public org.springframework.http.MediaType copyQualityValue(org.springframework.http.MediaType);
    Code:
       0: aload_1
       1: invokevirtual #27                 // Method getParameters:()Ljava/util/Map;
       4: ldc           #6                  // String q
       6: invokeinterface #28,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      11: ifne          16
      14: aload_0
      15: areturn
      16: new           #29                 // class java/util/LinkedHashMap
      19: dup
      20: aload_0
      21: invokevirtual #27                 // Method getParameters:()Ljava/util/Map;
      24: invokespecial #30                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      27: astore_2
      28: aload_2
      29: ldc           #6                  // String q
      31: aload_1
      32: invokevirtual #27                 // Method getParameters:()Ljava/util/Map;
      35: ldc           #6                  // String q
      37: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      42: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: new           #5                  // class org/springframework/http/MediaType
      51: dup
      52: aload_0
      53: aload_2
      54: invokespecial #33                 // Method "<init>":(Lorg/springframework/http/MediaType;Ljava/util/Map;)V
      57: areturn

  public org.springframework.http.MediaType removeQualityValue();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method getParameters:()Ljava/util/Map;
       4: ldc           #6                  // String q
       6: invokeinterface #28,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      11: ifne          16
      14: aload_0
      15: areturn
      16: new           #29                 // class java/util/LinkedHashMap
      19: dup
      20: aload_0
      21: invokevirtual #27                 // Method getParameters:()Ljava/util/Map;
      24: invokespecial #30                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      27: astore_1
      28: aload_1
      29: ldc           #6                  // String q
      31: invokeinterface #34,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: new           #5                  // class org/springframework/http/MediaType
      40: dup
      41: aload_0
      42: aload_1
      43: invokespecial #33                 // Method "<init>":(Lorg/springframework/http/MediaType;Ljava/util/Map;)V
      46: areturn

  public static org.springframework.http.MediaType valueOf(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #35                 // Method parseMediaType:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
       4: areturn

  public static org.springframework.http.MediaType parseMediaType(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #36                 // Method org/springframework/util/MimeTypeUtils.parseMimeType:(Ljava/lang/String;)Lorg/springframework/util/MimeType;
       4: astore_1
       5: goto          18
       8: astore_2
       9: new           #38                 // class org/springframework/http/InvalidMediaTypeException
      12: dup
      13: aload_2
      14: invokespecial #39                 // Method org/springframework/http/InvalidMediaTypeException."<init>":(Lorg/springframework/util/InvalidMimeTypeException;)V
      17: athrow
      18: new           #5                  // class org/springframework/http/MediaType
      21: dup
      22: aload_1
      23: invokevirtual #40                 // Method org/springframework/util/MimeType.getType:()Ljava/lang/String;
      26: aload_1
      27: invokevirtual #41                 // Method org/springframework/util/MimeType.getSubtype:()Ljava/lang/String;
      30: aload_1
      31: invokevirtual #42                 // Method org/springframework/util/MimeType.getParameters:()Ljava/util/Map;
      34: invokespecial #9                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
      37: areturn
      38: astore_2
      39: new           #38                 // class org/springframework/http/InvalidMediaTypeException
      42: dup
      43: aload_0
      44: aload_2
      45: invokevirtual #44                 // Method java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
      48: invokespecial #45                 // Method org/springframework/http/InvalidMediaTypeException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      51: athrow
    Exception table:
       from    to  target type
           0     5     8   Class org/springframework/util/InvalidMimeTypeException
          18    37    38   Class java/lang/IllegalArgumentException

  public static java.util.List<org.springframework.http.MediaType> parseMediaTypes(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #46                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
       4: ifne          11
       7: invokestatic  #47                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: areturn
      11: aload_0
      12: ldc           #48                 // String ,
      14: invokestatic  #49                 // Method org/springframework/util/StringUtils.tokenizeToStringArray:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
      17: astore_1
      18: new           #50                 // class java/util/ArrayList
      21: dup
      22: aload_1
      23: arraylength
      24: invokespecial #51                 // Method java/util/ArrayList."<init>":(I)V
      27: astore_2
      28: aload_1
      29: astore_3
      30: aload_3
      31: arraylength
      32: istore        4
      34: iconst_0
      35: istore        5
      37: iload         5
      39: iload         4
      41: if_icmpge     68
      44: aload_3
      45: iload         5
      47: aaload
      48: astore        6
      50: aload_2
      51: aload         6
      53: invokestatic  #35                 // Method parseMediaType:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      56: invokeinterface #52,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      61: pop
      62: iinc          5, 1
      65: goto          37
      68: aload_2
      69: areturn

  public static java.util.List<org.springframework.http.MediaType> parseMediaTypes(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: invokestatic  #53                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       4: ifeq          11
       7: invokestatic  #47                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: areturn
      11: aload_0
      12: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
      17: iconst_1
      18: if_icmpne     35
      21: aload_0
      22: iconst_0
      23: invokeinterface #55,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      28: checkcast     #56                 // class java/lang/String
      31: invokestatic  #57                 // Method parseMediaTypes:(Ljava/lang/String;)Ljava/util/List;
      34: areturn
      35: new           #50                 // class java/util/ArrayList
      38: dup
      39: bipush        8
      41: invokespecial #51                 // Method java/util/ArrayList."<init>":(I)V
      44: astore_1
      45: aload_0
      46: invokeinterface #58,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      51: astore_2
      52: aload_2
      53: invokeinterface #59,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          85
      61: aload_2
      62: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #56                 // class java/lang/String
      70: astore_3
      71: aload_1
      72: aload_3
      73: invokestatic  #57                 // Method parseMediaTypes:(Ljava/lang/String;)Ljava/util/List;
      76: invokeinterface #61,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      81: pop
      82: goto          52
      85: aload_1
      86: areturn

  public static java.util.List<org.springframework.http.MediaType> asMediaTypes(java.util.List<org.springframework.util.MimeType>);
    Code:
       0: aload_0
       1: invokeinterface #62,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #63,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      11: invokeinterface #64,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokestatic  #65                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      19: invokeinterface #66,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      24: checkcast     #67                 // class java/util/List
      27: areturn

  public static org.springframework.http.MediaType asMediaType(org.springframework.util.MimeType);
    Code:
       0: aload_0
       1: instanceof    #5                  // class org/springframework/http/MediaType
       4: ifeq          12
       7: aload_0
       8: checkcast     #5                  // class org/springframework/http/MediaType
      11: areturn
      12: new           #5                  // class org/springframework/http/MediaType
      15: dup
      16: aload_0
      17: invokevirtual #40                 // Method org/springframework/util/MimeType.getType:()Ljava/lang/String;
      20: aload_0
      21: invokevirtual #41                 // Method org/springframework/util/MimeType.getSubtype:()Ljava/lang/String;
      24: aload_0
      25: invokevirtual #42                 // Method org/springframework/util/MimeType.getParameters:()Ljava/util/Map;
      28: invokespecial #9                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
      31: areturn

  public static java.lang.String toString(java.util.Collection<org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: invokestatic  #68                 // Method org/springframework/util/MimeTypeUtils.toString:(Ljava/util/Collection;)Ljava/lang/String;
       4: areturn

  public static void sortBySpecificity(java.util.List<org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: ldc           #69                 // String \'mediaTypes\' must not be null
       3: invokestatic  #70                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
      12: iconst_1
      13: if_icmple     25
      16: aload_0
      17: getstatic     #71                 // Field SPECIFICITY_COMPARATOR:Ljava/util/Comparator;
      20: invokeinterface #72,  2           // InterfaceMethod java/util/List.sort:(Ljava/util/Comparator;)V
      25: return

  public static void sortByQualityValue(java.util.List<org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: ldc           #69                 // String \'mediaTypes\' must not be null
       3: invokestatic  #70                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
      12: iconst_1
      13: if_icmple     25
      16: aload_0
      17: getstatic     #73                 // Field QUALITY_VALUE_COMPARATOR:Ljava/util/Comparator;
      20: invokeinterface #72,  2           // InterfaceMethod java/util/List.sort:(Ljava/util/Comparator;)V
      25: return

  public static void sortBySpecificityAndQuality(java.util.List<org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: ldc           #69                 // String \'mediaTypes\' must not be null
       3: invokestatic  #70                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
      12: iconst_1
      13: if_icmple     33
      16: aload_0
      17: getstatic     #71                 // Field SPECIFICITY_COMPARATOR:Ljava/util/Comparator;
      20: getstatic     #73                 // Field QUALITY_VALUE_COMPARATOR:Ljava/util/Comparator;
      23: invokeinterface #74,  2           // InterfaceMethod java/util/Comparator.thenComparing:(Ljava/util/Comparator;)Ljava/util/Comparator;
      28: invokeinterface #72,  2           // InterfaceMethod java/util/List.sort:(Ljava/util/Comparator;)V
      33: return

  private static int lambda$static$0(org.springframework.http.MediaType, org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method getQualityValue:()D
       4: dstore_2
       5: aload_1
       6: invokevirtual #75                 // Method getQualityValue:()D
       9: dstore        4
      11: dload         4
      13: dload_2
      14: invokestatic  #76                 // Method java/lang/Double.compare:(DD)I
      17: istore        6
      19: iload         6
      21: ifeq          27
      24: iload         6
      26: ireturn
      27: aload_0
      28: invokevirtual #77                 // Method isWildcardType:()Z
      31: ifeq          43
      34: aload_1
      35: invokevirtual #77                 // Method isWildcardType:()Z
      38: ifne          43
      41: iconst_1
      42: ireturn
      43: aload_1
      44: invokevirtual #77                 // Method isWildcardType:()Z
      47: ifeq          59
      50: aload_0
      51: invokevirtual #77                 // Method isWildcardType:()Z
      54: ifne          59
      57: iconst_m1
      58: ireturn
      59: aload_0
      60: invokevirtual #11                 // Method getType:()Ljava/lang/String;
      63: aload_1
      64: invokevirtual #11                 // Method getType:()Ljava/lang/String;
      67: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      70: ifne          75
      73: iconst_0
      74: ireturn
      75: aload_0
      76: invokevirtual #78                 // Method isWildcardSubtype:()Z
      79: ifeq          91
      82: aload_1
      83: invokevirtual #78                 // Method isWildcardSubtype:()Z
      86: ifne          91
      89: iconst_1
      90: ireturn
      91: aload_1
      92: invokevirtual #78                 // Method isWildcardSubtype:()Z
      95: ifeq          107
      98: aload_0
      99: invokevirtual #78                 // Method isWildcardSubtype:()Z
     102: ifne          107
     105: iconst_m1
     106: ireturn
     107: aload_0
     108: invokevirtual #12                 // Method getSubtype:()Ljava/lang/String;
     111: aload_1
     112: invokevirtual #12                 // Method getSubtype:()Ljava/lang/String;
     115: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     118: ifne          123
     121: iconst_0
     122: ireturn
     123: aload_0
     124: invokevirtual #27                 // Method getParameters:()Ljava/util/Map;
     127: invokeinterface #79,  1           // InterfaceMethod java/util/Map.size:()I
     132: istore        7
     134: aload_1
     135: invokevirtual #27                 // Method getParameters:()Ljava/util/Map;
     138: invokeinterface #79,  1           // InterfaceMethod java/util/Map.size:()I
     143: istore        8
     145: iload         8
     147: iload         7
     149: invokestatic  #80                 // Method java/lang/Integer.compare:(II)I
     152: ireturn

  static {};
    Code:
       0: ldc           #81                 // String */*
       2: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
       5: putstatic     #83                 // Field ALL:Lorg/springframework/http/MediaType;
       8: ldc           #84                 // String application/atom+xml
      10: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      13: putstatic     #85                 // Field APPLICATION_ATOM_XML:Lorg/springframework/http/MediaType;
      16: ldc           #86                 // String application/x-www-form-urlencoded
      18: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      21: putstatic     #87                 // Field APPLICATION_FORM_URLENCODED:Lorg/springframework/http/MediaType;
      24: ldc           #88                 // String application/json
      26: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      29: putstatic     #89                 // Field APPLICATION_JSON:Lorg/springframework/http/MediaType;
      32: ldc           #90                 // String application/json;charset=UTF-8
      34: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      37: putstatic     #91                 // Field APPLICATION_JSON_UTF8:Lorg/springframework/http/MediaType;
      40: ldc           #92                 // String application/octet-stream
      42: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      45: putstatic     #93                 // Field APPLICATION_OCTET_STREAM:Lorg/springframework/http/MediaType;
      48: ldc           #94                 // String application/pdf
      50: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      53: putstatic     #95                 // Field APPLICATION_PDF:Lorg/springframework/http/MediaType;
      56: ldc           #96                 // String application/problem+json
      58: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      61: putstatic     #97                 // Field APPLICATION_PROBLEM_JSON:Lorg/springframework/http/MediaType;
      64: ldc           #98                 // String application/problem+json;charset=UTF-8
      66: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      69: putstatic     #99                 // Field APPLICATION_PROBLEM_JSON_UTF8:Lorg/springframework/http/MediaType;
      72: ldc           #100                // String application/problem+xml
      74: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      77: putstatic     #101                // Field APPLICATION_PROBLEM_XML:Lorg/springframework/http/MediaType;
      80: ldc           #102                // String application/rss+xml
      82: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      85: putstatic     #103                // Field APPLICATION_RSS_XML:Lorg/springframework/http/MediaType;
      88: ldc           #104                // String application/stream+json
      90: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      93: putstatic     #105                // Field APPLICATION_STREAM_JSON:Lorg/springframework/http/MediaType;
      96: ldc           #106                // String application/xhtml+xml
      98: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
     101: putstatic     #107                // Field APPLICATION_XHTML_XML:Lorg/springframework/http/MediaType;
     104: ldc           #108                // String application/xml
     106: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
     109: putstatic     #109                // Field APPLICATION_XML:Lorg/springframework/http/MediaType;
     112: ldc           #110                // String image/gif
     114: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
     117: putstatic     #111                // Field IMAGE_GIF:Lorg/springframework/http/MediaType;
     120: ldc           #112                // String image/jpeg
     122: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
     125: putstatic     #113                // Field IMAGE_JPEG:Lorg/springframework/http/MediaType;
     128: ldc           #114                // String image/png
     130: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
     133: putstatic     #115                // Field IMAGE_PNG:Lorg/springframework/http/MediaType;
     136: ldc           #116                // String multipart/form-data
     138: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
     141: putstatic     #117                // Field MULTIPART_FORM_DATA:Lorg/springframework/http/MediaType;
     144: ldc           #118                // String text/event-stream
     146: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
     149: putstatic     #119                // Field TEXT_EVENT_STREAM:Lorg/springframework/http/MediaType;
     152: ldc           #120                // String text/html
     154: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
     157: putstatic     #121                // Field TEXT_HTML:Lorg/springframework/http/MediaType;
     160: ldc           #122                // String text/markdown
     162: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
     165: putstatic     #123                // Field TEXT_MARKDOWN:Lorg/springframework/http/MediaType;
     168: ldc           #124                // String text/plain
     170: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
     173: putstatic     #125                // Field TEXT_PLAIN:Lorg/springframework/http/MediaType;
     176: ldc           #126                // String text/xml
     178: invokestatic  #82                 // Method valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
     181: putstatic     #127                // Field TEXT_XML:Lorg/springframework/http/MediaType;
     184: invokedynamic #128,  0            // InvokeDynamic #1:compare:()Ljava/util/Comparator;
     189: putstatic     #73                 // Field QUALITY_VALUE_COMPARATOR:Ljava/util/Comparator;
     192: new           #129                // class org/springframework/http/MediaType$1
     195: dup
     196: invokespecial #130                // Method org/springframework/http/MediaType$1."<init>":()V
     199: putstatic     #71                 // Field SPECIFICITY_COMPARATOR:Ljava/util/Comparator;
     202: return
}
