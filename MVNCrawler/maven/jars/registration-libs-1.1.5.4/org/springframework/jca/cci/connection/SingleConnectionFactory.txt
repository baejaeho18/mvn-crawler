Compiled from "SingleConnectionFactory.java"
public class org.springframework.jca.cci.connection.SingleConnectionFactory extends org.springframework.jca.cci.connection.DelegatingConnectionFactory implements org.springframework.beans.factory.DisposableBean {
  protected final org.apache.commons.logging.Log logger;

  private javax.resource.cci.Connection target;

  private javax.resource.cci.Connection connection;

  private final java.lang.Object connectionMonitor;

  public org.springframework.jca.cci.connection.SingleConnectionFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/jca/cci/connection/DelegatingConnectionFactory."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #5                  // class java/lang/Object
      19: dup
      20: invokespecial #6                  // Method java/lang/Object."<init>":()V
      23: putfield      #7                  // Field connectionMonitor:Ljava/lang/Object;
      26: return

  public org.springframework.jca.cci.connection.SingleConnectionFactory(javax.resource.cci.Connection);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/jca/cci/connection/DelegatingConnectionFactory."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #5                  // class java/lang/Object
      19: dup
      20: invokespecial #6                  // Method java/lang/Object."<init>":()V
      23: putfield      #7                  // Field connectionMonitor:Ljava/lang/Object;
      26: aload_1
      27: ldc           #8                  // String Target Connection must not be null
      29: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      32: aload_0
      33: aload_1
      34: putfield      #10                 // Field target:Ljavax/resource/cci/Connection;
      37: aload_0
      38: aload_0
      39: aload_1
      40: invokevirtual #11                 // Method getCloseSuppressingConnectionProxy:(Ljavax/resource/cci/Connection;)Ljavax/resource/cci/Connection;
      43: putfield      #12                 // Field connection:Ljavax/resource/cci/Connection;
      46: return

  public org.springframework.jca.cci.connection.SingleConnectionFactory(javax.resource.cci.ConnectionFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/jca/cci/connection/DelegatingConnectionFactory."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #5                  // class java/lang/Object
      19: dup
      20: invokespecial #6                  // Method java/lang/Object."<init>":()V
      23: putfield      #7                  // Field connectionMonitor:Ljava/lang/Object;
      26: aload_1
      27: ldc           #13                 // String Target ConnectionFactory must not be null
      29: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      32: aload_0
      33: aload_1
      34: invokevirtual #14                 // Method setTargetConnectionFactory:(Ljavax/resource/cci/ConnectionFactory;)V
      37: return

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: getfield      #12                 // Field connection:Ljavax/resource/cci/Connection;
       4: ifnonnull     24
       7: aload_0
       8: invokevirtual #15                 // Method getTargetConnectionFactory:()Ljavax/resource/cci/ConnectionFactory;
      11: ifnonnull     24
      14: new           #16                 // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #17                 // String Connection or \'targetConnectionFactory\' is required
      20: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: return

  public javax.resource.cci.Connection getConnection() throws javax.resource.ResourceException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field connectionMonitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #12                 // Field connection:Ljavax/resource/cci/Connection;
      11: ifnonnull     18
      14: aload_0
      15: invokevirtual #19                 // Method initConnection:()V
      18: aload_0
      19: getfield      #12                 // Field connection:Ljavax/resource/cci/Connection;
      22: aload_1
      23: monitorexit
      24: areturn
      25: astore_2
      26: aload_1
      27: monitorexit
      28: aload_2
      29: athrow
    Exception table:
       from    to  target type
           7    24    25   any
          25    28    25   any

  public javax.resource.cci.Connection getConnection(javax.resource.cci.ConnectionSpec) throws javax.resource.ResourceException;
    Code:
       0: new           #20                 // class javax/resource/NotSupportedException
       3: dup
       4: ldc           #21                 // String SingleConnectionFactory does not support custom ConnectionSpec
       6: invokespecial #22                 // Method javax/resource/NotSupportedException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void destroy();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method resetConnection:()V
       4: return

  public void initConnection() throws javax.resource.ResourceException;
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getTargetConnectionFactory:()Ljavax/resource/cci/ConnectionFactory;
       4: ifnonnull     17
       7: new           #24                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #25                 // String \'targetConnectionFactory\' is required for lazily initializing a Connection
      13: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #7                  // Field connectionMonitor:Ljava/lang/Object;
      21: dup
      22: astore_1
      23: monitorenter
      24: aload_0
      25: getfield      #10                 // Field target:Ljavax/resource/cci/Connection;
      28: ifnull        39
      31: aload_0
      32: aload_0
      33: getfield      #10                 // Field target:Ljavax/resource/cci/Connection;
      36: invokevirtual #27                 // Method closeConnection:(Ljavax/resource/cci/Connection;)V
      39: aload_0
      40: aload_0
      41: invokevirtual #28                 // Method doCreateConnection:()Ljavax/resource/cci/Connection;
      44: putfield      #10                 // Field target:Ljavax/resource/cci/Connection;
      47: aload_0
      48: aload_0
      49: getfield      #10                 // Field target:Ljavax/resource/cci/Connection;
      52: invokevirtual #29                 // Method prepareConnection:(Ljavax/resource/cci/Connection;)V
      55: aload_0
      56: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      59: invokeinterface #30,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
      64: ifeq          98
      67: aload_0
      68: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      71: new           #31                 // class java/lang/StringBuilder
      74: dup
      75: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      78: ldc           #33                 // String Established shared CCI Connection:
      80: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload_0
      84: getfield      #10                 // Field target:Ljavax/resource/cci/Connection;
      87: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      90: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokeinterface #37,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      98: aload_0
      99: aload_0
     100: aload_0
     101: getfield      #10                 // Field target:Ljavax/resource/cci/Connection;
     104: invokevirtual #11                 // Method getCloseSuppressingConnectionProxy:(Ljavax/resource/cci/Connection;)Ljavax/resource/cci/Connection;
     107: putfield      #12                 // Field connection:Ljavax/resource/cci/Connection;
     110: aload_1
     111: monitorexit
     112: goto          120
     115: astore_2
     116: aload_1
     117: monitorexit
     118: aload_2
     119: athrow
     120: return
    Exception table:
       from    to  target type
          24   112   115   any
         115   118   115   any

  public void resetConnection();
    Code:
       0: aload_0
       1: getfield      #7                  // Field connectionMonitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #10                 // Field target:Ljavax/resource/cci/Connection;
      11: ifnull        22
      14: aload_0
      15: aload_0
      16: getfield      #10                 // Field target:Ljavax/resource/cci/Connection;
      19: invokevirtual #27                 // Method closeConnection:(Ljavax/resource/cci/Connection;)V
      22: aload_0
      23: aconst_null
      24: putfield      #10                 // Field target:Ljavax/resource/cci/Connection;
      27: aload_0
      28: aconst_null
      29: putfield      #12                 // Field connection:Ljavax/resource/cci/Connection;
      32: aload_1
      33: monitorexit
      34: goto          42
      37: astore_2
      38: aload_1
      39: monitorexit
      40: aload_2
      41: athrow
      42: return
    Exception table:
       from    to  target type
           7    34    37   any
          37    40    37   any

  protected javax.resource.cci.Connection doCreateConnection() throws javax.resource.ResourceException;
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getTargetConnectionFactory:()Ljavax/resource/cci/ConnectionFactory;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ldc           #38                 // String No \'targetConnectionFactory\' set
      16: invokestatic  #39                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      19: aload_1
      20: invokeinterface #40,  1           // InterfaceMethod javax/resource/cci/ConnectionFactory.getConnection:()Ljavax/resource/cci/Connection;
      25: areturn

  protected void prepareConnection(javax.resource.cci.Connection) throws javax.resource.ResourceException;
    Code:
       0: return

  protected void closeConnection(javax.resource.cci.Connection);
    Code:
       0: aload_1
       1: invokeinterface #41,  1           // InterfaceMethod javax/resource/cci/Connection.close:()V
       6: goto          22
       9: astore_2
      10: aload_0
      11: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      14: ldc           #43                 // String Could not close shared CCI Connection
      16: aload_2
      17: invokeinterface #44,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      22: return
    Exception table:
       from    to  target type
           0     6     9   Class java/lang/Throwable

  protected javax.resource.cci.Connection getCloseSuppressingConnectionProxy(javax.resource.cci.Connection);
    Code:
       0: ldc           #45                 // class javax/resource/cci/Connection
       2: invokevirtual #46                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       5: iconst_1
       6: anewarray     #47                 // class java/lang/Class
       9: dup
      10: iconst_0
      11: ldc           #45                 // class javax/resource/cci/Connection
      13: aastore
      14: new           #48                 // class org/springframework/jca/cci/connection/SingleConnectionFactory$CloseSuppressingInvocationHandler
      17: dup
      18: aload_1
      19: aconst_null
      20: invokespecial #49                 // Method org/springframework/jca/cci/connection/SingleConnectionFactory$CloseSuppressingInvocationHandler."<init>":(Ljavax/resource/cci/Connection;Lorg/springframework/jca/cci/connection/SingleConnectionFactory$1;)V
      23: invokestatic  #50                 // Method java/lang/reflect/Proxy.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;
      26: checkcast     #45                 // class javax/resource/cci/Connection
      29: areturn
}
