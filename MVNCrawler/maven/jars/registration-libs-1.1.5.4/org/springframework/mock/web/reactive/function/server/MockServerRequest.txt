Compiled from "MockServerRequest.java"
public class org.springframework.mock.web.reactive.function.server.MockServerRequest implements org.springframework.web.reactive.function.server.ServerRequest {
  private final org.springframework.http.HttpMethod method;

  private final java.net.URI uri;

  private final org.springframework.http.server.RequestPath pathContainer;

  private final org.springframework.mock.web.reactive.function.server.MockServerRequest$MockHeaders headers;

  private final org.springframework.util.MultiValueMap<java.lang.String, org.springframework.http.HttpCookie> cookies;

  private final java.lang.Object body;

  private final java.util.Map<java.lang.String, java.lang.Object> attributes;

  private final org.springframework.util.MultiValueMap<java.lang.String, java.lang.String> queryParams;

  private final java.util.Map<java.lang.String, java.lang.String> pathVariables;

  private final org.springframework.web.server.WebSession session;

  private java.security.Principal principal;

  private org.springframework.mock.web.reactive.function.server.MockServerRequest(org.springframework.http.HttpMethod, java.net.URI, java.lang.String, org.springframework.mock.web.reactive.function.server.MockServerRequest$MockHeaders, org.springframework.util.MultiValueMap<java.lang.String, org.springframework.http.HttpCookie>, java.lang.Object, java.util.Map<java.lang.String, java.lang.Object>, org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, org.springframework.web.server.WebSession, java.security.Principal);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field method:Lorg/springframework/http/HttpMethod;
       9: aload_0
      10: aload_2
      11: putfield      #2                  // Field uri:Ljava/net/URI;
      14: aload_0
      15: aload_2
      16: aload_3
      17: invokestatic  #6                  // InterfaceMethod org/springframework/http/server/RequestPath.parse:(Ljava/net/URI;Ljava/lang/String;)Lorg/springframework/http/server/RequestPath;
      20: putfield      #7                  // Field pathContainer:Lorg/springframework/http/server/RequestPath;
      23: aload_0
      24: aload         4
      26: putfield      #1                  // Field headers:Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$MockHeaders;
      29: aload_0
      30: aload         5
      32: putfield      #8                  // Field cookies:Lorg/springframework/util/MultiValueMap;
      35: aload_0
      36: aload         6
      38: putfield      #9                  // Field body:Ljava/lang/Object;
      41: aload_0
      42: aload         7
      44: putfield      #10                 // Field attributes:Ljava/util/Map;
      47: aload_0
      48: aload         8
      50: putfield      #11                 // Field queryParams:Lorg/springframework/util/MultiValueMap;
      53: aload_0
      54: aload         9
      56: putfield      #12                 // Field pathVariables:Ljava/util/Map;
      59: aload_0
      60: aload         10
      62: putfield      #13                 // Field session:Lorg/springframework/web/server/WebSession;
      65: aload_0
      66: aload         11
      68: putfield      #14                 // Field principal:Ljava/security/Principal;
      71: return

  public org.springframework.http.HttpMethod method();
    Code:
       0: aload_0
       1: getfield      #5                  // Field method:Lorg/springframework/http/HttpMethod;
       4: areturn

  public java.lang.String methodName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field method:Lorg/springframework/http/HttpMethod;
       4: invokevirtual #15                 // Method org/springframework/http/HttpMethod.name:()Ljava/lang/String;
       7: areturn

  public java.net.URI uri();
    Code:
       0: aload_0
       1: getfield      #2                  // Field uri:Ljava/net/URI;
       4: areturn

  public org.springframework.web.util.UriBuilder uriBuilder();
    Code:
       0: new           #16                 // class org/springframework/mock/web/reactive/function/server/MockServerRequest$ServerRequestAdapter
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #17                 // Method org/springframework/mock/web/reactive/function/server/MockServerRequest$ServerRequestAdapter."<init>":(Lorg/springframework/mock/web/reactive/function/server/MockServerRequest;Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$1;)V
       9: invokestatic  #18                 // Method org/springframework/web/util/UriComponentsBuilder.fromHttpRequest:(Lorg/springframework/http/HttpRequest;)Lorg/springframework/web/util/UriComponentsBuilder;
      12: areturn

  public org.springframework.http.server.PathContainer pathContainer();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pathContainer:Lorg/springframework/http/server/RequestPath;
       4: areturn

  public org.springframework.web.reactive.function.server.ServerRequest$Headers headers();
    Code:
       0: aload_0
       1: getfield      #1                  // Field headers:Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$MockHeaders;
       4: areturn

  public org.springframework.util.MultiValueMap<java.lang.String, org.springframework.http.HttpCookie> cookies();
    Code:
       0: aload_0
       1: getfield      #8                  // Field cookies:Lorg/springframework/util/MultiValueMap;
       4: areturn

  public <S> S body(org.springframework.web.reactive.function.BodyExtractor<S, ? super org.springframework.http.server.reactive.ServerHttpRequest>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field body:Ljava/lang/Object;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #19                 // String No body
      14: invokestatic  #20                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: getfield      #9                  // Field body:Ljava/lang/Object;
      21: areturn

  public <S> S body(org.springframework.web.reactive.function.BodyExtractor<S, ? super org.springframework.http.server.reactive.ServerHttpRequest>, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field body:Ljava/lang/Object;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #19                 // String No body
      14: invokestatic  #20                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: getfield      #9                  // Field body:Ljava/lang/Object;
      21: areturn

  public <S> reactor.core.publisher.Mono<S> bodyToMono(java.lang.Class<? extends S>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field body:Ljava/lang/Object;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #19                 // String No body
      14: invokestatic  #20                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: getfield      #9                  // Field body:Ljava/lang/Object;
      21: checkcast     #21                 // class reactor/core/publisher/Mono
      24: areturn

  public <S> reactor.core.publisher.Mono<S> bodyToMono(org.springframework.core.ParameterizedTypeReference<S>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field body:Ljava/lang/Object;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #19                 // String No body
      14: invokestatic  #20                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: getfield      #9                  // Field body:Ljava/lang/Object;
      21: checkcast     #21                 // class reactor/core/publisher/Mono
      24: areturn

  public <S> reactor.core.publisher.Flux<S> bodyToFlux(java.lang.Class<? extends S>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field body:Ljava/lang/Object;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #19                 // String No body
      14: invokestatic  #20                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: getfield      #9                  // Field body:Ljava/lang/Object;
      21: checkcast     #22                 // class reactor/core/publisher/Flux
      24: areturn

  public <S> reactor.core.publisher.Flux<S> bodyToFlux(org.springframework.core.ParameterizedTypeReference<S>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field body:Ljava/lang/Object;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #19                 // String No body
      14: invokestatic  #20                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: getfield      #9                  // Field body:Ljava/lang/Object;
      21: checkcast     #22                 // class reactor/core/publisher/Flux
      24: areturn

  public java.util.Map<java.lang.String, java.lang.Object> attributes();
    Code:
       0: aload_0
       1: getfield      #10                 // Field attributes:Ljava/util/Map;
       4: areturn

  public org.springframework.util.MultiValueMap<java.lang.String, java.lang.String> queryParams();
    Code:
       0: aload_0
       1: getfield      #11                 // Field queryParams:Lorg/springframework/util/MultiValueMap;
       4: invokestatic  #23                 // Method org/springframework/util/CollectionUtils.unmodifiableMultiValueMap:(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/util/MultiValueMap;
       7: areturn

  public java.util.Map<java.lang.String, java.lang.String> pathVariables();
    Code:
       0: aload_0
       1: getfield      #12                 // Field pathVariables:Ljava/util/Map;
       4: invokestatic  #24                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public reactor.core.publisher.Mono<org.springframework.web.server.WebSession> session();
    Code:
       0: aload_0
       1: getfield      #13                 // Field session:Lorg/springframework/web/server/WebSession;
       4: invokestatic  #25                 // Method reactor/core/publisher/Mono.justOrEmpty:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
       7: areturn

  public reactor.core.publisher.Mono<? extends java.security.Principal> principal();
    Code:
       0: aload_0
       1: getfield      #14                 // Field principal:Ljava/security/Principal;
       4: invokestatic  #25                 // Method reactor/core/publisher/Mono.justOrEmpty:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
       7: areturn

  public reactor.core.publisher.Mono<org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>> formData();
    Code:
       0: aload_0
       1: getfield      #9                  // Field body:Ljava/lang/Object;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #19                 // String No body
      14: invokestatic  #20                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: getfield      #9                  // Field body:Ljava/lang/Object;
      21: checkcast     #21                 // class reactor/core/publisher/Mono
      24: areturn

  public reactor.core.publisher.Mono<org.springframework.util.MultiValueMap<java.lang.String, org.springframework.http.codec.multipart.Part>> multipartData();
    Code:
       0: aload_0
       1: getfield      #9                  // Field body:Ljava/lang/Object;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #19                 // String No body
      14: invokestatic  #20                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: getfield      #9                  // Field body:Ljava/lang/Object;
      21: checkcast     #21                 // class reactor/core/publisher/Mono
      24: areturn

  public static org.springframework.mock.web.reactive.function.server.MockServerRequest$Builder builder();
    Code:
       0: new           #26                 // class org/springframework/mock/web/reactive/function/server/MockServerRequest$BuilderImpl
       3: dup
       4: aconst_null
       5: invokespecial #27                 // Method org/springframework/mock/web/reactive/function/server/MockServerRequest$BuilderImpl."<init>":(Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$1;)V
       8: areturn

  org.springframework.mock.web.reactive.function.server.MockServerRequest(org.springframework.http.HttpMethod, java.net.URI, java.lang.String, org.springframework.mock.web.reactive.function.server.MockServerRequest$MockHeaders, org.springframework.util.MultiValueMap, java.lang.Object, java.util.Map, org.springframework.util.MultiValueMap, java.util.Map, org.springframework.web.server.WebSession, java.security.Principal, org.springframework.mock.web.reactive.function.server.MockServerRequest$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: invokespecial #3                  // Method "<init>":(Lorg/springframework/http/HttpMethod;Ljava/net/URI;Ljava/lang/String;Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$MockHeaders;Lorg/springframework/util/MultiValueMap;Ljava/lang/Object;Ljava/util/Map;Lorg/springframework/util/MultiValueMap;Ljava/util/Map;Lorg/springframework/web/server/WebSession;Ljava/security/Principal;)V
      23: return

  static java.net.URI access$300(org.springframework.mock.web.reactive.function.server.MockServerRequest);
    Code:
       0: aload_0
       1: getfield      #2                  // Field uri:Ljava/net/URI;
       4: areturn

  static org.springframework.mock.web.reactive.function.server.MockServerRequest$MockHeaders access$400(org.springframework.mock.web.reactive.function.server.MockServerRequest);
    Code:
       0: aload_0
       1: getfield      #1                  // Field headers:Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$MockHeaders;
       4: areturn
}
