Compiled from "MockPart.java"
public class org.springframework.mock.web.MockPart implements javax.servlet.http.Part {
  private final java.lang.String name;

  private final java.lang.String filename;

  private final byte[] content;

  private final org.springframework.http.HttpHeaders headers;

  public org.springframework.mock.web.MockPart(java.lang.String, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;[B)V
       7: return

  public org.springframework.mock.web.MockPart(java.lang.String, java.lang.String, byte[]);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class org/springframework/http/HttpHeaders
       8: dup
       9: invokespecial #4                  // Method org/springframework/http/HttpHeaders."<init>":()V
      12: putfield      #5                  // Field headers:Lorg/springframework/http/HttpHeaders;
      15: aload_1
      16: ldc           #6                  // String \'name\' must not be empty
      18: invokestatic  #7                  // Method org/springframework/util/Assert.hasLength:(Ljava/lang/String;Ljava/lang/String;)V
      21: aload_0
      22: aload_1
      23: putfield      #8                  // Field name:Ljava/lang/String;
      26: aload_0
      27: aload_2
      28: putfield      #9                  // Field filename:Ljava/lang/String;
      31: aload_0
      32: aload_3
      33: ifnull        40
      36: aload_3
      37: goto          43
      40: iconst_0
      41: newarray       byte
      43: putfield      #10                 // Field content:[B
      46: aload_0
      47: getfield      #5                  // Field headers:Lorg/springframework/http/HttpHeaders;
      50: aload_1
      51: aload_2
      52: invokevirtual #11                 // Method org/springframework/http/HttpHeaders.setContentDispositionFormData:(Ljava/lang/String;Ljava/lang/String;)V
      55: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.String getSubmittedFileName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field filename:Ljava/lang/String;
       4: areturn

  public java.lang.String getContentType();
    Code:
       0: aload_0
       1: getfield      #5                  // Field headers:Lorg/springframework/http/HttpHeaders;
       4: invokevirtual #12                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
       7: astore_1
       8: aload_1
       9: ifnull        19
      12: aload_1
      13: invokevirtual #13                 // Method org/springframework/http/MediaType.toString:()Ljava/lang/String;
      16: goto          20
      19: aconst_null
      20: areturn

  public long getSize();
    Code:
       0: aload_0
       1: getfield      #10                 // Field content:[B
       4: arraylength
       5: i2l
       6: lreturn

  public java.io.InputStream getInputStream() throws java.io.IOException;
    Code:
       0: new           #14                 // class java/io/ByteArrayInputStream
       3: dup
       4: aload_0
       5: getfield      #10                 // Field content:[B
       8: invokespecial #15                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      11: areturn

  public void write(java.lang.String) throws java.io.IOException;
    Code:
       0: new           #16                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #17                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void delete() throws java.io.IOException;
    Code:
       0: new           #16                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #17                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.String getHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field headers:Lorg/springframework/http/HttpHeaders;
       4: aload_1
       5: invokevirtual #18                 // Method org/springframework/http/HttpHeaders.getFirst:(Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public java.util.Collection<java.lang.String> getHeaders(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field headers:Lorg/springframework/http/HttpHeaders;
       4: aload_1
       5: invokevirtual #19                 // Method org/springframework/http/HttpHeaders.get:(Ljava/lang/Object;)Ljava/util/List;
       8: astore_2
       9: aload_2
      10: ifnull        17
      13: aload_2
      14: goto          20
      17: invokestatic  #20                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      20: areturn

  public java.util.Collection<java.lang.String> getHeaderNames();
    Code:
       0: aload_0
       1: getfield      #5                  // Field headers:Lorg/springframework/http/HttpHeaders;
       4: invokevirtual #21                 // Method org/springframework/http/HttpHeaders.keySet:()Ljava/util/Set;
       7: areturn

  public final org.springframework.http.HttpHeaders getHeaders();
    Code:
       0: aload_0
       1: getfield      #5                  // Field headers:Lorg/springframework/http/HttpHeaders;
       4: areturn
}
