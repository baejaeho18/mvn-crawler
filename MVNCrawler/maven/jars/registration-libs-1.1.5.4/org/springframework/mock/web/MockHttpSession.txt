Compiled from "MockHttpSession.java"
public class org.springframework.mock.web.MockHttpSession implements javax.servlet.http.HttpSession {
  public static final java.lang.String SESSION_COOKIE_NAME;

  private static int nextId;

  private java.lang.String id;

  private final long creationTime;

  private int maxInactiveInterval;

  private long lastAccessedTime;

  private final javax.servlet.ServletContext servletContext;

  private final java.util.Map<java.lang.String, java.lang.Object> attributes;

  private boolean invalid;

  private boolean isNew;

  public org.springframework.mock.web.MockHttpSession();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method "<init>":(Ljavax/servlet/ServletContext;)V
       5: return

  public org.springframework.mock.web.MockHttpSession(javax.servlet.ServletContext);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #2                  // Method "<init>":(Ljavax/servlet/ServletContext;Ljava/lang/String;)V
       6: return

  public org.springframework.mock.web.MockHttpSession(javax.servlet.ServletContext, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #4                  // Method java/lang/System.currentTimeMillis:()J
       8: putfield      #5                  // Field creationTime:J
      11: aload_0
      12: invokestatic  #4                  // Method java/lang/System.currentTimeMillis:()J
      15: putfield      #6                  // Field lastAccessedTime:J
      18: aload_0
      19: new           #7                  // class java/util/LinkedHashMap
      22: dup
      23: invokespecial #8                  // Method java/util/LinkedHashMap."<init>":()V
      26: putfield      #9                  // Field attributes:Ljava/util/Map;
      29: aload_0
      30: iconst_0
      31: putfield      #10                 // Field invalid:Z
      34: aload_0
      35: iconst_1
      36: putfield      #11                 // Field isNew:Z
      39: aload_0
      40: aload_1
      41: ifnull        48
      44: aload_1
      45: goto          55
      48: new           #12                 // class org/springframework/mock/web/MockServletContext
      51: dup
      52: invokespecial #13                 // Method org/springframework/mock/web/MockServletContext."<init>":()V
      55: putfield      #14                 // Field servletContext:Ljavax/servlet/ServletContext;
      58: aload_0
      59: aload_2
      60: ifnull        67
      63: aload_2
      64: goto          79
      67: getstatic     #15                 // Field nextId:I
      70: dup
      71: iconst_1
      72: iadd
      73: putstatic     #15                 // Field nextId:I
      76: invokestatic  #16                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      79: putfield      #17                 // Field id:Ljava/lang/String;
      82: return

  public long getCreationTime();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method assertIsValid:()V
       4: aload_0
       5: getfield      #5                  // Field creationTime:J
       8: lreturn

  public java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #17                 // Field id:Ljava/lang/String;
       4: areturn

  public java.lang.String changeSessionId();
    Code:
       0: aload_0
       1: getstatic     #15                 // Field nextId:I
       4: dup
       5: iconst_1
       6: iadd
       7: putstatic     #15                 // Field nextId:I
      10: invokestatic  #16                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      13: putfield      #17                 // Field id:Ljava/lang/String;
      16: aload_0
      17: getfield      #17                 // Field id:Ljava/lang/String;
      20: areturn

  public void access();
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method java/lang/System.currentTimeMillis:()J
       4: putfield      #6                  // Field lastAccessedTime:J
       7: aload_0
       8: iconst_0
       9: putfield      #11                 // Field isNew:Z
      12: return

  public long getLastAccessedTime();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method assertIsValid:()V
       4: aload_0
       5: getfield      #6                  // Field lastAccessedTime:J
       8: lreturn

  public javax.servlet.ServletContext getServletContext();
    Code:
       0: aload_0
       1: getfield      #14                 // Field servletContext:Ljavax/servlet/ServletContext;
       4: areturn

  public void setMaxInactiveInterval(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field maxInactiveInterval:I
       5: return

  public int getMaxInactiveInterval();
    Code:
       0: aload_0
       1: getfield      #19                 // Field maxInactiveInterval:I
       4: ireturn

  public javax.servlet.http.HttpSessionContext getSessionContext();
    Code:
       0: new           #20                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #21                 // String getSessionContext
       6: invokespecial #22                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.Object getAttribute(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method assertIsValid:()V
       4: aload_1
       5: ldc           #23                 // String Attribute name must not be null
       7: invokestatic  #24                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: getfield      #9                  // Field attributes:Ljava/util/Map;
      14: aload_1
      15: invokeinterface #25,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn

  public java.lang.Object getValue(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
       5: areturn

  public java.util.Enumeration<java.lang.String> getAttributeNames();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method assertIsValid:()V
       4: new           #27                 // class java/util/LinkedHashSet
       7: dup
       8: aload_0
       9: getfield      #9                  // Field attributes:Ljava/util/Map;
      12: invokeinterface #28,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      17: invokespecial #29                 // Method java/util/LinkedHashSet."<init>":(Ljava/util/Collection;)V
      20: invokestatic  #30                 // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;
      23: areturn

  public java.lang.String[] getValueNames();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method assertIsValid:()V
       4: aload_0
       5: getfield      #9                  // Field attributes:Ljava/util/Map;
       8: invokeinterface #28,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      13: invokestatic  #31                 // Method org/springframework/util/StringUtils.toStringArray:(Ljava/util/Collection;)[Ljava/lang/String;
      16: areturn

  public void setAttribute(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method assertIsValid:()V
       4: aload_1
       5: ldc           #23                 // String Attribute name must not be null
       7: invokestatic  #24                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ifnull        55
      14: aload_0
      15: getfield      #9                  // Field attributes:Ljava/util/Map;
      18: aload_1
      19: aload_2
      20: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: aload_2
      27: instanceof    #33                 // class javax/servlet/http/HttpSessionBindingListener
      30: ifeq          60
      33: aload_2
      34: checkcast     #33                 // class javax/servlet/http/HttpSessionBindingListener
      37: new           #34                 // class javax/servlet/http/HttpSessionBindingEvent
      40: dup
      41: aload_0
      42: aload_1
      43: aload_2
      44: invokespecial #35                 // Method javax/servlet/http/HttpSessionBindingEvent."<init>":(Ljavax/servlet/http/HttpSession;Ljava/lang/String;Ljava/lang/Object;)V
      47: invokeinterface #36,  2           // InterfaceMethod javax/servlet/http/HttpSessionBindingListener.valueBound:(Ljavax/servlet/http/HttpSessionBindingEvent;)V
      52: goto          60
      55: aload_0
      56: aload_1
      57: invokevirtual #37                 // Method removeAttribute:(Ljava/lang/String;)V
      60: return

  public void putValue(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #38                 // Method setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
       6: return

  public void removeAttribute(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method assertIsValid:()V
       4: aload_1
       5: ldc           #23                 // String Attribute name must not be null
       7: invokestatic  #24                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: getfield      #9                  // Field attributes:Ljava/util/Map;
      14: aload_1
      15: invokeinterface #39,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      20: astore_2
      21: aload_2
      22: instanceof    #33                 // class javax/servlet/http/HttpSessionBindingListener
      25: ifeq          47
      28: aload_2
      29: checkcast     #33                 // class javax/servlet/http/HttpSessionBindingListener
      32: new           #34                 // class javax/servlet/http/HttpSessionBindingEvent
      35: dup
      36: aload_0
      37: aload_1
      38: aload_2
      39: invokespecial #35                 // Method javax/servlet/http/HttpSessionBindingEvent."<init>":(Ljavax/servlet/http/HttpSession;Ljava/lang/String;Ljava/lang/Object;)V
      42: invokeinterface #40,  2           // InterfaceMethod javax/servlet/http/HttpSessionBindingListener.valueUnbound:(Ljavax/servlet/http/HttpSessionBindingEvent;)V
      47: return

  public void removeValue(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #37                 // Method removeAttribute:(Ljava/lang/String;)V
       5: return

  public void clearAttributes();
    Code:
       0: aload_0
       1: getfield      #9                  // Field attributes:Ljava/util/Map;
       4: invokeinterface #41,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #42,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          90
      24: aload_1
      25: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #45                 // class java/util/Map$Entry
      33: astore_2
      34: aload_2
      35: invokeinterface #46,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      40: checkcast     #47                 // class java/lang/String
      43: astore_3
      44: aload_2
      45: invokeinterface #48,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      50: astore        4
      52: aload_1
      53: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.remove:()V
      58: aload         4
      60: instanceof    #33                 // class javax/servlet/http/HttpSessionBindingListener
      63: ifeq          87
      66: aload         4
      68: checkcast     #33                 // class javax/servlet/http/HttpSessionBindingListener
      71: new           #34                 // class javax/servlet/http/HttpSessionBindingEvent
      74: dup
      75: aload_0
      76: aload_3
      77: aload         4
      79: invokespecial #35                 // Method javax/servlet/http/HttpSessionBindingEvent."<init>":(Ljavax/servlet/http/HttpSession;Ljava/lang/String;Ljava/lang/Object;)V
      82: invokeinterface #40,  2           // InterfaceMethod javax/servlet/http/HttpSessionBindingListener.valueUnbound:(Ljavax/servlet/http/HttpSessionBindingEvent;)V
      87: goto          15
      90: return

  public void invalidate();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method assertIsValid:()V
       4: aload_0
       5: iconst_1
       6: putfield      #10                 // Field invalid:Z
       9: aload_0
      10: invokevirtual #50                 // Method clearAttributes:()V
      13: return

  public boolean isInvalid();
    Code:
       0: aload_0
       1: getfield      #10                 // Field invalid:Z
       4: ireturn

  private void assertIsValid();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method isInvalid:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #52                 // String The session has already been invalidated
      14: invokestatic  #53                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: return

  public void setNew(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field isNew:Z
       5: return

  public boolean isNew();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method assertIsValid:()V
       4: aload_0
       5: getfield      #11                 // Field isNew:Z
       8: ireturn

  public java.io.Serializable serializeState();
    Code:
       0: new           #54                 // class java/util/HashMap
       3: dup
       4: invokespecial #55                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #9                  // Field attributes:Ljava/util/Map;
      12: invokeinterface #41,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      17: invokeinterface #42,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          123
      32: aload_2
      33: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #45                 // class java/util/Map$Entry
      41: astore_3
      42: aload_3
      43: invokeinterface #46,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      48: checkcast     #47                 // class java/lang/String
      51: astore        4
      53: aload_3
      54: invokeinterface #48,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      59: astore        5
      61: aload_2
      62: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.remove:()V
      67: aload         5
      69: instanceof    #56                 // class java/io/Serializable
      72: ifeq          90
      75: aload_1
      76: aload         4
      78: aload         5
      80: checkcast     #56                 // class java/io/Serializable
      83: invokevirtual #57                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      86: pop
      87: goto          120
      90: aload         5
      92: instanceof    #33                 // class javax/servlet/http/HttpSessionBindingListener
      95: ifeq          120
      98: aload         5
     100: checkcast     #33                 // class javax/servlet/http/HttpSessionBindingListener
     103: new           #34                 // class javax/servlet/http/HttpSessionBindingEvent
     106: dup
     107: aload_0
     108: aload         4
     110: aload         5
     112: invokespecial #35                 // Method javax/servlet/http/HttpSessionBindingEvent."<init>":(Ljavax/servlet/http/HttpSession;Ljava/lang/String;Ljava/lang/Object;)V
     115: invokeinterface #40,  2           // InterfaceMethod javax/servlet/http/HttpSessionBindingListener.valueUnbound:(Ljavax/servlet/http/HttpSessionBindingEvent;)V
     120: goto          23
     123: aload_1
     124: areturn

  public void deserializeState(java.io.Serializable);
    Code:
       0: aload_1
       1: instanceof    #58                 // class java/util/Map
       4: ldc           #59                 // String Serialized state needs to be of type [java.util.Map]
       6: invokestatic  #60                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
       9: aload_0
      10: getfield      #9                  // Field attributes:Ljava/util/Map;
      13: aload_1
      14: checkcast     #58                 // class java/util/Map
      17: invokeinterface #61,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      22: return

  static {};
    Code:
       0: iconst_1
       1: putstatic     #15                 // Field nextId:I
       4: return
}
