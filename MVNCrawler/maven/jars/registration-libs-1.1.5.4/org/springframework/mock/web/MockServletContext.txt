Compiled from "MockServletContext.java"
public class org.springframework.mock.web.MockServletContext implements javax.servlet.ServletContext {
  private static final java.lang.String COMMON_DEFAULT_SERVLET_NAME;

  private static final java.lang.String TEMP_DIR_SYSTEM_PROPERTY;

  private static final java.util.Set<javax.servlet.SessionTrackingMode> DEFAULT_SESSION_TRACKING_MODES;

  private final org.apache.commons.logging.Log logger;

  private final org.springframework.core.io.ResourceLoader resourceLoader;

  private final java.lang.String resourceBasePath;

  private java.lang.String contextPath;

  private final java.util.Map<java.lang.String, javax.servlet.ServletContext> contexts;

  private int majorVersion;

  private int minorVersion;

  private int effectiveMajorVersion;

  private int effectiveMinorVersion;

  private final java.util.Map<java.lang.String, javax.servlet.RequestDispatcher> namedRequestDispatchers;

  private java.lang.String defaultServletName;

  private final java.util.Map<java.lang.String, java.lang.String> initParameters;

  private final java.util.Map<java.lang.String, java.lang.Object> attributes;

  private java.lang.String servletContextName;

  private final java.util.Set<java.lang.String> declaredRoles;

  private java.util.Set<javax.servlet.SessionTrackingMode> sessionTrackingModes;

  private final javax.servlet.SessionCookieConfig sessionCookieConfig;

  private int sessionTimeout;

  private java.lang.String requestCharacterEncoding;

  private java.lang.String responseCharacterEncoding;

  private final java.util.Map<java.lang.String, org.springframework.http.MediaType> mimeTypes;

  public org.springframework.mock.web.MockServletContext();
    Code:
       0: aload_0
       1: ldc           #1                  // String
       3: aconst_null
       4: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Lorg/springframework/core/io/ResourceLoader;)V
       7: return

  public org.springframework.mock.web.MockServletContext(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Lorg/springframework/core/io/ResourceLoader;)V
       6: return

  public org.springframework.mock.web.MockServletContext(org.springframework.core.io.ResourceLoader);
    Code:
       0: aload_0
       1: ldc           #1                  // String
       3: aload_1
       4: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Lorg/springframework/core/io/ResourceLoader;)V
       7: return

  public org.springframework.mock.web.MockServletContext(java.lang.String, org.springframework.core.io.ResourceLoader);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #5                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: ldc           #1                  // String
      18: putfield      #7                  // Field contextPath:Ljava/lang/String;
      21: aload_0
      22: new           #8                  // class java/util/HashMap
      25: dup
      26: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      29: putfield      #10                 // Field contexts:Ljava/util/Map;
      32: aload_0
      33: iconst_3
      34: putfield      #11                 // Field majorVersion:I
      37: aload_0
      38: iconst_1
      39: putfield      #12                 // Field minorVersion:I
      42: aload_0
      43: iconst_3
      44: putfield      #13                 // Field effectiveMajorVersion:I
      47: aload_0
      48: iconst_1
      49: putfield      #14                 // Field effectiveMinorVersion:I
      52: aload_0
      53: new           #8                  // class java/util/HashMap
      56: dup
      57: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      60: putfield      #15                 // Field namedRequestDispatchers:Ljava/util/Map;
      63: aload_0
      64: ldc           #17                 // String default
      66: putfield      #18                 // Field defaultServletName:Ljava/lang/String;
      69: aload_0
      70: new           #19                 // class java/util/LinkedHashMap
      73: dup
      74: invokespecial #20                 // Method java/util/LinkedHashMap."<init>":()V
      77: putfield      #21                 // Field initParameters:Ljava/util/Map;
      80: aload_0
      81: new           #19                 // class java/util/LinkedHashMap
      84: dup
      85: invokespecial #20                 // Method java/util/LinkedHashMap."<init>":()V
      88: putfield      #22                 // Field attributes:Ljava/util/Map;
      91: aload_0
      92: ldc           #23                 // String MockServletContext
      94: putfield      #24                 // Field servletContextName:Ljava/lang/String;
      97: aload_0
      98: new           #25                 // class java/util/LinkedHashSet
     101: dup
     102: invokespecial #26                 // Method java/util/LinkedHashSet."<init>":()V
     105: putfield      #27                 // Field declaredRoles:Ljava/util/Set;
     108: aload_0
     109: new           #28                 // class org/springframework/mock/web/MockSessionCookieConfig
     112: dup
     113: invokespecial #29                 // Method org/springframework/mock/web/MockSessionCookieConfig."<init>":()V
     116: putfield      #30                 // Field sessionCookieConfig:Ljavax/servlet/SessionCookieConfig;
     119: aload_0
     120: new           #19                 // class java/util/LinkedHashMap
     123: dup
     124: invokespecial #20                 // Method java/util/LinkedHashMap."<init>":()V
     127: putfield      #31                 // Field mimeTypes:Ljava/util/Map;
     130: aload_0
     131: aload_2
     132: ifnull        139
     135: aload_2
     136: goto          146
     139: new           #32                 // class org/springframework/core/io/DefaultResourceLoader
     142: dup
     143: invokespecial #33                 // Method org/springframework/core/io/DefaultResourceLoader."<init>":()V
     146: putfield      #34                 // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
     149: aload_0
     150: aload_1
     151: putfield      #35                 // Field resourceBasePath:Ljava/lang/String;
     154: ldc           #36                 // String java.io.tmpdir
     156: invokestatic  #37                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     159: astore_3
     160: aload_3
     161: ifnull        184
     164: aload_0
     165: getfield      #22                 // Field attributes:Ljava/util/Map;
     168: ldc           #39                 // String javax.servlet.context.tempdir
     170: new           #40                 // class java/io/File
     173: dup
     174: aload_3
     175: invokespecial #41                 // Method java/io/File."<init>":(Ljava/lang/String;)V
     178: invokeinterface #42,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     183: pop
     184: aload_0
     185: aload_0
     186: getfield      #18                 // Field defaultServletName:Ljava/lang/String;
     189: new           #43                 // class org/springframework/mock/web/MockRequestDispatcher
     192: dup
     193: aload_0
     194: getfield      #18                 // Field defaultServletName:Ljava/lang/String;
     197: invokespecial #44                 // Method org/springframework/mock/web/MockRequestDispatcher."<init>":(Ljava/lang/String;)V
     200: invokevirtual #45                 // Method registerNamedDispatcher:(Ljava/lang/String;Ljavax/servlet/RequestDispatcher;)V
     203: return

  protected java.lang.String getResourceLocation(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #46                 // String /
       3: invokevirtual #47                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifne          29
       9: new           #48                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #46                 // String /
      18: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_1
      22: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: astore_1
      29: new           #48                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      36: aload_0
      37: getfield      #35                 // Field resourceBasePath:Ljava/lang/String;
      40: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_1
      44: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: areturn

  public void setContextPath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field contextPath:Ljava/lang/String;
       5: return

  public java.lang.String getContextPath();
    Code:
       0: aload_0
       1: getfield      #7                  // Field contextPath:Ljava/lang/String;
       4: areturn

  public void registerContext(java.lang.String, javax.servlet.ServletContext);
    Code:
       0: aload_0
       1: getfield      #10                 // Field contexts:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #42,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public javax.servlet.ServletContext getContext(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field contextPath:Ljava/lang/String;
       4: aload_1
       5: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       8: ifeq          13
      11: aload_0
      12: areturn
      13: aload_0
      14: getfield      #10                 // Field contexts:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #53,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #54                 // class javax/servlet/ServletContext
      26: areturn

  public void setMajorVersion(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field majorVersion:I
       5: return

  public int getMajorVersion();
    Code:
       0: aload_0
       1: getfield      #11                 // Field majorVersion:I
       4: ireturn

  public void setMinorVersion(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field minorVersion:I
       5: return

  public int getMinorVersion();
    Code:
       0: aload_0
       1: getfield      #12                 // Field minorVersion:I
       4: ireturn

  public void setEffectiveMajorVersion(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field effectiveMajorVersion:I
       5: return

  public int getEffectiveMajorVersion();
    Code:
       0: aload_0
       1: getfield      #13                 // Field effectiveMajorVersion:I
       4: ireturn

  public void setEffectiveMinorVersion(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field effectiveMinorVersion:I
       5: return

  public int getEffectiveMinorVersion();
    Code:
       0: aload_0
       1: getfield      #14                 // Field effectiveMinorVersion:I
       4: ireturn

  public java.lang.String getMimeType(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #55                 // Method org/springframework/util/StringUtils.getFilenameExtension:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #31                 // Field mimeTypes:Ljava/util/Map;
       9: aload_2
      10: invokeinterface #56,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      15: ifeq          35
      18: aload_0
      19: getfield      #31                 // Field mimeTypes:Ljava/util/Map;
      22: aload_2
      23: invokeinterface #53,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #57                 // class org/springframework/http/MediaType
      31: invokevirtual #58                 // Method org/springframework/http/MediaType.toString:()Ljava/lang/String;
      34: areturn
      35: aload_1
      36: invokestatic  #59                 // Method org/springframework/http/MediaTypeFactory.getMediaType:(Ljava/lang/String;)Ljava/util/Optional;
      39: invokedynamic #60,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      44: invokevirtual #61                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      47: aconst_null
      48: invokevirtual #62                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      51: checkcast     #63                 // class java/lang/String
      54: areturn

  public void addMimeType(java.lang.String, org.springframework.http.MediaType);
    Code:
       0: aload_1
       1: ldc           #64                 // String \'fileExtension\' must not be null
       3: invokestatic  #65                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #31                 // Field mimeTypes:Ljava/util/Map;
      10: aload_1
      11: aload_2
      12: invokeinterface #42,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: return

  public java.util.Set<java.lang.String> getResourcePaths(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #46                 // String /
       3: invokevirtual #66                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
       6: ifeq          13
       9: aload_1
      10: goto          32
      13: new           #48                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      20: aload_1
      21: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #46                 // String /
      26: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: astore_2
      33: aload_0
      34: getfield      #34                 // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
      37: aload_0
      38: aload_2
      39: invokevirtual #67                 // Method getResourceLocation:(Ljava/lang/String;)Ljava/lang/String;
      42: invokeinterface #68,  2           // InterfaceMethod org/springframework/core/io/ResourceLoader.getResource:(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
      47: astore_3
      48: aload_3
      49: invokeinterface #69,  1           // InterfaceMethod org/springframework/core/io/Resource.getFile:()Ljava/io/File;
      54: astore        4
      56: aload         4
      58: invokevirtual #70                 // Method java/io/File.list:()[Ljava/lang/String;
      61: astore        5
      63: aload         5
      65: invokestatic  #71                 // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
      68: ifeq          73
      71: aconst_null
      72: areturn
      73: new           #25                 // class java/util/LinkedHashSet
      76: dup
      77: aload         5
      79: arraylength
      80: invokespecial #72                 // Method java/util/LinkedHashSet."<init>":(I)V
      83: astore        6
      85: aload         5
      87: astore        7
      89: aload         7
      91: arraylength
      92: istore        8
      94: iconst_0
      95: istore        9
      97: iload         9
      99: iload         8
     101: if_icmpge     189
     104: aload         7
     106: iload         9
     108: aaload
     109: astore        10
     111: new           #48                 // class java/lang/StringBuilder
     114: dup
     115: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
     118: aload_2
     119: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload         10
     124: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     130: astore        11
     132: aload_3
     133: aload         10
     135: invokeinterface #73,  2           // InterfaceMethod org/springframework/core/io/Resource.createRelative:(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
     140: invokeinterface #69,  1           // InterfaceMethod org/springframework/core/io/Resource.getFile:()Ljava/io/File;
     145: invokevirtual #74                 // Method java/io/File.isDirectory:()Z
     148: ifeq          173
     151: new           #48                 // class java/lang/StringBuilder
     154: dup
     155: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
     158: aload         11
     160: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     163: ldc           #46                 // String /
     165: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     171: astore        11
     173: aload         6
     175: aload         11
     177: invokeinterface #75,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     182: pop
     183: iinc          9, 1
     186: goto          97
     189: aload         6
     191: areturn
     192: astore        4
     194: aload_0
     195: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
     198: new           #48                 // class java/lang/StringBuilder
     201: dup
     202: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
     205: ldc           #77                 // String Couldn\'t get resource paths for
     207: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     210: aload_3
     211: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     214: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     217: aload         4
     219: invokeinterface #79,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     224: aconst_null
     225: areturn
    Exception table:
       from    to  target type
          48    72   192   Class java/io/IOException
          73   191   192   Class java/io/IOException

  public java.net.URL getResource(java.lang.String) throws java.net.MalformedURLException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
       4: aload_0
       5: aload_1
       6: invokevirtual #67                 // Method getResourceLocation:(Ljava/lang/String;)Ljava/lang/String;
       9: invokeinterface #68,  2           // InterfaceMethod org/springframework/core/io/ResourceLoader.getResource:(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
      14: astore_2
      15: aload_2
      16: invokeinterface #80,  1           // InterfaceMethod org/springframework/core/io/Resource.exists:()Z
      21: ifne          26
      24: aconst_null
      25: areturn
      26: aload_2
      27: invokeinterface #81,  1           // InterfaceMethod org/springframework/core/io/Resource.getURL:()Ljava/net/URL;
      32: areturn
      33: astore_3
      34: aload_3
      35: athrow
      36: astore_3
      37: aload_0
      38: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      41: new           #48                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #83                 // String Couldn\'t get URL for
      50: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_2
      54: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: aload_3
      61: invokeinterface #79,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      66: aconst_null
      67: areturn
    Exception table:
       from    to  target type
          26    32    33   Class java/net/MalformedURLException
          26    32    36   Class java/io/IOException

  public java.io.InputStream getResourceAsStream(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #34                 // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
       4: aload_0
       5: aload_1
       6: invokevirtual #67                 // Method getResourceLocation:(Ljava/lang/String;)Ljava/lang/String;
       9: invokeinterface #68,  2           // InterfaceMethod org/springframework/core/io/ResourceLoader.getResource:(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
      14: astore_2
      15: aload_2
      16: invokeinterface #80,  1           // InterfaceMethod org/springframework/core/io/Resource.exists:()Z
      21: ifne          26
      24: aconst_null
      25: areturn
      26: aload_2
      27: invokeinterface #84,  1           // InterfaceMethod org/springframework/core/io/Resource.getInputStream:()Ljava/io/InputStream;
      32: areturn
      33: astore_3
      34: aload_0
      35: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      38: new           #48                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #85                 // String Couldn\'t open InputStream for
      47: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_2
      51: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      54: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: aload_3
      58: invokeinterface #79,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      63: aconst_null
      64: areturn
    Exception table:
       from    to  target type
          26    32    33   Class java/io/IOException

  public javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #46                 // String /
       3: invokevirtual #47                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: aload_1
       7: invokedynamic #86,  0             // InvokeDynamic #1:get:(Ljava/lang/String;)Ljava/util/function/Supplier;
      12: invokestatic  #87                 // Method org/springframework/util/Assert.isTrue:(ZLjava/util/function/Supplier;)V
      15: new           #43                 // class org/springframework/mock/web/MockRequestDispatcher
      18: dup
      19: aload_1
      20: invokespecial #44                 // Method org/springframework/mock/web/MockRequestDispatcher."<init>":(Ljava/lang/String;)V
      23: areturn

  public javax.servlet.RequestDispatcher getNamedDispatcher(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field namedRequestDispatchers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #53,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #88                 // class javax/servlet/RequestDispatcher
      13: areturn

  public void registerNamedDispatcher(java.lang.String, javax.servlet.RequestDispatcher);
    Code:
       0: aload_1
       1: ldc           #89                 // String RequestDispatcher name must not be null
       3: invokestatic  #65                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #90                 // String RequestDispatcher must not be null
       9: invokestatic  #65                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: getfield      #15                 // Field namedRequestDispatchers:Ljava/util/Map;
      16: aload_1
      17: aload_2
      18: invokeinterface #42,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: return

  public void unregisterNamedDispatcher(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #89                 // String RequestDispatcher name must not be null
       3: invokestatic  #65                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #15                 // Field namedRequestDispatchers:Ljava/util/Map;
      10: aload_1
      11: invokeinterface #91,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  public java.lang.String getDefaultServletName();
    Code:
       0: aload_0
       1: getfield      #18                 // Field defaultServletName:Ljava/lang/String;
       4: areturn

  public void setDefaultServletName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #92                 // String defaultServletName must not be null or empty
       3: invokestatic  #93                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_0
       8: getfield      #18                 // Field defaultServletName:Ljava/lang/String;
      11: invokevirtual #94                 // Method unregisterNamedDispatcher:(Ljava/lang/String;)V
      14: aload_0
      15: aload_1
      16: putfield      #18                 // Field defaultServletName:Ljava/lang/String;
      19: aload_0
      20: aload_0
      21: getfield      #18                 // Field defaultServletName:Ljava/lang/String;
      24: new           #43                 // class org/springframework/mock/web/MockRequestDispatcher
      27: dup
      28: aload_0
      29: getfield      #18                 // Field defaultServletName:Ljava/lang/String;
      32: invokespecial #44                 // Method org/springframework/mock/web/MockRequestDispatcher."<init>":(Ljava/lang/String;)V
      35: invokevirtual #45                 // Method registerNamedDispatcher:(Ljava/lang/String;Ljavax/servlet/RequestDispatcher;)V
      38: return

  public javax.servlet.Servlet getServlet(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public java.util.Enumeration<javax.servlet.Servlet> getServlets();
    Code:
       0: invokestatic  #95                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
       3: invokestatic  #96                 // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;
       6: areturn

  public java.util.Enumeration<java.lang.String> getServletNames();
    Code:
       0: invokestatic  #95                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
       3: invokestatic  #96                 // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;
       6: areturn

  public void log(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
       4: aload_1
       5: invokeinterface #97,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      10: return

  public void log(java.lang.Exception, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
       4: aload_2
       5: aload_1
       6: invokeinterface #98,  3           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      11: return

  public void log(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
       4: aload_1
       5: aload_2
       6: invokeinterface #98,  3           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      11: return

  public java.lang.String getRealPath(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #34                 // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
       4: aload_0
       5: aload_1
       6: invokevirtual #67                 // Method getResourceLocation:(Ljava/lang/String;)Ljava/lang/String;
       9: invokeinterface #68,  2           // InterfaceMethod org/springframework/core/io/ResourceLoader.getResource:(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
      14: astore_2
      15: aload_2
      16: invokeinterface #69,  1           // InterfaceMethod org/springframework/core/io/Resource.getFile:()Ljava/io/File;
      21: invokevirtual #99                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      24: areturn
      25: astore_3
      26: aload_0
      27: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      30: new           #48                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #100                // String Couldn\'t determine real path of resource
      39: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_2
      43: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      46: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: aload_3
      50: invokeinterface #79,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      55: aconst_null
      56: areturn
    Exception table:
       from    to  target type
          15    24    25   Class java/io/IOException

  public java.lang.String getServerInfo();
    Code:
       0: ldc           #23                 // String MockServletContext
       2: areturn

  public java.lang.String getInitParameter(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #101                // String Parameter name must not be null
       3: invokestatic  #65                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #21                 // Field initParameters:Ljava/util/Map;
      10: aload_1
      11: invokeinterface #53,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #63                 // class java/lang/String
      19: areturn

  public java.util.Enumeration<java.lang.String> getInitParameterNames();
    Code:
       0: aload_0
       1: getfield      #21                 // Field initParameters:Ljava/util/Map;
       4: invokeinterface #102,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokestatic  #96                 // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;
      12: areturn

  public boolean setInitParameter(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #101                // String Parameter name must not be null
       3: invokestatic  #65                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #21                 // Field initParameters:Ljava/util/Map;
      10: aload_1
      11: invokeinterface #56,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      16: ifeq          21
      19: iconst_0
      20: ireturn
      21: aload_0
      22: getfield      #21                 // Field initParameters:Ljava/util/Map;
      25: aload_1
      26: aload_2
      27: invokeinterface #42,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: iconst_1
      34: ireturn

  public void addInitParameter(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #101                // String Parameter name must not be null
       3: invokestatic  #65                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #21                 // Field initParameters:Ljava/util/Map;
      10: aload_1
      11: aload_2
      12: invokeinterface #42,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: return

  public java.lang.Object getAttribute(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #103                // String Attribute name must not be null
       3: invokestatic  #65                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #22                 // Field attributes:Ljava/util/Map;
      10: aload_1
      11: invokeinterface #53,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn

  public java.util.Enumeration<java.lang.String> getAttributeNames();
    Code:
       0: new           #25                 // class java/util/LinkedHashSet
       3: dup
       4: aload_0
       5: getfield      #22                 // Field attributes:Ljava/util/Map;
       8: invokeinterface #102,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      13: invokespecial #104                // Method java/util/LinkedHashSet."<init>":(Ljava/util/Collection;)V
      16: invokestatic  #96                 // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;
      19: areturn

  public void setAttribute(java.lang.String, java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #103                // String Attribute name must not be null
       3: invokestatic  #65                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ifnull        25
      10: aload_0
      11: getfield      #22                 // Field attributes:Ljava/util/Map;
      14: aload_1
      15: aload_2
      16: invokeinterface #42,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: goto          36
      25: aload_0
      26: getfield      #22                 // Field attributes:Ljava/util/Map;
      29: aload_1
      30: invokeinterface #91,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: return

  public void removeAttribute(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #103                // String Attribute name must not be null
       3: invokestatic  #65                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #22                 // Field attributes:Ljava/util/Map;
      10: aload_1
      11: invokeinterface #91,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  public void setServletContextName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field servletContextName:Ljava/lang/String;
       5: return

  public java.lang.String getServletContextName();
    Code:
       0: aload_0
       1: getfield      #24                 // Field servletContextName:Ljava/lang/String;
       4: areturn

  public java.lang.ClassLoader getClassLoader();
    Code:
       0: invokestatic  #105                // Method org/springframework/util/ClassUtils.getDefaultClassLoader:()Ljava/lang/ClassLoader;
       3: areturn

  public void declareRoles(java.lang.String...);
    Code:
       0: aload_1
       1: ldc           #106                // String Role names array must not be null
       3: invokestatic  #65                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: astore_2
       8: aload_2
       9: arraylength
      10: istore_3
      11: iconst_0
      12: istore        4
      14: iload         4
      16: iload_3
      17: if_icmpge     51
      20: aload_2
      21: iload         4
      23: aaload
      24: astore        5
      26: aload         5
      28: ldc           #107                // String Role name must not be empty
      30: invokestatic  #108                // Method org/springframework/util/Assert.hasLength:(Ljava/lang/String;Ljava/lang/String;)V
      33: aload_0
      34: getfield      #27                 // Field declaredRoles:Ljava/util/Set;
      37: aload         5
      39: invokeinterface #75,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      44: pop
      45: iinc          4, 1
      48: goto          14
      51: return

  public java.util.Set<java.lang.String> getDeclaredRoles();
    Code:
       0: aload_0
       1: getfield      #27                 // Field declaredRoles:Ljava/util/Set;
       4: invokestatic  #109                // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       7: areturn

  public void setSessionTrackingModes(java.util.Set<javax.servlet.SessionTrackingMode>) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #110                // Field sessionTrackingModes:Ljava/util/Set;
       5: return

  public java.util.Set<javax.servlet.SessionTrackingMode> getDefaultSessionTrackingModes();
    Code:
       0: getstatic     #111                // Field DEFAULT_SESSION_TRACKING_MODES:Ljava/util/Set;
       3: areturn

  public java.util.Set<javax.servlet.SessionTrackingMode> getEffectiveSessionTrackingModes();
    Code:
       0: aload_0
       1: getfield      #110                // Field sessionTrackingModes:Ljava/util/Set;
       4: ifnull        17
       7: aload_0
       8: getfield      #110                // Field sessionTrackingModes:Ljava/util/Set;
      11: invokestatic  #109                // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      14: goto          20
      17: getstatic     #111                // Field DEFAULT_SESSION_TRACKING_MODES:Ljava/util/Set;
      20: areturn

  public javax.servlet.SessionCookieConfig getSessionCookieConfig();
    Code:
       0: aload_0
       1: getfield      #30                 // Field sessionCookieConfig:Ljavax/servlet/SessionCookieConfig;
       4: areturn

  public void setSessionTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #112                // Field sessionTimeout:I
       5: return

  public int getSessionTimeout();
    Code:
       0: aload_0
       1: getfield      #112                // Field sessionTimeout:I
       4: ireturn

  public void setRequestCharacterEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #113                // Field requestCharacterEncoding:Ljava/lang/String;
       5: return

  public java.lang.String getRequestCharacterEncoding();
    Code:
       0: aload_0
       1: getfield      #113                // Field requestCharacterEncoding:Ljava/lang/String;
       4: areturn

  public void setResponseCharacterEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #114                // Field responseCharacterEncoding:Ljava/lang/String;
       5: return

  public java.lang.String getResponseCharacterEncoding();
    Code:
       0: aload_0
       1: getfield      #114                // Field responseCharacterEncoding:Ljava/lang/String;
       4: areturn

  public javax.servlet.descriptor.JspConfigDescriptor getJspConfigDescriptor();
    Code:
       0: new           #115                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #116                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public javax.servlet.ServletRegistration$Dynamic addJspFile(java.lang.String, java.lang.String);
    Code:
       0: new           #115                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #116                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String, java.lang.String);
    Code:
       0: new           #115                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #116                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String, javax.servlet.Servlet);
    Code:
       0: new           #115                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #116                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String, java.lang.Class<? extends javax.servlet.Servlet>);
    Code:
       0: new           #115                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #116                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public <T extends javax.servlet.Servlet> T createServlet(java.lang.Class<T>) throws javax.servlet.ServletException;
    Code:
       0: new           #115                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #116                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public javax.servlet.ServletRegistration getServletRegistration(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public java.util.Map<java.lang.String, ? extends javax.servlet.ServletRegistration> getServletRegistrations();
    Code:
       0: invokestatic  #117                // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       3: areturn

  public javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String, java.lang.String);
    Code:
       0: new           #115                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #116                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String, javax.servlet.Filter);
    Code:
       0: new           #115                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #116                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String, java.lang.Class<? extends javax.servlet.Filter>);
    Code:
       0: new           #115                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #116                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public <T extends javax.servlet.Filter> T createFilter(java.lang.Class<T>) throws javax.servlet.ServletException;
    Code:
       0: new           #115                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #116                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public javax.servlet.FilterRegistration getFilterRegistration(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public java.util.Map<java.lang.String, ? extends javax.servlet.FilterRegistration> getFilterRegistrations();
    Code:
       0: invokestatic  #117                // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       3: areturn

  public void addListener(java.lang.Class<? extends java.util.EventListener>);
    Code:
       0: new           #115                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #116                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void addListener(java.lang.String);
    Code:
       0: new           #115                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #116                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public <T extends java.util.EventListener> void addListener(T);
    Code:
       0: new           #115                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #116                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public <T extends java.util.EventListener> T createListener(java.lang.Class<T>) throws javax.servlet.ServletException;
    Code:
       0: new           #115                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #116                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.String getVirtualServerName();
    Code:
       0: new           #115                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #116                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  private static java.lang.String lambda$getRequestDispatcher$0(java.lang.String);
    Code:
       0: new           #48                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #118                // String RequestDispatcher path [
       9: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #119                // String ] at ServletContext level must start with \'/\'
      18: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: areturn

  static {};
    Code:
       0: new           #25                 // class java/util/LinkedHashSet
       3: dup
       4: iconst_4
       5: invokespecial #72                 // Method java/util/LinkedHashSet."<init>":(I)V
       8: putstatic     #111                // Field DEFAULT_SESSION_TRACKING_MODES:Ljava/util/Set;
      11: getstatic     #111                // Field DEFAULT_SESSION_TRACKING_MODES:Ljava/util/Set;
      14: getstatic     #120                // Field javax/servlet/SessionTrackingMode.COOKIE:Ljavax/servlet/SessionTrackingMode;
      17: invokeinterface #75,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      22: pop
      23: getstatic     #111                // Field DEFAULT_SESSION_TRACKING_MODES:Ljava/util/Set;
      26: getstatic     #121                // Field javax/servlet/SessionTrackingMode.URL:Ljavax/servlet/SessionTrackingMode;
      29: invokeinterface #75,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      34: pop
      35: getstatic     #111                // Field DEFAULT_SESSION_TRACKING_MODES:Ljava/util/Set;
      38: getstatic     #122                // Field javax/servlet/SessionTrackingMode.SSL:Ljavax/servlet/SessionTrackingMode;
      41: invokeinterface #75,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      46: pop
      47: return
}
