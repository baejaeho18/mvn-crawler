Compiled from "SimpleNamingContextBuilder.java"
public class org.springframework.mock.jndi.SimpleNamingContextBuilder implements javax.naming.spi.InitialContextFactoryBuilder {
  private static volatile org.springframework.mock.jndi.SimpleNamingContextBuilder activated;

  private static boolean initialized;

  private static final java.lang.Object initializationLock;

  private final org.apache.commons.logging.Log logger;

  private final java.util.Hashtable<java.lang.String, java.lang.Object> boundObjects;

  public org.springframework.mock.jndi.SimpleNamingContextBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #5                  // class java/util/Hashtable
      19: dup
      20: invokespecial #6                  // Method java/util/Hashtable."<init>":()V
      23: putfield      #7                  // Field boundObjects:Ljava/util/Hashtable;
      26: return

  public static org.springframework.mock.jndi.SimpleNamingContextBuilder getCurrentContextBuilder();
    Code:
       0: getstatic     #8                  // Field activated:Lorg/springframework/mock/jndi/SimpleNamingContextBuilder;
       3: areturn

  public static org.springframework.mock.jndi.SimpleNamingContextBuilder emptyActivatedContextBuilder() throws javax.naming.NamingException;
    Code:
       0: getstatic     #8                  // Field activated:Lorg/springframework/mock/jndi/SimpleNamingContextBuilder;
       3: astore_0
       4: aload_0
       5: ifnull        15
       8: aload_0
       9: invokevirtual #9                  // Method clear:()V
      12: goto          27
      15: new           #10                 // class org/springframework/mock/jndi/SimpleNamingContextBuilder
      18: dup
      19: invokespecial #11                 // Method "<init>":()V
      22: astore_0
      23: aload_0
      24: invokevirtual #12                 // Method activate:()V
      27: aload_0
      28: areturn

  public void activate() throws java.lang.IllegalStateException, javax.naming.NamingException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: ldc           #13                 // String Activating simple JNDI environment
       6: invokeinterface #14,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      11: getstatic     #15                 // Field initializationLock:Ljava/lang/Object;
      14: dup
      15: astore_1
      16: monitorenter
      17: getstatic     #16                 // Field initialized:Z
      20: ifne          47
      23: invokestatic  #17                 // Method javax/naming/spi/NamingManager.hasInitialContextFactoryBuilder:()Z
      26: ifne          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ldc           #18                 // String Cannot activate SimpleNamingContextBuilder: there is already a JNDI provider registered. Note that JNDI is a JVM-wide service, shared at the JVM system class loader level, with no reset option. As a consequence, a JNDI provider must only be registered once per JVM.
      36: invokestatic  #19                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      39: aload_0
      40: invokestatic  #20                 // Method javax/naming/spi/NamingManager.setInitialContextFactoryBuilder:(Ljavax/naming/spi/InitialContextFactoryBuilder;)V
      43: iconst_1
      44: putstatic     #16                 // Field initialized:Z
      47: aload_1
      48: monitorexit
      49: goto          57
      52: astore_2
      53: aload_1
      54: monitorexit
      55: aload_2
      56: athrow
      57: aload_0
      58: putstatic     #8                  // Field activated:Lorg/springframework/mock/jndi/SimpleNamingContextBuilder;
      61: return
    Exception table:
       from    to  target type
          17    49    52   any
          52    55    52   any

  public void deactivate();
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: ldc           #21                 // String Deactivating simple JNDI environment
       6: invokeinterface #14,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      11: aconst_null
      12: putstatic     #8                  // Field activated:Lorg/springframework/mock/jndi/SimpleNamingContextBuilder;
      15: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #7                  // Field boundObjects:Ljava/util/Hashtable;
       4: invokevirtual #22                 // Method java/util/Hashtable.clear:()V
       7: return

  public void bind(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #23,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
       9: ifeq          54
      12: aload_0
      13: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #24                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #26                 // String Static JNDI binding: [
      25: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #28                 // String ] = [
      34: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_2
      38: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: ldc           #30                 // String ]
      43: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokeinterface #14,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      54: aload_0
      55: getfield      #7                  // Field boundObjects:Ljava/util/Hashtable;
      58: aload_1
      59: aload_2
      60: invokevirtual #32                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: pop
      64: return

  public javax.naming.spi.InitialContextFactory createInitialContextFactory(java.util.Hashtable<?, ?>);
    Code:
       0: getstatic     #8                  // Field activated:Lorg/springframework/mock/jndi/SimpleNamingContextBuilder;
       3: ifnonnull     193
       6: aload_1
       7: ifnull        193
      10: aload_1
      11: ldc           #34                 // String java.naming.factory.initial
      13: invokevirtual #35                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: astore_2
      17: aload_2
      18: ifnull        193
      21: aload_2
      22: instanceof    #36                 // class java/lang/Class
      25: ifeq          36
      28: aload_2
      29: checkcast     #36                 // class java/lang/Class
      32: astore_3
      33: goto          94
      36: aload_2
      37: instanceof    #37                 // class java/lang/String
      40: ifeq          61
      43: aload_2
      44: checkcast     #37                 // class java/lang/String
      47: aload_0
      48: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      51: invokevirtual #38                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      54: invokestatic  #39                 // Method org/springframework/util/ClassUtils.resolveClassName:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      57: astore_3
      58: goto          94
      61: new           #40                 // class java/lang/IllegalArgumentException
      64: dup
      65: new           #24                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      72: ldc           #41                 // String Invalid value type for environment key [java.naming.factory.initial]:
      74: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_2
      78: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      81: invokevirtual #42                 // Method java/lang/Class.getName:()Ljava/lang/String;
      84: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: ldc           #44                 // class javax/naming/spi/InitialContextFactory
      96: aload_3
      97: invokevirtual #45                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     100: ifne          143
     103: new           #40                 // class java/lang/IllegalArgumentException
     106: dup
     107: new           #24                 // class java/lang/StringBuilder
     110: dup
     111: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     114: ldc           #46                 // String Specified class does not implement [
     116: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: ldc           #44                 // class javax/naming/spi/InitialContextFactory
     121: invokevirtual #42                 // Method java/lang/Class.getName:()Ljava/lang/String;
     124: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: ldc           #47                 // String ]:
     129: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload_2
     133: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     136: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     142: athrow
     143: aload_3
     144: iconst_0
     145: anewarray     #36                 // class java/lang/Class
     148: invokestatic  #48                 // Method org/springframework/util/ReflectionUtils.accessibleConstructor:(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
     151: iconst_0
     152: anewarray     #49                 // class java/lang/Object
     155: invokevirtual #50                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
     158: checkcast     #44                 // class javax/naming/spi/InitialContextFactory
     161: areturn
     162: astore        4
     164: new           #52                 // class java/lang/IllegalStateException
     167: dup
     168: new           #24                 // class java/lang/StringBuilder
     171: dup
     172: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     175: ldc           #53                 // String Unable to instantiate specified InitialContextFactory:
     177: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: aload_2
     181: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     184: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     187: aload         4
     189: invokespecial #54                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     192: athrow
     193: aload_0
     194: invokedynamic #55,  0             // InvokeDynamic #0:getInitialContext:(Lorg/springframework/mock/jndi/SimpleNamingContextBuilder;)Ljavax/naming/spi/InitialContextFactory;
     199: areturn
    Exception table:
       from    to  target type
         143   161   162   Class java/lang/Throwable

  private javax.naming.Context lambda$createInitialContextFactory$0(java.util.Hashtable) throws javax.naming.NamingException;
    Code:
       0: new           #56                 // class org/springframework/mock/jndi/SimpleNamingContext
       3: dup
       4: ldc           #57                 // String
       6: aload_0
       7: getfield      #7                  // Field boundObjects:Ljava/util/Hashtable;
      10: aload_1
      11: invokespecial #58                 // Method org/springframework/mock/jndi/SimpleNamingContext."<init>":(Ljava/lang/String;Ljava/util/Hashtable;Ljava/util/Hashtable;)V
      14: areturn

  static {};
    Code:
       0: iconst_0
       1: putstatic     #16                 // Field initialized:Z
       4: new           #49                 // class java/lang/Object
       7: dup
       8: invokespecial #1                  // Method java/lang/Object."<init>":()V
      11: putstatic     #15                 // Field initializationLock:Ljava/lang/Object;
      14: return
}
