Compiled from "MockServerHttpRequest.java"
public class org.springframework.mock.http.server.reactive.MockServerHttpRequest extends org.springframework.http.server.reactive.AbstractServerHttpRequest {
  private final org.springframework.http.HttpMethod httpMethod;

  private final org.springframework.util.MultiValueMap<java.lang.String, org.springframework.http.HttpCookie> cookies;

  private final java.net.InetSocketAddress remoteAddress;

  private final org.springframework.http.server.reactive.SslInfo sslInfo;

  private final reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> body;

  private org.springframework.mock.http.server.reactive.MockServerHttpRequest(org.springframework.http.HttpMethod, java.net.URI, java.lang.String, org.springframework.http.HttpHeaders, org.springframework.util.MultiValueMap<java.lang.String, org.springframework.http.HttpCookie>, java.net.InetSocketAddress, org.springframework.http.server.reactive.SslInfo, org.reactivestreams.Publisher<? extends org.springframework.core.io.buffer.DataBuffer>);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: aload         4
       5: invokespecial #2                  // Method org/springframework/http/server/reactive/AbstractServerHttpRequest."<init>":(Ljava/net/URI;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;)V
       8: aload_0
       9: aload_1
      10: putfield      #3                  // Field httpMethod:Lorg/springframework/http/HttpMethod;
      13: aload_0
      14: aload         5
      16: putfield      #4                  // Field cookies:Lorg/springframework/util/MultiValueMap;
      19: aload_0
      20: aload         6
      22: putfield      #5                  // Field remoteAddress:Ljava/net/InetSocketAddress;
      25: aload_0
      26: aload         7
      28: putfield      #6                  // Field sslInfo:Lorg/springframework/http/server/reactive/SslInfo;
      31: aload_0
      32: aload         8
      34: invokestatic  #7                  // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      37: putfield      #8                  // Field body:Lreactor/core/publisher/Flux;
      40: return

  public org.springframework.http.HttpMethod getMethod();
    Code:
       0: aload_0
       1: getfield      #3                  // Field httpMethod:Lorg/springframework/http/HttpMethod;
       4: areturn

  public java.lang.String getMethodValue();
    Code:
       0: aload_0
       1: getfield      #3                  // Field httpMethod:Lorg/springframework/http/HttpMethod;
       4: invokevirtual #9                  // Method org/springframework/http/HttpMethod.name:()Ljava/lang/String;
       7: areturn

  public java.net.InetSocketAddress getRemoteAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field remoteAddress:Ljava/net/InetSocketAddress;
       4: areturn

  protected org.springframework.http.server.reactive.SslInfo initSslInfo();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sslInfo:Lorg/springframework/http/server/reactive/SslInfo;
       4: areturn

  public reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> getBody();
    Code:
       0: aload_0
       1: getfield      #8                  // Field body:Lreactor/core/publisher/Flux;
       4: areturn

  protected org.springframework.util.MultiValueMap<java.lang.String, org.springframework.http.HttpCookie> initCookies();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cookies:Lorg/springframework/util/MultiValueMap;
       4: areturn

  public <T> T getNativeRequest();
    Code:
       0: new           #10                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #11                 // String This is a mock. No running server, no native request.
       6: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public static org.springframework.mock.http.server.reactive.MockServerHttpRequest$BodyBuilder method(org.springframework.http.HttpMethod, java.net.URI);
    Code:
       0: new           #13                 // class org/springframework/mock/http/server/reactive/MockServerHttpRequest$DefaultBodyBuilder
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #14                 // Method org/springframework/mock/http/server/reactive/MockServerHttpRequest$DefaultBodyBuilder."<init>":(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)V
       9: areturn

  public static org.springframework.mock.http.server.reactive.MockServerHttpRequest$BodyBuilder method(org.springframework.http.HttpMethod, java.lang.String, java.lang.Object...);
    Code:
       0: aload_1
       1: invokestatic  #15                 // Method org/springframework/web/util/UriComponentsBuilder.fromUriString:(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
       4: aload_2
       5: invokevirtual #16                 // Method org/springframework/web/util/UriComponentsBuilder.buildAndExpand:([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
       8: invokevirtual #17                 // Method org/springframework/web/util/UriComponents.encode:()Lorg/springframework/web/util/UriComponents;
      11: invokevirtual #18                 // Method org/springframework/web/util/UriComponents.toUri:()Ljava/net/URI;
      14: astore_3
      15: new           #13                 // class org/springframework/mock/http/server/reactive/MockServerHttpRequest$DefaultBodyBuilder
      18: dup
      19: aload_0
      20: aload_3
      21: invokespecial #14                 // Method org/springframework/mock/http/server/reactive/MockServerHttpRequest$DefaultBodyBuilder."<init>":(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)V
      24: areturn

  public static org.springframework.mock.http.server.reactive.MockServerHttpRequest$BaseBuilder<?> get(java.lang.String, java.lang.Object...);
    Code:
       0: getstatic     #19                 // Field org/springframework/http/HttpMethod.GET:Lorg/springframework/http/HttpMethod;
       3: aload_0
       4: aload_1
       5: invokestatic  #20                 // Method method:(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
       8: areturn

  public static org.springframework.mock.http.server.reactive.MockServerHttpRequest$BaseBuilder<?> head(java.lang.String, java.lang.Object...);
    Code:
       0: getstatic     #21                 // Field org/springframework/http/HttpMethod.HEAD:Lorg/springframework/http/HttpMethod;
       3: aload_0
       4: aload_1
       5: invokestatic  #20                 // Method method:(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
       8: areturn

  public static org.springframework.mock.http.server.reactive.MockServerHttpRequest$BodyBuilder post(java.lang.String, java.lang.Object...);
    Code:
       0: getstatic     #22                 // Field org/springframework/http/HttpMethod.POST:Lorg/springframework/http/HttpMethod;
       3: aload_0
       4: aload_1
       5: invokestatic  #20                 // Method method:(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
       8: areturn

  public static org.springframework.mock.http.server.reactive.MockServerHttpRequest$BodyBuilder put(java.lang.String, java.lang.Object...);
    Code:
       0: getstatic     #23                 // Field org/springframework/http/HttpMethod.PUT:Lorg/springframework/http/HttpMethod;
       3: aload_0
       4: aload_1
       5: invokestatic  #20                 // Method method:(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
       8: areturn

  public static org.springframework.mock.http.server.reactive.MockServerHttpRequest$BodyBuilder patch(java.lang.String, java.lang.Object...);
    Code:
       0: getstatic     #24                 // Field org/springframework/http/HttpMethod.PATCH:Lorg/springframework/http/HttpMethod;
       3: aload_0
       4: aload_1
       5: invokestatic  #20                 // Method method:(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
       8: areturn

  public static org.springframework.mock.http.server.reactive.MockServerHttpRequest$BaseBuilder<?> delete(java.lang.String, java.lang.Object...);
    Code:
       0: getstatic     #25                 // Field org/springframework/http/HttpMethod.DELETE:Lorg/springframework/http/HttpMethod;
       3: aload_0
       4: aload_1
       5: invokestatic  #20                 // Method method:(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
       8: areturn

  public static org.springframework.mock.http.server.reactive.MockServerHttpRequest$BaseBuilder<?> options(java.lang.String, java.lang.Object...);
    Code:
       0: getstatic     #26                 // Field org/springframework/http/HttpMethod.OPTIONS:Lorg/springframework/http/HttpMethod;
       3: aload_0
       4: aload_1
       5: invokestatic  #20                 // Method method:(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
       8: areturn

  org.springframework.mock.http.server.reactive.MockServerHttpRequest(org.springframework.http.HttpMethod, java.net.URI, java.lang.String, org.springframework.http.HttpHeaders, org.springframework.util.MultiValueMap, java.net.InetSocketAddress, org.springframework.http.server.reactive.SslInfo, org.reactivestreams.Publisher, org.springframework.mock.http.server.reactive.MockServerHttpRequest$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokespecial #1                  // Method "<init>":(Lorg/springframework/http/HttpMethod;Ljava/net/URI;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;Lorg/springframework/util/MultiValueMap;Ljava/net/InetSocketAddress;Lorg/springframework/http/server/reactive/SslInfo;Lorg/reactivestreams/Publisher;)V
      17: return
}
