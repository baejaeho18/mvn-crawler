Compiled from "MockClientHttpResponse.java"
public class org.springframework.mock.http.client.reactive.MockClientHttpResponse implements org.springframework.http.client.reactive.ClientHttpResponse {
  private final org.springframework.http.HttpStatus status;

  private final org.springframework.http.HttpHeaders headers;

  private final org.springframework.util.MultiValueMap<java.lang.String, org.springframework.http.ResponseCookie> cookies;

  private reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> body;

  private final org.springframework.core.io.buffer.DataBufferFactory bufferFactory;

  public org.springframework.mock.http.client.reactive.MockClientHttpResponse(org.springframework.http.HttpStatus);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/http/HttpHeaders
       8: dup
       9: invokespecial #3                  // Method org/springframework/http/HttpHeaders."<init>":()V
      12: putfield      #4                  // Field headers:Lorg/springframework/http/HttpHeaders;
      15: aload_0
      16: new           #5                  // class org/springframework/util/LinkedMultiValueMap
      19: dup
      20: invokespecial #6                  // Method org/springframework/util/LinkedMultiValueMap."<init>":()V
      23: putfield      #7                  // Field cookies:Lorg/springframework/util/MultiValueMap;
      26: aload_0
      27: invokestatic  #8                  // Method reactor/core/publisher/Flux.empty:()Lreactor/core/publisher/Flux;
      30: putfield      #9                  // Field body:Lreactor/core/publisher/Flux;
      33: aload_0
      34: new           #10                 // class org/springframework/core/io/buffer/DefaultDataBufferFactory
      37: dup
      38: invokespecial #11                 // Method org/springframework/core/io/buffer/DefaultDataBufferFactory."<init>":()V
      41: putfield      #12                 // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      44: aload_1
      45: ldc           #13                 // String HttpStatus is required
      47: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      50: aload_0
      51: aload_1
      52: putfield      #15                 // Field status:Lorg/springframework/http/HttpStatus;
      55: return

  public org.springframework.http.HttpStatus getStatusCode();
    Code:
       0: aload_0
       1: getfield      #15                 // Field status:Lorg/springframework/http/HttpStatus;
       4: areturn

  public int getRawStatusCode();
    Code:
       0: aload_0
       1: getfield      #15                 // Field status:Lorg/springframework/http/HttpStatus;
       4: invokevirtual #16                 // Method org/springframework/http/HttpStatus.value:()I
       7: ireturn

  public org.springframework.http.HttpHeaders getHeaders();
    Code:
       0: ldc           #17                 // String Set-Cookie
       2: astore_1
       3: aload_0
       4: invokevirtual #18                 // Method getCookies:()Lorg/springframework/util/MultiValueMap;
       7: invokeinterface #19,  1           // InterfaceMethod org/springframework/util/MultiValueMap.isEmpty:()Z
      12: ifne          62
      15: aload_0
      16: getfield      #4                  // Field headers:Lorg/springframework/http/HttpHeaders;
      19: aload_1
      20: invokevirtual #20                 // Method org/springframework/http/HttpHeaders.get:(Ljava/lang/Object;)Ljava/util/List;
      23: ifnonnull     62
      26: aload_0
      27: invokevirtual #18                 // Method getCookies:()Lorg/springframework/util/MultiValueMap;
      30: invokeinterface #21,  1           // InterfaceMethod org/springframework/util/MultiValueMap.values:()Ljava/util/Collection;
      35: invokeinterface #22,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      40: invokedynamic #23,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      45: invokeinterface #24,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      50: aload_0
      51: aload_1
      52: invokedynamic #25,  0             // InvokeDynamic #1:accept:(Lorg/springframework/mock/http/client/reactive/MockClientHttpResponse;Ljava/lang/String;)Ljava/util/function/Consumer;
      57: invokeinterface #26,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      62: aload_0
      63: getfield      #4                  // Field headers:Lorg/springframework/http/HttpHeaders;
      66: areturn

  public org.springframework.util.MultiValueMap<java.lang.String, org.springframework.http.ResponseCookie> getCookies();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cookies:Lorg/springframework/util/MultiValueMap;
       4: areturn

  public void setBody(org.reactivestreams.Publisher<org.springframework.core.io.buffer.DataBuffer>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #27                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
       5: putfield      #9                  // Field body:Lreactor/core/publisher/Flux;
       8: return

  public void setBody(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #28                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       5: invokevirtual #29                 // Method setBody:(Ljava/lang/String;Ljava/nio/charset/Charset;)V
       8: return

  public void setBody(java.lang.String, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #30                 // Method toDataBuffer:(Ljava/lang/String;Ljava/nio/charset/Charset;)Lorg/springframework/core/io/buffer/DataBuffer;
       6: astore_3
       7: aload_0
       8: aload_3
       9: invokestatic  #31                 // Method reactor/core/publisher/Flux.just:(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
      12: putfield      #9                  // Field body:Lreactor/core/publisher/Flux;
      15: return

  private org.springframework.core.io.buffer.DataBuffer toDataBuffer(java.lang.String, java.nio.charset.Charset);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #32                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       5: astore_3
       6: aload_3
       7: invokestatic  #33                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      10: astore        4
      12: aload_0
      13: getfield      #12                 // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      16: aload         4
      18: invokeinterface #34,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.wrap:(Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
      23: areturn

  public reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> getBody();
    Code:
       0: aload_0
       1: getfield      #9                  // Field body:Lreactor/core/publisher/Flux;
       4: areturn

  public reactor.core.publisher.Mono<java.lang.String> getBodyAsString();
    Code:
       0: aload_0
       1: invokespecial #35                 // Method getCharset:()Ljava/nio/charset/Charset;
       4: astore_1
       5: aload_0
       6: invokevirtual #36                 // Method getBody:()Lreactor/core/publisher/Flux;
       9: invokestatic  #27                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      12: aload_0
      13: getfield      #12                 // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      16: invokeinterface #37,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.allocateBuffer:()Lorg/springframework/core/io/buffer/DataBuffer;
      21: invokedynamic #38,  0             // InvokeDynamic #2:apply:()Ljava/util/function/BiFunction;
      26: invokevirtual #39                 // Method reactor/core/publisher/Flux.reduce:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Mono;
      29: aload_1
      30: invokedynamic #40,  0             // InvokeDynamic #3:apply:(Ljava/nio/charset/Charset;)Ljava/util/function/Function;
      35: invokevirtual #41                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      38: areturn

  private static java.lang.String dumpString(org.springframework.core.io.buffer.DataBuffer, java.nio.charset.Charset);
    Code:
       0: aload_1
       1: ldc           #42                 // String \'charset\' must not be null
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokeinterface #43,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.readableByteCount:()I
      12: newarray       byte
      14: astore_2
      15: aload_0
      16: aload_2
      17: invokeinterface #44,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.read:([B)Lorg/springframework/core/io/buffer/DataBuffer;
      22: pop
      23: new           #45                 // class java/lang/String
      26: dup
      27: aload_2
      28: aload_1
      29: invokespecial #46                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      32: areturn

  private java.nio.charset.Charset getCharset();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokevirtual #47                 // Method getHeaders:()Lorg/springframework/http/HttpHeaders;
       6: invokevirtual #48                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
       9: astore_2
      10: aload_2
      11: ifnull        19
      14: aload_2
      15: invokevirtual #49                 // Method org/springframework/http/MediaType.getCharset:()Ljava/nio/charset/Charset;
      18: astore_1
      19: aload_1
      20: ifnull        27
      23: aload_1
      24: goto          30
      27: getstatic     #28                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      30: areturn

  private static java.lang.String lambda$getBodyAsString$2(java.nio.charset.Charset, org.springframework.core.io.buffer.DataBuffer);
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #50                 // Method dumpString:(Lorg/springframework/core/io/buffer/DataBuffer;Ljava/nio/charset/Charset;)Ljava/lang/String;
       5: areturn

  private static org.springframework.core.io.buffer.DataBuffer lambda$getBodyAsString$1(org.springframework.core.io.buffer.DataBuffer, org.springframework.core.io.buffer.DataBuffer);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #51                 // class org/springframework/core/io/buffer/DataBuffer
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: invokeinterface #52,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:([Lorg/springframework/core/io/buffer/DataBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
      14: pop
      15: aload_1
      16: invokestatic  #53                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
      19: pop
      20: aload_0
      21: areturn

  private void lambda$getHeaders$0(java.lang.String, org.springframework.http.ResponseCookie);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getHeaders:()Lorg/springframework/http/HttpHeaders;
       4: aload_1
       5: aload_2
       6: invokevirtual #54                 // Method org/springframework/http/ResponseCookie.toString:()Ljava/lang/String;
       9: invokevirtual #55                 // Method org/springframework/http/HttpHeaders.add:(Ljava/lang/String;Ljava/lang/String;)V
      12: return
}
