Compiled from "AbstractDataSourceInitializer.java"
public abstract class org.springframework.boot.jdbc.AbstractDataSourceInitializer {
  private static final java.lang.String PLATFORM_PLACEHOLDER;

  private final javax.sql.DataSource dataSource;

  private final org.springframework.core.io.ResourceLoader resourceLoader;

  protected org.springframework.boot.jdbc.AbstractDataSourceInitializer(javax.sql.DataSource, org.springframework.core.io.ResourceLoader);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String DataSource must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #4                  // String ResourceLoader must not be null
      13: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: aload_1
      18: putfield      #5                  // Field dataSource:Ljavax/sql/DataSource;
      21: aload_0
      22: aload_2
      23: putfield      #6                  // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
      26: return

  protected void initialize();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method isEnabled:()Z
       4: ifne          8
       7: return
       8: new           #8                  // class org/springframework/jdbc/datasource/init/ResourceDatabasePopulator
      11: dup
      12: invokespecial #9                  // Method org/springframework/jdbc/datasource/init/ResourceDatabasePopulator."<init>":()V
      15: astore_1
      16: aload_0
      17: invokevirtual #10                 // Method getSchemaLocation:()Ljava/lang/String;
      20: astore_2
      21: aload_2
      22: ldc           #12                 // String @@platform@@
      24: invokevirtual #13                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      27: ifeq          43
      30: aload_0
      31: invokevirtual #14                 // Method getDatabaseName:()Ljava/lang/String;
      34: astore_3
      35: aload_2
      36: ldc           #12                 // String @@platform@@
      38: aload_3
      39: invokevirtual #15                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      42: astore_2
      43: aload_1
      44: aload_0
      45: getfield      #6                  // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
      48: aload_2
      49: invokeinterface #16,  2           // InterfaceMethod org/springframework/core/io/ResourceLoader.getResource:(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
      54: invokevirtual #17                 // Method org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.addScript:(Lorg/springframework/core/io/Resource;)V
      57: aload_1
      58: iconst_1
      59: invokevirtual #18                 // Method org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.setContinueOnError:(Z)V
      62: aload_1
      63: aload_0
      64: getfield      #5                  // Field dataSource:Ljavax/sql/DataSource;
      67: invokestatic  #19                 // Method org/springframework/jdbc/datasource/init/DatabasePopulatorUtils.execute:(Lorg/springframework/jdbc/datasource/init/DatabasePopulator;Ljavax/sql/DataSource;)V
      70: return

  private boolean isEnabled();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getMode:()Lorg/springframework/boot/jdbc/DataSourceInitializationMode;
       4: getstatic     #21                 // Field org/springframework/boot/jdbc/DataSourceInitializationMode.NEVER:Lorg/springframework/boot/jdbc/DataSourceInitializationMode;
       7: if_acmpne     12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: invokevirtual #20                 // Method getMode:()Lorg/springframework/boot/jdbc/DataSourceInitializationMode;
      16: getstatic     #22                 // Field org/springframework/boot/jdbc/DataSourceInitializationMode.EMBEDDED:Lorg/springframework/boot/jdbc/DataSourceInitializationMode;
      19: if_acmpne     34
      22: aload_0
      23: getfield      #5                  // Field dataSource:Ljavax/sql/DataSource;
      26: invokestatic  #23                 // Method org/springframework/boot/jdbc/EmbeddedDatabaseConnection.isEmbedded:(Ljavax/sql/DataSource;)Z
      29: ifne          34
      32: iconst_0
      33: ireturn
      34: iconst_1
      35: ireturn

  protected abstract org.springframework.boot.jdbc.DataSourceInitializationMode getMode();

  protected abstract java.lang.String getSchemaLocation();

  protected java.lang.String getDatabaseName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field dataSource:Ljavax/sql/DataSource;
       4: ldc           #24                 // String getDatabaseProductName
       6: invokestatic  #25                 // Method org/springframework/jdbc/support/JdbcUtils.extractDatabaseMetaData:(Ljavax/sql/DataSource;Ljava/lang/String;)Ljava/lang/Object;
       9: invokevirtual #26                 // Method java/lang/Object.toString:()Ljava/lang/String;
      12: invokestatic  #27                 // Method org/springframework/jdbc/support/JdbcUtils.commonDatabaseName:(Ljava/lang/String;)Ljava/lang/String;
      15: astore_1
      16: aload_1
      17: invokestatic  #28                 // Method org/springframework/boot/jdbc/DatabaseDriver.fromProductName:(Ljava/lang/String;)Lorg/springframework/boot/jdbc/DatabaseDriver;
      20: astore_2
      21: aload_2
      22: getstatic     #29                 // Field org/springframework/boot/jdbc/DatabaseDriver.UNKNOWN:Lorg/springframework/boot/jdbc/DatabaseDriver;
      25: if_acmpne     38
      28: new           #30                 // class java/lang/IllegalStateException
      31: dup
      32: ldc           #31                 // String Unable to detect database type
      34: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_2
      39: invokevirtual #33                 // Method org/springframework/boot/jdbc/DatabaseDriver.getId:()Ljava/lang/String;
      42: areturn
      43: astore_1
      44: new           #30                 // class java/lang/IllegalStateException
      47: dup
      48: ldc           #31                 // String Unable to detect database type
      50: aload_1
      51: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      54: athrow
    Exception table:
       from    to  target type
           0    42    43   Class org/springframework/jdbc/support/MetaDataAccessException
}
