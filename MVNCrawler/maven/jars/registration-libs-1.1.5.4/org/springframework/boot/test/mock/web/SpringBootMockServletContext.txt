Compiled from "SpringBootMockServletContext.java"
public class org.springframework.boot.test.mock.web.SpringBootMockServletContext extends org.springframework.mock.web.MockServletContext {
  private static final java.lang.String[] SPRING_BOOT_RESOURCE_LOCATIONS;

  private final org.springframework.core.io.ResourceLoader resourceLoader;

  private java.io.File emptyRootFolder;

  public org.springframework.boot.test.mock.web.SpringBootMockServletContext(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class org/springframework/core/io/FileSystemResourceLoader
       5: dup
       6: invokespecial #2                  // Method org/springframework/core/io/FileSystemResourceLoader."<init>":()V
       9: invokespecial #3                  // Method "<init>":(Ljava/lang/String;Lorg/springframework/core/io/ResourceLoader;)V
      12: return

  public org.springframework.boot.test.mock.web.SpringBootMockServletContext(java.lang.String, org.springframework.core.io.ResourceLoader);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #4                  // Method org/springframework/mock/web/MockServletContext."<init>":(Ljava/lang/String;Lorg/springframework/core/io/ResourceLoader;)V
       6: aload_0
       7: aload_2
       8: putfield      #5                  // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
      11: return

  protected java.lang.String getResourceLocation(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #6                  // String /
       3: invokevirtual #7                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifne          29
       9: new           #8                  // class java/lang/StringBuilder
      12: dup
      13: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #6                  // String /
      18: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_1
      22: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: astore_1
      29: aload_0
      30: aload_1
      31: invokevirtual #12                 // Method getResourceBasePathLocation:(Ljava/lang/String;)Ljava/lang/String;
      34: astore_2
      35: aload_0
      36: aload_2
      37: invokespecial #13                 // Method exists:(Ljava/lang/String;)Z
      40: ifeq          45
      43: aload_2
      44: areturn
      45: getstatic     #14                 // Field SPRING_BOOT_RESOURCE_LOCATIONS:[Ljava/lang/String;
      48: astore_3
      49: aload_3
      50: arraylength
      51: istore        4
      53: iconst_0
      54: istore        5
      56: iload         5
      58: iload         4
      60: if_icmpge     105
      63: aload_3
      64: iload         5
      66: aaload
      67: astore        6
      69: new           #8                  // class java/lang/StringBuilder
      72: dup
      73: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      76: aload         6
      78: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_1
      82: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: astore_2
      89: aload_0
      90: aload_2
      91: invokespecial #13                 // Method exists:(Ljava/lang/String;)Z
      94: ifeq          99
      97: aload_2
      98: areturn
      99: iinc          5, 1
     102: goto          56
     105: aload_0
     106: aload_1
     107: invokespecial #15                 // Method org/springframework/mock/web/MockServletContext.getResourceLocation:(Ljava/lang/String;)Ljava/lang/String;
     110: areturn

  protected final java.lang.String getResourceBasePathLocation(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method org/springframework/mock/web/MockServletContext.getResourceLocation:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  private boolean exists(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod org/springframework/core/io/ResourceLoader.getResource:(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
      10: astore_2
      11: aload_2
      12: invokeinterface #17,  1           // InterfaceMethod org/springframework/core/io/Resource.exists:()Z
      17: ireturn
      18: astore_2
      19: iconst_0
      20: ireturn
    Exception table:
       from    to  target type
           0    17    18   Class java/lang/Exception

  public java.net.URL getResource(java.lang.String) throws java.net.MalformedURLException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method org/springframework/mock/web/MockServletContext.getResource:(Ljava/lang/String;)Ljava/net/URL;
       5: astore_2
       6: aload_2
       7: ifnonnull     86
      10: ldc           #6                  // String /
      12: aload_1
      13: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: ifeq          86
      19: aload_0
      20: getfield      #21                 // Field emptyRootFolder:Ljava/io/File;
      23: ifnonnull     74
      26: aload_0
      27: dup
      28: astore_3
      29: monitorenter
      30: ldc           #22                 // String spr
      32: ldc           #23                 // String servlet
      34: invokestatic  #24                 // Method java/io/File.createTempFile:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
      37: astore        4
      39: aload         4
      41: invokevirtual #25                 // Method java/io/File.delete:()Z
      44: pop
      45: aload         4
      47: invokevirtual #26                 // Method java/io/File.mkdirs:()Z
      50: pop
      51: aload         4
      53: invokevirtual #27                 // Method java/io/File.deleteOnExit:()V
      56: aload_0
      57: aload         4
      59: putfield      #21                 // Field emptyRootFolder:Ljava/io/File;
      62: aload_3
      63: monitorexit
      64: goto          74
      67: astore        5
      69: aload_3
      70: monitorexit
      71: aload         5
      73: athrow
      74: aload_0
      75: getfield      #21                 // Field emptyRootFolder:Ljava/io/File;
      78: invokevirtual #28                 // Method java/io/File.toURI:()Ljava/net/URI;
      81: invokevirtual #29                 // Method java/net/URI.toURL:()Ljava/net/URL;
      84: areturn
      85: astore_3
      86: aload_2
      87: areturn
    Exception table:
       from    to  target type
          30    64    67   any
          67    71    67   any
          19    84    85   Class java/io/IOException

  static {};
    Code:
       0: iconst_4
       1: anewarray     #31                 // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #32                 // String classpath:META-INF/resources
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #33                 // String classpath:resources
      13: aastore
      14: dup
      15: iconst_2
      16: ldc           #34                 // String classpath:static
      18: aastore
      19: dup
      20: iconst_3
      21: ldc           #35                 // String classpath:public
      23: aastore
      24: putstatic     #14                 // Field SPRING_BOOT_RESOURCE_LOCATIONS:[Ljava/lang/String;
      27: return
}
