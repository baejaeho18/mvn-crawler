Compiled from "JsonbTester.java"
public class org.springframework.boot.test.json.JsonbTester<T> extends org.springframework.boot.test.json.AbstractJsonMarshalTester<T> {
  private final javax.json.bind.Jsonb jsonb;

  protected org.springframework.boot.test.json.JsonbTester(javax.json.bind.Jsonb);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/boot/test/json/AbstractJsonMarshalTester."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Jsonb must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field jsonb:Ljavax/json/bind/Jsonb;
      15: return

  public org.springframework.boot.test.json.JsonbTester(java.lang.Class<?>, org.springframework.core.ResolvableType, javax.json.bind.Jsonb);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #5                  // Method org/springframework/boot/test/json/AbstractJsonMarshalTester."<init>":(Ljava/lang/Class;Lorg/springframework/core/ResolvableType;)V
       6: aload_3
       7: ldc           #2                  // String Jsonb must not be null
       9: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_3
      14: putfield      #4                  // Field jsonb:Ljavax/json/bind/Jsonb;
      17: return

  protected java.lang.String writeObject(T, org.springframework.core.ResolvableType) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field jsonb:Ljavax/json/bind/Jsonb;
       4: aload_1
       5: aload_2
       6: invokevirtual #6                  // Method org/springframework/core/ResolvableType.getType:()Ljava/lang/reflect/Type;
       9: invokeinterface #7,  3            // InterfaceMethod javax/json/bind/Jsonb.toJson:(Ljava/lang/Object;Ljava/lang/reflect/Type;)Ljava/lang/String;
      14: areturn

  protected T readObject(java.io.Reader, org.springframework.core.ResolvableType) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field jsonb:Ljavax/json/bind/Jsonb;
       4: aload_1
       5: aload_2
       6: invokevirtual #6                  // Method org/springframework/core/ResolvableType.getType:()Ljava/lang/reflect/Type;
       9: invokeinterface #8,  3            // InterfaceMethod javax/json/bind/Jsonb.fromJson:(Ljava/io/Reader;Ljava/lang/reflect/Type;)Ljava/lang/Object;
      14: areturn

  public static void initFields(java.lang.Object, javax.json.bind.Jsonb);
    Code:
       0: new           #9                  // class org/springframework/boot/test/json/JsonbTester$JsonbFieldInitializer
       3: dup
       4: invokespecial #10                 // Method org/springframework/boot/test/json/JsonbTester$JsonbFieldInitializer."<init>":()V
       7: aload_0
       8: aload_1
       9: invokevirtual #11                 // Method org/springframework/boot/test/json/JsonbTester$JsonbFieldInitializer.initFields:(Ljava/lang/Object;Ljava/lang/Object;)V
      12: return

  public static void initFields(java.lang.Object, org.springframework.beans.factory.ObjectFactory<javax.json.bind.Jsonb>);
    Code:
       0: new           #9                  // class org/springframework/boot/test/json/JsonbTester$JsonbFieldInitializer
       3: dup
       4: invokespecial #10                 // Method org/springframework/boot/test/json/JsonbTester$JsonbFieldInitializer."<init>":()V
       7: aload_0
       8: aload_1
       9: invokevirtual #12                 // Method org/springframework/boot/test/json/JsonbTester$JsonbFieldInitializer.initFields:(Ljava/lang/Object;Lorg/springframework/beans/factory/ObjectFactory;)V
      12: return
}
