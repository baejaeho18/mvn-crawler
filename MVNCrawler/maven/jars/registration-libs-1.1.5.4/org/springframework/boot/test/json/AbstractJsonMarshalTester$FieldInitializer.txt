Compiled from "AbstractJsonMarshalTester.java"
public abstract class org.springframework.boot.test.json.AbstractJsonMarshalTester$FieldInitializer<M> {
  private final java.lang.Class<?> testerClass;

  protected org.springframework.boot.test.json.AbstractJsonMarshalTester$FieldInitializer(java.lang.Class<? extends org.springframework.boot.test.json.AbstractJsonMarshalTester>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String TesterClass must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field testerClass:Ljava/lang/Class;
      15: return

  public void initFields(java.lang.Object, M);
    Code:
       0: aload_1
       1: ldc           #5                  // String TestInstance must not be null
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #6                  // String Marshaller must not be null
       9: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokedynamic #7,  0              // InvokeDynamic #0:getObject:(Ljava/lang/Object;)Lorg/springframework/beans/factory/ObjectFactory;
      20: invokevirtual #8                  // Method initFields:(Ljava/lang/Object;Lorg/springframework/beans/factory/ObjectFactory;)V
      23: return

  public void initFields(java.lang.Object, org.springframework.beans.factory.ObjectFactory<M>);
    Code:
       0: aload_1
       1: ldc           #5                  // String TestInstance must not be null
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #6                  // String Marshaller must not be null
       9: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_1
      13: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokedynamic #10,  0             // InvokeDynamic #1:doWith:(Lorg/springframework/boot/test/json/AbstractJsonMarshalTester$FieldInitializer;Ljava/lang/Object;Lorg/springframework/beans/factory/ObjectFactory;)Lorg/springframework/util/ReflectionUtils$FieldCallback;
      24: invokestatic  #11                 // Method org/springframework/util/ReflectionUtils.doWithFields:(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$FieldCallback;)V
      27: return

  protected void doWithField(java.lang.reflect.Field, java.lang.Object, org.springframework.beans.factory.ObjectFactory<M>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field testerClass:Ljava/lang/Class;
       4: aload_1
       5: invokevirtual #12                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
       8: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      11: ifeq          37
      14: aload_1
      15: invokestatic  #14                 // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Field;)V
      18: aload_1
      19: aload_2
      20: invokestatic  #15                 // Method org/springframework/util/ReflectionUtils.getField:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
      23: astore        4
      25: aload         4
      27: ifnonnull     37
      30: aload_0
      31: aload_1
      32: aload_2
      33: aload_3
      34: invokespecial #16                 // Method setupField:(Ljava/lang/reflect/Field;Ljava/lang/Object;Lorg/springframework/beans/factory/ObjectFactory;)V
      37: return

  private void setupField(java.lang.reflect.Field, java.lang.Object, org.springframework.beans.factory.ObjectFactory<M>);
    Code:
       0: aload_1
       1: invokestatic  #17                 // Method org/springframework/core/ResolvableType.forField:(Ljava/lang/reflect/Field;)Lorg/springframework/core/ResolvableType;
       4: iconst_0
       5: newarray       int
       7: invokevirtual #18                 // Method org/springframework/core/ResolvableType.getGeneric:([I)Lorg/springframework/core/ResolvableType;
      10: astore        4
      12: aload_1
      13: aload_2
      14: aload_0
      15: aload_2
      16: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: aload         4
      21: aload_3
      22: invokeinterface #19,  1           // InterfaceMethod org/springframework/beans/factory/ObjectFactory.getObject:()Ljava/lang/Object;
      27: invokevirtual #20                 // Method createTester:(Ljava/lang/Class;Lorg/springframework/core/ResolvableType;Ljava/lang/Object;)Lorg/springframework/boot/test/json/AbstractJsonMarshalTester;
      30: invokestatic  #21                 // Method org/springframework/util/ReflectionUtils.setField:(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/Object;)V
      33: return

  protected abstract org.springframework.boot.test.json.AbstractJsonMarshalTester<java.lang.Object> createTester(java.lang.Class<?>, org.springframework.core.ResolvableType, M);

  private void lambda$initFields$1(java.lang.Object, org.springframework.beans.factory.ObjectFactory, java.lang.reflect.Field) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: aload_3
       2: aload_1
       3: aload_2
       4: invokevirtual #22                 // Method doWithField:(Ljava/lang/reflect/Field;Ljava/lang/Object;Lorg/springframework/beans/factory/ObjectFactory;)V
       7: return

  private static java.lang.Object lambda$initFields$0(java.lang.Object) throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: areturn
}
