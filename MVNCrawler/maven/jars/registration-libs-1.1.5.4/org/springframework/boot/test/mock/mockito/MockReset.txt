Compiled from "MockReset.java"
public final class org.springframework.boot.test.mock.mockito.MockReset extends java.lang.Enum<org.springframework.boot.test.mock.mockito.MockReset> {
  public static final org.springframework.boot.test.mock.mockito.MockReset BEFORE;

  public static final org.springframework.boot.test.mock.mockito.MockReset AFTER;

  public static final org.springframework.boot.test.mock.mockito.MockReset NONE;

  private static final org.springframework.boot.test.mock.mockito.MockReset[] $VALUES;

  public static org.springframework.boot.test.mock.mockito.MockReset[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/springframework/boot/test/mock/mockito/MockReset;
       3: invokevirtual #2                  // Method "[Lorg/springframework/boot/test/mock/mockito/MockReset;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/springframework/boot/test/mock/mockito/MockReset;"
       9: areturn

  public static org.springframework.boot.test.mock.mockito.MockReset valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class org/springframework/boot/test/mock/mockito/MockReset
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class org/springframework/boot/test/mock/mockito/MockReset
       9: areturn

  private org.springframework.boot.test.mock.mockito.MockReset();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public static org.mockito.MockSettings before();
    Code:
       0: getstatic     #7                  // Field BEFORE:Lorg/springframework/boot/test/mock/mockito/MockReset;
       3: invokestatic  #8                  // Method withSettings:(Lorg/springframework/boot/test/mock/mockito/MockReset;)Lorg/mockito/MockSettings;
       6: areturn

  public static org.mockito.MockSettings after();
    Code:
       0: getstatic     #9                  // Field AFTER:Lorg/springframework/boot/test/mock/mockito/MockReset;
       3: invokestatic  #8                  // Method withSettings:(Lorg/springframework/boot/test/mock/mockito/MockReset;)Lorg/mockito/MockSettings;
       6: areturn

  public static org.mockito.MockSettings withSettings(org.springframework.boot.test.mock.mockito.MockReset);
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method org/mockito/Mockito.withSettings:()Lorg/mockito/MockSettings;
       4: invokestatic  #11                 // Method apply:(Lorg/springframework/boot/test/mock/mockito/MockReset;Lorg/mockito/MockSettings;)Lorg/mockito/MockSettings;
       7: areturn

  public static org.mockito.MockSettings apply(org.springframework.boot.test.mock.mockito.MockReset, org.mockito.MockSettings);
    Code:
       0: aload_1
       1: ldc           #12                 // String Settings must not be null
       3: invokestatic  #13                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: ifnull        39
      10: aload_0
      11: getstatic     #14                 // Field NONE:Lorg/springframework/boot/test/mock/mockito/MockReset;
      14: if_acmpeq     39
      17: aload_1
      18: iconst_1
      19: anewarray     #15                 // class org/mockito/listeners/InvocationListener
      22: dup
      23: iconst_0
      24: new           #16                 // class org/springframework/boot/test/mock/mockito/MockReset$ResetInvocationListener
      27: dup
      28: aload_0
      29: invokespecial #17                 // Method org/springframework/boot/test/mock/mockito/MockReset$ResetInvocationListener."<init>":(Lorg/springframework/boot/test/mock/mockito/MockReset;)V
      32: aastore
      33: invokeinterface #18,  2           // InterfaceMethod org/mockito/MockSettings.invocationListeners:([Lorg/mockito/listeners/InvocationListener;)Lorg/mockito/MockSettings;
      38: pop
      39: aload_1
      40: areturn

  static org.springframework.boot.test.mock.mockito.MockReset get(java.lang.Object);
    Code:
       0: getstatic     #14                 // Field NONE:Lorg/springframework/boot/test/mock/mockito/MockReset;
       3: astore_1
       4: aload_0
       5: invokestatic  #19                 // Method org/mockito/Mockito.mockingDetails:(Ljava/lang/Object;)Lorg/mockito/MockingDetails;
       8: astore_2
       9: aload_2
      10: invokeinterface #20,  1           // InterfaceMethod org/mockito/MockingDetails.isMock:()Z
      15: ifeq          81
      18: aload_2
      19: invokeinterface #21,  1           // InterfaceMethod org/mockito/MockingDetails.getMockCreationSettings:()Lorg/mockito/mock/MockCreationSettings;
      24: astore_3
      25: aload_3
      26: invokeinterface #22,  1           // InterfaceMethod org/mockito/mock/MockCreationSettings.getInvocationListeners:()Ljava/util/List;
      31: astore        4
      33: aload         4
      35: invokeinterface #23,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      40: astore        5
      42: aload         5
      44: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          81
      52: aload         5
      54: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: astore        6
      61: aload         6
      63: instanceof    #16                 // class org/springframework/boot/test/mock/mockito/MockReset$ResetInvocationListener
      66: ifeq          78
      69: aload         6
      71: checkcast     #16                 // class org/springframework/boot/test/mock/mockito/MockReset$ResetInvocationListener
      74: invokevirtual #26                 // Method org/springframework/boot/test/mock/mockito/MockReset$ResetInvocationListener.getReset:()Lorg/springframework/boot/test/mock/mockito/MockReset;
      77: astore_1
      78: goto          42
      81: aload_1
      82: areturn

  static {};
    Code:
       0: new           #4                  // class org/springframework/boot/test/mock/mockito/MockReset
       3: dup
       4: ldc           #27                 // String BEFORE
       6: iconst_0
       7: invokespecial #28                 // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #7                  // Field BEFORE:Lorg/springframework/boot/test/mock/mockito/MockReset;
      13: new           #4                  // class org/springframework/boot/test/mock/mockito/MockReset
      16: dup
      17: ldc           #29                 // String AFTER
      19: iconst_1
      20: invokespecial #28                 // Method "<init>":(Ljava/lang/String;I)V
      23: putstatic     #9                  // Field AFTER:Lorg/springframework/boot/test/mock/mockito/MockReset;
      26: new           #4                  // class org/springframework/boot/test/mock/mockito/MockReset
      29: dup
      30: ldc           #30                 // String NONE
      32: iconst_2
      33: invokespecial #28                 // Method "<init>":(Ljava/lang/String;I)V
      36: putstatic     #14                 // Field NONE:Lorg/springframework/boot/test/mock/mockito/MockReset;
      39: iconst_3
      40: anewarray     #4                  // class org/springframework/boot/test/mock/mockito/MockReset
      43: dup
      44: iconst_0
      45: getstatic     #7                  // Field BEFORE:Lorg/springframework/boot/test/mock/mockito/MockReset;
      48: aastore
      49: dup
      50: iconst_1
      51: getstatic     #9                  // Field AFTER:Lorg/springframework/boot/test/mock/mockito/MockReset;
      54: aastore
      55: dup
      56: iconst_2
      57: getstatic     #14                 // Field NONE:Lorg/springframework/boot/test/mock/mockito/MockReset;
      60: aastore
      61: putstatic     #1                  // Field $VALUES:[Lorg/springframework/boot/test/mock/mockito/MockReset;
      64: return
}
