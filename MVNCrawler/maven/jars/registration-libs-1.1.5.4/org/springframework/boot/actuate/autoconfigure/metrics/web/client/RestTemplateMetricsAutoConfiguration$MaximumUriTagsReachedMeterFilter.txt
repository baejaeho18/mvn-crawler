Compiled from "RestTemplateMetricsAutoConfiguration.java"
class org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsAutoConfiguration$MaximumUriTagsReachedMeterFilter implements io.micrometer.core.instrument.config.MeterFilter {
  private final org.slf4j.Logger logger;

  private final java.lang.String metricName;

  private final java.util.concurrent.atomic.AtomicBoolean alreadyWarned;

  org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsAutoConfiguration$MaximumUriTagsReachedMeterFilter(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // class org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsAutoConfiguration
       7: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      10: putfield      #4                  // Field logger:Lorg/slf4j/Logger;
      13: aload_0
      14: new           #5                  // class java/util/concurrent/atomic/AtomicBoolean
      17: dup
      18: iconst_0
      19: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      22: putfield      #7                  // Field alreadyWarned:Ljava/util/concurrent/atomic/AtomicBoolean;
      25: aload_0
      26: aload_1
      27: putfield      #8                  // Field metricName:Ljava/lang/String;
      30: return

  public io.micrometer.core.instrument.config.MeterFilterReply accept(io.micrometer.core.instrument.Meter$Id);
    Code:
       0: aload_0
       1: getfield      #7                  // Field alreadyWarned:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          16
      12: aload_0
      13: invokespecial #10                 // Method logWarning:()V
      16: getstatic     #11                 // Field io/micrometer/core/instrument/config/MeterFilterReply.DENY:Lio/micrometer/core/instrument/config/MeterFilterReply;
      19: areturn

  private void logWarning();
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/slf4j/Logger;
       4: invokeinterface #12,  1           // InterfaceMethod org/slf4j/Logger.isWarnEnabled:()Z
       9: ifeq          48
      12: aload_0
      13: getfield      #4                  // Field logger:Lorg/slf4j/Logger;
      16: new           #13                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #15                 // String Reached the maximum number of URI tags for \'
      25: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #8                  // Field metricName:Ljava/lang/String;
      32: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #17                 // String \'. Are you using uriVariables on RestTemplate calls?
      37: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokeinterface #19,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      48: return
}
