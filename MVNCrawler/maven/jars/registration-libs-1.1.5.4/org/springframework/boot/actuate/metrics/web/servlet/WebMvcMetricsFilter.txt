Compiled from "WebMvcMetricsFilter.java"
public class org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter extends org.springframework.web.filter.OncePerRequestFilter {
  private static final org.slf4j.Logger logger;

  private final org.springframework.context.ApplicationContext context;

  private final io.micrometer.core.instrument.MeterRegistry registry;

  private final org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider tagsProvider;

  private final java.lang.String metricName;

  private final boolean autoTimeRequests;

  private volatile org.springframework.web.servlet.handler.HandlerMappingIntrospector introspector;

  public org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter(org.springframework.context.ApplicationContext, io.micrometer.core.instrument.MeterRegistry, org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/filter/OncePerRequestFilter."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field context:Lorg/springframework/context/ApplicationContext;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field tagsProvider:Lorg/springframework/boot/actuate/metrics/web/servlet/WebMvcTagsProvider;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field metricName:Ljava/lang/String;
      25: aload_0
      26: iload         5
      28: putfield      #6                  // Field autoTimeRequests:Z
      31: return

  protected boolean shouldNotFilterAsyncDispatch();
    Code:
       0: iconst_0
       1: ireturn

  protected void doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain) throws javax.servlet.ServletException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #7                  // Method filterAndRecordMetrics:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/FilterChain;)V
       7: return

  private void filterAndRecordMetrics(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method getHandler:(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/Object;
       5: astore        4
       7: goto          33
      10: astore        5
      12: getstatic     #10                 // Field logger:Lorg/slf4j/Logger;
      15: ldc           #11                 // String Unable to time request
      17: aload         5
      19: invokeinterface #12,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      24: aload_3
      25: aload_1
      26: aload_2
      27: invokeinterface #13,  3           // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
      32: return
      33: aload_0
      34: aload_1
      35: aload_2
      36: aload_3
      37: aload         4
      39: invokespecial #14                 // Method filterAndRecordMetrics:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/FilterChain;Ljava/lang/Object;)V
      42: return
    Exception table:
       from    to  target type
           0     7    10   Class java/lang/Exception

  private java.lang.Object getHandler(javax.servlet.http.HttpServletRequest) throws java.lang.Exception;
    Code:
       0: new           #15                 // class org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$UnmodifiableAttributesRequestWrapper
       3: dup
       4: aload_1
       5: aconst_null
       6: invokespecial #16                 // Method org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$UnmodifiableAttributesRequestWrapper."<init>":(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$1;)V
       9: astore_2
      10: aload_0
      11: invokespecial #17                 // Method getMappingIntrospector:()Lorg/springframework/web/servlet/handler/HandlerMappingIntrospector;
      14: invokevirtual #18                 // Method org/springframework/web/servlet/handler/HandlerMappingIntrospector.getHandlerMappings:()Ljava/util/List;
      17: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          77
      32: aload_3
      33: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #22                 // class org/springframework/web/servlet/HandlerMapping
      41: astore        4
      43: aload         4
      45: aload_2
      46: invokeinterface #23,  2           // InterfaceMethod org/springframework/web/servlet/HandlerMapping.getHandler:(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/HandlerExecutionChain;
      51: astore        5
      53: aload         5
      55: ifnull        74
      58: aload         4
      60: instanceof    #24                 // class org/springframework/web/servlet/handler/MatchableHandlerMapping
      63: ifeq          72
      66: aload         5
      68: invokevirtual #25                 // Method org/springframework/web/servlet/HandlerExecutionChain.getHandler:()Ljava/lang/Object;
      71: areturn
      72: aconst_null
      73: areturn
      74: goto          23
      77: aconst_null
      78: areturn

  private org.springframework.web.servlet.handler.HandlerMappingIntrospector getMappingIntrospector();
    Code:
       0: aload_0
       1: getfield      #26                 // Field introspector:Lorg/springframework/web/servlet/handler/HandlerMappingIntrospector;
       4: ifnonnull     25
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field context:Lorg/springframework/context/ApplicationContext;
      12: ldc           #27                 // class org/springframework/web/servlet/handler/HandlerMappingIntrospector
      14: invokeinterface #28,  2           // InterfaceMethod org/springframework/context/ApplicationContext.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      19: checkcast     #27                 // class org/springframework/web/servlet/handler/HandlerMappingIntrospector
      22: putfield      #26                 // Field introspector:Lorg/springframework/web/servlet/handler/HandlerMappingIntrospector;
      25: aload_0
      26: getfield      #26                 // Field introspector:Lorg/springframework/web/servlet/handler/HandlerMappingIntrospector;
      29: areturn

  private void filterAndRecordMetrics(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain, java.lang.Object) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: aload_1
       1: invokestatic  #29                 // Method org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$TimingContext.get:(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$TimingContext;
       4: astore        5
       6: aload         5
       8: ifnonnull     20
      11: aload_0
      12: aload_1
      13: aload         4
      15: invokespecial #30                 // Method startAndAttachTimingContext:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/Object;)Lorg/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$TimingContext;
      18: astore        5
      20: aload_3
      21: aload_1
      22: aload_2
      23: invokeinterface #13,  3           // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
      28: aload_1
      29: invokeinterface #31,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.isAsyncStarted:()Z
      34: ifne          63
      37: aload_1
      38: getstatic     #32                 // Field org/springframework/web/servlet/DispatcherServlet.EXCEPTION_ATTRIBUTE:Ljava/lang/String;
      41: invokeinterface #33,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      46: checkcast     #34                 // class java/lang/Throwable
      49: astore        6
      51: aload_0
      52: aload         5
      54: aload_2
      55: aload_1
      56: aload         4
      58: aload         6
      60: invokespecial #35                 // Method record:(Lorg/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$TimingContext;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/http/HttpServletRequest;Ljava/lang/Object;Ljava/lang/Throwable;)V
      63: goto          98
      66: astore        6
      68: aload_2
      69: getstatic     #37                 // Field org/springframework/http/HttpStatus.INTERNAL_SERVER_ERROR:Lorg/springframework/http/HttpStatus;
      72: invokevirtual #38                 // Method org/springframework/http/HttpStatus.value:()I
      75: invokeinterface #39,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setStatus:(I)V
      80: aload_0
      81: aload         5
      83: aload_2
      84: aload_1
      85: aload         4
      87: aload         6
      89: invokevirtual #40                 // Method org/springframework/web/util/NestedServletException.getCause:()Ljava/lang/Throwable;
      92: invokespecial #35                 // Method record:(Lorg/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$TimingContext;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/http/HttpServletRequest;Ljava/lang/Object;Ljava/lang/Throwable;)V
      95: aload         6
      97: athrow
      98: return
    Exception table:
       from    to  target type
          20    63    66   Class org/springframework/web/util/NestedServletException

  private org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter$TimingContext startAndAttachTimingContext(javax.servlet.http.HttpServletRequest, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #41                 // Method getTimedAnnotations:(Ljava/lang/Object;)Ljava/util/Set;
       5: astore_3
       6: aload_0
       7: getfield      #3                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
      10: invokestatic  #42                 // InterfaceMethod io/micrometer/core/instrument/Timer.start:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer$Sample;
      13: astore        4
      15: aload_0
      16: aload_1
      17: aload_2
      18: aload_3
      19: invokespecial #43                 // Method getLongTaskTimerSamples:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/Object;Ljava/util/Set;)Ljava/util/Collection;
      22: astore        5
      24: new           #44                 // class org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$TimingContext
      27: dup
      28: aload_3
      29: aload         4
      31: aload         5
      33: invokespecial #45                 // Method org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$TimingContext."<init>":(Ljava/util/Set;Lio/micrometer/core/instrument/Timer$Sample;Ljava/util/Collection;)V
      36: astore        6
      38: aload         6
      40: aload_1
      41: invokevirtual #46                 // Method org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$TimingContext.attachTo:(Ljavax/servlet/http/HttpServletRequest;)V
      44: aload         6
      46: areturn

  private java.util.Set<io.micrometer.core.annotation.Timed> getTimedAnnotations(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #47                 // class org/springframework/web/method/HandlerMethod
       4: ifne          11
       7: invokestatic  #48                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      10: areturn
      11: aload_0
      12: aload_1
      13: checkcast     #47                 // class org/springframework/web/method/HandlerMethod
      16: invokespecial #49                 // Method getTimedAnnotations:(Lorg/springframework/web/method/HandlerMethod;)Ljava/util/Set;
      19: areturn

  private java.util.Set<io.micrometer.core.annotation.Timed> getTimedAnnotations(org.springframework.web.method.HandlerMethod);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method org/springframework/web/method/HandlerMethod.getMethod:()Ljava/lang/reflect/Method;
       5: invokespecial #51                 // Method findTimedAnnotations:(Ljava/lang/reflect/AnnotatedElement;)Ljava/util/Set;
       8: astore_2
       9: aload_2
      10: invokeinterface #52,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      15: ifeq          27
      18: aload_0
      19: aload_1
      20: invokevirtual #53                 // Method org/springframework/web/method/HandlerMethod.getBeanType:()Ljava/lang/Class;
      23: invokespecial #51                 // Method findTimedAnnotations:(Ljava/lang/reflect/AnnotatedElement;)Ljava/util/Set;
      26: areturn
      27: aload_2
      28: areturn

  private java.util.Set<io.micrometer.core.annotation.Timed> findTimedAnnotations(java.lang.reflect.AnnotatedElement);
    Code:
       0: aload_1
       1: ldc           #54                 // class io/micrometer/core/annotation/Timed
       3: invokestatic  #55                 // Method org/springframework/core/annotation/AnnotationUtils.getDeclaredRepeatableAnnotations:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/util/Set;
       6: areturn

  private java.util.Collection<io.micrometer.core.instrument.LongTaskTimer$Sample> getLongTaskTimerSamples(javax.servlet.http.HttpServletRequest, java.lang.Object, java.util.Set<io.micrometer.core.annotation.Timed>);
    Code:
       0: new           #56                 // class java/util/ArrayList
       3: dup
       4: invokespecial #57                 // Method java/util/ArrayList."<init>":()V
       7: astore        4
       9: aload_3
      10: invokeinterface #58,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      15: invokedynamic #59,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      20: invokeinterface #60,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      25: aload_0
      26: aload_1
      27: aload_2
      28: aload         4
      30: invokedynamic #61,  0             // InvokeDynamic #1:accept:(Lorg/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter;Ljavax/servlet/http/HttpServletRequest;Ljava/lang/Object;Ljava/util/List;)Ljava/util/function/Consumer;
      35: invokeinterface #62,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      40: aload         4
      42: areturn

  private void record(org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter$TimingContext, javax.servlet.http.HttpServletResponse, javax.servlet.http.HttpServletRequest, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_1
       1: invokevirtual #63                 // Method org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$TimingContext.getTimerSample:()Lio/micrometer/core/instrument/Timer$Sample;
       4: astore        6
       6: aload_0
       7: aload_3
       8: aload_2
       9: aload         4
      11: aload         5
      13: invokedynamic #64,  0             // InvokeDynamic #2:get:(Lorg/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/Object;Ljava/lang/Throwable;)Ljava/util/function/Supplier;
      18: astore        7
      20: aload_1
      21: invokevirtual #65                 // Method org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$TimingContext.getAnnotations:()Ljava/util/Set;
      24: invokeinterface #66,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore        8
      31: aload         8
      33: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          73
      41: aload         8
      43: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #54                 // class io/micrometer/core/annotation/Timed
      51: astore        9
      53: aload_0
      54: aload         6
      56: aload         7
      58: aload         9
      60: aload_0
      61: getfield      #5                  // Field metricName:Ljava/lang/String;
      64: invokestatic  #67                 // InterfaceMethod io/micrometer/core/instrument/Timer.builder:(Lio/micrometer/core/annotation/Timed;Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      67: invokespecial #68                 // Method stop:(Lio/micrometer/core/instrument/Timer$Sample;Ljava/util/function/Supplier;Lio/micrometer/core/instrument/Timer$Builder;)V
      70: goto          31
      73: aload_1
      74: invokevirtual #65                 // Method org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$TimingContext.getAnnotations:()Ljava/util/Set;
      77: invokeinterface #52,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      82: ifeq          107
      85: aload_0
      86: getfield      #6                  // Field autoTimeRequests:Z
      89: ifeq          107
      92: aload_0
      93: aload         6
      95: aload         7
      97: aload_0
      98: getfield      #5                  // Field metricName:Ljava/lang/String;
     101: invokestatic  #69                 // InterfaceMethod io/micrometer/core/instrument/Timer.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
     104: invokespecial #68                 // Method stop:(Lio/micrometer/core/instrument/Timer$Sample;Ljava/util/function/Supplier;Lio/micrometer/core/instrument/Timer$Builder;)V
     107: aload_1
     108: invokevirtual #70                 // Method org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$TimingContext.getLongTaskTimerSamples:()Ljava/util/Collection;
     111: invokeinterface #71,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     116: astore        8
     118: aload         8
     120: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     125: ifeq          149
     128: aload         8
     130: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     135: checkcast     #72                 // class io/micrometer/core/instrument/LongTaskTimer$Sample
     138: astore        9
     140: aload         9
     142: invokevirtual #73                 // Method io/micrometer/core/instrument/LongTaskTimer$Sample.stop:()J
     145: pop2
     146: goto          118
     149: return

  private void stop(io.micrometer.core.instrument.Timer$Sample, java.util.function.Supplier<java.lang.Iterable<io.micrometer.core.instrument.Tag>>, io.micrometer.core.instrument.Timer$Builder);
    Code:
       0: aload_1
       1: aload_3
       2: aload_2
       3: invokeinterface #74,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       8: checkcast     #75                 // class java/lang/Iterable
      11: invokevirtual #76                 // Method io/micrometer/core/instrument/Timer$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer$Builder;
      14: aload_0
      15: getfield      #3                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
      18: invokevirtual #77                 // Method io/micrometer/core/instrument/Timer$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer;
      21: invokevirtual #78                 // Method io/micrometer/core/instrument/Timer$Sample.stop:(Lio/micrometer/core/instrument/Timer;)J
      24: pop2
      25: return

  private java.lang.Iterable lambda$record$1(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field tagsProvider:Lorg/springframework/boot/actuate/metrics/web/servlet/WebMvcTagsProvider;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokeinterface #79,  5           // InterfaceMethod org/springframework/boot/actuate/metrics/web/servlet/WebMvcTagsProvider.getTags:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/Object;Ljava/lang/Throwable;)Ljava/lang/Iterable;
      14: areturn

  private void lambda$getLongTaskTimerSamples$0(javax.servlet.http.HttpServletRequest, java.lang.Object, java.util.List, io.micrometer.core.annotation.Timed);
    Code:
       0: aload_0
       1: getfield      #4                  // Field tagsProvider:Lorg/springframework/boot/actuate/metrics/web/servlet/WebMvcTagsProvider;
       4: aload_1
       5: aload_2
       6: invokeinterface #80,  3           // InterfaceMethod org/springframework/boot/actuate/metrics/web/servlet/WebMvcTagsProvider.getLongRequestTags:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/Object;)Ljava/lang/Iterable;
      11: astore        5
      13: aload         4
      15: invokestatic  #81                 // InterfaceMethod io/micrometer/core/instrument/LongTaskTimer.builder:(Lio/micrometer/core/annotation/Timed;)Lio/micrometer/core/instrument/LongTaskTimer$Builder;
      18: aload         5
      20: invokevirtual #82                 // Method io/micrometer/core/instrument/LongTaskTimer$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/LongTaskTimer$Builder;
      23: astore        6
      25: aload         6
      27: aload_0
      28: getfield      #3                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
      31: invokevirtual #83                 // Method io/micrometer/core/instrument/LongTaskTimer$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/LongTaskTimer;
      34: astore        7
      36: aload_3
      37: aload         7
      39: invokeinterface #84,  1           // InterfaceMethod io/micrometer/core/instrument/LongTaskTimer.start:()Lio/micrometer/core/instrument/LongTaskTimer$Sample;
      44: invokeinterface #85,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      49: pop
      50: return

  static {};
    Code:
       0: ldc           #86                 // class org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter
       2: invokestatic  #87                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #10                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
