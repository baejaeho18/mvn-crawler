Compiled from "PropertiesMeterFilter.java"
public class org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter implements io.micrometer.core.instrument.config.MeterFilter {
  private static final org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelAgreementBoundary[] EMPTY_SLA;

  private org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties properties;

  public org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter(org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Properties must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field properties:Lorg/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties;
      15: return

  public io.micrometer.core.instrument.config.MeterFilterReply accept(io.micrometer.core.instrument.Meter$Id);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field properties:Lorg/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties;
       5: invokevirtual #5                  // Method org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties.getEnable:()Ljava/util/Map;
       8: aload_1
       9: iconst_1
      10: invokestatic  #6                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: invokespecial #7                  // Method lookup:(Ljava/util/Map;Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #8                  // class java/lang/Boolean
      19: invokevirtual #9                  // Method java/lang/Boolean.booleanValue:()Z
      22: istore_2
      23: iload_2
      24: ifeq          33
      27: getstatic     #10                 // Field io/micrometer/core/instrument/config/MeterFilterReply.NEUTRAL:Lio/micrometer/core/instrument/config/MeterFilterReply;
      30: goto          36
      33: getstatic     #11                 // Field io/micrometer/core/instrument/config/MeterFilterReply.DENY:Lio/micrometer/core/instrument/config/MeterFilterReply;
      36: areturn

  public io.micrometer.core.instrument.distribution.DistributionStatisticConfig configure(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.distribution.DistributionStatisticConfig);
    Code:
       0: invokestatic  #12                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.builder:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
       3: astore_3
       4: aload_0
       5: getfield      #4                  // Field properties:Lorg/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties;
       8: invokevirtual #13                 // Method org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties.getDistribution:()Lorg/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties$Distribution;
      11: astore        4
      13: aload_3
      14: aload_0
      15: aload         4
      17: invokevirtual #14                 // Method org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties$Distribution.getPercentilesHistogram:()Ljava/util/Map;
      20: aload_1
      21: aconst_null
      22: invokespecial #7                  // Method lookup:(Ljava/util/Map;Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #8                  // class java/lang/Boolean
      28: invokevirtual #15                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.percentilesHistogram:(Ljava/lang/Boolean;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      31: pop
      32: aload_3
      33: aload_0
      34: aload         4
      36: invokevirtual #16                 // Method org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties$Distribution.getPercentiles:()Ljava/util/Map;
      39: aload_1
      40: aconst_null
      41: invokespecial #7                  // Method lookup:(Ljava/util/Map;Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #17                 // class "[D"
      47: invokevirtual #18                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.percentiles:([D)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      50: pop
      51: aload_3
      52: aload_0
      53: aload_1
      54: invokevirtual #19                 // Method io/micrometer/core/instrument/Meter$Id.getType:()Lio/micrometer/core/instrument/Meter$Type;
      57: aload_0
      58: aload         4
      60: invokevirtual #20                 // Method org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties$Distribution.getSla:()Ljava/util/Map;
      63: aload_1
      64: aconst_null
      65: invokespecial #7                  // Method lookup:(Ljava/util/Map;Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;)Ljava/lang/Object;
      68: checkcast     #21                 // class "[Lorg/springframework/boot/actuate/autoconfigure/metrics/ServiceLevelAgreementBoundary;"
      71: invokespecial #22                 // Method convertSla:(Lio/micrometer/core/instrument/Meter$Type;[Lorg/springframework/boot/actuate/autoconfigure/metrics/ServiceLevelAgreementBoundary;)[J
      74: invokevirtual #23                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.sla:([J)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      77: pop
      78: aload_3
      79: invokevirtual #24                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.build:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      82: aload_2
      83: invokevirtual #25                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.merge:(Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      86: areturn

  private long[] convertSla(io.micrometer.core.instrument.Meter$Type, org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelAgreementBoundary[]);
    Code:
       0: aload_2
       1: ifnull        8
       4: aload_2
       5: goto          11
       8: getstatic     #26                 // Field EMPTY_SLA:[Lorg/springframework/boot/actuate/autoconfigure/metrics/ServiceLevelAgreementBoundary;
      11: invokestatic  #27                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      14: aload_1
      15: invokedynamic #28,  0             // InvokeDynamic #0:apply:(Lio/micrometer/core/instrument/Meter$Type;)Ljava/util/function/Function;
      20: invokeinterface #29,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      25: invokedynamic #30,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      30: invokeinterface #31,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      35: invokedynamic #32,  0             // InvokeDynamic #2:applyAsLong:()Ljava/util/function/ToLongFunction;
      40: invokeinterface #33,  2           // InterfaceMethod java/util/stream/Stream.mapToLong:(Ljava/util/function/ToLongFunction;)Ljava/util/stream/LongStream;
      45: invokeinterface #34,  1           // InterfaceMethod java/util/stream/LongStream.toArray:()[J
      50: astore_3
      51: aload_3
      52: arraylength
      53: ifeq          60
      56: aload_3
      57: goto          61
      60: aconst_null
      61: areturn

  private <T> T lookup(java.util.Map<java.lang.String, T>, io.micrometer.core.instrument.Meter$Id, T);
    Code:
       0: aload_2
       1: invokevirtual #35                 // Method io/micrometer/core/instrument/Meter$Id.getName:()Ljava/lang/String;
       4: astore        4
       6: aload         4
       8: invokestatic  #36                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      11: ifeq          65
      14: aload_1
      15: aload         4
      17: invokeinterface #37,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      22: astore        5
      24: aload         5
      26: ifnull        32
      29: aload         5
      31: areturn
      32: aload         4
      34: bipush        46
      36: invokevirtual #38                 // Method java/lang/String.lastIndexOf:(I)I
      39: istore        6
      41: iload         6
      43: iconst_m1
      44: if_icmpeq     58
      47: aload         4
      49: iconst_0
      50: iload         6
      52: invokevirtual #39                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      55: goto          60
      58: ldc           #40                 // String
      60: astore        4
      62: goto          6
      65: aload_1
      66: ldc           #41                 // String all
      68: aload_3
      69: invokeinterface #42,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: areturn

  private static java.lang.Long lambda$convertSla$0(io.micrometer.core.instrument.Meter$Type, org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelAgreementBoundary);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #43                 // Method org/springframework/boot/actuate/autoconfigure/metrics/ServiceLevelAgreementBoundary.getValue:(Lio/micrometer/core/instrument/Meter$Type;)Ljava/lang/Long;
       5: areturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #44                 // class org/springframework/boot/actuate/autoconfigure/metrics/ServiceLevelAgreementBoundary
       4: putstatic     #26                 // Field EMPTY_SLA:[Lorg/springframework/boot/actuate/autoconfigure/metrics/ServiceLevelAgreementBoundary;
       7: return
}
