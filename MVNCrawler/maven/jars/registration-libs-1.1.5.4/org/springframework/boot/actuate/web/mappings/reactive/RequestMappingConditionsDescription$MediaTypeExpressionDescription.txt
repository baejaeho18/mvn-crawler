Compiled from "RequestMappingConditionsDescription.java"
public class org.springframework.boot.actuate.web.mappings.reactive.RequestMappingConditionsDescription$MediaTypeExpressionDescription {
  private final java.lang.String mediaType;

  private final boolean negated;

  org.springframework.boot.actuate.web.mappings.reactive.RequestMappingConditionsDescription$MediaTypeExpressionDescription(org.springframework.web.reactive.result.condition.MediaTypeExpression);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokeinterface #2,  1            // InterfaceMethod org/springframework/web/reactive/result/condition/MediaTypeExpression.getMediaType:()Lorg/springframework/http/MediaType;
      11: invokevirtual #3                  // Method org/springframework/http/MediaType.toString:()Ljava/lang/String;
      14: putfield      #4                  // Field mediaType:Ljava/lang/String;
      17: aload_0
      18: aload_1
      19: invokeinterface #5,  1            // InterfaceMethod org/springframework/web/reactive/result/condition/MediaTypeExpression.isNegated:()Z
      24: putfield      #6                  // Field negated:Z
      27: return

  public java.lang.String getMediaType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field mediaType:Ljava/lang/String;
       4: areturn

  public boolean isNegated();
    Code:
       0: aload_0
       1: getfield      #6                  // Field negated:Z
       4: ireturn
}
