Compiled from "DataSourceHealthIndicatorAutoConfiguration.java"
public class org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorAutoConfiguration extends org.springframework.boot.actuate.autoconfigure.health.CompositeHealthIndicatorConfiguration<org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator, javax.sql.DataSource> implements org.springframework.beans.factory.InitializingBean {
  private final java.util.Map<java.lang.String, javax.sql.DataSource> dataSources;

  private final java.util.Collection<org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider> metadataProviders;

  private org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider poolMetadataProvider;

  public org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorAutoConfiguration(org.springframework.beans.factory.ObjectProvider<java.util.Map<java.lang.String, javax.sql.DataSource>>, org.springframework.beans.factory.ObjectProvider<java.util.Collection<org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/boot/actuate/autoconfigure/health/CompositeHealthIndicatorConfiguration."<init>":()V
       4: aload_0
       5: aload_0
       6: aload_1
       7: invokeinterface #2,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfAvailable:()Ljava/lang/Object;
      12: checkcast     #3                  // class java/util/Map
      15: invokespecial #4                  // Method filterDataSources:(Ljava/util/Map;)Ljava/util/Map;
      18: putfield      #5                  // Field dataSources:Ljava/util/Map;
      21: aload_0
      22: aload_2
      23: invokeinterface #2,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfAvailable:()Ljava/lang/Object;
      28: checkcast     #6                  // class java/util/Collection
      31: putfield      #7                  // Field metadataProviders:Ljava/util/Collection;
      34: return

  private java.util.Map<java.lang.String, javax.sql.DataSource> filterDataSources(java.util.Map<java.lang.String, javax.sql.DataSource>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #8                  // class java/util/LinkedHashMap
       9: dup
      10: invokespecial #9                  // Method java/util/LinkedHashMap."<init>":()V
      13: astore_2
      14: aload_1
      15: aload_2
      16: invokedynamic #10,  0             // InvokeDynamic #0:accept:(Ljava/util/Map;)Ljava/util/function/BiConsumer;
      21: invokeinterface #11,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      26: aload_2
      27: areturn

  public void afterPropertiesSet() throws java.lang.Exception;
    Code:
       0: aload_0
       1: new           #12                 // class org/springframework/boot/jdbc/metadata/CompositeDataSourcePoolMetadataProvider
       4: dup
       5: aload_0
       6: getfield      #7                  // Field metadataProviders:Ljava/util/Collection;
       9: invokespecial #13                 // Method org/springframework/boot/jdbc/metadata/CompositeDataSourcePoolMetadataProvider."<init>":(Ljava/util/Collection;)V
      12: putfield      #14                 // Field poolMetadataProvider:Lorg/springframework/boot/jdbc/metadata/DataSourcePoolMetadataProvider;
      15: return

  public org.springframework.boot.actuate.health.HealthIndicator dbHealthIndicator();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field dataSources:Ljava/util/Map;
       5: invokevirtual #15                 // Method createHealthIndicator:(Ljava/util/Map;)Lorg/springframework/boot/actuate/health/HealthIndicator;
       8: areturn

  protected org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator createHealthIndicator(javax.sql.DataSource);
    Code:
       0: new           #16                 // class org/springframework/boot/actuate/jdbc/DataSourceHealthIndicator
       3: dup
       4: aload_1
       5: aload_0
       6: aload_1
       7: invokespecial #17                 // Method getValidationQuery:(Ljavax/sql/DataSource;)Ljava/lang/String;
      10: invokespecial #18                 // Method org/springframework/boot/actuate/jdbc/DataSourceHealthIndicator."<init>":(Ljavax/sql/DataSource;Ljava/lang/String;)V
      13: areturn

  private java.lang.String getValidationQuery(javax.sql.DataSource);
    Code:
       0: aload_0
       1: getfield      #14                 // Field poolMetadataProvider:Lorg/springframework/boot/jdbc/metadata/DataSourcePoolMetadataProvider;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod org/springframework/boot/jdbc/metadata/DataSourcePoolMetadataProvider.getDataSourcePoolMetadata:(Ljavax/sql/DataSource;)Lorg/springframework/boot/jdbc/metadata/DataSourcePoolMetadata;
      10: astore_2
      11: aload_2
      12: ifnull        24
      15: aload_2
      16: invokeinterface #20,  1           // InterfaceMethod org/springframework/boot/jdbc/metadata/DataSourcePoolMetadata.getValidationQuery:()Ljava/lang/String;
      21: goto          25
      24: aconst_null
      25: areturn

  protected org.springframework.boot.actuate.health.HealthIndicator createHealthIndicator(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class javax/sql/DataSource
       5: invokevirtual #22                 // Method createHealthIndicator:(Ljavax/sql/DataSource;)Lorg/springframework/boot/actuate/jdbc/DataSourceHealthIndicator;
       8: areturn

  private static void lambda$filterDataSources$0(java.util.Map, java.lang.String, javax.sql.DataSource);
    Code:
       0: aload_2
       1: instanceof    #23                 // class org/springframework/jdbc/datasource/lookup/AbstractRoutingDataSource
       4: ifne          16
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: return
}
