Compiled from "HealthStatusHttpMapper.java"
public class org.springframework.boot.actuate.health.HealthStatusHttpMapper {
  private java.util.Map<java.lang.String, java.lang.Integer> statusMapping;

  public org.springframework.boot.actuate.health.HealthStatusHttpMapper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field statusMapping:Ljava/util/Map;
      15: aload_0
      16: invokespecial #5                  // Method setupDefaultStatusMapping:()V
      19: return

  private void setupDefaultStatusMapping();
    Code:
       0: aload_0
       1: getstatic     #6                  // Field org/springframework/boot/actuate/health/Status.DOWN:Lorg/springframework/boot/actuate/health/Status;
       4: sipush        503
       7: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      10: invokevirtual #9                  // Method addStatusMapping:(Lorg/springframework/boot/actuate/health/Status;Ljava/lang/Integer;)V
      13: aload_0
      14: getstatic     #10                 // Field org/springframework/boot/actuate/health/Status.OUT_OF_SERVICE:Lorg/springframework/boot/actuate/health/Status;
      17: sipush        503
      20: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: invokevirtual #9                  // Method addStatusMapping:(Lorg/springframework/boot/actuate/health/Status;Ljava/lang/Integer;)V
      26: return

  public void setStatusMapping(java.util.Map<java.lang.String, java.lang.Integer>);
    Code:
       0: aload_1
       1: ldc           #11                 // String StatusMapping must not be null
       3: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: new           #2                  // class java/util/HashMap
      10: dup
      11: aload_1
      12: invokespecial #13                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      15: putfield      #4                  // Field statusMapping:Ljava/util/Map;
      18: return

  public void addStatusMapping(java.util.Map<java.lang.String, java.lang.Integer>);
    Code:
       0: aload_1
       1: ldc           #11                 // String StatusMapping must not be null
       3: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #4                  // Field statusMapping:Ljava/util/Map;
      10: aload_1
      11: invokeinterface #14,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      16: return

  public void addStatusMapping(org.springframework.boot.actuate.health.Status, java.lang.Integer);
    Code:
       0: aload_1
       1: ldc           #15                 // String Status must not be null
       3: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #16                 // String HttpStatus must not be null
       9: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_1
      14: invokevirtual #17                 // Method org/springframework/boot/actuate/health/Status.getCode:()Ljava/lang/String;
      17: aload_2
      18: invokevirtual #18                 // Method addStatusMapping:(Ljava/lang/String;Ljava/lang/Integer;)V
      21: return

  public void addStatusMapping(java.lang.String, java.lang.Integer);
    Code:
       0: aload_1
       1: ldc           #19                 // String StatusCode must not be null
       3: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #16                 // String HttpStatus must not be null
       9: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: getfield      #4                  // Field statusMapping:Ljava/util/Map;
      16: aload_1
      17: aload_2
      18: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: return

  public java.util.Map<java.lang.String, java.lang.Integer> getStatusMapping();
    Code:
       0: aload_0
       1: getfield      #4                  // Field statusMapping:Ljava/util/Map;
       4: invokestatic  #21                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public int mapStatus(org.springframework.boot.actuate.health.Status);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method org/springframework/boot/actuate/health/Status.getCode:()Ljava/lang/String;
       5: invokespecial #22                 // Method getUniformValue:(Ljava/lang/String;)Ljava/lang/String;
       8: astore_2
       9: aload_2
      10: ifnull        79
      13: aload_0
      14: getfield      #4                  // Field statusMapping:Ljava/util/Map;
      17: invokeinterface #23,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      22: invokeinterface #24,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      27: aload_0
      28: aload_2
      29: invokedynamic #25,  0             // InvokeDynamic #0:test:(Lorg/springframework/boot/actuate/health/HealthStatusHttpMapper;Ljava/lang/String;)Ljava/util/function/Predicate;
      34: invokeinterface #26,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      39: aload_0
      40: getfield      #4                  // Field statusMapping:Ljava/util/Map;
      43: dup
      44: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      47: pop
      48: invokedynamic #28,  0             // InvokeDynamic #1:apply:(Ljava/util/Map;)Ljava/util/function/Function;
      53: invokeinterface #29,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      58: invokeinterface #30,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      63: sipush        200
      66: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      69: invokevirtual #31                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      72: checkcast     #32                 // class java/lang/Integer
      75: invokevirtual #33                 // Method java/lang/Integer.intValue:()I
      78: ireturn
      79: sipush        200
      82: ireturn

  private java.lang.String getUniformValue(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #34                 // class java/lang/StringBuilder
       9: dup
      10: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      13: astore_2
      14: aload_1
      15: invokevirtual #36                 // Method java/lang/String.toCharArray:()[C
      18: astore_3
      19: aload_3
      20: arraylength
      21: istore        4
      23: iconst_0
      24: istore        5
      26: iload         5
      28: iload         4
      30: if_icmpge     71
      33: aload_3
      34: iload         5
      36: caload
      37: istore        6
      39: iload         6
      41: invokestatic  #37                 // Method java/lang/Character.isAlphabetic:(I)Z
      44: ifne          55
      47: iload         6
      49: invokestatic  #38                 // Method java/lang/Character.isDigit:(C)Z
      52: ifeq          65
      55: aload_2
      56: iload         6
      58: invokestatic  #39                 // Method java/lang/Character.toLowerCase:(C)C
      61: invokevirtual #40                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      64: pop
      65: iinc          5, 1
      68: goto          26
      71: aload_2
      72: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: areturn

  private boolean lambda$mapStatus$0(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokespecial #22                 // Method getUniformValue:(Ljava/lang/String;)Ljava/lang/String;
       6: invokevirtual #42                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ireturn
}
