Compiled from "AbstractWebFluxEndpointHandlerMapping.java"
public final class org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ElasticSchedulerInvoker implements org.springframework.boot.actuate.endpoint.invoke.OperationInvoker {
  private final org.springframework.boot.actuate.endpoint.invoke.OperationInvoker invoker;

  public org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ElasticSchedulerInvoker(org.springframework.boot.actuate.endpoint.invoke.OperationInvoker);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field invoker:Lorg/springframework/boot/actuate/endpoint/invoke/OperationInvoker;
       9: return

  public java.lang.Object invoke(org.springframework.boot.actuate.endpoint.InvocationContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #3,  0              // InvokeDynamic #0:accept:(Lorg/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ElasticSchedulerInvoker;Lorg/springframework/boot/actuate/endpoint/InvocationContext;)Ljava/util/function/Consumer;
       7: invokestatic  #4                  // Method reactor/core/publisher/Mono.create:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
      10: areturn

  private void invoke(org.springframework.boot.actuate.endpoint.InvocationContext, reactor.core.publisher.MonoSink<java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field invoker:Lorg/springframework/boot/actuate/endpoint/invoke/OperationInvoker;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod org/springframework/boot/actuate/endpoint/invoke/OperationInvoker.invoke:(Lorg/springframework/boot/actuate/endpoint/InvocationContext;)Ljava/lang/Object;
      10: astore_3
      11: aload_2
      12: aload_3
      13: invokeinterface #6,  2            // InterfaceMethod reactor/core/publisher/MonoSink.success:(Ljava/lang/Object;)V
      18: goto          29
      21: astore_3
      22: aload_2
      23: aload_3
      24: invokeinterface #8,  2            // InterfaceMethod reactor/core/publisher/MonoSink.error:(Ljava/lang/Throwable;)V
      29: return
    Exception table:
       from    to  target type
           0    18    21   Class java/lang/Exception

  private void lambda$invoke$1(org.springframework.boot.actuate.endpoint.InvocationContext, reactor.core.publisher.MonoSink);
    Code:
       0: invokestatic  #9                  // Method reactor/core/scheduler/Schedulers.elastic:()Lreactor/core/scheduler/Scheduler;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokedynamic #10,  0             // InvokeDynamic #1:run:(Lorg/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ElasticSchedulerInvoker;Lorg/springframework/boot/actuate/endpoint/InvocationContext;Lreactor/core/publisher/MonoSink;)Ljava/lang/Runnable;
      11: invokeinterface #11,  2           // InterfaceMethod reactor/core/scheduler/Scheduler.schedule:(Ljava/lang/Runnable;)Lreactor/core/Disposable;
      16: pop
      17: return

  private void lambda$null$0(org.springframework.boot.actuate.endpoint.InvocationContext, reactor.core.publisher.MonoSink);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #12                 // Method invoke:(Lorg/springframework/boot/actuate/endpoint/InvocationContext;Lreactor/core/publisher/MonoSink;)V
       6: return
}
