Compiled from "MeterRegistryPostProcessor.java"
class org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor implements org.springframework.beans.factory.config.BeanPostProcessor {
  private final org.springframework.context.ApplicationContext context;

  private volatile org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryConfigurer configurer;

  org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor(org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field context:Lorg/springframework/context/ApplicationContext;
       9: return

  public java.lang.Object postProcessAfterInitialization(java.lang.Object, java.lang.String) throws org.springframework.beans.BeansException;
    Code:
       0: aload_1
       1: instanceof    #3                  // class io/micrometer/core/instrument/MeterRegistry
       4: ifeq          18
       7: aload_0
       8: invokespecial #4                  // Method getConfigurer:()Lorg/springframework/boot/actuate/autoconfigure/metrics/MeterRegistryConfigurer;
      11: aload_1
      12: checkcast     #3                  // class io/micrometer/core/instrument/MeterRegistry
      15: invokevirtual #5                  // Method org/springframework/boot/actuate/autoconfigure/metrics/MeterRegistryConfigurer.configure:(Lio/micrometer/core/instrument/MeterRegistry;)V
      18: aload_1
      19: areturn

  private org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryConfigurer getConfigurer();
    Code:
       0: aload_0
       1: getfield      #6                  // Field configurer:Lorg/springframework/boot/actuate/autoconfigure/metrics/MeterRegistryConfigurer;
       4: ifnonnull     56
       7: aload_0
       8: new           #7                  // class org/springframework/boot/actuate/autoconfigure/metrics/MeterRegistryConfigurer
      11: dup
      12: aload_0
      13: ldc           #8                  // class io/micrometer/core/instrument/binder/MeterBinder
      15: invokespecial #9                  // Method beansOfType:(Ljava/lang/Class;)Ljava/util/Collection;
      18: aload_0
      19: ldc           #10                 // class io/micrometer/core/instrument/config/MeterFilter
      21: invokespecial #9                  // Method beansOfType:(Ljava/lang/Class;)Ljava/util/Collection;
      24: aload_0
      25: ldc           #11                 // class org/springframework/boot/actuate/autoconfigure/metrics/MeterRegistryCustomizer
      27: invokespecial #9                  // Method beansOfType:(Ljava/lang/Class;)Ljava/util/Collection;
      30: checkcast     #12                 // class java/util/Collection
      33: aload_0
      34: getfield      #2                  // Field context:Lorg/springframework/context/ApplicationContext;
      37: ldc           #13                 // class org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties
      39: invokeinterface #14,  2           // InterfaceMethod org/springframework/context/ApplicationContext.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      44: checkcast     #13                 // class org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties
      47: invokevirtual #15                 // Method org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties.isUseGlobalRegistry:()Z
      50: invokespecial #16                 // Method org/springframework/boot/actuate/autoconfigure/metrics/MeterRegistryConfigurer."<init>":(Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;Z)V
      53: putfield      #6                  // Field configurer:Lorg/springframework/boot/actuate/autoconfigure/metrics/MeterRegistryConfigurer;
      56: aload_0
      57: getfield      #6                  // Field configurer:Lorg/springframework/boot/actuate/autoconfigure/metrics/MeterRegistryConfigurer;
      60: areturn

  private <T> java.util.Collection<T> beansOfType(java.lang.Class<T>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field context:Lorg/springframework/context/ApplicationContext;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod org/springframework/context/ApplicationContext.getBeansOfType:(Ljava/lang/Class;)Ljava/util/Map;
      10: invokeinterface #18,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      15: areturn
}
