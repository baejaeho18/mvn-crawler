Compiled from "RouterFunctionMetrics.java"
public class org.springframework.boot.actuate.metrics.web.reactive.server.RouterFunctionMetrics {
  private final io.micrometer.core.instrument.MeterRegistry registry;

  private final java.util.function.BiFunction<org.springframework.web.reactive.function.server.ServerRequest, org.springframework.web.reactive.function.server.ServerResponse, java.lang.Iterable<io.micrometer.core.instrument.Tag>> defaultTags;

  public org.springframework.boot.actuate.metrics.web.reactive.server.RouterFunctionMetrics(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #4                  // String Registry must not be null
       7: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #1                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
      15: aload_0
      16: aload_0
      17: invokedynamic #6,  0              // InvokeDynamic #0:apply:(Lorg/springframework/boot/actuate/metrics/web/reactive/server/RouterFunctionMetrics;)Ljava/util/function/BiFunction;
      22: putfield      #2                  // Field defaultTags:Ljava/util/function/BiFunction;
      25: return

  private org.springframework.boot.actuate.metrics.web.reactive.server.RouterFunctionMetrics(io.micrometer.core.instrument.MeterRegistry, java.util.function.BiFunction<org.springframework.web.reactive.function.server.ServerRequest, org.springframework.web.reactive.function.server.ServerResponse, java.lang.Iterable<io.micrometer.core.instrument.Tag>>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #4                  // String Registry must not be null
       7: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #7                  // String DefaultTags must not be null
      13: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: aload_1
      18: putfield      #1                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
      21: aload_0
      22: aload_2
      23: putfield      #2                  // Field defaultTags:Ljava/util/function/BiFunction;
      26: return

  private java.lang.Iterable<io.micrometer.core.instrument.Tag> defaultTags(org.springframework.web.reactive.function.server.ServerRequest, org.springframework.web.reactive.function.server.ServerResponse);
    Code:
       0: aload_2
       1: ifnonnull     19
       4: iconst_1
       5: anewarray     #8                  // class io/micrometer/core/instrument/Tag
       8: dup
       9: iconst_0
      10: aload_1
      11: invokestatic  #9                  // Method getMethodTag:(Lorg/springframework/web/reactive/function/server/ServerRequest;)Lio/micrometer/core/instrument/Tag;
      14: aastore
      15: invokestatic  #10                 // Method io/micrometer/core/instrument/Tags.of:([Lio/micrometer/core/instrument/Tag;)Lio/micrometer/core/instrument/Tags;
      18: areturn
      19: iconst_2
      20: anewarray     #8                  // class io/micrometer/core/instrument/Tag
      23: dup
      24: iconst_0
      25: aload_1
      26: invokestatic  #9                  // Method getMethodTag:(Lorg/springframework/web/reactive/function/server/ServerRequest;)Lio/micrometer/core/instrument/Tag;
      29: aastore
      30: dup
      31: iconst_1
      32: aload_2
      33: invokestatic  #11                 // Method getStatusTag:(Lorg/springframework/web/reactive/function/server/ServerResponse;)Lio/micrometer/core/instrument/Tag;
      36: aastore
      37: invokestatic  #10                 // Method io/micrometer/core/instrument/Tags.of:([Lio/micrometer/core/instrument/Tag;)Lio/micrometer/core/instrument/Tags;
      40: areturn

  public org.springframework.boot.actuate.metrics.web.reactive.server.RouterFunctionMetrics defaultTags(java.util.function.BiFunction<org.springframework.web.reactive.function.server.ServerRequest, org.springframework.web.reactive.function.server.ServerResponse, java.lang.Iterable<io.micrometer.core.instrument.Tag>>);
    Code:
       0: new           #12                 // class org/springframework/boot/actuate/metrics/web/reactive/server/RouterFunctionMetrics
       3: dup
       4: aload_0
       5: getfield      #1                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
       8: aload_1
       9: invokespecial #13                 // Method "<init>":(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/function/BiFunction;)V
      12: areturn

  public org.springframework.web.reactive.function.server.HandlerFilterFunction<org.springframework.web.reactive.function.server.ServerResponse, org.springframework.web.reactive.function.server.ServerResponse> timer(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #14                 // Method io/micrometer/core/instrument/Tags.empty:()Lio/micrometer/core/instrument/Tags;
       5: invokevirtual #15                 // Method timer:(Ljava/lang/String;Ljava/lang/Iterable;)Lorg/springframework/web/reactive/function/server/HandlerFilterFunction;
       8: areturn

  public org.springframework.web.reactive.function.server.HandlerFilterFunction<org.springframework.web.reactive.function.server.ServerResponse, org.springframework.web.reactive.function.server.ServerResponse> timer(java.lang.String, java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #16                 // Method io/micrometer/core/instrument/Tags.of:([Ljava/lang/String;)Lio/micrometer/core/instrument/Tags;
       6: invokevirtual #15                 // Method timer:(Ljava/lang/String;Ljava/lang/Iterable;)Lorg/springframework/web/reactive/function/server/HandlerFilterFunction;
       9: areturn

  public org.springframework.web.reactive.function.server.HandlerFilterFunction<org.springframework.web.reactive.function.server.ServerResponse, org.springframework.web.reactive.function.server.ServerResponse> timer(java.lang.String, java.lang.Iterable<io.micrometer.core.instrument.Tag>);
    Code:
       0: new           #17                 // class org/springframework/boot/actuate/metrics/web/reactive/server/RouterFunctionMetrics$MetricsFilter
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokestatic  #18                 // Method io/micrometer/core/instrument/Tags.of:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Tags;
      10: invokespecial #19                 // Method org/springframework/boot/actuate/metrics/web/reactive/server/RouterFunctionMetrics$MetricsFilter."<init>":(Lorg/springframework/boot/actuate/metrics/web/reactive/server/RouterFunctionMetrics;Ljava/lang/String;Lio/micrometer/core/instrument/Tags;)V
      13: areturn

  public static io.micrometer.core.instrument.Tag getMethodTag(org.springframework.web.reactive.function.server.ServerRequest);
    Code:
       0: ldc           #20                 // String method
       2: aload_0
       3: invokeinterface #21,  1           // InterfaceMethod org/springframework/web/reactive/function/server/ServerRequest.method:()Lorg/springframework/http/HttpMethod;
       8: invokevirtual #22                 // Method org/springframework/http/HttpMethod.toString:()Ljava/lang/String;
      11: invokestatic  #23                 // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      14: areturn

  public static io.micrometer.core.instrument.Tag getStatusTag(org.springframework.web.reactive.function.server.ServerResponse);
    Code:
       0: ldc           #24                 // String status
       2: aload_0
       3: invokeinterface #25,  1           // InterfaceMethod org/springframework/web/reactive/function/server/ServerResponse.statusCode:()Lorg/springframework/http/HttpStatus;
       8: invokevirtual #26                 // Method org/springframework/http/HttpStatus.toString:()Ljava/lang/String;
      11: invokestatic  #23                 // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      14: areturn

  static java.util.function.BiFunction access$000(org.springframework.boot.actuate.metrics.web.reactive.server.RouterFunctionMetrics);
    Code:
       0: aload_0
       1: getfield      #2                  // Field defaultTags:Ljava/util/function/BiFunction;
       4: areturn

  static io.micrometer.core.instrument.MeterRegistry access$100(org.springframework.boot.actuate.metrics.web.reactive.server.RouterFunctionMetrics);
    Code:
       0: aload_0
       1: getfield      #1                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
       4: areturn
}
