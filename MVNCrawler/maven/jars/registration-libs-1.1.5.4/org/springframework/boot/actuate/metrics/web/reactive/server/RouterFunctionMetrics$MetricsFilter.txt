Compiled from "RouterFunctionMetrics.java"
class org.springframework.boot.actuate.metrics.web.reactive.server.RouterFunctionMetrics$MetricsFilter implements org.springframework.web.reactive.function.server.HandlerFilterFunction<org.springframework.web.reactive.function.server.ServerResponse, org.springframework.web.reactive.function.server.ServerResponse> {
  private final java.lang.String name;

  private final io.micrometer.core.instrument.Tags tags;

  final org.springframework.boot.actuate.metrics.web.reactive.server.RouterFunctionMetrics this$0;

  org.springframework.boot.actuate.metrics.web.reactive.server.RouterFunctionMetrics$MetricsFilter(org.springframework.boot.actuate.metrics.web.reactive.server.RouterFunctionMetrics, java.lang.String, io.micrometer.core.instrument.Tags);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/boot/actuate/metrics/web/reactive/server/RouterFunctionMetrics;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field name:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field tags:Lio/micrometer/core/instrument/Tags;
      19: return

  public reactor.core.publisher.Mono<org.springframework.web.reactive.function.server.ServerResponse> filter(org.springframework.web.reactive.function.server.ServerRequest, org.springframework.web.reactive.function.server.HandlerFunction<org.springframework.web.reactive.function.server.ServerResponse>);
    Code:
       0: invokestatic  #5                  // Method java/lang/System.nanoTime:()J
       3: lstore_3
       4: aload_2
       5: aload_1
       6: invokeinterface #6,  2            // InterfaceMethod org/springframework/web/reactive/function/server/HandlerFunction.handle:(Lorg/springframework/web/reactive/function/server/ServerRequest;)Lreactor/core/publisher/Mono;
      11: aload_0
      12: lload_3
      13: aload_1
      14: invokedynamic #7,  0              // InvokeDynamic #0:accept:(Lorg/springframework/boot/actuate/metrics/web/reactive/server/RouterFunctionMetrics$MetricsFilter;JLorg/springframework/web/reactive/function/server/ServerRequest;)Ljava/util/function/Consumer;
      19: invokevirtual #8                  // Method reactor/core/publisher/Mono.doOnSuccess:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
      22: aload_0
      23: lload_3
      24: aload_1
      25: invokedynamic #9,  0              // InvokeDynamic #1:accept:(Lorg/springframework/boot/actuate/metrics/web/reactive/server/RouterFunctionMetrics$MetricsFilter;JLorg/springframework/web/reactive/function/server/ServerRequest;)Ljava/util/function/Consumer;
      30: invokevirtual #10                 // Method reactor/core/publisher/Mono.doOnError:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
      33: areturn

  private java.lang.Iterable<io.micrometer.core.instrument.Tag> getDefaultTags(org.springframework.web.reactive.function.server.ServerRequest, org.springframework.web.reactive.function.server.ServerResponse);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/springframework/boot/actuate/metrics/web/reactive/server/RouterFunctionMetrics;
       4: invokestatic  #11                 // Method org/springframework/boot/actuate/metrics/web/reactive/server/RouterFunctionMetrics.access$000:(Lorg/springframework/boot/actuate/metrics/web/reactive/server/RouterFunctionMetrics;)Ljava/util/function/BiFunction;
       7: aload_1
       8: aload_2
       9: invokeinterface #12,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #13                 // class java/lang/Iterable
      17: areturn

  private void timer(long, org.springframework.web.reactive.function.server.ServerRequest, org.springframework.web.reactive.function.server.ServerResponse);
    Code:
       0: aload_0
       1: getfield      #4                  // Field tags:Lio/micrometer/core/instrument/Tags;
       4: aload_0
       5: aload_3
       6: aload         4
       8: invokespecial #14                 // Method getDefaultTags:(Lorg/springframework/web/reactive/function/server/ServerRequest;Lorg/springframework/web/reactive/function/server/ServerResponse;)Ljava/lang/Iterable;
      11: invokevirtual #15                 // Method io/micrometer/core/instrument/Tags.and:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Tags;
      14: astore        5
      16: aload_0
      17: getfield      #1                  // Field this$0:Lorg/springframework/boot/actuate/metrics/web/reactive/server/RouterFunctionMetrics;
      20: invokestatic  #16                 // Method org/springframework/boot/actuate/metrics/web/reactive/server/RouterFunctionMetrics.access$100:(Lorg/springframework/boot/actuate/metrics/web/reactive/server/RouterFunctionMetrics;)Lio/micrometer/core/instrument/MeterRegistry;
      23: aload_0
      24: getfield      #3                  // Field name:Ljava/lang/String;
      27: aload         5
      29: invokevirtual #17                 // Method io/micrometer/core/instrument/MeterRegistry.timer:(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer;
      32: invokestatic  #5                  // Method java/lang/System.nanoTime:()J
      35: lload_1
      36: lsub
      37: getstatic     #18                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      40: invokeinterface #19,  4           // InterfaceMethod io/micrometer/core/instrument/Timer.record:(JLjava/util/concurrent/TimeUnit;)V
      45: return

  private void lambda$filter$1(long, org.springframework.web.reactive.function.server.ServerRequest, java.lang.Throwable);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: aconst_null
       4: invokespecial #20                 // Method timer:(JLorg/springframework/web/reactive/function/server/ServerRequest;Lorg/springframework/web/reactive/function/server/ServerResponse;)V
       7: return

  private void lambda$filter$0(long, org.springframework.web.reactive.function.server.ServerRequest, org.springframework.web.reactive.function.server.ServerResponse);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: aload         4
       5: invokespecial #20                 // Method timer:(JLorg/springframework/web/reactive/function/server/ServerRequest;Lorg/springframework/web/reactive/function/server/ServerResponse;)V
       8: return
}
