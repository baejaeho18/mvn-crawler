Compiled from "DefaultWebMvcTagsProvider.java"
public class org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider implements org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider {
  public org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.Iterable<io.micrometer.core.instrument.Tag> getTags(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Throwable);
    Code:
       0: iconst_4
       1: anewarray     #2                  // class io/micrometer/core/instrument/Tag
       4: dup
       5: iconst_0
       6: aload_1
       7: invokestatic  #3                  // Method org/springframework/boot/actuate/metrics/web/servlet/WebMvcTags.method:(Ljavax/servlet/http/HttpServletRequest;)Lio/micrometer/core/instrument/Tag;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_1
      14: aload_2
      15: invokestatic  #4                  // Method org/springframework/boot/actuate/metrics/web/servlet/WebMvcTags.uri:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lio/micrometer/core/instrument/Tag;
      18: aastore
      19: dup
      20: iconst_2
      21: aload         4
      23: invokestatic  #5                  // Method org/springframework/boot/actuate/metrics/web/servlet/WebMvcTags.exception:(Ljava/lang/Throwable;)Lio/micrometer/core/instrument/Tag;
      26: aastore
      27: dup
      28: iconst_3
      29: aload_2
      30: invokestatic  #6                  // Method org/springframework/boot/actuate/metrics/web/servlet/WebMvcTags.status:(Ljavax/servlet/http/HttpServletResponse;)Lio/micrometer/core/instrument/Tag;
      33: aastore
      34: invokestatic  #7                  // Method io/micrometer/core/instrument/Tags.of:([Lio/micrometer/core/instrument/Tag;)Lio/micrometer/core/instrument/Tags;
      37: areturn

  public java.lang.Iterable<io.micrometer.core.instrument.Tag> getLongRequestTags(javax.servlet.http.HttpServletRequest, java.lang.Object);
    Code:
       0: iconst_2
       1: anewarray     #2                  // class io/micrometer/core/instrument/Tag
       4: dup
       5: iconst_0
       6: aload_1
       7: invokestatic  #3                  // Method org/springframework/boot/actuate/metrics/web/servlet/WebMvcTags.method:(Ljavax/servlet/http/HttpServletRequest;)Lio/micrometer/core/instrument/Tag;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_1
      14: aconst_null
      15: invokestatic  #4                  // Method org/springframework/boot/actuate/metrics/web/servlet/WebMvcTags.uri:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lio/micrometer/core/instrument/Tag;
      18: aastore
      19: invokestatic  #7                  // Method io/micrometer/core/instrument/Tags.of:([Lio/micrometer/core/instrument/Tag;)Lio/micrometer/core/instrument/Tags;
      22: areturn
}
