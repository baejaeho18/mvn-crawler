Compiled from "InfluxPropertiesConfigAdapter.java"
class org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxPropertiesConfigAdapter extends org.springframework.boot.actuate.autoconfigure.metrics.export.properties.StepRegistryPropertiesConfigAdapter<org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties> implements io.micrometer.influx.InfluxConfig {
  org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxPropertiesConfigAdapter(org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/boot/actuate/autoconfigure/metrics/export/properties/StepRegistryPropertiesConfigAdapter."<init>":(Lorg/springframework/boot/actuate/autoconfigure/metrics/export/properties/StepRegistryProperties;)V
       5: return

  public java.lang.String db();
    Code:
       0: aload_0
       1: invokedynamic #2,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
       6: aload_0
       7: invokedynamic #3,  0              // InvokeDynamic #1:get:(Lorg/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxPropertiesConfigAdapter;)Ljava/util/function/Supplier;
      12: invokevirtual #4                  // Method get:(Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Object;
      15: checkcast     #5                  // class java/lang/String
      18: areturn

  public io.micrometer.influx.InfluxConsistency consistency();
    Code:
       0: aload_0
       1: invokedynamic #6,  0              // InvokeDynamic #2:apply:()Ljava/util/function/Function;
       6: aload_0
       7: invokedynamic #7,  0              // InvokeDynamic #3:get:(Lorg/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxPropertiesConfigAdapter;)Ljava/util/function/Supplier;
      12: invokevirtual #4                  // Method get:(Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Object;
      15: checkcast     #8                  // class io/micrometer/influx/InfluxConsistency
      18: areturn

  public java.lang.String userName();
    Code:
       0: aload_0
       1: invokedynamic #9,  0              // InvokeDynamic #4:apply:()Ljava/util/function/Function;
       6: aload_0
       7: invokedynamic #10,  0             // InvokeDynamic #5:get:(Lorg/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxPropertiesConfigAdapter;)Ljava/util/function/Supplier;
      12: invokevirtual #4                  // Method get:(Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Object;
      15: checkcast     #5                  // class java/lang/String
      18: areturn

  public java.lang.String password();
    Code:
       0: aload_0
       1: invokedynamic #11,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
       6: aload_0
       7: invokedynamic #12,  0             // InvokeDynamic #7:get:(Lorg/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxPropertiesConfigAdapter;)Ljava/util/function/Supplier;
      12: invokevirtual #4                  // Method get:(Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Object;
      15: checkcast     #5                  // class java/lang/String
      18: areturn

  public java.lang.String retentionPolicy();
    Code:
       0: aload_0
       1: invokedynamic #13,  0             // InvokeDynamic #8:apply:()Ljava/util/function/Function;
       6: aload_0
       7: invokedynamic #14,  0             // InvokeDynamic #9:get:(Lorg/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxPropertiesConfigAdapter;)Ljava/util/function/Supplier;
      12: invokevirtual #4                  // Method get:(Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Object;
      15: checkcast     #5                  // class java/lang/String
      18: areturn

  public java.lang.String uri();
    Code:
       0: aload_0
       1: invokedynamic #15,  0             // InvokeDynamic #10:apply:()Ljava/util/function/Function;
       6: aload_0
       7: invokedynamic #16,  0             // InvokeDynamic #11:get:(Lorg/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxPropertiesConfigAdapter;)Ljava/util/function/Supplier;
      12: invokevirtual #4                  // Method get:(Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Object;
      15: checkcast     #5                  // class java/lang/String
      18: areturn

  public boolean compressed();
    Code:
       0: aload_0
       1: invokedynamic #17,  0             // InvokeDynamic #12:apply:()Ljava/util/function/Function;
       6: aload_0
       7: invokedynamic #18,  0             // InvokeDynamic #13:get:(Lorg/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxPropertiesConfigAdapter;)Ljava/util/function/Supplier;
      12: invokevirtual #4                  // Method get:(Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Object;
      15: checkcast     #19                 // class java/lang/Boolean
      18: invokevirtual #20                 // Method java/lang/Boolean.booleanValue:()Z
      21: ireturn

  public boolean autoCreateDb();
    Code:
       0: aload_0
       1: invokedynamic #21,  0             // InvokeDynamic #14:apply:()Ljava/util/function/Function;
       6: aload_0
       7: invokedynamic #22,  0             // InvokeDynamic #15:get:(Lorg/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxPropertiesConfigAdapter;)Ljava/util/function/Supplier;
      12: invokevirtual #4                  // Method get:(Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Object;
      15: checkcast     #19                 // class java/lang/Boolean
      18: invokevirtual #20                 // Method java/lang/Boolean.booleanValue:()Z
      21: ireturn

  private java.lang.Boolean lambda$autoCreateDb$7();
    Code:
       0: aload_0
       1: invokespecial #23                 // InterfaceMethod io/micrometer/influx/InfluxConfig.autoCreateDb:()Z
       4: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: areturn

  private java.lang.Boolean lambda$compressed$6();
    Code:
       0: aload_0
       1: invokespecial #25                 // InterfaceMethod io/micrometer/influx/InfluxConfig.compressed:()Z
       4: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: areturn

  private java.lang.String lambda$uri$5();
    Code:
       0: aload_0
       1: invokespecial #26                 // InterfaceMethod io/micrometer/influx/InfluxConfig.uri:()Ljava/lang/String;
       4: areturn

  private java.lang.String lambda$retentionPolicy$4();
    Code:
       0: aload_0
       1: invokespecial #27                 // InterfaceMethod io/micrometer/influx/InfluxConfig.retentionPolicy:()Ljava/lang/String;
       4: areturn

  private java.lang.String lambda$password$3();
    Code:
       0: aload_0
       1: invokespecial #28                 // InterfaceMethod io/micrometer/influx/InfluxConfig.password:()Ljava/lang/String;
       4: areturn

  private java.lang.String lambda$userName$2();
    Code:
       0: aload_0
       1: invokespecial #29                 // InterfaceMethod io/micrometer/influx/InfluxConfig.userName:()Ljava/lang/String;
       4: areturn

  private io.micrometer.influx.InfluxConsistency lambda$consistency$1();
    Code:
       0: aload_0
       1: invokespecial #30                 // InterfaceMethod io/micrometer/influx/InfluxConfig.consistency:()Lio/micrometer/influx/InfluxConsistency;
       4: areturn

  private java.lang.String lambda$db$0();
    Code:
       0: aload_0
       1: invokespecial #31                 // InterfaceMethod io/micrometer/influx/InfluxConfig.db:()Ljava/lang/String;
       4: areturn
}
