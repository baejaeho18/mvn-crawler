Compiled from "CloudFoundryWebFluxEndpointHandlerMapping.java"
class org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointHandlerMapping$SecureReactiveWebOperation implements org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperation {
  private final org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperation delegate;

  private final org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundrySecurityInterceptor securityInterceptor;

  private final java.lang.String endpointId;

  org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointHandlerMapping$SecureReactiveWebOperation(org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperation, org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundrySecurityInterceptor, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field delegate:Lorg/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperation;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field securityInterceptor:Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundrySecurityInterceptor;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field endpointId:Ljava/lang/String;
      19: return

  public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Object>> handle(org.springframework.web.server.ServerWebExchange, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field securityInterceptor:Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundrySecurityInterceptor;
       4: aload_1
       5: aload_0
       6: getfield      #4                  // Field endpointId:Ljava/lang/String;
       9: invokevirtual #5                  // Method org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundrySecurityInterceptor.preHandle:(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/String;)Lreactor/core/publisher/Mono;
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokedynamic #6,  0              // InvokeDynamic #0:apply:(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping$SecureReactiveWebOperation;Lorg/springframework/web/server/ServerWebExchange;Ljava/util/Map;)Ljava/util/function/Function;
      20: invokevirtual #7                  // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      23: areturn

  private reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Object>> flatMapResponse(org.springframework.web.server.ServerWebExchange, java.util.Map<java.lang.String, java.lang.String>, org.springframework.boot.actuate.autoconfigure.cloudfoundry.SecurityResponse);
    Code:
       0: aload_3
       1: invokevirtual #8                  // Method org/springframework/boot/actuate/autoconfigure/cloudfoundry/SecurityResponse.getStatus:()Lorg/springframework/http/HttpStatus;
       4: getstatic     #9                  // Field org/springframework/http/HttpStatus.OK:Lorg/springframework/http/HttpStatus;
       7: invokevirtual #10                 // Method org/springframework/http/HttpStatus.equals:(Ljava/lang/Object;)Z
      10: ifne          28
      13: new           #11                 // class org/springframework/http/ResponseEntity
      16: dup
      17: aload_3
      18: invokevirtual #8                  // Method org/springframework/boot/actuate/autoconfigure/cloudfoundry/SecurityResponse.getStatus:()Lorg/springframework/http/HttpStatus;
      21: invokespecial #12                 // Method org/springframework/http/ResponseEntity."<init>":(Lorg/springframework/http/HttpStatus;)V
      24: invokestatic  #13                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      27: areturn
      28: aload_0
      29: getfield      #2                  // Field delegate:Lorg/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperation;
      32: aload_1
      33: aload_2
      34: invokeinterface #14,  3           // InterfaceMethod org/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperation.handle:(Lorg/springframework/web/server/ServerWebExchange;Ljava/util/Map;)Lreactor/core/publisher/Mono;
      39: areturn

  private reactor.core.publisher.Mono lambda$handle$0(org.springframework.web.server.ServerWebExchange, java.util.Map, org.springframework.boot.actuate.autoconfigure.cloudfoundry.SecurityResponse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #15                 // Method flatMapResponse:(Lorg/springframework/web/server/ServerWebExchange;Ljava/util/Map;Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/SecurityResponse;)Lreactor/core/publisher/Mono;
       7: areturn
}
