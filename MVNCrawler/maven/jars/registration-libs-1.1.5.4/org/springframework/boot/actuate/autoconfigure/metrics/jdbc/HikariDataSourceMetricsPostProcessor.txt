Compiled from "HikariDataSourceMetricsPostProcessor.java"
class org.springframework.boot.actuate.autoconfigure.metrics.jdbc.HikariDataSourceMetricsPostProcessor implements org.springframework.beans.factory.config.BeanPostProcessor,org.springframework.core.Ordered {
  private static final org.apache.commons.logging.Log logger;

  private final org.springframework.context.ApplicationContext context;

  private volatile io.micrometer.core.instrument.MeterRegistry meterRegistry;

  org.springframework.boot.actuate.autoconfigure.metrics.jdbc.HikariDataSourceMetricsPostProcessor(org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field context:Lorg/springframework/context/ApplicationContext;
       9: return

  public java.lang.Object postProcessAfterInitialization(java.lang.Object, java.lang.String);
    Code:
       0: aload_1
       1: instanceof    #3                  // class com/zaxxer/hikari/HikariDataSource
       4: ifeq          19
       7: aload_0
       8: aload_0
       9: invokespecial #4                  // Method getMeterRegistry:()Lio/micrometer/core/instrument/MeterRegistry;
      12: aload_1
      13: checkcast     #3                  // class com/zaxxer/hikari/HikariDataSource
      16: invokespecial #5                  // Method bindMetricsRegistryToHikariDataSource:(Lio/micrometer/core/instrument/MeterRegistry;Lcom/zaxxer/hikari/HikariDataSource;)V
      19: aload_1
      20: areturn

  private void bindMetricsRegistryToHikariDataSource(io.micrometer.core.instrument.MeterRegistry, com.zaxxer.hikari.HikariDataSource);
    Code:
       0: aload_2
       1: invokevirtual #6                  // Method com/zaxxer/hikari/HikariDataSource.getMetricRegistry:()Ljava/lang/Object;
       4: ifnonnull     60
       7: aload_2
       8: invokevirtual #7                  // Method com/zaxxer/hikari/HikariDataSource.getMetricsTrackerFactory:()Lcom/zaxxer/hikari/metrics/MetricsTrackerFactory;
      11: ifnonnull     60
      14: aload_2
      15: new           #8                  // class com/zaxxer/hikari/metrics/micrometer/MicrometerMetricsTrackerFactory
      18: dup
      19: aload_1
      20: invokespecial #9                  // Method com/zaxxer/hikari/metrics/micrometer/MicrometerMetricsTrackerFactory."<init>":(Lio/micrometer/core/instrument/MeterRegistry;)V
      23: invokevirtual #10                 // Method com/zaxxer/hikari/HikariDataSource.setMetricsTrackerFactory:(Lcom/zaxxer/hikari/metrics/MetricsTrackerFactory;)V
      26: goto          60
      29: astore_3
      30: getstatic     #12                 // Field logger:Lorg/apache/commons/logging/Log;
      33: new           #13                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #15                 // String Failed to bind Hikari metrics:
      42: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_3
      46: invokevirtual #17                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      49: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokeinterface #19,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      60: return
    Exception table:
       from    to  target type
          14    26    29   Class java/lang/Exception

  private io.micrometer.core.instrument.MeterRegistry getMeterRegistry();
    Code:
       0: aload_0
       1: getfield      #20                 // Field meterRegistry:Lio/micrometer/core/instrument/MeterRegistry;
       4: ifnonnull     25
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field context:Lorg/springframework/context/ApplicationContext;
      12: ldc           #21                 // class io/micrometer/core/instrument/MeterRegistry
      14: invokeinterface #22,  2           // InterfaceMethod org/springframework/context/ApplicationContext.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      19: checkcast     #21                 // class io/micrometer/core/instrument/MeterRegistry
      22: putfield      #20                 // Field meterRegistry:Lio/micrometer/core/instrument/MeterRegistry;
      25: aload_0
      26: getfield      #20                 // Field meterRegistry:Lio/micrometer/core/instrument/MeterRegistry;
      29: areturn

  public int getOrder();
    Code:
       0: ldc           #24                 // int -2147483648
       2: ireturn

  static {};
    Code:
       0: ldc           #25                 // class org/springframework/boot/actuate/autoconfigure/metrics/jdbc/HikariDataSourceMetricsPostProcessor
       2: invokestatic  #26                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #12                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
