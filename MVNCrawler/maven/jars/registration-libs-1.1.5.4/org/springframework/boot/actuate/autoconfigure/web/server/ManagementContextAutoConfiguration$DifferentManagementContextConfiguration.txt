Compiled from "ManagementContextAutoConfiguration.java"
class org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$DifferentManagementContextConfiguration implements org.springframework.beans.factory.SmartInitializingSingleton {
  private final org.springframework.context.ApplicationContext applicationContext;

  private final org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory managementContextFactory;

  org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$DifferentManagementContextConfiguration(org.springframework.context.ApplicationContext, org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field managementContextFactory:Lorg/springframework/boot/actuate/autoconfigure/web/ManagementContextFactory;
      14: return

  public void afterSingletonsInstantiated();
    Code:
       0: aload_0
       1: getfield      #3                  // Field managementContextFactory:Lorg/springframework/boot/actuate/autoconfigure/web/ManagementContextFactory;
       4: aload_0
       5: getfield      #2                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       8: iconst_2
       9: anewarray     #4                  // class java/lang/Class
      12: dup
      13: iconst_0
      14: ldc           #5                  // class org/springframework/boot/actuate/autoconfigure/web/server/EnableChildManagementContextConfiguration
      16: aastore
      17: dup
      18: iconst_1
      19: ldc           #6                  // class org/springframework/boot/autoconfigure/context/PropertyPlaceholderAutoConfiguration
      21: aastore
      22: invokeinterface #7,  3            // InterfaceMethod org/springframework/boot/actuate/autoconfigure/web/ManagementContextFactory.createManagementContext:(Lorg/springframework/context/ApplicationContext;[Ljava/lang/Class;)Lorg/springframework/boot/web/context/ConfigurableWebServerApplicationContext;
      27: astore_1
      28: aload_1
      29: ldc           #8                  // String management
      31: invokeinterface #9,  2            // InterfaceMethod org/springframework/boot/web/context/ConfigurableWebServerApplicationContext.setServerNamespace:(Ljava/lang/String;)V
      36: aload_1
      37: new           #10                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      44: aload_0
      45: getfield      #2                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      48: invokeinterface #12,  1           // InterfaceMethod org/springframework/context/ApplicationContext.getId:()Ljava/lang/String;
      53: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: ldc           #14                 // String :management
      58: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokeinterface #16,  2           // InterfaceMethod org/springframework/boot/web/context/ConfigurableWebServerApplicationContext.setId:(Ljava/lang/String;)V
      69: aload_0
      70: aload_1
      71: invokespecial #17                 // Method setClassLoaderIfPossible:(Lorg/springframework/context/ConfigurableApplicationContext;)V
      74: aload_0
      75: getfield      #2                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      78: aload_1
      79: invokestatic  #18                 // Method org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration$CloseManagementContextListener.addIfPossible:(Lorg/springframework/context/ApplicationContext;Lorg/springframework/context/ConfigurableApplicationContext;)V
      82: aload_1
      83: invokeinterface #19,  1           // InterfaceMethod org/springframework/boot/web/context/ConfigurableWebServerApplicationContext.refresh:()V
      88: return

  private void setClassLoaderIfPossible(org.springframework.context.ConfigurableApplicationContext);
    Code:
       0: aload_1
       1: instanceof    #20                 // class org/springframework/core/io/DefaultResourceLoader
       4: ifeq          23
       7: aload_1
       8: checkcast     #20                 // class org/springframework/core/io/DefaultResourceLoader
      11: aload_0
      12: getfield      #2                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      15: invokeinterface #21,  1           // InterfaceMethod org/springframework/context/ApplicationContext.getClassLoader:()Ljava/lang/ClassLoader;
      20: invokevirtual #22                 // Method org/springframework/core/io/DefaultResourceLoader.setClassLoader:(Ljava/lang/ClassLoader;)V
      23: return
}
