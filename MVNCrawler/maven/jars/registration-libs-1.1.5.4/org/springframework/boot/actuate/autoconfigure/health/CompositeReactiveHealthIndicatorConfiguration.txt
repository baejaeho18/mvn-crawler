Compiled from "CompositeReactiveHealthIndicatorConfiguration.java"
public abstract class org.springframework.boot.actuate.autoconfigure.health.CompositeReactiveHealthIndicatorConfiguration<H extends org.springframework.boot.actuate.health.ReactiveHealthIndicator, S> {
  private org.springframework.boot.actuate.health.HealthAggregator healthAggregator;

  public org.springframework.boot.actuate.autoconfigure.health.CompositeReactiveHealthIndicatorConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  protected org.springframework.boot.actuate.health.ReactiveHealthIndicator createHealthIndicator(java.util.Map<java.lang.String, S>);
    Code:
       0: aload_1
       1: invokeinterface #2,  1            // InterfaceMethod java/util/Map.size:()I
       6: iconst_1
       7: if_icmpne     31
      10: aload_0
      11: aload_1
      12: invokeinterface #3,  1            // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      17: invokeinterface #4,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: invokevirtual #6                  // Method createHealthIndicator:(Ljava/lang/Object;)Lorg/springframework/boot/actuate/health/ReactiveHealthIndicator;
      30: areturn
      31: new           #7                  // class org/springframework/boot/actuate/health/CompositeReactiveHealthIndicator
      34: dup
      35: aload_0
      36: getfield      #8                  // Field healthAggregator:Lorg/springframework/boot/actuate/health/HealthAggregator;
      39: invokespecial #9                  // Method org/springframework/boot/actuate/health/CompositeReactiveHealthIndicator."<init>":(Lorg/springframework/boot/actuate/health/HealthAggregator;)V
      42: astore_2
      43: aload_1
      44: aload_0
      45: aload_2
      46: invokedynamic #10,  0             // InvokeDynamic #0:accept:(Lorg/springframework/boot/actuate/autoconfigure/health/CompositeReactiveHealthIndicatorConfiguration;Lorg/springframework/boot/actuate/health/CompositeReactiveHealthIndicator;)Ljava/util/function/BiConsumer;
      51: invokeinterface #11,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      56: aload_2
      57: areturn

  protected H createHealthIndicator(S);
    Code:
       0: ldc           #12                 // class org/springframework/boot/actuate/autoconfigure/health/CompositeReactiveHealthIndicatorConfiguration
       2: aload_0
       3: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: invokestatic  #14                 // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
       9: invokevirtual #15                 // Method org/springframework/core/ResolvableType.resolveGenerics:()[Ljava/lang/Class;
      12: astore_2
      13: aload_2
      14: iconst_0
      15: aaload
      16: astore_3
      17: aload_2
      18: iconst_1
      19: aaload
      20: astore        4
      22: aload_3
      23: iconst_1
      24: anewarray     #16                 // class java/lang/Class
      27: dup
      28: iconst_0
      29: aload         4
      31: aastore
      32: invokevirtual #17                 // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      35: iconst_1
      36: anewarray     #18                 // class java/lang/Object
      39: dup
      40: iconst_0
      41: aload_1
      42: aastore
      43: invokevirtual #19                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #20                 // class org/springframework/boot/actuate/health/ReactiveHealthIndicator
      49: areturn
      50: astore        5
      52: new           #22                 // class java/lang/IllegalStateException
      55: dup
      56: new           #23                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #25                 // String Unable to create indicator
      65: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_3
      69: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: ldc           #28                 // String  for source
      74: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload         4
      79: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      82: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: aload         5
      87: invokespecial #30                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      90: athrow
    Exception table:
       from    to  target type
          22    49    50   Class java/lang/Exception

  private void lambda$createHealthIndicator$0(org.springframework.boot.actuate.health.CompositeReactiveHealthIndicator, java.lang.String, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: aload_3
       4: invokevirtual #6                  // Method createHealthIndicator:(Ljava/lang/Object;)Lorg/springframework/boot/actuate/health/ReactiveHealthIndicator;
       7: invokevirtual #31                 // Method org/springframework/boot/actuate/health/CompositeReactiveHealthIndicator.addHealthIndicator:(Ljava/lang/String;Lorg/springframework/boot/actuate/health/ReactiveHealthIndicator;)Lorg/springframework/boot/actuate/health/CompositeReactiveHealthIndicator;
      10: pop
      11: return
}
