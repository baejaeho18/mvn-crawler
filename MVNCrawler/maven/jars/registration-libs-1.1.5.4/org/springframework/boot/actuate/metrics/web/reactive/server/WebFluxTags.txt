Compiled from "WebFluxTags.java"
public final class org.springframework.boot.actuate.metrics.web.reactive.server.WebFluxTags {
  private static final io.micrometer.core.instrument.Tag URI_NOT_FOUND;

  private static final io.micrometer.core.instrument.Tag URI_REDIRECTION;

  private org.springframework.boot.actuate.metrics.web.reactive.server.WebFluxTags();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static io.micrometer.core.instrument.Tag method(org.springframework.web.server.ServerWebExchange);
    Code:
       0: ldc           #2                  // String method
       2: aload_0
       3: invokeinterface #3,  1            // InterfaceMethod org/springframework/web/server/ServerWebExchange.getRequest:()Lorg/springframework/http/server/reactive/ServerHttpRequest;
       8: invokeinterface #4,  1            // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getMethod:()Lorg/springframework/http/HttpMethod;
      13: invokevirtual #5                  // Method org/springframework/http/HttpMethod.toString:()Ljava/lang/String;
      16: invokestatic  #6                  // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      19: areturn

  public static io.micrometer.core.instrument.Tag status(org.springframework.web.server.ServerWebExchange);
    Code:
       0: aload_0
       1: invokeinterface #7,  1            // InterfaceMethod org/springframework/web/server/ServerWebExchange.getResponse:()Lorg/springframework/http/server/reactive/ServerHttpResponse;
       6: invokeinterface #8,  1            // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.getStatusCode:()Lorg/springframework/http/HttpStatus;
      11: astore_1
      12: aload_1
      13: ifnonnull     20
      16: getstatic     #9                  // Field org/springframework/http/HttpStatus.OK:Lorg/springframework/http/HttpStatus;
      19: astore_1
      20: ldc           #10                 // String status
      22: aload_1
      23: invokevirtual #11                 // Method org/springframework/http/HttpStatus.toString:()Ljava/lang/String;
      26: invokestatic  #6                  // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      29: areturn

  public static io.micrometer.core.instrument.Tag uri(org.springframework.web.server.ServerWebExchange);
    Code:
       0: aload_0
       1: ifnull        112
       4: aload_0
       5: getstatic     #12                 // Field org/springframework/web/reactive/HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE:Ljava/lang/String;
       8: invokeinterface #13,  2           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      13: checkcast     #14                 // class org/springframework/web/util/pattern/PathPattern
      16: astore_1
      17: aload_1
      18: ifnull        31
      21: ldc           #15                 // String uri
      23: aload_1
      24: invokevirtual #16                 // Method org/springframework/web/util/pattern/PathPattern.getPatternString:()Ljava/lang/String;
      27: invokestatic  #6                  // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      30: areturn
      31: aload_0
      32: invokeinterface #7,  1            // InterfaceMethod org/springframework/web/server/ServerWebExchange.getResponse:()Lorg/springframework/http/server/reactive/ServerHttpResponse;
      37: invokeinterface #8,  1            // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.getStatusCode:()Lorg/springframework/http/HttpStatus;
      42: astore_2
      43: aload_2
      44: ifnull        58
      47: aload_2
      48: invokevirtual #17                 // Method org/springframework/http/HttpStatus.is3xxRedirection:()Z
      51: ifeq          58
      54: getstatic     #18                 // Field URI_REDIRECTION:Lio/micrometer/core/instrument/Tag;
      57: areturn
      58: aload_2
      59: ifnull        76
      62: aload_2
      63: getstatic     #19                 // Field org/springframework/http/HttpStatus.NOT_FOUND:Lorg/springframework/http/HttpStatus;
      66: invokevirtual #20                 // Method org/springframework/http/HttpStatus.equals:(Ljava/lang/Object;)Z
      69: ifeq          76
      72: getstatic     #21                 // Field URI_NOT_FOUND:Lio/micrometer/core/instrument/Tag;
      75: areturn
      76: aload_0
      77: invokeinterface #3,  1            // InterfaceMethod org/springframework/web/server/ServerWebExchange.getRequest:()Lorg/springframework/http/server/reactive/ServerHttpRequest;
      82: invokeinterface #22,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getPath:()Lorg/springframework/http/server/RequestPath;
      87: invokeinterface #23,  1           // InterfaceMethod org/springframework/http/server/RequestPath.value:()Ljava/lang/String;
      92: astore_3
      93: ldc           #15                 // String uri
      95: aload_3
      96: invokevirtual #24                 // Method java/lang/String.isEmpty:()Z
      99: ifeq          107
     102: ldc           #25                 // String root
     104: goto          108
     107: aload_3
     108: invokestatic  #6                  // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
     111: areturn
     112: ldc           #15                 // String uri
     114: ldc           #26                 // String UNKNOWN
     116: invokestatic  #6                  // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
     119: areturn

  public static io.micrometer.core.instrument.Tag exception(java.lang.Throwable);
    Code:
       0: aload_0
       1: ifnull        17
       4: ldc           #27                 // String exception
       6: aload_0
       7: invokevirtual #28                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: invokevirtual #29                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      13: invokestatic  #6                  // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      16: areturn
      17: ldc           #27                 // String exception
      19: ldc           #30                 // String none
      21: invokestatic  #6                  // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      24: areturn

  static {};
    Code:
       0: ldc           #15                 // String uri
       2: ldc           #31                 // String NOT_FOUND
       4: invokestatic  #6                  // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
       7: putstatic     #21                 // Field URI_NOT_FOUND:Lio/micrometer/core/instrument/Tag;
      10: ldc           #15                 // String uri
      12: ldc           #32                 // String REDIRECTION
      14: invokestatic  #6                  // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      17: putstatic     #18                 // Field URI_REDIRECTION:Lio/micrometer/core/instrument/Tag;
      20: return
}
