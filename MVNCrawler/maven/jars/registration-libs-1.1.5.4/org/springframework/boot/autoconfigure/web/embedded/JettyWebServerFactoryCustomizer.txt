Compiled from "JettyWebServerFactoryCustomizer.java"
public class org.springframework.boot.autoconfigure.web.embedded.JettyWebServerFactoryCustomizer implements org.springframework.boot.web.server.WebServerFactoryCustomizer<org.springframework.boot.web.embedded.jetty.ConfigurableJettyWebServerFactory>, org.springframework.core.Ordered {
  private final org.springframework.core.env.Environment environment;

  private final org.springframework.boot.autoconfigure.web.ServerProperties serverProperties;

  public org.springframework.boot.autoconfigure.web.embedded.JettyWebServerFactoryCustomizer(org.springframework.core.env.Environment, org.springframework.boot.autoconfigure.web.ServerProperties);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field environment:Lorg/springframework/core/env/Environment;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field serverProperties:Lorg/springframework/boot/autoconfigure/web/ServerProperties;
      14: return

  public int getOrder();
    Code:
       0: iconst_0
       1: ireturn

  public void customize(org.springframework.boot.web.embedded.jetty.ConfigurableJettyWebServerFactory);
    Code:
       0: aload_0
       1: getfield      #3                  // Field serverProperties:Lorg/springframework/boot/autoconfigure/web/ServerProperties;
       4: astore_2
       5: aload_2
       6: invokevirtual #4                  // Method org/springframework/boot/autoconfigure/web/ServerProperties.getJetty:()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Jetty;
       9: astore_3
      10: aload_1
      11: aload_0
      12: aload_2
      13: aload_0
      14: getfield      #2                  // Field environment:Lorg/springframework/core/env/Environment;
      17: invokespecial #5                  // Method getOrDeduceUseForwardHeaders:(Lorg/springframework/boot/autoconfigure/web/ServerProperties;Lorg/springframework/core/env/Environment;)Z
      20: invokeinterface #6,  2            // InterfaceMethod org/springframework/boot/web/embedded/jetty/ConfigurableJettyWebServerFactory.setUseForwardHeaders:(Z)V
      25: invokestatic  #7                  // Method org/springframework/boot/context/properties/PropertyMapper.get:()Lorg/springframework/boot/context/properties/PropertyMapper;
      28: astore        4
      30: aload         4
      32: aload_3
      33: dup
      34: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      37: pop
      38: invokedynamic #9,  0              // InvokeDynamic #0:get:(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Jetty;)Ljava/util/function/Supplier;
      43: invokevirtual #10                 // Method org/springframework/boot/context/properties/PropertyMapper.from:(Ljava/util/function/Supplier;)Lorg/springframework/boot/context/properties/PropertyMapper$Source;
      46: invokevirtual #11                 // Method org/springframework/boot/context/properties/PropertyMapper$Source.whenNonNull:()Lorg/springframework/boot/context/properties/PropertyMapper$Source;
      49: aload_1
      50: dup
      51: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      54: pop
      55: invokedynamic #12,  0             // InvokeDynamic #1:accept:(Lorg/springframework/boot/web/embedded/jetty/ConfigurableJettyWebServerFactory;)Ljava/util/function/Consumer;
      60: invokevirtual #13                 // Method org/springframework/boot/context/properties/PropertyMapper$Source.to:(Ljava/util/function/Consumer;)V
      63: aload         4
      65: aload_3
      66: dup
      67: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      70: pop
      71: invokedynamic #14,  0             // InvokeDynamic #2:get:(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Jetty;)Ljava/util/function/Supplier;
      76: invokevirtual #10                 // Method org/springframework/boot/context/properties/PropertyMapper.from:(Ljava/util/function/Supplier;)Lorg/springframework/boot/context/properties/PropertyMapper$Source;
      79: invokevirtual #11                 // Method org/springframework/boot/context/properties/PropertyMapper$Source.whenNonNull:()Lorg/springframework/boot/context/properties/PropertyMapper$Source;
      82: aload_1
      83: dup
      84: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      87: pop
      88: invokedynamic #15,  0             // InvokeDynamic #3:accept:(Lorg/springframework/boot/web/embedded/jetty/ConfigurableJettyWebServerFactory;)Ljava/util/function/Consumer;
      93: invokevirtual #13                 // Method org/springframework/boot/context/properties/PropertyMapper$Source.to:(Ljava/util/function/Consumer;)V
      96: aload         4
      98: aload_2
      99: dup
     100: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
     103: pop
     104: invokedynamic #16,  0             // InvokeDynamic #4:get:(Lorg/springframework/boot/autoconfigure/web/ServerProperties;)Ljava/util/function/Supplier;
     109: invokevirtual #10                 // Method org/springframework/boot/context/properties/PropertyMapper.from:(Ljava/util/function/Supplier;)Lorg/springframework/boot/context/properties/PropertyMapper$Source;
     112: aload_0
     113: invokedynamic #17,  0             // InvokeDynamic #5:test:(Lorg/springframework/boot/autoconfigure/web/embedded/JettyWebServerFactoryCustomizer;)Ljava/util/function/Predicate;
     118: invokevirtual #18                 // Method org/springframework/boot/context/properties/PropertyMapper$Source.when:(Ljava/util/function/Predicate;)Lorg/springframework/boot/context/properties/PropertyMapper$Source;
     121: aload_0
     122: aload_1
     123: invokedynamic #19,  0             // InvokeDynamic #6:accept:(Lorg/springframework/boot/autoconfigure/web/embedded/JettyWebServerFactoryCustomizer;Lorg/springframework/boot/web/embedded/jetty/ConfigurableJettyWebServerFactory;)Ljava/util/function/Consumer;
     128: invokevirtual #13                 // Method org/springframework/boot/context/properties/PropertyMapper$Source.to:(Ljava/util/function/Consumer;)V
     131: aload         4
     133: aload_3
     134: dup
     135: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
     138: pop
     139: invokedynamic #20,  0             // InvokeDynamic #7:get:(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Jetty;)Ljava/util/function/Supplier;
     144: invokevirtual #10                 // Method org/springframework/boot/context/properties/PropertyMapper.from:(Ljava/util/function/Supplier;)Lorg/springframework/boot/context/properties/PropertyMapper$Source;
     147: aload_0
     148: invokedynamic #17,  0             // InvokeDynamic #5:test:(Lorg/springframework/boot/autoconfigure/web/embedded/JettyWebServerFactoryCustomizer;)Ljava/util/function/Predicate;
     153: invokevirtual #18                 // Method org/springframework/boot/context/properties/PropertyMapper$Source.when:(Ljava/util/function/Predicate;)Lorg/springframework/boot/context/properties/PropertyMapper$Source;
     156: aload_0
     157: aload_1
     158: invokedynamic #21,  0             // InvokeDynamic #8:accept:(Lorg/springframework/boot/autoconfigure/web/embedded/JettyWebServerFactoryCustomizer;Lorg/springframework/boot/web/embedded/jetty/ConfigurableJettyWebServerFactory;)Ljava/util/function/Consumer;
     163: invokevirtual #13                 // Method org/springframework/boot/context/properties/PropertyMapper$Source.to:(Ljava/util/function/Consumer;)V
     166: aload         4
     168: aload_2
     169: dup
     170: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
     173: pop
     174: invokedynamic #22,  0             // InvokeDynamic #9:get:(Lorg/springframework/boot/autoconfigure/web/ServerProperties;)Ljava/util/function/Supplier;
     179: invokevirtual #10                 // Method org/springframework/boot/context/properties/PropertyMapper.from:(Ljava/util/function/Supplier;)Lorg/springframework/boot/context/properties/PropertyMapper$Source;
     182: invokevirtual #11                 // Method org/springframework/boot/context/properties/PropertyMapper$Source.whenNonNull:()Lorg/springframework/boot/context/properties/PropertyMapper$Source;
     185: aload_0
     186: aload_1
     187: invokedynamic #23,  0             // InvokeDynamic #10:accept:(Lorg/springframework/boot/autoconfigure/web/embedded/JettyWebServerFactoryCustomizer;Lorg/springframework/boot/web/embedded/jetty/ConfigurableJettyWebServerFactory;)Ljava/util/function/Consumer;
     192: invokevirtual #13                 // Method org/springframework/boot/context/properties/PropertyMapper$Source.to:(Ljava/util/function/Consumer;)V
     195: aload         4
     197: aload_3
     198: dup
     199: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
     202: pop
     203: invokedynamic #24,  0             // InvokeDynamic #11:get:(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Jetty;)Ljava/util/function/Supplier;
     208: invokevirtual #10                 // Method org/springframework/boot/context/properties/PropertyMapper.from:(Ljava/util/function/Supplier;)Lorg/springframework/boot/context/properties/PropertyMapper$Source;
     211: invokedynamic #25,  0             // InvokeDynamic #12:test:()Ljava/util/function/Predicate;
     216: invokevirtual #18                 // Method org/springframework/boot/context/properties/PropertyMapper$Source.when:(Ljava/util/function/Predicate;)Lorg/springframework/boot/context/properties/PropertyMapper$Source;
     219: aload_0
     220: aload_1
     221: invokedynamic #26,  0             // InvokeDynamic #13:accept:(Lorg/springframework/boot/autoconfigure/web/embedded/JettyWebServerFactoryCustomizer;Lorg/springframework/boot/web/embedded/jetty/ConfigurableJettyWebServerFactory;)Ljava/util/function/Consumer;
     226: invokevirtual #13                 // Method org/springframework/boot/context/properties/PropertyMapper$Source.to:(Ljava/util/function/Consumer;)V
     229: return

  private boolean isPositive(java.lang.Integer);
    Code:
       0: aload_1
       1: invokevirtual #27                 // Method java/lang/Integer.intValue:()I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private boolean getOrDeduceUseForwardHeaders(org.springframework.boot.autoconfigure.web.ServerProperties, org.springframework.core.env.Environment);
    Code:
       0: aload_1
       1: invokevirtual #28                 // Method org/springframework/boot/autoconfigure/web/ServerProperties.isUseForwardHeaders:()Ljava/lang/Boolean;
       4: ifnull        15
       7: aload_1
       8: invokevirtual #28                 // Method org/springframework/boot/autoconfigure/web/ServerProperties.isUseForwardHeaders:()Ljava/lang/Boolean;
      11: invokevirtual #29                 // Method java/lang/Boolean.booleanValue:()Z
      14: ireturn
      15: aload_2
      16: invokestatic  #30                 // Method org/springframework/boot/cloud/CloudPlatform.getActive:(Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/cloud/CloudPlatform;
      19: astore_3
      20: aload_3
      21: ifnull        35
      24: aload_3
      25: invokevirtual #31                 // Method org/springframework/boot/cloud/CloudPlatform.isUsingForwardHeaders:()Z
      28: ifeq          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  private void customizeConnectionTimeout(org.springframework.boot.web.embedded.jetty.ConfigurableJettyWebServerFactory, java.time.Duration);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #32                 // class org/springframework/boot/web/embedded/jetty/JettyServerCustomizer
       5: dup
       6: iconst_0
       7: aload_2
       8: invokedynamic #33,  0             // InvokeDynamic #14:customize:(Ljava/time/Duration;)Lorg/springframework/boot/web/embedded/jetty/JettyServerCustomizer;
      13: aastore
      14: invokeinterface #34,  2           // InterfaceMethod org/springframework/boot/web/embedded/jetty/ConfigurableJettyWebServerFactory.addServerCustomizers:([Lorg/springframework/boot/web/embedded/jetty/JettyServerCustomizer;)V
      19: return

  private void customizeMaxHttpHeaderSize(org.springframework.boot.web.embedded.jetty.ConfigurableJettyWebServerFactory, int);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #32                 // class org/springframework/boot/web/embedded/jetty/JettyServerCustomizer
       5: dup
       6: iconst_0
       7: new           #35                 // class org/springframework/boot/autoconfigure/web/embedded/JettyWebServerFactoryCustomizer$1
      10: dup
      11: aload_0
      12: iload_2
      13: invokespecial #36                 // Method org/springframework/boot/autoconfigure/web/embedded/JettyWebServerFactoryCustomizer$1."<init>":(Lorg/springframework/boot/autoconfigure/web/embedded/JettyWebServerFactoryCustomizer;I)V
      16: aastore
      17: invokeinterface #34,  2           // InterfaceMethod org/springframework/boot/web/embedded/jetty/ConfigurableJettyWebServerFactory.addServerCustomizers:([Lorg/springframework/boot/web/embedded/jetty/JettyServerCustomizer;)V
      22: return

  private void customizeMaxHttpPostSize(org.springframework.boot.web.embedded.jetty.ConfigurableJettyWebServerFactory, int);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #32                 // class org/springframework/boot/web/embedded/jetty/JettyServerCustomizer
       5: dup
       6: iconst_0
       7: new           #37                 // class org/springframework/boot/autoconfigure/web/embedded/JettyWebServerFactoryCustomizer$2
      10: dup
      11: aload_0
      12: iload_2
      13: invokespecial #38                 // Method org/springframework/boot/autoconfigure/web/embedded/JettyWebServerFactoryCustomizer$2."<init>":(Lorg/springframework/boot/autoconfigure/web/embedded/JettyWebServerFactoryCustomizer;I)V
      16: aastore
      17: invokeinterface #34,  2           // InterfaceMethod org/springframework/boot/web/embedded/jetty/ConfigurableJettyWebServerFactory.addServerCustomizers:([Lorg/springframework/boot/web/embedded/jetty/JettyServerCustomizer;)V
      22: return

  private void customizeAccessLog(org.springframework.boot.web.embedded.jetty.ConfigurableJettyWebServerFactory, org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #32                 // class org/springframework/boot/web/embedded/jetty/JettyServerCustomizer
       5: dup
       6: iconst_0
       7: aload_2
       8: invokedynamic #39,  0             // InvokeDynamic #15:customize:(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog;)Lorg/springframework/boot/web/embedded/jetty/JettyServerCustomizer;
      13: aastore
      14: invokeinterface #34,  2           // InterfaceMethod org/springframework/boot/web/embedded/jetty/ConfigurableJettyWebServerFactory.addServerCustomizers:([Lorg/springframework/boot/web/embedded/jetty/JettyServerCustomizer;)V
      19: return

  public void customize(org.springframework.boot.web.server.WebServerFactory);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #40                 // class org/springframework/boot/web/embedded/jetty/ConfigurableJettyWebServerFactory
       5: invokevirtual #41                 // Method customize:(Lorg/springframework/boot/web/embedded/jetty/ConfigurableJettyWebServerFactory;)V
       8: return

  private static void lambda$customizeAccessLog$5(org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog, org.eclipse.jetty.server.Server);
    Code:
       0: new           #42                 // class org/eclipse/jetty/server/NCSARequestLog
       3: dup
       4: invokespecial #43                 // Method org/eclipse/jetty/server/NCSARequestLog."<init>":()V
       7: astore_2
       8: aload_0
       9: invokevirtual #44                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog.getFilename:()Ljava/lang/String;
      12: ifnull        23
      15: aload_2
      16: aload_0
      17: invokevirtual #44                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog.getFilename:()Ljava/lang/String;
      20: invokevirtual #45                 // Method org/eclipse/jetty/server/NCSARequestLog.setFilename:(Ljava/lang/String;)V
      23: aload_0
      24: invokevirtual #46                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog.getFileDateFormat:()Ljava/lang/String;
      27: ifnull        38
      30: aload_2
      31: aload_0
      32: invokevirtual #46                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog.getFileDateFormat:()Ljava/lang/String;
      35: invokevirtual #47                 // Method org/eclipse/jetty/server/NCSARequestLog.setFilenameDateFormat:(Ljava/lang/String;)V
      38: aload_2
      39: aload_0
      40: invokevirtual #48                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog.getRetentionPeriod:()I
      43: invokevirtual #49                 // Method org/eclipse/jetty/server/NCSARequestLog.setRetainDays:(I)V
      46: aload_2
      47: aload_0
      48: invokevirtual #50                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog.isAppend:()Z
      51: invokevirtual #51                 // Method org/eclipse/jetty/server/NCSARequestLog.setAppend:(Z)V
      54: aload_2
      55: aload_0
      56: invokevirtual #52                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog.isExtendedFormat:()Z
      59: invokevirtual #53                 // Method org/eclipse/jetty/server/NCSARequestLog.setExtended:(Z)V
      62: aload_0
      63: invokevirtual #54                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog.getDateFormat:()Ljava/lang/String;
      66: ifnull        77
      69: aload_2
      70: aload_0
      71: invokevirtual #54                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog.getDateFormat:()Ljava/lang/String;
      74: invokevirtual #55                 // Method org/eclipse/jetty/server/NCSARequestLog.setLogDateFormat:(Ljava/lang/String;)V
      77: aload_0
      78: invokevirtual #56                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog.getLocale:()Ljava/util/Locale;
      81: ifnull        92
      84: aload_2
      85: aload_0
      86: invokevirtual #56                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog.getLocale:()Ljava/util/Locale;
      89: invokevirtual #57                 // Method org/eclipse/jetty/server/NCSARequestLog.setLogLocale:(Ljava/util/Locale;)V
      92: aload_0
      93: invokevirtual #58                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog.getTimeZone:()Ljava/util/TimeZone;
      96: ifnull        110
      99: aload_2
     100: aload_0
     101: invokevirtual #58                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog.getTimeZone:()Ljava/util/TimeZone;
     104: invokevirtual #59                 // Method java/util/TimeZone.getID:()Ljava/lang/String;
     107: invokevirtual #60                 // Method org/eclipse/jetty/server/NCSARequestLog.setLogTimeZone:(Ljava/lang/String;)V
     110: aload_2
     111: aload_0
     112: invokevirtual #61                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog.isLogCookies:()Z
     115: invokevirtual #62                 // Method org/eclipse/jetty/server/NCSARequestLog.setLogCookies:(Z)V
     118: aload_2
     119: aload_0
     120: invokevirtual #63                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog.isLogServer:()Z
     123: invokevirtual #64                 // Method org/eclipse/jetty/server/NCSARequestLog.setLogServer:(Z)V
     126: aload_2
     127: aload_0
     128: invokevirtual #65                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog.isLogLatency:()Z
     131: invokevirtual #66                 // Method org/eclipse/jetty/server/NCSARequestLog.setLogLatency:(Z)V
     134: aload_1
     135: aload_2
     136: invokevirtual #67                 // Method org/eclipse/jetty/server/Server.setRequestLog:(Lorg/eclipse/jetty/server/RequestLog;)V
     139: return

  private static void lambda$customizeConnectionTimeout$4(java.time.Duration, org.eclipse.jetty.server.Server);
    Code:
       0: aload_1
       1: invokevirtual #68                 // Method org/eclipse/jetty/server/Server.getConnectors:()[Lorg/eclipse/jetty/server/Connector;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     49
      17: aload_2
      18: iload         4
      20: aaload
      21: astore        5
      23: aload         5
      25: instanceof    #69                 // class org/eclipse/jetty/server/AbstractConnector
      28: ifeq          43
      31: aload         5
      33: checkcast     #69                 // class org/eclipse/jetty/server/AbstractConnector
      36: aload_0
      37: invokevirtual #70                 // Method java/time/Duration.toMillis:()J
      40: invokevirtual #71                 // Method org/eclipse/jetty/server/AbstractConnector.setIdleTimeout:(J)V
      43: iinc          4, 1
      46: goto          11
      49: return

  private void lambda$customize$3(org.springframework.boot.web.embedded.jetty.ConfigurableJettyWebServerFactory, org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #72                 // Method customizeAccessLog:(Lorg/springframework/boot/web/embedded/jetty/ConfigurableJettyWebServerFactory;Lorg/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog;)V
       6: return

  private void lambda$customize$2(org.springframework.boot.web.embedded.jetty.ConfigurableJettyWebServerFactory, java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #73                 // Method customizeConnectionTimeout:(Lorg/springframework/boot/web/embedded/jetty/ConfigurableJettyWebServerFactory;Ljava/time/Duration;)V
       6: return

  private void lambda$customize$1(org.springframework.boot.web.embedded.jetty.ConfigurableJettyWebServerFactory, java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #27                 // Method java/lang/Integer.intValue:()I
       6: invokespecial #74                 // Method customizeMaxHttpPostSize:(Lorg/springframework/boot/web/embedded/jetty/ConfigurableJettyWebServerFactory;I)V
       9: return

  private void lambda$customize$0(org.springframework.boot.web.embedded.jetty.ConfigurableJettyWebServerFactory, java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #27                 // Method java/lang/Integer.intValue:()I
       6: invokespecial #75                 // Method customizeMaxHttpHeaderSize:(Lorg/springframework/boot/web/embedded/jetty/ConfigurableJettyWebServerFactory;I)V
       9: return
}
