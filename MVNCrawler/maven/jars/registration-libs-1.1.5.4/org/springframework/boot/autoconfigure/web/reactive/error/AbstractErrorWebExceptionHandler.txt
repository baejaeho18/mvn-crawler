Compiled from "AbstractErrorWebExceptionHandler.java"
public abstract class org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler implements org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler,org.springframework.beans.factory.InitializingBean {
  private final org.springframework.context.ApplicationContext applicationContext;

  private final org.springframework.boot.web.reactive.error.ErrorAttributes errorAttributes;

  private final org.springframework.boot.autoconfigure.web.ResourceProperties resourceProperties;

  private final org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders templateAvailabilityProviders;

  private java.util.List<org.springframework.http.codec.HttpMessageReader<?>> messageReaders;

  private java.util.List<org.springframework.http.codec.HttpMessageWriter<?>> messageWriters;

  private java.util.List<org.springframework.web.reactive.result.view.ViewResolver> viewResolvers;

  public org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler(org.springframework.boot.web.reactive.error.ErrorAttributes, org.springframework.boot.autoconfigure.web.ResourceProperties, org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #4                  // Method java/util/Collections.emptyList:()Ljava/util/List;
       8: putfield      #5                  // Field messageReaders:Ljava/util/List;
      11: aload_0
      12: invokestatic  #4                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      15: putfield      #2                  // Field messageWriters:Ljava/util/List;
      18: aload_0
      19: invokestatic  #4                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      22: putfield      #1                  // Field viewResolvers:Ljava/util/List;
      25: aload_1
      26: ldc           #6                  // String ErrorAttributes must not be null
      28: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      31: aload_2
      32: ldc           #8                  // String ResourceProperties must not be null
      34: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      37: aload_3
      38: ldc           #9                  // String ApplicationContext must not be null
      40: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      43: aload_0
      44: aload_1
      45: putfield      #10                 // Field errorAttributes:Lorg/springframework/boot/web/reactive/error/ErrorAttributes;
      48: aload_0
      49: aload_2
      50: putfield      #11                 // Field resourceProperties:Lorg/springframework/boot/autoconfigure/web/ResourceProperties;
      53: aload_0
      54: aload_3
      55: putfield      #12                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      58: aload_0
      59: new           #13                 // class org/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders
      62: dup
      63: aload_3
      64: invokespecial #14                 // Method org/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders."<init>":(Lorg/springframework/context/ApplicationContext;)V
      67: putfield      #15                 // Field templateAvailabilityProviders:Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;
      70: return

  public void setMessageWriters(java.util.List<org.springframework.http.codec.HttpMessageWriter<?>>);
    Code:
       0: aload_1
       1: ldc           #16                 // String \'messageWriters\' must not be null
       3: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #2                  // Field messageWriters:Ljava/util/List;
      11: return

  public void setMessageReaders(java.util.List<org.springframework.http.codec.HttpMessageReader<?>>);
    Code:
       0: aload_1
       1: ldc           #17                 // String \'messageReaders\' must not be null
       3: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #5                  // Field messageReaders:Ljava/util/List;
      11: return

  public void setViewResolvers(java.util.List<org.springframework.web.reactive.result.view.ViewResolver>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field viewResolvers:Ljava/util/List;
       5: return

  protected java.util.Map<java.lang.String, java.lang.Object> getErrorAttributes(org.springframework.web.reactive.function.server.ServerRequest, boolean);
    Code:
       0: aload_0
       1: getfield      #10                 // Field errorAttributes:Lorg/springframework/boot/web/reactive/error/ErrorAttributes;
       4: aload_1
       5: iload_2
       6: invokeinterface #18,  3           // InterfaceMethod org/springframework/boot/web/reactive/error/ErrorAttributes.getErrorAttributes:(Lorg/springframework/web/reactive/function/server/ServerRequest;Z)Ljava/util/Map;
      11: areturn

  protected java.lang.Throwable getError(org.springframework.web.reactive.function.server.ServerRequest);
    Code:
       0: aload_0
       1: getfield      #10                 // Field errorAttributes:Lorg/springframework/boot/web/reactive/error/ErrorAttributes;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod org/springframework/boot/web/reactive/error/ErrorAttributes.getError:(Lorg/springframework/web/reactive/function/server/ServerRequest;)Ljava/lang/Throwable;
      10: areturn

  protected boolean isTraceEnabled(org.springframework.web.reactive.function.server.ServerRequest);
    Code:
       0: aload_1
       1: ldc           #20                 // String trace
       3: invokeinterface #21,  2           // InterfaceMethod org/springframework/web/reactive/function/server/ServerRequest.queryParam:(Ljava/lang/String;)Ljava/util/Optional;
       8: ldc           #22                 // String false
      10: invokevirtual #23                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #24                 // class java/lang/String
      16: astore_2
      17: ldc           #22                 // String false
      19: aload_2
      20: invokevirtual #25                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      23: ifne          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  protected reactor.core.publisher.Mono<org.springframework.web.reactive.function.server.ServerResponse> renderErrorView(java.lang.String, org.springframework.web.reactive.function.server.ServerResponse$BodyBuilder, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #26                 // Method isTemplateAvailable:(Ljava/lang/String;)Z
       5: ifeq          17
       8: aload_2
       9: aload_1
      10: aload_3
      11: invokeinterface #27,  3           // InterfaceMethod org/springframework/web/reactive/function/server/ServerResponse$BodyBuilder.render:(Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Mono;
      16: areturn
      17: aload_0
      18: aload_1
      19: invokespecial #28                 // Method resolveResource:(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
      22: astore        4
      24: aload         4
      26: ifnull        41
      29: aload_2
      30: aload         4
      32: invokestatic  #29                 // Method org/springframework/web/reactive/function/BodyInserters.fromResource:(Lorg/springframework/core/io/Resource;)Lorg/springframework/web/reactive/function/BodyInserter;
      35: invokeinterface #30,  2           // InterfaceMethod org/springframework/web/reactive/function/server/ServerResponse$BodyBuilder.body:(Lorg/springframework/web/reactive/function/BodyInserter;)Lreactor/core/publisher/Mono;
      40: areturn
      41: invokestatic  #31                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      44: areturn

  private boolean isTemplateAvailable(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field templateAvailabilityProviders:Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders;
       4: aload_1
       5: aload_0
       6: getfield      #12                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       9: invokevirtual #32                 // Method org/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders.getProvider:(Ljava/lang/String;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProvider;
      12: ifnull        19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  private org.springframework.core.io.Resource resolveResource(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field resourceProperties:Lorg/springframework/boot/autoconfigure/web/ResourceProperties;
       4: invokevirtual #33                 // Method org/springframework/boot/autoconfigure/web/ResourceProperties.getStaticLocations:()[Ljava/lang/String;
       7: astore_2
       8: aload_2
       9: arraylength
      10: istore_3
      11: iconst_0
      12: istore        4
      14: iload         4
      16: iload_3
      17: if_icmpge     91
      20: aload_2
      21: iload         4
      23: aaload
      24: astore        5
      26: aload_0
      27: getfield      #12                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      30: aload         5
      32: invokeinterface #34,  2           // InterfaceMethod org/springframework/context/ApplicationContext.getResource:(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
      37: astore        6
      39: aload         6
      41: new           #35                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      48: aload_1
      49: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #38                 // String .html
      54: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokeinterface #40,  2           // InterfaceMethod org/springframework/core/io/Resource.createRelative:(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
      65: astore        6
      67: aload         6
      69: invokeinterface #41,  1           // InterfaceMethod org/springframework/core/io/Resource.exists:()Z
      74: ifeq          80
      77: aload         6
      79: areturn
      80: goto          85
      83: astore        6
      85: iinc          4, 1
      88: goto          14
      91: aconst_null
      92: areturn
    Exception table:
       from    to  target type
          26    79    83   Class java/lang/Exception

  protected reactor.core.publisher.Mono<org.springframework.web.reactive.function.server.ServerResponse> renderDefaultErrorView(org.springframework.web.reactive.function.server.ServerResponse$BodyBuilder, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #35                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_3
       8: aload_2
       9: ldc           #43                 // String message
      11: invokeinterface #44,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: astore        4
      18: aload_2
      19: ldc           #45                 // String timestamp
      21: invokeinterface #44,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #46                 // class java/util/Date
      29: astore        5
      31: aload_3
      32: ldc           #47                 // String <html><body><h1>Whitelabel Error Page</h1>
      34: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #48                 // String <p>This application has no configured error view, so you are seeing this as a fallback.</p>
      39: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #49                 // String <div id=\'created\'>
      44: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload         5
      49: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      52: ldc           #51                 // String </div>
      54: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc           #52                 // String <div>There was an unexpected error (type=
      59: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: aload_2
      64: ldc           #53                 // String error
      66: invokeinterface #44,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      71: invokespecial #54                 // Method htmlEscape:(Ljava/lang/Object;)Ljava/lang/String;
      74: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: ldc           #55                 // String , status=
      79: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_0
      83: aload_2
      84: ldc           #56                 // String status
      86: invokeinterface #44,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      91: invokespecial #54                 // Method htmlEscape:(Ljava/lang/Object;)Ljava/lang/String;
      94: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: ldc           #57                 // String ).</div>
      99: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: pop
     103: aload         4
     105: ifnull        129
     108: aload_3
     109: ldc           #58                 // String <div>
     111: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_0
     115: aload         4
     117: invokespecial #54                 // Method htmlEscape:(Ljava/lang/Object;)Ljava/lang/String;
     120: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: ldc           #51                 // String </div>
     125: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: pop
     129: aload_3
     130: ldc           #59                 // String </body></html>
     132: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: pop
     136: aload_1
     137: aload_3
     138: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: invokeinterface #60,  2           // InterfaceMethod org/springframework/web/reactive/function/server/ServerResponse$BodyBuilder.syncBody:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
     146: areturn

  private java.lang.String htmlEscape(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        14
       4: aload_1
       5: invokevirtual #61                 // Method java/lang/Object.toString:()Ljava/lang/String;
       8: invokestatic  #62                 // Method org/springframework/web/util/HtmlUtils.htmlEscape:(Ljava/lang/String;)Ljava/lang/String;
      11: goto          15
      14: aconst_null
      15: areturn

  public void afterPropertiesSet() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field messageWriters:Ljava/util/List;
       4: invokestatic  #63                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       7: ifeq          20
      10: new           #64                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #65                 // String Property \'messageWriters\' is required
      16: invokespecial #66                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: return

  protected abstract org.springframework.web.reactive.function.server.RouterFunction<org.springframework.web.reactive.function.server.ServerResponse> getRoutingFunction(org.springframework.boot.web.reactive.error.ErrorAttributes);

  public reactor.core.publisher.Mono<java.lang.Void> handle(org.springframework.web.server.ServerWebExchange, java.lang.Throwable);
    Code:
       0: aload_1
       1: invokeinterface #67,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getResponse:()Lorg/springframework/http/server/reactive/ServerHttpResponse;
       6: invokeinterface #68,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.isCommitted:()Z
      11: ifeq          19
      14: aload_2
      15: invokestatic  #69                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      18: areturn
      19: aload_0
      20: getfield      #10                 // Field errorAttributes:Lorg/springframework/boot/web/reactive/error/ErrorAttributes;
      23: aload_2
      24: aload_1
      25: invokeinterface #70,  3           // InterfaceMethod org/springframework/boot/web/reactive/error/ErrorAttributes.storeErrorInformation:(Ljava/lang/Throwable;Lorg/springframework/web/server/ServerWebExchange;)V
      30: aload_1
      31: aload_0
      32: getfield      #5                  // Field messageReaders:Ljava/util/List;
      35: invokestatic  #71                 // InterfaceMethod org/springframework/web/reactive/function/server/ServerRequest.create:(Lorg/springframework/web/server/ServerWebExchange;Ljava/util/List;)Lorg/springframework/web/reactive/function/server/ServerRequest;
      38: astore_3
      39: aload_0
      40: aload_0
      41: getfield      #10                 // Field errorAttributes:Lorg/springframework/boot/web/reactive/error/ErrorAttributes;
      44: invokevirtual #72                 // Method getRoutingFunction:(Lorg/springframework/boot/web/reactive/error/ErrorAttributes;)Lorg/springframework/web/reactive/function/server/RouterFunction;
      47: aload_3
      48: invokeinterface #73,  2           // InterfaceMethod org/springframework/web/reactive/function/server/RouterFunction.route:(Lorg/springframework/web/reactive/function/server/ServerRequest;)Lreactor/core/publisher/Mono;
      53: aload_2
      54: invokestatic  #69                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      57: invokevirtual #74                 // Method reactor/core/publisher/Mono.switchIfEmpty:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      60: aload_3
      61: invokedynamic #75,  0             // InvokeDynamic #0:apply:(Lorg/springframework/web/reactive/function/server/ServerRequest;)Ljava/util/function/Function;
      66: invokevirtual #76                 // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      69: aload_0
      70: aload_1
      71: invokedynamic #77,  0             // InvokeDynamic #1:apply:(Lorg/springframework/boot/autoconfigure/web/reactive/error/AbstractErrorWebExceptionHandler;Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/function/Function;
      76: invokevirtual #76                 // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      79: areturn

  private reactor.core.publisher.Mono<? extends java.lang.Void> write(org.springframework.web.server.ServerWebExchange, org.springframework.web.reactive.function.server.ServerResponse);
    Code:
       0: aload_1
       1: invokeinterface #67,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getResponse:()Lorg/springframework/http/server/reactive/ServerHttpResponse;
       6: invokeinterface #78,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.getHeaders:()Lorg/springframework/http/HttpHeaders;
      11: aload_2
      12: invokeinterface #79,  1           // InterfaceMethod org/springframework/web/reactive/function/server/ServerResponse.headers:()Lorg/springframework/http/HttpHeaders;
      17: invokevirtual #80                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      20: invokevirtual #81                 // Method org/springframework/http/HttpHeaders.setContentType:(Lorg/springframework/http/MediaType;)V
      23: aload_2
      24: aload_1
      25: new           #82                 // class org/springframework/boot/autoconfigure/web/reactive/error/AbstractErrorWebExceptionHandler$ResponseContext
      28: dup
      29: aload_0
      30: aconst_null
      31: invokespecial #83                 // Method org/springframework/boot/autoconfigure/web/reactive/error/AbstractErrorWebExceptionHandler$ResponseContext."<init>":(Lorg/springframework/boot/autoconfigure/web/reactive/error/AbstractErrorWebExceptionHandler;Lorg/springframework/boot/autoconfigure/web/reactive/error/AbstractErrorWebExceptionHandler$1;)V
      34: invokeinterface #84,  3           // InterfaceMethod org/springframework/web/reactive/function/server/ServerResponse.writeTo:(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/function/server/ServerResponse$Context;)Lreactor/core/publisher/Mono;
      39: areturn

  private reactor.core.publisher.Mono lambda$handle$1(org.springframework.web.server.ServerWebExchange, org.springframework.web.reactive.function.server.ServerResponse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #85                 // Method write:(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/function/server/ServerResponse;)Lreactor/core/publisher/Mono;
       6: areturn

  private static reactor.core.publisher.Mono lambda$handle$0(org.springframework.web.reactive.function.server.ServerRequest, org.springframework.web.reactive.function.server.HandlerFunction);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #86,  2           // InterfaceMethod org/springframework/web/reactive/function/server/HandlerFunction.handle:(Lorg/springframework/web/reactive/function/server/ServerRequest;)Lreactor/core/publisher/Mono;
       7: areturn

  static java.util.List access$100(org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler);
    Code:
       0: aload_0
       1: getfield      #2                  // Field messageWriters:Ljava/util/List;
       4: areturn

  static java.util.List access$200(org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler);
    Code:
       0: aload_0
       1: getfield      #1                  // Field viewResolvers:Ljava/util/List;
       4: areturn
}
