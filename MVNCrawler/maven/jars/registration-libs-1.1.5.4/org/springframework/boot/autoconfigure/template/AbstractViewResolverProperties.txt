Compiled from "AbstractViewResolverProperties.java"
public abstract class org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties {
  private static final org.springframework.util.MimeType DEFAULT_CONTENT_TYPE;

  private static final java.nio.charset.Charset DEFAULT_CHARSET;

  private boolean enabled;

  private boolean cache;

  private org.springframework.util.MimeType contentType;

  private java.nio.charset.Charset charset;

  private java.lang.String[] viewNames;

  private boolean checkTemplateLocation;

  public org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field enabled:Z
       9: aload_0
      10: getstatic     #3                  // Field DEFAULT_CONTENT_TYPE:Lorg/springframework/util/MimeType;
      13: putfield      #4                  // Field contentType:Lorg/springframework/util/MimeType;
      16: aload_0
      17: getstatic     #5                  // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      20: putfield      #6                  // Field charset:Ljava/nio/charset/Charset;
      23: aload_0
      24: iconst_1
      25: putfield      #7                  // Field checkTemplateLocation:Z
      28: return

  public void setEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field enabled:Z
       5: return

  public boolean isEnabled();
    Code:
       0: aload_0
       1: getfield      #2                  // Field enabled:Z
       4: ireturn

  public void setCheckTemplateLocation(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field checkTemplateLocation:Z
       5: return

  public boolean isCheckTemplateLocation();
    Code:
       0: aload_0
       1: getfield      #7                  // Field checkTemplateLocation:Z
       4: ireturn

  public java.lang.String[] getViewNames();
    Code:
       0: aload_0
       1: getfield      #8                  // Field viewNames:[Ljava/lang/String;
       4: areturn

  public void setViewNames(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field viewNames:[Ljava/lang/String;
       5: return

  public boolean isCache();
    Code:
       0: aload_0
       1: getfield      #9                  // Field cache:Z
       4: ireturn

  public void setCache(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field cache:Z
       5: return

  public org.springframework.util.MimeType getContentType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field contentType:Lorg/springframework/util/MimeType;
       4: invokevirtual #10                 // Method org/springframework/util/MimeType.getCharset:()Ljava/nio/charset/Charset;
       7: ifnonnull     60
      10: new           #11                 // class java/util/LinkedHashMap
      13: dup
      14: invokespecial #12                 // Method java/util/LinkedHashMap."<init>":()V
      17: astore_1
      18: aload_1
      19: ldc           #13                 // String charset
      21: aload_0
      22: getfield      #6                  // Field charset:Ljava/nio/charset/Charset;
      25: invokevirtual #14                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      28: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: aload_1
      35: aload_0
      36: getfield      #4                  // Field contentType:Lorg/springframework/util/MimeType;
      39: invokevirtual #16                 // Method org/springframework/util/MimeType.getParameters:()Ljava/util/Map;
      42: invokeinterface #17,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      47: new           #18                 // class org/springframework/util/MimeType
      50: dup
      51: aload_0
      52: getfield      #4                  // Field contentType:Lorg/springframework/util/MimeType;
      55: aload_1
      56: invokespecial #19                 // Method org/springframework/util/MimeType."<init>":(Lorg/springframework/util/MimeType;Ljava/util/Map;)V
      59: areturn
      60: aload_0
      61: getfield      #4                  // Field contentType:Lorg/springframework/util/MimeType;
      64: areturn

  public void setContentType(org.springframework.util.MimeType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field contentType:Lorg/springframework/util/MimeType;
       5: return

  public java.nio.charset.Charset getCharset();
    Code:
       0: aload_0
       1: getfield      #6                  // Field charset:Ljava/nio/charset/Charset;
       4: areturn

  public java.lang.String getCharsetName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field charset:Ljava/nio/charset/Charset;
       4: ifnull        17
       7: aload_0
       8: getfield      #6                  // Field charset:Ljava/nio/charset/Charset;
      11: invokevirtual #14                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      14: goto          18
      17: aconst_null
      18: areturn

  public void setCharset(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field charset:Ljava/nio/charset/Charset;
       5: return

  static {};
    Code:
       0: ldc           #20                 // String text/html
       2: invokestatic  #21                 // Method org/springframework/util/MimeType.valueOf:(Ljava/lang/String;)Lorg/springframework/util/MimeType;
       5: putstatic     #3                  // Field DEFAULT_CONTENT_TYPE:Lorg/springframework/util/MimeType;
       8: getstatic     #22                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      11: putstatic     #5                  // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      14: return
}
