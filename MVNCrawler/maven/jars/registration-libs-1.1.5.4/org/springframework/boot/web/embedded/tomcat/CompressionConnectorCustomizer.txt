Compiled from "CompressionConnectorCustomizer.java"
class org.springframework.boot.web.embedded.tomcat.CompressionConnectorCustomizer implements org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer {
  private final org.springframework.boot.web.server.Compression compression;

  org.springframework.boot.web.embedded.tomcat.CompressionConnectorCustomizer(org.springframework.boot.web.server.Compression);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field compression:Lorg/springframework/boot/web/server/Compression;
       9: return

  public void customize(org.apache.catalina.connector.Connector);
    Code:
       0: aload_0
       1: getfield      #2                  // Field compression:Lorg/springframework/boot/web/server/Compression;
       4: ifnull        37
       7: aload_0
       8: getfield      #2                  // Field compression:Lorg/springframework/boot/web/server/Compression;
      11: invokevirtual #3                  // Method org/springframework/boot/web/server/Compression.getEnabled:()Z
      14: ifeq          37
      17: aload_1
      18: invokevirtual #4                  // Method org/apache/catalina/connector/Connector.getProtocolHandler:()Lorg/apache/coyote/ProtocolHandler;
      21: astore_2
      22: aload_2
      23: instanceof    #5                  // class org/apache/coyote/http11/AbstractHttp11Protocol
      26: ifeq          37
      29: aload_0
      30: aload_2
      31: checkcast     #5                  // class org/apache/coyote/http11/AbstractHttp11Protocol
      34: invokespecial #6                  // Method customize:(Lorg/apache/coyote/http11/AbstractHttp11Protocol;)V
      37: return

  private void customize(org.apache.coyote.http11.AbstractHttp11Protocol<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field compression:Lorg/springframework/boot/web/server/Compression;
       4: astore_2
       5: aload_1
       6: ldc           #7                  // String on
       8: invokevirtual #8                  // Method org/apache/coyote/http11/AbstractHttp11Protocol.setCompression:(Ljava/lang/String;)V
      11: aload_1
      12: aload_2
      13: invokevirtual #9                  // Method org/springframework/boot/web/server/Compression.getMinResponseSize:()I
      16: invokevirtual #10                 // Method org/apache/coyote/http11/AbstractHttp11Protocol.setCompressionMinSize:(I)V
      19: aload_1
      20: aload_2
      21: invokevirtual #11                 // Method org/springframework/boot/web/server/Compression.getMimeTypes:()[Ljava/lang/String;
      24: invokestatic  #12                 // Method org/springframework/util/StringUtils.arrayToCommaDelimitedString:([Ljava/lang/Object;)Ljava/lang/String;
      27: invokevirtual #13                 // Method org/apache/coyote/http11/AbstractHttp11Protocol.setCompressibleMimeType:(Ljava/lang/String;)V
      30: aload_0
      31: getfield      #2                  // Field compression:Lorg/springframework/boot/web/server/Compression;
      34: invokevirtual #14                 // Method org/springframework/boot/web/server/Compression.getExcludedUserAgents:()[Ljava/lang/String;
      37: ifnull        54
      40: aload_1
      41: aload_0
      42: getfield      #2                  // Field compression:Lorg/springframework/boot/web/server/Compression;
      45: invokevirtual #14                 // Method org/springframework/boot/web/server/Compression.getExcludedUserAgents:()[Ljava/lang/String;
      48: invokestatic  #12                 // Method org/springframework/util/StringUtils.arrayToCommaDelimitedString:([Ljava/lang/Object;)Ljava/lang/String;
      51: invokevirtual #15                 // Method org/apache/coyote/http11/AbstractHttp11Protocol.setNoCompressionUserAgents:(Ljava/lang/String;)V
      54: return
}
