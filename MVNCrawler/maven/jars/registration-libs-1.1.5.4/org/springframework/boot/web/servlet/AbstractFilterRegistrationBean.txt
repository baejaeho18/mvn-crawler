Compiled from "AbstractFilterRegistrationBean.java"
public abstract class org.springframework.boot.web.servlet.AbstractFilterRegistrationBean<T extends javax.servlet.Filter> extends org.springframework.boot.web.servlet.DynamicRegistrationBean<javax.servlet.FilterRegistration$Dynamic> {
  protected static final int REQUEST_WRAPPER_FILTER_MAX_ORDER;

  private final org.apache.commons.logging.Log logger;

  private static final java.lang.String[] DEFAULT_URL_MAPPINGS;

  private java.util.Set<org.springframework.boot.web.servlet.ServletRegistrationBean<?>> servletRegistrationBeans;

  private java.util.Set<java.lang.String> servletNames;

  private java.util.Set<java.lang.String> urlPatterns;

  private java.util.EnumSet<javax.servlet.DispatcherType> dispatcherTypes;

  private boolean matchAfter;

  org.springframework.boot.web.servlet.AbstractFilterRegistrationBean(org.springframework.boot.web.servlet.ServletRegistrationBean<?>...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/boot/web/servlet/DynamicRegistrationBean."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #5                  // class java/util/LinkedHashSet
      19: dup
      20: invokespecial #6                  // Method java/util/LinkedHashSet."<init>":()V
      23: putfield      #7                  // Field servletRegistrationBeans:Ljava/util/Set;
      26: aload_0
      27: new           #5                  // class java/util/LinkedHashSet
      30: dup
      31: invokespecial #6                  // Method java/util/LinkedHashSet."<init>":()V
      34: putfield      #8                  // Field servletNames:Ljava/util/Set;
      37: aload_0
      38: new           #5                  // class java/util/LinkedHashSet
      41: dup
      42: invokespecial #6                  // Method java/util/LinkedHashSet."<init>":()V
      45: putfield      #9                  // Field urlPatterns:Ljava/util/Set;
      48: aload_0
      49: iconst_0
      50: putfield      #10                 // Field matchAfter:Z
      53: aload_1
      54: ldc           #11                 // String ServletRegistrationBeans must not be null
      56: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      59: aload_0
      60: getfield      #7                  // Field servletRegistrationBeans:Ljava/util/Set;
      63: aload_1
      64: invokestatic  #13                 // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
      67: pop
      68: return

  public void setServletRegistrationBeans(java.util.Collection<? extends org.springframework.boot.web.servlet.ServletRegistrationBean<?>>);
    Code:
       0: aload_1
       1: ldc           #11                 // String ServletRegistrationBeans must not be null
       3: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: new           #5                  // class java/util/LinkedHashSet
      10: dup
      11: aload_1
      12: invokespecial #14                 // Method java/util/LinkedHashSet."<init>":(Ljava/util/Collection;)V
      15: putfield      #7                  // Field servletRegistrationBeans:Ljava/util/Set;
      18: return

  public java.util.Collection<org.springframework.boot.web.servlet.ServletRegistrationBean<?>> getServletRegistrationBeans();
    Code:
       0: aload_0
       1: getfield      #7                  // Field servletRegistrationBeans:Ljava/util/Set;
       4: areturn

  public void addServletRegistrationBeans(org.springframework.boot.web.servlet.ServletRegistrationBean<?>...);
    Code:
       0: aload_1
       1: ldc           #11                 // String ServletRegistrationBeans must not be null
       3: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #7                  // Field servletRegistrationBeans:Ljava/util/Set;
      10: aload_1
      11: invokestatic  #13                 // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
      14: pop
      15: return

  public void setServletNames(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ldc           #15                 // String ServletNames must not be null
       3: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: new           #5                  // class java/util/LinkedHashSet
      10: dup
      11: aload_1
      12: invokespecial #14                 // Method java/util/LinkedHashSet."<init>":(Ljava/util/Collection;)V
      15: putfield      #8                  // Field servletNames:Ljava/util/Set;
      18: return

  public java.util.Collection<java.lang.String> getServletNames();
    Code:
       0: aload_0
       1: getfield      #8                  // Field servletNames:Ljava/util/Set;
       4: areturn

  public void addServletNames(java.lang.String...);
    Code:
       0: aload_1
       1: ldc           #15                 // String ServletNames must not be null
       3: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #8                  // Field servletNames:Ljava/util/Set;
      10: aload_1
      11: invokestatic  #16                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      14: invokeinterface #17,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: return

  public void setUrlPatterns(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ldc           #18                 // String UrlPatterns must not be null
       3: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: new           #5                  // class java/util/LinkedHashSet
      10: dup
      11: aload_1
      12: invokespecial #14                 // Method java/util/LinkedHashSet."<init>":(Ljava/util/Collection;)V
      15: putfield      #9                  // Field urlPatterns:Ljava/util/Set;
      18: return

  public java.util.Collection<java.lang.String> getUrlPatterns();
    Code:
       0: aload_0
       1: getfield      #9                  // Field urlPatterns:Ljava/util/Set;
       4: areturn

  public void addUrlPatterns(java.lang.String...);
    Code:
       0: aload_1
       1: ldc           #18                 // String UrlPatterns must not be null
       3: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #9                  // Field urlPatterns:Ljava/util/Set;
      10: aload_1
      11: invokestatic  #13                 // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
      14: pop
      15: return

  public void setDispatcherTypes(javax.servlet.DispatcherType, javax.servlet.DispatcherType...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #19                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;[Ljava/lang/Enum;)Ljava/util/EnumSet;
       6: putfield      #20                 // Field dispatcherTypes:Ljava/util/EnumSet;
       9: return

  public void setDispatcherTypes(java.util.EnumSet<javax.servlet.DispatcherType>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field dispatcherTypes:Ljava/util/EnumSet;
       5: return

  public void setMatchAfter(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field matchAfter:Z
       5: return

  public boolean isMatchAfter();
    Code:
       0: aload_0
       1: getfield      #10                 // Field matchAfter:Z
       4: ireturn

  protected java.lang.String getDescription();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getFilter:()Ljavax/servlet/Filter;
       4: astore_1
       5: aload_1
       6: ldc           #22                 // String Filter must not be null
       8: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      11: new           #23                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #25                 // String filter
      20: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: aload_1
      25: invokevirtual #27                 // Method getOrDeduceName:(Ljava/lang/Object;)Ljava/lang/String;
      28: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn

  protected javax.servlet.FilterRegistration$Dynamic addRegistration(java.lang.String, javax.servlet.ServletContext);
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getFilter:()Ljavax/servlet/Filter;
       4: astore_3
       5: aload_2
       6: aload_0
       7: aload_3
       8: invokevirtual #27                 // Method getOrDeduceName:(Ljava/lang/Object;)Ljava/lang/String;
      11: aload_3
      12: invokeinterface #29,  3           // InterfaceMethod javax/servlet/ServletContext.addFilter:(Ljava/lang/String;Ljavax/servlet/Filter;)Ljavax/servlet/FilterRegistration$Dynamic;
      17: areturn

  protected void configure(javax.servlet.FilterRegistration$Dynamic);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #30                 // Method org/springframework/boot/web/servlet/DynamicRegistrationBean.configure:(Ljavax/servlet/Registration$Dynamic;)V
       5: aload_0
       6: getfield      #20                 // Field dispatcherTypes:Ljava/util/EnumSet;
       9: astore_2
      10: aload_2
      11: ifnonnull     21
      14: getstatic     #31                 // Field javax/servlet/DispatcherType.REQUEST:Ljavax/servlet/DispatcherType;
      17: invokestatic  #32                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;)Ljava/util/EnumSet;
      20: astore_2
      21: new           #5                  // class java/util/LinkedHashSet
      24: dup
      25: invokespecial #6                  // Method java/util/LinkedHashSet."<init>":()V
      28: astore_3
      29: aload_0
      30: getfield      #7                  // Field servletRegistrationBeans:Ljava/util/Set;
      33: invokeinterface #33,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      38: astore        4
      40: aload         4
      42: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          77
      50: aload         4
      52: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #36                 // class org/springframework/boot/web/servlet/ServletRegistrationBean
      60: astore        5
      62: aload_3
      63: aload         5
      65: invokevirtual #37                 // Method org/springframework/boot/web/servlet/ServletRegistrationBean.getServletName:()Ljava/lang/String;
      68: invokeinterface #38,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      73: pop
      74: goto          40
      77: aload_3
      78: aload_0
      79: getfield      #8                  // Field servletNames:Ljava/util/Set;
      82: invokeinterface #17,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      87: pop
      88: aload_3
      89: invokeinterface #39,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      94: ifeq          173
      97: aload_0
      98: getfield      #9                  // Field urlPatterns:Ljava/util/Set;
     101: invokeinterface #39,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     106: ifeq          173
     109: aload_0
     110: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     113: new           #23                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     120: ldc           #40                 // String Mapping filter: \'
     122: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload_1
     126: invokeinterface #41,  1           // InterfaceMethod javax/servlet/FilterRegistration$Dynamic.getName:()Ljava/lang/String;
     131: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: ldc           #42                 // String \' to:
     136: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: getstatic     #43                 // Field DEFAULT_URL_MAPPINGS:[Ljava/lang/String;
     142: invokestatic  #16                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     145: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     148: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     151: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     156: aload_1
     157: aload_2
     158: aload_0
     159: getfield      #10                 // Field matchAfter:Z
     162: getstatic     #43                 // Field DEFAULT_URL_MAPPINGS:[Ljava/lang/String;
     165: invokeinterface #46,  4           // InterfaceMethod javax/servlet/FilterRegistration$Dynamic.addMappingForUrlPatterns:(Ljava/util/EnumSet;Z[Ljava/lang/String;)V
     170: goto          314
     173: aload_3
     174: invokeinterface #39,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     179: ifne          239
     182: aload_0
     183: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     186: new           #23                 // class java/lang/StringBuilder
     189: dup
     190: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     193: ldc           #40                 // String Mapping filter: \'
     195: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: aload_1
     199: invokeinterface #41,  1           // InterfaceMethod javax/servlet/FilterRegistration$Dynamic.getName:()Ljava/lang/String;
     204: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     207: ldc           #47                 // String \' to servlets:
     209: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     212: aload_3
     213: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     216: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     219: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     224: aload_1
     225: aload_2
     226: aload_0
     227: getfield      #10                 // Field matchAfter:Z
     230: aload_3
     231: invokestatic  #48                 // Method org/springframework/util/StringUtils.toStringArray:(Ljava/util/Collection;)[Ljava/lang/String;
     234: invokeinterface #49,  4           // InterfaceMethod javax/servlet/FilterRegistration$Dynamic.addMappingForServletNames:(Ljava/util/EnumSet;Z[Ljava/lang/String;)V
     239: aload_0
     240: getfield      #9                  // Field urlPatterns:Ljava/util/Set;
     243: invokeinterface #39,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     248: ifne          314
     251: aload_0
     252: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     255: new           #23                 // class java/lang/StringBuilder
     258: dup
     259: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     262: ldc           #40                 // String Mapping filter: \'
     264: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     267: aload_1
     268: invokeinterface #41,  1           // InterfaceMethod javax/servlet/FilterRegistration$Dynamic.getName:()Ljava/lang/String;
     273: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     276: ldc           #50                 // String \' to urls:
     278: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: aload_0
     282: getfield      #9                  // Field urlPatterns:Ljava/util/Set;
     285: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     288: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     291: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     296: aload_1
     297: aload_2
     298: aload_0
     299: getfield      #10                 // Field matchAfter:Z
     302: aload_0
     303: getfield      #9                  // Field urlPatterns:Ljava/util/Set;
     306: invokestatic  #48                 // Method org/springframework/util/StringUtils.toStringArray:(Ljava/util/Collection;)[Ljava/lang/String;
     309: invokeinterface #46,  4           // InterfaceMethod javax/servlet/FilterRegistration$Dynamic.addMappingForUrlPatterns:(Ljava/util/EnumSet;Z[Ljava/lang/String;)V
     314: return

  public abstract T getFilter();

  protected void configure(javax.servlet.Registration$Dynamic);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #51                 // class javax/servlet/FilterRegistration$Dynamic
       5: invokevirtual #52                 // Method configure:(Ljavax/servlet/FilterRegistration$Dynamic;)V
       8: return

  protected javax.servlet.Registration$Dynamic addRegistration(java.lang.String, javax.servlet.ServletContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #53                 // Method addRegistration:(Ljava/lang/String;Ljavax/servlet/ServletContext;)Ljavax/servlet/FilterRegistration$Dynamic;
       6: areturn

  static {};
    Code:
       0: iconst_1
       1: anewarray     #54                 // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #55                 // String /*
       8: aastore
       9: putstatic     #43                 // Field DEFAULT_URL_MAPPINGS:[Ljava/lang/String;
      12: return
}
