Compiled from "UndertowReactiveWebServerFactory.java"
public class org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory extends org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory implements org.springframework.boot.web.embedded.undertow.ConfigurableUndertowWebServerFactory {
  private java.util.List<org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer> builderCustomizers;

  private java.util.List<org.springframework.boot.web.embedded.undertow.UndertowDeploymentInfoCustomizer> deploymentInfoCustomizers;

  private java.lang.Integer bufferSize;

  private java.lang.Integer ioThreads;

  private java.lang.Integer workerThreads;

  private java.lang.Boolean directBuffers;

  private java.io.File accessLogDirectory;

  private java.lang.String accessLogPattern;

  private java.lang.String accessLogPrefix;

  private java.lang.String accessLogSuffix;

  private boolean accessLogEnabled;

  private boolean accessLogRotate;

  private boolean useForwardHeaders;

  public org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/boot/web/reactive/server/AbstractReactiveWebServerFactory."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field builderCustomizers:Ljava/util/List;
      15: aload_0
      16: new           #2                  // class java/util/ArrayList
      19: dup
      20: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #5                  // Field deploymentInfoCustomizers:Ljava/util/List;
      26: aload_0
      27: iconst_0
      28: putfield      #6                  // Field accessLogEnabled:Z
      31: aload_0
      32: iconst_1
      33: putfield      #7                  // Field accessLogRotate:Z
      36: return

  public org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #8                  // Method org/springframework/boot/web/reactive/server/AbstractReactiveWebServerFactory."<init>":(I)V
       5: aload_0
       6: new           #2                  // class java/util/ArrayList
       9: dup
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      13: putfield      #4                  // Field builderCustomizers:Ljava/util/List;
      16: aload_0
      17: new           #2                  // class java/util/ArrayList
      20: dup
      21: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      24: putfield      #5                  // Field deploymentInfoCustomizers:Ljava/util/List;
      27: aload_0
      28: iconst_0
      29: putfield      #6                  // Field accessLogEnabled:Z
      32: aload_0
      33: iconst_1
      34: putfield      #7                  // Field accessLogRotate:Z
      37: return

  public org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #9                  // Method getPort:()I
       5: invokespecial #10                 // Method createBuilder:(I)Lio/undertow/Undertow$Builder;
       8: astore_2
       9: aload_0
      10: aload_1
      11: invokespecial #11                 // Method createUndertowHandler:(Lorg/springframework/http/server/reactive/HttpHandler;)Lio/undertow/server/HttpHandler;
      14: astore_3
      15: aload_2
      16: aload_3
      17: invokevirtual #12                 // Method io/undertow/Undertow$Builder.setHandler:(Lio/undertow/server/HttpHandler;)Lio/undertow/Undertow$Builder;
      20: pop
      21: new           #13                 // class org/springframework/boot/web/embedded/undertow/UndertowWebServer
      24: dup
      25: aload_2
      26: aload_0
      27: invokevirtual #9                  // Method getPort:()I
      30: iflt          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: invokespecial #14                 // Method org/springframework/boot/web/embedded/undertow/UndertowWebServer."<init>":(Lio/undertow/Undertow$Builder;Z)V
      41: areturn

  private io.undertow.Undertow$Builder createBuilder(int);
    Code:
       0: invokestatic  #15                 // Method io/undertow/Undertow.builder:()Lio/undertow/Undertow$Builder;
       3: astore_2
       4: aload_0
       5: getfield      #16                 // Field bufferSize:Ljava/lang/Integer;
       8: ifnull        23
      11: aload_2
      12: aload_0
      13: getfield      #16                 // Field bufferSize:Ljava/lang/Integer;
      16: invokevirtual #17                 // Method java/lang/Integer.intValue:()I
      19: invokevirtual #18                 // Method io/undertow/Undertow$Builder.setBufferSize:(I)Lio/undertow/Undertow$Builder;
      22: pop
      23: aload_0
      24: getfield      #19                 // Field ioThreads:Ljava/lang/Integer;
      27: ifnull        42
      30: aload_2
      31: aload_0
      32: getfield      #19                 // Field ioThreads:Ljava/lang/Integer;
      35: invokevirtual #17                 // Method java/lang/Integer.intValue:()I
      38: invokevirtual #20                 // Method io/undertow/Undertow$Builder.setIoThreads:(I)Lio/undertow/Undertow$Builder;
      41: pop
      42: aload_0
      43: getfield      #21                 // Field workerThreads:Ljava/lang/Integer;
      46: ifnull        61
      49: aload_2
      50: aload_0
      51: getfield      #21                 // Field workerThreads:Ljava/lang/Integer;
      54: invokevirtual #17                 // Method java/lang/Integer.intValue:()I
      57: invokevirtual #22                 // Method io/undertow/Undertow$Builder.setWorkerThreads:(I)Lio/undertow/Undertow$Builder;
      60: pop
      61: aload_0
      62: getfield      #23                 // Field directBuffers:Ljava/lang/Boolean;
      65: ifnull        80
      68: aload_2
      69: aload_0
      70: getfield      #23                 // Field directBuffers:Ljava/lang/Boolean;
      73: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
      76: invokevirtual #25                 // Method io/undertow/Undertow$Builder.setDirectBuffers:(Z)Lio/undertow/Undertow$Builder;
      79: pop
      80: aload_0
      81: invokevirtual #26                 // Method getSsl:()Lorg/springframework/boot/web/server/Ssl;
      84: ifnull        105
      87: aload_0
      88: invokevirtual #26                 // Method getSsl:()Lorg/springframework/boot/web/server/Ssl;
      91: invokevirtual #27                 // Method org/springframework/boot/web/server/Ssl.isEnabled:()Z
      94: ifeq          105
      97: aload_0
      98: aload_2
      99: invokespecial #28                 // Method customizeSsl:(Lio/undertow/Undertow$Builder;)V
     102: goto          115
     105: aload_2
     106: iload_1
     107: aload_0
     108: invokespecial #29                 // Method getListenAddress:()Ljava/lang/String;
     111: invokevirtual #30                 // Method io/undertow/Undertow$Builder.addHttpListener:(ILjava/lang/String;)Lio/undertow/Undertow$Builder;
     114: pop
     115: aload_0
     116: getfield      #4                  // Field builderCustomizers:Ljava/util/List;
     119: invokeinterface #31,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     124: astore_3
     125: aload_3
     126: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     131: ifeq          156
     134: aload_3
     135: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     140: checkcast     #34                 // class org/springframework/boot/web/embedded/undertow/UndertowBuilderCustomizer
     143: astore        4
     145: aload         4
     147: aload_2
     148: invokeinterface #35,  2           // InterfaceMethod org/springframework/boot/web/embedded/undertow/UndertowBuilderCustomizer.customize:(Lio/undertow/Undertow$Builder;)V
     153: goto          125
     156: aload_2
     157: areturn

  private io.undertow.server.HttpHandler createUndertowHandler(org.springframework.http.server.reactive.HttpHandler);
    Code:
       0: new           #36                 // class org/springframework/http/server/reactive/UndertowHttpHandlerAdapter
       3: dup
       4: aload_1
       5: invokespecial #37                 // Method org/springframework/http/server/reactive/UndertowHttpHandlerAdapter."<init>":(Lorg/springframework/http/server/reactive/HttpHandler;)V
       8: astore_2
       9: aload_0
      10: getfield      #38                 // Field useForwardHeaders:Z
      13: ifeq          21
      16: aload_2
      17: invokestatic  #39                 // Method io/undertow/Handlers.proxyPeerAddress:(Lio/undertow/server/HttpHandler;)Lio/undertow/server/handlers/ProxyPeerAddressHandler;
      20: astore_2
      21: aload_0
      22: invokevirtual #40                 // Method getCompression:()Lorg/springframework/boot/web/server/Compression;
      25: aload_2
      26: invokestatic  #41                 // Method org/springframework/boot/web/embedded/undertow/UndertowCompressionConfigurer.configureCompression:(Lorg/springframework/boot/web/server/Compression;Lio/undertow/server/HttpHandler;)Lio/undertow/server/HttpHandler;
      29: astore_2
      30: aload_0
      31: invokevirtual #42                 // Method isAccessLogEnabled:()Z
      34: ifeq          43
      37: aload_0
      38: aload_2
      39: invokespecial #43                 // Method createAccessLogHandler:(Lio/undertow/server/HttpHandler;)Lio/undertow/server/handlers/accesslog/AccessLogHandler;
      42: astore_2
      43: aload_2
      44: areturn

  private io.undertow.server.handlers.accesslog.AccessLogHandler createAccessLogHandler(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: invokespecial #44                 // Method createAccessLogDirectoryIfNecessary:()V
       4: aload_0
       5: getfield      #45                 // Field accessLogPrefix:Ljava/lang/String;
       8: ifnull        18
      11: aload_0
      12: getfield      #45                 // Field accessLogPrefix:Ljava/lang/String;
      15: goto          20
      18: ldc           #46                 // String access_log.
      20: astore_2
      21: new           #47                 // class io/undertow/server/handlers/accesslog/DefaultAccessLogReceiver
      24: dup
      25: aload_0
      26: invokespecial #48                 // Method createWorker:()Lorg/xnio/XnioWorker;
      29: aload_0
      30: getfield      #49                 // Field accessLogDirectory:Ljava/io/File;
      33: aload_2
      34: aload_0
      35: getfield      #50                 // Field accessLogSuffix:Ljava/lang/String;
      38: aload_0
      39: getfield      #7                  // Field accessLogRotate:Z
      42: invokespecial #51                 // Method io/undertow/server/handlers/accesslog/DefaultAccessLogReceiver."<init>":(Ljava/util/concurrent/Executor;Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Z)V
      45: astore_3
      46: aload_0
      47: getfield      #52                 // Field accessLogPattern:Ljava/lang/String;
      50: ifnull        60
      53: aload_0
      54: getfield      #52                 // Field accessLogPattern:Ljava/lang/String;
      57: goto          62
      60: ldc           #53                 // String common
      62: astore        4
      64: new           #54                 // class io/undertow/server/handlers/accesslog/AccessLogHandler
      67: dup
      68: aload_1
      69: aload_3
      70: aload         4
      72: ldc           #55                 // class io/undertow/Undertow
      74: invokevirtual #56                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      77: invokespecial #57                 // Method io/undertow/server/handlers/accesslog/AccessLogHandler."<init>":(Lio/undertow/server/HttpHandler;Lio/undertow/server/handlers/accesslog/AccessLogReceiver;Ljava/lang/String;Ljava/lang/ClassLoader;)V
      80: areturn
      81: astore_2
      82: new           #59                 // class java/lang/IllegalStateException
      85: dup
      86: ldc           #60                 // String Failed to create AccessLogHandler
      88: aload_2
      89: invokespecial #61                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      92: athrow
    Exception table:
       from    to  target type
           0    80    81   Class java/io/IOException

  private void createAccessLogDirectoryIfNecessary();
    Code:
       0: aload_0
       1: getfield      #49                 // Field accessLogDirectory:Ljava/io/File;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #62                 // String Access log directory is not set
      14: invokestatic  #63                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: getfield      #49                 // Field accessLogDirectory:Ljava/io/File;
      21: invokevirtual #64                 // Method java/io/File.isDirectory:()Z
      24: ifne          72
      27: aload_0
      28: getfield      #49                 // Field accessLogDirectory:Ljava/io/File;
      31: invokevirtual #65                 // Method java/io/File.mkdirs:()Z
      34: ifne          72
      37: new           #59                 // class java/lang/IllegalStateException
      40: dup
      41: new           #66                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #68                 // String Failed to create access log directory \'
      50: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: getfield      #49                 // Field accessLogDirectory:Ljava/io/File;
      57: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      60: ldc           #71                 // String \'
      62: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #72                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #73                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: return

  private org.xnio.XnioWorker createWorker() throws java.io.IOException;
    Code:
       0: ldc           #55                 // class io/undertow/Undertow
       2: invokevirtual #56                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       5: invokestatic  #74                 // Method org/xnio/Xnio.getInstance:(Ljava/lang/ClassLoader;)Lorg/xnio/Xnio;
       8: astore_1
       9: aload_1
      10: invokestatic  #75                 // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
      13: getstatic     #76                 // Field org/xnio/Options.THREAD_DAEMON:Lorg/xnio/Option;
      16: iconst_1
      17: invokevirtual #77                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
      20: invokevirtual #78                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
      23: invokevirtual #79                 // Method org/xnio/Xnio.createWorker:(Lorg/xnio/OptionMap;)Lorg/xnio/XnioWorker;
      26: areturn

  private void customizeSsl(io.undertow.Undertow$Builder);
    Code:
       0: new           #80                 // class org/springframework/boot/web/embedded/undertow/SslBuilderCustomizer
       3: dup
       4: aload_0
       5: invokevirtual #9                  // Method getPort:()I
       8: aload_0
       9: invokevirtual #81                 // Method getAddress:()Ljava/net/InetAddress;
      12: aload_0
      13: invokevirtual #26                 // Method getSsl:()Lorg/springframework/boot/web/server/Ssl;
      16: aload_0
      17: invokevirtual #82                 // Method getSslStoreProvider:()Lorg/springframework/boot/web/server/SslStoreProvider;
      20: invokespecial #83                 // Method org/springframework/boot/web/embedded/undertow/SslBuilderCustomizer."<init>":(ILjava/net/InetAddress;Lorg/springframework/boot/web/server/Ssl;Lorg/springframework/boot/web/server/SslStoreProvider;)V
      23: aload_1
      24: invokevirtual #84                 // Method org/springframework/boot/web/embedded/undertow/SslBuilderCustomizer.customize:(Lio/undertow/Undertow$Builder;)V
      27: aload_0
      28: invokevirtual #85                 // Method getHttp2:()Lorg/springframework/boot/web/server/Http2;
      31: ifnull        52
      34: aload_1
      35: getstatic     #86                 // Field io/undertow/UndertowOptions.ENABLE_HTTP2:Lorg/xnio/Option;
      38: aload_0
      39: invokevirtual #85                 // Method getHttp2:()Lorg/springframework/boot/web/server/Http2;
      42: invokevirtual #87                 // Method org/springframework/boot/web/server/Http2.isEnabled:()Z
      45: invokestatic  #88                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      48: invokevirtual #89                 // Method io/undertow/Undertow$Builder.setServerOption:(Lorg/xnio/Option;Ljava/lang/Object;)Lio/undertow/Undertow$Builder;
      51: pop
      52: return

  private java.lang.String getListenAddress();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method getAddress:()Ljava/net/InetAddress;
       4: ifnonnull     10
       7: ldc           #90                 // String 0.0.0.0
       9: areturn
      10: aload_0
      11: invokevirtual #81                 // Method getAddress:()Ljava/net/InetAddress;
      14: invokevirtual #91                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
      17: areturn

  public void setDeploymentInfoCustomizers(java.util.Collection<? extends org.springframework.boot.web.embedded.undertow.UndertowDeploymentInfoCustomizer>);
    Code:
       0: aload_1
       1: ldc           #92                 // String Customizers must not be null
       3: invokestatic  #93                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: new           #2                  // class java/util/ArrayList
      10: dup
      11: aload_1
      12: invokespecial #94                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      15: putfield      #5                  // Field deploymentInfoCustomizers:Ljava/util/List;
      18: return

  public java.util.Collection<org.springframework.boot.web.embedded.undertow.UndertowDeploymentInfoCustomizer> getDeploymentInfoCustomizers();
    Code:
       0: aload_0
       1: getfield      #5                  // Field deploymentInfoCustomizers:Ljava/util/List;
       4: areturn

  public void addDeploymentInfoCustomizers(org.springframework.boot.web.embedded.undertow.UndertowDeploymentInfoCustomizer...);
    Code:
       0: aload_1
       1: ldc           #95                 // String UndertowDeploymentInfoCustomizers must not be null
       3: invokestatic  #93                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #5                  // Field deploymentInfoCustomizers:Ljava/util/List;
      10: aload_1
      11: invokestatic  #96                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      14: invokeinterface #97,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: return

  public void setAccessLogDirectory(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field accessLogDirectory:Ljava/io/File;
       5: return

  public void setAccessLogPattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field accessLogPattern:Ljava/lang/String;
       5: return

  public void setAccessLogPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #45                 // Field accessLogPrefix:Ljava/lang/String;
       5: return

  public void setAccessLogSuffix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #50                 // Field accessLogSuffix:Ljava/lang/String;
       5: return

  public boolean isAccessLogEnabled();
    Code:
       0: aload_0
       1: getfield      #6                  // Field accessLogEnabled:Z
       4: ireturn

  public void setAccessLogEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field accessLogEnabled:Z
       5: return

  public void setAccessLogRotate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field accessLogRotate:Z
       5: return

  protected final boolean isUseForwardHeaders();
    Code:
       0: aload_0
       1: getfield      #38                 // Field useForwardHeaders:Z
       4: ireturn

  public void setUseForwardHeaders(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #38                 // Field useForwardHeaders:Z
       5: return

  public void setBufferSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field bufferSize:Ljava/lang/Integer;
       5: return

  public void setIoThreads(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field ioThreads:Ljava/lang/Integer;
       5: return

  public void setWorkerThreads(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field workerThreads:Ljava/lang/Integer;
       5: return

  public void setUseDirectBuffers(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field directBuffers:Ljava/lang/Boolean;
       5: return

  public void setBuilderCustomizers(java.util.Collection<? extends org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer>);
    Code:
       0: aload_1
       1: ldc           #92                 // String Customizers must not be null
       3: invokestatic  #93                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: new           #2                  // class java/util/ArrayList
      10: dup
      11: aload_1
      12: invokespecial #94                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      15: putfield      #4                  // Field builderCustomizers:Ljava/util/List;
      18: return

  public java.util.Collection<org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer> getBuilderCustomizers();
    Code:
       0: aload_0
       1: getfield      #4                  // Field builderCustomizers:Ljava/util/List;
       4: areturn

  public void addBuilderCustomizers(org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer...);
    Code:
       0: aload_1
       1: ldc           #92                 // String Customizers must not be null
       3: invokestatic  #93                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #4                  // Field builderCustomizers:Ljava/util/List;
      10: aload_1
      11: invokestatic  #96                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      14: invokeinterface #97,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: return
}
