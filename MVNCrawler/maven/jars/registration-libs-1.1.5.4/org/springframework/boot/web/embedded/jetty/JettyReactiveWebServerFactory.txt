Compiled from "JettyReactiveWebServerFactory.java"
public class org.springframework.boot.web.embedded.jetty.JettyReactiveWebServerFactory extends org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory implements org.springframework.boot.web.embedded.jetty.ConfigurableJettyWebServerFactory {
  private static final org.apache.commons.logging.Log logger;

  private int acceptors;

  private int selectors;

  private boolean useForwardHeaders;

  private java.util.List<org.springframework.boot.web.embedded.jetty.JettyServerCustomizer> jettyServerCustomizers;

  private org.eclipse.jetty.util.thread.ThreadPool threadPool;

  public org.springframework.boot.web.embedded.jetty.JettyReactiveWebServerFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/boot/web/reactive/server/AbstractReactiveWebServerFactory."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field acceptors:I
       9: aload_0
      10: iconst_m1
      11: putfield      #3                  // Field selectors:I
      14: aload_0
      15: new           #4                  // class java/util/ArrayList
      18: dup
      19: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      22: putfield      #6                  // Field jettyServerCustomizers:Ljava/util/List;
      25: return

  public org.springframework.boot.web.embedded.jetty.JettyReactiveWebServerFactory(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #7                  // Method org/springframework/boot/web/reactive/server/AbstractReactiveWebServerFactory."<init>":(I)V
       5: aload_0
       6: iconst_m1
       7: putfield      #2                  // Field acceptors:I
      10: aload_0
      11: iconst_m1
      12: putfield      #3                  // Field selectors:I
      15: aload_0
      16: new           #4                  // class java/util/ArrayList
      19: dup
      20: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #6                  // Field jettyServerCustomizers:Ljava/util/List;
      26: return

  public void setUseForwardHeaders(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field useForwardHeaders:Z
       5: return

  public void setAcceptors(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field acceptors:I
       5: return

  public org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler);
    Code:
       0: new           #9                  // class org/springframework/http/server/reactive/JettyHttpHandlerAdapter
       3: dup
       4: aload_1
       5: invokespecial #10                 // Method org/springframework/http/server/reactive/JettyHttpHandlerAdapter."<init>":(Lorg/springframework/http/server/reactive/HttpHandler;)V
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokevirtual #11                 // Method createJettyServer:(Lorg/springframework/http/server/reactive/JettyHttpHandlerAdapter;)Lorg/eclipse/jetty/server/Server;
      14: astore_3
      15: new           #12                 // class org/springframework/boot/web/embedded/jetty/JettyWebServer
      18: dup
      19: aload_3
      20: aload_0
      21: invokevirtual #13                 // Method getPort:()I
      24: iflt          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: invokespecial #14                 // Method org/springframework/boot/web/embedded/jetty/JettyWebServer."<init>":(Lorg/eclipse/jetty/server/Server;Z)V
      35: areturn

  public void addServerCustomizers(org.springframework.boot.web.embedded.jetty.JettyServerCustomizer...);
    Code:
       0: aload_1
       1: ldc           #15                 // String Customizers must not be null
       3: invokestatic  #16                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #6                  // Field jettyServerCustomizers:Ljava/util/List;
      10: aload_1
      11: invokestatic  #17                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      14: invokeinterface #18,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: return

  public void setServerCustomizers(java.util.Collection<? extends org.springframework.boot.web.embedded.jetty.JettyServerCustomizer>);
    Code:
       0: aload_1
       1: ldc           #15                 // String Customizers must not be null
       3: invokestatic  #16                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: new           #4                  // class java/util/ArrayList
      10: dup
      11: aload_1
      12: invokespecial #19                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      15: putfield      #6                  // Field jettyServerCustomizers:Ljava/util/List;
      18: return

  public java.util.Collection<org.springframework.boot.web.embedded.jetty.JettyServerCustomizer> getServerCustomizers();
    Code:
       0: aload_0
       1: getfield      #6                  // Field jettyServerCustomizers:Ljava/util/List;
       4: areturn

  public void setSelectors(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field selectors:I
       5: return

  protected org.eclipse.jetty.server.Server createJettyServer(org.springframework.http.server.reactive.JettyHttpHandlerAdapter);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getPort:()I
       4: iflt          14
       7: aload_0
       8: invokevirtual #13                 // Method getPort:()I
      11: goto          15
      14: iconst_0
      15: istore_2
      16: new           #20                 // class java/net/InetSocketAddress
      19: dup
      20: aload_0
      21: invokevirtual #21                 // Method getAddress:()Ljava/net/InetAddress;
      24: iload_2
      25: invokespecial #22                 // Method java/net/InetSocketAddress."<init>":(Ljava/net/InetAddress;I)V
      28: astore_3
      29: new           #23                 // class org/eclipse/jetty/server/Server
      32: dup
      33: aload_0
      34: invokevirtual #24                 // Method getThreadPool:()Lorg/eclipse/jetty/util/thread/ThreadPool;
      37: invokespecial #25                 // Method org/eclipse/jetty/server/Server."<init>":(Lorg/eclipse/jetty/util/thread/ThreadPool;)V
      40: astore        4
      42: aload         4
      44: aload_0
      45: aload_3
      46: aload         4
      48: invokespecial #26                 // Method createConnector:(Ljava/net/InetSocketAddress;Lorg/eclipse/jetty/server/Server;)Lorg/eclipse/jetty/server/AbstractConnector;
      51: invokevirtual #27                 // Method org/eclipse/jetty/server/Server.addConnector:(Lorg/eclipse/jetty/server/Connector;)V
      54: new           #28                 // class org/eclipse/jetty/servlet/ServletHolder
      57: dup
      58: aload_1
      59: invokespecial #29                 // Method org/eclipse/jetty/servlet/ServletHolder."<init>":(Ljavax/servlet/Servlet;)V
      62: astore        5
      64: aload         5
      66: iconst_1
      67: invokevirtual #30                 // Method org/eclipse/jetty/servlet/ServletHolder.setAsyncSupported:(Z)V
      70: new           #31                 // class org/eclipse/jetty/servlet/ServletContextHandler
      73: dup
      74: aload         4
      76: ldc           #32                 // String
      78: iconst_0
      79: iconst_0
      80: invokespecial #33                 // Method org/eclipse/jetty/servlet/ServletContextHandler."<init>":(Lorg/eclipse/jetty/server/HandlerContainer;Ljava/lang/String;ZZ)V
      83: astore        6
      85: aload         6
      87: aload         5
      89: ldc           #34                 // String /
      91: invokevirtual #35                 // Method org/eclipse/jetty/servlet/ServletContextHandler.addServlet:(Lorg/eclipse/jetty/servlet/ServletHolder;Ljava/lang/String;)V
      94: aload         4
      96: aload_0
      97: aload         6
      99: invokespecial #36                 // Method addHandlerWrappers:(Lorg/eclipse/jetty/server/Handler;)Lorg/eclipse/jetty/server/Handler;
     102: invokevirtual #37                 // Method org/eclipse/jetty/server/Server.setHandler:(Lorg/eclipse/jetty/server/Handler;)V
     105: getstatic     #38                 // Field logger:Lorg/apache/commons/logging/Log;
     108: new           #39                 // class java/lang/StringBuilder
     111: dup
     112: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     115: ldc           #41                 // String Server initialized with port:
     117: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: iload_2
     121: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     124: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     132: aload_0
     133: invokevirtual #46                 // Method getSsl:()Lorg/springframework/boot/web/server/Ssl;
     136: ifnull        156
     139: aload_0
     140: invokevirtual #46                 // Method getSsl:()Lorg/springframework/boot/web/server/Ssl;
     143: invokevirtual #47                 // Method org/springframework/boot/web/server/Ssl.isEnabled:()Z
     146: ifeq          156
     149: aload_0
     150: aload         4
     152: aload_3
     153: invokespecial #48                 // Method customizeSsl:(Lorg/eclipse/jetty/server/Server;Ljava/net/InetSocketAddress;)V
     156: aload_0
     157: invokevirtual #49                 // Method getServerCustomizers:()Ljava/util/Collection;
     160: invokeinterface #50,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     165: astore        7
     167: aload         7
     169: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     174: ifeq          201
     177: aload         7
     179: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     184: checkcast     #53                 // class org/springframework/boot/web/embedded/jetty/JettyServerCustomizer
     187: astore        8
     189: aload         8
     191: aload         4
     193: invokeinterface #54,  2           // InterfaceMethod org/springframework/boot/web/embedded/jetty/JettyServerCustomizer.customize:(Lorg/eclipse/jetty/server/Server;)V
     198: goto          167
     201: aload_0
     202: getfield      #8                  // Field useForwardHeaders:Z
     205: ifeq          220
     208: new           #55                 // class org/springframework/boot/web/embedded/jetty/ForwardHeadersCustomizer
     211: dup
     212: invokespecial #56                 // Method org/springframework/boot/web/embedded/jetty/ForwardHeadersCustomizer."<init>":()V
     215: aload         4
     217: invokevirtual #57                 // Method org/springframework/boot/web/embedded/jetty/ForwardHeadersCustomizer.customize:(Lorg/eclipse/jetty/server/Server;)V
     220: aload         4
     222: areturn

  private org.eclipse.jetty.server.AbstractConnector createConnector(java.net.InetSocketAddress, org.eclipse.jetty.server.Server);
    Code:
       0: new           #58                 // class org/eclipse/jetty/server/ServerConnector
       3: dup
       4: aload_2
       5: aload_0
       6: getfield      #2                  // Field acceptors:I
       9: aload_0
      10: getfield      #3                  // Field selectors:I
      13: invokespecial #59                 // Method org/eclipse/jetty/server/ServerConnector."<init>":(Lorg/eclipse/jetty/server/Server;II)V
      16: astore_3
      17: aload_3
      18: aload_1
      19: invokevirtual #60                 // Method java/net/InetSocketAddress.getHostString:()Ljava/lang/String;
      22: invokevirtual #61                 // Method org/eclipse/jetty/server/ServerConnector.setHost:(Ljava/lang/String;)V
      25: aload_3
      26: aload_1
      27: invokevirtual #62                 // Method java/net/InetSocketAddress.getPort:()I
      30: invokevirtual #63                 // Method org/eclipse/jetty/server/ServerConnector.setPort:(I)V
      33: aload_3
      34: invokevirtual #64                 // Method org/eclipse/jetty/server/ServerConnector.getConnectionFactories:()Ljava/util/Collection;
      37: invokeinterface #50,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      42: astore        4
      44: aload         4
      46: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          91
      54: aload         4
      56: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #65                 // class org/eclipse/jetty/server/ConnectionFactory
      64: astore        5
      66: aload         5
      68: instanceof    #66                 // class org/eclipse/jetty/server/HttpConfiguration$ConnectionFactory
      71: ifeq          88
      74: aload         5
      76: checkcast     #66                 // class org/eclipse/jetty/server/HttpConfiguration$ConnectionFactory
      79: invokeinterface #67,  1           // InterfaceMethod org/eclipse/jetty/server/HttpConfiguration$ConnectionFactory.getHttpConfiguration:()Lorg/eclipse/jetty/server/HttpConfiguration;
      84: iconst_0
      85: invokevirtual #68                 // Method org/eclipse/jetty/server/HttpConfiguration.setSendServerVersion:(Z)V
      88: goto          44
      91: aload_3
      92: areturn

  private org.eclipse.jetty.server.Handler addHandlerWrappers(org.eclipse.jetty.server.Handler);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method getCompression:()Lorg/springframework/boot/web/server/Compression;
       4: ifnull        30
       7: aload_0
       8: invokevirtual #69                 // Method getCompression:()Lorg/springframework/boot/web/server/Compression;
      11: invokevirtual #70                 // Method org/springframework/boot/web/server/Compression.getEnabled:()Z
      14: ifeq          30
      17: aload_0
      18: aload_1
      19: aload_0
      20: invokevirtual #69                 // Method getCompression:()Lorg/springframework/boot/web/server/Compression;
      23: invokestatic  #71                 // Method org/springframework/boot/web/embedded/jetty/JettyHandlerWrappers.createGzipHandlerWrapper:(Lorg/springframework/boot/web/server/Compression;)Lorg/eclipse/jetty/server/handler/HandlerWrapper;
      26: invokespecial #72                 // Method applyWrapper:(Lorg/eclipse/jetty/server/Handler;Lorg/eclipse/jetty/server/handler/HandlerWrapper;)Lorg/eclipse/jetty/server/Handler;
      29: astore_1
      30: aload_0
      31: invokevirtual #73                 // Method getServerHeader:()Ljava/lang/String;
      34: invokestatic  #74                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      37: ifeq          53
      40: aload_0
      41: aload_1
      42: aload_0
      43: invokevirtual #73                 // Method getServerHeader:()Ljava/lang/String;
      46: invokestatic  #75                 // Method org/springframework/boot/web/embedded/jetty/JettyHandlerWrappers.createServerHeaderHandlerWrapper:(Ljava/lang/String;)Lorg/eclipse/jetty/server/handler/HandlerWrapper;
      49: invokespecial #72                 // Method applyWrapper:(Lorg/eclipse/jetty/server/Handler;Lorg/eclipse/jetty/server/handler/HandlerWrapper;)Lorg/eclipse/jetty/server/Handler;
      52: astore_1
      53: aload_1
      54: areturn

  private org.eclipse.jetty.server.Handler applyWrapper(org.eclipse.jetty.server.Handler, org.eclipse.jetty.server.handler.HandlerWrapper);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #76                 // Method org/eclipse/jetty/server/handler/HandlerWrapper.setHandler:(Lorg/eclipse/jetty/server/Handler;)V
       5: aload_2
       6: areturn

  private void customizeSsl(org.eclipse.jetty.server.Server, java.net.InetSocketAddress);
    Code:
       0: new           #77                 // class org/springframework/boot/web/embedded/jetty/SslServerCustomizer
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #46                 // Method getSsl:()Lorg/springframework/boot/web/server/Ssl;
       9: aload_0
      10: invokevirtual #78                 // Method getSslStoreProvider:()Lorg/springframework/boot/web/server/SslStoreProvider;
      13: aload_0
      14: invokevirtual #79                 // Method getHttp2:()Lorg/springframework/boot/web/server/Http2;
      17: invokespecial #80                 // Method org/springframework/boot/web/embedded/jetty/SslServerCustomizer."<init>":(Ljava/net/InetSocketAddress;Lorg/springframework/boot/web/server/Ssl;Lorg/springframework/boot/web/server/SslStoreProvider;Lorg/springframework/boot/web/server/Http2;)V
      20: aload_1
      21: invokevirtual #81                 // Method org/springframework/boot/web/embedded/jetty/SslServerCustomizer.customize:(Lorg/eclipse/jetty/server/Server;)V
      24: return

  public org.eclipse.jetty.util.thread.ThreadPool getThreadPool();
    Code:
       0: aload_0
       1: getfield      #82                 // Field threadPool:Lorg/eclipse/jetty/util/thread/ThreadPool;
       4: areturn

  public void setThreadPool(org.eclipse.jetty.util.thread.ThreadPool);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #82                 // Field threadPool:Lorg/eclipse/jetty/util/thread/ThreadPool;
       5: return

  static {};
    Code:
       0: ldc           #83                 // class org/springframework/boot/web/embedded/jetty/JettyReactiveWebServerFactory
       2: invokestatic  #84                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #38                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
