Compiled from "BindResult.java"
public final class org.springframework.boot.context.properties.bind.BindResult<T> {
  private static final org.springframework.boot.context.properties.bind.BindResult<?> UNBOUND;

  private final T value;

  private org.springframework.boot.context.properties.bind.BindResult(T);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field value:Ljava/lang/Object;
       9: return

  public T get() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Ljava/lang/Object;
       4: ifnonnull     17
       7: new           #3                  // class java/util/NoSuchElementException
      10: dup
      11: ldc           #4                  // String No value bound
      13: invokespecial #5                  // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #2                  // Field value:Ljava/lang/Object;
      21: areturn

  public boolean isBound();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Ljava/lang/Object;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void ifBound(java.util.function.Consumer<? super T>);
    Code:
       0: aload_1
       1: ldc           #6                  // String Consumer must not be null
       3: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #2                  // Field value:Ljava/lang/Object;
      10: ifnull        23
      13: aload_1
      14: aload_0
      15: getfield      #2                  // Field value:Ljava/lang/Object;
      18: invokeinterface #8,  2            // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      23: return

  public <U> org.springframework.boot.context.properties.bind.BindResult<U> map(java.util.function.Function<? super T, ? extends U>);
    Code:
       0: aload_1
       1: ldc           #9                  // String Mapper must not be null
       3: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #2                  // Field value:Ljava/lang/Object;
      10: ifnull        26
      13: aload_1
      14: aload_0
      15: getfield      #2                  // Field value:Ljava/lang/Object;
      18: invokeinterface #10,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      23: goto          27
      26: aconst_null
      27: invokestatic  #11                 // Method of:(Ljava/lang/Object;)Lorg/springframework/boot/context/properties/bind/BindResult;
      30: areturn

  public T orElse(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Ljava/lang/Object;
       4: ifnull        14
       7: aload_0
       8: getfield      #2                  // Field value:Ljava/lang/Object;
      11: goto          15
      14: aload_1
      15: areturn

  public T orElseGet(java.util.function.Supplier<? extends T>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Ljava/lang/Object;
       4: ifnull        14
       7: aload_0
       8: getfield      #2                  // Field value:Ljava/lang/Object;
      11: goto          20
      14: aload_1
      15: invokeinterface #12,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      20: areturn

  public T orElseCreate(java.lang.Class<? extends T>);
    Code:
       0: aload_1
       1: ldc           #13                 // String Type must not be null
       3: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #2                  // Field value:Ljava/lang/Object;
      10: ifnull        20
      13: aload_0
      14: getfield      #2                  // Field value:Ljava/lang/Object;
      17: goto          24
      20: aload_1
      21: invokestatic  #14                 // Method org/springframework/beans/BeanUtils.instantiateClass:(Ljava/lang/Class;)Ljava/lang/Object;
      24: areturn

  public <X extends java.lang.Throwable> T orElseThrow(java.util.function.Supplier<? extends X>) throws X;
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Ljava/lang/Object;
       4: ifnonnull     17
       7: aload_1
       8: invokeinterface #12,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      13: checkcast     #15                 // class java/lang/Throwable
      16: athrow
      17: aload_0
      18: getfield      #2                  // Field value:Ljava/lang/Object;
      21: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Ljava/lang/Object;
       4: invokestatic  #16                 // Method org/springframework/util/ObjectUtils.nullSafeHashCode:(Ljava/lang/Object;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: getfield      #2                  // Field value:Ljava/lang/Object;
      28: aload_1
      29: checkcast     #18                 // class org/springframework/boot/context/properties/bind/BindResult
      32: getfield      #2                  // Field value:Ljava/lang/Object;
      35: invokestatic  #19                 // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      38: ireturn

  static <T> org.springframework.boot.context.properties.bind.BindResult<T> of(T);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: getstatic     #20                 // Field UNBOUND:Lorg/springframework/boot/context/properties/bind/BindResult;
       7: areturn
       8: new           #18                 // class org/springframework/boot/context/properties/bind/BindResult
      11: dup
      12: aload_0
      13: invokespecial #21                 // Method "<init>":(Ljava/lang/Object;)V
      16: areturn

  static {};
    Code:
       0: new           #18                 // class org/springframework/boot/context/properties/bind/BindResult
       3: dup
       4: aconst_null
       5: invokespecial #21                 // Method "<init>":(Ljava/lang/Object;)V
       8: putstatic     #20                 // Field UNBOUND:Lorg/springframework/boot/context/properties/bind/BindResult;
      11: return
}
