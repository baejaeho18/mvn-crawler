Compiled from "SpringIterableConfigurationPropertySource.java"
class org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource extends org.springframework.boot.context.properties.source.SpringConfigurationPropertySource implements org.springframework.boot.context.properties.source.IterableConfigurationPropertySource {
  private volatile java.lang.Object cacheKey;

  private volatile org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Cache cache;

  org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource(org.springframework.core.env.EnumerablePropertySource<?>, org.springframework.boot.context.properties.source.PropertyMapper);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokespecial #1                  // Method org/springframework/boot/context/properties/source/SpringConfigurationPropertySource."<init>":(Lorg/springframework/core/env/PropertySource;Lorg/springframework/boot/context/properties/source/PropertyMapper;Ljava/util/function/Function;)V
       7: aload_0
       8: invokespecial #2                  // Method assertEnumerablePropertySource:()V
      11: return

  private void assertEnumerablePropertySource();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getPropertySource:()Lorg/springframework/core/env/EnumerablePropertySource;
       4: instanceof    #4                  // class org/springframework/core/env/MapPropertySource
       7: ifeq          43
      10: aload_0
      11: invokevirtual #3                  // Method getPropertySource:()Lorg/springframework/core/env/EnumerablePropertySource;
      14: checkcast     #4                  // class org/springframework/core/env/MapPropertySource
      17: invokevirtual #5                  // Method org/springframework/core/env/MapPropertySource.getSource:()Ljava/lang/Object;
      20: checkcast     #6                  // class java/util/Map
      23: invokeinterface #7,  1            // InterfaceMethod java/util/Map.size:()I
      28: pop
      29: goto          43
      32: astore_1
      33: new           #9                  // class java/lang/IllegalArgumentException
      36: dup
      37: ldc           #10                 // String PropertySource must be fully enumerable
      39: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: return
    Exception table:
       from    to  target type
          10    29    32   Class java/lang/UnsupportedOperationException

  public org.springframework.boot.context.properties.source.ConfigurationProperty getConfigurationProperty(org.springframework.boot.context.properties.source.ConfigurationPropertyName);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method org/springframework/boot/context/properties/source/SpringConfigurationPropertySource.getConfigurationProperty:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationProperty;
       5: astore_2
       6: aload_2
       7: ifnonnull     24
      10: aload_0
      11: aload_0
      12: aload_0
      13: invokespecial #13                 // Method getCache:()Lorg/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Cache;
      16: invokespecial #14                 // Method getPropertyMappings:(Lorg/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Cache;)[Lorg/springframework/boot/context/properties/source/PropertyMapping;
      19: aload_1
      20: invokevirtual #15                 // Method find:([Lorg/springframework/boot/context/properties/source/PropertyMapping;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationProperty;
      23: astore_2
      24: aload_2
      25: areturn

  public java.util.stream.Stream<org.springframework.boot.context.properties.source.ConfigurationPropertyName> stream();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method getConfigurationPropertyNames:()Ljava/util/List;
       4: invokeinterface #17,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: areturn

  public java.util.Iterator<org.springframework.boot.context.properties.source.ConfigurationPropertyName> iterator();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method getConfigurationPropertyNames:()Ljava/util/List;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: areturn

  public org.springframework.boot.context.properties.source.ConfigurationPropertyState containsDescendantOf(org.springframework.boot.context.properties.source.ConfigurationPropertyName);
    Code:
       0: aload_0
       1: aload_1
       2: dup
       3: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: pop
       7: invokedynamic #20,  0             // InvokeDynamic #0:test:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Ljava/util/function/Predicate;
      12: invokestatic  #21                 // Method org/springframework/boot/context/properties/source/ConfigurationPropertyState.search:(Ljava/lang/Iterable;Ljava/util/function/Predicate;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyState;
      15: areturn

  private java.util.List<org.springframework.boot.context.properties.source.ConfigurationPropertyName> getConfigurationPropertyNames();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method getCache:()Lorg/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Cache;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #22                 // Method org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Cache.getNames:()Ljava/util/List;
      13: goto          17
      16: aconst_null
      17: astore_2
      18: aload_2
      19: ifnull        24
      22: aload_2
      23: areturn
      24: aload_0
      25: aload_1
      26: invokespecial #14                 // Method getPropertyMappings:(Lorg/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Cache;)[Lorg/springframework/boot/context/properties/source/PropertyMapping;
      29: astore_3
      30: new           #23                 // class java/util/ArrayList
      33: dup
      34: aload_3
      35: arraylength
      36: invokespecial #24                 // Method java/util/ArrayList."<init>":(I)V
      39: astore_2
      40: aload_3
      41: astore        4
      43: aload         4
      45: arraylength
      46: istore        5
      48: iconst_0
      49: istore        6
      51: iload         6
      53: iload         5
      55: if_icmpge     83
      58: aload         4
      60: iload         6
      62: aaload
      63: astore        7
      65: aload_2
      66: aload         7
      68: invokevirtual #25                 // Method org/springframework/boot/context/properties/source/PropertyMapping.getConfigurationPropertyName:()Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      71: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      76: pop
      77: iinc          6, 1
      80: goto          51
      83: aload_2
      84: invokestatic  #27                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      87: astore_2
      88: aload_1
      89: ifnull        97
      92: aload_1
      93: aload_2
      94: invokevirtual #28                 // Method org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Cache.setNames:(Ljava/util/List;)V
      97: aload_2
      98: areturn

  private org.springframework.boot.context.properties.source.PropertyMapping[] getPropertyMappings(org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Cache);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #29                 // Method org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Cache.getMappings:()[Lorg/springframework/boot/context/properties/source/PropertyMapping;
       8: goto          12
      11: aconst_null
      12: astore_2
      13: aload_2
      14: ifnull        19
      17: aload_2
      18: areturn
      19: aload_0
      20: invokevirtual #3                  // Method getPropertySource:()Lorg/springframework/core/env/EnumerablePropertySource;
      23: invokevirtual #30                 // Method org/springframework/core/env/EnumerablePropertySource.getPropertyNames:()[Ljava/lang/String;
      26: astore_3
      27: new           #23                 // class java/util/ArrayList
      30: dup
      31: aload_3
      32: arraylength
      33: iconst_2
      34: imul
      35: invokespecial #24                 // Method java/util/ArrayList."<init>":(I)V
      38: astore        4
      40: aload_3
      41: astore        5
      43: aload         5
      45: arraylength
      46: istore        6
      48: iconst_0
      49: istore        7
      51: iload         7
      53: iload         6
      55: if_icmpge     122
      58: aload         5
      60: iload         7
      62: aaload
      63: astore        8
      65: aload_0
      66: invokevirtual #31                 // Method getMapper:()Lorg/springframework/boot/context/properties/source/PropertyMapper;
      69: aload         8
      71: invokeinterface #32,  2           // InterfaceMethod org/springframework/boot/context/properties/source/PropertyMapper.map:(Ljava/lang/String;)[Lorg/springframework/boot/context/properties/source/PropertyMapping;
      76: astore        9
      78: aload         9
      80: arraylength
      81: istore        10
      83: iconst_0
      84: istore        11
      86: iload         11
      88: iload         10
      90: if_icmpge     116
      93: aload         9
      95: iload         11
      97: aaload
      98: astore        12
     100: aload         4
     102: aload         12
     104: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     109: pop
     110: iinc          11, 1
     113: goto          86
     116: iinc          7, 1
     119: goto          51
     122: aload         4
     124: iconst_0
     125: anewarray     #33                 // class org/springframework/boot/context/properties/source/PropertyMapping
     128: invokeinterface #34,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     133: checkcast     #35                 // class "[Lorg/springframework/boot/context/properties/source/PropertyMapping;"
     136: astore_2
     137: aload_1
     138: ifnull        146
     141: aload_1
     142: aload_2
     143: invokevirtual #36                 // Method org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Cache.setMappings:([Lorg/springframework/boot/context/properties/source/PropertyMapping;)V
     146: aload_2
     147: areturn

  private org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Cache getCache();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method getCacheKey:()Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: aload_1
      12: aload_0
      13: getfield      #38                 // Field cacheKey:Ljava/lang/Object;
      16: invokestatic  #39                 // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      19: ifeq          27
      22: aload_0
      23: getfield      #40                 // Field cache:Lorg/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Cache;
      26: areturn
      27: aload_0
      28: new           #41                 // class org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Cache
      31: dup
      32: aconst_null
      33: invokespecial #42                 // Method org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Cache."<init>":(Lorg/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$1;)V
      36: putfield      #40                 // Field cache:Lorg/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Cache;
      39: aload_0
      40: aload_1
      41: putfield      #38                 // Field cacheKey:Ljava/lang/Object;
      44: aload_0
      45: getfield      #40                 // Field cache:Lorg/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Cache;
      48: areturn

  private java.lang.Object getCacheKey();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getPropertySource:()Lorg/springframework/core/env/EnumerablePropertySource;
       4: instanceof    #4                  // class org/springframework/core/env/MapPropertySource
       7: ifeq          29
      10: aload_0
      11: invokevirtual #3                  // Method getPropertySource:()Lorg/springframework/core/env/EnumerablePropertySource;
      14: checkcast     #4                  // class org/springframework/core/env/MapPropertySource
      17: invokevirtual #5                  // Method org/springframework/core/env/MapPropertySource.getSource:()Ljava/lang/Object;
      20: checkcast     #6                  // class java/util/Map
      23: invokeinterface #43,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      28: areturn
      29: aload_0
      30: invokevirtual #3                  // Method getPropertySource:()Lorg/springframework/core/env/EnumerablePropertySource;
      33: invokevirtual #30                 // Method org/springframework/core/env/EnumerablePropertySource.getPropertyNames:()[Ljava/lang/String;
      36: areturn

  protected org.springframework.core.env.EnumerablePropertySource<?> getPropertySource();
    Code:
       0: aload_0
       1: invokespecial #44                 // Method org/springframework/boot/context/properties/source/SpringConfigurationPropertySource.getPropertySource:()Lorg/springframework/core/env/PropertySource;
       4: checkcast     #45                 // class org/springframework/core/env/EnumerablePropertySource
       7: areturn

  protected org.springframework.core.env.PropertySource getPropertySource();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getPropertySource:()Lorg/springframework/core/env/EnumerablePropertySource;
       4: areturn
}
