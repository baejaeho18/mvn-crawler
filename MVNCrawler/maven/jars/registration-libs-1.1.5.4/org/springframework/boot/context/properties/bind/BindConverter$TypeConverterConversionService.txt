Compiled from "BindConverter.java"
class org.springframework.boot.context.properties.bind.BindConverter$TypeConverterConversionService extends org.springframework.core.convert.support.GenericConversionService {
  org.springframework.boot.context.properties.bind.BindConverter$TypeConverterConversionService(java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/core/convert/support/GenericConversionService."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/boot/context/properties/bind/BindConverter$TypeConverterConverter
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #3                  // Method createTypeConverter:(Ljava/util/function/Consumer;)Lorg/springframework/beans/SimpleTypeConverter;
      14: invokespecial #4                  // Method org/springframework/boot/context/properties/bind/BindConverter$TypeConverterConverter."<init>":(Lorg/springframework/beans/SimpleTypeConverter;)V
      17: invokevirtual #5                  // Method addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
      20: aload_0
      21: invokestatic  #6                  // Method org/springframework/boot/convert/ApplicationConversionService.addDelimitedStringConverters:(Lorg/springframework/core/convert/converter/ConverterRegistry;)V
      24: return

  private org.springframework.beans.SimpleTypeConverter createTypeConverter(java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>);
    Code:
       0: new           #7                  // class org/springframework/beans/SimpleTypeConverter
       3: dup
       4: invokespecial #8                  // Method org/springframework/beans/SimpleTypeConverter."<init>":()V
       7: astore_2
       8: aload_1
       9: ifnull        19
      12: aload_1
      13: aload_2
      14: invokeinterface #9,  2            // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      19: aload_2
      20: areturn

  public boolean canConvert(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_2
       1: invokevirtual #10                 // Method org/springframework/core/convert/TypeDescriptor.isArray:()Z
       4: ifeq          19
       7: aload_2
       8: invokevirtual #11                 // Method org/springframework/core/convert/TypeDescriptor.getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      11: invokevirtual #12                 // Method org/springframework/core/convert/TypeDescriptor.isPrimitive:()Z
      14: ifeq          19
      17: iconst_0
      18: ireturn
      19: aload_0
      20: aload_1
      21: aload_2
      22: invokespecial #13                 // Method org/springframework/core/convert/support/GenericConversionService.canConvert:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
      25: ireturn
}
