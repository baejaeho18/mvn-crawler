Compiled from "SpringPhysicalNamingStrategy.java"
public class org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy implements org.hibernate.boot.model.naming.PhysicalNamingStrategy {
  public org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.hibernate.boot.model.naming.Identifier toPhysicalCatalogName(org.hibernate.boot.model.naming.Identifier, org.hibernate.engine.jdbc.env.spi.JdbcEnvironment);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method apply:(Lorg/hibernate/boot/model/naming/Identifier;Lorg/hibernate/engine/jdbc/env/spi/JdbcEnvironment;)Lorg/hibernate/boot/model/naming/Identifier;
       6: areturn

  public org.hibernate.boot.model.naming.Identifier toPhysicalSchemaName(org.hibernate.boot.model.naming.Identifier, org.hibernate.engine.jdbc.env.spi.JdbcEnvironment);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method apply:(Lorg/hibernate/boot/model/naming/Identifier;Lorg/hibernate/engine/jdbc/env/spi/JdbcEnvironment;)Lorg/hibernate/boot/model/naming/Identifier;
       6: areturn

  public org.hibernate.boot.model.naming.Identifier toPhysicalTableName(org.hibernate.boot.model.naming.Identifier, org.hibernate.engine.jdbc.env.spi.JdbcEnvironment);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method apply:(Lorg/hibernate/boot/model/naming/Identifier;Lorg/hibernate/engine/jdbc/env/spi/JdbcEnvironment;)Lorg/hibernate/boot/model/naming/Identifier;
       6: areturn

  public org.hibernate.boot.model.naming.Identifier toPhysicalSequenceName(org.hibernate.boot.model.naming.Identifier, org.hibernate.engine.jdbc.env.spi.JdbcEnvironment);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method apply:(Lorg/hibernate/boot/model/naming/Identifier;Lorg/hibernate/engine/jdbc/env/spi/JdbcEnvironment;)Lorg/hibernate/boot/model/naming/Identifier;
       6: areturn

  public org.hibernate.boot.model.naming.Identifier toPhysicalColumnName(org.hibernate.boot.model.naming.Identifier, org.hibernate.engine.jdbc.env.spi.JdbcEnvironment);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method apply:(Lorg/hibernate/boot/model/naming/Identifier;Lorg/hibernate/engine/jdbc/env/spi/JdbcEnvironment;)Lorg/hibernate/boot/model/naming/Identifier;
       6: areturn

  private org.hibernate.boot.model.naming.Identifier apply(org.hibernate.boot.model.naming.Identifier, org.hibernate.engine.jdbc.env.spi.JdbcEnvironment);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #3                  // class java/lang/StringBuilder
       9: dup
      10: aload_1
      11: invokevirtual #4                  // Method org/hibernate/boot/model/naming/Identifier.getText:()Ljava/lang/String;
      14: bipush        46
      16: bipush        95
      18: invokevirtual #5                  // Method java/lang/String.replace:(CC)Ljava/lang/String;
      21: invokespecial #6                  // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      24: astore_3
      25: iconst_1
      26: istore        4
      28: iload         4
      30: aload_3
      31: invokevirtual #7                  // Method java/lang/StringBuilder.length:()I
      34: iconst_1
      35: isub
      36: if_icmpge     86
      39: aload_0
      40: aload_3
      41: iload         4
      43: iconst_1
      44: isub
      45: invokevirtual #8                  // Method java/lang/StringBuilder.charAt:(I)C
      48: aload_3
      49: iload         4
      51: invokevirtual #8                  // Method java/lang/StringBuilder.charAt:(I)C
      54: aload_3
      55: iload         4
      57: iconst_1
      58: iadd
      59: invokevirtual #8                  // Method java/lang/StringBuilder.charAt:(I)C
      62: invokespecial #9                  // Method isUnderscoreRequired:(CCC)Z
      65: ifeq          80
      68: aload_3
      69: iload         4
      71: iinc          4, 1
      74: bipush        95
      76: invokevirtual #10                 // Method java/lang/StringBuilder.insert:(IC)Ljava/lang/StringBuilder;
      79: pop
      80: iinc          4, 1
      83: goto          28
      86: aload_0
      87: aload_3
      88: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: aload_1
      92: invokevirtual #12                 // Method org/hibernate/boot/model/naming/Identifier.isQuoted:()Z
      95: aload_2
      96: invokevirtual #13                 // Method getIdentifier:(Ljava/lang/String;ZLorg/hibernate/engine/jdbc/env/spi/JdbcEnvironment;)Lorg/hibernate/boot/model/naming/Identifier;
      99: areturn

  protected org.hibernate.boot.model.naming.Identifier getIdentifier(java.lang.String, boolean, org.hibernate.engine.jdbc.env.spi.JdbcEnvironment);
    Code:
       0: aload_0
       1: aload_3
       2: invokevirtual #14                 // Method isCaseInsensitive:(Lorg/hibernate/engine/jdbc/env/spi/JdbcEnvironment;)Z
       5: ifeq          16
       8: aload_1
       9: getstatic     #15                 // Field java/util/Locale.ROOT:Ljava/util/Locale;
      12: invokevirtual #16                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      15: astore_1
      16: new           #17                 // class org/hibernate/boot/model/naming/Identifier
      19: dup
      20: aload_1
      21: iload_2
      22: invokespecial #18                 // Method org/hibernate/boot/model/naming/Identifier."<init>":(Ljava/lang/String;Z)V
      25: areturn

  protected boolean isCaseInsensitive(org.hibernate.engine.jdbc.env.spi.JdbcEnvironment);
    Code:
       0: iconst_1
       1: ireturn

  private boolean isUnderscoreRequired(char, char, char);
    Code:
       0: iload_1
       1: invokestatic  #19                 // Method java/lang/Character.isLowerCase:(C)Z
       4: ifeq          25
       7: iload_2
       8: invokestatic  #20                 // Method java/lang/Character.isUpperCase:(C)Z
      11: ifeq          25
      14: iload_3
      15: invokestatic  #19                 // Method java/lang/Character.isLowerCase:(C)Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn
}
