Compiled from "ExponentialBackOffPolicy.java"
public class org.springframework.retry.backoff.ExponentialBackOffPolicy implements org.springframework.retry.backoff.SleepingBackOffPolicy<org.springframework.retry.backoff.ExponentialBackOffPolicy> {
  protected final org.apache.commons.logging.Log logger;

  public static final long DEFAULT_INITIAL_INTERVAL;

  public static final long DEFAULT_MAX_INTERVAL;

  public static final double DEFAULT_MULTIPLIER;

  private volatile long initialInterval;

  private volatile long maxInterval;

  private volatile double multiplier;

  private org.springframework.retry.backoff.Sleeper sleeper;

  public org.springframework.retry.backoff.ExponentialBackOffPolicy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: ldc2_w        #6                  // long 100l
      19: putfield      #8                  // Field initialInterval:J
      22: aload_0
      23: ldc2_w        #9                  // long 30000l
      26: putfield      #11                 // Field maxInterval:J
      29: aload_0
      30: ldc2_w        #12                 // double 2.0d
      33: putfield      #14                 // Field multiplier:D
      36: aload_0
      37: new           #15                 // class org/springframework/retry/backoff/ThreadWaitSleeper
      40: dup
      41: invokespecial #16                 // Method org/springframework/retry/backoff/ThreadWaitSleeper."<init>":()V
      44: putfield      #17                 // Field sleeper:Lorg/springframework/retry/backoff/Sleeper;
      47: return

  public void setSleeper(org.springframework.retry.backoff.Sleeper);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field sleeper:Lorg/springframework/retry/backoff/Sleeper;
       5: return

  public org.springframework.retry.backoff.ExponentialBackOffPolicy withSleeper(org.springframework.retry.backoff.Sleeper);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method newInstance:()Lorg/springframework/retry/backoff/ExponentialBackOffPolicy;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #19                 // Method cloneValues:(Lorg/springframework/retry/backoff/ExponentialBackOffPolicy;)V
      10: aload_2
      11: aload_1
      12: invokevirtual #20                 // Method setSleeper:(Lorg/springframework/retry/backoff/Sleeper;)V
      15: aload_2
      16: areturn

  protected org.springframework.retry.backoff.ExponentialBackOffPolicy newInstance();
    Code:
       0: new           #5                  // class org/springframework/retry/backoff/ExponentialBackOffPolicy
       3: dup
       4: invokespecial #21                 // Method "<init>":()V
       7: areturn

  protected void cloneValues(org.springframework.retry.backoff.ExponentialBackOffPolicy);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #22                 // Method getInitialInterval:()J
       5: invokevirtual #23                 // Method setInitialInterval:(J)V
       8: aload_1
       9: aload_0
      10: invokevirtual #24                 // Method getMaxInterval:()J
      13: invokevirtual #25                 // Method setMaxInterval:(J)V
      16: aload_1
      17: aload_0
      18: invokevirtual #26                 // Method getMultiplier:()D
      21: invokevirtual #27                 // Method setMultiplier:(D)V
      24: aload_1
      25: aload_0
      26: getfield      #17                 // Field sleeper:Lorg/springframework/retry/backoff/Sleeper;
      29: invokevirtual #20                 // Method setSleeper:(Lorg/springframework/retry/backoff/Sleeper;)V
      32: return

  public void setInitialInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: lconst_1
       3: lcmp
       4: ifle          11
       7: lload_1
       8: goto          12
      11: lconst_1
      12: putfield      #8                  // Field initialInterval:J
      15: return

  public void setMultiplier(double);
    Code:
       0: aload_0
       1: dload_1
       2: dconst_1
       3: dcmpl
       4: ifle          11
       7: dload_1
       8: goto          12
      11: dconst_1
      12: putfield      #14                 // Field multiplier:D
      15: return

  public void setMaxInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: lconst_0
       3: lcmp
       4: ifle          11
       7: lload_1
       8: goto          12
      11: lconst_1
      12: putfield      #11                 // Field maxInterval:J
      15: return

  public long getInitialInterval();
    Code:
       0: aload_0
       1: getfield      #8                  // Field initialInterval:J
       4: lreturn

  public long getMaxInterval();
    Code:
       0: aload_0
       1: getfield      #11                 // Field maxInterval:J
       4: lreturn

  public double getMultiplier();
    Code:
       0: aload_0
       1: getfield      #14                 // Field multiplier:D
       4: dreturn

  public org.springframework.retry.backoff.BackOffContext start(org.springframework.retry.RetryContext);
    Code:
       0: new           #28                 // class org/springframework/retry/backoff/ExponentialBackOffPolicy$ExponentialBackOffContext
       3: dup
       4: aload_0
       5: getfield      #8                  // Field initialInterval:J
       8: aload_0
       9: getfield      #14                 // Field multiplier:D
      12: aload_0
      13: getfield      #11                 // Field maxInterval:J
      16: invokespecial #29                 // Method org/springframework/retry/backoff/ExponentialBackOffPolicy$ExponentialBackOffContext."<init>":(JDJ)V
      19: areturn

  public void backOff(org.springframework.retry.backoff.BackOffContext) throws org.springframework.retry.backoff.BackOffInterruptedException;
    Code:
       0: aload_1
       1: checkcast     #28                 // class org/springframework/retry/backoff/ExponentialBackOffPolicy$ExponentialBackOffContext
       4: astore_2
       5: aload_2
       6: invokevirtual #30                 // Method org/springframework/retry/backoff/ExponentialBackOffPolicy$ExponentialBackOffContext.getSleepAndIncrement:()J
       9: lstore_3
      10: aload_0
      11: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      14: invokeinterface #31,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      19: ifeq          50
      22: aload_0
      23: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      26: new           #32                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #34                 // String Sleeping for
      35: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: lload_3
      39: invokevirtual #36                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      42: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokeinterface #38,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      50: aload_0
      51: getfield      #17                 // Field sleeper:Lorg/springframework/retry/backoff/Sleeper;
      54: lload_3
      55: invokeinterface #39,  3           // InterfaceMethod org/springframework/retry/backoff/Sleeper.sleep:(J)V
      60: goto          75
      63: astore_3
      64: new           #41                 // class org/springframework/retry/backoff/BackOffInterruptedException
      67: dup
      68: ldc           #42                 // String Thread interrupted while sleeping
      70: aload_3
      71: invokespecial #43                 // Method org/springframework/retry/backoff/BackOffInterruptedException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      74: athrow
      75: return
    Exception table:
       from    to  target type
           5    60    63   Class java/lang/InterruptedException

  public java.lang.String toString();
    Code:
       0: new           #32                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokestatic  #44                 // Method org/springframework/util/ClassUtils.getShortName:(Ljava/lang/Class;)Ljava/lang/String;
      14: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #45                 // String [initialInterval=
      19: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #8                  // Field initialInterval:J
      26: invokevirtual #36                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      29: ldc           #46                 // String , multiplier=
      31: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #14                 // Field multiplier:D
      38: invokevirtual #47                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      41: ldc           #48                 // String , maxInterval=
      43: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: getfield      #11                 // Field maxInterval:J
      50: invokevirtual #36                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      53: ldc           #49                 // String ]
      55: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: areturn

  public org.springframework.retry.backoff.SleepingBackOffPolicy withSleeper(org.springframework.retry.backoff.Sleeper);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method withSleeper:(Lorg/springframework/retry/backoff/Sleeper;)Lorg/springframework/retry/backoff/ExponentialBackOffPolicy;
       5: areturn
}
