Compiled from "CircuitBreakerRetryPolicy.java"
public class org.springframework.retry.policy.CircuitBreakerRetryPolicy implements org.springframework.retry.RetryPolicy {
  public static final java.lang.String CIRCUIT_OPEN;

  public static final java.lang.String CIRCUIT_SHORT_COUNT;

  private static org.apache.commons.logging.Log logger;

  private final org.springframework.retry.RetryPolicy delegate;

  private long resetTimeout;

  private long openTimeout;

  public org.springframework.retry.policy.CircuitBreakerRetryPolicy();
    Code:
       0: aload_0
       1: new           #2                  // class org/springframework/retry/policy/SimpleRetryPolicy
       4: dup
       5: invokespecial #3                  // Method org/springframework/retry/policy/SimpleRetryPolicy."<init>":()V
       8: invokespecial #4                  // Method "<init>":(Lorg/springframework/retry/RetryPolicy;)V
      11: return

  public org.springframework.retry.policy.CircuitBreakerRetryPolicy(org.springframework.retry.RetryPolicy);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #6                  // long 20000l
       8: putfield      #8                  // Field resetTimeout:J
      11: aload_0
      12: ldc2_w        #9                  // long 5000l
      15: putfield      #11                 // Field openTimeout:J
      18: aload_0
      19: aload_1
      20: putfield      #12                 // Field delegate:Lorg/springframework/retry/RetryPolicy;
      23: return

  public void setResetTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #8                  // Field resetTimeout:J
       5: return

  public void setOpenTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #11                 // Field openTimeout:J
       5: return

  public boolean canRetry(org.springframework.retry.RetryContext);
    Code:
       0: aload_1
       1: checkcast     #13                 // class org/springframework/retry/policy/CircuitBreakerRetryPolicy$CircuitBreakerRetryContext
       4: astore_2
       5: aload_2
       6: invokevirtual #14                 // Method org/springframework/retry/policy/CircuitBreakerRetryPolicy$CircuitBreakerRetryContext.isOpen:()Z
       9: ifeq          18
      12: aload_2
      13: invokevirtual #15                 // Method org/springframework/retry/policy/CircuitBreakerRetryPolicy$CircuitBreakerRetryContext.incrementShortCircuitCount:()V
      16: iconst_0
      17: ireturn
      18: aload_2
      19: invokevirtual #16                 // Method org/springframework/retry/policy/CircuitBreakerRetryPolicy$CircuitBreakerRetryContext.reset:()V
      22: aload_0
      23: getfield      #12                 // Field delegate:Lorg/springframework/retry/RetryPolicy;
      26: aload_2
      27: invokestatic  #17                 // Method org/springframework/retry/policy/CircuitBreakerRetryPolicy$CircuitBreakerRetryContext.access$000:(Lorg/springframework/retry/policy/CircuitBreakerRetryPolicy$CircuitBreakerRetryContext;)Lorg/springframework/retry/RetryContext;
      30: invokeinterface #18,  2           // InterfaceMethod org/springframework/retry/RetryPolicy.canRetry:(Lorg/springframework/retry/RetryContext;)Z
      35: ireturn

  public org.springframework.retry.RetryContext open(org.springframework.retry.RetryContext);
    Code:
       0: new           #13                 // class org/springframework/retry/policy/CircuitBreakerRetryPolicy$CircuitBreakerRetryContext
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #12                 // Field delegate:Lorg/springframework/retry/RetryPolicy;
       9: aload_0
      10: getfield      #8                  // Field resetTimeout:J
      13: aload_0
      14: getfield      #11                 // Field openTimeout:J
      17: invokespecial #19                 // Method org/springframework/retry/policy/CircuitBreakerRetryPolicy$CircuitBreakerRetryContext."<init>":(Lorg/springframework/retry/RetryContext;Lorg/springframework/retry/RetryPolicy;JJ)V
      20: areturn

  public void close(org.springframework.retry.RetryContext);
    Code:
       0: aload_1
       1: checkcast     #13                 // class org/springframework/retry/policy/CircuitBreakerRetryPolicy$CircuitBreakerRetryContext
       4: astore_2
       5: aload_0
       6: getfield      #12                 // Field delegate:Lorg/springframework/retry/RetryPolicy;
       9: aload_2
      10: invokestatic  #17                 // Method org/springframework/retry/policy/CircuitBreakerRetryPolicy$CircuitBreakerRetryContext.access$000:(Lorg/springframework/retry/policy/CircuitBreakerRetryPolicy$CircuitBreakerRetryContext;)Lorg/springframework/retry/RetryContext;
      13: invokeinterface #20,  2           // InterfaceMethod org/springframework/retry/RetryPolicy.close:(Lorg/springframework/retry/RetryContext;)V
      18: return

  public void registerThrowable(org.springframework.retry.RetryContext, java.lang.Throwable);
    Code:
       0: aload_1
       1: checkcast     #13                 // class org/springframework/retry/policy/CircuitBreakerRetryPolicy$CircuitBreakerRetryContext
       4: astore_3
       5: aload_3
       6: aload_2
       7: invokevirtual #21                 // Method org/springframework/retry/policy/CircuitBreakerRetryPolicy$CircuitBreakerRetryContext.registerThrowable:(Ljava/lang/Throwable;)V
      10: aload_0
      11: getfield      #12                 // Field delegate:Lorg/springframework/retry/RetryPolicy;
      14: aload_3
      15: invokestatic  #17                 // Method org/springframework/retry/policy/CircuitBreakerRetryPolicy$CircuitBreakerRetryContext.access$000:(Lorg/springframework/retry/policy/CircuitBreakerRetryPolicy$CircuitBreakerRetryContext;)Lorg/springframework/retry/RetryContext;
      18: aload_2
      19: invokeinterface #22,  3           // InterfaceMethod org/springframework/retry/RetryPolicy.registerThrowable:(Lorg/springframework/retry/RetryContext;Ljava/lang/Throwable;)V
      24: return

  static org.apache.commons.logging.Log access$100();
    Code:
       0: getstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
       3: areturn

  static {};
    Code:
       0: ldc           #23                 // class org/springframework/retry/policy/CircuitBreakerRetryPolicy
       2: invokestatic  #24                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
