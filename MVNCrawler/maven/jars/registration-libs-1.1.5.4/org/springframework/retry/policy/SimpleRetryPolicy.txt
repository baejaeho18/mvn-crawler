Compiled from "SimpleRetryPolicy.java"
public class org.springframework.retry.policy.SimpleRetryPolicy implements org.springframework.retry.RetryPolicy {
  public static final int DEFAULT_MAX_ATTEMPTS;

  private volatile int maxAttempts;

  private org.springframework.classify.BinaryExceptionClassifier retryableClassifier;

  public org.springframework.retry.policy.SimpleRetryPolicy();
    Code:
       0: aload_0
       1: iconst_3
       2: ldc           #2                  // class java/lang/Exception
       4: iconst_1
       5: invokestatic  #3                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       8: invokestatic  #4                  // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
      11: invokespecial #5                  // Method "<init>":(ILjava/util/Map;)V
      14: return

  public org.springframework.retry.policy.SimpleRetryPolicy(int);
    Code:
       0: aload_0
       1: iload_1
       2: ldc           #2                  // class java/lang/Exception
       4: iconst_1
       5: invokestatic  #3                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       8: invokestatic  #4                  // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
      11: invokespecial #5                  // Method "<init>":(ILjava/util/Map;)V
      14: return

  public org.springframework.retry.policy.SimpleRetryPolicy(int, java.util.Map<java.lang.Class<? extends java.lang.Throwable>, java.lang.Boolean>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iconst_0
       4: invokespecial #6                  // Method "<init>":(ILjava/util/Map;Z)V
       7: return

  public org.springframework.retry.policy.SimpleRetryPolicy(int, java.util.Map<java.lang.Class<? extends java.lang.Throwable>, java.lang.Boolean>, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: iconst_0
       5: invokespecial #7                  // Method "<init>":(ILjava/util/Map;ZZ)V
       8: return

  public org.springframework.retry.policy.SimpleRetryPolicy(int, java.util.Map<java.lang.Class<? extends java.lang.Throwable>, java.lang.Boolean>, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #9                  // class org/springframework/classify/BinaryExceptionClassifier
       8: dup
       9: iconst_0
      10: invokespecial #10                 // Method org/springframework/classify/BinaryExceptionClassifier."<init>":(Z)V
      13: putfield      #11                 // Field retryableClassifier:Lorg/springframework/classify/BinaryExceptionClassifier;
      16: aload_0
      17: iload_1
      18: putfield      #12                 // Field maxAttempts:I
      21: aload_0
      22: new           #9                  // class org/springframework/classify/BinaryExceptionClassifier
      25: dup
      26: aload_2
      27: iload         4
      29: invokespecial #13                 // Method org/springframework/classify/BinaryExceptionClassifier."<init>":(Ljava/util/Map;Z)V
      32: putfield      #11                 // Field retryableClassifier:Lorg/springframework/classify/BinaryExceptionClassifier;
      35: aload_0
      36: getfield      #11                 // Field retryableClassifier:Lorg/springframework/classify/BinaryExceptionClassifier;
      39: iload_3
      40: invokevirtual #14                 // Method org/springframework/classify/BinaryExceptionClassifier.setTraverseCauses:(Z)V
      43: return

  public void setMaxAttempts(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field maxAttempts:I
       5: return

  public int getMaxAttempts();
    Code:
       0: aload_0
       1: getfield      #12                 // Field maxAttempts:I
       4: ireturn

  public boolean canRetry(org.springframework.retry.RetryContext);
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod org/springframework/retry/RetryContext.getLastThrowable:()Ljava/lang/Throwable;
       6: astore_2
       7: aload_2
       8: ifnull        19
      11: aload_0
      12: aload_2
      13: invokespecial #16                 // Method retryForException:(Ljava/lang/Throwable;)Z
      16: ifeq          36
      19: aload_1
      20: invokeinterface #17,  1           // InterfaceMethod org/springframework/retry/RetryContext.getRetryCount:()I
      25: aload_0
      26: getfield      #12                 // Field maxAttempts:I
      29: if_icmpge     36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  public void close(org.springframework.retry.RetryContext);
    Code:
       0: return

  public void registerThrowable(org.springframework.retry.RetryContext, java.lang.Throwable);
    Code:
       0: aload_1
       1: checkcast     #18                 // class org/springframework/retry/policy/SimpleRetryPolicy$SimpleRetryContext
       4: astore_3
       5: aload_3
       6: aload_2
       7: invokevirtual #19                 // Method org/springframework/retry/policy/SimpleRetryPolicy$SimpleRetryContext.registerThrowable:(Ljava/lang/Throwable;)V
      10: return

  public org.springframework.retry.RetryContext open(org.springframework.retry.RetryContext);
    Code:
       0: new           #18                 // class org/springframework/retry/policy/SimpleRetryPolicy$SimpleRetryContext
       3: dup
       4: aload_1
       5: invokespecial #20                 // Method org/springframework/retry/policy/SimpleRetryPolicy$SimpleRetryContext."<init>":(Lorg/springframework/retry/RetryContext;)V
       8: areturn

  private boolean retryForException(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #11                 // Field retryableClassifier:Lorg/springframework/classify/BinaryExceptionClassifier;
       4: aload_1
       5: invokevirtual #21                 // Method org/springframework/classify/BinaryExceptionClassifier.classify:(Ljava/lang/Throwable;)Ljava/lang/Boolean;
       8: invokevirtual #22                 // Method java/lang/Boolean.booleanValue:()Z
      11: ireturn

  public java.lang.String toString();
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokestatic  #26                 // Method org/springframework/util/ClassUtils.getShortName:(Ljava/lang/Class;)Ljava/lang/String;
      14: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #28                 // String [maxAttempts=
      19: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #12                 // Field maxAttempts:I
      26: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: ldc           #30                 // String ]
      31: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: areturn
}
