Compiled from "AnnotationAwareRetryOperationsInterceptor.java"
class org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor$1 implements org.springframework.util.ReflectionUtils$MethodCallback {
  final java.util.concurrent.atomic.AtomicBoolean val$foundRecoverable;

  final org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor this$0;

  org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor$1(org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor, java.util.concurrent.atomic.AtomicBoolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/retry/annotation/AnnotationAwareRetryOperationsInterceptor;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$foundRecoverable:Ljava/util/concurrent/atomic/AtomicBoolean;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void doWith(java.lang.reflect.Method) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;
    Code:
       0: aload_1
       1: ldc           #4                  // class org/springframework/retry/annotation/Recover
       3: invokestatic  #5                  // Method org/springframework/core/annotation/AnnotationUtils.findAnnotation:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       6: ifnull        17
       9: aload_0
      10: getfield      #2                  // Field val$foundRecoverable:Ljava/util/concurrent/atomic/AtomicBoolean;
      13: iconst_1
      14: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      17: return
}
