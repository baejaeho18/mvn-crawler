Compiled from "SimpleEvaluationContext.java"
public class org.springframework.expression.spel.support.SimpleEvaluationContext implements org.springframework.expression.EvaluationContext {
  private static final org.springframework.expression.TypeLocator typeNotFoundTypeLocator;

  private final org.springframework.expression.TypedValue rootObject;

  private final java.util.List<org.springframework.expression.PropertyAccessor> propertyAccessors;

  private final java.util.List<org.springframework.expression.MethodResolver> methodResolvers;

  private final org.springframework.expression.TypeConverter typeConverter;

  private final org.springframework.expression.TypeComparator typeComparator;

  private final org.springframework.expression.OperatorOverloader operatorOverloader;

  private final java.util.Map<java.lang.String, java.lang.Object> variables;

  private org.springframework.expression.spel.support.SimpleEvaluationContext(java.util.List<org.springframework.expression.PropertyAccessor>, java.util.List<org.springframework.expression.MethodResolver>, org.springframework.expression.TypeConverter, org.springframework.expression.TypedValue);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class org/springframework/expression/spel/support/StandardTypeComparator
       8: dup
       9: invokespecial #4                  // Method org/springframework/expression/spel/support/StandardTypeComparator."<init>":()V
      12: putfield      #5                  // Field typeComparator:Lorg/springframework/expression/TypeComparator;
      15: aload_0
      16: new           #6                  // class org/springframework/expression/spel/support/StandardOperatorOverloader
      19: dup
      20: invokespecial #7                  // Method org/springframework/expression/spel/support/StandardOperatorOverloader."<init>":()V
      23: putfield      #8                  // Field operatorOverloader:Lorg/springframework/expression/OperatorOverloader;
      26: aload_0
      27: new           #9                  // class java/util/HashMap
      30: dup
      31: invokespecial #10                 // Method java/util/HashMap."<init>":()V
      34: putfield      #11                 // Field variables:Ljava/util/Map;
      37: aload_0
      38: aload_1
      39: putfield      #12                 // Field propertyAccessors:Ljava/util/List;
      42: aload_0
      43: aload_2
      44: putfield      #13                 // Field methodResolvers:Ljava/util/List;
      47: aload_0
      48: aload_3
      49: ifnull        56
      52: aload_3
      53: goto          63
      56: new           #14                 // class org/springframework/expression/spel/support/StandardTypeConverter
      59: dup
      60: invokespecial #15                 // Method org/springframework/expression/spel/support/StandardTypeConverter."<init>":()V
      63: putfield      #16                 // Field typeConverter:Lorg/springframework/expression/TypeConverter;
      66: aload_0
      67: aload         4
      69: ifnull        77
      72: aload         4
      74: goto          80
      77: getstatic     #17                 // Field org/springframework/expression/TypedValue.NULL:Lorg/springframework/expression/TypedValue;
      80: putfield      #18                 // Field rootObject:Lorg/springframework/expression/TypedValue;
      83: return

  public org.springframework.expression.TypedValue getRootObject();
    Code:
       0: aload_0
       1: getfield      #18                 // Field rootObject:Lorg/springframework/expression/TypedValue;
       4: areturn

  public java.util.List<org.springframework.expression.PropertyAccessor> getPropertyAccessors();
    Code:
       0: aload_0
       1: getfield      #12                 // Field propertyAccessors:Ljava/util/List;
       4: areturn

  public java.util.List<org.springframework.expression.ConstructorResolver> getConstructorResolvers();
    Code:
       0: invokestatic  #19                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       3: areturn

  public java.util.List<org.springframework.expression.MethodResolver> getMethodResolvers();
    Code:
       0: aload_0
       1: getfield      #13                 // Field methodResolvers:Ljava/util/List;
       4: areturn

  public org.springframework.expression.BeanResolver getBeanResolver();
    Code:
       0: aconst_null
       1: areturn

  public org.springframework.expression.TypeLocator getTypeLocator();
    Code:
       0: getstatic     #20                 // Field typeNotFoundTypeLocator:Lorg/springframework/expression/TypeLocator;
       3: areturn

  public org.springframework.expression.TypeConverter getTypeConverter();
    Code:
       0: aload_0
       1: getfield      #16                 // Field typeConverter:Lorg/springframework/expression/TypeConverter;
       4: areturn

  public org.springframework.expression.TypeComparator getTypeComparator();
    Code:
       0: aload_0
       1: getfield      #5                  // Field typeComparator:Lorg/springframework/expression/TypeComparator;
       4: areturn

  public org.springframework.expression.OperatorOverloader getOperatorOverloader();
    Code:
       0: aload_0
       1: getfield      #8                  // Field operatorOverloader:Lorg/springframework/expression/OperatorOverloader;
       4: areturn

  public void setVariable(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #11                 // Field variables:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public java.lang.Object lookupVariable(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field variables:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static org.springframework.expression.spel.support.SimpleEvaluationContext$Builder forPropertyAccessors(org.springframework.expression.PropertyAccessor...);
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: arraylength
       4: istore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_2
       9: if_icmpge     43
      12: aload_1
      13: iload_3
      14: aaload
      15: astore        4
      17: aload         4
      19: invokevirtual #23                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: ldc           #24                 // class org/springframework/expression/spel/support/ReflectivePropertyAccessor
      24: if_acmpne     37
      27: new           #25                 // class java/lang/IllegalArgumentException
      30: dup
      31: ldc           #26                 // String SimpleEvaluationContext is not designed for use with a plain ReflectivePropertyAccessor. Consider using DataBindingPropertyAccessor or a custom subclass.
      33: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: iinc          3, 1
      40: goto          7
      43: new           #28                 // class org/springframework/expression/spel/support/SimpleEvaluationContext$Builder
      46: dup
      47: aload_0
      48: invokespecial #29                 // Method org/springframework/expression/spel/support/SimpleEvaluationContext$Builder."<init>":([Lorg/springframework/expression/PropertyAccessor;)V
      51: areturn

  public static org.springframework.expression.spel.support.SimpleEvaluationContext$Builder forReadOnlyDataBinding();
    Code:
       0: new           #28                 // class org/springframework/expression/spel/support/SimpleEvaluationContext$Builder
       3: dup
       4: iconst_1
       5: anewarray     #30                 // class org/springframework/expression/PropertyAccessor
       8: dup
       9: iconst_0
      10: invokestatic  #31                 // Method org/springframework/expression/spel/support/DataBindingPropertyAccessor.forReadOnlyAccess:()Lorg/springframework/expression/spel/support/DataBindingPropertyAccessor;
      13: aastore
      14: invokespecial #29                 // Method org/springframework/expression/spel/support/SimpleEvaluationContext$Builder."<init>":([Lorg/springframework/expression/PropertyAccessor;)V
      17: areturn

  public static org.springframework.expression.spel.support.SimpleEvaluationContext$Builder forReadWriteDataBinding();
    Code:
       0: new           #28                 // class org/springframework/expression/spel/support/SimpleEvaluationContext$Builder
       3: dup
       4: iconst_1
       5: anewarray     #30                 // class org/springframework/expression/PropertyAccessor
       8: dup
       9: iconst_0
      10: invokestatic  #32                 // Method org/springframework/expression/spel/support/DataBindingPropertyAccessor.forReadWriteAccess:()Lorg/springframework/expression/spel/support/DataBindingPropertyAccessor;
      13: aastore
      14: invokespecial #29                 // Method org/springframework/expression/spel/support/SimpleEvaluationContext$Builder."<init>":([Lorg/springframework/expression/PropertyAccessor;)V
      17: areturn

  private static java.lang.Class lambda$static$0(java.lang.String) throws org.springframework.expression.EvaluationException;
    Code:
       0: new           #33                 // class org/springframework/expression/spel/SpelEvaluationException
       3: dup
       4: getstatic     #34                 // Field org/springframework/expression/spel/SpelMessage.TYPE_NOT_FOUND:Lorg/springframework/expression/spel/SpelMessage;
       7: iconst_1
       8: anewarray     #35                 // class java/lang/Object
      11: dup
      12: iconst_0
      13: aload_0
      14: aastore
      15: invokespecial #36                 // Method org/springframework/expression/spel/SpelEvaluationException."<init>":(Lorg/springframework/expression/spel/SpelMessage;[Ljava/lang/Object;)V
      18: athrow

  org.springframework.expression.spel.support.SimpleEvaluationContext(java.util.List, java.util.List, org.springframework.expression.TypeConverter, org.springframework.expression.TypedValue, org.springframework.expression.spel.support.SimpleEvaluationContext$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #1                  // Method "<init>":(Ljava/util/List;Ljava/util/List;Lorg/springframework/expression/TypeConverter;Lorg/springframework/expression/TypedValue;)V
       9: return

  static {};
    Code:
       0: invokedynamic #37,  0             // InvokeDynamic #0:findType:()Lorg/springframework/expression/TypeLocator;
       5: putstatic     #20                 // Field typeNotFoundTypeLocator:Lorg/springframework/expression/TypeLocator;
       8: return
}
