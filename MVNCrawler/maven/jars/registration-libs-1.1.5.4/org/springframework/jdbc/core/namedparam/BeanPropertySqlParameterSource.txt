Compiled from "BeanPropertySqlParameterSource.java"
public class org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource extends org.springframework.jdbc.core.namedparam.AbstractSqlParameterSource {
  private final org.springframework.beans.BeanWrapper beanWrapper;

  private java.lang.String[] propertyNames;

  public org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/jdbc/core/namedparam/AbstractSqlParameterSource."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method org/springframework/beans/PropertyAccessorFactory.forBeanPropertyAccess:(Ljava/lang/Object;)Lorg/springframework/beans/BeanWrapper;
       9: putfield      #3                  // Field beanWrapper:Lorg/springframework/beans/BeanWrapper;
      12: return

  public boolean hasValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field beanWrapper:Lorg/springframework/beans/BeanWrapper;
       4: aload_1
       5: invokeinterface #4,  2            // InterfaceMethod org/springframework/beans/BeanWrapper.isReadableProperty:(Ljava/lang/String;)Z
      10: ireturn

  public java.lang.Object getValue(java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field beanWrapper:Lorg/springframework/beans/BeanWrapper;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod org/springframework/beans/BeanWrapper.getPropertyValue:(Ljava/lang/String;)Ljava/lang/Object;
      10: areturn
      11: astore_2
      12: new           #7                  // class java/lang/IllegalArgumentException
      15: dup
      16: aload_2
      17: invokevirtual #8                  // Method org/springframework/beans/NotReadablePropertyException.getMessage:()Ljava/lang/String;
      20: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
    Exception table:
       from    to  target type
           0    10    11   Class org/springframework/beans/NotReadablePropertyException

  public int getSqlType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method org/springframework/jdbc/core/namedparam/AbstractSqlParameterSource.getSqlType:(Ljava/lang/String;)I
       5: istore_2
       6: iload_2
       7: ldc           #12                 // int -2147483648
       9: if_icmpeq     14
      12: iload_2
      13: ireturn
      14: aload_0
      15: getfield      #3                  // Field beanWrapper:Lorg/springframework/beans/BeanWrapper;
      18: aload_1
      19: invokeinterface #13,  2           // InterfaceMethod org/springframework/beans/BeanWrapper.getPropertyType:(Ljava/lang/String;)Ljava/lang/Class;
      24: astore_3
      25: aload_3
      26: invokestatic  #14                 // Method org/springframework/jdbc/core/StatementCreatorUtils.javaTypeToSqlParameterType:(Ljava/lang/Class;)I
      29: ireturn

  public java.lang.String[] getParameterNames();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getReadablePropertyNames:()[Ljava/lang/String;
       4: areturn

  public java.lang.String[] getReadablePropertyNames();
    Code:
       0: aload_0
       1: getfield      #16                 // Field propertyNames:[Ljava/lang/String;
       4: ifnonnull     90
       7: new           #17                 // class java/util/ArrayList
      10: dup
      11: invokespecial #18                 // Method java/util/ArrayList."<init>":()V
      14: astore_1
      15: aload_0
      16: getfield      #3                  // Field beanWrapper:Lorg/springframework/beans/BeanWrapper;
      19: invokeinterface #19,  1           // InterfaceMethod org/springframework/beans/BeanWrapper.getPropertyDescriptors:()[Ljava/beans/PropertyDescriptor;
      24: astore_2
      25: aload_2
      26: astore_3
      27: aload_3
      28: arraylength
      29: istore        4
      31: iconst_0
      32: istore        5
      34: iload         5
      36: iload         4
      38: if_icmpge     82
      41: aload_3
      42: iload         5
      44: aaload
      45: astore        6
      47: aload_0
      48: getfield      #3                  // Field beanWrapper:Lorg/springframework/beans/BeanWrapper;
      51: aload         6
      53: invokevirtual #20                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
      56: invokeinterface #4,  2            // InterfaceMethod org/springframework/beans/BeanWrapper.isReadableProperty:(Ljava/lang/String;)Z
      61: ifeq          76
      64: aload_1
      65: aload         6
      67: invokevirtual #20                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
      70: invokeinterface #21,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      75: pop
      76: iinc          5, 1
      79: goto          34
      82: aload_0
      83: aload_1
      84: invokestatic  #22                 // Method org/springframework/util/StringUtils.toStringArray:(Ljava/util/Collection;)[Ljava/lang/String;
      87: putfield      #16                 // Field propertyNames:[Ljava/lang/String;
      90: aload_0
      91: getfield      #16                 // Field propertyNames:[Ljava/lang/String;
      94: areturn
}
