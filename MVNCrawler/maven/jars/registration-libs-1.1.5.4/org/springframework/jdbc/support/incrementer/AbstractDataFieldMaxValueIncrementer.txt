Compiled from "AbstractDataFieldMaxValueIncrementer.java"
public abstract class org.springframework.jdbc.support.incrementer.AbstractDataFieldMaxValueIncrementer implements org.springframework.jdbc.support.incrementer.DataFieldMaxValueIncrementer,org.springframework.beans.factory.InitializingBean {
  private javax.sql.DataSource dataSource;

  private java.lang.String incrementerName;

  protected int paddingLength;

  public org.springframework.jdbc.support.incrementer.AbstractDataFieldMaxValueIncrementer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field paddingLength:I
       9: return

  public org.springframework.jdbc.support.incrementer.AbstractDataFieldMaxValueIncrementer(javax.sql.DataSource, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field paddingLength:I
       9: aload_1
      10: ldc           #3                  // String DataSource must not be null
      12: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      15: aload_2
      16: ldc           #5                  // String Incrementer name must not be null
      18: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_1
      23: putfield      #6                  // Field dataSource:Ljavax/sql/DataSource;
      26: aload_0
      27: aload_2
      28: putfield      #7                  // Field incrementerName:Ljava/lang/String;
      31: return

  public void setDataSource(javax.sql.DataSource);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field dataSource:Ljavax/sql/DataSource;
       5: return

  public javax.sql.DataSource getDataSource();
    Code:
       0: aload_0
       1: getfield      #6                  // Field dataSource:Ljavax/sql/DataSource;
       4: areturn

  public void setIncrementerName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field incrementerName:Ljava/lang/String;
       5: return

  public java.lang.String getIncrementerName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field incrementerName:Ljava/lang/String;
       4: areturn

  public void setPaddingLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field paddingLength:I
       5: return

  public int getPaddingLength();
    Code:
       0: aload_0
       1: getfield      #2                  // Field paddingLength:I
       4: ireturn

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: getfield      #6                  // Field dataSource:Ljavax/sql/DataSource;
       4: ifnonnull     17
       7: new           #8                  // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #9                  // String Property \'dataSource\' is required
      13: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #7                  // Field incrementerName:Ljava/lang/String;
      21: ifnonnull     34
      24: new           #8                  // class java/lang/IllegalArgumentException
      27: dup
      28: ldc           #11                 // String Property \'incrementerName\' is required
      30: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: return

  public int nextIntValue() throws org.springframework.dao.DataAccessException;
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getNextKey:()J
       4: l2i
       5: ireturn

  public long nextLongValue() throws org.springframework.dao.DataAccessException;
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getNextKey:()J
       4: lreturn

  public java.lang.String nextStringValue() throws org.springframework.dao.DataAccessException;
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getNextKey:()J
       4: invokestatic  #13                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: invokevirtual #14                 // Method java/lang/String.length:()I
      12: istore_2
      13: iload_2
      14: aload_0
      15: getfield      #2                  // Field paddingLength:I
      18: if_icmpge     71
      21: new           #15                 // class java/lang/StringBuilder
      24: dup
      25: aload_0
      26: getfield      #2                  // Field paddingLength:I
      29: invokespecial #16                 // Method java/lang/StringBuilder."<init>":(I)V
      32: astore_3
      33: iconst_0
      34: istore        4
      36: iload         4
      38: aload_0
      39: getfield      #2                  // Field paddingLength:I
      42: iload_2
      43: isub
      44: if_icmpge     60
      47: aload_3
      48: bipush        48
      50: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      53: pop
      54: iinc          4, 1
      57: goto          36
      60: aload_3
      61: aload_1
      62: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: pop
      66: aload_3
      67: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: astore_1
      71: aload_1
      72: areturn

  protected abstract long getNextKey();
}
