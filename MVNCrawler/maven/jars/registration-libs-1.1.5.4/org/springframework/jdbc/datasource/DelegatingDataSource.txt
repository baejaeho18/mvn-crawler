Compiled from "DelegatingDataSource.java"
public class org.springframework.jdbc.datasource.DelegatingDataSource implements javax.sql.DataSource,org.springframework.beans.factory.InitializingBean {
  private javax.sql.DataSource targetDataSource;

  public org.springframework.jdbc.datasource.DelegatingDataSource();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.springframework.jdbc.datasource.DelegatingDataSource(javax.sql.DataSource);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method setTargetDataSource:(Ljavax/sql/DataSource;)V
       9: return

  public void setTargetDataSource(javax.sql.DataSource);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field targetDataSource:Ljavax/sql/DataSource;
       5: return

  public javax.sql.DataSource getTargetDataSource();
    Code:
       0: aload_0
       1: getfield      #3                  // Field targetDataSource:Ljavax/sql/DataSource;
       4: areturn

  protected javax.sql.DataSource obtainTargetDataSource();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getTargetDataSource:()Ljavax/sql/DataSource;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ldc           #5                  // String No \'targetDataSource\' set
      16: invokestatic  #6                  // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      19: aload_1
      20: areturn

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getTargetDataSource:()Ljavax/sql/DataSource;
       4: ifnonnull     17
       7: new           #7                  // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #8                  // String Property \'targetDataSource\' is required
      13: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public java.sql.Connection getConnection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method obtainTargetDataSource:()Ljavax/sql/DataSource;
       4: invokeinterface #11,  1           // InterfaceMethod javax/sql/DataSource.getConnection:()Ljava/sql/Connection;
       9: areturn

  public java.sql.Connection getConnection(java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method obtainTargetDataSource:()Ljavax/sql/DataSource;
       4: aload_1
       5: aload_2
       6: invokeinterface #12,  3           // InterfaceMethod javax/sql/DataSource.getConnection:(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;
      11: areturn

  public java.io.PrintWriter getLogWriter() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method obtainTargetDataSource:()Ljavax/sql/DataSource;
       4: invokeinterface #13,  1           // InterfaceMethod javax/sql/DataSource.getLogWriter:()Ljava/io/PrintWriter;
       9: areturn

  public void setLogWriter(java.io.PrintWriter) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method obtainTargetDataSource:()Ljavax/sql/DataSource;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod javax/sql/DataSource.setLogWriter:(Ljava/io/PrintWriter;)V
      10: return

  public int getLoginTimeout() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method obtainTargetDataSource:()Ljavax/sql/DataSource;
       4: invokeinterface #15,  1           // InterfaceMethod javax/sql/DataSource.getLoginTimeout:()I
       9: ireturn

  public void setLoginTimeout(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method obtainTargetDataSource:()Ljavax/sql/DataSource;
       4: iload_1
       5: invokeinterface #16,  2           // InterfaceMethod javax/sql/DataSource.setLoginTimeout:(I)V
      10: return

  public <T> T unwrap(java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #17                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
       5: ifeq          10
       8: aload_0
       9: areturn
      10: aload_0
      11: invokevirtual #10                 // Method obtainTargetDataSource:()Ljavax/sql/DataSource;
      14: aload_1
      15: invokeinterface #18,  2           // InterfaceMethod javax/sql/DataSource.unwrap:(Ljava/lang/Class;)Ljava/lang/Object;
      20: areturn

  public boolean isWrapperFor(java.lang.Class<?>) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #17                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
       5: ifne          21
       8: aload_0
       9: invokevirtual #10                 // Method obtainTargetDataSource:()Ljavax/sql/DataSource;
      12: aload_1
      13: invokeinterface #19,  2           // InterfaceMethod javax/sql/DataSource.isWrapperFor:(Ljava/lang/Class;)Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public java.util.logging.Logger getParentLogger();
    Code:
       0: ldc           #21                 // String global
       2: invokestatic  #22                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       5: areturn
}
