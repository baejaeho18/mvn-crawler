Compiled from "MBeanRegistrationSupport.java"
public class org.springframework.jmx.support.MBeanRegistrationSupport {
  protected final org.apache.commons.logging.Log logger;

  protected javax.management.MBeanServer server;

  private final java.util.Set<javax.management.ObjectName> registeredBeans;

  private org.springframework.jmx.support.RegistrationPolicy registrationPolicy;

  public org.springframework.jmx.support.MBeanRegistrationSupport();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #5                  // class java/util/LinkedHashSet
      19: dup
      20: invokespecial #6                  // Method java/util/LinkedHashSet."<init>":()V
      23: putfield      #7                  // Field registeredBeans:Ljava/util/Set;
      26: aload_0
      27: getstatic     #8                  // Field org/springframework/jmx/support/RegistrationPolicy.FAIL_ON_EXISTING:Lorg/springframework/jmx/support/RegistrationPolicy;
      30: putfield      #9                  // Field registrationPolicy:Lorg/springframework/jmx/support/RegistrationPolicy;
      33: return

  public void setServer(javax.management.MBeanServer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field server:Ljavax/management/MBeanServer;
       5: return

  public final javax.management.MBeanServer getServer();
    Code:
       0: aload_0
       1: getfield      #10                 // Field server:Ljavax/management/MBeanServer;
       4: areturn

  public void setRegistrationPolicy(org.springframework.jmx.support.RegistrationPolicy);
    Code:
       0: aload_1
       1: ldc           #11                 // String RegistrationPolicy must not be null
       3: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #9                  // Field registrationPolicy:Lorg/springframework/jmx/support/RegistrationPolicy;
      11: return

  protected void doRegister(java.lang.Object, javax.management.ObjectName) throws javax.management.JMException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field server:Ljavax/management/MBeanServer;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #13                 // String No MBeanServer set
      14: invokestatic  #14                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: getfield      #7                  // Field registeredBeans:Ljava/util/Set;
      21: dup
      22: astore        4
      24: monitorenter
      25: aconst_null
      26: astore        5
      28: aload_0
      29: getfield      #10                 // Field server:Ljavax/management/MBeanServer;
      32: aload_1
      33: aload_2
      34: invokeinterface #15,  3           // InterfaceMethod javax/management/MBeanServer.registerMBean:(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;
      39: astore        5
      41: goto          228
      44: astore        6
      46: aload_0
      47: getfield      #9                  // Field registrationPolicy:Lorg/springframework/jmx/support/RegistrationPolicy;
      50: getstatic     #17                 // Field org/springframework/jmx/support/RegistrationPolicy.IGNORE_EXISTING:Lorg/springframework/jmx/support/RegistrationPolicy;
      53: if_acmpne     104
      56: aload_0
      57: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      60: invokeinterface #18,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      65: ifeq          228
      68: aload_0
      69: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      72: new           #19                 // class java/lang/StringBuilder
      75: dup
      76: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      79: ldc           #21                 // String Ignoring existing MBean at [
      81: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_2
      85: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      88: ldc           #24                 // String ]
      90: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokeinterface #26,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     101: goto          228
     104: aload_0
     105: getfield      #9                  // Field registrationPolicy:Lorg/springframework/jmx/support/RegistrationPolicy;
     108: getstatic     #27                 // Field org/springframework/jmx/support/RegistrationPolicy.REPLACE_EXISTING:Lorg/springframework/jmx/support/RegistrationPolicy;
     111: if_acmpne     225
     114: aload_0
     115: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     118: invokeinterface #18,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     123: ifeq          159
     126: aload_0
     127: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     130: new           #19                 // class java/lang/StringBuilder
     133: dup
     134: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     137: ldc           #28                 // String Replacing existing MBean at [
     139: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: aload_2
     143: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     146: ldc           #24                 // String ]
     148: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     154: invokeinterface #26,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     159: aload_0
     160: getfield      #10                 // Field server:Ljavax/management/MBeanServer;
     163: aload_2
     164: invokeinterface #29,  2           // InterfaceMethod javax/management/MBeanServer.unregisterMBean:(Ljavax/management/ObjectName;)V
     169: aload_0
     170: getfield      #10                 // Field server:Ljavax/management/MBeanServer;
     173: aload_1
     174: aload_2
     175: invokeinterface #15,  3           // InterfaceMethod javax/management/MBeanServer.registerMBean:(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;
     180: astore        5
     182: goto          228
     185: astore        7
     187: aload_0
     188: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     191: new           #19                 // class java/lang/StringBuilder
     194: dup
     195: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     198: ldc           #31                 // String Unable to replace existing MBean at [
     200: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: aload_2
     204: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     207: ldc           #24                 // String ]
     209: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     212: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     215: aload         7
     217: invokeinterface #32,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     222: aload         6
     224: athrow
     225: aload         6
     227: athrow
     228: aload         5
     230: ifnull        241
     233: aload         5
     235: invokevirtual #33                 // Method javax/management/ObjectInstance.getObjectName:()Ljavax/management/ObjectName;
     238: goto          242
     241: aconst_null
     242: astore_3
     243: aload_3
     244: ifnonnull     249
     247: aload_2
     248: astore_3
     249: aload_0
     250: getfield      #7                  // Field registeredBeans:Ljava/util/Set;
     253: aload_3
     254: invokeinterface #34,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     259: pop
     260: aload         4
     262: monitorexit
     263: goto          274
     266: astore        8
     268: aload         4
     270: monitorexit
     271: aload         8
     273: athrow
     274: aload_0
     275: aload_3
     276: aload_1
     277: invokevirtual #35                 // Method onRegister:(Ljavax/management/ObjectName;Ljava/lang/Object;)V
     280: return
    Exception table:
       from    to  target type
          28    41    44   Class javax/management/InstanceAlreadyExistsException
         114   182   185   Class javax/management/InstanceNotFoundException
          25   263   266   any
         266   271   266   any

  protected void unregisterBeans();
    Code:
       0: aload_0
       1: getfield      #7                  // Field registeredBeans:Ljava/util/Set;
       4: dup
       5: astore_2
       6: monitorenter
       7: new           #5                  // class java/util/LinkedHashSet
      10: dup
      11: aload_0
      12: getfield      #7                  // Field registeredBeans:Ljava/util/Set;
      15: invokespecial #36                 // Method java/util/LinkedHashSet."<init>":(Ljava/util/Collection;)V
      18: astore_1
      19: aload_2
      20: monitorexit
      21: goto          29
      24: astore_3
      25: aload_2
      26: monitorexit
      27: aload_3
      28: athrow
      29: aload_1
      30: invokeinterface #37,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      35: ifne          49
      38: aload_0
      39: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      42: ldc           #38                 // String Unregistering JMX-exposed beans
      44: invokeinterface #39,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      49: aload_1
      50: invokeinterface #40,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      55: astore_2
      56: aload_2
      57: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      62: ifeq          83
      65: aload_2
      66: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: checkcast     #43                 // class javax/management/ObjectName
      74: astore_3
      75: aload_0
      76: aload_3
      77: invokevirtual #44                 // Method doUnregister:(Ljavax/management/ObjectName;)V
      80: goto          56
      83: return
    Exception table:
       from    to  target type
           7    21    24   any
          24    27    24   any

  protected void doUnregister(javax.management.ObjectName);
    Code:
       0: aload_0
       1: getfield      #10                 // Field server:Ljavax/management/MBeanServer;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #13                 // String No MBeanServer set
      14: invokestatic  #14                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: iconst_0
      18: istore_2
      19: aload_0
      20: getfield      #7                  // Field registeredBeans:Ljava/util/Set;
      23: dup
      24: astore_3
      25: monitorenter
      26: aload_0
      27: getfield      #7                  // Field registeredBeans:Ljava/util/Set;
      30: aload_1
      31: invokeinterface #45,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      36: ifeq          164
      39: aload_0
      40: getfield      #10                 // Field server:Ljavax/management/MBeanServer;
      43: aload_1
      44: invokeinterface #46,  2           // InterfaceMethod javax/management/MBeanServer.isRegistered:(Ljavax/management/ObjectName;)Z
      49: ifeq          67
      52: aload_0
      53: getfield      #10                 // Field server:Ljavax/management/MBeanServer;
      56: aload_1
      57: invokeinterface #29,  2           // InterfaceMethod javax/management/MBeanServer.unregisterMBean:(Ljavax/management/ObjectName;)V
      62: iconst_1
      63: istore_2
      64: goto          112
      67: aload_0
      68: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      71: invokeinterface #47,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
      76: ifeq          112
      79: aload_0
      80: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      83: new           #19                 // class java/lang/StringBuilder
      86: dup
      87: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      90: ldc           #48                 // String Could not unregister MBean [
      92: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: aload_1
      96: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      99: ldc           #49                 // String ] as said MBean is not registered (perhaps already unregistered by an external process)
     101: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: invokeinterface #50,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     112: goto          164
     115: astore        4
     117: aload_0
     118: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     121: invokeinterface #52,  1           // InterfaceMethod org/apache/commons/logging/Log.isErrorEnabled:()Z
     126: ifeq          164
     129: aload_0
     130: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     133: new           #19                 // class java/lang/StringBuilder
     136: dup
     137: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     140: ldc           #48                 // String Could not unregister MBean [
     142: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: aload_1
     146: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     149: ldc           #24                 // String ]
     151: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     157: aload         4
     159: invokeinterface #32,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     164: aload_3
     165: monitorexit
     166: goto          176
     169: astore        5
     171: aload_3
     172: monitorexit
     173: aload         5
     175: athrow
     176: iload_2
     177: ifeq          185
     180: aload_0
     181: aload_1
     182: invokevirtual #53                 // Method onUnregister:(Ljavax/management/ObjectName;)V
     185: return
    Exception table:
       from    to  target type
          39   112   115   Class javax/management/JMException
          26   166   169   any
         169   173   169   any

  protected final javax.management.ObjectName[] getRegisteredObjectNames();
    Code:
       0: aload_0
       1: getfield      #7                  // Field registeredBeans:Ljava/util/Set;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #7                  // Field registeredBeans:Ljava/util/Set;
      11: iconst_0
      12: anewarray     #43                 // class javax/management/ObjectName
      15: invokeinterface #54,  2           // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      20: checkcast     #55                 // class "[Ljavax/management/ObjectName;"
      23: aload_1
      24: monitorexit
      25: areturn
      26: astore_2
      27: aload_1
      28: monitorexit
      29: aload_2
      30: athrow
    Exception table:
       from    to  target type
           7    25    26   any
          26    29    26   any

  protected void onRegister(javax.management.ObjectName, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method onRegister:(Ljavax/management/ObjectName;)V
       5: return

  protected void onRegister(javax.management.ObjectName);
    Code:
       0: return

  protected void onUnregister(javax.management.ObjectName);
    Code:
       0: return
}
