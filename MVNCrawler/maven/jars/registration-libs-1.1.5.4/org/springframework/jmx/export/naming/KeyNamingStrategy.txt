Compiled from "KeyNamingStrategy.java"
public class org.springframework.jmx.export.naming.KeyNamingStrategy implements org.springframework.jmx.export.naming.ObjectNamingStrategy,org.springframework.beans.factory.InitializingBean {
  protected final org.apache.commons.logging.Log logger;

  private java.util.Properties mappings;

  private org.springframework.core.io.Resource[] mappingLocations;

  private java.util.Properties mergedMappings;

  public org.springframework.jmx.export.naming.KeyNamingStrategy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: return

  public void setMappings(java.util.Properties);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field mappings:Ljava/util/Properties;
       5: return

  public void setMappingLocation(org.springframework.core.io.Resource);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #6                  // class org/springframework/core/io/Resource
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: putfield      #7                  // Field mappingLocations:[Lorg/springframework/core/io/Resource;
      12: return

  public void setMappingLocations(org.springframework.core.io.Resource...);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field mappingLocations:[Lorg/springframework/core/io/Resource;
       5: return

  public void afterPropertiesSet() throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #8                  // class java/util/Properties
       4: dup
       5: invokespecial #9                  // Method java/util/Properties."<init>":()V
       8: putfield      #10                 // Field mergedMappings:Ljava/util/Properties;
      11: aload_0
      12: getfield      #5                  // Field mappings:Ljava/util/Properties;
      15: aload_0
      16: getfield      #10                 // Field mergedMappings:Ljava/util/Properties;
      19: invokestatic  #11                 // Method org/springframework/util/CollectionUtils.mergePropertiesIntoMap:(Ljava/util/Properties;Ljava/util/Map;)V
      22: aload_0
      23: getfield      #7                  // Field mappingLocations:[Lorg/springframework/core/io/Resource;
      26: ifnull        105
      29: aload_0
      30: getfield      #7                  // Field mappingLocations:[Lorg/springframework/core/io/Resource;
      33: astore_1
      34: aload_1
      35: arraylength
      36: istore_2
      37: iconst_0
      38: istore_3
      39: iload_3
      40: iload_2
      41: if_icmpge     105
      44: aload_1
      45: iload_3
      46: aaload
      47: astore        4
      49: aload_0
      50: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      53: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
      58: ifeq          90
      61: aload_0
      62: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      65: new           #13                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      72: ldc           #15                 // String Loading JMX object name mappings file from
      74: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload         4
      79: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      82: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokeinterface #19,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      90: aload_0
      91: getfield      #10                 // Field mergedMappings:Ljava/util/Properties;
      94: aload         4
      96: invokestatic  #20                 // Method org/springframework/core/io/support/PropertiesLoaderUtils.fillProperties:(Ljava/util/Properties;Lorg/springframework/core/io/Resource;)V
      99: iinc          3, 1
     102: goto          39
     105: return

  public javax.management.ObjectName getObjectName(java.lang.Object, java.lang.String) throws javax.management.MalformedObjectNameException;
    Code:
       0: aload_2
       1: ldc           #21                 // String KeyNamingStrategy requires bean key
       3: invokestatic  #22                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aconst_null
       7: astore_3
       8: aload_0
       9: getfield      #10                 // Field mergedMappings:Ljava/util/Properties;
      12: ifnull        24
      15: aload_0
      16: getfield      #10                 // Field mergedMappings:Ljava/util/Properties;
      19: aload_2
      20: invokevirtual #23                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      23: astore_3
      24: aload_3
      25: ifnonnull     30
      28: aload_2
      29: astore_3
      30: aload_3
      31: invokestatic  #24                 // Method org/springframework/jmx/support/ObjectNameManager.getInstance:(Ljava/lang/String;)Ljavax/management/ObjectName;
      34: areturn
}
