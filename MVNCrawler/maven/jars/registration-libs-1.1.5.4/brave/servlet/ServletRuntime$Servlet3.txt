Compiled from "ServletRuntime.java"
final class brave.servlet.ServletRuntime$Servlet3 extends brave.servlet.ServletRuntime {
  brave.servlet.ServletRuntime$Servlet3();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method brave/servlet/ServletRuntime."<init>":()V
       4: return

  boolean isAsync(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_1
       1: invokeinterface #23,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.isAsyncStarted:()Z
       6: ireturn

  java.lang.Integer status(javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_1
       1: invokeinterface #34,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getStatus:()I
       6: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       9: areturn

  void handleAsync(brave.http.HttpServerHandler<javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, brave.Span);
    Code:
       0: aload         4
       2: invokevirtual #50                 // Method brave/Span.isNoop:()Z
       5: ifeq          9
       8: return
       9: new           #8                  // class brave/servlet/ServletRuntime$Servlet3$TracingAsyncListener
      12: dup
      13: aload_1
      14: aload         4
      16: invokespecial #53                 // Method brave/servlet/ServletRuntime$Servlet3$TracingAsyncListener."<init>":(Lbrave/http/HttpServerHandler;Lbrave/Span;)V
      19: astore        5
      21: aload_2
      22: invokeinterface #57,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getAsyncContext:()Ljavax/servlet/AsyncContext;
      27: aload         5
      29: aload_2
      30: aload_3
      31: invokeinterface #63,  4           // InterfaceMethod javax/servlet/AsyncContext.addListener:(Ljavax/servlet/AsyncListener;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
      36: return
}
