Compiled from "ZipkinFinishedSpanHandler.java"
public final class brave.internal.handler.ZipkinFinishedSpanHandler extends brave.handler.FinishedSpanHandler {
  final zipkin2.reporter.Reporter<zipkin2.Span> spanReporter;

  final brave.internal.handler.MutableSpanConverter converter;

  public brave.internal.handler.ZipkinFinishedSpanHandler(zipkin2.reporter.Reporter<zipkin2.Span>, brave.ErrorParser, java.lang.String, java.lang.String, int);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method brave/handler/FinishedSpanHandler."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #23                 // Field spanReporter:Lzipkin2/reporter/Reporter;
       9: aload_0
      10: new           #25                 // class brave/internal/handler/MutableSpanConverter
      13: dup
      14: aload_2
      15: aload_3
      16: aload         4
      18: iload         5
      20: invokespecial #28                 // Method brave/internal/handler/MutableSpanConverter."<init>":(Lbrave/ErrorParser;Ljava/lang/String;Ljava/lang/String;I)V
      23: putfield      #30                 // Field converter:Lbrave/internal/handler/MutableSpanConverter;
      26: return

  public boolean handle(brave.propagation.TraceContext, brave.handler.MutableSpan);
    Code:
       0: getstatic     #47                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       3: aload_1
       4: invokevirtual #53                 // Method brave/propagation/TraceContext.sampled:()Ljava/lang/Boolean;
       7: invokevirtual #57                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      10: ifne          15
      13: iconst_1
      14: ireturn
      15: invokestatic  #61                 // Method zipkin2/Span.newBuilder:()Lzipkin2/Span$Builder;
      18: aload_1
      19: invokevirtual #65                 // Method brave/propagation/TraceContext.traceIdString:()Ljava/lang/String;
      22: invokevirtual #69                 // Method zipkin2/Span$Builder.traceId:(Ljava/lang/String;)Lzipkin2/Span$Builder;
      25: aload_1
      26: invokevirtual #72                 // Method brave/propagation/TraceContext.parentIdString:()Ljava/lang/String;
      29: invokevirtual #75                 // Method zipkin2/Span$Builder.parentId:(Ljava/lang/String;)Lzipkin2/Span$Builder;
      32: aload_1
      33: invokevirtual #78                 // Method brave/propagation/TraceContext.spanIdString:()Ljava/lang/String;
      36: invokevirtual #81                 // Method zipkin2/Span$Builder.id:(Ljava/lang/String;)Lzipkin2/Span$Builder;
      39: astore_3
      40: aload_1
      41: invokevirtual #85                 // Method brave/propagation/TraceContext.debug:()Z
      44: ifeq          53
      47: aload_3
      48: iconst_1
      49: invokevirtual #88                 // Method zipkin2/Span$Builder.debug:(Z)Lzipkin2/Span$Builder;
      52: pop
      53: aload_0
      54: getfield      #30                 // Field converter:Lbrave/internal/handler/MutableSpanConverter;
      57: aload_2
      58: aload_3
      59: invokevirtual #92                 // Method brave/internal/handler/MutableSpanConverter.convert:(Lbrave/handler/MutableSpan;Lzipkin2/Span$Builder;)V
      62: aload_0
      63: getfield      #23                 // Field spanReporter:Lzipkin2/reporter/Reporter;
      66: aload_3
      67: invokevirtual #96                 // Method zipkin2/Span$Builder.build:()Lzipkin2/Span;
      70: invokeinterface #102,  2          // InterfaceMethod zipkin2/reporter/Reporter.report:(Ljava/lang/Object;)V
      75: iconst_1
      76: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #23                 // Field spanReporter:Lzipkin2/reporter/Reporter;
       4: invokevirtual #113                // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn
}
