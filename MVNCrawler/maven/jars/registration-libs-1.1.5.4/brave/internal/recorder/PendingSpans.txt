Compiled from "PendingSpans.java"
public final class brave.internal.recorder.PendingSpans extends java.lang.ref.ReferenceQueue<brave.propagation.TraceContext> {
  final java.util.concurrent.ConcurrentMap<java.lang.Object, brave.internal.recorder.PendingSpan> delegate;

  final brave.Clock clock;

  final brave.handler.FinishedSpanHandler zipkinHandler;

  final java.util.concurrent.atomic.AtomicBoolean noop;

  public brave.internal.recorder.PendingSpans(brave.Clock, brave.handler.FinishedSpanHandler, java.util.concurrent.atomic.AtomicBoolean);
    Code:
       0: aload_0
       1: invokespecial #26                 // Method java/lang/ref/ReferenceQueue."<init>":()V
       4: aload_0
       5: new           #28                 // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: bipush        64
      11: invokespecial #31                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      14: putfield      #33                 // Field delegate:Ljava/util/concurrent/ConcurrentMap;
      17: aload_0
      18: aload_1
      19: putfield      #35                 // Field clock:Lbrave/Clock;
      22: aload_0
      23: aload_2
      24: putfield      #37                 // Field zipkinHandler:Lbrave/handler/FinishedSpanHandler;
      27: aload_0
      28: aload_3
      29: putfield      #39                 // Field noop:Ljava/util/concurrent/atomic/AtomicBoolean;
      32: return

  public brave.internal.recorder.PendingSpan getOrCreate(brave.propagation.TraceContext, boolean);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #45                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #47                 // String context == null
      10: invokespecial #50                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #53                 // Method reportOrphanedSpans:()V
      18: aload_0
      19: getfield      #33                 // Field delegate:Ljava/util/concurrent/ConcurrentMap;
      22: aload_1
      23: invokeinterface #59,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #61                 // class brave/internal/recorder/PendingSpan
      31: astore_3
      32: aload_3
      33: ifnull        38
      36: aload_3
      37: areturn
      38: new           #63                 // class brave/handler/MutableSpan
      41: dup
      42: invokespecial #64                 // Method brave/handler/MutableSpan."<init>":()V
      45: astore        4
      47: aload_1
      48: invokevirtual #70                 // Method brave/propagation/TraceContext.shared:()Z
      51: ifeq          59
      54: aload         4
      56: invokevirtual #73                 // Method brave/handler/MutableSpan.setShared:()V
      59: aload_0
      60: aload_1
      61: invokevirtual #77                 // Method getClockFromParent:(Lbrave/propagation/TraceContext;)Lbrave/internal/recorder/TickClock;
      64: astore        5
      66: aload         5
      68: ifnonnull     109
      71: new           #79                 // class brave/internal/recorder/TickClock
      74: dup
      75: aload_0
      76: getfield      #35                 // Field clock:Lbrave/Clock;
      79: invokeinterface #85,  1           // InterfaceMethod brave/Clock.currentTimeMicroseconds:()J
      84: invokestatic  #90                 // Method java/lang/System.nanoTime:()J
      87: invokespecial #93                 // Method brave/internal/recorder/TickClock."<init>":(JJ)V
      90: astore        5
      92: iload_2
      93: ifeq          123
      96: aload         4
      98: aload         5
     100: getfield      #97                 // Field brave/internal/recorder/TickClock.baseEpochMicros:J
     103: invokevirtual #101                // Method brave/handler/MutableSpan.startTimestamp:(J)V
     106: goto          123
     109: iload_2
     110: ifeq          123
     113: aload         4
     115: aload         5
     117: invokevirtual #102                // Method brave/internal/recorder/TickClock.currentTimeMicroseconds:()J
     120: invokevirtual #101                // Method brave/handler/MutableSpan.startTimestamp:(J)V
     123: new           #61                 // class brave/internal/recorder/PendingSpan
     126: dup
     127: aload         4
     129: aload         5
     131: invokespecial #105                // Method brave/internal/recorder/PendingSpan."<init>":(Lbrave/handler/MutableSpan;Lbrave/internal/recorder/TickClock;)V
     134: astore        6
     136: aload_0
     137: getfield      #33                 // Field delegate:Ljava/util/concurrent/ConcurrentMap;
     140: new           #11                 // class brave/internal/recorder/PendingSpans$RealKey
     143: dup
     144: aload_1
     145: aload_0
     146: invokespecial #108                // Method brave/internal/recorder/PendingSpans$RealKey."<init>":(Lbrave/propagation/TraceContext;Ljava/lang/ref/ReferenceQueue;)V
     149: aload         6
     151: invokeinterface #112,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     156: checkcast     #61                 // class brave/internal/recorder/PendingSpan
     159: astore        7
     161: aload         7
     163: ifnull        169
     166: aload         7
     168: areturn
     169: aload         6
     171: areturn

  brave.internal.recorder.TickClock getClockFromParent(brave.propagation.TraceContext);
    Code:
       0: aload_1
       1: invokevirtual #127                // Method brave/propagation/TraceContext.parentIdAsLong:()J
       4: lstore_2
       5: aconst_null
       6: astore        4
       8: aload_1
       9: invokevirtual #70                 // Method brave/propagation/TraceContext.shared:()Z
      12: ifne          21
      15: lload_2
      16: lconst_0
      17: lcmp
      18: ifeq          73
      21: lload_2
      22: lconst_0
      23: lcmp
      24: ifeq          31
      27: lload_2
      28: goto          35
      31: aload_1
      32: invokevirtual #130                // Method brave/propagation/TraceContext.spanId:()J
      35: lstore        5
      37: aload_0
      38: getfield      #33                 // Field delegate:Ljava/util/concurrent/ConcurrentMap;
      41: getstatic     #136                // Field brave/internal/InternalPropagation.instance:Lbrave/internal/InternalPropagation;
      44: iconst_0
      45: aload_1
      46: invokevirtual #139                // Method brave/propagation/TraceContext.traceIdHigh:()J
      49: aload_1
      50: invokevirtual #142                // Method brave/propagation/TraceContext.traceId:()J
      53: lconst_0
      54: lconst_0
      55: lload         5
      57: invokestatic  #148                // Method java/util/Collections.emptyList:()Ljava/util/List;
      60: invokevirtual #152                // Method brave/internal/InternalPropagation.newTraceContext:(IJJJJJLjava/util/List;)Lbrave/propagation/TraceContext;
      63: invokeinterface #59,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      68: checkcast     #61                 // class brave/internal/recorder/PendingSpan
      71: astore        4
      73: aload         4
      75: ifnull        86
      78: aload         4
      80: getfield      #154                // Field brave/internal/recorder/PendingSpan.clock:Lbrave/internal/recorder/TickClock;
      83: goto          87
      86: aconst_null
      87: areturn

  public boolean remove(brave.propagation.TraceContext);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #45                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #47                 // String context == null
      10: invokespecial #50                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #33                 // Field delegate:Ljava/util/concurrent/ConcurrentMap;
      18: aload_1
      19: invokeinterface #160,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #61                 // class brave/internal/recorder/PendingSpan
      27: astore_2
      28: aload_0
      29: invokevirtual #53                 // Method reportOrphanedSpans:()V
      32: aload_2
      33: ifnull        40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  void reportOrphanedSpans();
    Code:
       0: lconst_0
       1: lstore_2
       2: aload_0
       3: getfield      #37                 // Field zipkinHandler:Lbrave/handler/FinishedSpanHandler;
       6: getstatic     #168                // Field brave/handler/FinishedSpanHandler.NOOP:Lbrave/handler/FinishedSpanHandler;
       9: if_acmpeq     22
      12: aload_0
      13: getfield      #39                 // Field noop:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: invokevirtual #172                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: istore        4
      29: aload_0
      30: invokevirtual #176                // Method poll:()Ljava/lang/ref/Reference;
      33: checkcast     #11                 // class brave/internal/recorder/PendingSpans$RealKey
      36: dup
      37: astore_1
      38: ifnull        168
      41: aload_0
      42: getfield      #33                 // Field delegate:Ljava/util/concurrent/ConcurrentMap;
      45: aload_1
      46: invokeinterface #160,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      51: checkcast     #61                 // class brave/internal/recorder/PendingSpan
      54: astore        5
      56: iload         4
      58: ifne          29
      61: aload         5
      63: ifnull        29
      66: aload_1
      67: getfield      #179                // Field brave/internal/recorder/PendingSpans$RealKey.sampled:Z
      70: ifne          76
      73: goto          29
      76: lload_2
      77: lconst_0
      78: lcmp
      79: ifne          92
      82: aload_0
      83: getfield      #35                 // Field clock:Lbrave/Clock;
      86: invokeinterface #85,  1           // InterfaceMethod brave/Clock.currentTimeMicroseconds:()J
      91: lstore_2
      92: getstatic     #136                // Field brave/internal/InternalPropagation.instance:Lbrave/internal/InternalPropagation;
      95: bipush        6
      97: aload_1
      98: getfield      #181                // Field brave/internal/recorder/PendingSpans$RealKey.traceIdHigh:J
     101: aload_1
     102: getfield      #183                // Field brave/internal/recorder/PendingSpans$RealKey.traceId:J
     105: aload_1
     106: getfield      #186                // Field brave/internal/recorder/PendingSpans$RealKey.localRootId:J
     109: lconst_0
     110: aload_1
     111: getfield      #188                // Field brave/internal/recorder/PendingSpans$RealKey.spanId:J
     114: invokestatic  #148                // Method java/util/Collections.emptyList:()Ljava/util/List;
     117: invokevirtual #152                // Method brave/internal/InternalPropagation.newTraceContext:(IJJJJJLjava/util/List;)Lbrave/propagation/TraceContext;
     120: astore        6
     122: aload         5
     124: getfield      #191                // Field brave/internal/recorder/PendingSpan.state:Lbrave/handler/MutableSpan;
     127: lload_2
     128: ldc           #193                // String brave.flush
     130: invokevirtual #197                // Method brave/handler/MutableSpan.annotate:(JLjava/lang/String;)V
     133: aload_0
     134: getfield      #37                 // Field zipkinHandler:Lbrave/handler/FinishedSpanHandler;
     137: aload         6
     139: aload         5
     141: getfield      #191                // Field brave/internal/recorder/PendingSpan.state:Lbrave/handler/MutableSpan;
     144: invokevirtual #201                // Method brave/handler/FinishedSpanHandler.handle:(Lbrave/propagation/TraceContext;Lbrave/handler/MutableSpan;)Z
     147: pop
     148: goto          165
     151: astore        7
     153: invokestatic  #206                // Method brave/internal/Platform.get:()Lbrave/internal/Platform;
     156: ldc           #208                // String error reporting {0}
     158: aload         6
     160: aload         7
     162: invokevirtual #212                // Method brave/internal/Platform.log:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V
     165: goto          29
     168: return
    Exception table:
       from    to  target type
         133   148   151   Class java/lang/RuntimeException

  public java.lang.String toString();
    Code:
       0: new           #222                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #223                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #225                // String PendingSpans
       9: invokevirtual #229                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #33                 // Field delegate:Ljava/util/concurrent/ConcurrentMap;
      16: invokeinterface #233,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
      21: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      24: invokevirtual #238                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn
}
