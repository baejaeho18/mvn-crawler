Compiled from "RealSpan.java"
final class brave.RealSpan extends brave.Span {
  final brave.propagation.TraceContext context;

  final brave.internal.recorder.PendingSpans pendingSpans;

  final brave.handler.MutableSpan state;

  final brave.Clock clock;

  final brave.handler.FinishedSpanHandler finishedSpanHandler;

  final brave.RealSpanCustomizer customizer;

  brave.RealSpan(brave.propagation.TraceContext, brave.internal.recorder.PendingSpans, brave.handler.MutableSpan, brave.Clock, brave.handler.FinishedSpanHandler);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method brave/Span."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #27                 // Field context:Lbrave/propagation/TraceContext;
       9: aload_0
      10: aload_2
      11: putfield      #29                 // Field pendingSpans:Lbrave/internal/recorder/PendingSpans;
      14: aload_0
      15: aload_3
      16: putfield      #31                 // Field state:Lbrave/handler/MutableSpan;
      19: aload_0
      20: aload         4
      22: putfield      #33                 // Field clock:Lbrave/Clock;
      25: aload_0
      26: new           #35                 // class brave/RealSpanCustomizer
      29: dup
      30: aload_1
      31: aload_3
      32: aload         4
      34: invokespecial #38                 // Method brave/RealSpanCustomizer."<init>":(Lbrave/propagation/TraceContext;Lbrave/handler/MutableSpan;Lbrave/Clock;)V
      37: putfield      #40                 // Field customizer:Lbrave/RealSpanCustomizer;
      40: aload_0
      41: aload         5
      43: putfield      #42                 // Field finishedSpanHandler:Lbrave/handler/FinishedSpanHandler;
      46: return

  public boolean isNoop();
    Code:
       0: iconst_0
       1: ireturn

  public brave.propagation.TraceContext context();
    Code:
       0: aload_0
       1: getfield      #27                 // Field context:Lbrave/propagation/TraceContext;
       4: areturn

  public brave.SpanCustomizer customizer();
    Code:
       0: new           #35                 // class brave/RealSpanCustomizer
       3: dup
       4: aload_0
       5: getfield      #27                 // Field context:Lbrave/propagation/TraceContext;
       8: aload_0
       9: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
      12: aload_0
      13: getfield      #33                 // Field clock:Lbrave/Clock;
      16: invokespecial #38                 // Method brave/RealSpanCustomizer."<init>":(Lbrave/propagation/TraceContext;Lbrave/handler/MutableSpan;Lbrave/Clock;)V
      19: areturn

  public brave.Span start();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #33                 // Field clock:Lbrave/Clock;
       5: invokeinterface #56,  1           // InterfaceMethod brave/Clock.currentTimeMicroseconds:()J
      10: invokevirtual #59                 // Method start:(J)Lbrave/Span;
      13: areturn

  public brave.Span start(long);
    Code:
       0: aload_0
       1: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
      11: lload_1
      12: invokevirtual #65                 // Method brave/handler/MutableSpan.startTimestamp:(J)V
      15: aload_3
      16: monitorexit
      17: goto          27
      20: astore        4
      22: aload_3
      23: monitorexit
      24: aload         4
      26: athrow
      27: aload_0
      28: areturn
    Exception table:
       from    to  target type
           7    17    20   any
          20    24    20   any

  public brave.Span name(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
      11: aload_1
      12: invokevirtual #76                 // Method brave/handler/MutableSpan.name:(Ljava/lang/String;)V
      15: aload_2
      16: monitorexit
      17: goto          25
      20: astore_3
      21: aload_2
      22: monitorexit
      23: aload_3
      24: athrow
      25: aload_0
      26: areturn
    Exception table:
       from    to  target type
           7    17    20   any
          20    23    20   any

  public brave.Span kind(brave.Span$Kind);
    Code:
       0: aload_0
       1: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
      11: aload_1
      12: invokevirtual #84                 // Method brave/handler/MutableSpan.kind:(Lbrave/Span$Kind;)V
      15: aload_2
      16: monitorexit
      17: goto          25
      20: astore_3
      21: aload_2
      22: monitorexit
      23: aload_3
      24: athrow
      25: aload_0
      26: areturn
    Exception table:
       from    to  target type
           7    17    20   any
          20    23    20   any

  public brave.Span annotate(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #33                 // Field clock:Lbrave/Clock;
       5: invokeinterface #56,  1           // InterfaceMethod brave/Clock.currentTimeMicroseconds:()J
      10: aload_1
      11: invokevirtual #89                 // Method annotate:(JLjava/lang/String;)Lbrave/Span;
      14: areturn

  public brave.Span annotate(long, java.lang.String);
    Code:
       0: ldc           #92                 // String cs
       2: aload_3
       3: invokevirtual #96                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          52
       9: aload_0
      10: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
      13: dup
      14: astore        4
      16: monitorenter
      17: aload_0
      18: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
      21: getstatic     #99                 // Field brave/Span$Kind.CLIENT:Lbrave/Span$Kind;
      24: invokevirtual #84                 // Method brave/handler/MutableSpan.kind:(Lbrave/Span$Kind;)V
      27: aload_0
      28: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
      31: lload_1
      32: invokevirtual #65                 // Method brave/handler/MutableSpan.startTimestamp:(J)V
      35: aload         4
      37: monitorexit
      38: goto          49
      41: astore        5
      43: aload         4
      45: monitorexit
      46: aload         5
      48: athrow
      49: goto          233
      52: ldc           #101                // String sr
      54: aload_3
      55: invokevirtual #96                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      58: ifeq          104
      61: aload_0
      62: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
      65: dup
      66: astore        4
      68: monitorenter
      69: aload_0
      70: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
      73: getstatic     #104                // Field brave/Span$Kind.SERVER:Lbrave/Span$Kind;
      76: invokevirtual #84                 // Method brave/handler/MutableSpan.kind:(Lbrave/Span$Kind;)V
      79: aload_0
      80: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
      83: lload_1
      84: invokevirtual #65                 // Method brave/handler/MutableSpan.startTimestamp:(J)V
      87: aload         4
      89: monitorexit
      90: goto          101
      93: astore        6
      95: aload         4
      97: monitorexit
      98: aload         6
     100: athrow
     101: goto          233
     104: ldc           #106                // String cr
     106: aload_3
     107: invokevirtual #96                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     110: ifeq          153
     113: aload_0
     114: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
     117: dup
     118: astore        4
     120: monitorenter
     121: aload_0
     122: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
     125: getstatic     #99                 // Field brave/Span$Kind.CLIENT:Lbrave/Span$Kind;
     128: invokevirtual #84                 // Method brave/handler/MutableSpan.kind:(Lbrave/Span$Kind;)V
     131: aload         4
     133: monitorexit
     134: goto          145
     137: astore        7
     139: aload         4
     141: monitorexit
     142: aload         7
     144: athrow
     145: aload_0
     146: lload_1
     147: invokevirtual #109                // Method finish:(J)V
     150: goto          233
     153: ldc           #111                // String ss
     155: aload_3
     156: invokevirtual #96                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     159: ifeq          202
     162: aload_0
     163: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
     166: dup
     167: astore        4
     169: monitorenter
     170: aload_0
     171: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
     174: getstatic     #104                // Field brave/Span$Kind.SERVER:Lbrave/Span$Kind;
     177: invokevirtual #84                 // Method brave/handler/MutableSpan.kind:(Lbrave/Span$Kind;)V
     180: aload         4
     182: monitorexit
     183: goto          194
     186: astore        8
     188: aload         4
     190: monitorexit
     191: aload         8
     193: athrow
     194: aload_0
     195: lload_1
     196: invokevirtual #109                // Method finish:(J)V
     199: goto          233
     202: aload_0
     203: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
     206: dup
     207: astore        4
     209: monitorenter
     210: aload_0
     211: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
     214: lload_1
     215: aload_3
     216: invokevirtual #114                // Method brave/handler/MutableSpan.annotate:(JLjava/lang/String;)V
     219: aload         4
     221: monitorexit
     222: goto          233
     225: astore        9
     227: aload         4
     229: monitorexit
     230: aload         9
     232: athrow
     233: aload_0
     234: areturn
    Exception table:
       from    to  target type
          17    38    41   any
          41    46    41   any
          69    90    93   any
          93    98    93   any
         121   134   137   any
         137   142   137   any
         170   183   186   any
         186   191   186   any
         210   222   225   any
         225   230   225   any

  public brave.Span tag(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
      11: aload_1
      12: aload_2
      13: invokevirtual #119                // Method brave/handler/MutableSpan.tag:(Ljava/lang/String;Ljava/lang/String;)V
      16: aload_3
      17: monitorexit
      18: goto          28
      21: astore        4
      23: aload_3
      24: monitorexit
      25: aload         4
      27: athrow
      28: aload_0
      29: areturn
    Exception table:
       from    to  target type
           7    18    21   any
          21    25    21   any

  public brave.Span error(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
      11: aload_1
      12: invokevirtual #125                // Method brave/handler/MutableSpan.error:(Ljava/lang/Throwable;)V
      15: aload_2
      16: monitorexit
      17: goto          25
      20: astore_3
      21: aload_2
      22: monitorexit
      23: aload_3
      24: athrow
      25: aload_0
      26: areturn
    Exception table:
       from    to  target type
           7    17    20   any
          20    23    20   any

  public brave.Span remoteServiceName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
      11: aload_1
      12: invokevirtual #130                // Method brave/handler/MutableSpan.remoteServiceName:(Ljava/lang/String;)V
      15: aload_2
      16: monitorexit
      17: goto          25
      20: astore_3
      21: aload_2
      22: monitorexit
      23: aload_3
      24: athrow
      25: aload_0
      26: areturn
    Exception table:
       from    to  target type
           7    17    20   any
          20    23    20   any

  public boolean remoteIpAndPort(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
      11: aload_1
      12: iload_2
      13: invokevirtual #134                // Method brave/handler/MutableSpan.remoteIpAndPort:(Ljava/lang/String;I)Z
      16: aload_3
      17: monitorexit
      18: ireturn
      19: astore        4
      21: aload_3
      22: monitorexit
      23: aload         4
      25: athrow
    Exception table:
       from    to  target type
           7    18    19   any
          19    23    19   any

  public void finish();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #33                 // Field clock:Lbrave/Clock;
       5: invokeinterface #56,  1           // InterfaceMethod brave/Clock.currentTimeMicroseconds:()J
      10: invokevirtual #109                // Method finish:(J)V
      13: return

  public void finish(long);
    Code:
       0: aload_0
       1: getfield      #29                 // Field pendingSpans:Lbrave/internal/recorder/PendingSpans;
       4: aload_0
       5: getfield      #27                 // Field context:Lbrave/propagation/TraceContext;
       8: invokevirtual #143                // Method brave/internal/recorder/PendingSpans.remove:(Lbrave/propagation/TraceContext;)Z
      11: ifne          15
      14: return
      15: aload_0
      16: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
      19: dup
      20: astore_3
      21: monitorenter
      22: aload_0
      23: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
      26: lload_1
      27: invokevirtual #146                // Method brave/handler/MutableSpan.finishTimestamp:(J)V
      30: aload_3
      31: monitorexit
      32: goto          42
      35: astore        4
      37: aload_3
      38: monitorexit
      39: aload         4
      41: athrow
      42: aload_0
      43: getfield      #42                 // Field finishedSpanHandler:Lbrave/handler/FinishedSpanHandler;
      46: aload_0
      47: getfield      #27                 // Field context:Lbrave/propagation/TraceContext;
      50: aload_0
      51: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
      54: invokevirtual #152                // Method brave/handler/FinishedSpanHandler.handle:(Lbrave/propagation/TraceContext;Lbrave/handler/MutableSpan;)Z
      57: pop
      58: return
    Exception table:
       from    to  target type
          22    32    35   any
          35    39    35   any

  public void abandon();
    Code:
       0: aload_0
       1: getfield      #29                 // Field pendingSpans:Lbrave/internal/recorder/PendingSpans;
       4: aload_0
       5: getfield      #27                 // Field context:Lbrave/propagation/TraceContext;
       8: invokevirtual #143                // Method brave/internal/recorder/PendingSpans.remove:(Lbrave/propagation/TraceContext;)Z
      11: pop
      12: return

  public void flush();
    Code:
       0: aload_0
       1: invokevirtual #156                // Method abandon:()V
       4: aload_0
       5: getfield      #42                 // Field finishedSpanHandler:Lbrave/handler/FinishedSpanHandler;
       8: aload_0
       9: getfield      #27                 // Field context:Lbrave/propagation/TraceContext;
      12: aload_0
      13: getfield      #31                 // Field state:Lbrave/handler/MutableSpan;
      16: invokevirtual #152                // Method brave/handler/FinishedSpanHandler.handle:(Lbrave/propagation/TraceContext;Lbrave/handler/MutableSpan;)Z
      19: pop
      20: return

  public java.lang.String toString();
    Code:
       0: new           #160                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #161                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #163                // String RealSpan(
       9: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #27                 // Field context:Lbrave/propagation/TraceContext;
      16: invokevirtual #170                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #172                // String )
      21: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #174                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class brave/RealSpan
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: getfield      #27                 // Field context:Lbrave/propagation/TraceContext;
      20: aload_1
      21: checkcast     #2                  // class brave/RealSpan
      24: getfield      #27                 // Field context:Lbrave/propagation/TraceContext;
      27: invokevirtual #177                // Method brave/propagation/TraceContext.equals:(Ljava/lang/Object;)Z
      30: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #27                 // Field context:Lbrave/propagation/TraceContext;
       4: invokevirtual #183                // Method brave/propagation/TraceContext.hashCode:()I
       7: ireturn

  public brave.SpanCustomizer annotate(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #186                // Method annotate:(Ljava/lang/String;)Lbrave/Span;
       5: areturn

  public brave.SpanCustomizer tag(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #189                // Method tag:(Ljava/lang/String;Ljava/lang/String;)Lbrave/Span;
       6: areturn

  public brave.SpanCustomizer name(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #191                // Method name:(Ljava/lang/String;)Lbrave/Span;
       5: areturn
}
