Compiled from "TracingHttpAsyncClientBuilder.java"
final class brave.httpasyncclient.TracingHttpAsyncClientBuilder$TracingAsyncRequestProducer implements org.apache.http.nio.protocol.HttpAsyncRequestProducer {
  final org.apache.http.nio.protocol.HttpAsyncRequestProducer requestProducer;

  final org.apache.http.protocol.HttpContext context;

  final brave.httpasyncclient.TracingHttpAsyncClientBuilder this$0;

  brave.httpasyncclient.TracingHttpAsyncClientBuilder$TracingAsyncRequestProducer(brave.httpasyncclient.TracingHttpAsyncClientBuilder, org.apache.http.nio.protocol.HttpAsyncRequestProducer, org.apache.http.protocol.HttpContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field this$0:Lbrave/httpasyncclient/TracingHttpAsyncClientBuilder;
       5: aload_0
       6: invokespecial #23                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #25                 // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
      14: aload_0
      15: aload_3
      16: putfield      #27                 // Field context:Lorg/apache/http/protocol/HttpContext;
      19: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
       4: invokeinterface #34,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.close:()V
       9: return

  public org.apache.http.HttpHost getTarget();
    Code:
       0: aload_0
       1: getfield      #25                 // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
       4: invokeinterface #38,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.getTarget:()Lorg/apache/http/HttpHost;
       9: areturn

  public org.apache.http.HttpRequest generateRequest() throws java.io.IOException, org.apache.http.HttpException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
       4: invokeinterface #44,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.generateRequest:()Lorg/apache/http/HttpRequest;
       9: areturn

  public void produceContent(org.apache.http.nio.ContentEncoder, org.apache.http.nio.IOControl) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
       4: aload_1
       5: aload_2
       6: invokeinterface #48,  3           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.produceContent:(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)V
      11: return

  public void requestCompleted(org.apache.http.protocol.HttpContext);
    Code:
       0: aload_0
       1: getfield      #25                 // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
       4: aload_1
       5: invokeinterface #56,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.requestCompleted:(Lorg/apache/http/protocol/HttpContext;)V
      10: return

  public void failed(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #27                 // Field context:Lorg/apache/http/protocol/HttpContext;
       4: ldc           #60                 // class brave/Span
       6: invokevirtual #66                 // Method java/lang/Class.getName:()Ljava/lang/String;
       9: invokeinterface #72,  2           // InterfaceMethod org/apache/http/protocol/HttpContext.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      14: checkcast     #60                 // class brave/Span
      17: astore_2
      18: aload_2
      19: ifnull        50
      22: aload_0
      23: getfield      #27                 // Field context:Lorg/apache/http/protocol/HttpContext;
      26: ldc           #60                 // class brave/Span
      28: invokevirtual #66                 // Method java/lang/Class.getName:()Ljava/lang/String;
      31: invokeinterface #75,  2           // InterfaceMethod org/apache/http/protocol/HttpContext.removeAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      36: pop
      37: aload_0
      38: getfield      #20                 // Field this$0:Lbrave/httpasyncclient/TracingHttpAsyncClientBuilder;
      41: getfield      #79                 // Field brave/httpasyncclient/TracingHttpAsyncClientBuilder.handler:Lbrave/http/HttpClientHandler;
      44: aconst_null
      45: aload_1
      46: aload_2
      47: invokevirtual #85                 // Method brave/http/HttpClientHandler.handleReceive:(Ljava/lang/Object;Ljava/lang/Throwable;Lbrave/Span;)V
      50: aload_0
      51: getfield      #25                 // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
      54: aload_1
      55: invokeinterface #87,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.failed:(Ljava/lang/Exception;)V
      60: return

  public boolean isRepeatable();
    Code:
       0: aload_0
       1: getfield      #25                 // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
       4: invokeinterface #95,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.isRepeatable:()Z
       9: ireturn

  public void resetRequest() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
       4: invokeinterface #98,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.resetRequest:()V
       9: return
}
