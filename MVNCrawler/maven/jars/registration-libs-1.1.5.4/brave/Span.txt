Compiled from "Span.java"
public abstract class brave.Span implements brave.SpanCustomizer {
  public abstract boolean isNoop();

  public abstract brave.propagation.TraceContext context();

  public abstract brave.SpanCustomizer customizer();

  public abstract brave.Span start();

  public abstract brave.Span start(long);

  public abstract brave.Span name(java.lang.String);

  public abstract brave.Span kind(brave.Span$Kind);

  public abstract brave.Span annotate(java.lang.String);

  public abstract brave.Span annotate(long, java.lang.String);

  public abstract brave.Span tag(java.lang.String, java.lang.String);

  public abstract brave.Span error(java.lang.Throwable);

  public brave.Span remoteEndpoint(zipkin2.Endpoint);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aload_0
       5: areturn
       6: aload_1
       7: invokevirtual #38                 // Method zipkin2/Endpoint.serviceName:()Ljava/lang/String;
      10: ifnull        22
      13: aload_0
      14: aload_1
      15: invokevirtual #38                 // Method zipkin2/Endpoint.serviceName:()Ljava/lang/String;
      18: invokevirtual #41                 // Method remoteServiceName:(Ljava/lang/String;)Lbrave/Span;
      21: pop
      22: aload_1
      23: invokevirtual #44                 // Method zipkin2/Endpoint.ipv6:()Ljava/lang/String;
      26: ifnull        36
      29: aload_1
      30: invokevirtual #44                 // Method zipkin2/Endpoint.ipv6:()Ljava/lang/String;
      33: goto          40
      36: aload_1
      37: invokevirtual #47                 // Method zipkin2/Endpoint.ipv4:()Ljava/lang/String;
      40: astore_2
      41: aload_0
      42: aload_2
      43: aload_1
      44: invokevirtual #53                 // Method zipkin2/Endpoint.portAsInt:()I
      47: invokevirtual #57                 // Method remoteIpAndPort:(Ljava/lang/String;I)Z
      50: pop
      51: aload_0
      52: areturn

  public abstract brave.Span remoteServiceName(java.lang.String);

  public abstract boolean remoteIpAndPort(java.lang.String, int);

  public abstract void finish();

  public abstract void abandon();

  public abstract void finish(long);

  public abstract void flush();

  brave.Span();
    Code:
       0: aload_0
       1: invokespecial #72                 // Method java/lang/Object."<init>":()V
       4: return

  public brave.SpanCustomizer annotate(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #75                 // Method annotate:(Ljava/lang/String;)Lbrave/Span;
       5: areturn

  public brave.SpanCustomizer tag(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #78                 // Method tag:(Ljava/lang/String;Ljava/lang/String;)Lbrave/Span;
       6: areturn

  public brave.SpanCustomizer name(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #80                 // Method name:(Ljava/lang/String;)Lbrave/Span;
       5: areturn
}
