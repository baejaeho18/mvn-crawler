Compiled from "TraceContext.java"
public final class brave.propagation.TraceContext$Builder {
  long traceIdHigh;

  long traceId;

  long parentId;

  long spanId;

  long localRootId;

  int flags;

  java.util.List<java.lang.Object> extra;

  static final boolean $assertionsDisabled;

  brave.propagation.TraceContext$Builder(brave.propagation.TraceContext);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #37                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       8: putfield      #39                 // Field extra:Ljava/util/List;
      11: aload_0
      12: aload_1
      13: getfield      #41                 // Field brave/propagation/TraceContext.traceIdHigh:J
      16: putfield      #42                 // Field traceIdHigh:J
      19: aload_0
      20: aload_1
      21: getfield      #44                 // Field brave/propagation/TraceContext.traceId:J
      24: putfield      #45                 // Field traceId:J
      27: aload_0
      28: aload_1
      29: getfield      #47                 // Field brave/propagation/TraceContext.localRootId:J
      32: putfield      #48                 // Field localRootId:J
      35: aload_0
      36: aload_1
      37: getfield      #50                 // Field brave/propagation/TraceContext.parentId:J
      40: putfield      #51                 // Field parentId:J
      43: aload_0
      44: aload_1
      45: getfield      #53                 // Field brave/propagation/TraceContext.spanId:J
      48: putfield      #54                 // Field spanId:J
      51: aload_0
      52: aload_1
      53: getfield      #56                 // Field brave/propagation/TraceContext.flags:I
      56: putfield      #57                 // Field flags:I
      59: aload_0
      60: aload_1
      61: getfield      #58                 // Field brave/propagation/TraceContext.extra:Ljava/util/List;
      64: putfield      #39                 // Field extra:Ljava/util/List;
      67: return

  public brave.propagation.TraceContext$Builder traceIdHigh(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #42                 // Field traceIdHigh:J
       5: aload_0
       6: areturn

  public brave.propagation.TraceContext$Builder traceId(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #45                 // Field traceId:J
       5: aload_0
       6: areturn

  public brave.propagation.TraceContext$Builder parentId(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #51                 // Field parentId:J
       5: aload_0
       6: areturn

  public brave.propagation.TraceContext$Builder parentId(java.lang.Long);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: lconst_0
       5: invokestatic  #71                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: astore_1
       9: aload_0
      10: aload_1
      11: invokevirtual #75                 // Method java/lang/Long.longValue:()J
      14: putfield      #51                 // Field parentId:J
      17: aload_0
      18: areturn

  public brave.propagation.TraceContext$Builder spanId(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #54                 // Field spanId:J
       5: aload_0
       6: areturn

  public brave.propagation.TraceContext$Builder sampledLocal(boolean);
    Code:
       0: iload_1
       1: ifeq          18
       4: aload_0
       5: dup
       6: getfield      #57                 // Field flags:I
       9: bipush        32
      11: ior
      12: putfield      #57                 // Field flags:I
      15: goto          29
      18: aload_0
      19: dup
      20: getfield      #57                 // Field flags:I
      23: bipush        -33
      25: iand
      26: putfield      #57                 // Field flags:I
      29: aload_0
      30: areturn

  public brave.propagation.TraceContext$Builder sampled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: getfield      #57                 // Field flags:I
       6: invokestatic  #84                 // Method brave/internal/InternalPropagation.sampled:(ZI)I
       9: putfield      #57                 // Field flags:I
      12: aload_0
      13: areturn

  public brave.propagation.TraceContext$Builder sampled(java.lang.Boolean);
    Code:
       0: aload_1
       1: ifnonnull     17
       4: aload_0
       5: dup
       6: getfield      #57                 // Field flags:I
       9: bipush        -7
      11: iand
      12: putfield      #57                 // Field flags:I
      15: aload_0
      16: areturn
      17: aload_0
      18: aload_1
      19: invokevirtual #91                 // Method java/lang/Boolean.booleanValue:()Z
      22: invokevirtual #93                 // Method sampled:(Z)Lbrave/propagation/TraceContext$Builder;
      25: areturn

  public brave.propagation.TraceContext$Builder debug(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: getfield      #57                 // Field flags:I
       6: invokestatic  #99                 // Method brave/propagation/SamplingFlags.debug:(ZI)I
       9: putfield      #57                 // Field flags:I
      12: aload_0
      13: areturn

  public brave.propagation.TraceContext$Builder shared(boolean);
    Code:
       0: iload_1
       1: ifeq          18
       4: aload_0
       5: dup
       6: getfield      #57                 // Field flags:I
       9: bipush        16
      11: ior
      12: putfield      #57                 // Field flags:I
      15: goto          29
      18: aload_0
      19: dup
      20: getfield      #57                 // Field flags:I
      23: bipush        -17
      25: iand
      26: putfield      #57                 // Field flags:I
      29: aload_0
      30: areturn

  public final brave.propagation.TraceContext$Builder extra(java.util.List<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field extra:Ljava/util/List;
       5: aload_0
       6: areturn

  final boolean parseTraceId(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokevirtual #108                // Method isNull:(Ljava/lang/Object;Ljava/lang/String;)Z
       6: ifeq          11
       9: iconst_0
      10: ireturn
      11: aload_1
      12: invokevirtual #114                // Method java/lang/String.length:()I
      15: istore_3
      16: aload_0
      17: aload_2
      18: iload_3
      19: bipush        32
      21: invokevirtual #118                // Method invalidIdLength:(Ljava/lang/Object;II)Z
      24: ifeq          29
      27: iconst_0
      28: ireturn
      29: iconst_0
      30: iload_3
      31: bipush        16
      33: isub
      34: invokestatic  #124                // Method java/lang/Math.max:(II)I
      37: istore        4
      39: iload         4
      41: ifle          71
      44: aload_0
      45: aload_1
      46: iconst_0
      47: iload         4
      49: invokestatic  #130                // Method brave/internal/HexCodec.lenientLowerHexToUnsignedLong:(Ljava/lang/CharSequence;II)J
      52: putfield      #42                 // Field traceIdHigh:J
      55: aload_0
      56: getfield      #42                 // Field traceIdHigh:J
      59: lconst_0
      60: lcmp
      61: ifne          71
      64: aload_0
      65: aload_1
      66: invokevirtual #134                // Method maybeLogNotLowerHex:(Ljava/lang/String;)V
      69: iconst_0
      70: ireturn
      71: aload_0
      72: aload_1
      73: iload         4
      75: iload_3
      76: invokestatic  #130                // Method brave/internal/HexCodec.lenientLowerHexToUnsignedLong:(Ljava/lang/CharSequence;II)J
      79: putfield      #45                 // Field traceId:J
      82: aload_0
      83: getfield      #45                 // Field traceId:J
      86: lconst_0
      87: lcmp
      88: ifne          98
      91: aload_0
      92: aload_1
      93: invokevirtual #134                // Method maybeLogNotLowerHex:(Ljava/lang/String;)V
      96: iconst_0
      97: ireturn
      98: iconst_1
      99: ireturn

  final <C, K> boolean parseParentId(brave.propagation.Propagation$Getter<C, K>, C, K);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokeinterface #146,  3          // InterfaceMethod brave/propagation/Propagation$Getter.get:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
       8: astore        4
      10: aload         4
      12: ifnonnull     17
      15: iconst_1
      16: ireturn
      17: aload         4
      19: invokevirtual #114                // Method java/lang/String.length:()I
      22: istore        5
      24: aload_0
      25: aload_3
      26: iload         5
      28: bipush        16
      30: invokevirtual #118                // Method invalidIdLength:(Ljava/lang/Object;II)Z
      33: ifeq          38
      36: iconst_0
      37: ireturn
      38: aload_0
      39: aload         4
      41: iconst_0
      42: iload         5
      44: invokestatic  #130                // Method brave/internal/HexCodec.lenientLowerHexToUnsignedLong:(Ljava/lang/CharSequence;II)J
      47: putfield      #51                 // Field parentId:J
      50: aload_0
      51: getfield      #51                 // Field parentId:J
      54: lconst_0
      55: lcmp
      56: ifeq          61
      59: iconst_1
      60: ireturn
      61: aload_0
      62: aload         4
      64: invokevirtual #134                // Method maybeLogNotLowerHex:(Ljava/lang/String;)V
      67: iconst_0
      68: ireturn

  final <C, K> boolean parseSpanId(brave.propagation.Propagation$Getter<C, K>, C, K);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokeinterface #146,  3          // InterfaceMethod brave/propagation/Propagation$Getter.get:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
       8: astore        4
      10: aload_0
      11: aload_3
      12: aload         4
      14: invokevirtual #108                // Method isNull:(Ljava/lang/Object;Ljava/lang/String;)Z
      17: ifeq          22
      20: iconst_0
      21: ireturn
      22: aload         4
      24: invokevirtual #114                // Method java/lang/String.length:()I
      27: istore        5
      29: aload_0
      30: aload_3
      31: iload         5
      33: bipush        16
      35: invokevirtual #118                // Method invalidIdLength:(Ljava/lang/Object;II)Z
      38: ifeq          43
      41: iconst_0
      42: ireturn
      43: aload_0
      44: aload         4
      46: iconst_0
      47: iload         5
      49: invokestatic  #130                // Method brave/internal/HexCodec.lenientLowerHexToUnsignedLong:(Ljava/lang/CharSequence;II)J
      52: putfield      #54                 // Field spanId:J
      55: aload_0
      56: getfield      #54                 // Field spanId:J
      59: lconst_0
      60: lcmp
      61: ifne          72
      64: aload_0
      65: aload         4
      67: invokevirtual #134                // Method maybeLogNotLowerHex:(Ljava/lang/String;)V
      70: iconst_0
      71: ireturn
      72: iconst_1
      73: ireturn

  boolean invalidIdLength(java.lang.Object, int, int);
    Code:
       0: iload_2
       1: iconst_1
       2: if_icmple     12
       5: iload_2
       6: iload_3
       7: if_icmpgt     12
      10: iconst_0
      11: ireturn
      12: getstatic     #157                // Field $assertionsDisabled:Z
      15: ifne          38
      18: iload_3
      19: bipush        32
      21: if_icmpeq     38
      24: iload_3
      25: bipush        16
      27: if_icmpeq     38
      30: new           #159                // class java/lang/AssertionError
      33: dup
      34: invokespecial #160                // Method java/lang/AssertionError."<init>":()V
      37: athrow
      38: invokestatic  #165                // Method brave/internal/Platform.get:()Lbrave/internal/Platform;
      41: iload_3
      42: bipush        32
      44: if_icmpne     52
      47: ldc           #167                // String {0} should be a 1 to 32 character lower-hex string with no prefix
      49: goto          54
      52: ldc           #169                // String {0} should be a 1 to 16 character lower-hex string with no prefix
      54: aload_1
      55: aconst_null
      56: invokevirtual #173                // Method brave/internal/Platform.log:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V
      59: iconst_1
      60: ireturn

  boolean isNull(java.lang.Object, java.lang.String);
    Code:
       0: aload_2
       1: ifnull        6
       4: iconst_0
       5: ireturn
       6: invokestatic  #165                // Method brave/internal/Platform.get:()Lbrave/internal/Platform;
       9: ldc           #175                // String {0} was null
      11: aload_1
      12: aconst_null
      13: invokevirtual #173                // Method brave/internal/Platform.log:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V
      16: iconst_1
      17: ireturn

  void maybeLogNotLowerHex(java.lang.String);
    Code:
       0: invokestatic  #165                // Method brave/internal/Platform.get:()Lbrave/internal/Platform;
       3: ldc           #178                // String {0} is not a lower-hex string
       5: aload_1
       6: aconst_null
       7: invokevirtual #173                // Method brave/internal/Platform.log:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V
      10: return

  public final brave.propagation.TraceContext build();
    Code:
       0: ldc           #183                // String
       2: astore_1
       3: aload_0
       4: getfield      #45                 // Field traceId:J
       7: lconst_0
       8: lcmp
       9: ifne          32
      12: new           #185                // class java/lang/StringBuilder
      15: dup
      16: invokespecial #186                // Method java/lang/StringBuilder."<init>":()V
      19: aload_1
      20: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #192                // String  traceId
      25: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #196                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: astore_1
      32: aload_0
      33: getfield      #54                 // Field spanId:J
      36: lconst_0
      37: lcmp
      38: ifne          61
      41: new           #185                // class java/lang/StringBuilder
      44: dup
      45: invokespecial #186                // Method java/lang/StringBuilder."<init>":()V
      48: aload_1
      49: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #198                // String  spanId
      54: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #196                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: astore_1
      61: ldc           #183                // String
      63: aload_1
      64: invokevirtual #202                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      67: ifne          97
      70: new           #204                // class java/lang/IllegalStateException
      73: dup
      74: new           #185                // class java/lang/StringBuilder
      77: dup
      78: invokespecial #186                // Method java/lang/StringBuilder."<init>":()V
      81: ldc           #206                // String Missing:
      83: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_1
      87: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: invokevirtual #196                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokespecial #208                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      96: athrow
      97: new           #7                  // class brave/propagation/TraceContext
     100: dup
     101: aload_0
     102: getfield      #57                 // Field flags:I
     105: aload_0
     106: getfield      #42                 // Field traceIdHigh:J
     109: aload_0
     110: getfield      #45                 // Field traceId:J
     113: aload_0
     114: getfield      #48                 // Field localRootId:J
     117: aload_0
     118: getfield      #51                 // Field parentId:J
     121: aload_0
     122: getfield      #54                 // Field spanId:J
     125: aload_0
     126: getfield      #39                 // Field extra:Ljava/util/List;
     129: invokestatic  #214                // Method brave/internal/Lists.ensureImmutable:(Ljava/util/List;)Ljava/util/List;
     132: invokespecial #217                // Method brave/propagation/TraceContext."<init>":(IJJJJJLjava/util/List;)V
     135: areturn

  brave.propagation.TraceContext$Builder();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #37                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       8: putfield      #39                 // Field extra:Ljava/util/List;
      11: return

  static {};
    Code:
       0: ldc           #7                  // class brave/propagation/TraceContext
       2: invokevirtual #224                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #157                // Field $assertionsDisabled:Z
      16: return
}
