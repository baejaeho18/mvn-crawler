Compiled from "DeclarativeSampler.java"
public final class brave.sampler.DeclarativeSampler<M> {
  final java.util.concurrent.ConcurrentMap<M, brave.sampler.Sampler> methodsToSamplers;

  final brave.sampler.DeclarativeSampler$RateForMethod<M> rateForMethod;

  static final brave.sampler.Sampler NULL_SENTINEL;

  public static <M> brave.sampler.DeclarativeSampler<M> create(brave.sampler.DeclarativeSampler$RateForMethod<M>);
    Code:
       0: new           #2                  // class brave/sampler/DeclarativeSampler
       3: dup
       4: aload_0
       5: invokespecial #30                 // Method "<init>":(Lbrave/sampler/DeclarativeSampler$RateForMethod;)V
       8: areturn

  brave.sampler.DeclarativeSampler(brave.sampler.DeclarativeSampler$RateForMethod<M>);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #36                 // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #37                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #39                 // Field methodsToSamplers:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: aload_1
      17: putfield      #41                 // Field rateForMethod:Lbrave/sampler/DeclarativeSampler$RateForMethod;
      20: return

  public brave.sampler.Sampler toSampler(M);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #49                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #51                 // String method == null
      10: invokespecial #54                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #15                 // class brave/sampler/DeclarativeSampler$1
      17: dup
      18: aload_0
      19: aload_1
      20: invokespecial #57                 // Method brave/sampler/DeclarativeSampler$1."<init>":(Lbrave/sampler/DeclarativeSampler;Ljava/lang/Object;)V
      23: areturn

  public brave.sampler.Sampler toSampler(M, brave.sampler.Sampler);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #49                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #51                 // String method == null
      10: invokespecial #54                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #49                 // class java/lang/NullPointerException
      21: dup
      22: ldc           #64                 // String fallback == null
      24: invokespecial #54                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: new           #13                 // class brave/sampler/DeclarativeSampler$2
      31: dup
      32: aload_0
      33: aload_1
      34: aload_2
      35: invokespecial #67                 // Method brave/sampler/DeclarativeSampler$2."<init>":(Lbrave/sampler/DeclarativeSampler;Ljava/lang/Object;Lbrave/sampler/Sampler;)V
      38: areturn

  public brave.propagation.SamplingFlags sample(M);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #78                 // Field brave/propagation/SamplingFlags.EMPTY:Lbrave/propagation/SamplingFlags;
       7: areturn
       8: aload_0
       9: getfield      #39                 // Field methodsToSamplers:Ljava/util/concurrent/ConcurrentMap;
      12: aload_1
      13: invokeinterface #84,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #86                 // class brave/sampler/Sampler
      21: astore_2
      22: aload_2
      23: getstatic     #88                 // Field NULL_SENTINEL:Lbrave/sampler/Sampler;
      26: if_acmpne     33
      29: getstatic     #78                 // Field brave/propagation/SamplingFlags.EMPTY:Lbrave/propagation/SamplingFlags;
      32: areturn
      33: aload_2
      34: ifnull        43
      37: aload_0
      38: aload_2
      39: invokespecial #91                 // Method sample:(Lbrave/sampler/Sampler;)Lbrave/propagation/SamplingFlags;
      42: areturn
      43: aload_0
      44: getfield      #41                 // Field rateForMethod:Lbrave/sampler/DeclarativeSampler$RateForMethod;
      47: aload_1
      48: invokeinterface #94,  2           // InterfaceMethod brave/sampler/DeclarativeSampler$RateForMethod.get:(Ljava/lang/Object;)Ljava/lang/Float;
      53: astore_3
      54: aload_3
      55: ifnonnull     76
      58: aload_0
      59: getfield      #39                 // Field methodsToSamplers:Ljava/util/concurrent/ConcurrentMap;
      62: aload_1
      63: getstatic     #88                 // Field NULL_SENTINEL:Lbrave/sampler/Sampler;
      66: invokeinterface #98,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      71: pop
      72: getstatic     #78                 // Field brave/propagation/SamplingFlags.EMPTY:Lbrave/propagation/SamplingFlags;
      75: areturn
      76: aload_3
      77: invokevirtual #104                // Method java/lang/Float.floatValue:()F
      80: invokestatic  #109                // Method brave/sampler/CountingSampler.create:(F)Lbrave/sampler/Sampler;
      83: astore_2
      84: aload_0
      85: getfield      #39                 // Field methodsToSamplers:Ljava/util/concurrent/ConcurrentMap;
      88: aload_1
      89: aload_2
      90: invokeinterface #112,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      95: checkcast     #86                 // class brave/sampler/Sampler
      98: astore        4
     100: aload         4
     102: ifnull        108
     105: aload         4
     107: astore_2
     108: aload_0
     109: aload_2
     110: invokespecial #91                 // Method sample:(Lbrave/sampler/Sampler;)Lbrave/propagation/SamplingFlags;
     113: areturn

  private brave.propagation.SamplingFlags sample(brave.sampler.Sampler);
    Code:
       0: aload_1
       1: lconst_0
       2: invokevirtual #120                // Method brave/sampler/Sampler.isSampled:(J)Z
       5: ifeq          14
       8: getstatic     #123                // Field brave/propagation/SamplingFlags.SAMPLED:Lbrave/propagation/SamplingFlags;
      11: goto          17
      14: getstatic     #126                // Field brave/propagation/SamplingFlags.NOT_SAMPLED:Lbrave/propagation/SamplingFlags;
      17: areturn

  static {};
    Code:
       0: new           #11                 // class brave/sampler/DeclarativeSampler$3
       3: dup
       4: invokespecial #128                // Method brave/sampler/DeclarativeSampler$3."<init>":()V
       7: putstatic     #88                 // Field NULL_SENTINEL:Lbrave/sampler/Sampler;
      10: return
}
