Compiled from "CountingSampler.java"
public final class brave.sampler.CountingSampler extends brave.sampler.Sampler {
  private final java.util.concurrent.atomic.AtomicInteger counter;

  private final java.util.BitSet sampleDecisions;

  public static brave.sampler.Sampler create(float);
    Code:
       0: fload_0
       1: fconst_0
       2: fcmpl
       3: ifne          10
       6: getstatic     #15                 // Field NEVER_SAMPLE:Lbrave/sampler/Sampler;
       9: areturn
      10: fload_0
      11: f2d
      12: dconst_1
      13: dcmpl
      14: ifne          21
      17: getstatic     #18                 // Field ALWAYS_SAMPLE:Lbrave/sampler/Sampler;
      20: areturn
      21: fload_0
      22: ldc           #19                 // float 0.01f
      24: fcmpg
      25: iflt          34
      28: fload_0
      29: fconst_1
      30: fcmpl
      31: ifle          61
      34: new           #21                 // class java/lang/IllegalArgumentException
      37: dup
      38: new           #23                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #29                 // String rate should be between 0.01 and 1: was
      47: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: fload_0
      51: invokevirtual #36                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
      54: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: new           #2                  // class brave/sampler/CountingSampler
      64: dup
      65: fload_0
      66: invokespecial #46                 // Method "<init>":(F)V
      69: areturn

  brave.sampler.CountingSampler(float);
    Code:
       0: aload_0
       1: fload_1
       2: new           #50                 // class java/util/Random
       5: dup
       6: invokespecial #51                 // Method java/util/Random."<init>":()V
       9: invokespecial #54                 // Method "<init>":(FLjava/util/Random;)V
      12: return

  brave.sampler.CountingSampler(float, java.util.Random);
    Code:
       0: aload_0
       1: invokespecial #57                 // Method brave/sampler/Sampler."<init>":()V
       4: aload_0
       5: new           #59                 // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: invokespecial #60                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      12: putfield      #62                 // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
      15: fload_1
      16: ldc           #63                 // float 100.0f
      18: fmul
      19: f2i
      20: istore_3
      21: aload_0
      22: bipush        100
      24: iload_3
      25: aload_2
      26: invokestatic  #67                 // Method randomBitSet:(IILjava/util/Random;)Ljava/util/BitSet;
      29: putfield      #69                 // Field sampleDecisions:Ljava/util/BitSet;
      32: return

  public boolean isSampled(long);
    Code:
       0: aload_0
       1: getfield      #69                 // Field sampleDecisions:Ljava/util/BitSet;
       4: aload_0
       5: getfield      #62                 // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
       8: invokevirtual #79                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      11: bipush        100
      13: invokestatic  #83                 // Method mod:(II)I
      16: invokevirtual #89                 // Method java/util/BitSet.get:(I)Z
      19: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #93                 // String CountingSampler()
       2: areturn

  static int mod(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: irem
       3: istore_2
       4: iload_2
       5: iflt          12
       8: iload_2
       9: goto          15
      12: iload_1
      13: iload_2
      14: iadd
      15: ireturn

  static java.util.BitSet randomBitSet(int, int, java.util.Random);
    Code:
       0: new           #85                 // class java/util/BitSet
       3: dup
       4: iload_0
       5: invokespecial #99                 // Method java/util/BitSet."<init>":(I)V
       8: astore_3
       9: iload_1
      10: newarray       int
      12: astore        4
      14: iconst_0
      15: istore        5
      17: iload         5
      19: iload_1
      20: if_icmpge     42
      23: aload         4
      25: iload         5
      27: iload         5
      29: iastore
      30: aload_3
      31: iload         5
      33: invokevirtual #104                // Method java/util/BitSet.set:(I)V
      36: iinc          5, 1
      39: goto          17
      42: iload         5
      44: iload_0
      45: if_icmpge     92
      48: aload_2
      49: iload         5
      51: iconst_1
      52: iadd
      53: invokevirtual #108                // Method java/util/Random.nextInt:(I)I
      56: istore        6
      58: iload         6
      60: iload_1
      61: if_icmpge     86
      64: aload_3
      65: aload         4
      67: iload         6
      69: iaload
      70: invokevirtual #111                // Method java/util/BitSet.clear:(I)V
      73: aload_3
      74: iload         5
      76: invokevirtual #104                // Method java/util/BitSet.set:(I)V
      79: aload         4
      81: iload         6
      83: iload         5
      85: iastore
      86: iinc          5, 1
      89: goto          42
      92: aload_3
      93: areturn
}
