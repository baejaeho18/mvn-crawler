Compiled from "TracingProducer.java"
final class brave.kafka.clients.TracingProducer<K, V> implements org.apache.kafka.clients.producer.Producer<K, V> {
  final org.apache.kafka.clients.producer.Producer<K, V> delegate;

  final brave.kafka.clients.KafkaTracing kafkaTracing;

  final brave.propagation.CurrentTraceContext current;

  final brave.Tracer tracer;

  final brave.propagation.TraceContext$Injector<org.apache.kafka.common.header.Headers> injector;

  final brave.propagation.TraceContext$Extractor<org.apache.kafka.common.header.Headers> extractor;

  final java.lang.String remoteServiceName;

  brave.kafka.clients.TracingProducer(org.apache.kafka.clients.producer.Producer<K, V>, brave.kafka.clients.KafkaTracing);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field delegate:Lorg/apache/kafka/clients/producer/Producer;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field kafkaTracing:Lbrave/kafka/clients/KafkaTracing;
      14: aload_0
      15: aload_2
      16: getfield      #4                  // Field brave/kafka/clients/KafkaTracing.tracing:Lbrave/Tracing;
      19: invokevirtual #5                  // Method brave/Tracing.currentTraceContext:()Lbrave/propagation/CurrentTraceContext;
      22: putfield      #6                  // Field current:Lbrave/propagation/CurrentTraceContext;
      25: aload_0
      26: aload_2
      27: getfield      #4                  // Field brave/kafka/clients/KafkaTracing.tracing:Lbrave/Tracing;
      30: invokevirtual #7                  // Method brave/Tracing.tracer:()Lbrave/Tracer;
      33: putfield      #8                  // Field tracer:Lbrave/Tracer;
      36: aload_0
      37: aload_2
      38: getfield      #9                  // Field brave/kafka/clients/KafkaTracing.injector:Lbrave/propagation/TraceContext$Injector;
      41: putfield      #10                 // Field injector:Lbrave/propagation/TraceContext$Injector;
      44: aload_0
      45: aload_2
      46: getfield      #11                 // Field brave/kafka/clients/KafkaTracing.extractor:Lbrave/propagation/TraceContext$Extractor;
      49: putfield      #12                 // Field extractor:Lbrave/propagation/TraceContext$Extractor;
      52: aload_0
      53: aload_2
      54: getfield      #13                 // Field brave/kafka/clients/KafkaTracing.remoteServiceName:Ljava/lang/String;
      57: putfield      #14                 // Field remoteServiceName:Ljava/lang/String;
      60: return

  public void initTransactions();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/producer/Producer;
       4: invokeinterface #15,  1           // InterfaceMethod org/apache/kafka/clients/producer/Producer.initTransactions:()V
       9: return

  public void beginTransaction();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/producer/Producer;
       4: invokeinterface #16,  1           // InterfaceMethod org/apache/kafka/clients/producer/Producer.beginTransaction:()V
       9: return

  public void commitTransaction();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/producer/Producer;
       4: invokeinterface #17,  1           // InterfaceMethod org/apache/kafka/clients/producer/Producer.commitTransaction:()V
       9: return

  public void abortTransaction();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/producer/Producer;
       4: invokeinterface #18,  1           // InterfaceMethod org/apache/kafka/clients/producer/Producer.abortTransaction:()V
       9: return

  public java.util.concurrent.Future<org.apache.kafka.clients.producer.RecordMetadata> send(org.apache.kafka.clients.producer.ProducerRecord<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #19                 // Method send:(Lorg/apache/kafka/clients/producer/ProducerRecord;Lorg/apache/kafka/clients/producer/Callback;)Ljava/util/concurrent/Future;
       6: areturn

  public java.util.concurrent.Future<org.apache.kafka.clients.producer.RecordMetadata> send(org.apache.kafka.clients.producer.ProducerRecord<K, V>, org.apache.kafka.clients.producer.Callback);
    Code:
       0: aload_0
       1: getfield      #6                  // Field current:Lbrave/propagation/CurrentTraceContext;
       4: invokevirtual #20                 // Method brave/propagation/CurrentTraceContext.get:()Lbrave/propagation/TraceContext;
       7: astore_3
       8: aload_3
       9: ifnonnull     35
      12: aload_0
      13: getfield      #8                  // Field tracer:Lbrave/Tracer;
      16: aload_0
      17: getfield      #3                  // Field kafkaTracing:Lbrave/kafka/clients/KafkaTracing;
      20: aload_1
      21: invokevirtual #21                 // Method org/apache/kafka/clients/producer/ProducerRecord.headers:()Lorg/apache/kafka/common/header/Headers;
      24: invokevirtual #22                 // Method brave/kafka/clients/KafkaTracing.extractAndClearHeaders:(Lorg/apache/kafka/common/header/Headers;)Lbrave/propagation/TraceContextOrSamplingFlags;
      27: invokevirtual #23                 // Method brave/Tracer.nextSpan:(Lbrave/propagation/TraceContextOrSamplingFlags;)Lbrave/Span;
      30: astore        4
      32: goto          45
      35: aload_0
      36: getfield      #8                  // Field tracer:Lbrave/Tracer;
      39: aload_3
      40: invokevirtual #24                 // Method brave/Tracer.newChild:(Lbrave/propagation/TraceContext;)Lbrave/Span;
      43: astore        4
      45: aload         4
      47: invokevirtual #25                 // Method brave/Span.isNoop:()Z
      50: ifne          139
      53: aload         4
      55: getstatic     #26                 // Field brave/Span$Kind.PRODUCER:Lbrave/Span$Kind;
      58: invokevirtual #27                 // Method brave/Span.kind:(Lbrave/Span$Kind;)Lbrave/Span;
      61: ldc           #28                 // String send
      63: invokevirtual #29                 // Method brave/Span.name:(Ljava/lang/String;)Lbrave/Span;
      66: pop
      67: aload_0
      68: getfield      #14                 // Field remoteServiceName:Ljava/lang/String;
      71: ifnull        84
      74: aload         4
      76: aload_0
      77: getfield      #14                 // Field remoteServiceName:Ljava/lang/String;
      80: invokevirtual #30                 // Method brave/Span.remoteServiceName:(Ljava/lang/String;)Lbrave/Span;
      83: pop
      84: aload_1
      85: invokevirtual #31                 // Method org/apache/kafka/clients/producer/ProducerRecord.key:()Ljava/lang/Object;
      88: instanceof    #32                 // class java/lang/String
      91: ifeq          121
      94: ldc           #33                 // String
      96: aload_1
      97: invokevirtual #31                 // Method org/apache/kafka/clients/producer/ProducerRecord.key:()Ljava/lang/Object;
     100: invokevirtual #34                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     103: ifne          121
     106: aload         4
     108: ldc           #36                 // String kafka.key
     110: aload_1
     111: invokevirtual #31                 // Method org/apache/kafka/clients/producer/ProducerRecord.key:()Ljava/lang/Object;
     114: invokevirtual #37                 // Method java/lang/Object.toString:()Ljava/lang/String;
     117: invokevirtual #38                 // Method brave/Span.tag:(Ljava/lang/String;Ljava/lang/String;)Lbrave/Span;
     120: pop
     121: aload         4
     123: ldc           #39                 // String kafka.topic
     125: aload_1
     126: invokevirtual #40                 // Method org/apache/kafka/clients/producer/ProducerRecord.topic:()Ljava/lang/String;
     129: invokevirtual #38                 // Method brave/Span.tag:(Ljava/lang/String;Ljava/lang/String;)Lbrave/Span;
     132: pop
     133: aload         4
     135: invokevirtual #41                 // Method brave/Span.start:()Lbrave/Span;
     138: pop
     139: aload_0
     140: getfield      #10                 // Field injector:Lbrave/propagation/TraceContext$Injector;
     143: aload         4
     145: invokevirtual #42                 // Method brave/Span.context:()Lbrave/propagation/TraceContext;
     148: aload_1
     149: invokevirtual #21                 // Method org/apache/kafka/clients/producer/ProducerRecord.headers:()Lorg/apache/kafka/common/header/Headers;
     152: invokeinterface #43,  3           // InterfaceMethod brave/propagation/TraceContext$Injector.inject:(Lbrave/propagation/TraceContext;Ljava/lang/Object;)V
     157: aload_0
     158: getfield      #8                  // Field tracer:Lbrave/Tracer;
     161: aload         4
     163: invokevirtual #44                 // Method brave/Tracer.withSpanInScope:(Lbrave/Span;)Lbrave/Tracer$SpanInScope;
     166: astore        5
     168: aload_0
     169: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/producer/Producer;
     172: aload_1
     173: aload_2
     174: aload         4
     176: aload_0
     177: getfield      #6                  // Field current:Lbrave/propagation/CurrentTraceContext;
     180: invokestatic  #45                 // Method brave/kafka/clients/TracingCallback.create:(Lorg/apache/kafka/clients/producer/Callback;Lbrave/Span;Lbrave/propagation/CurrentTraceContext;)Lorg/apache/kafka/clients/producer/Callback;
     183: invokeinterface #46,  3           // InterfaceMethod org/apache/kafka/clients/producer/Producer.send:(Lorg/apache/kafka/clients/producer/ProducerRecord;Lorg/apache/kafka/clients/producer/Callback;)Ljava/util/concurrent/Future;
     188: astore        6
     190: aload         5
     192: ifnull        200
     195: aload         5
     197: invokevirtual #47                 // Method brave/Tracer$SpanInScope.close:()V
     200: aload         6
     202: areturn
     203: astore        6
     205: aload         5
     207: ifnull        227
     210: aload         5
     212: invokevirtual #47                 // Method brave/Tracer$SpanInScope.close:()V
     215: goto          227
     218: astore        7
     220: aload         6
     222: aload         7
     224: invokevirtual #49                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     227: aload         6
     229: athrow
     230: astore        5
     232: aload         4
     234: aload         5
     236: invokevirtual #52                 // Method brave/Span.error:(Ljava/lang/Throwable;)Lbrave/Span;
     239: invokevirtual #53                 // Method brave/Span.finish:()V
     242: aload         5
     244: athrow
    Exception table:
       from    to  target type
         168   190   203   Class java/lang/Throwable
         210   215   218   Class java/lang/Throwable
         157   200   230   Class java/lang/RuntimeException
         157   200   230   Class java/lang/Error
         203   230   230   Class java/lang/RuntimeException
         203   230   230   Class java/lang/Error

  public void flush();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/producer/Producer;
       4: invokeinterface #54,  1           // InterfaceMethod org/apache/kafka/clients/producer/Producer.flush:()V
       9: return

  public java.util.List<org.apache.kafka.common.PartitionInfo> partitionsFor(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/producer/Producer;
       4: aload_1
       5: invokeinterface #55,  2           // InterfaceMethod org/apache/kafka/clients/producer/Producer.partitionsFor:(Ljava/lang/String;)Ljava/util/List;
      10: areturn

  public java.util.Map<org.apache.kafka.common.MetricName, ? extends org.apache.kafka.common.Metric> metrics();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/producer/Producer;
       4: invokeinterface #56,  1           // InterfaceMethod org/apache/kafka/clients/producer/Producer.metrics:()Ljava/util/Map;
       9: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/producer/Producer;
       4: invokeinterface #57,  1           // InterfaceMethod org/apache/kafka/clients/producer/Producer.close:()V
       9: return

  public void close(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/producer/Producer;
       4: lload_1
       5: aload_3
       6: invokeinterface #58,  4           // InterfaceMethod org/apache/kafka/clients/producer/Producer.close:(JLjava/util/concurrent/TimeUnit;)V
      11: return

  public void sendOffsetsToTransaction(java.util.Map<org.apache.kafka.common.TopicPartition, org.apache.kafka.clients.consumer.OffsetAndMetadata>, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/producer/Producer;
       4: aload_1
       5: aload_2
       6: invokeinterface #59,  3           // InterfaceMethod org/apache/kafka/clients/producer/Producer.sendOffsetsToTransaction:(Ljava/util/Map;Ljava/lang/String;)V
      11: return
}
