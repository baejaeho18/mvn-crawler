Compiled from "TracingConsumer.java"
final class brave.kafka.clients.TracingConsumer<K, V> implements org.apache.kafka.clients.consumer.Consumer<K, V> {
  final org.apache.kafka.clients.consumer.Consumer<K, V> delegate;

  final brave.kafka.clients.KafkaTracing kafkaTracing;

  final brave.Tracing tracing;

  final brave.propagation.TraceContext$Injector<org.apache.kafka.common.header.Headers> injector;

  final java.lang.String remoteServiceName;

  static final org.apache.kafka.clients.consumer.ConsumerRebalanceListener NO_OP_CONSUMER_REBALANCE_LISTENER;

  brave.kafka.clients.TracingConsumer(org.apache.kafka.clients.consumer.Consumer<K, V>, brave.kafka.clients.KafkaTracing);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field kafkaTracing:Lbrave/kafka/clients/KafkaTracing;
      14: aload_0
      15: aload_2
      16: getfield      #4                  // Field brave/kafka/clients/KafkaTracing.tracing:Lbrave/Tracing;
      19: putfield      #5                  // Field tracing:Lbrave/Tracing;
      22: aload_0
      23: aload_2
      24: getfield      #6                  // Field brave/kafka/clients/KafkaTracing.injector:Lbrave/propagation/TraceContext$Injector;
      27: putfield      #7                  // Field injector:Lbrave/propagation/TraceContext$Injector;
      30: aload_0
      31: aload_2
      32: getfield      #8                  // Field brave/kafka/clients/KafkaTracing.remoteServiceName:Ljava/lang/String;
      35: putfield      #9                  // Field remoteServiceName:Ljava/lang/String;
      38: return

  public org.apache.kafka.clients.consumer.ConsumerRecords<K, V> poll(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #10                 // Method java/time/Duration.toMillis:()J
       5: invokevirtual #11                 // Method poll:(J)Lorg/apache/kafka/clients/consumer/ConsumerRecords;
       8: areturn

  public org.apache.kafka.clients.consumer.ConsumerRecords<K, V> poll(long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: lload_1
       5: invokeinterface #12,  3           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.poll:(J)Lorg/apache/kafka/clients/consumer/ConsumerRecords;
      10: astore_3
      11: aload_3
      12: invokevirtual #13                 // Method org/apache/kafka/clients/consumer/ConsumerRecords.isEmpty:()Z
      15: ifne          28
      18: aload_0
      19: getfield      #5                  // Field tracing:Lbrave/Tracing;
      22: invokevirtual #14                 // Method brave/Tracing.isNoop:()Z
      25: ifeq          30
      28: aload_3
      29: areturn
      30: lconst_0
      31: lstore        4
      33: new           #15                 // class java/util/LinkedHashMap
      36: dup
      37: invokespecial #16                 // Method java/util/LinkedHashMap."<init>":()V
      40: astore        6
      42: aload_3
      43: invokevirtual #17                 // Method org/apache/kafka/clients/consumer/ConsumerRecords.partitions:()Ljava/util/Set;
      46: invokeinterface #18,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      51: astore        7
      53: aload         7
      55: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      60: ifeq          371
      63: aload         7
      65: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      70: checkcast     #21                 // class org/apache/kafka/common/TopicPartition
      73: astore        8
      75: aload         8
      77: invokevirtual #22                 // Method org/apache/kafka/common/TopicPartition.topic:()Ljava/lang/String;
      80: astore        9
      82: aload_3
      83: aload         8
      85: invokevirtual #23                 // Method org/apache/kafka/clients/consumer/ConsumerRecords.records:(Lorg/apache/kafka/common/TopicPartition;)Ljava/util/List;
      88: astore        10
      90: iconst_0
      91: istore        11
      93: aload         10
      95: invokeinterface #24,  1           // InterfaceMethod java/util/List.size:()I
     100: istore        12
     102: iload         11
     104: iload         12
     106: if_icmpge     368
     109: aload         10
     111: iload         11
     113: invokeinterface #25,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     118: checkcast     #26                 // class org/apache/kafka/clients/consumer/ConsumerRecord
     121: astore        13
     123: aload_0
     124: getfield      #3                  // Field kafkaTracing:Lbrave/kafka/clients/KafkaTracing;
     127: aload         13
     129: invokevirtual #27                 // Method org/apache/kafka/clients/consumer/ConsumerRecord.headers:()Lorg/apache/kafka/common/header/Headers;
     132: invokevirtual #28                 // Method brave/kafka/clients/KafkaTracing.extractAndClearHeaders:(Lorg/apache/kafka/common/header/Headers;)Lbrave/propagation/TraceContextOrSamplingFlags;
     135: astore        14
     137: aload         14
     139: invokevirtual #29                 // Method brave/propagation/TraceContextOrSamplingFlags.samplingFlags:()Lbrave/propagation/SamplingFlags;
     142: ifnull        275
     145: aload         14
     147: invokevirtual #30                 // Method brave/propagation/TraceContextOrSamplingFlags.extra:()Ljava/util/List;
     150: invokeinterface #31,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     155: ifeq          275
     158: aload         6
     160: aload         9
     162: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     167: checkcast     #33                 // class brave/Span
     170: astore        15
     172: aload         15
     174: ifnonnull     253
     177: aload_0
     178: getfield      #5                  // Field tracing:Lbrave/Tracing;
     181: invokevirtual #34                 // Method brave/Tracing.tracer:()Lbrave/Tracer;
     184: aload         14
     186: invokevirtual #35                 // Method brave/Tracer.nextSpan:(Lbrave/propagation/TraceContextOrSamplingFlags;)Lbrave/Span;
     189: astore        15
     191: aload         15
     193: invokevirtual #36                 // Method brave/Span.isNoop:()Z
     196: ifne          241
     199: aload_0
     200: aload         9
     202: aload         15
     204: invokevirtual #37                 // Method setConsumerSpan:(Ljava/lang/String;Lbrave/Span;)V
     207: lload         4
     209: lconst_0
     210: lcmp
     211: ifne          233
     214: aload_0
     215: getfield      #5                  // Field tracing:Lbrave/Tracing;
     218: aload         15
     220: invokevirtual #38                 // Method brave/Span.context:()Lbrave/propagation/TraceContext;
     223: invokevirtual #39                 // Method brave/Tracing.clock:(Lbrave/propagation/TraceContext;)Lbrave/Clock;
     226: invokeinterface #40,  1           // InterfaceMethod brave/Clock.currentTimeMicroseconds:()J
     231: lstore        4
     233: aload         15
     235: lload         4
     237: invokevirtual #41                 // Method brave/Span.start:(J)Lbrave/Span;
     240: pop
     241: aload         6
     243: aload         9
     245: aload         15
     247: invokeinterface #42,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     252: pop
     253: aload_0
     254: getfield      #7                  // Field injector:Lbrave/propagation/TraceContext$Injector;
     257: aload         15
     259: invokevirtual #38                 // Method brave/Span.context:()Lbrave/propagation/TraceContext;
     262: aload         13
     264: invokevirtual #27                 // Method org/apache/kafka/clients/consumer/ConsumerRecord.headers:()Lorg/apache/kafka/common/header/Headers;
     267: invokeinterface #43,  3           // InterfaceMethod brave/propagation/TraceContext$Injector.inject:(Lbrave/propagation/TraceContext;Ljava/lang/Object;)V
     272: goto          362
     275: aload_0
     276: getfield      #5                  // Field tracing:Lbrave/Tracing;
     279: invokevirtual #34                 // Method brave/Tracing.tracer:()Lbrave/Tracer;
     282: aload         14
     284: invokevirtual #35                 // Method brave/Tracer.nextSpan:(Lbrave/propagation/TraceContextOrSamplingFlags;)Lbrave/Span;
     287: astore        15
     289: aload         15
     291: invokevirtual #36                 // Method brave/Span.isNoop:()Z
     294: ifne          343
     297: aload_0
     298: aload         9
     300: aload         15
     302: invokevirtual #37                 // Method setConsumerSpan:(Ljava/lang/String;Lbrave/Span;)V
     305: lload         4
     307: lconst_0
     308: lcmp
     309: ifne          331
     312: aload_0
     313: getfield      #5                  // Field tracing:Lbrave/Tracing;
     316: aload         15
     318: invokevirtual #38                 // Method brave/Span.context:()Lbrave/propagation/TraceContext;
     321: invokevirtual #39                 // Method brave/Tracing.clock:(Lbrave/propagation/TraceContext;)Lbrave/Clock;
     324: invokeinterface #40,  1           // InterfaceMethod brave/Clock.currentTimeMicroseconds:()J
     329: lstore        4
     331: aload         15
     333: lload         4
     335: invokevirtual #41                 // Method brave/Span.start:(J)Lbrave/Span;
     338: lload         4
     340: invokevirtual #44                 // Method brave/Span.finish:(J)V
     343: aload_0
     344: getfield      #7                  // Field injector:Lbrave/propagation/TraceContext$Injector;
     347: aload         15
     349: invokevirtual #38                 // Method brave/Span.context:()Lbrave/propagation/TraceContext;
     352: aload         13
     354: invokevirtual #27                 // Method org/apache/kafka/clients/consumer/ConsumerRecord.headers:()Lorg/apache/kafka/common/header/Headers;
     357: invokeinterface #43,  3           // InterfaceMethod brave/propagation/TraceContext$Injector.inject:(Lbrave/propagation/TraceContext;Ljava/lang/Object;)V
     362: iinc          11, 1
     365: goto          102
     368: goto          53
     371: aload         6
     373: invokeinterface #45,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     378: invokeinterface #46,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     383: astore        7
     385: aload         7
     387: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     392: ifeq          417
     395: aload         7
     397: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     402: checkcast     #33                 // class brave/Span
     405: astore        8
     407: aload         8
     409: lload         4
     411: invokevirtual #44                 // Method brave/Span.finish:(J)V
     414: goto          385
     417: aload_3
     418: areturn

  public java.util.Set<org.apache.kafka.common.TopicPartition> assignment();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: invokeinterface #47,  1           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.assignment:()Ljava/util/Set;
       9: areturn

  public java.util.Set<java.lang.String> subscription();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: invokeinterface #48,  1           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.subscription:()Ljava/util/Set;
       9: areturn

  public void subscribe(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: invokeinterface #49,  2           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.subscribe:(Ljava/util/Collection;)V
      10: return

  public void subscribe(java.util.Collection<java.lang.String>, org.apache.kafka.clients.consumer.ConsumerRebalanceListener);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: aload_2
       6: invokeinterface #50,  3           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.subscribe:(Ljava/util/Collection;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
      11: return

  public void assign(java.util.Collection<org.apache.kafka.common.TopicPartition>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: invokeinterface #51,  2           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.assign:(Ljava/util/Collection;)V
      10: return

  public void subscribe(java.util.regex.Pattern, org.apache.kafka.clients.consumer.ConsumerRebalanceListener);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: aload_2
       6: invokeinterface #52,  3           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.subscribe:(Ljava/util/regex/Pattern;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
      11: return

  public void subscribe(java.util.regex.Pattern);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: getstatic     #53                 // Field NO_OP_CONSUMER_REBALANCE_LISTENER:Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;
       8: invokeinterface #52,  3           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.subscribe:(Ljava/util/regex/Pattern;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
      13: return

  public void unsubscribe();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: invokeinterface #54,  1           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.unsubscribe:()V
       9: return

  public void commitSync();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: invokeinterface #55,  1           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.commitSync:()V
       9: return

  public void commitSync(java.time.Duration);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: invokeinterface #56,  2           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.commitSync:(Ljava/time/Duration;)V
      10: return

  public void commitSync(java.util.Map<org.apache.kafka.common.TopicPartition, org.apache.kafka.clients.consumer.OffsetAndMetadata>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: invokeinterface #57,  2           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.commitSync:(Ljava/util/Map;)V
      10: return

  public void commitSync(java.util.Map<org.apache.kafka.common.TopicPartition, org.apache.kafka.clients.consumer.OffsetAndMetadata>, java.time.Duration);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: aload_2
       6: invokeinterface #58,  3           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.commitSync:(Ljava/util/Map;Ljava/time/Duration;)V
      11: return

  public void commitAsync();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: invokeinterface #59,  1           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.commitAsync:()V
       9: return

  public void commitAsync(org.apache.kafka.clients.consumer.OffsetCommitCallback);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: invokeinterface #60,  2           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.commitAsync:(Lorg/apache/kafka/clients/consumer/OffsetCommitCallback;)V
      10: return

  public void commitAsync(java.util.Map<org.apache.kafka.common.TopicPartition, org.apache.kafka.clients.consumer.OffsetAndMetadata>, org.apache.kafka.clients.consumer.OffsetCommitCallback);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: aload_2
       6: invokeinterface #61,  3           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.commitAsync:(Ljava/util/Map;Lorg/apache/kafka/clients/consumer/OffsetCommitCallback;)V
      11: return

  public void seek(org.apache.kafka.common.TopicPartition, long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: lload_2
       6: invokeinterface #62,  4           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.seek:(Lorg/apache/kafka/common/TopicPartition;J)V
      11: return

  public void seekToBeginning(java.util.Collection<org.apache.kafka.common.TopicPartition>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: invokeinterface #63,  2           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.seekToBeginning:(Ljava/util/Collection;)V
      10: return

  public void seekToEnd(java.util.Collection<org.apache.kafka.common.TopicPartition>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: invokeinterface #64,  2           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.seekToEnd:(Ljava/util/Collection;)V
      10: return

  public long position(org.apache.kafka.common.TopicPartition);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.position:(Lorg/apache/kafka/common/TopicPartition;)J
      10: lreturn

  public long position(org.apache.kafka.common.TopicPartition, java.time.Duration);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: aload_2
       6: invokeinterface #66,  3           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.position:(Lorg/apache/kafka/common/TopicPartition;Ljava/time/Duration;)J
      11: lreturn

  public org.apache.kafka.clients.consumer.OffsetAndMetadata committed(org.apache.kafka.common.TopicPartition);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: invokeinterface #67,  2           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.committed:(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;
      10: areturn

  public org.apache.kafka.clients.consumer.OffsetAndMetadata committed(org.apache.kafka.common.TopicPartition, java.time.Duration);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: aload_2
       6: invokeinterface #68,  3           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.committed:(Lorg/apache/kafka/common/TopicPartition;Ljava/time/Duration;)Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;
      11: areturn

  public java.util.Map<org.apache.kafka.common.MetricName, ? extends org.apache.kafka.common.Metric> metrics();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: invokeinterface #69,  1           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.metrics:()Ljava/util/Map;
       9: areturn

  public java.util.List<org.apache.kafka.common.PartitionInfo> partitionsFor(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: invokeinterface #70,  2           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.partitionsFor:(Ljava/lang/String;)Ljava/util/List;
      10: areturn

  public java.util.List<org.apache.kafka.common.PartitionInfo> partitionsFor(java.lang.String, java.time.Duration);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: aload_2
       6: invokeinterface #71,  3           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.partitionsFor:(Ljava/lang/String;Ljava/time/Duration;)Ljava/util/List;
      11: areturn

  public java.util.Map<java.lang.String, java.util.List<org.apache.kafka.common.PartitionInfo>> listTopics();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: invokeinterface #72,  1           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.listTopics:()Ljava/util/Map;
       9: areturn

  public java.util.Map<java.lang.String, java.util.List<org.apache.kafka.common.PartitionInfo>> listTopics(java.time.Duration);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: invokeinterface #73,  2           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.listTopics:(Ljava/time/Duration;)Ljava/util/Map;
      10: areturn

  public java.util.Set<org.apache.kafka.common.TopicPartition> paused();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: invokeinterface #74,  1           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.paused:()Ljava/util/Set;
       9: areturn

  public void pause(java.util.Collection<org.apache.kafka.common.TopicPartition>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: invokeinterface #75,  2           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.pause:(Ljava/util/Collection;)V
      10: return

  public void resume(java.util.Collection<org.apache.kafka.common.TopicPartition>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: invokeinterface #76,  2           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.resume:(Ljava/util/Collection;)V
      10: return

  public java.util.Map<org.apache.kafka.common.TopicPartition, org.apache.kafka.clients.consumer.OffsetAndTimestamp> offsetsForTimes(java.util.Map<org.apache.kafka.common.TopicPartition, java.lang.Long>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: invokeinterface #77,  2           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.offsetsForTimes:(Ljava/util/Map;)Ljava/util/Map;
      10: areturn

  public java.util.Map<org.apache.kafka.common.TopicPartition, org.apache.kafka.clients.consumer.OffsetAndTimestamp> offsetsForTimes(java.util.Map<org.apache.kafka.common.TopicPartition, java.lang.Long>, java.time.Duration);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: aload_2
       6: invokeinterface #78,  3           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.offsetsForTimes:(Ljava/util/Map;Ljava/time/Duration;)Ljava/util/Map;
      11: areturn

  public java.util.Map<org.apache.kafka.common.TopicPartition, java.lang.Long> beginningOffsets(java.util.Collection<org.apache.kafka.common.TopicPartition>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: invokeinterface #79,  2           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.beginningOffsets:(Ljava/util/Collection;)Ljava/util/Map;
      10: areturn

  public java.util.Map<org.apache.kafka.common.TopicPartition, java.lang.Long> beginningOffsets(java.util.Collection<org.apache.kafka.common.TopicPartition>, java.time.Duration);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: aload_2
       6: invokeinterface #80,  3           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.beginningOffsets:(Ljava/util/Collection;Ljava/time/Duration;)Ljava/util/Map;
      11: areturn

  public java.util.Map<org.apache.kafka.common.TopicPartition, java.lang.Long> endOffsets(java.util.Collection<org.apache.kafka.common.TopicPartition>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: invokeinterface #81,  2           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.endOffsets:(Ljava/util/Collection;)Ljava/util/Map;
      10: areturn

  public java.util.Map<org.apache.kafka.common.TopicPartition, java.lang.Long> endOffsets(java.util.Collection<org.apache.kafka.common.TopicPartition>, java.time.Duration);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: aload_2
       6: invokeinterface #82,  3           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.endOffsets:(Ljava/util/Collection;Ljava/time/Duration;)Ljava/util/Map;
      11: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: invokeinterface #83,  1           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.close:()V
       9: return

  public void close(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: lload_1
       5: aload_3
       6: invokeinterface #84,  4           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.close:(JLjava/util/concurrent/TimeUnit;)V
      11: return

  public void close(java.time.Duration);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: aload_1
       5: invokeinterface #85,  2           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.close:(Ljava/time/Duration;)V
      10: return

  public void wakeup();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/apache/kafka/clients/consumer/Consumer;
       4: invokeinterface #86,  1           // InterfaceMethod org/apache/kafka/clients/consumer/Consumer.wakeup:()V
       9: return

  void setConsumerSpan(java.lang.String, brave.Span);
    Code:
       0: aload_2
       1: ldc           #87                 // String poll
       3: invokevirtual #88                 // Method brave/Span.name:(Ljava/lang/String;)Lbrave/Span;
       6: getstatic     #89                 // Field brave/Span$Kind.CONSUMER:Lbrave/Span$Kind;
       9: invokevirtual #90                 // Method brave/Span.kind:(Lbrave/Span$Kind;)Lbrave/Span;
      12: ldc           #92                 // String kafka.topic
      14: aload_1
      15: invokevirtual #93                 // Method brave/Span.tag:(Ljava/lang/String;Ljava/lang/String;)Lbrave/Span;
      18: pop
      19: aload_0
      20: getfield      #9                  // Field remoteServiceName:Ljava/lang/String;
      23: ifnull        35
      26: aload_2
      27: aload_0
      28: getfield      #9                  // Field remoteServiceName:Ljava/lang/String;
      31: invokevirtual #94                 // Method brave/Span.remoteServiceName:(Ljava/lang/String;)Lbrave/Span;
      34: pop
      35: return

  static {};
    Code:
       0: new           #95                 // class brave/kafka/clients/TracingConsumer$1
       3: dup
       4: invokespecial #96                 // Method brave/kafka/clients/TracingConsumer$1."<init>":()V
       7: putstatic     #53                 // Field NO_OP_CONSUMER_REBALANCE_LISTENER:Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;
      10: return
}
