Compiled from "KafkaPropagation.java"
final class brave.kafka.clients.KafkaPropagation {
  static final java.nio.charset.Charset UTF_8;

  static final brave.propagation.TraceContext TEST_CONTEXT;

  static final org.apache.kafka.clients.producer.ProducerRecord<java.lang.String, java.lang.String> TEST_RECORD;

  static final org.apache.kafka.common.header.Headers B3_SINGLE_TEST_HEADERS;

  static final brave.propagation.TraceContext$Injector<org.apache.kafka.common.header.Headers> B3_SINGLE_INJECTOR;

  static final brave.propagation.Propagation$Setter<org.apache.kafka.common.header.Headers, java.lang.String> SETTER;

  static final brave.propagation.Propagation$Getter<org.apache.kafka.common.header.Headers, java.lang.String> GETTER;

  brave.kafka.clients.KafkaPropagation();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  private static java.lang.String lambda$static$1(org.apache.kafka.common.header.Headers, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #2,  2            // InterfaceMethod org/apache/kafka/common/header/Headers.lastHeader:(Ljava/lang/String;)Lorg/apache/kafka/common/header/Header;
       7: astore_2
       8: aload_2
       9: ifnull        21
      12: aload_2
      13: invokeinterface #3,  1            // InterfaceMethod org/apache/kafka/common/header/Header.value:()[B
      18: ifnonnull     23
      21: aconst_null
      22: areturn
      23: new           #4                  // class java/lang/String
      26: dup
      27: aload_2
      28: invokeinterface #3,  1            // InterfaceMethod org/apache/kafka/common/header/Header.value:()[B
      33: getstatic     #5                  // Field UTF_8:Ljava/nio/charset/Charset;
      36: invokespecial #6                  // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      39: areturn

  private static void lambda$static$0(org.apache.kafka.common.header.Headers, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #7,  2            // InterfaceMethod org/apache/kafka/common/header/Headers.remove:(Ljava/lang/String;)Lorg/apache/kafka/common/header/Headers;
       7: pop
       8: aload_0
       9: aload_1
      10: aload_2
      11: getstatic     #5                  // Field UTF_8:Ljava/nio/charset/Charset;
      14: invokevirtual #8                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      17: invokeinterface #9,  3            // InterfaceMethod org/apache/kafka/common/header/Headers.add:(Ljava/lang/String;[B)Lorg/apache/kafka/common/header/Headers;
      22: pop
      23: return

  static {};
    Code:
       0: ldc           #10                 // String UTF-8
       2: invokestatic  #11                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       5: putstatic     #5                  // Field UTF_8:Ljava/nio/charset/Charset;
       8: invokestatic  #12                 // Method brave/propagation/TraceContext.newBuilder:()Lbrave/propagation/TraceContext$Builder;
      11: lconst_1
      12: invokevirtual #13                 // Method brave/propagation/TraceContext$Builder.traceId:(J)Lbrave/propagation/TraceContext$Builder;
      15: lconst_1
      16: invokevirtual #14                 // Method brave/propagation/TraceContext$Builder.spanId:(J)Lbrave/propagation/TraceContext$Builder;
      19: invokevirtual #15                 // Method brave/propagation/TraceContext$Builder.build:()Lbrave/propagation/TraceContext;
      22: putstatic     #16                 // Field TEST_CONTEXT:Lbrave/propagation/TraceContext;
      25: new           #17                 // class org/apache/kafka/clients/producer/ProducerRecord
      28: dup
      29: ldc           #18                 // String dummy
      31: ldc           #19                 // String
      33: invokespecial #20                 // Method org/apache/kafka/clients/producer/ProducerRecord."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      36: putstatic     #21                 // Field TEST_RECORD:Lorg/apache/kafka/clients/producer/ProducerRecord;
      39: getstatic     #21                 // Field TEST_RECORD:Lorg/apache/kafka/clients/producer/ProducerRecord;
      42: invokevirtual #22                 // Method org/apache/kafka/clients/producer/ProducerRecord.headers:()Lorg/apache/kafka/common/header/Headers;
      45: ldc           #23                 // String b3
      47: getstatic     #16                 // Field TEST_CONTEXT:Lbrave/propagation/TraceContext;
      50: invokestatic  #24                 // Method brave/propagation/B3SingleFormat.writeB3SingleFormat:(Lbrave/propagation/TraceContext;)Ljava/lang/String;
      53: getstatic     #5                  // Field UTF_8:Ljava/nio/charset/Charset;
      56: invokevirtual #8                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      59: invokeinterface #9,  3            // InterfaceMethod org/apache/kafka/common/header/Headers.add:(Ljava/lang/String;[B)Lorg/apache/kafka/common/header/Headers;
      64: putstatic     #25                 // Field B3_SINGLE_TEST_HEADERS:Lorg/apache/kafka/common/header/Headers;
      67: new           #26                 // class brave/kafka/clients/KafkaPropagation$1
      70: dup
      71: invokespecial #27                 // Method brave/kafka/clients/KafkaPropagation$1."<init>":()V
      74: putstatic     #28                 // Field B3_SINGLE_INJECTOR:Lbrave/propagation/TraceContext$Injector;
      77: invokedynamic #29,  0             // InvokeDynamic #0:put:()Lbrave/propagation/Propagation$Setter;
      82: putstatic     #30                 // Field SETTER:Lbrave/propagation/Propagation$Setter;
      85: invokedynamic #31,  0             // InvokeDynamic #1:get:()Lbrave/propagation/Propagation$Getter;
      90: putstatic     #32                 // Field GETTER:Lbrave/propagation/Propagation$Getter;
      93: return
}
