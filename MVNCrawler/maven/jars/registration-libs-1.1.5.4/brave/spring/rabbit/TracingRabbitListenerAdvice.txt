Compiled from "TracingRabbitListenerAdvice.java"
final class brave.spring.rabbit.TracingRabbitListenerAdvice implements org.aopalliance.intercept.MethodInterceptor {
  final brave.spring.rabbit.SpringRabbitTracing springRabbitTracing;

  final brave.Tracing tracing;

  final brave.Tracer tracer;

  final java.lang.String remoteServiceName;

  brave.spring.rabbit.TracingRabbitListenerAdvice(brave.spring.rabbit.SpringRabbitTracing);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #33                 // Field springRabbitTracing:Lbrave/spring/rabbit/SpringRabbitTracing;
       9: aload_0
      10: aload_1
      11: getfield      #37                 // Field brave/spring/rabbit/SpringRabbitTracing.tracing:Lbrave/Tracing;
      14: putfield      #38                 // Field tracing:Lbrave/Tracing;
      17: aload_0
      18: aload_0
      19: getfield      #38                 // Field tracing:Lbrave/Tracing;
      22: invokevirtual #43                 // Method brave/Tracing.tracer:()Lbrave/Tracer;
      25: putfield      #45                 // Field tracer:Lbrave/Tracer;
      28: aload_0
      29: aload_1
      30: getfield      #47                 // Field brave/spring/rabbit/SpringRabbitTracing.remoteServiceName:Ljava/lang/String;
      33: putfield      #48                 // Field remoteServiceName:Ljava/lang/String;
      36: return

  public java.lang.Object invoke(org.aopalliance.intercept.MethodInvocation) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: invokeinterface #60,  1           // InterfaceMethod org/aopalliance/intercept/MethodInvocation.getArguments:()[Ljava/lang/Object;
       6: iconst_1
       7: aaload
       8: checkcast     #62                 // class org/springframework/amqp/core/Message
      11: astore_2
      12: aload_0
      13: getfield      #33                 // Field springRabbitTracing:Lbrave/spring/rabbit/SpringRabbitTracing;
      16: aload_2
      17: invokevirtual #66                 // Method brave/spring/rabbit/SpringRabbitTracing.extractAndClearHeaders:(Lorg/springframework/amqp/core/Message;)Lbrave/propagation/TraceContextOrSamplingFlags;
      20: astore_3
      21: aload_0
      22: getfield      #45                 // Field tracer:Lbrave/Tracer;
      25: aload_3
      26: invokevirtual #70                 // Method brave/Tracer.nextSpan:(Lbrave/propagation/TraceContextOrSamplingFlags;)Lbrave/Span;
      29: astore        4
      31: aload_0
      32: getfield      #45                 // Field tracer:Lbrave/Tracer;
      35: aload         4
      37: invokevirtual #74                 // Method brave/Span.context:()Lbrave/propagation/TraceContext;
      40: invokevirtual #78                 // Method brave/Tracer.newChild:(Lbrave/propagation/TraceContext;)Lbrave/Span;
      43: astore        5
      45: aload         4
      47: invokevirtual #82                 // Method brave/Span.isNoop:()Z
      50: ifne          116
      53: aload_0
      54: aload         4
      56: aload_2
      57: invokevirtual #86                 // Method org/springframework/amqp/core/Message.getMessageProperties:()Lorg/springframework/amqp/core/MessageProperties;
      60: invokevirtual #90                 // Method setConsumerSpan:(Lbrave/Span;Lorg/springframework/amqp/core/MessageProperties;)V
      63: aload_0
      64: getfield      #38                 // Field tracing:Lbrave/Tracing;
      67: aload         4
      69: invokevirtual #74                 // Method brave/Span.context:()Lbrave/propagation/TraceContext;
      72: invokevirtual #94                 // Method brave/Tracing.clock:(Lbrave/propagation/TraceContext;)Lbrave/Clock;
      75: invokeinterface #100,  1          // InterfaceMethod brave/Clock.currentTimeMicroseconds:()J
      80: lstore        6
      82: aload         4
      84: lload         6
      86: invokevirtual #104                // Method brave/Span.start:(J)Lbrave/Span;
      89: pop
      90: lload         6
      92: lconst_1
      93: ladd
      94: lstore        8
      96: aload         4
      98: lload         8
     100: invokevirtual #108                // Method brave/Span.finish:(J)V
     103: aload         5
     105: ldc           #110                // String on-message
     107: invokevirtual #114                // Method brave/Span.name:(Ljava/lang/String;)Lbrave/Span;
     110: lload         8
     112: invokevirtual #104                // Method brave/Span.start:(J)Lbrave/Span;
     115: pop
     116: aload_0
     117: getfield      #45                 // Field tracer:Lbrave/Tracer;
     120: aload         5
     122: invokevirtual #120                // Method brave/Tracer.withSpanInScope:(Lbrave/Span;)Lbrave/Tracer$SpanInScope;
     125: astore        6
     127: aload_1
     128: invokeinterface #124,  1          // InterfaceMethod org/aopalliance/intercept/MethodInvocation.proceed:()Ljava/lang/Object;
     133: astore        7
     135: aload         6
     137: ifnull        145
     140: aload         6
     142: invokevirtual #127                // Method brave/Tracer$SpanInScope.close:()V
     145: aload         5
     147: invokevirtual #129                // Method brave/Span.finish:()V
     150: aload         7
     152: areturn
     153: astore        7
     155: aload         6
     157: ifnull        176
     160: aload         6
     162: invokevirtual #127                // Method brave/Tracer$SpanInScope.close:()V
     165: goto          176
     168: astore        8
     170: aload         7
     172: aload         8
     174: pop
     175: pop
     176: aload         7
     178: athrow
     179: astore        6
     181: aload         5
     183: aload         6
     185: invokevirtual #133                // Method brave/Span.error:(Ljava/lang/Throwable;)Lbrave/Span;
     188: pop
     189: aload         6
     191: athrow
     192: astore        10
     194: aload         5
     196: invokevirtual #129                // Method brave/Span.finish:()V
     199: aload         10
     201: athrow
    Exception table:
       from    to  target type
         127   135   153   Class java/lang/Throwable
         160   165   168   Class java/lang/Throwable
         116   145   179   Class java/lang/Throwable
         153   179   179   Class java/lang/Throwable
         116   145   192   any
         153   194   192   any

  void setConsumerSpan(brave.Span, org.springframework.amqp.core.MessageProperties);
    Code:
       0: aload_1
       1: ldc           #151                // String next-message
       3: invokevirtual #114                // Method brave/Span.name:(Ljava/lang/String;)Lbrave/Span;
       6: getstatic     #155                // Field brave/Span$Kind.CONSUMER:Lbrave/Span$Kind;
       9: invokevirtual #159                // Method brave/Span.kind:(Lbrave/Span$Kind;)Lbrave/Span;
      12: pop
      13: aload_1
      14: ldc           #161                // String rabbit.exchange
      16: aload_2
      17: invokevirtual #167                // Method org/springframework/amqp/core/MessageProperties.getReceivedExchange:()Ljava/lang/String;
      20: invokestatic  #171                // Method maybeTag:(Lbrave/Span;Ljava/lang/String;Ljava/lang/String;)V
      23: aload_1
      24: ldc           #173                // String rabbit.routing_key
      26: aload_2
      27: invokevirtual #176                // Method org/springframework/amqp/core/MessageProperties.getReceivedRoutingKey:()Ljava/lang/String;
      30: invokestatic  #171                // Method maybeTag:(Lbrave/Span;Ljava/lang/String;Ljava/lang/String;)V
      33: aload_1
      34: ldc           #178                // String rabbit.queue
      36: aload_2
      37: invokevirtual #181                // Method org/springframework/amqp/core/MessageProperties.getConsumerQueue:()Ljava/lang/String;
      40: invokestatic  #171                // Method maybeTag:(Lbrave/Span;Ljava/lang/String;Ljava/lang/String;)V
      43: aload_0
      44: getfield      #48                 // Field remoteServiceName:Ljava/lang/String;
      47: ifnull        59
      50: aload_1
      51: aload_0
      52: getfield      #48                 // Field remoteServiceName:Ljava/lang/String;
      55: invokevirtual #183                // Method brave/Span.remoteServiceName:(Ljava/lang/String;)Lbrave/Span;
      58: pop
      59: return

  static void maybeTag(brave.Span, java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: ifnull        11
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #190                // Method brave/Span.tag:(Ljava/lang/String;Ljava/lang/String;)Lbrave/Span;
      10: pop
      11: return
}
