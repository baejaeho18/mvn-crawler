Compiled from "Animation.java"
public abstract class javafx.animation.Animation {
  public static final int INDEFINITE;

  private static final double EPSILON;

  private long startTime;

  private long pauseTime;

  private boolean paused;

  private final com.sun.scenario.animation.AbstractMasterTimer timer;

  private java.security.AccessControlContext accessCtrlCtx;

  final com.sun.scenario.animation.shared.PulseReceiver pulseReceiver;

  javafx.animation.Animation parent;

  com.sun.scenario.animation.shared.ClipEnvelope clipEnvelope;

  private boolean lastPlayedFinished;

  private boolean lastPlayedForward;

  private javafx.beans.property.DoubleProperty rate;

  private static final double DEFAULT_RATE;

  private double oldRate;

  private javafx.beans.property.ReadOnlyDoubleProperty currentRate;

  private static final double DEFAULT_CURRENT_RATE;

  private javafx.beans.property.ReadOnlyObjectProperty<javafx.util.Duration> cycleDuration;

  private static final javafx.util.Duration DEFAULT_CYCLE_DURATION;

  private javafx.beans.property.ReadOnlyObjectProperty<javafx.util.Duration> totalDuration;

  private static final javafx.util.Duration DEFAULT_TOTAL_DURATION;

  private javafx.animation.Animation$CurrentTimeProperty currentTime;

  private long currentTicks;

  private javafx.beans.property.ObjectProperty<javafx.util.Duration> delay;

  private static final javafx.util.Duration DEFAULT_DELAY;

  private javafx.beans.property.IntegerProperty cycleCount;

  private static final int DEFAULT_CYCLE_COUNT;

  private javafx.beans.property.BooleanProperty autoReverse;

  private static final boolean DEFAULT_AUTO_REVERSE;

  private javafx.beans.property.ReadOnlyObjectProperty<javafx.animation.Animation$Status> status;

  private static final javafx.animation.Animation$Status DEFAULT_STATUS;

  private final double targetFramerate;

  private final int resolution;

  private long lastPulse;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<javafx.event.ActionEvent>> onFinished;

  private static final javafx.event.EventHandler<javafx.event.ActionEvent> DEFAULT_ON_FINISHED;

  private final javafx.collections.ObservableMap<java.lang.String, javafx.util.Duration> cuePoints;

  private long now();
    Code:
       0: aload_0
       1: getfield      #8                  // Field timer:Lcom/sun/scenario/animation/AbstractMasterTimer;
       4: invokevirtual #9                  // Method com/sun/scenario/animation/AbstractMasterTimer.nanos:()J
       7: invokestatic  #10                 // Method com/sun/javafx/animation/TickCalculation.fromNano:(J)J
      10: lreturn

  private void addPulseReceiver();
    Code:
       0: aload_0
       1: invokestatic  #11                 // Method java/security/AccessController.getContext:()Ljava/security/AccessControlContext;
       4: putfield      #6                  // Field accessCtrlCtx:Ljava/security/AccessControlContext;
       7: aload_0
       8: getfield      #8                  // Field timer:Lcom/sun/scenario/animation/AbstractMasterTimer;
      11: aload_0
      12: getfield      #12                 // Field pulseReceiver:Lcom/sun/scenario/animation/shared/PulseReceiver;
      15: invokevirtual #13                 // Method com/sun/scenario/animation/AbstractMasterTimer.addPulseReceiver:(Lcom/sun/scenario/animation/shared/PulseReceiver;)V
      18: return

  void startReceiver(long);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #14                 // Field paused:Z
       5: aload_0
       6: aload_0
       7: invokespecial #15                 // Method now:()J
      10: lload_1
      11: ladd
      12: putfield      #7                  // Field startTime:J
      15: aload_0
      16: invokespecial #16                 // Method addPulseReceiver:()V
      19: return

  void pauseReceiver();
    Code:
       0: aload_0
       1: getfield      #14                 // Field paused:Z
       4: ifne          31
       7: aload_0
       8: aload_0
       9: invokespecial #15                 // Method now:()J
      12: putfield      #17                 // Field pauseTime:J
      15: aload_0
      16: iconst_1
      17: putfield      #14                 // Field paused:Z
      20: aload_0
      21: getfield      #8                  // Field timer:Lcom/sun/scenario/animation/AbstractMasterTimer;
      24: aload_0
      25: getfield      #12                 // Field pulseReceiver:Lcom/sun/scenario/animation/shared/PulseReceiver;
      28: invokevirtual #18                 // Method com/sun/scenario/animation/AbstractMasterTimer.removePulseReceiver:(Lcom/sun/scenario/animation/shared/PulseReceiver;)V
      31: return

  void resumeReceiver();
    Code:
       0: aload_0
       1: getfield      #14                 // Field paused:Z
       4: ifeq          36
       7: aload_0
       8: invokespecial #15                 // Method now:()J
      11: aload_0
      12: getfield      #17                 // Field pauseTime:J
      15: lsub
      16: lstore_1
      17: aload_0
      18: dup
      19: getfield      #7                  // Field startTime:J
      22: lload_1
      23: ladd
      24: putfield      #7                  // Field startTime:J
      27: aload_0
      28: iconst_0
      29: putfield      #14                 // Field paused:Z
      32: aload_0
      33: invokespecial #16                 // Method addPulseReceiver:()V
      36: return

  public final void setRate(double);
    Code:
       0: aload_0
       1: getfield      #19                 // Field rate:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     20
       7: dload_1
       8: dconst_1
       9: dsub
      10: invokestatic  #21                 // Method java/lang/Math.abs:(D)D
      13: ldc2_w        #22                 // double 1.0E-12d
      16: dcmpl
      17: ifle          28
      20: aload_0
      21: invokevirtual #24                 // Method rateProperty:()Ljavafx/beans/property/DoubleProperty;
      24: dload_1
      25: invokevirtual #25                 // Method javafx/beans/property/DoubleProperty.set:(D)V
      28: return

  public final double getRate();
    Code:
       0: aload_0
       1: getfield      #19                 // Field rate:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     11
       7: dconst_1
       8: goto          18
      11: aload_0
      12: getfield      #19                 // Field rate:Ljavafx/beans/property/DoubleProperty;
      15: invokevirtual #26                 // Method javafx/beans/property/DoubleProperty.get:()D
      18: dreturn

  public final javafx.beans.property.DoubleProperty rateProperty();
    Code:
       0: aload_0
       1: getfield      #19                 // Field rate:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #27                 // class javafx/animation/Animation$2
      11: dup
      12: aload_0
      13: dconst_1
      14: invokespecial #28                 // Method javafx/animation/Animation$2."<init>":(Ljavafx/animation/Animation;D)V
      17: putfield      #19                 // Field rate:Ljavafx/beans/property/DoubleProperty;
      20: aload_0
      21: getfield      #19                 // Field rate:Ljavafx/beans/property/DoubleProperty;
      24: areturn

  private boolean isRunningEmbedded();
    Code:
       0: aload_0
       1: getfield      #29                 // Field parent:Ljavafx/animation/Animation;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #29                 // Field parent:Ljavafx/animation/Animation;
      13: invokevirtual #30                 // Method getStatus:()Ljavafx/animation/Animation$Status;
      16: getstatic     #31                 // Field javafx/animation/Animation$Status.STOPPED:Ljavafx/animation/Animation$Status;
      19: if_acmpne     32
      22: aload_0
      23: getfield      #29                 // Field parent:Ljavafx/animation/Animation;
      26: invokespecial #5                  // Method isRunningEmbedded:()Z
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  private void doSetCurrentRate(double);
    Code:
       0: aload_0
       1: getfield      #32                 // Field currentRate:Ljavafx/beans/property/ReadOnlyDoubleProperty;
       4: ifnonnull     20
       7: dload_1
       8: dconst_0
       9: dsub
      10: invokestatic  #21                 // Method java/lang/Math.abs:(D)D
      13: ldc2_w        #22                 // double 1.0E-12d
      16: dcmpl
      17: ifle          31
      20: aload_0
      21: invokevirtual #33                 // Method currentRateProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
      24: checkcast     #34                 // class javafx/animation/Animation$CurrentRateProperty
      27: dload_1
      28: invokestatic  #35                 // Method javafx/animation/Animation$CurrentRateProperty.access$600:(Ljavafx/animation/Animation$CurrentRateProperty;D)V
      31: return

  public final double getCurrentRate();
    Code:
       0: aload_0
       1: getfield      #32                 // Field currentRate:Ljavafx/beans/property/ReadOnlyDoubleProperty;
       4: ifnonnull     11
       7: dconst_0
       8: goto          18
      11: aload_0
      12: getfield      #32                 // Field currentRate:Ljavafx/beans/property/ReadOnlyDoubleProperty;
      15: invokevirtual #36                 // Method javafx/beans/property/ReadOnlyDoubleProperty.get:()D
      18: dreturn

  public final javafx.beans.property.ReadOnlyDoubleProperty currentRateProperty();
    Code:
       0: aload_0
       1: getfield      #32                 // Field currentRate:Ljavafx/beans/property/ReadOnlyDoubleProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #34                 // class javafx/animation/Animation$CurrentRateProperty
      11: dup
      12: aload_0
      13: aconst_null
      14: invokespecial #37                 // Method javafx/animation/Animation$CurrentRateProperty."<init>":(Ljavafx/animation/Animation;Ljavafx/animation/Animation$1;)V
      17: putfield      #32                 // Field currentRate:Ljavafx/beans/property/ReadOnlyDoubleProperty;
      20: aload_0
      21: getfield      #32                 // Field currentRate:Ljavafx/beans/property/ReadOnlyDoubleProperty;
      24: areturn

  protected final void setCycleDuration(javafx.util.Duration);
    Code:
       0: aload_0
       1: getfield      #38                 // Field cycleDuration:Ljavafx/beans/property/ReadOnlyObjectProperty;
       4: ifnonnull     17
       7: getstatic     #39                 // Field DEFAULT_CYCLE_DURATION:Ljavafx/util/Duration;
      10: aload_1
      11: invokevirtual #40                 // Method javafx/util/Duration.equals:(Ljava/lang/Object;)Z
      14: ifne          52
      17: aload_1
      18: getstatic     #41                 // Field javafx/util/Duration.ZERO:Ljavafx/util/Duration;
      21: invokevirtual #42                 // Method javafx/util/Duration.lessThan:(Ljavafx/util/Duration;)Z
      24: ifeq          37
      27: new           #43                 // class java/lang/IllegalArgumentException
      30: dup
      31: ldc           #44                 // String Cycle duration cannot be negative
      33: invokespecial #45                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: invokevirtual #46                 // Method cycleDurationProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
      41: checkcast     #47                 // class javafx/animation/Animation$AnimationReadOnlyProperty
      44: aload_1
      45: invokestatic  #48                 // Method javafx/animation/Animation$AnimationReadOnlyProperty.access$800:(Ljavafx/animation/Animation$AnimationReadOnlyProperty;Ljava/lang/Object;)V
      48: aload_0
      49: invokespecial #1                  // Method updateTotalDuration:()V
      52: return

  public final javafx.util.Duration getCycleDuration();
    Code:
       0: aload_0
       1: getfield      #38                 // Field cycleDuration:Ljavafx/beans/property/ReadOnlyObjectProperty;
       4: ifnonnull     13
       7: getstatic     #39                 // Field DEFAULT_CYCLE_DURATION:Ljavafx/util/Duration;
      10: goto          23
      13: aload_0
      14: getfield      #38                 // Field cycleDuration:Ljavafx/beans/property/ReadOnlyObjectProperty;
      17: invokevirtual #49                 // Method javafx/beans/property/ReadOnlyObjectProperty.get:()Ljava/lang/Object;
      20: checkcast     #50                 // class javafx/util/Duration
      23: areturn

  public final javafx.beans.property.ReadOnlyObjectProperty<javafx.util.Duration> cycleDurationProperty();
    Code:
       0: aload_0
       1: getfield      #38                 // Field cycleDuration:Ljavafx/beans/property/ReadOnlyObjectProperty;
       4: ifnonnull     25
       7: aload_0
       8: new           #47                 // class javafx/animation/Animation$AnimationReadOnlyProperty
      11: dup
      12: aload_0
      13: ldc           #51                 // String cycleDuration
      15: getstatic     #39                 // Field DEFAULT_CYCLE_DURATION:Ljavafx/util/Duration;
      18: aconst_null
      19: invokespecial #52                 // Method javafx/animation/Animation$AnimationReadOnlyProperty."<init>":(Ljavafx/animation/Animation;Ljava/lang/String;Ljava/lang/Object;Ljavafx/animation/Animation$1;)V
      22: putfield      #38                 // Field cycleDuration:Ljavafx/beans/property/ReadOnlyObjectProperty;
      25: aload_0
      26: getfield      #38                 // Field cycleDuration:Ljavafx/beans/property/ReadOnlyObjectProperty;
      29: areturn

  public final javafx.util.Duration getTotalDuration();
    Code:
       0: aload_0
       1: getfield      #53                 // Field totalDuration:Ljavafx/beans/property/ReadOnlyObjectProperty;
       4: ifnonnull     13
       7: getstatic     #54                 // Field DEFAULT_TOTAL_DURATION:Ljavafx/util/Duration;
      10: goto          23
      13: aload_0
      14: getfield      #53                 // Field totalDuration:Ljavafx/beans/property/ReadOnlyObjectProperty;
      17: invokevirtual #49                 // Method javafx/beans/property/ReadOnlyObjectProperty.get:()Ljava/lang/Object;
      20: checkcast     #50                 // class javafx/util/Duration
      23: areturn

  public final javafx.beans.property.ReadOnlyObjectProperty<javafx.util.Duration> totalDurationProperty();
    Code:
       0: aload_0
       1: getfield      #53                 // Field totalDuration:Ljavafx/beans/property/ReadOnlyObjectProperty;
       4: ifnonnull     25
       7: aload_0
       8: new           #47                 // class javafx/animation/Animation$AnimationReadOnlyProperty
      11: dup
      12: aload_0
      13: ldc           #55                 // String totalDuration
      15: getstatic     #54                 // Field DEFAULT_TOTAL_DURATION:Ljavafx/util/Duration;
      18: aconst_null
      19: invokespecial #52                 // Method javafx/animation/Animation$AnimationReadOnlyProperty."<init>":(Ljavafx/animation/Animation;Ljava/lang/String;Ljava/lang/Object;Ljavafx/animation/Animation$1;)V
      22: putfield      #53                 // Field totalDuration:Ljavafx/beans/property/ReadOnlyObjectProperty;
      25: aload_0
      26: getfield      #53                 // Field totalDuration:Ljavafx/beans/property/ReadOnlyObjectProperty;
      29: areturn

  private void updateTotalDuration();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method getCycleCount:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #57                 // Method getCycleDuration:()Ljavafx/util/Duration;
       9: astore_2
      10: getstatic     #41                 // Field javafx/util/Duration.ZERO:Ljavafx/util/Duration;
      13: aload_2
      14: invokevirtual #40                 // Method javafx/util/Duration.equals:(Ljava/lang/Object;)Z
      17: ifeq          26
      20: getstatic     #41                 // Field javafx/util/Duration.ZERO:Ljavafx/util/Duration;
      23: goto          52
      26: iload_1
      27: iconst_m1
      28: if_icmpne     37
      31: getstatic     #58                 // Field javafx/util/Duration.INDEFINITE:Ljavafx/util/Duration;
      34: goto          52
      37: iload_1
      38: iconst_1
      39: if_icmpgt     46
      42: aload_2
      43: goto          52
      46: aload_2
      47: iload_1
      48: i2d
      49: invokevirtual #59                 // Method javafx/util/Duration.multiply:(D)Ljavafx/util/Duration;
      52: astore_3
      53: aload_0
      54: getfield      #53                 // Field totalDuration:Ljavafx/beans/property/ReadOnlyObjectProperty;
      57: ifnonnull     70
      60: getstatic     #54                 // Field DEFAULT_TOTAL_DURATION:Ljavafx/util/Duration;
      63: aload_3
      64: invokevirtual #40                 // Method javafx/util/Duration.equals:(Ljava/lang/Object;)Z
      67: ifne          81
      70: aload_0
      71: invokevirtual #60                 // Method totalDurationProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
      74: checkcast     #47                 // class javafx/animation/Animation$AnimationReadOnlyProperty
      77: aload_3
      78: invokestatic  #48                 // Method javafx/animation/Animation$AnimationReadOnlyProperty.access$800:(Ljavafx/animation/Animation$AnimationReadOnlyProperty;Ljava/lang/Object;)V
      81: aload_0
      82: invokevirtual #30                 // Method getStatus:()Ljavafx/animation/Animation$Status;
      85: getstatic     #31                 // Field javafx/animation/Animation$Status.STOPPED:Ljavafx/animation/Animation$Status;
      88: if_acmpne     117
      91: aload_0
      92: invokespecial #61                 // Method syncClipEnvelope:()V
      95: aload_3
      96: aload_0
      97: invokevirtual #62                 // Method getCurrentTime:()Ljavafx/util/Duration;
     100: invokevirtual #42                 // Method javafx/util/Duration.lessThan:(Ljavafx/util/Duration;)Z
     103: ifeq          117
     106: aload_0
     107: getfield      #63                 // Field clipEnvelope:Lcom/sun/scenario/animation/shared/ClipEnvelope;
     110: aload_3
     111: invokestatic  #64                 // Method com/sun/javafx/animation/TickCalculation.fromDuration:(Ljavafx/util/Duration;)J
     114: invokevirtual #65                 // Method com/sun/scenario/animation/shared/ClipEnvelope.jumpTo:(J)V
     117: return

  public final javafx.util.Duration getCurrentTime();
    Code:
       0: aload_0
       1: getfield      #66                 // Field currentTicks:J
       4: invokestatic  #67                 // Method com/sun/javafx/animation/TickCalculation.toDuration:(J)Ljavafx/util/Duration;
       7: areturn

  public final javafx.beans.property.ReadOnlyObjectProperty<javafx.util.Duration> currentTimeProperty();
    Code:
       0: aload_0
       1: getfield      #68                 // Field currentTime:Ljavafx/animation/Animation$CurrentTimeProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #69                 // class javafx/animation/Animation$CurrentTimeProperty
      11: dup
      12: aload_0
      13: aconst_null
      14: invokespecial #70                 // Method javafx/animation/Animation$CurrentTimeProperty."<init>":(Ljavafx/animation/Animation;Ljavafx/animation/Animation$1;)V
      17: putfield      #68                 // Field currentTime:Ljavafx/animation/Animation$CurrentTimeProperty;
      20: aload_0
      21: getfield      #68                 // Field currentTime:Ljavafx/animation/Animation$CurrentTimeProperty;
      24: areturn

  public final void setDelay(javafx.util.Duration);
    Code:
       0: aload_0
       1: getfield      #71                 // Field delay:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     17
       7: getstatic     #72                 // Field DEFAULT_DELAY:Ljavafx/util/Duration;
      10: aload_1
      11: invokevirtual #40                 // Method javafx/util/Duration.equals:(Ljava/lang/Object;)Z
      14: ifne          25
      17: aload_0
      18: invokevirtual #73                 // Method delayProperty:()Ljavafx/beans/property/ObjectProperty;
      21: aload_1
      22: invokevirtual #74                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
      25: return

  public final javafx.util.Duration getDelay();
    Code:
       0: aload_0
       1: getfield      #71                 // Field delay:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     13
       7: getstatic     #72                 // Field DEFAULT_DELAY:Ljavafx/util/Duration;
      10: goto          23
      13: aload_0
      14: getfield      #71                 // Field delay:Ljavafx/beans/property/ObjectProperty;
      17: invokevirtual #75                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      20: checkcast     #50                 // class javafx/util/Duration
      23: areturn

  public final javafx.beans.property.ObjectProperty<javafx.util.Duration> delayProperty();
    Code:
       0: aload_0
       1: getfield      #71                 // Field delay:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     22
       7: aload_0
       8: new           #76                 // class javafx/animation/Animation$3
      11: dup
      12: aload_0
      13: getstatic     #72                 // Field DEFAULT_DELAY:Ljavafx/util/Duration;
      16: invokespecial #77                 // Method javafx/animation/Animation$3."<init>":(Ljavafx/animation/Animation;Ljavafx/util/Duration;)V
      19: putfield      #71                 // Field delay:Ljavafx/beans/property/ObjectProperty;
      22: aload_0
      23: getfield      #71                 // Field delay:Ljavafx/beans/property/ObjectProperty;
      26: areturn

  public final void setCycleCount(int);
    Code:
       0: aload_0
       1: getfield      #78                 // Field cycleCount:Ljavafx/beans/property/IntegerProperty;
       4: ifnonnull     12
       7: iload_1
       8: iconst_1
       9: if_icmpeq     20
      12: aload_0
      13: invokevirtual #79                 // Method cycleCountProperty:()Ljavafx/beans/property/IntegerProperty;
      16: iload_1
      17: invokevirtual #80                 // Method javafx/beans/property/IntegerProperty.set:(I)V
      20: return

  public final int getCycleCount();
    Code:
       0: aload_0
       1: getfield      #78                 // Field cycleCount:Ljavafx/beans/property/IntegerProperty;
       4: ifnonnull     11
       7: iconst_1
       8: goto          18
      11: aload_0
      12: getfield      #78                 // Field cycleCount:Ljavafx/beans/property/IntegerProperty;
      15: invokevirtual #81                 // Method javafx/beans/property/IntegerProperty.get:()I
      18: ireturn

  public final javafx.beans.property.IntegerProperty cycleCountProperty();
    Code:
       0: aload_0
       1: getfield      #78                 // Field cycleCount:Ljavafx/beans/property/IntegerProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #82                 // class javafx/animation/Animation$4
      11: dup
      12: aload_0
      13: iconst_1
      14: invokespecial #83                 // Method javafx/animation/Animation$4."<init>":(Ljavafx/animation/Animation;I)V
      17: putfield      #78                 // Field cycleCount:Ljavafx/beans/property/IntegerProperty;
      20: aload_0
      21: getfield      #78                 // Field cycleCount:Ljavafx/beans/property/IntegerProperty;
      24: areturn

  public final void setAutoReverse(boolean);
    Code:
       0: aload_0
       1: getfield      #84                 // Field autoReverse:Ljavafx/beans/property/BooleanProperty;
       4: ifnonnull     11
       7: iload_1
       8: ifeq          19
      11: aload_0
      12: invokevirtual #85                 // Method autoReverseProperty:()Ljavafx/beans/property/BooleanProperty;
      15: iload_1
      16: invokevirtual #86                 // Method javafx/beans/property/BooleanProperty.set:(Z)V
      19: return

  public final boolean isAutoReverse();
    Code:
       0: aload_0
       1: getfield      #84                 // Field autoReverse:Ljavafx/beans/property/BooleanProperty;
       4: ifnonnull     11
       7: iconst_0
       8: goto          18
      11: aload_0
      12: getfield      #84                 // Field autoReverse:Ljavafx/beans/property/BooleanProperty;
      15: invokevirtual #87                 // Method javafx/beans/property/BooleanProperty.get:()Z
      18: ireturn

  public final javafx.beans.property.BooleanProperty autoReverseProperty();
    Code:
       0: aload_0
       1: getfield      #84                 // Field autoReverse:Ljavafx/beans/property/BooleanProperty;
       4: ifnonnull     22
       7: aload_0
       8: new           #88                 // class javafx/beans/property/SimpleBooleanProperty
      11: dup
      12: aload_0
      13: ldc           #89                 // String autoReverse
      15: iconst_0
      16: invokespecial #90                 // Method javafx/beans/property/SimpleBooleanProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;Z)V
      19: putfield      #84                 // Field autoReverse:Ljavafx/beans/property/BooleanProperty;
      22: aload_0
      23: getfield      #84                 // Field autoReverse:Ljavafx/beans/property/BooleanProperty;
      26: areturn

  protected final void setStatus(javafx.animation.Animation$Status);
    Code:
       0: aload_0
       1: getfield      #91                 // Field status:Ljavafx/beans/property/ReadOnlyObjectProperty;
       4: ifnonnull     17
       7: getstatic     #92                 // Field DEFAULT_STATUS:Ljavafx/animation/Animation$Status;
      10: aload_1
      11: invokevirtual #93                 // Method javafx/animation/Animation$Status.equals:(Ljava/lang/Object;)Z
      14: ifne          28
      17: aload_0
      18: invokevirtual #94                 // Method statusProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
      21: checkcast     #47                 // class javafx/animation/Animation$AnimationReadOnlyProperty
      24: aload_1
      25: invokestatic  #48                 // Method javafx/animation/Animation$AnimationReadOnlyProperty.access$800:(Ljavafx/animation/Animation$AnimationReadOnlyProperty;Ljava/lang/Object;)V
      28: return

  public final javafx.animation.Animation$Status getStatus();
    Code:
       0: aload_0
       1: getfield      #91                 // Field status:Ljavafx/beans/property/ReadOnlyObjectProperty;
       4: ifnonnull     13
       7: getstatic     #92                 // Field DEFAULT_STATUS:Ljavafx/animation/Animation$Status;
      10: goto          23
      13: aload_0
      14: getfield      #91                 // Field status:Ljavafx/beans/property/ReadOnlyObjectProperty;
      17: invokevirtual #49                 // Method javafx/beans/property/ReadOnlyObjectProperty.get:()Ljava/lang/Object;
      20: checkcast     #95                 // class javafx/animation/Animation$Status
      23: areturn

  public final javafx.beans.property.ReadOnlyObjectProperty<javafx.animation.Animation$Status> statusProperty();
    Code:
       0: aload_0
       1: getfield      #91                 // Field status:Ljavafx/beans/property/ReadOnlyObjectProperty;
       4: ifnonnull     25
       7: aload_0
       8: new           #47                 // class javafx/animation/Animation$AnimationReadOnlyProperty
      11: dup
      12: aload_0
      13: ldc           #96                 // String status
      15: getstatic     #31                 // Field javafx/animation/Animation$Status.STOPPED:Ljavafx/animation/Animation$Status;
      18: aconst_null
      19: invokespecial #52                 // Method javafx/animation/Animation$AnimationReadOnlyProperty."<init>":(Ljavafx/animation/Animation;Ljava/lang/String;Ljava/lang/Object;Ljavafx/animation/Animation$1;)V
      22: putfield      #91                 // Field status:Ljavafx/beans/property/ReadOnlyObjectProperty;
      25: aload_0
      26: getfield      #91                 // Field status:Ljavafx/beans/property/ReadOnlyObjectProperty;
      29: areturn

  public final double getTargetFramerate();
    Code:
       0: aload_0
       1: getfield      #97                 // Field targetFramerate:D
       4: dreturn

  public final void setOnFinished(javafx.event.EventHandler<javafx.event.ActionEvent>);
    Code:
       0: aload_0
       1: getfield      #98                 // Field onFinished:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aload_1
       8: ifnull        19
      11: aload_0
      12: invokevirtual #99                 // Method onFinishedProperty:()Ljavafx/beans/property/ObjectProperty;
      15: aload_1
      16: invokevirtual #74                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
      19: return

  public final javafx.event.EventHandler<javafx.event.ActionEvent> getOnFinished();
    Code:
       0: aload_0
       1: getfield      #98                 // Field onFinished:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     13
       7: getstatic     #100                // Field DEFAULT_ON_FINISHED:Ljavafx/event/EventHandler;
      10: goto          23
      13: aload_0
      14: getfield      #98                 // Field onFinished:Ljavafx/beans/property/ObjectProperty;
      17: invokevirtual #75                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      20: checkcast     #101                // class javafx/event/EventHandler
      23: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<javafx.event.ActionEvent>> onFinishedProperty();
    Code:
       0: aload_0
       1: getfield      #98                 // Field onFinished:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     24
       7: aload_0
       8: new           #102                // class javafx/beans/property/SimpleObjectProperty
      11: dup
      12: aload_0
      13: ldc           #103                // String onFinished
      15: getstatic     #100                // Field DEFAULT_ON_FINISHED:Ljavafx/event/EventHandler;
      18: invokespecial #104                // Method javafx/beans/property/SimpleObjectProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      21: putfield      #98                 // Field onFinished:Ljavafx/beans/property/ObjectProperty;
      24: aload_0
      25: getfield      #98                 // Field onFinished:Ljavafx/beans/property/ObjectProperty;
      28: areturn

  public final javafx.collections.ObservableMap<java.lang.String, javafx.util.Duration> getCuePoints();
    Code:
       0: aload_0
       1: getfield      #105                // Field cuePoints:Ljavafx/collections/ObservableMap;
       4: areturn

  public void jumpTo(javafx.util.Duration);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #106                // class java/lang/NullPointerException
       7: dup
       8: ldc           #107                // String Time needs to be specified.
      10: invokespecial #108                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: invokevirtual #109                // Method javafx/util/Duration.isUnknown:()Z
      18: ifeq          31
      21: new           #43                 // class java/lang/IllegalArgumentException
      24: dup
      25: ldc           #110                // String The time is invalid
      27: invokespecial #45                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: getfield      #29                 // Field parent:Ljavafx/animation/Animation;
      35: ifnull        48
      38: new           #111                // class java/lang/IllegalStateException
      41: dup
      42: ldc           #112                // String Cannot jump when embedded in another animation
      44: invokespecial #113                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: iconst_0
      50: putfield      #114                // Field lastPlayedFinished:Z
      53: aload_0
      54: invokevirtual #115                // Method getTotalDuration:()Ljavafx/util/Duration;
      57: astore_2
      58: aload_1
      59: getstatic     #41                 // Field javafx/util/Duration.ZERO:Ljavafx/util/Duration;
      62: invokevirtual #42                 // Method javafx/util/Duration.lessThan:(Ljavafx/util/Duration;)Z
      65: ifeq          74
      68: getstatic     #41                 // Field javafx/util/Duration.ZERO:Ljavafx/util/Duration;
      71: goto          87
      74: aload_1
      75: aload_2
      76: invokevirtual #116                // Method javafx/util/Duration.greaterThan:(Ljavafx/util/Duration;)Z
      79: ifeq          86
      82: aload_2
      83: goto          87
      86: aload_1
      87: astore_1
      88: aload_1
      89: invokestatic  #64                 // Method com/sun/javafx/animation/TickCalculation.fromDuration:(Ljavafx/util/Duration;)J
      92: lstore_3
      93: aload_0
      94: invokevirtual #30                 // Method getStatus:()Ljavafx/animation/Animation$Status;
      97: getstatic     #31                 // Field javafx/animation/Animation$Status.STOPPED:Ljavafx/animation/Animation$Status;
     100: if_acmpne     107
     103: aload_0
     104: invokespecial #61                 // Method syncClipEnvelope:()V
     107: aload_0
     108: getfield      #63                 // Field clipEnvelope:Lcom/sun/scenario/animation/shared/ClipEnvelope;
     111: lload_3
     112: invokevirtual #65                 // Method com/sun/scenario/animation/shared/ClipEnvelope.jumpTo:(J)V
     115: return

  public void jumpTo(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #106                // class java/lang/NullPointerException
       7: dup
       8: ldc           #117                // String CuePoint needs to be specified
      10: invokespecial #108                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: ldc           #118                // String start
      16: aload_1
      17: invokevirtual #119                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      20: ifeq          33
      23: aload_0
      24: getstatic     #41                 // Field javafx/util/Duration.ZERO:Ljavafx/util/Duration;
      27: invokevirtual #120                // Method jumpTo:(Ljavafx/util/Duration;)V
      30: goto          76
      33: ldc           #121                // String end
      35: aload_1
      36: invokevirtual #119                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      39: ifeq          53
      42: aload_0
      43: aload_0
      44: invokevirtual #115                // Method getTotalDuration:()Ljavafx/util/Duration;
      47: invokevirtual #120                // Method jumpTo:(Ljavafx/util/Duration;)V
      50: goto          76
      53: aload_0
      54: invokevirtual #122                // Method getCuePoints:()Ljavafx/collections/ObservableMap;
      57: aload_1
      58: invokeinterface #123,  2          // InterfaceMethod javafx/collections/ObservableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      63: checkcast     #50                 // class javafx/util/Duration
      66: astore_2
      67: aload_2
      68: ifnull        76
      71: aload_0
      72: aload_2
      73: invokevirtual #120                // Method jumpTo:(Ljavafx/util/Duration;)V
      76: return

  public void playFrom(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #124                // Method jumpTo:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #125                // Method play:()V
       9: return

  public void playFrom(javafx.util.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #120                // Method jumpTo:(Ljavafx/util/Duration;)V
       5: aload_0
       6: invokevirtual #125                // Method play:()V
       9: return

  public void play();
    Code:
       0: aload_0
       1: getfield      #29                 // Field parent:Ljavafx/animation/Animation;
       4: ifnull        17
       7: new           #111                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #126                // String Cannot start when embedded in another animation
      13: invokespecial #113                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: getstatic     #127                // Field javafx/animation/Animation$5.$SwitchMap$javafx$animation$Animation$Status:[I
      20: aload_0
      21: invokevirtual #30                 // Method getStatus:()Ljavafx/animation/Animation$Status;
      24: invokevirtual #128                // Method javafx/animation/Animation$Status.ordinal:()I
      27: iaload
      28: lookupswitch  { // 2
                     1: 56
                     2: 157
               default: 179
          }
      56: aload_0
      57: iconst_1
      58: invokevirtual #129                // Method startable:(Z)Z
      61: ifeq          130
      64: aload_0
      65: invokevirtual #130                // Method getRate:()D
      68: dstore_1
      69: aload_0
      70: getfield      #114                // Field lastPlayedFinished:Z
      73: ifeq          96
      76: aload_0
      77: dload_1
      78: dconst_0
      79: dcmpg
      80: ifge          90
      83: aload_0
      84: invokevirtual #115                // Method getTotalDuration:()Ljavafx/util/Duration;
      87: goto          93
      90: getstatic     #41                 // Field javafx/util/Duration.ZERO:Ljavafx/util/Duration;
      93: invokevirtual #120                // Method jumpTo:(Ljavafx/util/Duration;)V
      96: aload_0
      97: iconst_1
      98: invokevirtual #131                // Method doStart:(Z)V
     101: aload_0
     102: aload_0
     103: invokevirtual #132                // Method getDelay:()Ljavafx/util/Duration;
     106: invokestatic  #64                 // Method com/sun/javafx/animation/TickCalculation.fromDuration:(Ljavafx/util/Duration;)J
     109: invokevirtual #133                // Method startReceiver:(J)V
     112: dload_1
     113: invokestatic  #21                 // Method java/lang/Math.abs:(D)D
     116: ldc2_w        #22                 // double 1.0E-12d
     119: dcmpg
     120: ifge          127
     123: aload_0
     124: invokevirtual #134                // Method pauseReceiver:()V
     127: goto          179
     130: aload_0
     131: invokevirtual #135                // Method getOnFinished:()Ljavafx/event/EventHandler;
     134: astore_1
     135: aload_1
     136: ifnull        154
     139: aload_1
     140: new           #136                // class javafx/event/ActionEvent
     143: dup
     144: aload_0
     145: aconst_null
     146: invokespecial #137                // Method javafx/event/ActionEvent."<init>":(Ljava/lang/Object;Ljavafx/event/EventTarget;)V
     149: invokeinterface #138,  2          // InterfaceMethod javafx/event/EventHandler.handle:(Ljavafx/event/Event;)V
     154: goto          179
     157: aload_0
     158: invokevirtual #139                // Method doResume:()V
     161: aload_0
     162: invokevirtual #130                // Method getRate:()D
     165: invokestatic  #21                 // Method java/lang/Math.abs:(D)D
     168: ldc2_w        #22                 // double 1.0E-12d
     171: dcmpl
     172: iflt          179
     175: aload_0
     176: invokevirtual #140                // Method resumeReceiver:()V
     179: return

  public void playFromStart();
    Code:
       0: aload_0
       1: invokevirtual #141                // Method stop:()V
       4: aload_0
       5: aload_0
       6: invokevirtual #130                // Method getRate:()D
       9: invokestatic  #21                 // Method java/lang/Math.abs:(D)D
      12: invokevirtual #142                // Method setRate:(D)V
      15: aload_0
      16: getstatic     #41                 // Field javafx/util/Duration.ZERO:Ljavafx/util/Duration;
      19: invokevirtual #120                // Method jumpTo:(Ljavafx/util/Duration;)V
      22: aload_0
      23: invokevirtual #125                // Method play:()V
      26: return

  public void stop();
    Code:
       0: aload_0
       1: getfield      #29                 // Field parent:Ljavafx/animation/Animation;
       4: ifnull        17
       7: new           #111                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #143                // String Cannot stop when embedded in another animation
      13: invokespecial #113                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #30                 // Method getStatus:()Ljavafx/animation/Animation$Status;
      21: getstatic     #31                 // Field javafx/animation/Animation$Status.STOPPED:Ljavafx/animation/Animation$Status;
      24: if_acmpeq     45
      27: aload_0
      28: getfield      #63                 // Field clipEnvelope:Lcom/sun/scenario/animation/shared/ClipEnvelope;
      31: invokevirtual #144                // Method com/sun/scenario/animation/shared/ClipEnvelope.abortCurrentPulse:()V
      34: aload_0
      35: invokevirtual #145                // Method doStop:()V
      38: aload_0
      39: getstatic     #41                 // Field javafx/util/Duration.ZERO:Ljavafx/util/Duration;
      42: invokevirtual #120                // Method jumpTo:(Ljavafx/util/Duration;)V
      45: return

  public void pause();
    Code:
       0: aload_0
       1: getfield      #29                 // Field parent:Ljavafx/animation/Animation;
       4: ifnull        17
       7: new           #111                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #146                // String Cannot pause when embedded in another animation
      13: invokespecial #113                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #30                 // Method getStatus:()Ljavafx/animation/Animation$Status;
      21: getstatic     #147                // Field javafx/animation/Animation$Status.RUNNING:Ljavafx/animation/Animation$Status;
      24: if_acmpne     42
      27: aload_0
      28: getfield      #63                 // Field clipEnvelope:Lcom/sun/scenario/animation/shared/ClipEnvelope;
      31: invokevirtual #144                // Method com/sun/scenario/animation/shared/ClipEnvelope.abortCurrentPulse:()V
      34: aload_0
      35: invokevirtual #134                // Method pauseReceiver:()V
      38: aload_0
      39: invokevirtual #148                // Method doPause:()V
      42: return

  protected javafx.animation.Animation(double);
    Code:
       0: aload_0
       1: invokespecial #149                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #14                 // Field paused:Z
       9: aload_0
      10: aconst_null
      11: putfield      #6                  // Field accessCtrlCtx:Ljava/security/AccessControlContext;
      14: aload_0
      15: new           #150                // class javafx/animation/Animation$1
      18: dup
      19: aload_0
      20: invokespecial #151                // Method javafx/animation/Animation$1."<init>":(Ljavafx/animation/Animation;)V
      23: putfield      #12                 // Field pulseReceiver:Lcom/sun/scenario/animation/shared/PulseReceiver;
      26: aload_0
      27: aconst_null
      28: putfield      #29                 // Field parent:Ljavafx/animation/Animation;
      31: aload_0
      32: iconst_0
      33: putfield      #114                // Field lastPlayedFinished:Z
      36: aload_0
      37: iconst_1
      38: putfield      #3                  // Field lastPlayedForward:Z
      41: aload_0
      42: dconst_1
      43: putfield      #4                  // Field oldRate:D
      46: aload_0
      47: new           #152                // class java/util/HashMap
      50: dup
      51: iconst_0
      52: invokespecial #153                // Method java/util/HashMap."<init>":(I)V
      55: invokestatic  #154                // Method javafx/collections/FXCollections.observableMap:(Ljava/util/Map;)Ljavafx/collections/ObservableMap;
      58: putfield      #105                // Field cuePoints:Ljavafx/collections/ObservableMap;
      61: aload_0
      62: dload_1
      63: putfield      #97                 // Field targetFramerate:D
      66: aload_0
      67: lconst_1
      68: ldc2_w        #156                // double 6000.0d
      71: dload_1
      72: ddiv
      73: invokestatic  #158                // Method java/lang/Math.round:(D)J
      76: invokestatic  #159                // Method java/lang/Math.max:(JJ)J
      79: l2i
      80: putfield      #160                // Field resolution:I
      83: aload_0
      84: aload_0
      85: invokestatic  #161                // Method com/sun/scenario/animation/shared/ClipEnvelope.create:(Ljavafx/animation/Animation;)Lcom/sun/scenario/animation/shared/ClipEnvelope;
      88: putfield      #63                 // Field clipEnvelope:Lcom/sun/scenario/animation/shared/ClipEnvelope;
      91: aload_0
      92: invokestatic  #162                // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      95: invokevirtual #163                // Method com/sun/javafx/tk/Toolkit.getMasterTimer:()Lcom/sun/scenario/animation/AbstractMasterTimer;
      98: putfield      #8                  // Field timer:Lcom/sun/scenario/animation/AbstractMasterTimer;
     101: return

  protected javafx.animation.Animation();
    Code:
       0: aload_0
       1: invokespecial #149                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #14                 // Field paused:Z
       9: aload_0
      10: aconst_null
      11: putfield      #6                  // Field accessCtrlCtx:Ljava/security/AccessControlContext;
      14: aload_0
      15: new           #150                // class javafx/animation/Animation$1
      18: dup
      19: aload_0
      20: invokespecial #151                // Method javafx/animation/Animation$1."<init>":(Ljavafx/animation/Animation;)V
      23: putfield      #12                 // Field pulseReceiver:Lcom/sun/scenario/animation/shared/PulseReceiver;
      26: aload_0
      27: aconst_null
      28: putfield      #29                 // Field parent:Ljavafx/animation/Animation;
      31: aload_0
      32: iconst_0
      33: putfield      #114                // Field lastPlayedFinished:Z
      36: aload_0
      37: iconst_1
      38: putfield      #3                  // Field lastPlayedForward:Z
      41: aload_0
      42: dconst_1
      43: putfield      #4                  // Field oldRate:D
      46: aload_0
      47: new           #152                // class java/util/HashMap
      50: dup
      51: iconst_0
      52: invokespecial #153                // Method java/util/HashMap."<init>":(I)V
      55: invokestatic  #154                // Method javafx/collections/FXCollections.observableMap:(Ljava/util/Map;)Ljavafx/collections/ObservableMap;
      58: putfield      #105                // Field cuePoints:Ljavafx/collections/ObservableMap;
      61: aload_0
      62: iconst_1
      63: putfield      #160                // Field resolution:I
      66: aload_0
      67: sipush        6000
      70: invokestatic  #162                // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      73: invokevirtual #163                // Method com/sun/javafx/tk/Toolkit.getMasterTimer:()Lcom/sun/scenario/animation/AbstractMasterTimer;
      76: invokevirtual #164                // Method com/sun/scenario/animation/AbstractMasterTimer.getDefaultResolution:()I
      79: idiv
      80: i2d
      81: putfield      #97                 // Field targetFramerate:D
      84: aload_0
      85: aload_0
      86: invokestatic  #161                // Method com/sun/scenario/animation/shared/ClipEnvelope.create:(Ljavafx/animation/Animation;)Lcom/sun/scenario/animation/shared/ClipEnvelope;
      89: putfield      #63                 // Field clipEnvelope:Lcom/sun/scenario/animation/shared/ClipEnvelope;
      92: aload_0
      93: invokestatic  #162                // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      96: invokevirtual #163                // Method com/sun/javafx/tk/Toolkit.getMasterTimer:()Lcom/sun/scenario/animation/AbstractMasterTimer;
      99: putfield      #8                  // Field timer:Lcom/sun/scenario/animation/AbstractMasterTimer;
     102: return

  javafx.animation.Animation(com.sun.scenario.animation.AbstractMasterTimer);
    Code:
       0: aload_0
       1: invokespecial #149                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #14                 // Field paused:Z
       9: aload_0
      10: aconst_null
      11: putfield      #6                  // Field accessCtrlCtx:Ljava/security/AccessControlContext;
      14: aload_0
      15: new           #150                // class javafx/animation/Animation$1
      18: dup
      19: aload_0
      20: invokespecial #151                // Method javafx/animation/Animation$1."<init>":(Ljavafx/animation/Animation;)V
      23: putfield      #12                 // Field pulseReceiver:Lcom/sun/scenario/animation/shared/PulseReceiver;
      26: aload_0
      27: aconst_null
      28: putfield      #29                 // Field parent:Ljavafx/animation/Animation;
      31: aload_0
      32: iconst_0
      33: putfield      #114                // Field lastPlayedFinished:Z
      36: aload_0
      37: iconst_1
      38: putfield      #3                  // Field lastPlayedForward:Z
      41: aload_0
      42: dconst_1
      43: putfield      #4                  // Field oldRate:D
      46: aload_0
      47: new           #152                // class java/util/HashMap
      50: dup
      51: iconst_0
      52: invokespecial #153                // Method java/util/HashMap."<init>":(I)V
      55: invokestatic  #154                // Method javafx/collections/FXCollections.observableMap:(Ljava/util/Map;)Ljavafx/collections/ObservableMap;
      58: putfield      #105                // Field cuePoints:Ljavafx/collections/ObservableMap;
      61: aload_0
      62: iconst_1
      63: putfield      #160                // Field resolution:I
      66: aload_0
      67: sipush        6000
      70: aload_1
      71: invokevirtual #164                // Method com/sun/scenario/animation/AbstractMasterTimer.getDefaultResolution:()I
      74: idiv
      75: i2d
      76: putfield      #97                 // Field targetFramerate:D
      79: aload_0
      80: aload_0
      81: invokestatic  #161                // Method com/sun/scenario/animation/shared/ClipEnvelope.create:(Ljavafx/animation/Animation;)Lcom/sun/scenario/animation/shared/ClipEnvelope;
      84: putfield      #63                 // Field clipEnvelope:Lcom/sun/scenario/animation/shared/ClipEnvelope;
      87: aload_0
      88: aload_1
      89: putfield      #8                  // Field timer:Lcom/sun/scenario/animation/AbstractMasterTimer;
      92: return

  javafx.animation.Animation(com.sun.scenario.animation.AbstractMasterTimer, com.sun.scenario.animation.shared.ClipEnvelope, int);
    Code:
       0: aload_0
       1: invokespecial #149                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #14                 // Field paused:Z
       9: aload_0
      10: aconst_null
      11: putfield      #6                  // Field accessCtrlCtx:Ljava/security/AccessControlContext;
      14: aload_0
      15: new           #150                // class javafx/animation/Animation$1
      18: dup
      19: aload_0
      20: invokespecial #151                // Method javafx/animation/Animation$1."<init>":(Ljavafx/animation/Animation;)V
      23: putfield      #12                 // Field pulseReceiver:Lcom/sun/scenario/animation/shared/PulseReceiver;
      26: aload_0
      27: aconst_null
      28: putfield      #29                 // Field parent:Ljavafx/animation/Animation;
      31: aload_0
      32: iconst_0
      33: putfield      #114                // Field lastPlayedFinished:Z
      36: aload_0
      37: iconst_1
      38: putfield      #3                  // Field lastPlayedForward:Z
      41: aload_0
      42: dconst_1
      43: putfield      #4                  // Field oldRate:D
      46: aload_0
      47: new           #152                // class java/util/HashMap
      50: dup
      51: iconst_0
      52: invokespecial #153                // Method java/util/HashMap."<init>":(I)V
      55: invokestatic  #154                // Method javafx/collections/FXCollections.observableMap:(Ljava/util/Map;)Ljavafx/collections/ObservableMap;
      58: putfield      #105                // Field cuePoints:Ljavafx/collections/ObservableMap;
      61: aload_0
      62: iload_3
      63: putfield      #160                // Field resolution:I
      66: aload_0
      67: sipush        6000
      70: iload_3
      71: idiv
      72: i2d
      73: putfield      #97                 // Field targetFramerate:D
      76: aload_0
      77: aload_2
      78: putfield      #63                 // Field clipEnvelope:Lcom/sun/scenario/animation/shared/ClipEnvelope;
      81: aload_0
      82: aload_1
      83: putfield      #8                  // Field timer:Lcom/sun/scenario/animation/AbstractMasterTimer;
      86: return

  boolean startable(boolean);
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method getCycleDuration:()Ljavafx/util/Duration;
       4: invokestatic  #64                 // Method com/sun/javafx/animation/TickCalculation.fromDuration:(Ljavafx/util/Duration;)J
       7: lconst_0
       8: lcmp
       9: ifgt          26
      12: iload_1
      13: ifne          30
      16: aload_0
      17: getfield      #63                 // Field clipEnvelope:Lcom/sun/scenario/animation/shared/ClipEnvelope;
      20: invokevirtual #165                // Method com/sun/scenario/animation/shared/ClipEnvelope.wasSynched:()Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  void sync(boolean);
    Code:
       0: iload_1
       1: ifne          14
       4: aload_0
       5: getfield      #63                 // Field clipEnvelope:Lcom/sun/scenario/animation/shared/ClipEnvelope;
       8: invokevirtual #165                // Method com/sun/scenario/animation/shared/ClipEnvelope.wasSynched:()Z
      11: ifne          18
      14: aload_0
      15: invokespecial #61                 // Method syncClipEnvelope:()V
      18: return

  private void syncClipEnvelope();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method getCycleCount:()I
       4: istore_1
       5: iload_1
       6: ifgt          18
       9: iload_1
      10: iconst_m1
      11: if_icmpeq     18
      14: iconst_1
      15: goto          19
      18: iload_1
      19: istore_2
      20: aload_0
      21: aload_0
      22: getfield      #63                 // Field clipEnvelope:Lcom/sun/scenario/animation/shared/ClipEnvelope;
      25: iload_2
      26: invokevirtual #166                // Method com/sun/scenario/animation/shared/ClipEnvelope.setCycleCount:(I)Lcom/sun/scenario/animation/shared/ClipEnvelope;
      29: putfield      #63                 // Field clipEnvelope:Lcom/sun/scenario/animation/shared/ClipEnvelope;
      32: aload_0
      33: getfield      #63                 // Field clipEnvelope:Lcom/sun/scenario/animation/shared/ClipEnvelope;
      36: aload_0
      37: invokevirtual #57                 // Method getCycleDuration:()Ljavafx/util/Duration;
      40: invokevirtual #167                // Method com/sun/scenario/animation/shared/ClipEnvelope.setCycleDuration:(Ljavafx/util/Duration;)Lcom/sun/scenario/animation/shared/ClipEnvelope;
      43: pop
      44: aload_0
      45: getfield      #63                 // Field clipEnvelope:Lcom/sun/scenario/animation/shared/ClipEnvelope;
      48: aload_0
      49: invokevirtual #168                // Method isAutoReverse:()Z
      52: invokevirtual #169                // Method com/sun/scenario/animation/shared/ClipEnvelope.setAutoReverse:(Z)V
      55: return

  void doStart(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #170                // Method sync:(Z)V
       5: aload_0
       6: getstatic     #147                // Field javafx/animation/Animation$Status.RUNNING:Ljavafx/animation/Animation$Status;
       9: invokevirtual #171                // Method setStatus:(Ljavafx/animation/Animation$Status;)V
      12: aload_0
      13: getfield      #63                 // Field clipEnvelope:Lcom/sun/scenario/animation/shared/ClipEnvelope;
      16: invokevirtual #172                // Method com/sun/scenario/animation/shared/ClipEnvelope.start:()V
      19: aload_0
      20: aload_0
      21: getfield      #63                 // Field clipEnvelope:Lcom/sun/scenario/animation/shared/ClipEnvelope;
      24: invokevirtual #173                // Method com/sun/scenario/animation/shared/ClipEnvelope.getCurrentRate:()D
      27: invokespecial #2                  // Method doSetCurrentRate:(D)V
      30: aload_0
      31: lconst_0
      32: putfield      #174                // Field lastPulse:J
      35: return

  void doPause();
    Code:
       0: aload_0
       1: invokevirtual #175                // Method getCurrentRate:()D
       4: dstore_1
       5: dload_1
       6: invokestatic  #21                 // Method java/lang/Math.abs:(D)D
       9: ldc2_w        #22                 // double 1.0E-12d
      12: dcmpl
      13: iflt          44
      16: aload_0
      17: aload_0
      18: invokevirtual #175                // Method getCurrentRate:()D
      21: aload_0
      22: invokevirtual #130                // Method getRate:()D
      25: dsub
      26: invokestatic  #21                 // Method java/lang/Math.abs:(D)D
      29: ldc2_w        #22                 // double 1.0E-12d
      32: dcmpg
      33: ifge          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: putfield      #3                  // Field lastPlayedForward:Z
      44: aload_0
      45: dconst_0
      46: invokespecial #2                  // Method doSetCurrentRate:(D)V
      49: aload_0
      50: getstatic     #176                // Field javafx/animation/Animation$Status.PAUSED:Ljavafx/animation/Animation$Status;
      53: invokevirtual #171                // Method setStatus:(Ljavafx/animation/Animation$Status;)V
      56: return

  void doResume();
    Code:
       0: aload_0
       1: getstatic     #147                // Field javafx/animation/Animation$Status.RUNNING:Ljavafx/animation/Animation$Status;
       4: invokevirtual #171                // Method setStatus:(Ljavafx/animation/Animation$Status;)V
       7: aload_0
       8: aload_0
       9: getfield      #3                  // Field lastPlayedForward:Z
      12: ifeq          22
      15: aload_0
      16: invokevirtual #130                // Method getRate:()D
      19: goto          27
      22: aload_0
      23: invokevirtual #130                // Method getRate:()D
      26: dneg
      27: invokespecial #2                  // Method doSetCurrentRate:(D)V
      30: return

  void doStop();
    Code:
       0: aload_0
       1: getfield      #14                 // Field paused:Z
       4: ifne          18
       7: aload_0
       8: getfield      #8                  // Field timer:Lcom/sun/scenario/animation/AbstractMasterTimer;
      11: aload_0
      12: getfield      #12                 // Field pulseReceiver:Lcom/sun/scenario/animation/shared/PulseReceiver;
      15: invokevirtual #18                 // Method com/sun/scenario/animation/AbstractMasterTimer.removePulseReceiver:(Lcom/sun/scenario/animation/shared/PulseReceiver;)V
      18: aload_0
      19: getstatic     #31                 // Field javafx/animation/Animation$Status.STOPPED:Ljavafx/animation/Animation$Status;
      22: invokevirtual #171                // Method setStatus:(Ljavafx/animation/Animation$Status;)V
      25: aload_0
      26: dconst_0
      27: invokespecial #2                  // Method doSetCurrentRate:(D)V
      30: return

  void doTimePulse(long);
    Code:
       0: aload_0
       1: getfield      #160                // Field resolution:I
       4: iconst_1
       5: if_icmpne     19
       8: aload_0
       9: getfield      #63                 // Field clipEnvelope:Lcom/sun/scenario/animation/shared/ClipEnvelope;
      12: lload_1
      13: invokevirtual #177                // Method com/sun/scenario/animation/shared/ClipEnvelope.timePulse:(J)V
      16: goto          59
      19: lload_1
      20: aload_0
      21: getfield      #174                // Field lastPulse:J
      24: lsub
      25: aload_0
      26: getfield      #160                // Field resolution:I
      29: i2l
      30: lcmp
      31: iflt          59
      34: aload_0
      35: lload_1
      36: aload_0
      37: getfield      #160                // Field resolution:I
      40: i2l
      41: ldiv
      42: aload_0
      43: getfield      #160                // Field resolution:I
      46: i2l
      47: lmul
      48: putfield      #174                // Field lastPulse:J
      51: aload_0
      52: getfield      #63                 // Field clipEnvelope:Lcom/sun/scenario/animation/shared/ClipEnvelope;
      55: lload_1
      56: invokevirtual #177                // Method com/sun/scenario/animation/shared/ClipEnvelope.timePulse:(J)V
      59: return

  abstract void doPlayTo(long, long);

  abstract void doJumpTo(long, long, boolean);

  void setCurrentTicks(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #66                 // Field currentTicks:J
       5: aload_0
       6: getfield      #68                 // Field currentTime:Ljavafx/animation/Animation$CurrentTimeProperty;
       9: ifnull        19
      12: aload_0
      13: getfield      #68                 // Field currentTime:Ljavafx/animation/Animation$CurrentTimeProperty;
      16: invokevirtual #178                // Method javafx/animation/Animation$CurrentTimeProperty.fireValueChangedEvent:()V
      19: return

  void setCurrentRate(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #2                  // Method doSetCurrentRate:(D)V
       5: return

  final void finished();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #114                // Field lastPlayedFinished:Z
       5: aload_0
       6: invokevirtual #145                // Method doStop:()V
       9: aload_0
      10: invokevirtual #135                // Method getOnFinished:()Ljavafx/event/EventHandler;
      13: astore_1
      14: aload_1
      15: ifnull        52
      18: aload_1
      19: new           #136                // class javafx/event/ActionEvent
      22: dup
      23: aload_0
      24: aconst_null
      25: invokespecial #137                // Method javafx/event/ActionEvent."<init>":(Ljava/lang/Object;Ljavafx/event/EventTarget;)V
      28: invokeinterface #138,  2          // InterfaceMethod javafx/event/EventHandler.handle:(Ljavafx/event/Event;)V
      33: goto          52
      36: astore_2
      37: invokestatic  #180                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      40: invokevirtual #181                // Method java/lang/Thread.getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;
      43: invokestatic  #180                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      46: aload_2
      47: invokeinterface #182,  3          // InterfaceMethod java/lang/Thread$UncaughtExceptionHandler.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V
      52: return
    Exception table:
       from    to  target type
          18    33    36   Class java/lang/Exception

  static long access$000(javafx.animation.Animation);
    Code:
       0: aload_0
       1: getfield      #7                  // Field startTime:J
       4: lreturn

  static java.security.AccessControlContext access$100(javafx.animation.Animation);
    Code:
       0: aload_0
       1: getfield      #6                  // Field accessCtrlCtx:Ljava/security/AccessControlContext;
       4: areturn

  static boolean access$200(javafx.animation.Animation);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method isRunningEmbedded:()Z
       4: ireturn

  static double access$300(javafx.animation.Animation);
    Code:
       0: aload_0
       1: getfield      #4                  // Field oldRate:D
       4: dreturn

  static boolean access$402(javafx.animation.Animation, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #3                  // Field lastPlayedForward:Z
       6: ireturn

  static void access$500(javafx.animation.Animation, double);
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #2                  // Method doSetCurrentRate:(D)V
       5: return

  static boolean access$400(javafx.animation.Animation);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lastPlayedForward:Z
       4: ireturn

  static double access$302(javafx.animation.Animation, double);
    Code:
       0: aload_0
       1: dload_1
       2: dup2_x1
       3: putfield      #4                  // Field oldRate:D
       6: dreturn

  static void access$1100(javafx.animation.Animation);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method updateTotalDuration:()V
       4: return

  static {};
    Code:
       0: new           #183                // class javafx/animation/AnimationAccessorImpl
       3: dup
       4: invokespecial #184                // Method javafx/animation/AnimationAccessorImpl."<init>":()V
       7: putstatic     #185                // Field javafx/animation/AnimationAccessorImpl.DEFAULT:Lcom/sun/scenario/animation/shared/AnimationAccessor;
      10: getstatic     #41                 // Field javafx/util/Duration.ZERO:Ljavafx/util/Duration;
      13: putstatic     #39                 // Field DEFAULT_CYCLE_DURATION:Ljavafx/util/Duration;
      16: getstatic     #41                 // Field javafx/util/Duration.ZERO:Ljavafx/util/Duration;
      19: putstatic     #54                 // Field DEFAULT_TOTAL_DURATION:Ljavafx/util/Duration;
      22: getstatic     #41                 // Field javafx/util/Duration.ZERO:Ljavafx/util/Duration;
      25: putstatic     #72                 // Field DEFAULT_DELAY:Ljavafx/util/Duration;
      28: getstatic     #31                 // Field javafx/animation/Animation$Status.STOPPED:Ljavafx/animation/Animation$Status;
      31: putstatic     #92                 // Field DEFAULT_STATUS:Ljavafx/animation/Animation$Status;
      34: aconst_null
      35: putstatic     #100                // Field DEFAULT_ON_FINISHED:Ljavafx/event/EventHandler;
      38: return
}
