Compiled from "MapPropertyBase.java"
public abstract class javafx.beans.property.MapPropertyBase<K, V> extends javafx.beans.property.MapProperty<K, V> {
  private final javafx.collections.MapChangeListener<K, V> mapChangeListener;

  private javafx.collections.ObservableMap<K, V> value;

  private javafx.beans.value.ObservableValue<? extends javafx.collections.ObservableMap<K, V>> observable;

  private javafx.beans.InvalidationListener listener;

  private boolean valid;

  private com.sun.javafx.binding.MapExpressionHelper<K, V> helper;

  private javafx.beans.property.MapPropertyBase<K, V>.SizeProperty size0;

  private javafx.beans.property.MapPropertyBase<K, V>.EmptyProperty empty0;

  public javafx.beans.property.MapPropertyBase();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method javafx/beans/property/MapProperty."<init>":()V
       4: aload_0
       5: aload_0
       6: invokedynamic #4,  0              // InvokeDynamic #0:onChanged:(Ljavafx/beans/property/MapPropertyBase;)Ljavafx/collections/MapChangeListener;
      11: putfield      #5                  // Field mapChangeListener:Ljavafx/collections/MapChangeListener;
      14: aload_0
      15: aconst_null
      16: putfield      #6                  // Field observable:Ljavafx/beans/value/ObservableValue;
      19: aload_0
      20: aconst_null
      21: putfield      #7                  // Field listener:Ljavafx/beans/InvalidationListener;
      24: aload_0
      25: iconst_1
      26: putfield      #8                  // Field valid:Z
      29: aload_0
      30: aconst_null
      31: putfield      #9                  // Field helper:Lcom/sun/javafx/binding/MapExpressionHelper;
      34: return

  public javafx.beans.property.MapPropertyBase(javafx.collections.ObservableMap<K, V>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method javafx/beans/property/MapProperty."<init>":()V
       4: aload_0
       5: aload_0
       6: invokedynamic #4,  0              // InvokeDynamic #0:onChanged:(Ljavafx/beans/property/MapPropertyBase;)Ljavafx/collections/MapChangeListener;
      11: putfield      #5                  // Field mapChangeListener:Ljavafx/collections/MapChangeListener;
      14: aload_0
      15: aconst_null
      16: putfield      #6                  // Field observable:Ljavafx/beans/value/ObservableValue;
      19: aload_0
      20: aconst_null
      21: putfield      #7                  // Field listener:Ljavafx/beans/InvalidationListener;
      24: aload_0
      25: iconst_1
      26: putfield      #8                  // Field valid:Z
      29: aload_0
      30: aconst_null
      31: putfield      #9                  // Field helper:Lcom/sun/javafx/binding/MapExpressionHelper;
      34: aload_0
      35: aload_1
      36: putfield      #2                  // Field value:Ljavafx/collections/ObservableMap;
      39: aload_1
      40: ifnull        53
      43: aload_1
      44: aload_0
      45: getfield      #5                  // Field mapChangeListener:Ljavafx/collections/MapChangeListener;
      48: invokeinterface #10,  2           // InterfaceMethod javafx/collections/ObservableMap.addListener:(Ljavafx/collections/MapChangeListener;)V
      53: return

  public javafx.beans.property.ReadOnlyIntegerProperty sizeProperty();
    Code:
       0: aload_0
       1: getfield      #11                 // Field size0:Ljavafx/beans/property/MapPropertyBase$SizeProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #12                 // class javafx/beans/property/MapPropertyBase$SizeProperty
      11: dup
      12: aload_0
      13: aconst_null
      14: invokespecial #13                 // Method javafx/beans/property/MapPropertyBase$SizeProperty."<init>":(Ljavafx/beans/property/MapPropertyBase;Ljavafx/beans/property/MapPropertyBase$1;)V
      17: putfield      #11                 // Field size0:Ljavafx/beans/property/MapPropertyBase$SizeProperty;
      20: aload_0
      21: getfield      #11                 // Field size0:Ljavafx/beans/property/MapPropertyBase$SizeProperty;
      24: areturn

  public javafx.beans.property.ReadOnlyBooleanProperty emptyProperty();
    Code:
       0: aload_0
       1: getfield      #14                 // Field empty0:Ljavafx/beans/property/MapPropertyBase$EmptyProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #15                 // class javafx/beans/property/MapPropertyBase$EmptyProperty
      11: dup
      12: aload_0
      13: aconst_null
      14: invokespecial #16                 // Method javafx/beans/property/MapPropertyBase$EmptyProperty."<init>":(Ljavafx/beans/property/MapPropertyBase;Ljavafx/beans/property/MapPropertyBase$1;)V
      17: putfield      #14                 // Field empty0:Ljavafx/beans/property/MapPropertyBase$EmptyProperty;
      20: aload_0
      21: getfield      #14                 // Field empty0:Ljavafx/beans/property/MapPropertyBase$EmptyProperty;
      24: areturn

  public void addListener(javafx.beans.InvalidationListener);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field helper:Lcom/sun/javafx/binding/MapExpressionHelper;
       5: aload_0
       6: aload_1
       7: invokestatic  #17                 // Method com/sun/javafx/binding/MapExpressionHelper.addListener:(Lcom/sun/javafx/binding/MapExpressionHelper;Ljavafx/beans/value/ObservableMapValue;Ljavafx/beans/InvalidationListener;)Lcom/sun/javafx/binding/MapExpressionHelper;
      10: putfield      #9                  // Field helper:Lcom/sun/javafx/binding/MapExpressionHelper;
      13: return

  public void removeListener(javafx.beans.InvalidationListener);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field helper:Lcom/sun/javafx/binding/MapExpressionHelper;
       5: aload_1
       6: invokestatic  #18                 // Method com/sun/javafx/binding/MapExpressionHelper.removeListener:(Lcom/sun/javafx/binding/MapExpressionHelper;Ljavafx/beans/InvalidationListener;)Lcom/sun/javafx/binding/MapExpressionHelper;
       9: putfield      #9                  // Field helper:Lcom/sun/javafx/binding/MapExpressionHelper;
      12: return

  public void addListener(javafx.beans.value.ChangeListener<? super javafx.collections.ObservableMap<K, V>>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field helper:Lcom/sun/javafx/binding/MapExpressionHelper;
       5: aload_0
       6: aload_1
       7: invokestatic  #19                 // Method com/sun/javafx/binding/MapExpressionHelper.addListener:(Lcom/sun/javafx/binding/MapExpressionHelper;Ljavafx/beans/value/ObservableMapValue;Ljavafx/beans/value/ChangeListener;)Lcom/sun/javafx/binding/MapExpressionHelper;
      10: putfield      #9                  // Field helper:Lcom/sun/javafx/binding/MapExpressionHelper;
      13: return

  public void removeListener(javafx.beans.value.ChangeListener<? super javafx.collections.ObservableMap<K, V>>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field helper:Lcom/sun/javafx/binding/MapExpressionHelper;
       5: aload_1
       6: invokestatic  #20                 // Method com/sun/javafx/binding/MapExpressionHelper.removeListener:(Lcom/sun/javafx/binding/MapExpressionHelper;Ljavafx/beans/value/ChangeListener;)Lcom/sun/javafx/binding/MapExpressionHelper;
       9: putfield      #9                  // Field helper:Lcom/sun/javafx/binding/MapExpressionHelper;
      12: return

  public void addListener(javafx.collections.MapChangeListener<? super K, ? super V>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field helper:Lcom/sun/javafx/binding/MapExpressionHelper;
       5: aload_0
       6: aload_1
       7: invokestatic  #21                 // Method com/sun/javafx/binding/MapExpressionHelper.addListener:(Lcom/sun/javafx/binding/MapExpressionHelper;Ljavafx/beans/value/ObservableMapValue;Ljavafx/collections/MapChangeListener;)Lcom/sun/javafx/binding/MapExpressionHelper;
      10: putfield      #9                  // Field helper:Lcom/sun/javafx/binding/MapExpressionHelper;
      13: return

  public void removeListener(javafx.collections.MapChangeListener<? super K, ? super V>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field helper:Lcom/sun/javafx/binding/MapExpressionHelper;
       5: aload_1
       6: invokestatic  #22                 // Method com/sun/javafx/binding/MapExpressionHelper.removeListener:(Lcom/sun/javafx/binding/MapExpressionHelper;Ljavafx/collections/MapChangeListener;)Lcom/sun/javafx/binding/MapExpressionHelper;
       9: putfield      #9                  // Field helper:Lcom/sun/javafx/binding/MapExpressionHelper;
      12: return

  protected void fireValueChangedEvent();
    Code:
       0: aload_0
       1: getfield      #9                  // Field helper:Lcom/sun/javafx/binding/MapExpressionHelper;
       4: invokestatic  #23                 // Method com/sun/javafx/binding/MapExpressionHelper.fireValueChangedEvent:(Lcom/sun/javafx/binding/MapExpressionHelper;)V
       7: return

  protected void fireValueChangedEvent(javafx.collections.MapChangeListener$Change<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field helper:Lcom/sun/javafx/binding/MapExpressionHelper;
       4: aload_1
       5: invokestatic  #24                 // Method com/sun/javafx/binding/MapExpressionHelper.fireValueChangedEvent:(Lcom/sun/javafx/binding/MapExpressionHelper;Ljavafx/collections/MapChangeListener$Change;)V
       8: return

  private void invalidateProperties();
    Code:
       0: aload_0
       1: getfield      #11                 // Field size0:Ljavafx/beans/property/MapPropertyBase$SizeProperty;
       4: ifnull        14
       7: aload_0
       8: getfield      #11                 // Field size0:Ljavafx/beans/property/MapPropertyBase$SizeProperty;
      11: invokevirtual #25                 // Method javafx/beans/property/MapPropertyBase$SizeProperty.fireValueChangedEvent:()V
      14: aload_0
      15: getfield      #14                 // Field empty0:Ljavafx/beans/property/MapPropertyBase$EmptyProperty;
      18: ifnull        28
      21: aload_0
      22: getfield      #14                 // Field empty0:Ljavafx/beans/property/MapPropertyBase$EmptyProperty;
      25: invokevirtual #26                 // Method javafx/beans/property/MapPropertyBase$EmptyProperty.fireValueChangedEvent:()V
      28: return

  private void markInvalid(javafx.collections.ObservableMap<K, V>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field valid:Z
       4: ifeq          38
       7: aload_1
       8: ifnull        21
      11: aload_1
      12: aload_0
      13: getfield      #5                  // Field mapChangeListener:Ljavafx/collections/MapChangeListener;
      16: invokeinterface #27,  2           // InterfaceMethod javafx/collections/ObservableMap.removeListener:(Ljavafx/collections/MapChangeListener;)V
      21: aload_0
      22: iconst_0
      23: putfield      #8                  // Field valid:Z
      26: aload_0
      27: invokespecial #28                 // Method invalidateProperties:()V
      30: aload_0
      31: invokevirtual #29                 // Method invalidated:()V
      34: aload_0
      35: invokevirtual #30                 // Method fireValueChangedEvent:()V
      38: return

  protected void invalidated();
    Code:
       0: return

  public javafx.collections.ObservableMap<K, V> get();
    Code:
       0: aload_0
       1: getfield      #8                  // Field valid:Z
       4: ifne          62
       7: aload_0
       8: aload_0
       9: getfield      #6                  // Field observable:Ljavafx/beans/value/ObservableValue;
      12: ifnonnull     22
      15: aload_0
      16: getfield      #2                  // Field value:Ljavafx/collections/ObservableMap;
      19: goto          34
      22: aload_0
      23: getfield      #6                  // Field observable:Ljavafx/beans/value/ObservableValue;
      26: invokeinterface #31,  1           // InterfaceMethod javafx/beans/value/ObservableValue.getValue:()Ljava/lang/Object;
      31: checkcast     #32                 // class javafx/collections/ObservableMap
      34: putfield      #2                  // Field value:Ljavafx/collections/ObservableMap;
      37: aload_0
      38: iconst_1
      39: putfield      #8                  // Field valid:Z
      42: aload_0
      43: getfield      #2                  // Field value:Ljavafx/collections/ObservableMap;
      46: ifnull        62
      49: aload_0
      50: getfield      #2                  // Field value:Ljavafx/collections/ObservableMap;
      53: aload_0
      54: getfield      #5                  // Field mapChangeListener:Ljavafx/collections/MapChangeListener;
      57: invokeinterface #10,  2           // InterfaceMethod javafx/collections/ObservableMap.addListener:(Ljavafx/collections/MapChangeListener;)V
      62: aload_0
      63: getfield      #2                  // Field value:Ljavafx/collections/ObservableMap;
      66: areturn

  public void set(javafx.collections.ObservableMap<K, V>);
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method isBound:()Z
       4: ifeq          58
       7: new           #34                 // class java/lang/RuntimeException
      10: dup
      11: aload_0
      12: invokevirtual #35                 // Method getBean:()Ljava/lang/Object;
      15: ifnull        47
      18: aload_0
      19: invokevirtual #36                 // Method getName:()Ljava/lang/String;
      22: ifnull        47
      25: aload_0
      26: invokevirtual #35                 // Method getBean:()Ljava/lang/Object;
      29: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      32: invokevirtual #38                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      35: aload_0
      36: invokevirtual #36                 // Method getName:()Ljava/lang/String;
      39: invokedynamic #39,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      44: goto          49
      47: ldc           #40                 // String
      49: invokedynamic #41,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      54: invokespecial #42                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload_0
      59: getfield      #2                  // Field value:Ljavafx/collections/ObservableMap;
      62: aload_1
      63: if_acmpeq     81
      66: aload_0
      67: getfield      #2                  // Field value:Ljavafx/collections/ObservableMap;
      70: astore_2
      71: aload_0
      72: aload_1
      73: putfield      #2                  // Field value:Ljavafx/collections/ObservableMap;
      76: aload_0
      77: aload_2
      78: invokespecial #1                  // Method markInvalid:(Ljavafx/collections/ObservableMap;)V
      81: return

  public boolean isBound();
    Code:
       0: aload_0
       1: getfield      #6                  // Field observable:Ljavafx/beans/value/ObservableValue;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void bind(javafx.beans.value.ObservableValue<? extends javafx.collections.ObservableMap<K, V>>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #43                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #44                 // String Cannot bind to null
      10: invokespecial #45                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: aload_0
      16: getfield      #6                  // Field observable:Ljavafx/beans/value/ObservableValue;
      19: invokevirtual #46                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      22: ifne          74
      25: aload_0
      26: invokevirtual #47                 // Method unbind:()V
      29: aload_0
      30: aload_1
      31: putfield      #6                  // Field observable:Ljavafx/beans/value/ObservableValue;
      34: aload_0
      35: getfield      #7                  // Field listener:Ljavafx/beans/InvalidationListener;
      38: ifnonnull     53
      41: aload_0
      42: new           #48                 // class javafx/beans/property/MapPropertyBase$Listener
      45: dup
      46: aload_0
      47: invokespecial #49                 // Method javafx/beans/property/MapPropertyBase$Listener."<init>":(Ljavafx/beans/property/MapPropertyBase;)V
      50: putfield      #7                  // Field listener:Ljavafx/beans/InvalidationListener;
      53: aload_0
      54: getfield      #6                  // Field observable:Ljavafx/beans/value/ObservableValue;
      57: aload_0
      58: getfield      #7                  // Field listener:Ljavafx/beans/InvalidationListener;
      61: invokeinterface #50,  2           // InterfaceMethod javafx/beans/value/ObservableValue.addListener:(Ljavafx/beans/InvalidationListener;)V
      66: aload_0
      67: aload_0
      68: getfield      #2                  // Field value:Ljavafx/collections/ObservableMap;
      71: invokespecial #1                  // Method markInvalid:(Ljavafx/collections/ObservableMap;)V
      74: return

  public void unbind();
    Code:
       0: aload_0
       1: getfield      #6                  // Field observable:Ljavafx/beans/value/ObservableValue;
       4: ifnull        41
       7: aload_0
       8: aload_0
       9: getfield      #6                  // Field observable:Ljavafx/beans/value/ObservableValue;
      12: invokeinterface #31,  1           // InterfaceMethod javafx/beans/value/ObservableValue.getValue:()Ljava/lang/Object;
      17: checkcast     #32                 // class javafx/collections/ObservableMap
      20: putfield      #2                  // Field value:Ljavafx/collections/ObservableMap;
      23: aload_0
      24: getfield      #6                  // Field observable:Ljavafx/beans/value/ObservableValue;
      27: aload_0
      28: getfield      #7                  // Field listener:Ljavafx/beans/InvalidationListener;
      31: invokeinterface #51,  2           // InterfaceMethod javafx/beans/value/ObservableValue.removeListener:(Ljavafx/beans/InvalidationListener;)V
      36: aload_0
      37: aconst_null
      38: putfield      #6                  // Field observable:Ljavafx/beans/value/ObservableValue;
      41: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method getBean:()Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: invokevirtual #36                 // Method getName:()Ljava/lang/String;
       9: astore_2
      10: new           #52                 // class java/lang/StringBuilder
      13: dup
      14: ldc           #53                 // String MapProperty [
      16: invokespecial #54                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      19: astore_3
      20: aload_1
      21: ifnull        40
      24: aload_3
      25: ldc           #55                 // String bean:
      27: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: ldc           #58                 // String ,
      36: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: pop
      40: aload_2
      41: ifnull        69
      44: aload_2
      45: ldc           #40                 // String
      47: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      50: ifne          69
      53: aload_3
      54: ldc           #60                 // String name:
      56: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_2
      60: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: ldc           #58                 // String ,
      65: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: pop
      69: aload_0
      70: invokevirtual #33                 // Method isBound:()Z
      73: ifeq          117
      76: aload_3
      77: ldc           #61                 // String bound,
      79: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: pop
      83: aload_0
      84: getfield      #8                  // Field valid:Z
      87: ifeq          107
      90: aload_3
      91: ldc           #62                 // String value:
      93: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: invokevirtual #63                 // Method get:()Ljavafx/collections/ObservableMap;
     100: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     103: pop
     104: goto          131
     107: aload_3
     108: ldc           #64                 // String invalid
     110: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: pop
     114: goto          131
     117: aload_3
     118: ldc           #62                 // String value:
     120: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload_0
     124: invokevirtual #63                 // Method get:()Ljavafx/collections/ObservableMap;
     127: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     130: pop
     131: aload_3
     132: ldc           #65                 // String ]
     134: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: pop
     138: aload_3
     139: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     142: areturn

  public void set(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #32                 // class javafx/collections/ObservableMap
       5: invokevirtual #67                 // Method set:(Ljavafx/collections/ObservableMap;)V
       8: return

  public java.lang.Object get();
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method get:()Ljavafx/collections/ObservableMap;
       4: areturn

  private void lambda$new$0(javafx.collections.MapChangeListener$Change);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method invalidateProperties:()V
       4: aload_0
       5: invokevirtual #29                 // Method invalidated:()V
       8: aload_0
       9: aload_1
      10: invokevirtual #68                 // Method fireValueChangedEvent:(Ljavafx/collections/MapChangeListener$Change;)V
      13: return

  static javafx.collections.ObservableMap access$200(javafx.beans.property.MapPropertyBase);
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Ljavafx/collections/ObservableMap;
       4: areturn

  static void access$300(javafx.beans.property.MapPropertyBase, javafx.collections.ObservableMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method markInvalid:(Ljavafx/collections/ObservableMap;)V
       5: return
}
