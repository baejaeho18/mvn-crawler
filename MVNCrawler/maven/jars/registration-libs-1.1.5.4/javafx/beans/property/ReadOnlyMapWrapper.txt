Compiled from "ReadOnlyMapWrapper.java"
public class javafx.beans.property.ReadOnlyMapWrapper<K, V> extends javafx.beans.property.SimpleMapProperty<K, V> {
  private javafx.beans.property.ReadOnlyMapWrapper<K, V>.ReadOnlyPropertyImpl readOnlyProperty;

  public javafx.beans.property.ReadOnlyMapWrapper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javafx/beans/property/SimpleMapProperty."<init>":()V
       4: return

  public javafx.beans.property.ReadOnlyMapWrapper(javafx.collections.ObservableMap<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method javafx/beans/property/SimpleMapProperty."<init>":(Ljavafx/collections/ObservableMap;)V
       5: return

  public javafx.beans.property.ReadOnlyMapWrapper(java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #3                  // Method javafx/beans/property/SimpleMapProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
       6: return

  public javafx.beans.property.ReadOnlyMapWrapper(java.lang.Object, java.lang.String, javafx.collections.ObservableMap<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #4                  // Method javafx/beans/property/SimpleMapProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljavafx/collections/ObservableMap;)V
       7: return

  public javafx.beans.property.ReadOnlyMapProperty<K, V> getReadOnlyProperty();
    Code:
       0: aload_0
       1: getfield      #5                  // Field readOnlyProperty:Ljavafx/beans/property/ReadOnlyMapWrapper$ReadOnlyPropertyImpl;
       4: ifnonnull     20
       7: aload_0
       8: new           #6                  // class javafx/beans/property/ReadOnlyMapWrapper$ReadOnlyPropertyImpl
      11: dup
      12: aload_0
      13: aconst_null
      14: invokespecial #7                  // Method javafx/beans/property/ReadOnlyMapWrapper$ReadOnlyPropertyImpl."<init>":(Ljavafx/beans/property/ReadOnlyMapWrapper;Ljavafx/beans/property/ReadOnlyMapWrapper$1;)V
      17: putfield      #5                  // Field readOnlyProperty:Ljavafx/beans/property/ReadOnlyMapWrapper$ReadOnlyPropertyImpl;
      20: aload_0
      21: getfield      #5                  // Field readOnlyProperty:Ljavafx/beans/property/ReadOnlyMapWrapper$ReadOnlyPropertyImpl;
      24: areturn

  protected void fireValueChangedEvent();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method javafx/beans/property/SimpleMapProperty.fireValueChangedEvent:()V
       4: aload_0
       5: getfield      #5                  // Field readOnlyProperty:Ljavafx/beans/property/ReadOnlyMapWrapper$ReadOnlyPropertyImpl;
       8: ifnull        18
      11: aload_0
      12: getfield      #5                  // Field readOnlyProperty:Ljavafx/beans/property/ReadOnlyMapWrapper$ReadOnlyPropertyImpl;
      15: invokevirtual #9                  // Method javafx/beans/property/ReadOnlyMapWrapper$ReadOnlyPropertyImpl.fireValueChangedEvent:()V
      18: return

  protected void fireValueChangedEvent(javafx.collections.MapChangeListener$Change<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method javafx/beans/property/SimpleMapProperty.fireValueChangedEvent:(Ljavafx/collections/MapChangeListener$Change;)V
       5: aload_0
       6: getfield      #5                  // Field readOnlyProperty:Ljavafx/beans/property/ReadOnlyMapWrapper$ReadOnlyPropertyImpl;
       9: ifnull        20
      12: aload_0
      13: getfield      #5                  // Field readOnlyProperty:Ljavafx/beans/property/ReadOnlyMapWrapper$ReadOnlyPropertyImpl;
      16: aload_1
      17: invokevirtual #11                 // Method javafx/beans/property/ReadOnlyMapWrapper$ReadOnlyPropertyImpl.fireValueChangedEvent:(Ljavafx/collections/MapChangeListener$Change;)V
      20: return
}
