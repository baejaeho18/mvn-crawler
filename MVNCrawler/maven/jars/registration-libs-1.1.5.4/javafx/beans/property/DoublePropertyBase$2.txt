Compiled from "DoublePropertyBase.java"
class javafx.beans.property.DoublePropertyBase$2 extends javafx.beans.property.DoublePropertyBase$ValueWrapper {
  final javafx.beans.value.ObservableValue val$rawObservable;

  final javafx.beans.property.DoublePropertyBase this$0;

  javafx.beans.property.DoublePropertyBase$2(javafx.beans.property.DoublePropertyBase, javafx.beans.value.ObservableValue, javafx.beans.value.ObservableValue);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Ljavafx/beans/property/DoublePropertyBase;
       5: aload_0
       6: aload_3
       7: putfield      #2                  // Field val$rawObservable:Ljavafx/beans/value/ObservableValue;
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokespecial #3                  // Method javafx/beans/property/DoublePropertyBase$ValueWrapper."<init>":(Ljavafx/beans/property/DoublePropertyBase;Ljavafx/beans/value/ObservableValue;)V
      16: return

  protected double computeValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$rawObservable:Ljavafx/beans/value/ObservableValue;
       4: invokeinterface #4,  1            // InterfaceMethod javafx/beans/value/ObservableValue.getValue:()Ljava/lang/Object;
       9: checkcast     #5                  // class java/lang/Number
      12: astore_1
      13: aload_1
      14: ifnonnull     21
      17: dconst_0
      18: goto          25
      21: aload_1
      22: invokevirtual #6                  // Method java/lang/Number.doubleValue:()D
      25: dreturn
}
