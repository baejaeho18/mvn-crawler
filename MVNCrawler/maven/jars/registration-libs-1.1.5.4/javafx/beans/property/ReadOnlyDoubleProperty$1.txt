Compiled from "ReadOnlyDoubleProperty.java"
class javafx.beans.property.ReadOnlyDoubleProperty$1 extends javafx.beans.property.ReadOnlyDoublePropertyBase {
  private boolean valid;

  private final javafx.beans.InvalidationListener listener;

  final javafx.beans.property.ReadOnlyProperty val$property;

  javafx.beans.property.ReadOnlyDoubleProperty$1(javafx.beans.property.ReadOnlyProperty);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$property:Ljavafx/beans/property/ReadOnlyProperty;
       5: aload_0
       6: invokespecial #2                  // Method javafx/beans/property/ReadOnlyDoublePropertyBase."<init>":()V
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field valid:Z
      14: aload_0
      15: aload_0
      16: invokedynamic #4,  0              // InvokeDynamic #0:invalidated:(Ljavafx/beans/property/ReadOnlyDoubleProperty$1;)Ljavafx/beans/InvalidationListener;
      21: putfield      #5                  // Field listener:Ljavafx/beans/InvalidationListener;
      24: aload_0
      25: getfield      #1                  // Field val$property:Ljavafx/beans/property/ReadOnlyProperty;
      28: new           #6                  // class javafx/beans/WeakInvalidationListener
      31: dup
      32: aload_0
      33: getfield      #5                  // Field listener:Ljavafx/beans/InvalidationListener;
      36: invokespecial #7                  // Method javafx/beans/WeakInvalidationListener."<init>":(Ljavafx/beans/InvalidationListener;)V
      39: invokeinterface #8,  2            // InterfaceMethod javafx/beans/property/ReadOnlyProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
      44: return

  public double get();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field valid:Z
       5: aload_0
       6: getfield      #1                  // Field val$property:Ljavafx/beans/property/ReadOnlyProperty;
       9: invokeinterface #9,  1            // InterfaceMethod javafx/beans/property/ReadOnlyProperty.getValue:()Ljava/lang/Object;
      14: checkcast     #10                 // class java/lang/Number
      17: astore_1
      18: aload_1
      19: ifnonnull     26
      22: dconst_0
      23: goto          30
      26: aload_1
      27: invokevirtual #11                 // Method java/lang/Number.doubleValue:()D
      30: dreturn

  public java.lang.Object getBean();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$property:Ljavafx/beans/property/ReadOnlyProperty;
       4: invokeinterface #12,  1           // InterfaceMethod javafx/beans/property/ReadOnlyProperty.getName:()Ljava/lang/String;
       9: areturn

  private void lambda$$0(javafx.beans.Observable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field valid:Z
       4: ifeq          16
       7: aload_0
       8: iconst_0
       9: putfield      #3                  // Field valid:Z
      12: aload_0
      13: invokevirtual #13                 // Method fireValueChangedEvent:()V
      16: return
}
