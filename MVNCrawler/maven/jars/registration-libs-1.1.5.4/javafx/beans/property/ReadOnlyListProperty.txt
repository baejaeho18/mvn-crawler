Compiled from "ReadOnlyListProperty.java"
public abstract class javafx.beans.property.ReadOnlyListProperty<E> extends javafx.beans.binding.ListExpression<E> implements javafx.beans.property.ReadOnlyProperty<javafx.collections.ObservableList<E>> {
  public javafx.beans.property.ReadOnlyListProperty();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javafx/beans/binding/ListExpression."<init>":()V
       4: return

  public void bindContentBidirectional(javafx.collections.ObservableList<E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method javafx/beans/binding/Bindings.bindContentBidirectional:(Ljavafx/collections/ObservableList;Ljavafx/collections/ObservableList;)V
       5: return

  public void unbindContentBidirectional(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method javafx/beans/binding/Bindings.unbindContentBidirectional:(Ljava/lang/Object;Ljava/lang/Object;)V
       5: return

  public void bindContent(javafx.collections.ObservableList<E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #4                  // Method javafx/beans/binding/Bindings.bindContent:(Ljava/util/List;Ljavafx/collections/ObservableList;)V
       5: return

  public void unbindContent(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method javafx/beans/binding/Bindings.unbindContent:(Ljava/lang/Object;Ljava/lang/Object;)V
       5: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #6                  // class java/util/List
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #6                  // class java/util/List
      20: astore_2
      21: aload_0
      22: invokevirtual #7                  // Method size:()I
      25: aload_2
      26: invokeinterface #8,  1            // InterfaceMethod java/util/List.size:()I
      31: if_icmpeq     36
      34: iconst_0
      35: ireturn
      36: aload_0
      37: invokevirtual #9                  // Method listIterator:()Ljava/util/ListIterator;
      40: astore_3
      41: aload_2
      42: invokeinterface #10,  1           // InterfaceMethod java/util/List.listIterator:()Ljava/util/ListIterator;
      47: astore        4
      49: aload_3
      50: invokeinterface #11,  1           // InterfaceMethod java/util/ListIterator.hasNext:()Z
      55: ifeq          113
      58: aload         4
      60: invokeinterface #11,  1           // InterfaceMethod java/util/ListIterator.hasNext:()Z
      65: ifeq          113
      68: aload_3
      69: invokeinterface #12,  1           // InterfaceMethod java/util/ListIterator.next:()Ljava/lang/Object;
      74: astore        5
      76: aload         4
      78: invokeinterface #12,  1           // InterfaceMethod java/util/ListIterator.next:()Ljava/lang/Object;
      83: astore        6
      85: aload         5
      87: ifnonnull     98
      90: aload         6
      92: ifnonnull     108
      95: goto          110
      98: aload         5
     100: aload         6
     102: invokevirtual #13                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     105: ifne          110
     108: iconst_0
     109: ireturn
     110: goto          49
     113: iconst_1
     114: ireturn

  public int hashCode();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: invokevirtual #14                 // Method iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          44
      16: aload_2
      17: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: astore_3
      23: bipush        31
      25: iload_1
      26: imul
      27: aload_3
      28: ifnonnull     35
      31: iconst_0
      32: goto          39
      35: aload_3
      36: invokevirtual #17                 // Method java/lang/Object.hashCode:()I
      39: iadd
      40: istore_1
      41: goto          7
      44: iload_1
      45: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getBean:()Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: invokevirtual #19                 // Method getName:()Ljava/lang/String;
       9: astore_2
      10: new           #20                 // class java/lang/StringBuilder
      13: dup
      14: ldc           #21                 // String ReadOnlyListProperty [
      16: invokespecial #22                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      19: astore_3
      20: aload_1
      21: ifnull        40
      24: aload_3
      25: ldc           #23                 // String bean:
      27: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: ldc           #26                 // String ,
      36: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: pop
      40: aload_2
      41: ifnull        69
      44: aload_2
      45: ldc           #27                 // String
      47: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      50: ifne          69
      53: aload_3
      54: ldc           #29                 // String name:
      56: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_2
      60: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: ldc           #26                 // String ,
      65: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: pop
      69: aload_3
      70: ldc           #30                 // String value:
      72: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_0
      76: invokevirtual #31                 // Method get:()Ljava/lang/Object;
      79: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      82: ldc           #32                 // String ]
      84: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: pop
      88: aload_3
      89: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: areturn
}
