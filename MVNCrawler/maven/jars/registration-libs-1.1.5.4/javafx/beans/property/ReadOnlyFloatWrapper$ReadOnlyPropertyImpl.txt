Compiled from "ReadOnlyFloatWrapper.java"
class javafx.beans.property.ReadOnlyFloatWrapper$ReadOnlyPropertyImpl extends javafx.beans.property.ReadOnlyFloatPropertyBase {
  final javafx.beans.property.ReadOnlyFloatWrapper this$0;

  private javafx.beans.property.ReadOnlyFloatWrapper$ReadOnlyPropertyImpl(javafx.beans.property.ReadOnlyFloatWrapper);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Ljavafx/beans/property/ReadOnlyFloatWrapper;
       5: aload_0
       6: invokespecial #3                  // Method javafx/beans/property/ReadOnlyFloatPropertyBase."<init>":()V
       9: return

  public float get();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Ljavafx/beans/property/ReadOnlyFloatWrapper;
       4: invokevirtual #4                  // Method javafx/beans/property/ReadOnlyFloatWrapper.get:()F
       7: freturn

  public java.lang.Object getBean();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Ljavafx/beans/property/ReadOnlyFloatWrapper;
       4: invokevirtual #5                  // Method javafx/beans/property/ReadOnlyFloatWrapper.getBean:()Ljava/lang/Object;
       7: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Ljavafx/beans/property/ReadOnlyFloatWrapper;
       4: invokevirtual #6                  // Method javafx/beans/property/ReadOnlyFloatWrapper.getName:()Ljava/lang/String;
       7: areturn

  javafx.beans.property.ReadOnlyFloatWrapper$ReadOnlyPropertyImpl(javafx.beans.property.ReadOnlyFloatWrapper, javafx.beans.property.ReadOnlyFloatWrapper$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Ljavafx/beans/property/ReadOnlyFloatWrapper;)V
       5: return
}
