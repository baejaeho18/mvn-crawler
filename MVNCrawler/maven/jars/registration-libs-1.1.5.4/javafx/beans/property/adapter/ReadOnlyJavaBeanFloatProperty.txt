Compiled from "ReadOnlyJavaBeanFloatProperty.java"
public final class javafx.beans.property.adapter.ReadOnlyJavaBeanFloatProperty extends javafx.beans.property.ReadOnlyFloatPropertyBase implements javafx.beans.property.adapter.ReadOnlyJavaBeanProperty<java.lang.Number> {
  private final com.sun.javafx.property.adapter.ReadOnlyPropertyDescriptor descriptor;

  private final com.sun.javafx.property.adapter.ReadOnlyPropertyDescriptor$ReadOnlyListener<java.lang.Number> listener;

  private final java.security.AccessControlContext acc;

  javafx.beans.property.adapter.ReadOnlyJavaBeanFloatProperty(com.sun.javafx.property.adapter.ReadOnlyPropertyDescriptor, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javafx/beans/property/ReadOnlyFloatPropertyBase."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/security/AccessController.getContext:()Ljava/security/AccessControlContext;
       8: putfield      #3                  // Field acc:Ljava/security/AccessControlContext;
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field descriptor:Lcom/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor;
      16: aload_0
      17: new           #5                  // class com/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor$ReadOnlyListener
      20: dup
      21: aload_1
      22: dup
      23: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: aload_2
      28: aload_0
      29: invokespecial #7                  // Method com/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor$ReadOnlyListener."<init>":(Lcom/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor;Ljava/lang/Object;Ljavafx/beans/property/adapter/ReadOnlyJavaBeanProperty;)V
      32: putfield      #8                  // Field listener:Lcom/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor$ReadOnlyListener;
      35: aload_1
      36: aload_0
      37: getfield      #8                  // Field listener:Lcom/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor$ReadOnlyListener;
      40: invokevirtual #9                  // Method com/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor.addListener:(Lcom/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor$ReadOnlyListener;)V
      43: aload_0
      44: new           #10                 // class javafx/beans/property/adapter/DescriptorListenerCleaner
      47: dup
      48: aload_1
      49: aload_0
      50: getfield      #8                  // Field listener:Lcom/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor$ReadOnlyListener;
      53: invokespecial #11                 // Method javafx/beans/property/adapter/DescriptorListenerCleaner."<init>":(Lcom/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor;Lcom/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor$ReadOnlyListener;)V
      56: invokestatic  #12                 // Method com/sun/javafx/property/adapter/Disposer.addRecord:(Ljava/lang/Object;Ljava/lang/Runnable;)V
      59: return

  public float get();
    Code:
       0: aload_0
       1: invokedynamic #13,  0             // InvokeDynamic #0:run:(Ljavafx/beans/property/adapter/ReadOnlyJavaBeanFloatProperty;)Ljava/security/PrivilegedAction;
       6: aload_0
       7: getfield      #3                  // Field acc:Ljava/security/AccessControlContext;
      10: invokestatic  #14                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
      13: checkcast     #15                 // class java/lang/Float
      16: invokevirtual #16                 // Method java/lang/Float.floatValue:()F
      19: freturn

  public java.lang.Object getBean();
    Code:
       0: aload_0
       1: getfield      #8                  // Field listener:Lcom/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor$ReadOnlyListener;
       4: invokevirtual #17                 // Method com/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor$ReadOnlyListener.getBean:()Ljava/lang/Object;
       7: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field descriptor:Lcom/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor;
       4: invokevirtual #18                 // Method com/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor.getName:()Ljava/lang/String;
       7: areturn

  public void fireValueChangedEvent();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method javafx/beans/property/ReadOnlyFloatPropertyBase.fireValueChangedEvent:()V
       4: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #4                  // Field descriptor:Lcom/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor;
       4: aload_0
       5: getfield      #8                  // Field listener:Lcom/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor$ReadOnlyListener;
       8: invokevirtual #20                 // Method com/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor.removeListener:(Lcom/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor$ReadOnlyListener;)V
      11: return

  private java.lang.Float lambda$get$0();
    Code:
       0: aload_0
       1: getfield      #4                  // Field descriptor:Lcom/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor;
       4: invokevirtual #21                 // Method com/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor.getGetter:()Ljava/lang/reflect/Method;
       7: aload_0
       8: invokevirtual #22                 // Method getBean:()Ljava/lang/Object;
      11: aconst_null
      12: checkcast     #23                 // class "[Ljava/lang/Object;"
      15: invokestatic  #24                 // Method com/sun/javafx/property/MethodHelper.invoke:(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #25                 // class java/lang/Number
      21: invokevirtual #26                 // Method java/lang/Number.floatValue:()F
      24: invokestatic  #27                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      27: areturn
      28: astore_1
      29: new           #29                 // class java/lang/reflect/UndeclaredThrowableException
      32: dup
      33: aload_1
      34: invokespecial #30                 // Method java/lang/reflect/UndeclaredThrowableException."<init>":(Ljava/lang/Throwable;)V
      37: athrow
      38: astore_1
      39: new           #29                 // class java/lang/reflect/UndeclaredThrowableException
      42: dup
      43: aload_1
      44: invokespecial #30                 // Method java/lang/reflect/UndeclaredThrowableException."<init>":(Ljava/lang/Throwable;)V
      47: athrow
    Exception table:
       from    to  target type
           0    27    28   Class java/lang/IllegalAccessException
           0    27    38   Class java/lang/reflect/InvocationTargetException
}
