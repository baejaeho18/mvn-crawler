Compiled from "FloatPropertyBase.java"
public abstract class javafx.beans.property.FloatPropertyBase extends javafx.beans.property.FloatProperty {
  private float value;

  private javafx.beans.value.ObservableFloatValue observable;

  private javafx.beans.InvalidationListener listener;

  private boolean valid;

  private com.sun.javafx.binding.ExpressionHelper<java.lang.Number> helper;

  public javafx.beans.property.FloatPropertyBase();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method javafx/beans/property/FloatProperty."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field observable:Ljavafx/beans/value/ObservableFloatValue;
       9: aload_0
      10: aconst_null
      11: putfield      #4                  // Field listener:Ljavafx/beans/InvalidationListener;
      14: aload_0
      15: iconst_1
      16: putfield      #5                  // Field valid:Z
      19: aload_0
      20: aconst_null
      21: putfield      #6                  // Field helper:Lcom/sun/javafx/binding/ExpressionHelper;
      24: return

  public javafx.beans.property.FloatPropertyBase(float);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method javafx/beans/property/FloatProperty."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field observable:Ljavafx/beans/value/ObservableFloatValue;
       9: aload_0
      10: aconst_null
      11: putfield      #4                  // Field listener:Ljavafx/beans/InvalidationListener;
      14: aload_0
      15: iconst_1
      16: putfield      #5                  // Field valid:Z
      19: aload_0
      20: aconst_null
      21: putfield      #6                  // Field helper:Lcom/sun/javafx/binding/ExpressionHelper;
      24: aload_0
      25: fload_1
      26: putfield      #7                  // Field value:F
      29: return

  public void addListener(javafx.beans.InvalidationListener);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field helper:Lcom/sun/javafx/binding/ExpressionHelper;
       5: aload_0
       6: aload_1
       7: invokestatic  #8                  // Method com/sun/javafx/binding/ExpressionHelper.addListener:(Lcom/sun/javafx/binding/ExpressionHelper;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/InvalidationListener;)Lcom/sun/javafx/binding/ExpressionHelper;
      10: putfield      #6                  // Field helper:Lcom/sun/javafx/binding/ExpressionHelper;
      13: return

  public void removeListener(javafx.beans.InvalidationListener);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field helper:Lcom/sun/javafx/binding/ExpressionHelper;
       5: aload_1
       6: invokestatic  #9                  // Method com/sun/javafx/binding/ExpressionHelper.removeListener:(Lcom/sun/javafx/binding/ExpressionHelper;Ljavafx/beans/InvalidationListener;)Lcom/sun/javafx/binding/ExpressionHelper;
       9: putfield      #6                  // Field helper:Lcom/sun/javafx/binding/ExpressionHelper;
      12: return

  public void addListener(javafx.beans.value.ChangeListener<? super java.lang.Number>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field helper:Lcom/sun/javafx/binding/ExpressionHelper;
       5: aload_0
       6: aload_1
       7: invokestatic  #10                 // Method com/sun/javafx/binding/ExpressionHelper.addListener:(Lcom/sun/javafx/binding/ExpressionHelper;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ChangeListener;)Lcom/sun/javafx/binding/ExpressionHelper;
      10: putfield      #6                  // Field helper:Lcom/sun/javafx/binding/ExpressionHelper;
      13: return

  public void removeListener(javafx.beans.value.ChangeListener<? super java.lang.Number>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field helper:Lcom/sun/javafx/binding/ExpressionHelper;
       5: aload_1
       6: invokestatic  #11                 // Method com/sun/javafx/binding/ExpressionHelper.removeListener:(Lcom/sun/javafx/binding/ExpressionHelper;Ljavafx/beans/value/ChangeListener;)Lcom/sun/javafx/binding/ExpressionHelper;
       9: putfield      #6                  // Field helper:Lcom/sun/javafx/binding/ExpressionHelper;
      12: return

  protected void fireValueChangedEvent();
    Code:
       0: aload_0
       1: getfield      #6                  // Field helper:Lcom/sun/javafx/binding/ExpressionHelper;
       4: invokestatic  #12                 // Method com/sun/javafx/binding/ExpressionHelper.fireValueChangedEvent:(Lcom/sun/javafx/binding/ExpressionHelper;)V
       7: return

  private void markInvalid();
    Code:
       0: aload_0
       1: getfield      #5                  // Field valid:Z
       4: ifeq          20
       7: aload_0
       8: iconst_0
       9: putfield      #5                  // Field valid:Z
      12: aload_0
      13: invokevirtual #13                 // Method invalidated:()V
      16: aload_0
      17: invokevirtual #14                 // Method fireValueChangedEvent:()V
      20: return

  protected void invalidated();
    Code:
       0: return

  public float get();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field valid:Z
       5: aload_0
       6: getfield      #3                  // Field observable:Ljavafx/beans/value/ObservableFloatValue;
       9: ifnonnull     19
      12: aload_0
      13: getfield      #7                  // Field value:F
      16: goto          28
      19: aload_0
      20: getfield      #3                  // Field observable:Ljavafx/beans/value/ObservableFloatValue;
      23: invokeinterface #15,  1           // InterfaceMethod javafx/beans/value/ObservableFloatValue.get:()F
      28: freturn

  public void set(float);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method isBound:()Z
       4: ifeq          58
       7: new           #17                 // class java/lang/RuntimeException
      10: dup
      11: aload_0
      12: invokevirtual #18                 // Method getBean:()Ljava/lang/Object;
      15: ifnull        47
      18: aload_0
      19: invokevirtual #19                 // Method getName:()Ljava/lang/String;
      22: ifnull        47
      25: aload_0
      26: invokevirtual #18                 // Method getBean:()Ljava/lang/Object;
      29: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      32: invokevirtual #21                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      35: aload_0
      36: invokevirtual #19                 // Method getName:()Ljava/lang/String;
      39: invokedynamic #22,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      44: goto          49
      47: ldc           #23                 // String
      49: invokedynamic #24,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      54: invokespecial #25                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload_0
      59: getfield      #7                  // Field value:F
      62: fload_1
      63: fcmpl
      64: ifeq          76
      67: aload_0
      68: fload_1
      69: putfield      #7                  // Field value:F
      72: aload_0
      73: invokespecial #1                  // Method markInvalid:()V
      76: return

  public boolean isBound();
    Code:
       0: aload_0
       1: getfield      #3                  // Field observable:Ljavafx/beans/value/ObservableFloatValue;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void bind(javafx.beans.value.ObservableValue<? extends java.lang.Number>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #26                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #27                 // String Cannot bind to null
      10: invokespecial #28                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: instanceof    #29                 // class javafx/beans/value/ObservableFloatValue
      18: ifeq          29
      21: aload_1
      22: checkcast     #29                 // class javafx/beans/value/ObservableFloatValue
      25: astore_2
      26: goto          66
      29: aload_1
      30: instanceof    #30                 // class javafx/beans/value/ObservableNumberValue
      33: ifeq          55
      36: aload_1
      37: checkcast     #30                 // class javafx/beans/value/ObservableNumberValue
      40: astore_3
      41: new           #31                 // class javafx/beans/property/FloatPropertyBase$1
      44: dup
      45: aload_0
      46: aload_1
      47: aload_3
      48: invokespecial #32                 // Method javafx/beans/property/FloatPropertyBase$1."<init>":(Ljavafx/beans/property/FloatPropertyBase;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableNumberValue;)V
      51: astore_2
      52: goto          66
      55: new           #33                 // class javafx/beans/property/FloatPropertyBase$2
      58: dup
      59: aload_0
      60: aload_1
      61: aload_1
      62: invokespecial #34                 // Method javafx/beans/property/FloatPropertyBase$2."<init>":(Ljavafx/beans/property/FloatPropertyBase;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)V
      65: astore_2
      66: aload_2
      67: aload_0
      68: getfield      #3                  // Field observable:Ljavafx/beans/value/ObservableFloatValue;
      71: invokevirtual #35                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      74: ifne          122
      77: aload_0
      78: invokevirtual #36                 // Method unbind:()V
      81: aload_0
      82: aload_2
      83: putfield      #3                  // Field observable:Ljavafx/beans/value/ObservableFloatValue;
      86: aload_0
      87: getfield      #4                  // Field listener:Ljavafx/beans/InvalidationListener;
      90: ifnonnull     105
      93: aload_0
      94: new           #37                 // class javafx/beans/property/FloatPropertyBase$Listener
      97: dup
      98: aload_0
      99: invokespecial #38                 // Method javafx/beans/property/FloatPropertyBase$Listener."<init>":(Ljavafx/beans/property/FloatPropertyBase;)V
     102: putfield      #4                  // Field listener:Ljavafx/beans/InvalidationListener;
     105: aload_0
     106: getfield      #3                  // Field observable:Ljavafx/beans/value/ObservableFloatValue;
     109: aload_0
     110: getfield      #4                  // Field listener:Ljavafx/beans/InvalidationListener;
     113: invokeinterface #39,  2           // InterfaceMethod javafx/beans/value/ObservableFloatValue.addListener:(Ljavafx/beans/InvalidationListener;)V
     118: aload_0
     119: invokespecial #1                  // Method markInvalid:()V
     122: return

  public void unbind();
    Code:
       0: aload_0
       1: getfield      #3                  // Field observable:Ljavafx/beans/value/ObservableFloatValue;
       4: ifnull        58
       7: aload_0
       8: aload_0
       9: getfield      #3                  // Field observable:Ljavafx/beans/value/ObservableFloatValue;
      12: invokeinterface #15,  1           // InterfaceMethod javafx/beans/value/ObservableFloatValue.get:()F
      17: putfield      #7                  // Field value:F
      20: aload_0
      21: getfield      #3                  // Field observable:Ljavafx/beans/value/ObservableFloatValue;
      24: aload_0
      25: getfield      #4                  // Field listener:Ljavafx/beans/InvalidationListener;
      28: invokeinterface #40,  2           // InterfaceMethod javafx/beans/value/ObservableFloatValue.removeListener:(Ljavafx/beans/InvalidationListener;)V
      33: aload_0
      34: getfield      #3                  // Field observable:Ljavafx/beans/value/ObservableFloatValue;
      37: instanceof    #41                 // class javafx/beans/property/FloatPropertyBase$ValueWrapper
      40: ifeq          53
      43: aload_0
      44: getfield      #3                  // Field observable:Ljavafx/beans/value/ObservableFloatValue;
      47: checkcast     #41                 // class javafx/beans/property/FloatPropertyBase$ValueWrapper
      50: invokevirtual #42                 // Method javafx/beans/property/FloatPropertyBase$ValueWrapper.dispose:()V
      53: aload_0
      54: aconst_null
      55: putfield      #3                  // Field observable:Ljavafx/beans/value/ObservableFloatValue;
      58: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getBean:()Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: invokevirtual #19                 // Method getName:()Ljava/lang/String;
       9: astore_2
      10: new           #43                 // class java/lang/StringBuilder
      13: dup
      14: ldc           #44                 // String FloatProperty [
      16: invokespecial #45                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      19: astore_3
      20: aload_1
      21: ifnull        40
      24: aload_3
      25: ldc           #46                 // String bean:
      27: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: ldc           #49                 // String ,
      36: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: pop
      40: aload_2
      41: ifnull        69
      44: aload_2
      45: ldc           #23                 // String
      47: invokevirtual #50                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      50: ifne          69
      53: aload_3
      54: ldc           #51                 // String name:
      56: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_2
      60: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: ldc           #49                 // String ,
      65: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: pop
      69: aload_0
      70: invokevirtual #16                 // Method isBound:()Z
      73: ifeq          117
      76: aload_3
      77: ldc           #52                 // String bound,
      79: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: pop
      83: aload_0
      84: getfield      #5                  // Field valid:Z
      87: ifeq          107
      90: aload_3
      91: ldc           #53                 // String value:
      93: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: invokevirtual #54                 // Method get:()F
     100: invokevirtual #55                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
     103: pop
     104: goto          131
     107: aload_3
     108: ldc           #56                 // String invalid
     110: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: pop
     114: goto          131
     117: aload_3
     118: ldc           #53                 // String value:
     120: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload_0
     124: invokevirtual #54                 // Method get:()F
     127: invokevirtual #55                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
     130: pop
     131: aload_3
     132: ldc           #57                 // String ]
     134: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: pop
     138: aload_3
     139: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     142: areturn

  public void setValue(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #59                 // class java/lang/Number
       5: invokespecial #60                 // Method javafx/beans/property/FloatProperty.setValue:(Ljava/lang/Number;)V
       8: return

  public javafx.beans.property.ReadOnlyObjectProperty asObject();
    Code:
       0: aload_0
       1: invokespecial #61                 // Method javafx/beans/property/FloatProperty.asObject:()Ljavafx/beans/property/ObjectProperty;
       4: areturn

  public javafx.beans.binding.ObjectExpression asObject();
    Code:
       0: aload_0
       1: invokespecial #61                 // Method javafx/beans/property/FloatProperty.asObject:()Ljavafx/beans/property/ObjectProperty;
       4: areturn

  static void access$000(javafx.beans.property.FloatPropertyBase);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method markInvalid:()V
       4: return
}
