Compiled from "FXCollections.java"
class javafx.collections.FXCollections$CheckedObservableMap$CheckedEntrySet$CheckedEntry<K, V, T> implements java.util.Map$Entry<K, V> {
  private final java.util.Map$Entry<K, V> e;

  private final java.lang.Class<T> valueType;

  javafx.collections.FXCollections$CheckedObservableMap$CheckedEntrySet$CheckedEntry(java.util.Map$Entry<K, V>, java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field e:Ljava/util/Map$Entry;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field valueType:Ljava/lang/Class;
      14: return

  public K getKey();
    Code:
       0: aload_0
       1: getfield      #2                  // Field e:Ljava/util/Map$Entry;
       4: invokeinterface #4,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
       9: areturn

  public V getValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field e:Ljava/util/Map$Entry;
       4: invokeinterface #5,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
       9: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field e:Ljava/util/Map$Entry;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/Map$Entry.hashCode:()I
       9: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field e:Ljava/util/Map$Entry;
       4: invokevirtual #7                  // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public V setValue(V);
    Code:
       0: aload_1
       1: ifnull        28
       4: aload_0
       5: getfield      #3                  // Field valueType:Ljava/lang/Class;
       8: aload_1
       9: invokevirtual #8                  // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      12: ifne          28
      15: new           #9                  // class java/lang/ClassCastException
      18: dup
      19: aload_0
      20: aload_1
      21: invokespecial #10                 // Method badValueMsg:(Ljava/lang/Object;)Ljava/lang/String;
      24: invokespecial #11                 // Method java/lang/ClassCastException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: getfield      #2                  // Field e:Ljava/util/Map$Entry;
      32: aload_1
      33: invokeinterface #12,  2           // InterfaceMethod java/util/Map$Entry.setValue:(Ljava/lang/Object;)Ljava/lang/Object;
      38: areturn

  private java.lang.String badValueMsg(java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: aload_0
       5: getfield      #3                  // Field valueType:Ljava/lang/Class;
       8: invokedynamic #14,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/String;
      13: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #15                 // class java/util/Map$Entry
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: getfield      #2                  // Field e:Ljava/util/Map$Entry;
      20: new           #16                 // class java/util/AbstractMap$SimpleImmutableEntry
      23: dup
      24: aload_1
      25: checkcast     #15                 // class java/util/Map$Entry
      28: invokespecial #17                 // Method java/util/AbstractMap$SimpleImmutableEntry."<init>":(Ljava/util/Map$Entry;)V
      31: invokeinterface #18,  2           // InterfaceMethod java/util/Map$Entry.equals:(Ljava/lang/Object;)Z
      36: ireturn
}
