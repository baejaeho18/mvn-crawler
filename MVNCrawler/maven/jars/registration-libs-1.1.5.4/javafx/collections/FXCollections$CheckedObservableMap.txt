Compiled from "FXCollections.java"
class javafx.collections.FXCollections$CheckedObservableMap<K, V> extends java.util.AbstractMap<K, V> implements javafx.collections.ObservableMap<K, V> {
  private final javafx.collections.ObservableMap<K, V> backingMap;

  private final java.lang.Class<K> keyType;

  private final java.lang.Class<V> valueType;

  private com.sun.javafx.collections.MapListenerHelper listenerHelper;

  private final javafx.collections.MapChangeListener<K, V> listener;

  private transient java.util.Set<java.util.Map$Entry<K, V>> entrySet;

  javafx.collections.FXCollections$CheckedObservableMap(javafx.collections.ObservableMap<K, V>, java.lang.Class<K>, java.lang.Class<V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractMap."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field entrySet:Ljava/util/Set;
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field backingMap:Ljavafx/collections/ObservableMap;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field keyType:Ljava/lang/Class;
      19: aload_0
      20: aload_3
      21: putfield      #5                  // Field valueType:Ljava/lang/Class;
      24: aload_0
      25: aload_0
      26: invokedynamic #6,  0              // InvokeDynamic #0:onChanged:(Ljavafx/collections/FXCollections$CheckedObservableMap;)Ljavafx/collections/MapChangeListener;
      31: putfield      #7                  // Field listener:Ljavafx/collections/MapChangeListener;
      34: aload_0
      35: getfield      #3                  // Field backingMap:Ljavafx/collections/ObservableMap;
      38: new           #8                  // class javafx/collections/WeakMapChangeListener
      41: dup
      42: aload_0
      43: getfield      #7                  // Field listener:Ljavafx/collections/MapChangeListener;
      46: invokespecial #9                  // Method javafx/collections/WeakMapChangeListener."<init>":(Ljavafx/collections/MapChangeListener;)V
      49: invokeinterface #10,  2           // InterfaceMethod javafx/collections/ObservableMap.addListener:(Ljavafx/collections/MapChangeListener;)V
      54: return

  private void callObservers(javafx.collections.MapChangeListener$Change<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: getfield      #11                 // Field listenerHelper:Lcom/sun/javafx/collections/MapListenerHelper;
       4: aload_1
       5: invokestatic  #12                 // Method com/sun/javafx/collections/MapListenerHelper.fireValueChangedEvent:(Lcom/sun/javafx/collections/MapListenerHelper;Ljavafx/collections/MapChangeListener$Change;)V
       8: return

  void typeCheck(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        36
       4: aload_0
       5: getfield      #4                  // Field keyType:Ljava/lang/Class;
       8: aload_1
       9: invokevirtual #13                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      12: ifne          36
      15: new           #14                 // class java/lang/ClassCastException
      18: dup
      19: aload_1
      20: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      23: aload_0
      24: getfield      #4                  // Field keyType:Ljava/lang/Class;
      27: invokedynamic #16,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/String;
      32: invokespecial #17                 // Method java/lang/ClassCastException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_2
      37: ifnull        72
      40: aload_0
      41: getfield      #5                  // Field valueType:Ljava/lang/Class;
      44: aload_2
      45: invokevirtual #13                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      48: ifne          72
      51: new           #14                 // class java/lang/ClassCastException
      54: dup
      55: aload_2
      56: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      59: aload_0
      60: getfield      #5                  // Field valueType:Ljava/lang/Class;
      63: invokedynamic #18,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/String;
      68: invokespecial #17                 // Method java/lang/ClassCastException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: return

  public void addListener(javafx.beans.InvalidationListener);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #11                 // Field listenerHelper:Lcom/sun/javafx/collections/MapListenerHelper;
       5: aload_1
       6: invokestatic  #19                 // Method com/sun/javafx/collections/MapListenerHelper.addListener:(Lcom/sun/javafx/collections/MapListenerHelper;Ljavafx/beans/InvalidationListener;)Lcom/sun/javafx/collections/MapListenerHelper;
       9: putfield      #11                 // Field listenerHelper:Lcom/sun/javafx/collections/MapListenerHelper;
      12: return

  public void removeListener(javafx.beans.InvalidationListener);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #11                 // Field listenerHelper:Lcom/sun/javafx/collections/MapListenerHelper;
       5: aload_1
       6: invokestatic  #20                 // Method com/sun/javafx/collections/MapListenerHelper.removeListener:(Lcom/sun/javafx/collections/MapListenerHelper;Ljavafx/beans/InvalidationListener;)Lcom/sun/javafx/collections/MapListenerHelper;
       9: putfield      #11                 // Field listenerHelper:Lcom/sun/javafx/collections/MapListenerHelper;
      12: return

  public void addListener(javafx.collections.MapChangeListener<? super K, ? super V>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #11                 // Field listenerHelper:Lcom/sun/javafx/collections/MapListenerHelper;
       5: aload_1
       6: invokestatic  #21                 // Method com/sun/javafx/collections/MapListenerHelper.addListener:(Lcom/sun/javafx/collections/MapListenerHelper;Ljavafx/collections/MapChangeListener;)Lcom/sun/javafx/collections/MapListenerHelper;
       9: putfield      #11                 // Field listenerHelper:Lcom/sun/javafx/collections/MapListenerHelper;
      12: return

  public void removeListener(javafx.collections.MapChangeListener<? super K, ? super V>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #11                 // Field listenerHelper:Lcom/sun/javafx/collections/MapListenerHelper;
       5: aload_1
       6: invokestatic  #22                 // Method com/sun/javafx/collections/MapListenerHelper.removeListener:(Lcom/sun/javafx/collections/MapListenerHelper;Ljavafx/collections/MapChangeListener;)Lcom/sun/javafx/collections/MapListenerHelper;
       9: putfield      #11                 // Field listenerHelper:Lcom/sun/javafx/collections/MapListenerHelper;
      12: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #3                  // Field backingMap:Ljavafx/collections/ObservableMap;
       4: invokeinterface #23,  1           // InterfaceMethod javafx/collections/ObservableMap.size:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field backingMap:Ljavafx/collections/ObservableMap;
       4: invokeinterface #24,  1           // InterfaceMethod javafx/collections/ObservableMap.isEmpty:()Z
       9: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field backingMap:Ljavafx/collections/ObservableMap;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod javafx/collections/ObservableMap.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field backingMap:Ljavafx/collections/ObservableMap;
       4: aload_1
       5: invokeinterface #26,  2           // InterfaceMethod javafx/collections/ObservableMap.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field backingMap:Ljavafx/collections/ObservableMap;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod javafx/collections/ObservableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public V put(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #28                 // Method typeCheck:(Ljava/lang/Object;Ljava/lang/Object;)V
       6: aload_0
       7: getfield      #3                  // Field backingMap:Ljavafx/collections/ObservableMap;
      10: aload_1
      11: aload_2
      12: invokeinterface #29,  3           // InterfaceMethod javafx/collections/ObservableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field backingMap:Ljavafx/collections/ObservableMap;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod javafx/collections/ObservableMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public void putAll(java.util.Map);
    Code:
       0: aload_1
       1: invokeinterface #31,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #32,  1           // InterfaceMethod java/util/Set.toArray:()[Ljava/lang/Object;
      11: astore_2
      12: new           #33                 // class java/util/ArrayList
      15: dup
      16: aload_2
      17: arraylength
      18: invokespecial #34                 // Method java/util/ArrayList."<init>":(I)V
      21: astore_3
      22: aload_2
      23: astore        4
      25: aload         4
      27: arraylength
      28: istore        5
      30: iconst_0
      31: istore        6
      33: iload         6
      35: iload         5
      37: if_icmpge     104
      40: aload         4
      42: iload         6
      44: aaload
      45: astore        7
      47: aload         7
      49: checkcast     #35                 // class java/util/Map$Entry
      52: astore        8
      54: aload         8
      56: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      61: astore        9
      63: aload         8
      65: invokeinterface #37,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      70: astore        10
      72: aload_0
      73: aload         9
      75: aload         10
      77: invokevirtual #28                 // Method typeCheck:(Ljava/lang/Object;Ljava/lang/Object;)V
      80: aload_3
      81: new           #38                 // class java/util/AbstractMap$SimpleImmutableEntry
      84: dup
      85: aload         9
      87: aload         10
      89: invokespecial #39                 // Method java/util/AbstractMap$SimpleImmutableEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      92: invokeinterface #40,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      97: pop
      98: iinc          6, 1
     101: goto          33
     104: aload_3
     105: invokeinterface #41,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     110: astore        4
     112: aload         4
     114: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     119: ifeq          161
     122: aload         4
     124: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     129: checkcast     #35                 // class java/util/Map$Entry
     132: astore        5
     134: aload_0
     135: getfield      #3                  // Field backingMap:Ljavafx/collections/ObservableMap;
     138: aload         5
     140: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     145: aload         5
     147: invokeinterface #37,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     152: invokeinterface #29,  3           // InterfaceMethod javafx/collections/ObservableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     157: pop
     158: goto          112
     161: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #3                  // Field backingMap:Ljavafx/collections/ObservableMap;
       4: invokeinterface #44,  1           // InterfaceMethod javafx/collections/ObservableMap.clear:()V
       9: return

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: getfield      #3                  // Field backingMap:Ljavafx/collections/ObservableMap;
       4: invokeinterface #45,  1           // InterfaceMethod javafx/collections/ObservableMap.keySet:()Ljava/util/Set;
       9: areturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: getfield      #3                  // Field backingMap:Ljavafx/collections/ObservableMap;
       4: invokeinterface #46,  1           // InterfaceMethod javafx/collections/ObservableMap.values:()Ljava/util/Collection;
       9: areturn

  public java.util.Set entrySet();
    Code:
       0: aload_0
       1: getfield      #2                  // Field entrySet:Ljava/util/Set;
       4: ifnonnull     31
       7: aload_0
       8: new           #47                 // class javafx/collections/FXCollections$CheckedObservableMap$CheckedEntrySet
      11: dup
      12: aload_0
      13: getfield      #3                  // Field backingMap:Ljavafx/collections/ObservableMap;
      16: invokeinterface #48,  1           // InterfaceMethod javafx/collections/ObservableMap.entrySet:()Ljava/util/Set;
      21: aload_0
      22: getfield      #5                  // Field valueType:Ljava/lang/Class;
      25: invokespecial #49                 // Method javafx/collections/FXCollections$CheckedObservableMap$CheckedEntrySet."<init>":(Ljava/util/Set;Ljava/lang/Class;)V
      28: putfield      #2                  // Field entrySet:Ljava/util/Set;
      31: aload_0
      32: getfield      #2                  // Field entrySet:Ljava/util/Set;
      35: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpeq     16
       5: aload_0
       6: getfield      #3                  // Field backingMap:Ljavafx/collections/ObservableMap;
       9: aload_1
      10: invokevirtual #50                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field backingMap:Ljavafx/collections/ObservableMap;
       4: invokevirtual #51                 // Method java/lang/Object.hashCode:()I
       7: ireturn

  private void lambda$new$0(javafx.collections.MapChangeListener$Change);
    Code:
       0: aload_0
       1: new           #52                 // class com/sun/javafx/collections/MapAdapterChange
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #53                 // Method com/sun/javafx/collections/MapAdapterChange."<init>":(Ljavafx/collections/ObservableMap;Ljavafx/collections/MapChangeListener$Change;)V
      10: invokespecial #54                 // Method callObservers:(Ljavafx/collections/MapChangeListener$Change;)V
      13: return
}
