Compiled from "Scene.java"
class javafx.scene.Scene$ScenePeerPaintListener implements com.sun.javafx.tk.TKScenePaintListener {
  final javafx.scene.Scene this$0;

  private javafx.scene.Scene$ScenePeerPaintListener(javafx.scene.Scene);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Ljavafx/scene/Scene;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: return

  public void frameRendered();
    Code:
       0: invokestatic  #4                  // Method javafx/scene/Scene.access$000:()Ljava/lang/Object;
       3: dup
       4: astore_1
       5: monitorenter
       6: aload_0
       7: getfield      #2                  // Field this$0:Ljavafx/scene/Scene;
      10: invokestatic  #5                  // Method javafx/scene/Scene.access$100:(Ljavafx/scene/Scene;)Lcom/sun/javafx/perf/PerformanceTracker;
      13: ifnull        26
      16: aload_0
      17: getfield      #2                  // Field this$0:Ljavafx/scene/Scene;
      20: invokestatic  #5                  // Method javafx/scene/Scene.access$100:(Ljavafx/scene/Scene;)Lcom/sun/javafx/perf/PerformanceTracker;
      23: invokevirtual #6                  // Method com/sun/javafx/perf/PerformanceTracker.frameRendered:()V
      26: aload_1
      27: monitorexit
      28: goto          36
      31: astore_2
      32: aload_1
      33: monitorexit
      34: aload_2
      35: athrow
      36: return
    Exception table:
       from    to  target type
           6    28    31   any
          31    34    31   any

  javafx.scene.Scene$ScenePeerPaintListener(javafx.scene.Scene, javafx.scene.Scene$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Ljavafx/scene/Scene;)V
       5: return
}
