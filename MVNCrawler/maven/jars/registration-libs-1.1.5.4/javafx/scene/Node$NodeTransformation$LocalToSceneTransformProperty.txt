Compiled from "Node.java"
class javafx.scene.Node$NodeTransformation$LocalToSceneTransformProperty extends javafx.scene.Node$LazyTransformProperty {
  private java.util.List localToSceneListeners;

  private long stamp;

  private long parentStamp;

  final javafx.scene.Node$NodeTransformation this$1;

  javafx.scene.Node$NodeTransformation$LocalToSceneTransformProperty(javafx.scene.Node$NodeTransformation);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Ljavafx/scene/Node$NodeTransformation;
       5: aload_0
       6: aconst_null
       7: invokespecial #2                  // Method javafx/scene/Node$LazyTransformProperty."<init>":(Ljavafx/scene/Node$1;)V
      10: return

  protected javafx.scene.transform.Transform computeTransform(javafx.scene.transform.Transform);
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field stamp:J
       5: lconst_1
       6: ladd
       7: putfield      #3                  // Field stamp:J
      10: aload_0
      11: getfield      #1                  // Field this$1:Ljavafx/scene/Node$NodeTransformation;
      14: getfield      #4                  // Field javafx/scene/Node$NodeTransformation.this$0:Ljavafx/scene/Node;
      17: invokevirtual #5                  // Method javafx/scene/Node.updateLocalToParentTransform:()V
      20: aload_0
      21: getfield      #1                  // Field this$1:Ljavafx/scene/Node$NodeTransformation;
      24: getfield      #4                  // Field javafx/scene/Node$NodeTransformation.this$0:Ljavafx/scene/Node;
      27: invokevirtual #6                  // Method javafx/scene/Node.getParent:()Ljavafx/scene/Parent;
      30: astore_2
      31: aload_2
      32: ifnull        77
      35: aload_2
      36: invokevirtual #7                  // Method javafx/scene/Node.localToSceneTransformProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
      39: checkcast     #8                  // class javafx/scene/Node$NodeTransformation$LocalToSceneTransformProperty
      42: astore_3
      43: aload_3
      44: invokevirtual #9                  // Method getInternalValue:()Ljavafx/scene/transform/Transform;
      47: astore        4
      49: aload_0
      50: aload_3
      51: getfield      #3                  // Field stamp:J
      54: putfield      #10                 // Field parentStamp:J
      57: aload_1
      58: aload         4
      60: aload_0
      61: getfield      #1                  // Field this$1:Ljavafx/scene/Node$NodeTransformation;
      64: invokevirtual #11                 // Method javafx/scene/Node$NodeTransformation.localToParentTransformProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
      67: checkcast     #12                 // class javafx/scene/Node$LazyTransformProperty
      70: invokevirtual #13                 // Method javafx/scene/Node$LazyTransformProperty.getInternalValue:()Ljavafx/scene/transform/Transform;
      73: invokestatic  #14                 // Method com/sun/javafx/scene/transform/TransformUtils.immutableTransform:(Ljavafx/scene/transform/Transform;Ljavafx/scene/transform/Transform;Ljavafx/scene/transform/Transform;)Ljavafx/scene/transform/Transform;
      76: areturn
      77: aload_1
      78: aload_0
      79: getfield      #1                  // Field this$1:Ljavafx/scene/Node$NodeTransformation;
      82: invokevirtual #11                 // Method javafx/scene/Node$NodeTransformation.localToParentTransformProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
      85: checkcast     #12                 // class javafx/scene/Node$LazyTransformProperty
      88: invokevirtual #13                 // Method javafx/scene/Node$LazyTransformProperty.getInternalValue:()Ljavafx/scene/transform/Transform;
      91: invokestatic  #15                 // Method com/sun/javafx/scene/transform/TransformUtils.immutableTransform:(Ljavafx/scene/transform/Transform;Ljavafx/scene/transform/Transform;)Ljavafx/scene/transform/Transform;
      94: areturn

  public java.lang.Object getBean();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$1:Ljavafx/scene/Node$NodeTransformation;
       4: getfield      #4                  // Field javafx/scene/Node$NodeTransformation.this$0:Ljavafx/scene/Node;
       7: areturn

  public java.lang.String getName();
    Code:
       0: ldc           #16                 // String localToSceneTransform
       2: areturn

  protected boolean validityKnown();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$1:Ljavafx/scene/Node$NodeTransformation;
       4: invokestatic  #17                 // Method javafx/scene/Node$NodeTransformation.access$1500:(Ljavafx/scene/Node$NodeTransformation;)I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  protected int computeValidity();
    Code:
       0: aload_0
       1: getfield      #18                 // Field valid:I
       4: iconst_2
       5: if_icmpeq     13
       8: aload_0
       9: getfield      #18                 // Field valid:I
      12: ireturn
      13: aload_0
      14: invokevirtual #19                 // Method getBean:()Ljava/lang/Object;
      17: checkcast     #20                 // class javafx/scene/Node
      20: astore_1
      21: aload_1
      22: invokevirtual #6                  // Method javafx/scene/Node.getParent:()Ljavafx/scene/Parent;
      25: astore_2
      26: aload_2
      27: ifnull        77
      30: aload_2
      31: invokevirtual #7                  // Method javafx/scene/Node.localToSceneTransformProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
      34: checkcast     #8                  // class javafx/scene/Node$NodeTransformation$LocalToSceneTransformProperty
      37: astore_3
      38: aload_0
      39: getfield      #10                 // Field parentStamp:J
      42: aload_3
      43: getfield      #3                  // Field stamp:J
      46: lcmp
      47: ifeq          57
      50: aload_0
      51: iconst_1
      52: putfield      #18                 // Field valid:I
      55: iconst_1
      56: ireturn
      57: aload_3
      58: invokevirtual #21                 // Method computeValidity:()I
      61: istore        4
      63: iload         4
      65: iconst_1
      66: if_icmpne     74
      69: aload_0
      70: iconst_1
      71: putfield      #18                 // Field valid:I
      74: iload         4
      76: ireturn
      77: iconst_0
      78: ireturn

  public void addListener(javafx.beans.InvalidationListener);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$1:Ljavafx/scene/Node$NodeTransformation;
       4: invokevirtual #22                 // Method javafx/scene/Node$NodeTransformation.incListenerReasons:()V
       7: aload_0
       8: getfield      #23                 // Field localToSceneListeners:Ljava/util/List;
      11: ifnonnull     25
      14: aload_0
      15: new           #24                 // class java/util/LinkedList
      18: dup
      19: invokespecial #25                 // Method java/util/LinkedList."<init>":()V
      22: putfield      #23                 // Field localToSceneListeners:Ljava/util/List;
      25: aload_0
      26: getfield      #23                 // Field localToSceneListeners:Ljava/util/List;
      29: aload_1
      30: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      35: pop
      36: aload_0
      37: aload_1
      38: invokespecial #27                 // Method javafx/scene/Node$LazyTransformProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
      41: return

  public void addListener(javafx.beans.value.ChangeListener<? super javafx.scene.transform.Transform>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$1:Ljavafx/scene/Node$NodeTransformation;
       4: invokevirtual #22                 // Method javafx/scene/Node$NodeTransformation.incListenerReasons:()V
       7: aload_0
       8: getfield      #23                 // Field localToSceneListeners:Ljava/util/List;
      11: ifnonnull     25
      14: aload_0
      15: new           #24                 // class java/util/LinkedList
      18: dup
      19: invokespecial #25                 // Method java/util/LinkedList."<init>":()V
      22: putfield      #23                 // Field localToSceneListeners:Ljava/util/List;
      25: aload_0
      26: getfield      #23                 // Field localToSceneListeners:Ljava/util/List;
      29: aload_1
      30: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      35: pop
      36: aload_0
      37: aload_1
      38: invokespecial #28                 // Method javafx/scene/Node$LazyTransformProperty.addListener:(Ljavafx/beans/value/ChangeListener;)V
      41: return

  public void removeListener(javafx.beans.InvalidationListener);
    Code:
       0: aload_0
       1: getfield      #23                 // Field localToSceneListeners:Ljava/util/List;
       4: ifnull        27
       7: aload_0
       8: getfield      #23                 // Field localToSceneListeners:Ljava/util/List;
      11: aload_1
      12: invokeinterface #29,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      17: ifeq          27
      20: aload_0
      21: getfield      #1                  // Field this$1:Ljavafx/scene/Node$NodeTransformation;
      24: invokevirtual #30                 // Method javafx/scene/Node$NodeTransformation.decListenerReasons:()V
      27: aload_0
      28: aload_1
      29: invokespecial #31                 // Method javafx/scene/Node$LazyTransformProperty.removeListener:(Ljavafx/beans/InvalidationListener;)V
      32: return

  public void removeListener(javafx.beans.value.ChangeListener<? super javafx.scene.transform.Transform>);
    Code:
       0: aload_0
       1: getfield      #23                 // Field localToSceneListeners:Ljava/util/List;
       4: ifnull        27
       7: aload_0
       8: getfield      #23                 // Field localToSceneListeners:Ljava/util/List;
      11: aload_1
      12: invokeinterface #29,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      17: ifeq          27
      20: aload_0
      21: getfield      #1                  // Field this$1:Ljavafx/scene/Node$NodeTransformation;
      24: invokevirtual #30                 // Method javafx/scene/Node$NodeTransformation.decListenerReasons:()V
      27: aload_0
      28: aload_1
      29: invokespecial #32                 // Method javafx/scene/Node$LazyTransformProperty.removeListener:(Ljavafx/beans/value/ChangeListener;)V
      32: return
}
