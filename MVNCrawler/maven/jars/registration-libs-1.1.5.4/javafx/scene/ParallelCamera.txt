Compiled from "ParallelCamera.java"
public class javafx.scene.ParallelCamera extends javafx.scene.Camera {
  public javafx.scene.ParallelCamera();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method javafx/scene/Camera."<init>":()V
       4: aload_0
       5: invokestatic  #3                  // Method com/sun/javafx/scene/ParallelCameraHelper.initHelper:(Ljavafx/scene/ParallelCamera;)V
       8: return

  javafx.scene.Camera copy();
    Code:
       0: new           #4                  // class javafx/scene/ParallelCamera
       3: dup
       4: invokespecial #5                  // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #6                  // Method getNearClip:()D
      13: invokevirtual #7                  // Method setNearClip:(D)V
      16: aload_1
      17: aload_0
      18: invokevirtual #8                  // Method getFarClip:()D
      21: invokevirtual #9                  // Method setFarClip:(D)V
      24: aload_1
      25: areturn

  private com.sun.javafx.sg.prism.NGNode doCreatePeer();
    Code:
       0: new           #10                 // class com/sun/javafx/sg/prism/NGParallelCamera
       3: dup
       4: invokespecial #11                 // Method com/sun/javafx/sg/prism/NGParallelCamera."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #6                  // Method getNearClip:()D
      13: d2f
      14: invokevirtual #12                 // Method com/sun/javafx/sg/prism/NGParallelCamera.setNearClip:(F)V
      17: aload_1
      18: aload_0
      19: invokevirtual #8                  // Method getFarClip:()D
      22: d2f
      23: invokevirtual #13                 // Method com/sun/javafx/sg/prism/NGParallelCamera.setFarClip:(F)V
      26: aload_1
      27: areturn

  final com.sun.javafx.geom.PickRay computePickRay(double, double, com.sun.javafx.geom.PickRay);
    Code:
       0: dload_1
       1: dload_3
       2: aload_0
       3: invokevirtual #14                 // Method getViewHeight:()D
       6: aload_0
       7: invokevirtual #15                 // Method getCameraTransform:()Lcom/sun/javafx/geom/transform/Affine3D;
      10: aload_0
      11: invokevirtual #6                  // Method getNearClip:()D
      14: aload_0
      15: invokevirtual #8                  // Method getFarClip:()D
      18: aload         5
      20: invokestatic  #16                 // Method com/sun/javafx/geom/PickRay.computeParallelPickRay:(DDDLcom/sun/javafx/geom/transform/Affine3D;DDLcom/sun/javafx/geom/PickRay;)Lcom/sun/javafx/geom/PickRay;
      23: areturn

  void computeProjectionTransform(com.sun.javafx.geom.transform.GeneralTransform3D);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getViewWidth:()D
       4: dstore_2
       5: aload_0
       6: invokevirtual #14                 // Method getViewHeight:()D
       9: dstore        4
      11: dload_2
      12: dload         4
      14: dcmpl
      15: ifle          26
      18: dload_2
      19: ldc2_w        #18                 // double 2.0d
      22: ddiv
      23: goto          32
      26: dload         4
      28: ldc2_w        #18                 // double 2.0d
      31: ddiv
      32: dstore        6
      34: aload_1
      35: dconst_0
      36: dload_2
      37: dload         4
      39: dconst_0
      40: dload         6
      42: dneg
      43: dload         6
      45: invokevirtual #20                 // Method com/sun/javafx/geom/transform/GeneralTransform3D.ortho:(DDDDDD)Lcom/sun/javafx/geom/transform/GeneralTransform3D;
      48: pop
      49: return

  void computeViewTransform(com.sun.javafx.geom.transform.Affine3D);
    Code:
       0: aload_1
       1: invokevirtual #21                 // Method com/sun/javafx/geom/transform/Affine3D.setToIdentity:()V
       4: return

  com.sun.javafx.geom.Vec3d computePosition(com.sun.javafx.geom.Vec3d);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #22                 // class com/sun/javafx/geom/Vec3d
       7: dup
       8: invokespecial #23                 // Method com/sun/javafx/geom/Vec3d."<init>":()V
      11: astore_1
      12: aload_0
      13: invokevirtual #17                 // Method getViewWidth:()D
      16: ldc2_w        #18                 // double 2.0d
      19: ddiv
      20: dstore_2
      21: aload_0
      22: invokevirtual #14                 // Method getViewHeight:()D
      25: ldc2_w        #18                 // double 2.0d
      28: ddiv
      29: dstore        4
      31: dload         4
      33: ldc2_w        #24                 // double 15.0d
      36: invokestatic  #26                 // Method java/lang/Math.toRadians:(D)D
      39: invokestatic  #27                 // Method java/lang/Math.tan:(D)D
      42: ddiv
      43: dstore        6
      45: aload_1
      46: dload_2
      47: dload         4
      49: dload         6
      51: dneg
      52: invokevirtual #28                 // Method com/sun/javafx/geom/Vec3d.set:(DDD)V
      55: aload_1
      56: areturn

  static com.sun.javafx.sg.prism.NGNode access$000(javafx.scene.ParallelCamera);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method doCreatePeer:()Lcom/sun/javafx/sg/prism/NGNode;
       4: areturn

  static {};
    Code:
       0: new           #29                 // class javafx/scene/ParallelCamera$1
       3: dup
       4: invokespecial #30                 // Method javafx/scene/ParallelCamera$1."<init>":()V
       7: invokestatic  #31                 // Method com/sun/javafx/scene/ParallelCameraHelper.setParallelCameraAccessor:(Lcom/sun/javafx/scene/ParallelCameraHelper$ParallelCameraAccessor;)V
      10: return
}
