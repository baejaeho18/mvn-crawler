Compiled from "DragEvent.java"
public final class javafx.scene.input.DragEvent extends javafx.scene.input.InputEvent {
  private static final long serialVersionUID;

  public static final javafx.event.EventType<javafx.scene.input.DragEvent> ANY;

  public static final javafx.event.EventType<javafx.scene.input.DragEvent> DRAG_ENTERED_TARGET;

  public static final javafx.event.EventType<javafx.scene.input.DragEvent> DRAG_ENTERED;

  public static final javafx.event.EventType<javafx.scene.input.DragEvent> DRAG_EXITED_TARGET;

  public static final javafx.event.EventType<javafx.scene.input.DragEvent> DRAG_EXITED;

  public static final javafx.event.EventType<javafx.scene.input.DragEvent> DRAG_OVER;

  public static final javafx.event.EventType<javafx.scene.input.DragEvent> DRAG_DROPPED;

  public static final javafx.event.EventType<javafx.scene.input.DragEvent> DRAG_DONE;

  private transient double x;

  private transient double y;

  private transient double z;

  private final double screenX;

  private final double screenY;

  private final double sceneX;

  private final double sceneY;

  private javafx.scene.input.PickResult pickResult;

  private java.lang.Object gestureSource;

  private java.lang.Object gestureTarget;

  private javafx.scene.input.TransferMode transferMode;

  private final javafx.scene.input.DragEvent$State state;

  private transient javafx.scene.input.Dragboard dragboard;

  public javafx.scene.input.DragEvent copyFor(java.lang.Object, javafx.event.EventTarget, java.lang.Object, java.lang.Object, javafx.event.EventType<javafx.scene.input.DragEvent>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload         5
       5: invokevirtual #1                  // Method copyFor:(Ljava/lang/Object;Ljavafx/event/EventTarget;Ljavafx/event/EventType;)Ljavafx/scene/input/DragEvent;
       8: astore        6
      10: aload_0
      11: aload         6
      13: aload_1
      14: invokespecial #2                  // Method recomputeCoordinatesToSource:(Ljavafx/scene/input/DragEvent;Ljava/lang/Object;)V
      17: aload         6
      19: aload_3
      20: putfield      #3                  // Field gestureSource:Ljava/lang/Object;
      23: aload         6
      25: aload         4
      27: putfield      #4                  // Field gestureTarget:Ljava/lang/Object;
      30: aload         6
      32: areturn

  public javafx.scene.input.DragEvent(java.lang.Object, javafx.event.EventTarget, javafx.event.EventType<javafx.scene.input.DragEvent>, javafx.scene.input.Dragboard, double, double, double, double, javafx.scene.input.TransferMode, java.lang.Object, java.lang.Object, javafx.scene.input.PickResult);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #5                  // Method javafx/scene/input/InputEvent."<init>":(Ljava/lang/Object;Ljavafx/event/EventTarget;Ljavafx/event/EventType;)V
       7: aload_0
       8: new           #6                  // class javafx/scene/input/DragEvent$State
      11: dup
      12: aconst_null
      13: invokespecial #7                  // Method javafx/scene/input/DragEvent$State."<init>":(Ljavafx/scene/input/DragEvent$1;)V
      16: putfield      #8                  // Field state:Ljavafx/scene/input/DragEvent$State;
      19: aload_0
      20: aload         14
      22: putfield      #3                  // Field gestureSource:Ljava/lang/Object;
      25: aload_0
      26: aload         15
      28: putfield      #4                  // Field gestureTarget:Ljava/lang/Object;
      31: aload_0
      32: dload         5
      34: putfield      #9                  // Field x:D
      37: aload_0
      38: dload         7
      40: putfield      #10                 // Field y:D
      43: aload_0
      44: dload         9
      46: putfield      #11                 // Field screenX:D
      49: aload_0
      50: dload         11
      52: putfield      #12                 // Field screenY:D
      55: aload_0
      56: dload         5
      58: putfield      #13                 // Field sceneX:D
      61: aload_0
      62: dload         7
      64: putfield      #14                 // Field sceneY:D
      67: aload_0
      68: aload         13
      70: putfield      #15                 // Field transferMode:Ljavafx/scene/input/TransferMode;
      73: aload_0
      74: aload         4
      76: putfield      #16                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      79: aload_3
      80: getstatic     #17                 // Field DRAG_DROPPED:Ljavafx/event/EventType;
      83: if_acmpeq     93
      86: aload_3
      87: getstatic     #18                 // Field DRAG_DONE:Ljavafx/event/EventType;
      90: if_acmpne     141
      93: aload_0
      94: getfield      #8                  // Field state:Ljavafx/scene/input/DragEvent$State;
      97: aload         13
      99: ifnull        106
     102: iconst_1
     103: goto          107
     106: iconst_0
     107: putfield      #19                 // Field javafx/scene/input/DragEvent$State.accepted:Z
     110: aload_0
     111: getfield      #8                  // Field state:Ljavafx/scene/input/DragEvent$State;
     114: aload         13
     116: putfield      #20                 // Field javafx/scene/input/DragEvent$State.acceptedTransferMode:Ljavafx/scene/input/TransferMode;
     119: aload_0
     120: getfield      #8                  // Field state:Ljavafx/scene/input/DragEvent$State;
     123: aload_0
     124: getfield      #8                  // Field state:Ljavafx/scene/input/DragEvent$State;
     127: getfield      #19                 // Field javafx/scene/input/DragEvent$State.accepted:Z
     130: ifeq          137
     133: aload_1
     134: goto          138
     137: aconst_null
     138: putfield      #21                 // Field javafx/scene/input/DragEvent$State.acceptingObject:Ljava/lang/Object;
     141: aload_0
     142: aload         16
     144: ifnull        152
     147: aload         16
     149: goto          175
     152: new           #22                 // class javafx/scene/input/PickResult
     155: dup
     156: aload_3
     157: getstatic     #18                 // Field DRAG_DONE:Ljavafx/event/EventType;
     160: if_acmpne     167
     163: aconst_null
     164: goto          168
     167: aload_2
     168: dload         5
     170: dload         7
     172: invokespecial #23                 // Method javafx/scene/input/PickResult."<init>":(Ljavafx/event/EventTarget;DD)V
     175: putfield      #24                 // Field pickResult:Ljavafx/scene/input/PickResult;
     178: aload_0
     179: getfield      #24                 // Field pickResult:Ljavafx/scene/input/PickResult;
     182: aconst_null
     183: invokestatic  #25                 // Method com/sun/javafx/scene/input/InputEventUtils.recomputeCoordinates:(Ljavafx/scene/input/PickResult;Ljava/lang/Object;)Ljavafx/geometry/Point3D;
     186: astore        17
     188: aload_0
     189: aload         17
     191: invokevirtual #26                 // Method javafx/geometry/Point3D.getX:()D
     194: putfield      #9                  // Field x:D
     197: aload_0
     198: aload         17
     200: invokevirtual #27                 // Method javafx/geometry/Point3D.getY:()D
     203: putfield      #10                 // Field y:D
     206: aload_0
     207: aload         17
     209: invokevirtual #28                 // Method javafx/geometry/Point3D.getZ:()D
     212: putfield      #29                 // Field z:D
     215: return

  public javafx.scene.input.DragEvent(javafx.event.EventType<javafx.scene.input.DragEvent>, javafx.scene.input.Dragboard, double, double, double, double, javafx.scene.input.TransferMode, java.lang.Object, java.lang.Object, javafx.scene.input.PickResult);
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: aload_1
       4: aload_2
       5: dload_3
       6: dload         5
       8: dload         7
      10: dload         9
      12: aload         11
      14: aload         12
      16: aload         13
      18: aload         14
      20: invokespecial #30                 // Method "<init>":(Ljava/lang/Object;Ljavafx/event/EventTarget;Ljavafx/event/EventType;Ljavafx/scene/input/Dragboard;DDDDLjavafx/scene/input/TransferMode;Ljava/lang/Object;Ljava/lang/Object;Ljavafx/scene/input/PickResult;)V
      23: return

  private void recomputeCoordinatesToSource(javafx.scene.input.DragEvent, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #31                 // Method getEventType:()Ljavafx/event/EventType;
       4: getstatic     #18                 // Field DRAG_DONE:Ljavafx/event/EventType;
       7: if_acmpne     11
      10: return
      11: aload_0
      12: getfield      #24                 // Field pickResult:Ljavafx/scene/input/PickResult;
      15: aload_2
      16: invokestatic  #25                 // Method com/sun/javafx/scene/input/InputEventUtils.recomputeCoordinates:(Ljavafx/scene/input/PickResult;Ljava/lang/Object;)Ljavafx/geometry/Point3D;
      19: astore_3
      20: aload_1
      21: aload_3
      22: invokevirtual #26                 // Method javafx/geometry/Point3D.getX:()D
      25: putfield      #9                  // Field x:D
      28: aload_1
      29: aload_3
      30: invokevirtual #27                 // Method javafx/geometry/Point3D.getY:()D
      33: putfield      #10                 // Field y:D
      36: aload_1
      37: aload_3
      38: invokevirtual #28                 // Method javafx/geometry/Point3D.getZ:()D
      41: putfield      #29                 // Field z:D
      44: return

  public javafx.scene.input.DragEvent copyFor(java.lang.Object, javafx.event.EventTarget);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #32                 // Method javafx/scene/input/InputEvent.copyFor:(Ljava/lang/Object;Ljavafx/event/EventTarget;)Ljavafx/event/Event;
       6: checkcast     #33                 // class javafx/scene/input/DragEvent
       9: astore_3
      10: aload_0
      11: aload_3
      12: aload_1
      13: invokespecial #2                  // Method recomputeCoordinatesToSource:(Ljavafx/scene/input/DragEvent;Ljava/lang/Object;)V
      16: aload_3
      17: areturn

  public javafx.scene.input.DragEvent copyFor(java.lang.Object, javafx.event.EventTarget, javafx.event.EventType<javafx.scene.input.DragEvent>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #34                 // Method copyFor:(Ljava/lang/Object;Ljavafx/event/EventTarget;)Ljavafx/scene/input/DragEvent;
       6: astore        4
       8: aload         4
      10: aload_3
      11: putfield      #35                 // Field eventType:Ljavafx/event/EventType;
      14: aload         4
      16: areturn

  public javafx.event.EventType<javafx.scene.input.DragEvent> getEventType();
    Code:
       0: aload_0
       1: invokespecial #36                 // Method javafx/scene/input/InputEvent.getEventType:()Ljavafx/event/EventType;
       4: areturn

  public final double getX();
    Code:
       0: aload_0
       1: getfield      #9                  // Field x:D
       4: dreturn

  public final double getY();
    Code:
       0: aload_0
       1: getfield      #10                 // Field y:D
       4: dreturn

  public final double getZ();
    Code:
       0: aload_0
       1: getfield      #29                 // Field z:D
       4: dreturn

  public final double getScreenX();
    Code:
       0: aload_0
       1: getfield      #11                 // Field screenX:D
       4: dreturn

  public final double getScreenY();
    Code:
       0: aload_0
       1: getfield      #12                 // Field screenY:D
       4: dreturn

  public final double getSceneX();
    Code:
       0: aload_0
       1: getfield      #13                 // Field sceneX:D
       4: dreturn

  public final double getSceneY();
    Code:
       0: aload_0
       1: getfield      #14                 // Field sceneY:D
       4: dreturn

  public final javafx.scene.input.PickResult getPickResult();
    Code:
       0: aload_0
       1: getfield      #24                 // Field pickResult:Ljavafx/scene/input/PickResult;
       4: areturn

  public final java.lang.Object getGestureSource();
    Code:
       0: aload_0
       1: getfield      #3                  // Field gestureSource:Ljava/lang/Object;
       4: areturn

  public final java.lang.Object getGestureTarget();
    Code:
       0: aload_0
       1: getfield      #4                  // Field gestureTarget:Ljava/lang/Object;
       4: areturn

  public final javafx.scene.input.TransferMode getTransferMode();
    Code:
       0: aload_0
       1: getfield      #15                 // Field transferMode:Ljavafx/scene/input/TransferMode;
       4: areturn

  public final boolean isAccepted();
    Code:
       0: aload_0
       1: getfield      #8                  // Field state:Ljavafx/scene/input/DragEvent$State;
       4: getfield      #19                 // Field javafx/scene/input/DragEvent$State.accepted:Z
       7: ireturn

  public final javafx.scene.input.TransferMode getAcceptedTransferMode();
    Code:
       0: aload_0
       1: getfield      #8                  // Field state:Ljavafx/scene/input/DragEvent$State;
       4: getfield      #20                 // Field javafx/scene/input/DragEvent$State.acceptedTransferMode:Ljavafx/scene/input/TransferMode;
       7: areturn

  public final java.lang.Object getAcceptingObject();
    Code:
       0: aload_0
       1: getfield      #8                  // Field state:Ljavafx/scene/input/DragEvent$State;
       4: getfield      #21                 // Field javafx/scene/input/DragEvent$State.acceptingObject:Ljava/lang/Object;
       7: areturn

  public final javafx.scene.input.Dragboard getDragboard();
    Code:
       0: aload_0
       1: getfield      #16                 // Field dragboard:Ljavafx/scene/input/Dragboard;
       4: areturn

  private static javafx.scene.input.TransferMode chooseTransferMode(java.util.Set<javafx.scene.input.TransferMode>, javafx.scene.input.TransferMode[], javafx.scene.input.TransferMode);
    Code:
       0: aconst_null
       1: astore_3
       2: ldc           #37                 // class javafx/scene/input/TransferMode
       4: invokestatic  #38                 // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
       7: astore        4
       9: aload_1
      10: invokestatic  #39                 // Method com/sun/javafx/scene/input/InputEventUtils.safeTransferModes:([Ljavafx/scene/input/TransferMode;)Ljava/util/List;
      13: invokeinterface #40,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore        5
      20: aload         5
      22: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          66
      30: aload         5
      32: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #37                 // class javafx/scene/input/TransferMode
      40: astore        6
      42: aload_0
      43: aload         6
      45: invokeinterface #43,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      50: ifeq          63
      53: aload         4
      55: aload         6
      57: invokeinterface #44,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      62: pop
      63: goto          20
      66: aload         4
      68: aload_2
      69: invokeinterface #43,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      74: ifeq          82
      77: aload_2
      78: astore_3
      79: goto          139
      82: aload         4
      84: getstatic     #45                 // Field javafx/scene/input/TransferMode.MOVE:Ljavafx/scene/input/TransferMode;
      87: invokeinterface #43,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      92: ifeq          102
      95: getstatic     #45                 // Field javafx/scene/input/TransferMode.MOVE:Ljavafx/scene/input/TransferMode;
      98: astore_3
      99: goto          139
     102: aload         4
     104: getstatic     #46                 // Field javafx/scene/input/TransferMode.COPY:Ljavafx/scene/input/TransferMode;
     107: invokeinterface #43,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     112: ifeq          122
     115: getstatic     #46                 // Field javafx/scene/input/TransferMode.COPY:Ljavafx/scene/input/TransferMode;
     118: astore_3
     119: goto          139
     122: aload         4
     124: getstatic     #47                 // Field javafx/scene/input/TransferMode.LINK:Ljavafx/scene/input/TransferMode;
     127: invokeinterface #43,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     132: ifeq          139
     135: getstatic     #47                 // Field javafx/scene/input/TransferMode.LINK:Ljavafx/scene/input/TransferMode;
     138: astore_3
     139: aload_3
     140: areturn

  public void acceptTransferModes(javafx.scene.input.TransferMode...);
    Code:
       0: aload_0
       1: getfield      #16                 // Field dragboard:Ljavafx/scene/input/Dragboard;
       4: ifnull        24
       7: aload_0
       8: getfield      #16                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      11: invokevirtual #48                 // Method javafx/scene/input/Dragboard.getTransferModes:()Ljava/util/Set;
      14: ifnull        24
      17: aload_0
      18: getfield      #15                 // Field transferMode:Ljavafx/scene/input/TransferMode;
      21: ifnonnull     33
      24: aload_0
      25: getfield      #8                  // Field state:Ljavafx/scene/input/DragEvent$State;
      28: iconst_0
      29: putfield      #19                 // Field javafx/scene/input/DragEvent$State.accepted:Z
      32: return
      33: aload_0
      34: getfield      #16                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      37: invokevirtual #48                 // Method javafx/scene/input/Dragboard.getTransferModes:()Ljava/util/Set;
      40: aload_1
      41: aload_0
      42: getfield      #15                 // Field transferMode:Ljavafx/scene/input/TransferMode;
      45: invokestatic  #49                 // Method chooseTransferMode:(Ljava/util/Set;[Ljavafx/scene/input/TransferMode;Ljavafx/scene/input/TransferMode;)Ljavafx/scene/input/TransferMode;
      48: astore_2
      49: aload_2
      50: ifnonnull     73
      53: aload_0
      54: invokevirtual #31                 // Method getEventType:()Ljavafx/event/EventType;
      57: getstatic     #17                 // Field DRAG_DROPPED:Ljavafx/event/EventType;
      60: if_acmpne     73
      63: new           #50                 // class java/lang/IllegalStateException
      66: dup
      67: ldc           #51                 // String Accepting unsupported transfer modes inside DRAG_DROPPED handler
      69: invokespecial #52                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: aload_0
      74: getfield      #8                  // Field state:Ljavafx/scene/input/DragEvent$State;
      77: aload_2
      78: ifnull        85
      81: iconst_1
      82: goto          86
      85: iconst_0
      86: putfield      #19                 // Field javafx/scene/input/DragEvent$State.accepted:Z
      89: aload_0
      90: getfield      #8                  // Field state:Ljavafx/scene/input/DragEvent$State;
      93: aload_2
      94: putfield      #20                 // Field javafx/scene/input/DragEvent$State.acceptedTransferMode:Ljavafx/scene/input/TransferMode;
      97: aload_0
      98: getfield      #8                  // Field state:Ljavafx/scene/input/DragEvent$State;
     101: aload_0
     102: getfield      #8                  // Field state:Ljavafx/scene/input/DragEvent$State;
     105: getfield      #19                 // Field javafx/scene/input/DragEvent$State.accepted:Z
     108: ifeq          118
     111: aload_0
     112: getfield      #53                 // Field source:Ljava/lang/Object;
     115: goto          119
     118: aconst_null
     119: putfield      #21                 // Field javafx/scene/input/DragEvent$State.acceptingObject:Ljava/lang/Object;
     122: return

  public void setDropCompleted(boolean);
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getEventType:()Ljavafx/event/EventType;
       4: getstatic     #17                 // Field DRAG_DROPPED:Ljavafx/event/EventType;
       7: if_acmpeq     20
      10: new           #50                 // class java/lang/IllegalStateException
      13: dup
      14: ldc           #54                 // String setDropCompleted can be called only from DRAG_DROPPED handler
      16: invokespecial #52                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #8                  // Field state:Ljavafx/scene/input/DragEvent$State;
      24: iload_1
      25: putfield      #55                 // Field javafx/scene/input/DragEvent$State.dropCompleted:Z
      28: return

  public boolean isDropCompleted();
    Code:
       0: aload_0
       1: getfield      #8                  // Field state:Ljavafx/scene/input/DragEvent$State;
       4: getfield      #55                 // Field javafx/scene/input/DragEvent$State.dropCompleted:Z
       7: ireturn

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #56                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: aload_0
       6: getfield      #13                 // Field sceneX:D
       9: putfield      #9                  // Field x:D
      12: aload_0
      13: aload_0
      14: getfield      #14                 // Field sceneY:D
      17: putfield      #10                 // Field y:D
      20: return

  public javafx.event.Event copyFor(java.lang.Object, javafx.event.EventTarget);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #34                 // Method copyFor:(Ljava/lang/Object;Ljavafx/event/EventTarget;)Ljavafx/scene/input/DragEvent;
       6: areturn

  static {};
    Code:
       0: new           #57                 // class javafx/event/EventType
       3: dup
       4: getstatic     #58                 // Field javafx/scene/input/InputEvent.ANY:Ljavafx/event/EventType;
       7: ldc           #59                 // String DRAG
       9: invokespecial #60                 // Method javafx/event/EventType."<init>":(Ljavafx/event/EventType;Ljava/lang/String;)V
      12: putstatic     #61                 // Field ANY:Ljavafx/event/EventType;
      15: new           #57                 // class javafx/event/EventType
      18: dup
      19: getstatic     #61                 // Field ANY:Ljavafx/event/EventType;
      22: ldc           #62                 // String DRAG_ENTERED_TARGET
      24: invokespecial #60                 // Method javafx/event/EventType."<init>":(Ljavafx/event/EventType;Ljava/lang/String;)V
      27: putstatic     #63                 // Field DRAG_ENTERED_TARGET:Ljavafx/event/EventType;
      30: new           #57                 // class javafx/event/EventType
      33: dup
      34: getstatic     #63                 // Field DRAG_ENTERED_TARGET:Ljavafx/event/EventType;
      37: ldc           #64                 // String DRAG_ENTERED
      39: invokespecial #60                 // Method javafx/event/EventType."<init>":(Ljavafx/event/EventType;Ljava/lang/String;)V
      42: putstatic     #65                 // Field DRAG_ENTERED:Ljavafx/event/EventType;
      45: new           #57                 // class javafx/event/EventType
      48: dup
      49: getstatic     #61                 // Field ANY:Ljavafx/event/EventType;
      52: ldc           #66                 // String DRAG_EXITED_TARGET
      54: invokespecial #60                 // Method javafx/event/EventType."<init>":(Ljavafx/event/EventType;Ljava/lang/String;)V
      57: putstatic     #67                 // Field DRAG_EXITED_TARGET:Ljavafx/event/EventType;
      60: new           #57                 // class javafx/event/EventType
      63: dup
      64: getstatic     #67                 // Field DRAG_EXITED_TARGET:Ljavafx/event/EventType;
      67: ldc           #68                 // String DRAG_EXITED
      69: invokespecial #60                 // Method javafx/event/EventType."<init>":(Ljavafx/event/EventType;Ljava/lang/String;)V
      72: putstatic     #69                 // Field DRAG_EXITED:Ljavafx/event/EventType;
      75: new           #57                 // class javafx/event/EventType
      78: dup
      79: getstatic     #61                 // Field ANY:Ljavafx/event/EventType;
      82: ldc           #70                 // String DRAG_OVER
      84: invokespecial #60                 // Method javafx/event/EventType."<init>":(Ljavafx/event/EventType;Ljava/lang/String;)V
      87: putstatic     #71                 // Field DRAG_OVER:Ljavafx/event/EventType;
      90: new           #57                 // class javafx/event/EventType
      93: dup
      94: getstatic     #61                 // Field ANY:Ljavafx/event/EventType;
      97: ldc           #72                 // String DRAG_DROPPED
      99: invokespecial #60                 // Method javafx/event/EventType."<init>":(Ljavafx/event/EventType;Ljava/lang/String;)V
     102: putstatic     #17                 // Field DRAG_DROPPED:Ljavafx/event/EventType;
     105: new           #57                 // class javafx/event/EventType
     108: dup
     109: getstatic     #61                 // Field ANY:Ljavafx/event/EventType;
     112: ldc           #73                 // String DRAG_DONE
     114: invokespecial #60                 // Method javafx/event/EventType."<init>":(Ljavafx/event/EventType;Ljava/lang/String;)V
     117: putstatic     #18                 // Field DRAG_DONE:Ljavafx/event/EventType;
     120: return
}
