Compiled from "SubScene.java"
class javafx.scene.SubScene$3 extends javafx.beans.property.ObjectPropertyBase<javafx.scene.Camera> {
  javafx.scene.Camera oldCamera;

  final javafx.scene.SubScene this$0;

  javafx.scene.SubScene$3(javafx.scene.SubScene);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Ljavafx/scene/SubScene;
       5: aload_0
       6: invokespecial #2                  // Method javafx/beans/property/ObjectPropertyBase."<init>":()V
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field oldCamera:Ljavafx/scene/Camera;
      14: return

  protected void invalidated();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method get:()Ljava/lang/Object;
       4: checkcast     #5                  // class javafx/scene/Camera
       7: astore_1
       8: aload_1
       9: ifnull        123
      12: aload_1
      13: instanceof    #6                  // class javafx/scene/PerspectiveCamera
      16: ifeq          40
      19: invokestatic  #7                  // Method javafx/scene/SubScene.access$800:()Z
      22: ifne          40
      25: ldc           #8                  // class javafx/scene/SubScene
      27: invokevirtual #9                  // Method java/lang/Class.getName:()Ljava/lang/String;
      30: astore_2
      31: aload_2
      32: invokestatic  #10                 // Method com/sun/javafx/logging/PlatformLogger.getLogger:(Ljava/lang/String;)Lcom/sun/javafx/logging/PlatformLogger;
      35: ldc           #11                 // String System can\'t support ConditionalFeature.SCENE3D
      37: invokevirtual #12                 // Method com/sun/javafx/logging/PlatformLogger.warning:(Ljava/lang/String;)V
      40: aload_1
      41: invokevirtual #13                 // Method javafx/scene/Camera.getScene:()Ljavafx/scene/Scene;
      44: ifnonnull     54
      47: aload_1
      48: invokevirtual #14                 // Method javafx/scene/Camera.getSubScene:()Ljavafx/scene/SubScene;
      51: ifnull        93
      54: aload_1
      55: invokevirtual #13                 // Method javafx/scene/Camera.getScene:()Ljavafx/scene/Scene;
      58: aload_0
      59: getfield      #1                  // Field this$0:Ljavafx/scene/SubScene;
      62: invokevirtual #15                 // Method javafx/scene/SubScene.getScene:()Ljavafx/scene/Scene;
      65: if_acmpne     79
      68: aload_1
      69: invokevirtual #14                 // Method javafx/scene/Camera.getSubScene:()Ljavafx/scene/SubScene;
      72: aload_0
      73: getfield      #1                  // Field this$0:Ljavafx/scene/SubScene;
      76: if_acmpeq     93
      79: new           #16                 // class java/lang/IllegalArgumentException
      82: dup
      83: aload_1
      84: invokedynamic #17,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljavafx/scene/Camera;)Ljava/lang/String;
      89: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      92: athrow
      93: aload_1
      94: aload_0
      95: getfield      #1                  // Field this$0:Ljavafx/scene/SubScene;
      98: invokevirtual #19                 // Method javafx/scene/Camera.setOwnerSubScene:(Ljavafx/scene/SubScene;)V
     101: aload_1
     102: aload_0
     103: getfield      #1                  // Field this$0:Ljavafx/scene/SubScene;
     106: invokevirtual #20                 // Method javafx/scene/SubScene.getWidth:()D
     109: invokevirtual #21                 // Method javafx/scene/Camera.setViewWidth:(D)V
     112: aload_1
     113: aload_0
     114: getfield      #1                  // Field this$0:Ljavafx/scene/SubScene;
     117: invokevirtual #22                 // Method javafx/scene/SubScene.getHeight:()D
     120: invokevirtual #23                 // Method javafx/scene/Camera.setViewHeight:(D)V
     123: aload_0
     124: getfield      #1                  // Field this$0:Ljavafx/scene/SubScene;
     127: getstatic     #24                 // Field javafx/scene/SubScene$SubSceneDirtyBits.CAMERA_DIRTY:Ljavafx/scene/SubScene$SubSceneDirtyBits;
     130: invokestatic  #25                 // Method javafx/scene/SubScene.access$700:(Ljavafx/scene/SubScene;Ljavafx/scene/SubScene$SubSceneDirtyBits;)V
     133: aload_0
     134: getfield      #3                  // Field oldCamera:Ljavafx/scene/Camera;
     137: ifnull        156
     140: aload_0
     141: getfield      #3                  // Field oldCamera:Ljavafx/scene/Camera;
     144: aload_1
     145: if_acmpeq     156
     148: aload_0
     149: getfield      #3                  // Field oldCamera:Ljavafx/scene/Camera;
     152: aconst_null
     153: invokevirtual #19                 // Method javafx/scene/Camera.setOwnerSubScene:(Ljavafx/scene/SubScene;)V
     156: aload_0
     157: aload_1
     158: putfield      #3                  // Field oldCamera:Ljavafx/scene/Camera;
     161: return

  public java.lang.Object getBean();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Ljavafx/scene/SubScene;
       4: areturn

  public java.lang.String getName();
    Code:
       0: ldc           #26                 // String camera
       2: areturn
}
