Compiled from "Scene.java"
class javafx.scene.Scene$DropTargetListener implements com.sun.javafx.tk.TKDropTargetListener {
  final javafx.scene.Scene this$0;

  javafx.scene.Scene$DropTargetListener(javafx.scene.Scene);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Ljavafx/scene/Scene;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public javafx.scene.input.TransferMode dragEnter(double, double, double, double, javafx.scene.input.TransferMode, com.sun.javafx.tk.TKClipboard);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
       4: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
       7: ifnonnull     28
      10: aload_0
      11: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
      14: new           #4                  // class javafx/scene/Scene$DnDGesture
      17: dup
      18: aload_0
      19: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
      22: invokespecial #5                  // Method javafx/scene/Scene$DnDGesture."<init>":(Ljavafx/scene/Scene;)V
      25: putfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
      28: aload         10
      30: invokestatic  #6                  // Method com/sun/javafx/scene/input/DragboardHelper.createDragboard:(Lcom/sun/javafx/tk/TKClipboard;)Ljavafx/scene/input/Dragboard;
      33: astore        11
      35: aload_0
      36: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
      39: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
      42: aload         11
      44: invokestatic  #7                  // Method javafx/scene/Scene$DnDGesture.access$6102:(Ljavafx/scene/Scene$DnDGesture;Ljavafx/scene/input/Dragboard;)Ljavafx/scene/input/Dragboard;
      47: pop
      48: new           #8                  // class javafx/scene/input/DragEvent
      51: dup
      52: getstatic     #9                  // Field javafx/scene/input/DragEvent.ANY:Ljavafx/event/EventType;
      55: aload_0
      56: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
      59: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
      62: invokestatic  #10                 // Method javafx/scene/Scene$DnDGesture.access$6100:(Ljavafx/scene/Scene$DnDGesture;)Ljavafx/scene/input/Dragboard;
      65: dload_1
      66: dload_3
      67: dload         5
      69: dload         7
      71: aload         9
      73: aconst_null
      74: aconst_null
      75: aload_0
      76: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
      79: dload_1
      80: dload_3
      81: invokestatic  #11                 // Method javafx/scene/Scene.access$4900:(Ljavafx/scene/Scene;DD)Ljavafx/scene/input/PickResult;
      84: invokespecial #12                 // Method javafx/scene/input/DragEvent."<init>":(Ljavafx/event/EventType;Ljavafx/scene/input/Dragboard;DDDDLjavafx/scene/input/TransferMode;Ljava/lang/Object;Ljava/lang/Object;Ljavafx/scene/input/PickResult;)V
      87: astore        12
      89: aload_0
      90: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
      93: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
      96: aload         12
      98: invokestatic  #13                 // Method javafx/scene/Scene$DnDGesture.access$6200:(Ljavafx/scene/Scene$DnDGesture;Ljavafx/scene/input/DragEvent;)Ljavafx/scene/input/TransferMode;
     101: areturn

  public javafx.scene.input.TransferMode dragOver(double, double, double, double, javafx.scene.input.TransferMode);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
       4: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
       7: ifnonnull     20
      10: getstatic     #14                 // Field java/lang/System.err:Ljava/io/PrintStream;
      13: ldc           #15                 // String GOT A dragOver when dndGesture is null!
      15: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      18: aconst_null
      19: areturn
      20: aload_0
      21: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
      24: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
      27: invokestatic  #10                 // Method javafx/scene/Scene$DnDGesture.access$6100:(Ljavafx/scene/Scene$DnDGesture;)Ljavafx/scene/input/Dragboard;
      30: ifnonnull     43
      33: new           #17                 // class java/lang/RuntimeException
      36: dup
      37: ldc           #18                 // String dndGesture.dragboard is null in dragOver
      39: invokespecial #19                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: new           #8                  // class javafx/scene/input/DragEvent
      46: dup
      47: getstatic     #9                  // Field javafx/scene/input/DragEvent.ANY:Ljavafx/event/EventType;
      50: aload_0
      51: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
      54: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
      57: invokestatic  #10                 // Method javafx/scene/Scene$DnDGesture.access$6100:(Ljavafx/scene/Scene$DnDGesture;)Ljavafx/scene/input/Dragboard;
      60: dload_1
      61: dload_3
      62: dload         5
      64: dload         7
      66: aload         9
      68: aconst_null
      69: aconst_null
      70: aload_0
      71: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
      74: dload_1
      75: dload_3
      76: invokestatic  #11                 // Method javafx/scene/Scene.access$4900:(Ljavafx/scene/Scene;DD)Ljavafx/scene/input/PickResult;
      79: invokespecial #12                 // Method javafx/scene/input/DragEvent."<init>":(Ljavafx/event/EventType;Ljavafx/scene/input/Dragboard;DDDDLjavafx/scene/input/TransferMode;Ljava/lang/Object;Ljava/lang/Object;Ljavafx/scene/input/PickResult;)V
      82: astore        10
      84: aload_0
      85: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
      88: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
      91: aload         10
      93: invokestatic  #13                 // Method javafx/scene/Scene$DnDGesture.access$6200:(Ljavafx/scene/Scene$DnDGesture;Ljavafx/scene/input/DragEvent;)Ljavafx/scene/input/TransferMode;
      96: areturn

  public void dragExit(double, double, double, double);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
       4: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
       7: ifnonnull     21
      10: getstatic     #14                 // Field java/lang/System.err:Ljava/io/PrintStream;
      13: ldc           #20                 // String GOT A dragExit when dndGesture is null!
      15: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      18: goto          129
      21: aload_0
      22: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
      25: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
      28: invokestatic  #10                 // Method javafx/scene/Scene$DnDGesture.access$6100:(Ljavafx/scene/Scene$DnDGesture;)Ljavafx/scene/input/Dragboard;
      31: ifnonnull     44
      34: new           #17                 // class java/lang/RuntimeException
      37: dup
      38: ldc           #21                 // String dndGesture.dragboard is null in dragExit
      40: invokespecial #19                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: new           #8                  // class javafx/scene/input/DragEvent
      47: dup
      48: getstatic     #9                  // Field javafx/scene/input/DragEvent.ANY:Ljavafx/event/EventType;
      51: aload_0
      52: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
      55: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
      58: invokestatic  #10                 // Method javafx/scene/Scene$DnDGesture.access$6100:(Ljavafx/scene/Scene$DnDGesture;)Ljavafx/scene/input/Dragboard;
      61: dload_1
      62: dload_3
      63: dload         5
      65: dload         7
      67: aconst_null
      68: aconst_null
      69: aconst_null
      70: aload_0
      71: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
      74: dload_1
      75: dload_3
      76: invokestatic  #11                 // Method javafx/scene/Scene.access$4900:(Ljavafx/scene/Scene;DD)Ljavafx/scene/input/PickResult;
      79: invokespecial #12                 // Method javafx/scene/input/DragEvent."<init>":(Ljavafx/event/EventType;Ljavafx/scene/input/Dragboard;DDDDLjavafx/scene/input/TransferMode;Ljava/lang/Object;Ljava/lang/Object;Ljavafx/scene/input/PickResult;)V
      82: astore        9
      84: aload_0
      85: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
      88: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
      91: aload         9
      93: invokestatic  #22                 // Method javafx/scene/Scene$DnDGesture.access$6300:(Ljavafx/scene/Scene$DnDGesture;Ljavafx/scene/input/DragEvent;)V
      96: aload_0
      97: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
     100: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
     103: invokestatic  #23                 // Method javafx/scene/Scene$DnDGesture.access$6400:(Ljavafx/scene/Scene$DnDGesture;)Ljavafx/event/EventTarget;
     106: ifnonnull     129
     109: aload_0
     110: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
     113: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
     116: aconst_null
     117: invokestatic  #7                  // Method javafx/scene/Scene$DnDGesture.access$6102:(Ljavafx/scene/Scene$DnDGesture;Ljavafx/scene/input/Dragboard;)Ljavafx/scene/input/Dragboard;
     120: pop
     121: aload_0
     122: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
     125: aconst_null
     126: putfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
     129: return

  public javafx.scene.input.TransferMode drop(double, double, double, double, javafx.scene.input.TransferMode);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
       4: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
       7: ifnonnull     20
      10: getstatic     #14                 // Field java/lang/System.err:Ljava/io/PrintStream;
      13: ldc           #24                 // String GOT A drop when dndGesture is null!
      15: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      18: aconst_null
      19: areturn
      20: aload_0
      21: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
      24: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
      27: invokestatic  #10                 // Method javafx/scene/Scene$DnDGesture.access$6100:(Ljavafx/scene/Scene$DnDGesture;)Ljavafx/scene/input/Dragboard;
      30: ifnonnull     43
      33: new           #17                 // class java/lang/RuntimeException
      36: dup
      37: ldc           #25                 // String dndGesture.dragboard is null in dragDrop
      39: invokespecial #19                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: new           #8                  // class javafx/scene/input/DragEvent
      46: dup
      47: getstatic     #9                  // Field javafx/scene/input/DragEvent.ANY:Ljavafx/event/EventType;
      50: aload_0
      51: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
      54: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
      57: invokestatic  #10                 // Method javafx/scene/Scene$DnDGesture.access$6100:(Ljavafx/scene/Scene$DnDGesture;)Ljavafx/scene/input/Dragboard;
      60: dload_1
      61: dload_3
      62: dload         5
      64: dload         7
      66: aload         9
      68: aconst_null
      69: aconst_null
      70: aload_0
      71: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
      74: dload_1
      75: dload_3
      76: invokestatic  #11                 // Method javafx/scene/Scene.access$4900:(Ljavafx/scene/Scene;DD)Ljavafx/scene/input/PickResult;
      79: invokespecial #12                 // Method javafx/scene/input/DragEvent."<init>":(Ljavafx/event/EventType;Ljavafx/scene/input/Dragboard;DDDDLjavafx/scene/input/TransferMode;Ljava/lang/Object;Ljava/lang/Object;Ljavafx/scene/input/PickResult;)V
      82: astore        10
      84: aload_0
      85: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
      88: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
      91: invokestatic  #10                 // Method javafx/scene/Scene$DnDGesture.access$6100:(Ljavafx/scene/Scene$DnDGesture;)Ljavafx/scene/input/Dragboard;
      94: iconst_0
      95: invokestatic  #26                 // Method com/sun/javafx/scene/input/DragboardHelper.setDataAccessRestriction:(Ljavafx/scene/input/Dragboard;Z)V
      98: aload_0
      99: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
     102: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
     105: aload         10
     107: invokestatic  #27                 // Method javafx/scene/Scene$DnDGesture.access$6500:(Ljavafx/scene/Scene$DnDGesture;Ljavafx/scene/input/DragEvent;)Ljavafx/scene/input/TransferMode;
     110: astore        11
     112: aload_0
     113: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
     116: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
     119: invokestatic  #10                 // Method javafx/scene/Scene$DnDGesture.access$6100:(Ljavafx/scene/Scene$DnDGesture;)Ljavafx/scene/input/Dragboard;
     122: iconst_1
     123: invokestatic  #26                 // Method com/sun/javafx/scene/input/DragboardHelper.setDataAccessRestriction:(Ljavafx/scene/input/Dragboard;Z)V
     126: goto          148
     129: astore        12
     131: aload_0
     132: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
     135: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
     138: invokestatic  #10                 // Method javafx/scene/Scene$DnDGesture.access$6100:(Ljavafx/scene/Scene$DnDGesture;)Ljavafx/scene/input/Dragboard;
     141: iconst_1
     142: invokestatic  #26                 // Method com/sun/javafx/scene/input/DragboardHelper.setDataAccessRestriction:(Ljavafx/scene/input/Dragboard;Z)V
     145: aload         12
     147: athrow
     148: aload_0
     149: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
     152: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
     155: invokestatic  #23                 // Method javafx/scene/Scene$DnDGesture.access$6400:(Ljavafx/scene/Scene$DnDGesture;)Ljavafx/event/EventTarget;
     158: ifnonnull     181
     161: aload_0
     162: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
     165: getfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
     168: aconst_null
     169: invokestatic  #7                  // Method javafx/scene/Scene$DnDGesture.access$6102:(Ljavafx/scene/Scene$DnDGesture;Ljavafx/scene/input/Dragboard;)Ljavafx/scene/input/Dragboard;
     172: pop
     173: aload_0
     174: getfield      #1                  // Field this$0:Ljavafx/scene/Scene;
     177: aconst_null
     178: putfield      #3                  // Field javafx/scene/Scene.dndGesture:Ljavafx/scene/Scene$DnDGesture;
     181: aload         11
     183: areturn
    Exception table:
       from    to  target type
          98   112   129   any
         129   131   129   any
}
