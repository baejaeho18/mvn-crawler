Compiled from "Affine.java"
class javafx.scene.transform.Affine$AffineElementProperty extends javafx.beans.property.SimpleDoubleProperty {
  private boolean needsValueChangedEvent;

  private double oldValue;

  final javafx.scene.transform.Affine this$0;

  public javafx.scene.transform.Affine$AffineElementProperty(javafx.scene.transform.Affine, double);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field this$0:Ljavafx/scene/transform/Affine;
       5: aload_0
       6: dload_2
       7: invokespecial #4                  // Method javafx/beans/property/SimpleDoubleProperty."<init>":(D)V
      10: aload_0
      11: iconst_0
      12: putfield      #5                  // Field needsValueChangedEvent:Z
      15: return

  public void invalidated();
    Code:
       0: aload_0
       1: getfield      #3                  // Field this$0:Ljavafx/scene/transform/Affine;
       4: getfield      #6                  // Field javafx/scene/transform/Affine.atomicChange:Ljavafx/scene/transform/Affine$AffineAtomicChange;
       7: invokestatic  #7                  // Method javafx/scene/transform/Affine$AffineAtomicChange.access$100:(Ljavafx/scene/transform/Affine$AffineAtomicChange;)Z
      10: ifne          27
      13: aload_0
      14: getfield      #3                  // Field this$0:Ljavafx/scene/transform/Affine;
      17: invokestatic  #8                  // Method javafx/scene/transform/Affine.access$200:(Ljavafx/scene/transform/Affine;)V
      20: aload_0
      21: getfield      #3                  // Field this$0:Ljavafx/scene/transform/Affine;
      24: invokevirtual #9                  // Method javafx/scene/transform/Affine.transformChanged:()V
      27: return

  protected void fireValueChangedEvent();
    Code:
       0: aload_0
       1: getfield      #3                  // Field this$0:Ljavafx/scene/transform/Affine;
       4: getfield      #6                  // Field javafx/scene/transform/Affine.atomicChange:Ljavafx/scene/transform/Affine$AffineAtomicChange;
       7: invokestatic  #7                  // Method javafx/scene/transform/Affine$AffineAtomicChange.access$100:(Ljavafx/scene/transform/Affine$AffineAtomicChange;)Z
      10: ifne          20
      13: aload_0
      14: invokespecial #10                 // Method javafx/beans/property/SimpleDoubleProperty.fireValueChangedEvent:()V
      17: goto          25
      20: aload_0
      21: iconst_1
      22: putfield      #5                  // Field needsValueChangedEvent:Z
      25: return

  private void preProcessAtomicChange();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #11                 // Method get:()D
       5: putfield      #12                 // Field oldValue:D
       8: return

  private void postProcessAtomicChange();
    Code:
       0: aload_0
       1: getfield      #5                  // Field needsValueChangedEvent:Z
       4: ifeq          28
       7: aload_0
       8: iconst_0
       9: putfield      #5                  // Field needsValueChangedEvent:Z
      12: aload_0
      13: getfield      #12                 // Field oldValue:D
      16: aload_0
      17: invokevirtual #11                 // Method get:()D
      20: dcmpl
      21: ifeq          28
      24: aload_0
      25: invokespecial #10                 // Method javafx/beans/property/SimpleDoubleProperty.fireValueChangedEvent:()V
      28: return

  static void access$700(javafx.scene.transform.Affine$AffineElementProperty);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method preProcessAtomicChange:()V
       4: return

  static void access$1900(javafx.scene.transform.Affine$AffineElementProperty);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method postProcessAtomicChange:()V
       4: return
}
