Compiled from "ImageCursor.java"
final class javafx.scene.ImageCursor$DelayedInitialization implements javafx.beans.InvalidationListener {
  private final javafx.scene.ImageCursor targetCursor;

  private final javafx.scene.image.Image[] images;

  private final double hotspotX;

  private final double hotspotY;

  private final boolean initAsSingle;

  private int waitForImages;

  private javafx.scene.ImageCursor$DelayedInitialization(javafx.scene.ImageCursor, javafx.scene.image.Image[], double, double, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field targetCursor:Ljavafx/scene/ImageCursor;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field images:[Ljavafx/scene/image/Image;
      14: aload_0
      15: dload_3
      16: putfield      #4                  // Field hotspotX:D
      19: aload_0
      20: dload         5
      22: putfield      #5                  // Field hotspotY:D
      25: aload_0
      26: iload         7
      28: putfield      #6                  // Field initAsSingle:Z
      31: return

  public static void applyTo(javafx.scene.ImageCursor, javafx.scene.image.Image[], double, double);
    Code:
       0: new           #7                  // class javafx/scene/ImageCursor$DelayedInitialization
       3: dup
       4: aload_0
       5: aload_1
       6: aload_1
       7: arraylength
       8: invokestatic  #8                  // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      11: checkcast     #9                  // class "[Ljavafx/scene/image/Image;"
      14: dload_2
      15: dload         4
      17: iconst_0
      18: invokespecial #10                 // Method "<init>":(Ljavafx/scene/ImageCursor;[Ljavafx/scene/image/Image;DDZ)V
      21: astore        6
      23: aload         6
      25: invokespecial #11                 // Method start:()V
      28: return

  public static void applyTo(javafx.scene.ImageCursor, javafx.scene.image.Image, double, double);
    Code:
       0: new           #7                  // class javafx/scene/ImageCursor$DelayedInitialization
       3: dup
       4: aload_0
       5: iconst_1
       6: anewarray     #12                 // class javafx/scene/image/Image
       9: dup
      10: iconst_0
      11: aload_1
      12: aastore
      13: dload_2
      14: dload         4
      16: iconst_1
      17: invokespecial #10                 // Method "<init>":(Ljavafx/scene/ImageCursor;[Ljavafx/scene/image/Image;DDZ)V
      20: astore        6
      22: aload         6
      24: invokespecial #11                 // Method start:()V
      27: return

  private void start();
    Code:
       0: aload_0
       1: getfield      #3                  // Field images:[Ljavafx/scene/image/Image;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     55
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: aload         4
      22: invokevirtual #13                 // Method javafx/scene/image/Image.getProgress:()D
      25: dconst_1
      26: dcmpg
      27: ifge          49
      30: aload_0
      31: dup
      32: getfield      #14                 // Field waitForImages:I
      35: iconst_1
      36: iadd
      37: putfield      #14                 // Field waitForImages:I
      40: aload         4
      42: invokevirtual #15                 // Method javafx/scene/image/Image.progressProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
      45: aload_0
      46: invokevirtual #16                 // Method javafx/beans/property/ReadOnlyDoubleProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
      49: iinc          3, 1
      52: goto          10
      55: return

  private void cleanupAndFinishInitialization();
    Code:
       0: aload_0
       1: getfield      #3                  // Field images:[Ljavafx/scene/image/Image;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     35
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: aload         4
      22: invokevirtual #15                 // Method javafx/scene/image/Image.progressProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
      25: aload_0
      26: invokevirtual #17                 // Method javafx/beans/property/ReadOnlyDoubleProperty.removeListener:(Ljavafx/beans/InvalidationListener;)V
      29: iinc          3, 1
      32: goto          10
      35: aload_0
      36: getfield      #6                  // Field initAsSingle:Z
      39: ifeq          66
      42: aload_0
      43: getfield      #2                  // Field targetCursor:Ljavafx/scene/ImageCursor;
      46: aload_0
      47: getfield      #3                  // Field images:[Ljavafx/scene/image/Image;
      50: iconst_0
      51: aaload
      52: aload_0
      53: getfield      #4                  // Field hotspotX:D
      56: aload_0
      57: getfield      #5                  // Field hotspotY:D
      60: invokestatic  #18                 // Method javafx/scene/ImageCursor.access$000:(Ljavafx/scene/ImageCursor;Ljavafx/scene/image/Image;DD)V
      63: goto          85
      66: aload_0
      67: getfield      #2                  // Field targetCursor:Ljavafx/scene/ImageCursor;
      70: aload_0
      71: getfield      #3                  // Field images:[Ljavafx/scene/image/Image;
      74: aload_0
      75: getfield      #4                  // Field hotspotX:D
      78: aload_0
      79: getfield      #5                  // Field hotspotY:D
      82: invokestatic  #19                 // Method javafx/scene/ImageCursor.access$100:(Ljavafx/scene/ImageCursor;[Ljavafx/scene/image/Image;DD)V
      85: return

  public void invalidated(javafx.beans.Observable);
    Code:
       0: aload_1
       1: checkcast     #20                 // class javafx/beans/property/ReadOnlyDoubleProperty
       4: invokevirtual #21                 // Method javafx/beans/property/ReadOnlyDoubleProperty.get:()D
       7: dconst_1
       8: dcmpl
       9: ifne          30
      12: aload_0
      13: dup
      14: getfield      #14                 // Field waitForImages:I
      17: iconst_1
      18: isub
      19: dup_x1
      20: putfield      #14                 // Field waitForImages:I
      23: ifne          30
      26: aload_0
      27: invokespecial #22                 // Method cleanupAndFinishInitialization:()V
      30: return
}
