Compiled from "PerspectiveCamera.java"
public class javafx.scene.PerspectiveCamera extends javafx.scene.Camera {
  private boolean fixedEyeAtCameraZero;

  private static final com.sun.javafx.geom.transform.Affine3D LOOK_AT_TX;

  private static final com.sun.javafx.geom.transform.Affine3D LOOK_AT_TX_FIXED_EYE;

  private javafx.beans.property.DoubleProperty fieldOfView;

  private javafx.beans.property.BooleanProperty verticalFieldOfView;

  public final void setFieldOfView(double);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method fieldOfViewProperty:()Ljavafx/beans/property/DoubleProperty;
       4: dload_1
       5: invokevirtual #4                  // Method javafx/beans/property/DoubleProperty.set:(D)V
       8: return

  public final double getFieldOfView();
    Code:
       0: aload_0
       1: getfield      #5                  // Field fieldOfView:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     13
       7: ldc2_w        #6                  // double 30.0d
      10: goto          20
      13: aload_0
      14: getfield      #5                  // Field fieldOfView:Ljavafx/beans/property/DoubleProperty;
      17: invokevirtual #8                  // Method javafx/beans/property/DoubleProperty.get:()D
      20: dreturn

  public final javafx.beans.property.DoubleProperty fieldOfViewProperty();
    Code:
       0: aload_0
       1: getfield      #5                  // Field fieldOfView:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     25
       7: aload_0
       8: new           #9                  // class javafx/scene/PerspectiveCamera$2
      11: dup
      12: aload_0
      13: aload_0
      14: ldc           #10                 // String fieldOfView
      16: ldc2_w        #6                  // double 30.0d
      19: invokespecial #11                 // Method javafx/scene/PerspectiveCamera$2."<init>":(Ljavafx/scene/PerspectiveCamera;Ljava/lang/Object;Ljava/lang/String;D)V
      22: putfield      #5                  // Field fieldOfView:Ljavafx/beans/property/DoubleProperty;
      25: aload_0
      26: getfield      #5                  // Field fieldOfView:Ljavafx/beans/property/DoubleProperty;
      29: areturn

  public final void setVerticalFieldOfView(boolean);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method verticalFieldOfViewProperty:()Ljavafx/beans/property/BooleanProperty;
       4: iload_1
       5: invokevirtual #13                 // Method javafx/beans/property/BooleanProperty.set:(Z)V
       8: return

  public final boolean isVerticalFieldOfView();
    Code:
       0: aload_0
       1: getfield      #14                 // Field verticalFieldOfView:Ljavafx/beans/property/BooleanProperty;
       4: ifnonnull     11
       7: iconst_1
       8: goto          18
      11: aload_0
      12: getfield      #14                 // Field verticalFieldOfView:Ljavafx/beans/property/BooleanProperty;
      15: invokevirtual #15                 // Method javafx/beans/property/BooleanProperty.get:()Z
      18: ireturn

  public final javafx.beans.property.BooleanProperty verticalFieldOfViewProperty();
    Code:
       0: aload_0
       1: getfield      #14                 // Field verticalFieldOfView:Ljavafx/beans/property/BooleanProperty;
       4: ifnonnull     23
       7: aload_0
       8: new           #16                 // class javafx/scene/PerspectiveCamera$3
      11: dup
      12: aload_0
      13: aload_0
      14: ldc           #17                 // String verticalFieldOfView
      16: iconst_1
      17: invokespecial #18                 // Method javafx/scene/PerspectiveCamera$3."<init>":(Ljavafx/scene/PerspectiveCamera;Ljava/lang/Object;Ljava/lang/String;Z)V
      20: putfield      #14                 // Field verticalFieldOfView:Ljavafx/beans/property/BooleanProperty;
      23: aload_0
      24: getfield      #14                 // Field verticalFieldOfView:Ljavafx/beans/property/BooleanProperty;
      27: areturn

  public javafx.scene.PerspectiveCamera();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #19                 // Method "<init>":(Z)V
       5: return

  public javafx.scene.PerspectiveCamera(boolean);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method javafx/scene/Camera."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #21                 // Field fixedEyeAtCameraZero:Z
       9: aload_0
      10: invokestatic  #22                 // Method com/sun/javafx/scene/PerspectiveCameraHelper.initHelper:(Ljavafx/scene/PerspectiveCamera;)V
      13: getstatic     #23                 // Field javafx/application/ConditionalFeature.SCENE3D:Ljavafx/application/ConditionalFeature;
      16: invokestatic  #24                 // Method javafx/application/Platform.isSupported:(Ljavafx/application/ConditionalFeature;)Z
      19: ifne          37
      22: ldc           #25                 // class javafx/scene/PerspectiveCamera
      24: invokevirtual #26                 // Method java/lang/Class.getName:()Ljava/lang/String;
      27: astore_2
      28: aload_2
      29: invokestatic  #27                 // Method com/sun/javafx/logging/PlatformLogger.getLogger:(Ljava/lang/String;)Lcom/sun/javafx/logging/PlatformLogger;
      32: ldc           #28                 // String System can\'t support ConditionalFeature.SCENE3D
      34: invokevirtual #29                 // Method com/sun/javafx/logging/PlatformLogger.warning:(Ljava/lang/String;)V
      37: aload_0
      38: iload_1
      39: putfield      #21                 // Field fixedEyeAtCameraZero:Z
      42: return

  public final boolean isFixedEyeAtCameraZero();
    Code:
       0: aload_0
       1: getfield      #21                 // Field fixedEyeAtCameraZero:Z
       4: ireturn

  final com.sun.javafx.geom.PickRay computePickRay(double, double, com.sun.javafx.geom.PickRay);
    Code:
       0: dload_1
       1: dload_3
       2: aload_0
       3: getfield      #21                 // Field fixedEyeAtCameraZero:Z
       6: aload_0
       7: invokevirtual #30                 // Method getViewWidth:()D
      10: aload_0
      11: invokevirtual #31                 // Method getViewHeight:()D
      14: aload_0
      15: invokevirtual #32                 // Method getFieldOfView:()D
      18: invokestatic  #33                 // Method java/lang/Math.toRadians:(D)D
      21: aload_0
      22: invokevirtual #34                 // Method isVerticalFieldOfView:()Z
      25: aload_0
      26: invokevirtual #35                 // Method getCameraTransform:()Lcom/sun/javafx/geom/transform/Affine3D;
      29: aload_0
      30: invokevirtual #36                 // Method getNearClip:()D
      33: aload_0
      34: invokevirtual #37                 // Method getFarClip:()D
      37: aload         5
      39: invokestatic  #38                 // Method com/sun/javafx/geom/PickRay.computePerspectivePickRay:(DDZDDDZLcom/sun/javafx/geom/transform/Affine3D;DDLcom/sun/javafx/geom/PickRay;)Lcom/sun/javafx/geom/PickRay;
      42: areturn

  javafx.scene.Camera copy();
    Code:
       0: new           #25                 // class javafx/scene/PerspectiveCamera
       3: dup
       4: aload_0
       5: getfield      #21                 // Field fixedEyeAtCameraZero:Z
       8: invokespecial #19                 // Method "<init>":(Z)V
      11: astore_1
      12: aload_1
      13: aload_0
      14: invokevirtual #36                 // Method getNearClip:()D
      17: invokevirtual #39                 // Method setNearClip:(D)V
      20: aload_1
      21: aload_0
      22: invokevirtual #37                 // Method getFarClip:()D
      25: invokevirtual #40                 // Method setFarClip:(D)V
      28: aload_1
      29: aload_0
      30: invokevirtual #32                 // Method getFieldOfView:()D
      33: invokevirtual #41                 // Method setFieldOfView:(D)V
      36: aload_1
      37: areturn

  private com.sun.javafx.sg.prism.NGNode doCreatePeer();
    Code:
       0: new           #42                 // class com/sun/javafx/sg/prism/NGPerspectiveCamera
       3: dup
       4: aload_0
       5: getfield      #21                 // Field fixedEyeAtCameraZero:Z
       8: invokespecial #43                 // Method com/sun/javafx/sg/prism/NGPerspectiveCamera."<init>":(Z)V
      11: astore_1
      12: aload_1
      13: aload_0
      14: invokevirtual #36                 // Method getNearClip:()D
      17: d2f
      18: invokevirtual #44                 // Method com/sun/javafx/sg/prism/NGPerspectiveCamera.setNearClip:(F)V
      21: aload_1
      22: aload_0
      23: invokevirtual #37                 // Method getFarClip:()D
      26: d2f
      27: invokevirtual #45                 // Method com/sun/javafx/sg/prism/NGPerspectiveCamera.setFarClip:(F)V
      30: aload_1
      31: aload_0
      32: invokevirtual #32                 // Method getFieldOfView:()D
      35: d2f
      36: invokevirtual #46                 // Method com/sun/javafx/sg/prism/NGPerspectiveCamera.setFieldOfView:(F)V
      39: aload_1
      40: areturn

  private void doUpdatePeer();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getPeer:()Lcom/sun/javafx/sg/prism/NGNode;
       4: checkcast     #42                 // class com/sun/javafx/sg/prism/NGPerspectiveCamera
       7: astore_1
       8: aload_0
       9: getstatic     #48                 // Field com/sun/javafx/scene/DirtyBits.NODE_CAMERA:Lcom/sun/javafx/scene/DirtyBits;
      12: invokevirtual #49                 // Method isDirty:(Lcom/sun/javafx/scene/DirtyBits;)Z
      15: ifeq          35
      18: aload_1
      19: aload_0
      20: invokevirtual #34                 // Method isVerticalFieldOfView:()Z
      23: invokevirtual #50                 // Method com/sun/javafx/sg/prism/NGPerspectiveCamera.setVerticalFieldOfView:(Z)V
      26: aload_1
      27: aload_0
      28: invokevirtual #32                 // Method getFieldOfView:()D
      31: d2f
      32: invokevirtual #46                 // Method com/sun/javafx/sg/prism/NGPerspectiveCamera.setFieldOfView:(F)V
      35: return

  void computeProjectionTransform(com.sun.javafx.geom.transform.GeneralTransform3D);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #34                 // Method isVerticalFieldOfView:()Z
       5: aload_0
       6: invokevirtual #32                 // Method getFieldOfView:()D
       9: invokestatic  #33                 // Method java/lang/Math.toRadians:(D)D
      12: aload_0
      13: invokevirtual #30                 // Method getViewWidth:()D
      16: aload_0
      17: invokevirtual #31                 // Method getViewHeight:()D
      20: ddiv
      21: aload_0
      22: invokevirtual #36                 // Method getNearClip:()D
      25: aload_0
      26: invokevirtual #37                 // Method getFarClip:()D
      29: invokevirtual #51                 // Method com/sun/javafx/geom/transform/GeneralTransform3D.perspective:(ZDDDD)Lcom/sun/javafx/geom/transform/GeneralTransform3D;
      32: pop
      33: return

  void computeViewTransform(com.sun.javafx.geom.transform.Affine3D);
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method isFixedEyeAtCameraZero:()Z
       4: ifeq          17
       7: aload_1
       8: getstatic     #53                 // Field LOOK_AT_TX_FIXED_EYE:Lcom/sun/javafx/geom/transform/Affine3D;
      11: invokevirtual #54                 // Method com/sun/javafx/geom/transform/Affine3D.setTransform:(Lcom/sun/javafx/geom/transform/BaseTransform;)V
      14: goto          137
      17: aload_0
      18: invokevirtual #30                 // Method getViewWidth:()D
      21: dstore_2
      22: aload_0
      23: invokevirtual #31                 // Method getViewHeight:()D
      26: dstore        4
      28: aload_0
      29: invokevirtual #34                 // Method isVerticalFieldOfView:()Z
      32: istore        6
      34: dload_2
      35: dload         4
      37: ddiv
      38: dstore        7
      40: aload_0
      41: invokevirtual #32                 // Method getFieldOfView:()D
      44: invokestatic  #33                 // Method java/lang/Math.toRadians:(D)D
      47: ldc2_w        #55                 // double 2.0d
      50: ddiv
      51: invokestatic  #57                 // Method java/lang/Math.tan:(D)D
      54: dstore        9
      56: dload         9
      58: dneg
      59: iload         6
      61: ifeq          69
      64: dload         7
      66: goto          70
      69: dconst_1
      70: dmul
      71: dstore        11
      73: dload         9
      75: iload         6
      77: ifeq          84
      80: dconst_1
      81: goto          88
      84: dconst_1
      85: dload         7
      87: ddiv
      88: dmul
      89: dstore        13
      91: ldc2_w        #55                 // double 2.0d
      94: dload         9
      96: dmul
      97: iload         6
      99: ifeq          107
     102: dload         4
     104: goto          108
     107: dload_2
     108: ddiv
     109: dstore        15
     111: aload_1
     112: dload         11
     114: dload         13
     116: dconst_0
     117: invokevirtual #58                 // Method com/sun/javafx/geom/transform/Affine3D.setToTranslation:(DDD)V
     120: aload_1
     121: getstatic     #59                 // Field LOOK_AT_TX:Lcom/sun/javafx/geom/transform/Affine3D;
     124: invokevirtual #60                 // Method com/sun/javafx/geom/transform/Affine3D.concatenate:(Lcom/sun/javafx/geom/transform/BaseTransform;)V
     127: aload_1
     128: dload         15
     130: dload         15
     132: dload         15
     134: invokevirtual #61                 // Method com/sun/javafx/geom/transform/Affine3D.scale:(DDD)V
     137: return

  com.sun.javafx.geom.Vec3d computePosition(com.sun.javafx.geom.Vec3d);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #62                 // class com/sun/javafx/geom/Vec3d
       7: dup
       8: invokespecial #63                 // Method com/sun/javafx/geom/Vec3d."<init>":()V
      11: astore_1
      12: aload_0
      13: getfield      #21                 // Field fixedEyeAtCameraZero:Z
      16: ifeq          29
      19: aload_1
      20: dconst_0
      21: dconst_0
      22: dconst_0
      23: invokevirtual #64                 // Method com/sun/javafx/geom/Vec3d.set:(DDD)V
      26: goto          92
      29: aload_0
      30: invokevirtual #30                 // Method getViewWidth:()D
      33: ldc2_w        #55                 // double 2.0d
      36: ddiv
      37: dstore_2
      38: aload_0
      39: invokevirtual #31                 // Method getViewHeight:()D
      42: ldc2_w        #55                 // double 2.0d
      45: ddiv
      46: dstore        4
      48: aload_0
      49: invokevirtual #34                 // Method isVerticalFieldOfView:()Z
      52: ifeq          60
      55: dload         4
      57: goto          61
      60: dload_2
      61: dstore        6
      63: dload         6
      65: aload_0
      66: invokevirtual #32                 // Method getFieldOfView:()D
      69: ldc2_w        #55                 // double 2.0d
      72: ddiv
      73: invokestatic  #33                 // Method java/lang/Math.toRadians:(D)D
      76: invokestatic  #57                 // Method java/lang/Math.tan:(D)D
      79: ddiv
      80: dstore        8
      82: aload_1
      83: dload_2
      84: dload         4
      86: dload         8
      88: dneg
      89: invokevirtual #64                 // Method com/sun/javafx/geom/Vec3d.set:(DDD)V
      92: aload_1
      93: areturn

  static com.sun.javafx.sg.prism.NGNode access$000(javafx.scene.PerspectiveCamera);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method doCreatePeer:()Lcom/sun/javafx/sg/prism/NGNode;
       4: areturn

  static void access$100(javafx.scene.PerspectiveCamera);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method doUpdatePeer:()V
       4: return

  static {};
    Code:
       0: new           #65                 // class com/sun/javafx/geom/transform/Affine3D
       3: dup
       4: invokespecial #66                 // Method com/sun/javafx/geom/transform/Affine3D."<init>":()V
       7: putstatic     #59                 // Field LOOK_AT_TX:Lcom/sun/javafx/geom/transform/Affine3D;
      10: new           #65                 // class com/sun/javafx/geom/transform/Affine3D
      13: dup
      14: invokespecial #66                 // Method com/sun/javafx/geom/transform/Affine3D."<init>":()V
      17: putstatic     #53                 // Field LOOK_AT_TX_FIXED_EYE:Lcom/sun/javafx/geom/transform/Affine3D;
      20: new           #67                 // class javafx/scene/PerspectiveCamera$1
      23: dup
      24: invokespecial #68                 // Method javafx/scene/PerspectiveCamera$1."<init>":()V
      27: invokestatic  #69                 // Method com/sun/javafx/scene/PerspectiveCameraHelper.setPerspectiveCameraAccessor:(Lcom/sun/javafx/scene/PerspectiveCameraHelper$PerspectiveCameraAccessor;)V
      30: getstatic     #59                 // Field LOOK_AT_TX:Lcom/sun/javafx/geom/transform/Affine3D;
      33: dconst_0
      34: dconst_0
      35: ldc2_w        #70                 // double -1.0d
      38: invokevirtual #58                 // Method com/sun/javafx/geom/transform/Affine3D.setToTranslation:(DDD)V
      41: getstatic     #59                 // Field LOOK_AT_TX:Lcom/sun/javafx/geom/transform/Affine3D;
      44: ldc2_w        #73                 // double 3.141592653589793d
      47: dconst_1
      48: dconst_0
      49: dconst_0
      50: invokevirtual #75                 // Method com/sun/javafx/geom/transform/Affine3D.rotate:(DDDD)V
      53: getstatic     #53                 // Field LOOK_AT_TX_FIXED_EYE:Lcom/sun/javafx/geom/transform/Affine3D;
      56: ldc2_w        #73                 // double 3.141592653589793d
      59: dconst_1
      60: dconst_0
      61: dconst_0
      62: invokevirtual #75                 // Method com/sun/javafx/geom/transform/Affine3D.rotate:(DDDD)V
      65: return
}
