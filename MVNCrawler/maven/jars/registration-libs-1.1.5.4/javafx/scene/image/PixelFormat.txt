Compiled from "PixelFormat.java"
public abstract class javafx.scene.image.PixelFormat<T extends java.nio.Buffer> {
  private javafx.scene.image.PixelFormat$Type type;

  javafx.scene.image.PixelFormat(javafx.scene.image.PixelFormat$Type);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field type:Ljavafx/scene/image/PixelFormat$Type;
       9: return

  public static javafx.scene.image.WritablePixelFormat<java.nio.IntBuffer> getIntArgbInstance();
    Code:
       0: getstatic     #3                  // Field javafx/scene/image/WritablePixelFormat$IntArgb.INSTANCE:Ljavafx/scene/image/WritablePixelFormat$IntArgb;
       3: areturn

  public static javafx.scene.image.WritablePixelFormat<java.nio.IntBuffer> getIntArgbPreInstance();
    Code:
       0: getstatic     #4                  // Field javafx/scene/image/WritablePixelFormat$IntArgbPre.INSTANCE:Ljavafx/scene/image/WritablePixelFormat$IntArgbPre;
       3: areturn

  public static javafx.scene.image.WritablePixelFormat<java.nio.ByteBuffer> getByteBgraInstance();
    Code:
       0: getstatic     #5                  // Field javafx/scene/image/WritablePixelFormat$ByteBgra.INSTANCE:Ljavafx/scene/image/WritablePixelFormat$ByteBgra;
       3: areturn

  public static javafx.scene.image.WritablePixelFormat<java.nio.ByteBuffer> getByteBgraPreInstance();
    Code:
       0: getstatic     #6                  // Field javafx/scene/image/WritablePixelFormat$ByteBgraPre.INSTANCE:Ljavafx/scene/image/WritablePixelFormat$ByteBgraPre;
       3: areturn

  public static javafx.scene.image.PixelFormat<java.nio.ByteBuffer> getByteRgbInstance();
    Code:
       0: getstatic     #7                  // Field javafx/scene/image/PixelFormat$ByteRgb.instance:Ljavafx/scene/image/PixelFormat$ByteRgb;
       3: areturn

  public static javafx.scene.image.PixelFormat<java.nio.ByteBuffer> createByteIndexedPremultipliedInstance(int[]);
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #8                  // Method javafx/scene/image/PixelFormat$IndexedPixelFormat.createByte:([IZ)Ljavafx/scene/image/PixelFormat;
       5: areturn

  public static javafx.scene.image.PixelFormat<java.nio.ByteBuffer> createByteIndexedInstance(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: invokestatic  #8                  // Method javafx/scene/image/PixelFormat$IndexedPixelFormat.createByte:([IZ)Ljavafx/scene/image/PixelFormat;
       5: areturn

  public javafx.scene.image.PixelFormat$Type getType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field type:Ljavafx/scene/image/PixelFormat$Type;
       4: areturn

  public abstract boolean isWritable();

  public abstract boolean isPremultiplied();

  static int NonPretoPre(int);
    Code:
       0: iload_0
       1: bipush        24
       3: iushr
       4: istore_1
       5: iload_1
       6: sipush        255
       9: if_icmpne     14
      12: iload_0
      13: ireturn
      14: iload_1
      15: ifne          20
      18: iconst_0
      19: ireturn
      20: iload_0
      21: bipush        16
      23: ishr
      24: sipush        255
      27: iand
      28: istore_2
      29: iload_0
      30: bipush        8
      32: ishr
      33: sipush        255
      36: iand
      37: istore_3
      38: iload_0
      39: sipush        255
      42: iand
      43: istore        4
      45: iload_2
      46: iload_1
      47: imul
      48: bipush        127
      50: iadd
      51: sipush        255
      54: idiv
      55: istore_2
      56: iload_3
      57: iload_1
      58: imul
      59: bipush        127
      61: iadd
      62: sipush        255
      65: idiv
      66: istore_3
      67: iload         4
      69: iload_1
      70: imul
      71: bipush        127
      73: iadd
      74: sipush        255
      77: idiv
      78: istore        4
      80: iload_1
      81: bipush        24
      83: ishl
      84: iload_2
      85: bipush        16
      87: ishl
      88: ior
      89: iload_3
      90: bipush        8
      92: ishl
      93: ior
      94: iload         4
      96: ior
      97: ireturn

  static int PretoNonPre(int);
    Code:
       0: iload_0
       1: bipush        24
       3: iushr
       4: istore_1
       5: iload_1
       6: sipush        255
       9: if_icmpeq     16
      12: iload_1
      13: ifne          18
      16: iload_0
      17: ireturn
      18: iload_0
      19: bipush        16
      21: ishr
      22: sipush        255
      25: iand
      26: istore_2
      27: iload_0
      28: bipush        8
      30: ishr
      31: sipush        255
      34: iand
      35: istore_3
      36: iload_0
      37: sipush        255
      40: iand
      41: istore        4
      43: iload_1
      44: iconst_1
      45: ishr
      46: istore        5
      48: iload_2
      49: iload_1
      50: if_icmplt     59
      53: sipush        255
      56: goto          69
      59: iload_2
      60: sipush        255
      63: imul
      64: iload         5
      66: iadd
      67: iload_1
      68: idiv
      69: istore_2
      70: iload_3
      71: iload_1
      72: if_icmplt     81
      75: sipush        255
      78: goto          91
      81: iload_3
      82: sipush        255
      85: imul
      86: iload         5
      88: iadd
      89: iload_1
      90: idiv
      91: istore_3
      92: iload         4
      94: iload_1
      95: if_icmplt     104
      98: sipush        255
     101: goto          115
     104: iload         4
     106: sipush        255
     109: imul
     110: iload         5
     112: iadd
     113: iload_1
     114: idiv
     115: istore        4
     117: iload_1
     118: bipush        24
     120: ishl
     121: iload_2
     122: bipush        16
     124: ishl
     125: ior
     126: iload_3
     127: bipush        8
     129: ishl
     130: ior
     131: iload         4
     133: ior
     134: ireturn

  public abstract int getArgb(T, int, int, int);
}
