Compiled from "Image.java"
class javafx.scene.image.Image$1 implements com.sun.javafx.tk.Toolkit$ImageAccessor {
  javafx.scene.image.Image$1();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean isAnimation(javafx.scene.image.Image);
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method javafx/scene/image/Image.isAnimation:()Z
       4: ireturn

  public javafx.beans.property.ReadOnlyObjectProperty<com.sun.javafx.tk.PlatformImage> getImageProperty(javafx.scene.image.Image);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method javafx/scene/image/Image.acc_platformImageProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       4: areturn

  public int[] getPreColors(javafx.scene.image.PixelFormat<java.nio.ByteBuffer>);
    Code:
       0: aload_1
       1: checkcast     #4                  // class javafx/scene/image/PixelFormat$IndexedPixelFormat
       4: invokevirtual #5                  // Method javafx/scene/image/PixelFormat$IndexedPixelFormat.getPreColors:()[I
       7: areturn

  public int[] getNonPreColors(javafx.scene.image.PixelFormat<java.nio.ByteBuffer>);
    Code:
       0: aload_1
       1: checkcast     #4                  // class javafx/scene/image/PixelFormat$IndexedPixelFormat
       4: invokevirtual #6                  // Method javafx/scene/image/PixelFormat$IndexedPixelFormat.getNonPreColors:()[I
       7: areturn

  public java.lang.Object getPlatformImage(javafx.scene.image.Image);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method javafx/scene/image/Image.getPlatformImage:()Ljava/lang/Object;
       4: areturn

  public javafx.scene.image.Image fromPlatformImage(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #8                  // Method javafx/scene/image/Image.fromPlatformImage:(Ljava/lang/Object;)Ljavafx/scene/image/Image;
       4: areturn
}
