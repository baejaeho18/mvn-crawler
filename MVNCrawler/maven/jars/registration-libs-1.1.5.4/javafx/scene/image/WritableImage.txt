Compiled from "WritableImage.java"
public class javafx.scene.image.WritableImage extends javafx.scene.image.Image {
  private com.sun.javafx.tk.ImageLoader tkImageLoader;

  private javafx.scene.image.PixelWriter writer;

  public javafx.scene.image.WritableImage(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #3                  // Method javafx/scene/image/Image."<init>":(II)V
       6: return

  public javafx.scene.image.WritableImage(javafx.scene.image.PixelReader, int, int);
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: invokespecial #3                  // Method javafx/scene/image/Image."<init>":(II)V
       6: aload_0
       7: invokevirtual #4                  // Method getPixelWriter:()Ljavafx/scene/image/PixelWriter;
      10: iconst_0
      11: iconst_0
      12: iload_2
      13: iload_3
      14: aload_1
      15: iconst_0
      16: iconst_0
      17: invokeinterface #5,  8            // InterfaceMethod javafx/scene/image/PixelWriter.setPixels:(IIIILjavafx/scene/image/PixelReader;II)V
      22: return

  public javafx.scene.image.WritableImage(javafx.scene.image.PixelReader, int, int, int, int);
    Code:
       0: aload_0
       1: iload         4
       3: iload         5
       5: invokespecial #3                  // Method javafx/scene/image/Image."<init>":(II)V
       8: aload_0
       9: invokevirtual #4                  // Method getPixelWriter:()Ljavafx/scene/image/PixelWriter;
      12: iconst_0
      13: iconst_0
      14: iload         4
      16: iload         5
      18: aload_1
      19: iload_2
      20: iload_3
      21: invokeinterface #5,  8            // InterfaceMethod javafx/scene/image/PixelWriter.setPixels:(IIIILjavafx/scene/image/PixelReader;II)V
      26: return

  boolean isAnimation();
    Code:
       0: iconst_1
       1: ireturn

  boolean pixelsReadable();
    Code:
       0: iconst_1
       1: ireturn

  public final javafx.scene.image.PixelWriter getPixelWriter();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getProgress:()D
       4: dconst_1
       5: dcmpg
       6: iflt          16
       9: aload_0
      10: invokevirtual #7                  // Method isError:()Z
      13: ifeq          18
      16: aconst_null
      17: areturn
      18: aload_0
      19: getfield      #8                  // Field writer:Ljavafx/scene/image/PixelWriter;
      22: ifnonnull     37
      25: aload_0
      26: new           #9                  // class javafx/scene/image/WritableImage$2
      29: dup
      30: aload_0
      31: invokespecial #10                 // Method javafx/scene/image/WritableImage$2."<init>":(Ljavafx/scene/image/WritableImage;)V
      34: putfield      #8                  // Field writer:Ljavafx/scene/image/PixelWriter;
      37: aload_0
      38: getfield      #8                  // Field writer:Ljavafx/scene/image/PixelWriter;
      41: areturn

  private void loadTkImage(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #11                 // class com/sun/javafx/tk/ImageLoader
       4: ifne          21
       7: new           #12                 // class java/lang/IllegalArgumentException
      10: dup
      11: aload_1
      12: invokedynamic #13,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/Object;)Ljava/lang/String;
      17: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_1
      22: checkcast     #11                 // class com/sun/javafx/tk/ImageLoader
      25: astore_2
      26: aload_2
      27: invokeinterface #15,  1           // InterfaceMethod com/sun/javafx/tk/ImageLoader.getWidth:()D
      32: aload_0
      33: invokevirtual #16                 // Method getWidth:()D
      36: d2i
      37: i2d
      38: dcmpl
      39: ifne          58
      42: aload_2
      43: invokeinterface #17,  1           // InterfaceMethod com/sun/javafx/tk/ImageLoader.getHeight:()D
      48: aload_0
      49: invokevirtual #18                 // Method getHeight:()D
      52: d2i
      53: i2d
      54: dcmpl
      55: ifeq          68
      58: new           #12                 // class java/lang/IllegalArgumentException
      61: dup
      62: ldc           #19                 // String Size of loader does not match size of image
      64: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: aload_0
      69: aload_2
      70: iconst_0
      71: invokeinterface #20,  2           // InterfaceMethod com/sun/javafx/tk/ImageLoader.getFrame:(I)Lcom/sun/javafx/tk/PlatformImage;
      76: invokespecial #21                 // Method javafx/scene/image/Image.setPlatformImage:(Lcom/sun/javafx/tk/PlatformImage;)V
      79: aload_0
      80: aload_2
      81: putfield      #22                 // Field tkImageLoader:Lcom/sun/javafx/tk/ImageLoader;
      84: return

  private java.lang.Object getTkImageLoader();
    Code:
       0: aload_0
       1: getfield      #22                 // Field tkImageLoader:Lcom/sun/javafx/tk/ImageLoader;
       4: areturn

  static void access$000(javafx.scene.image.WritableImage, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method loadTkImage:(Ljava/lang/Object;)V
       5: return

  static java.lang.Object access$100(javafx.scene.image.WritableImage);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getTkImageLoader:()Ljava/lang/Object;
       4: areturn

  static {};
    Code:
       0: new           #23                 // class javafx/scene/image/WritableImage$1
       3: dup
       4: invokespecial #24                 // Method javafx/scene/image/WritableImage$1."<init>":()V
       7: invokestatic  #25                 // Method com/sun/javafx/tk/Toolkit.setWritableImageAccessor:(Lcom/sun/javafx/tk/Toolkit$WritableImageAccessor;)V
      10: return
}
