Compiled from "Image.java"
public class javafx.scene.image.Image {
  private static final java.util.regex.Pattern URL_QUICKMATCH;

  private final java.lang.String url;

  private final java.io.InputStream inputSource;

  private javafx.beans.property.ReadOnlyDoubleWrapper progress;

  private final double requestedWidth;

  private final double requestedHeight;

  private javafx.scene.image.Image$DoublePropertyImpl width;

  private javafx.scene.image.Image$DoublePropertyImpl height;

  private final boolean preserveRatio;

  private final boolean smooth;

  private final boolean backgroundLoading;

  private javafx.beans.property.ReadOnlyBooleanWrapper error;

  private javafx.beans.property.ReadOnlyObjectWrapper<java.lang.Exception> exception;

  private javafx.scene.image.Image$ObjectPropertyImpl<com.sun.javafx.tk.PlatformImage> platformImage;

  private javafx.scene.image.Image$ImageTask backgroundTask;

  private javafx.scene.image.Image$Animation animation;

  private com.sun.javafx.tk.PlatformImage[] animFrames;

  private static final int MAX_RUNNING_TASKS;

  private static int runningTasks;

  private static final java.util.Queue<javafx.scene.image.Image$ImageTask> pendingTasks;

  private javafx.scene.image.PixelReader reader;

  public final java.lang.String getUrl();
    Code:
       0: aload_0
       1: getfield      #7                  // Field url:Ljava/lang/String;
       4: areturn

  final java.io.InputStream getInputSource();
    Code:
       0: aload_0
       1: getfield      #13                 // Field inputSource:Ljava/io/InputStream;
       4: areturn

  final void setProgress(double);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method progressPropertyImpl:()Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: dload_1
       5: invokevirtual #15                 // Method javafx/beans/property/ReadOnlyDoubleWrapper.set:(D)V
       8: return

  public final double getProgress();
    Code:
       0: aload_0
       1: getfield      #16                 // Field progress:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: ifnonnull     11
       7: dconst_0
       8: goto          18
      11: aload_0
      12: getfield      #16                 // Field progress:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      15: invokevirtual #17                 // Method javafx/beans/property/ReadOnlyDoubleWrapper.get:()D
      18: dreturn

  public final javafx.beans.property.ReadOnlyDoubleProperty progressProperty();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method progressPropertyImpl:()Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: invokevirtual #18                 // Method javafx/beans/property/ReadOnlyDoubleWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
       7: areturn

  private javafx.beans.property.ReadOnlyDoubleWrapper progressPropertyImpl();
    Code:
       0: aload_0
       1: getfield      #16                 // Field progress:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: ifnonnull     21
       7: aload_0
       8: new           #19                 // class javafx/beans/property/ReadOnlyDoubleWrapper
      11: dup
      12: aload_0
      13: ldc           #20                 // String progress
      15: invokespecial #21                 // Method javafx/beans/property/ReadOnlyDoubleWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      18: putfield      #16                 // Field progress:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      21: aload_0
      22: getfield      #16                 // Field progress:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      25: areturn

  public final double getRequestedWidth();
    Code:
       0: aload_0
       1: getfield      #6                  // Field requestedWidth:D
       4: dreturn

  public final double getRequestedHeight();
    Code:
       0: aload_0
       1: getfield      #5                  // Field requestedHeight:D
       4: dreturn

  public final double getWidth();
    Code:
       0: aload_0
       1: getfield      #22                 // Field width:Ljavafx/scene/image/Image$DoublePropertyImpl;
       4: ifnonnull     11
       7: dconst_0
       8: goto          18
      11: aload_0
      12: getfield      #22                 // Field width:Ljavafx/scene/image/Image$DoublePropertyImpl;
      15: invokevirtual #23                 // Method javafx/scene/image/Image$DoublePropertyImpl.get:()D
      18: dreturn

  public final javafx.beans.property.ReadOnlyDoubleProperty widthProperty();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method widthPropertyImpl:()Ljavafx/scene/image/Image$DoublePropertyImpl;
       4: areturn

  private javafx.scene.image.Image$DoublePropertyImpl widthPropertyImpl();
    Code:
       0: aload_0
       1: getfield      #22                 // Field width:Ljavafx/scene/image/Image$DoublePropertyImpl;
       4: ifnonnull     21
       7: aload_0
       8: new           #25                 // class javafx/scene/image/Image$DoublePropertyImpl
      11: dup
      12: aload_0
      13: ldc           #26                 // String width
      15: invokespecial #27                 // Method javafx/scene/image/Image$DoublePropertyImpl."<init>":(Ljavafx/scene/image/Image;Ljava/lang/String;)V
      18: putfield      #22                 // Field width:Ljavafx/scene/image/Image$DoublePropertyImpl;
      21: aload_0
      22: getfield      #22                 // Field width:Ljavafx/scene/image/Image$DoublePropertyImpl;
      25: areturn

  public final double getHeight();
    Code:
       0: aload_0
       1: getfield      #28                 // Field height:Ljavafx/scene/image/Image$DoublePropertyImpl;
       4: ifnonnull     11
       7: dconst_0
       8: goto          18
      11: aload_0
      12: getfield      #28                 // Field height:Ljavafx/scene/image/Image$DoublePropertyImpl;
      15: invokevirtual #23                 // Method javafx/scene/image/Image$DoublePropertyImpl.get:()D
      18: dreturn

  public final javafx.beans.property.ReadOnlyDoubleProperty heightProperty();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method heightPropertyImpl:()Ljavafx/scene/image/Image$DoublePropertyImpl;
       4: areturn

  private javafx.scene.image.Image$DoublePropertyImpl heightPropertyImpl();
    Code:
       0: aload_0
       1: getfield      #28                 // Field height:Ljavafx/scene/image/Image$DoublePropertyImpl;
       4: ifnonnull     21
       7: aload_0
       8: new           #25                 // class javafx/scene/image/Image$DoublePropertyImpl
      11: dup
      12: aload_0
      13: ldc           #30                 // String height
      15: invokespecial #27                 // Method javafx/scene/image/Image$DoublePropertyImpl."<init>":(Ljavafx/scene/image/Image;Ljava/lang/String;)V
      18: putfield      #28                 // Field height:Ljavafx/scene/image/Image$DoublePropertyImpl;
      21: aload_0
      22: getfield      #28                 // Field height:Ljavafx/scene/image/Image$DoublePropertyImpl;
      25: areturn

  public final boolean isPreserveRatio();
    Code:
       0: aload_0
       1: getfield      #4                  // Field preserveRatio:Z
       4: ireturn

  public final boolean isSmooth();
    Code:
       0: aload_0
       1: getfield      #3                  // Field smooth:Z
       4: ireturn

  public final boolean isBackgroundLoading();
    Code:
       0: aload_0
       1: getfield      #31                 // Field backgroundLoading:Z
       4: ireturn

  private void setError(boolean);
    Code:
       0: aload_0
       1: invokespecial #32                 // Method errorPropertyImpl:()Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: iload_1
       5: invokevirtual #33                 // Method javafx/beans/property/ReadOnlyBooleanWrapper.set:(Z)V
       8: return

  public final boolean isError();
    Code:
       0: aload_0
       1: getfield      #34                 // Field error:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: ifnonnull     11
       7: iconst_0
       8: goto          18
      11: aload_0
      12: getfield      #34                 // Field error:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      15: invokevirtual #35                 // Method javafx/beans/property/ReadOnlyBooleanWrapper.get:()Z
      18: ireturn

  public final javafx.beans.property.ReadOnlyBooleanProperty errorProperty();
    Code:
       0: aload_0
       1: invokespecial #32                 // Method errorPropertyImpl:()Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: invokevirtual #36                 // Method javafx/beans/property/ReadOnlyBooleanWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyBooleanProperty;
       7: areturn

  private javafx.beans.property.ReadOnlyBooleanWrapper errorPropertyImpl();
    Code:
       0: aload_0
       1: getfield      #34                 // Field error:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: ifnonnull     21
       7: aload_0
       8: new           #37                 // class javafx/beans/property/ReadOnlyBooleanWrapper
      11: dup
      12: aload_0
      13: ldc           #38                 // String error
      15: invokespecial #39                 // Method javafx/beans/property/ReadOnlyBooleanWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      18: putfield      #34                 // Field error:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      21: aload_0
      22: getfield      #34                 // Field error:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      25: areturn

  private void setException(java.lang.Exception);
    Code:
       0: aload_0
       1: invokespecial #40                 // Method exceptionPropertyImpl:()Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: aload_1
       5: invokevirtual #41                 // Method javafx/beans/property/ReadOnlyObjectWrapper.set:(Ljava/lang/Object;)V
       8: return

  public final java.lang.Exception getException();
    Code:
       0: aload_0
       1: getfield      #42                 // Field exception:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #42                 // Field exception:Ljavafx/beans/property/ReadOnlyObjectWrapper;
      15: invokevirtual #43                 // Method javafx/beans/property/ReadOnlyObjectWrapper.get:()Ljava/lang/Object;
      18: checkcast     #44                 // class java/lang/Exception
      21: areturn

  public final javafx.beans.property.ReadOnlyObjectProperty<java.lang.Exception> exceptionProperty();
    Code:
       0: aload_0
       1: invokespecial #40                 // Method exceptionPropertyImpl:()Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #45                 // Method javafx/beans/property/ReadOnlyObjectWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       7: areturn

  private javafx.beans.property.ReadOnlyObjectWrapper<java.lang.Exception> exceptionPropertyImpl();
    Code:
       0: aload_0
       1: getfield      #42                 // Field exception:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: ifnonnull     21
       7: aload_0
       8: new           #46                 // class javafx/beans/property/ReadOnlyObjectWrapper
      11: dup
      12: aload_0
      13: ldc           #47                 // String exception
      15: invokespecial #48                 // Method javafx/beans/property/ReadOnlyObjectWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      18: putfield      #42                 // Field exception:Ljavafx/beans/property/ReadOnlyObjectWrapper;
      21: aload_0
      22: getfield      #42                 // Field exception:Ljavafx/beans/property/ReadOnlyObjectWrapper;
      25: areturn

  final java.lang.Object getPlatformImage();
    Code:
       0: aload_0
       1: getfield      #1                  // Field platformImage:Ljavafx/scene/image/Image$ObjectPropertyImpl;
       4: ifnonnull     11
       7: aconst_null
       8: goto          18
      11: aload_0
      12: getfield      #1                  // Field platformImage:Ljavafx/scene/image/Image$ObjectPropertyImpl;
      15: invokevirtual #49                 // Method javafx/scene/image/Image$ObjectPropertyImpl.get:()Ljava/lang/Object;
      18: areturn

  final javafx.beans.property.ReadOnlyObjectProperty<com.sun.javafx.tk.PlatformImage> acc_platformImageProperty();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method platformImagePropertyImpl:()Ljavafx/scene/image/Image$ObjectPropertyImpl;
       4: areturn

  private javafx.scene.image.Image$ObjectPropertyImpl<com.sun.javafx.tk.PlatformImage> platformImagePropertyImpl();
    Code:
       0: aload_0
       1: getfield      #1                  // Field platformImage:Ljavafx/scene/image/Image$ObjectPropertyImpl;
       4: ifnonnull     21
       7: aload_0
       8: new           #50                 // class javafx/scene/image/Image$ObjectPropertyImpl
      11: dup
      12: aload_0
      13: ldc           #51                 // String platformImage
      15: invokespecial #52                 // Method javafx/scene/image/Image$ObjectPropertyImpl."<init>":(Ljavafx/scene/image/Image;Ljava/lang/String;)V
      18: putfield      #1                  // Field platformImage:Ljavafx/scene/image/Image$ObjectPropertyImpl;
      21: aload_0
      22: getfield      #1                  // Field platformImage:Ljavafx/scene/image/Image$ObjectPropertyImpl;
      25: areturn

  void pixelsDirty();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method platformImagePropertyImpl:()Ljavafx/scene/image/Image$ObjectPropertyImpl;
       4: invokevirtual #53                 // Method javafx/scene/image/Image$ObjectPropertyImpl.fireValueChangedEvent:()V
       7: return

  public javafx.scene.image.Image(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #54                 // Method validateUrl:(Ljava/lang/String;)Ljava/lang/String;
       5: aconst_null
       6: dconst_0
       7: dconst_0
       8: iconst_0
       9: iconst_0
      10: iconst_0
      11: invokespecial #55                 // Method "<init>":(Ljava/lang/String;Ljava/io/InputStream;DDZZZ)V
      14: aload_0
      15: aconst_null
      16: invokespecial #56                 // Method initialize:(Ljava/lang/Object;)V
      19: return

  public javafx.scene.image.Image(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #54                 // Method validateUrl:(Ljava/lang/String;)Ljava/lang/String;
       5: aconst_null
       6: dconst_0
       7: dconst_0
       8: iconst_0
       9: iconst_0
      10: iload_2
      11: invokespecial #55                 // Method "<init>":(Ljava/lang/String;Ljava/io/InputStream;DDZZZ)V
      14: aload_0
      15: aconst_null
      16: invokespecial #56                 // Method initialize:(Ljava/lang/Object;)V
      19: return

  public javafx.scene.image.Image(java.lang.String, double, double, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #54                 // Method validateUrl:(Ljava/lang/String;)Ljava/lang/String;
       5: aconst_null
       6: dload_2
       7: dload         4
       9: iload         6
      11: iload         7
      13: iconst_0
      14: invokespecial #55                 // Method "<init>":(Ljava/lang/String;Ljava/io/InputStream;DDZZZ)V
      17: aload_0
      18: aconst_null
      19: invokespecial #56                 // Method initialize:(Ljava/lang/Object;)V
      22: return

  public javafx.scene.image.Image(java.lang.String, double, double, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #54                 // Method validateUrl:(Ljava/lang/String;)Ljava/lang/String;
       5: aconst_null
       6: dload_2
       7: dload         4
       9: iload         6
      11: iload         7
      13: iload         8
      15: invokespecial #55                 // Method "<init>":(Ljava/lang/String;Ljava/io/InputStream;DDZZZ)V
      18: aload_0
      19: aconst_null
      20: invokespecial #56                 // Method initialize:(Ljava/lang/Object;)V
      23: return

  public javafx.scene.image.Image(java.io.InputStream);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokestatic  #57                 // Method validateInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;
       6: dconst_0
       7: dconst_0
       8: iconst_0
       9: iconst_0
      10: iconst_0
      11: invokespecial #55                 // Method "<init>":(Ljava/lang/String;Ljava/io/InputStream;DDZZZ)V
      14: aload_0
      15: aconst_null
      16: invokespecial #56                 // Method initialize:(Ljava/lang/Object;)V
      19: return

  public javafx.scene.image.Image(java.io.InputStream, double, double, boolean, boolean);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokestatic  #57                 // Method validateInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;
       6: dload_2
       7: dload         4
       9: iload         6
      11: iload         7
      13: iconst_0
      14: invokespecial #55                 // Method "<init>":(Ljava/lang/String;Ljava/io/InputStream;DDZZZ)V
      17: aload_0
      18: aconst_null
      19: invokespecial #56                 // Method initialize:(Ljava/lang/Object;)V
      22: return

  javafx.scene.image.Image(int, int);
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: iload_1
       4: i2d
       5: iload_2
       6: i2d
       7: iconst_0
       8: iconst_0
       9: iconst_0
      10: invokespecial #55                 // Method "<init>":(Ljava/lang/String;Ljava/io/InputStream;DDZZZ)V
      13: iload_1
      14: ifle          21
      17: iload_2
      18: ifgt          31
      21: new           #58                 // class java/lang/IllegalArgumentException
      24: dup
      25: ldc           #59                 // String Image dimensions must be positive (w,h > 0)
      27: invokespecial #60                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: invokestatic  #61                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      35: iload_1
      36: iload_2
      37: invokevirtual #62                 // Method com/sun/javafx/tk/Toolkit.createPlatformImage:(II)Lcom/sun/javafx/tk/PlatformImage;
      40: invokespecial #56                 // Method initialize:(Ljava/lang/Object;)V
      43: return

  private javafx.scene.image.Image(java.lang.Object);
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: dconst_0
       4: dconst_0
       5: iconst_0
       6: iconst_0
       7: iconst_0
       8: invokespecial #55                 // Method "<init>":(Ljava/lang/String;Ljava/io/InputStream;DDZZZ)V
      11: aload_0
      12: aload_1
      13: invokespecial #56                 // Method initialize:(Ljava/lang/Object;)V
      16: return

  private javafx.scene.image.Image(java.lang.String, java.io.InputStream, double, double, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #63                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field url:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #13                 // Field inputSource:Ljava/io/InputStream;
      14: aload_0
      15: dload_3
      16: putfield      #6                  // Field requestedWidth:D
      19: aload_0
      20: dload         5
      22: putfield      #5                  // Field requestedHeight:D
      25: aload_0
      26: iload         7
      28: putfield      #4                  // Field preserveRatio:Z
      31: aload_0
      32: iload         8
      34: putfield      #3                  // Field smooth:Z
      37: aload_0
      38: iload         9
      40: putfield      #31                 // Field backgroundLoading:Z
      43: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #64                 // Field backgroundTask:Ljavafx/scene/image/Image$ImageTask;
       4: ifnull        14
       7: aload_0
       8: getfield      #64                 // Field backgroundTask:Ljavafx/scene/image/Image$ImageTask;
      11: invokevirtual #65                 // Method javafx/scene/image/Image$ImageTask.cancel:()V
      14: return

  void dispose();
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method cancel:()V
       4: aload_0
       5: getfield      #67                 // Field animation:Ljavafx/scene/image/Image$Animation;
       8: ifnull        18
      11: aload_0
      12: getfield      #67                 // Field animation:Ljavafx/scene/image/Image$Animation;
      15: invokevirtual #68                 // Method javafx/scene/image/Image$Animation.stop:()V
      18: return

  private void initialize(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        17
       4: aload_1
       5: invokestatic  #69                 // Method loadPlatformImage:(Ljava/lang/Object;)Lcom/sun/javafx/tk/ImageLoader;
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokespecial #8                  // Method finishImage:(Lcom/sun/javafx/tk/ImageLoader;)V
      14: goto          101
      17: aload_0
      18: invokevirtual #70                 // Method isBackgroundLoading:()Z
      21: ifeq          38
      24: aload_0
      25: getfield      #13                 // Field inputSource:Ljava/io/InputStream;
      28: ifnonnull     38
      31: aload_0
      32: invokespecial #71                 // Method loadInBackground:()V
      35: goto          101
      38: aload_0
      39: getfield      #13                 // Field inputSource:Ljava/io/InputStream;
      42: ifnull        72
      45: aload_0
      46: getfield      #13                 // Field inputSource:Ljava/io/InputStream;
      49: aload_0
      50: invokevirtual #72                 // Method getRequestedWidth:()D
      53: aload_0
      54: invokevirtual #73                 // Method getRequestedHeight:()D
      57: aload_0
      58: invokevirtual #74                 // Method isPreserveRatio:()Z
      61: aload_0
      62: invokevirtual #75                 // Method isSmooth:()Z
      65: invokestatic  #76                 // Method loadImage:(Ljava/io/InputStream;DDZZ)Lcom/sun/javafx/tk/ImageLoader;
      68: astore_2
      69: goto          96
      72: aload_0
      73: invokevirtual #77                 // Method getUrl:()Ljava/lang/String;
      76: aload_0
      77: invokevirtual #72                 // Method getRequestedWidth:()D
      80: aload_0
      81: invokevirtual #73                 // Method getRequestedHeight:()D
      84: aload_0
      85: invokevirtual #74                 // Method isPreserveRatio:()Z
      88: aload_0
      89: invokevirtual #75                 // Method isSmooth:()Z
      92: invokestatic  #78                 // Method loadImage:(Ljava/lang/String;DDZZ)Lcom/sun/javafx/tk/ImageLoader;
      95: astore_2
      96: aload_0
      97: aload_2
      98: invokespecial #8                  // Method finishImage:(Lcom/sun/javafx/tk/ImageLoader;)V
     101: return

  private void finishImage(com.sun.javafx.tk.ImageLoader);
    Code:
       0: aload_1
       1: invokeinterface #79,  1           // InterfaceMethod com/sun/javafx/tk/ImageLoader.getException:()Ljava/lang/Exception;
       6: astore_2
       7: aload_2
       8: ifnull        17
      11: aload_0
      12: aload_2
      13: invokespecial #10                 // Method finishImage:(Ljava/lang/Exception;)V
      16: return
      17: aload_1
      18: invokeinterface #80,  1           // InterfaceMethod com/sun/javafx/tk/ImageLoader.getFrameCount:()I
      23: iconst_1
      24: if_icmple     35
      27: aload_0
      28: aload_1
      29: invokespecial #81                 // Method initializeAnimatedImage:(Lcom/sun/javafx/tk/ImageLoader;)V
      32: goto          84
      35: aload_1
      36: iconst_0
      37: invokeinterface #82,  2           // InterfaceMethod com/sun/javafx/tk/ImageLoader.getFrame:(I)Lcom/sun/javafx/tk/PlatformImage;
      42: astore_3
      43: aload_1
      44: invokeinterface #83,  1           // InterfaceMethod com/sun/javafx/tk/ImageLoader.getWidth:()D
      49: aload_3
      50: invokeinterface #84,  1           // InterfaceMethod com/sun/javafx/tk/PlatformImage.getPixelScale:()F
      55: f2d
      56: ddiv
      57: dstore        4
      59: aload_1
      60: invokeinterface #85,  1           // InterfaceMethod com/sun/javafx/tk/ImageLoader.getHeight:()D
      65: aload_3
      66: invokeinterface #84,  1           // InterfaceMethod com/sun/javafx/tk/PlatformImage.getPixelScale:()F
      71: f2d
      72: ddiv
      73: dstore        6
      75: aload_0
      76: aload_3
      77: dload         4
      79: dload         6
      81: invokespecial #86                 // Method setPlatformImageWH:(Lcom/sun/javafx/tk/PlatformImage;DD)V
      84: aload_0
      85: dconst_1
      86: invokevirtual #87                 // Method setProgress:(D)V
      89: return

  private void finishImage(java.lang.Exception);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #88                 // Method setException:(Ljava/lang/Exception;)V
       5: aload_0
       6: iconst_1
       7: invokespecial #89                 // Method setError:(Z)V
      10: aload_0
      11: aconst_null
      12: dconst_0
      13: dconst_0
      14: invokespecial #86                 // Method setPlatformImageWH:(Lcom/sun/javafx/tk/PlatformImage;DD)V
      17: aload_0
      18: dconst_1
      19: invokevirtual #87                 // Method setProgress:(D)V
      22: return

  private void initializeAnimatedImage(com.sun.javafx.tk.ImageLoader);
    Code:
       0: aload_1
       1: invokeinterface #80,  1           // InterfaceMethod com/sun/javafx/tk/ImageLoader.getFrameCount:()I
       6: istore_2
       7: aload_0
       8: iload_2
       9: anewarray     #90                 // class com/sun/javafx/tk/PlatformImage
      12: putfield      #12                 // Field animFrames:[Lcom/sun/javafx/tk/PlatformImage;
      15: iconst_0
      16: istore_3
      17: iload_3
      18: iload_2
      19: if_icmpge     41
      22: aload_0
      23: getfield      #12                 // Field animFrames:[Lcom/sun/javafx/tk/PlatformImage;
      26: iload_3
      27: aload_1
      28: iload_3
      29: invokeinterface #82,  2           // InterfaceMethod com/sun/javafx/tk/ImageLoader.getFrame:(I)Lcom/sun/javafx/tk/PlatformImage;
      34: aastore
      35: iinc          3, 1
      38: goto          17
      41: aload_1
      42: iconst_0
      43: invokeinterface #82,  2           // InterfaceMethod com/sun/javafx/tk/ImageLoader.getFrame:(I)Lcom/sun/javafx/tk/PlatformImage;
      48: astore_3
      49: aload_1
      50: invokeinterface #83,  1           // InterfaceMethod com/sun/javafx/tk/ImageLoader.getWidth:()D
      55: aload_3
      56: invokeinterface #84,  1           // InterfaceMethod com/sun/javafx/tk/PlatformImage.getPixelScale:()F
      61: f2d
      62: ddiv
      63: dstore        4
      65: aload_1
      66: invokeinterface #85,  1           // InterfaceMethod com/sun/javafx/tk/ImageLoader.getHeight:()D
      71: aload_3
      72: invokeinterface #84,  1           // InterfaceMethod com/sun/javafx/tk/PlatformImage.getPixelScale:()F
      77: f2d
      78: ddiv
      79: dstore        6
      81: aload_0
      82: aload_3
      83: dload         4
      85: dload         6
      87: invokespecial #86                 // Method setPlatformImageWH:(Lcom/sun/javafx/tk/PlatformImage;DD)V
      90: aload_0
      91: new           #91                 // class javafx/scene/image/Image$Animation
      94: dup
      95: aload_0
      96: aload_1
      97: invokespecial #92                 // Method javafx/scene/image/Image$Animation."<init>":(Ljavafx/scene/image/Image;Lcom/sun/javafx/tk/ImageLoader;)V
     100: putfield      #67                 // Field animation:Ljavafx/scene/image/Image$Animation;
     103: aload_0
     104: getfield      #67                 // Field animation:Ljavafx/scene/image/Image$Animation;
     107: invokevirtual #93                 // Method javafx/scene/image/Image$Animation.start:()V
     110: return

  private void cycleTasks();
    Code:
       0: getstatic     #94                 // Field pendingTasks:Ljava/util/Queue;
       3: dup
       4: astore_1
       5: monitorenter
       6: getstatic     #95                 // Field runningTasks:I
       9: iconst_1
      10: isub
      11: putstatic     #95                 // Field runningTasks:I
      14: getstatic     #94                 // Field pendingTasks:Ljava/util/Queue;
      17: invokeinterface #96,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      22: checkcast     #97                 // class javafx/scene/image/Image$ImageTask
      25: astore_2
      26: aload_2
      27: ifnull        42
      30: getstatic     #95                 // Field runningTasks:I
      33: iconst_1
      34: iadd
      35: putstatic     #95                 // Field runningTasks:I
      38: aload_2
      39: invokevirtual #98                 // Method javafx/scene/image/Image$ImageTask.start:()V
      42: aload_1
      43: monitorexit
      44: goto          52
      47: astore_3
      48: aload_1
      49: monitorexit
      50: aload_3
      51: athrow
      52: return
    Exception table:
       from    to  target type
           6    44    47   any
          47    50    47   any

  private void loadInBackground();
    Code:
       0: aload_0
       1: new           #97                 // class javafx/scene/image/Image$ImageTask
       4: dup
       5: aload_0
       6: invokespecial #99                 // Method javafx/scene/image/Image$ImageTask."<init>":(Ljavafx/scene/image/Image;)V
       9: putfield      #64                 // Field backgroundTask:Ljavafx/scene/image/Image$ImageTask;
      12: getstatic     #94                 // Field pendingTasks:Ljava/util/Queue;
      15: dup
      16: astore_1
      17: monitorenter
      18: getstatic     #95                 // Field runningTasks:I
      21: iconst_4
      22: if_icmplt     41
      25: getstatic     #94                 // Field pendingTasks:Ljava/util/Queue;
      28: aload_0
      29: getfield      #64                 // Field backgroundTask:Ljavafx/scene/image/Image$ImageTask;
      32: invokeinterface #101,  2          // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      37: pop
      38: goto          56
      41: getstatic     #95                 // Field runningTasks:I
      44: iconst_1
      45: iadd
      46: putstatic     #95                 // Field runningTasks:I
      49: aload_0
      50: getfield      #64                 // Field backgroundTask:Ljavafx/scene/image/Image$ImageTask;
      53: invokevirtual #98                 // Method javafx/scene/image/Image$ImageTask.start:()V
      56: aload_1
      57: monitorexit
      58: goto          66
      61: astore_2
      62: aload_1
      63: monitorexit
      64: aload_2
      65: athrow
      66: return
    Exception table:
       from    to  target type
          18    58    61   any
          61    64    61   any

  static javafx.scene.image.Image fromPlatformImage(java.lang.Object);
    Code:
       0: new           #100                // class javafx/scene/image/Image
       3: dup
       4: aload_0
       5: invokespecial #102                // Method "<init>":(Ljava/lang/Object;)V
       8: areturn

  private void setPlatformImageWH(com.sun.javafx.tk.PlatformImage, double, double);
    Code:
       0: invokestatic  #103                // Method com/sun/javafx/tk/Toolkit.getImageAccessor:()Lcom/sun/javafx/tk/Toolkit$ImageAccessor;
       3: aload_0
       4: invokeinterface #104,  2          // InterfaceMethod com/sun/javafx/tk/Toolkit$ImageAccessor.getPlatformImage:(Ljavafx/scene/image/Image;)Ljava/lang/Object;
       9: aload_1
      10: if_acmpne     33
      13: aload_0
      14: invokevirtual #105                // Method getWidth:()D
      17: dload_2
      18: dcmpl
      19: ifne          33
      22: aload_0
      23: invokevirtual #106                // Method getHeight:()D
      26: dload         4
      28: dcmpl
      29: ifne          33
      32: return
      33: invokestatic  #103                // Method com/sun/javafx/tk/Toolkit.getImageAccessor:()Lcom/sun/javafx/tk/Toolkit$ImageAccessor;
      36: aload_0
      37: invokeinterface #104,  2          // InterfaceMethod com/sun/javafx/tk/Toolkit$ImageAccessor.getPlatformImage:(Ljavafx/scene/image/Image;)Ljava/lang/Object;
      42: astore        6
      44: aload_0
      45: invokevirtual #105                // Method getWidth:()D
      48: dstore        7
      50: aload_0
      51: invokevirtual #106                // Method getHeight:()D
      54: dstore        9
      56: aload_0
      57: aload_1
      58: dload_2
      59: dload         4
      61: invokespecial #107                // Method storePlatformImageWH:(Lcom/sun/javafx/tk/PlatformImage;DD)V
      64: aload         6
      66: aload_1
      67: if_acmpeq     77
      70: aload_0
      71: invokespecial #11                 // Method platformImagePropertyImpl:()Ljavafx/scene/image/Image$ObjectPropertyImpl;
      74: invokevirtual #53                 // Method javafx/scene/image/Image$ObjectPropertyImpl.fireValueChangedEvent:()V
      77: dload         7
      79: dload_2
      80: dcmpl
      81: ifeq          91
      84: aload_0
      85: invokespecial #24                 // Method widthPropertyImpl:()Ljavafx/scene/image/Image$DoublePropertyImpl;
      88: invokevirtual #108                // Method javafx/scene/image/Image$DoublePropertyImpl.fireValueChangedEvent:()V
      91: dload         9
      93: dload         4
      95: dcmpl
      96: ifeq          106
      99: aload_0
     100: invokespecial #29                 // Method heightPropertyImpl:()Ljavafx/scene/image/Image$DoublePropertyImpl;
     103: invokevirtual #108                // Method javafx/scene/image/Image$DoublePropertyImpl.fireValueChangedEvent:()V
     106: return

  private void storePlatformImageWH(com.sun.javafx.tk.PlatformImage, double, double);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method platformImagePropertyImpl:()Ljavafx/scene/image/Image$ObjectPropertyImpl;
       4: aload_1
       5: invokevirtual #109                // Method javafx/scene/image/Image$ObjectPropertyImpl.store:(Ljava/lang/Object;)V
       8: aload_0
       9: invokespecial #24                 // Method widthPropertyImpl:()Ljavafx/scene/image/Image$DoublePropertyImpl;
      12: dload_2
      13: invokevirtual #110                // Method javafx/scene/image/Image$DoublePropertyImpl.store:(D)V
      16: aload_0
      17: invokespecial #29                 // Method heightPropertyImpl:()Ljavafx/scene/image/Image$DoublePropertyImpl;
      20: dload         4
      22: invokevirtual #110                // Method javafx/scene/image/Image$DoublePropertyImpl.store:(D)V
      25: return

  void setPlatformImage(com.sun.javafx.tk.PlatformImage);
    Code:
       0: aload_0
       1: getfield      #1                  // Field platformImage:Ljavafx/scene/image/Image$ObjectPropertyImpl;
       4: aload_1
       5: invokevirtual #111                // Method javafx/scene/image/Image$ObjectPropertyImpl.set:(Ljava/lang/Object;)V
       8: return

  private static com.sun.javafx.tk.ImageLoader loadImage(java.lang.String, double, double, boolean, boolean);
    Code:
       0: invokestatic  #61                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: aload_0
       4: dload_1
       5: dload_3
       6: iload         5
       8: iload         6
      10: invokevirtual #112                // Method com/sun/javafx/tk/Toolkit.loadImage:(Ljava/lang/String;DDZZ)Lcom/sun/javafx/tk/ImageLoader;
      13: areturn

  private static com.sun.javafx.tk.ImageLoader loadImage(java.io.InputStream, double, double, boolean, boolean);
    Code:
       0: invokestatic  #61                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: aload_0
       4: dload_1
       5: dload_3
       6: iload         5
       8: iload         6
      10: invokevirtual #113                // Method com/sun/javafx/tk/Toolkit.loadImage:(Ljava/io/InputStream;DDZZ)Lcom/sun/javafx/tk/ImageLoader;
      13: areturn

  private static com.sun.javafx.runtime.async.AsyncOperation loadImageAsync(com.sun.javafx.runtime.async.AsyncOperationListener<? extends com.sun.javafx.tk.ImageLoader>, java.lang.String, double, double, boolean, boolean);
    Code:
       0: invokestatic  #61                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: aload_0
       4: aload_1
       5: dload_2
       6: dload         4
       8: iload         6
      10: iload         7
      12: invokevirtual #114                // Method com/sun/javafx/tk/Toolkit.loadImageAsync:(Lcom/sun/javafx/runtime/async/AsyncOperationListener;Ljava/lang/String;DDZZ)Lcom/sun/javafx/runtime/async/AsyncOperation;
      15: areturn

  private static com.sun.javafx.tk.ImageLoader loadPlatformImage(java.lang.Object);
    Code:
       0: invokestatic  #61                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: aload_0
       4: invokevirtual #115                // Method com/sun/javafx/tk/Toolkit.loadPlatformImage:(Ljava/lang/Object;)Lcom/sun/javafx/tk/ImageLoader;
       7: areturn

  private static java.lang.String validateUrl(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #116                // class java/lang/NullPointerException
       7: dup
       8: ldc           #117                // String URL must not be null
      10: invokespecial #118                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #119                // Method java/lang/String.trim:()Ljava/lang/String;
      18: invokevirtual #120                // Method java/lang/String.isEmpty:()Z
      21: ifeq          34
      24: new           #58                 // class java/lang/IllegalArgumentException
      27: dup
      28: ldc           #121                // String URL must not be empty
      30: invokespecial #60                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: getstatic     #122                // Field URL_QUICKMATCH:Ljava/util/regex/Pattern;
      37: aload_0
      38: invokevirtual #123                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      41: invokevirtual #124                // Method java/util/regex/Matcher.matches:()Z
      44: ifne          102
      47: invokestatic  #125                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      50: invokevirtual #126                // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
      53: astore_1
      54: aload_0
      55: iconst_0
      56: invokevirtual #127                // Method java/lang/String.charAt:(I)C
      59: bipush        47
      61: if_icmpne     77
      64: aload_1
      65: aload_0
      66: iconst_1
      67: invokevirtual #128                // Method java/lang/String.substring:(I)Ljava/lang/String;
      70: invokevirtual #129                // Method java/lang/ClassLoader.getResource:(Ljava/lang/String;)Ljava/net/URL;
      73: astore_2
      74: goto          83
      77: aload_1
      78: aload_0
      79: invokevirtual #129                // Method java/lang/ClassLoader.getResource:(Ljava/lang/String;)Ljava/net/URL;
      82: astore_2
      83: aload_2
      84: ifnonnull     97
      87: new           #58                 // class java/lang/IllegalArgumentException
      90: dup
      91: ldc           #130                // String Invalid URL or resource not found
      93: invokespecial #60                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      96: athrow
      97: aload_2
      98: invokevirtual #131                // Method java/net/URL.toString:()Ljava/lang/String;
     101: areturn
     102: new           #132                // class java/net/URL
     105: dup
     106: aload_0
     107: invokespecial #133                // Method java/net/URL."<init>":(Ljava/lang/String;)V
     110: invokevirtual #131                // Method java/net/URL.toString:()Ljava/lang/String;
     113: areturn
     114: astore_1
     115: new           #58                 // class java/lang/IllegalArgumentException
     118: dup
     119: ldc           #134                // String Invalid URL
     121: aload_1
     122: invokestatic  #135                // Method constructDetailedExceptionMessage:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/String;
     125: aload_1
     126: invokespecial #136                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     129: athrow
     130: astore_1
     131: new           #58                 // class java/lang/IllegalArgumentException
     134: dup
     135: ldc           #134                // String Invalid URL
     137: aload_1
     138: invokestatic  #135                // Method constructDetailedExceptionMessage:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/String;
     141: aload_1
     142: invokespecial #136                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     145: athrow
    Exception table:
       from    to  target type
          34   101   114   Class java/lang/IllegalArgumentException
         102   113   114   Class java/lang/IllegalArgumentException
          34   101   130   Class java/net/MalformedURLException
         102   113   130   Class java/net/MalformedURLException

  private static java.io.InputStream validateInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #116                // class java/lang/NullPointerException
       7: dup
       8: ldc           #138                // String Input stream must not be null
      10: invokespecial #118                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: areturn

  private static java.lang.String constructDetailedExceptionMessage(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aload_0
       5: areturn
       6: aload_1
       7: invokevirtual #139                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      10: astore_2
      11: aload_2
      12: ifnull        25
      15: aload_0
      16: aload_2
      17: invokedynamic #140,  0            // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      22: goto          26
      25: aload_0
      26: aload_1
      27: invokevirtual #141                // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      30: invokestatic  #135                // Method constructDetailedExceptionMessage:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/String;
      33: areturn

  boolean isAnimation();
    Code:
       0: aload_0
       1: getfield      #67                 // Field animation:Ljavafx/scene/image/Image$Animation;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  boolean pixelsReadable();
    Code:
       0: aload_0
       1: invokevirtual #142                // Method getProgress:()D
       4: dconst_1
       5: dcmpl
       6: iflt          27
       9: aload_0
      10: invokevirtual #143                // Method isAnimation:()Z
      13: ifne          27
      16: aload_0
      17: invokevirtual #144                // Method isError:()Z
      20: ifne          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public final javafx.scene.image.PixelReader getPixelReader();
    Code:
       0: aload_0
       1: invokevirtual #145                // Method pixelsReadable:()Z
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #146                // Field reader:Ljavafx/scene/image/PixelReader;
      13: ifnonnull     28
      16: aload_0
      17: new           #147                // class javafx/scene/image/Image$2
      20: dup
      21: aload_0
      22: invokespecial #148                // Method javafx/scene/image/Image$2."<init>":(Ljavafx/scene/image/Image;)V
      25: putfield      #146                // Field reader:Ljavafx/scene/image/PixelReader;
      28: aload_0
      29: getfield      #146                // Field reader:Ljavafx/scene/image/PixelReader;
      32: areturn

  com.sun.javafx.tk.PlatformImage getWritablePlatformImage();
    Code:
       0: aload_0
       1: getfield      #1                  // Field platformImage:Ljavafx/scene/image/Image$ObjectPropertyImpl;
       4: invokevirtual #49                 // Method javafx/scene/image/Image$ObjectPropertyImpl.get:()Ljava/lang/Object;
       7: checkcast     #90                 // class com/sun/javafx/tk/PlatformImage
      10: astore_1
      11: aload_1
      12: invokeinterface #149,  1          // InterfaceMethod com/sun/javafx/tk/PlatformImage.isWritable:()Z
      17: ifne          35
      20: aload_1
      21: invokeinterface #150,  1          // InterfaceMethod com/sun/javafx/tk/PlatformImage.promoteToWritableImage:()Lcom/sun/javafx/tk/PlatformImage;
      26: astore_1
      27: aload_0
      28: getfield      #1                  // Field platformImage:Ljavafx/scene/image/Image$ObjectPropertyImpl;
      31: aload_1
      32: invokevirtual #111                // Method javafx/scene/image/Image$ObjectPropertyImpl.set:(Ljava/lang/Object;)V
      35: aload_1
      36: areturn

  static com.sun.javafx.tk.PlatformImage[] access$100(javafx.scene.image.Image);
    Code:
       0: aload_0
       1: getfield      #12                 // Field animFrames:[Lcom/sun/javafx/tk/PlatformImage;
       4: areturn

  static javafx.scene.image.Image$ObjectPropertyImpl access$200(javafx.scene.image.Image);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method platformImagePropertyImpl:()Ljavafx/scene/image/Image$ObjectPropertyImpl;
       4: areturn

  static void access$300(javafx.scene.image.Image, java.lang.Exception);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method finishImage:(Ljava/lang/Exception;)V
       5: return

  static void access$400(javafx.scene.image.Image);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method cycleTasks:()V
       4: return

  static void access$500(javafx.scene.image.Image, com.sun.javafx.tk.ImageLoader);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method finishImage:(Lcom/sun/javafx/tk/ImageLoader;)V
       5: return

  static java.lang.String access$600(javafx.scene.image.Image);
    Code:
       0: aload_0
       1: getfield      #7                  // Field url:Ljava/lang/String;
       4: areturn

  static double access$700(javafx.scene.image.Image);
    Code:
       0: aload_0
       1: getfield      #6                  // Field requestedWidth:D
       4: dreturn

  static double access$800(javafx.scene.image.Image);
    Code:
       0: aload_0
       1: getfield      #5                  // Field requestedHeight:D
       4: dreturn

  static boolean access$900(javafx.scene.image.Image);
    Code:
       0: aload_0
       1: getfield      #4                  // Field preserveRatio:Z
       4: ireturn

  static boolean access$1000(javafx.scene.image.Image);
    Code:
       0: aload_0
       1: getfield      #3                  // Field smooth:Z
       4: ireturn

  static com.sun.javafx.runtime.async.AsyncOperation access$1100(com.sun.javafx.runtime.async.AsyncOperationListener, java.lang.String, double, double, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: dload_2
       3: dload         4
       5: iload         6
       7: iload         7
       9: invokestatic  #2                  // Method loadImageAsync:(Lcom/sun/javafx/runtime/async/AsyncOperationListener;Ljava/lang/String;DDZZ)Lcom/sun/javafx/runtime/async/AsyncOperation;
      12: areturn

  static javafx.scene.image.Image$ObjectPropertyImpl access$1200(javafx.scene.image.Image);
    Code:
       0: aload_0
       1: getfield      #1                  // Field platformImage:Ljavafx/scene/image/Image$ObjectPropertyImpl;
       4: areturn

  static {};
    Code:
       0: new           #151                // class javafx/scene/image/Image$1
       3: dup
       4: invokespecial #152                // Method javafx/scene/image/Image$1."<init>":()V
       7: invokestatic  #153                // Method com/sun/javafx/tk/Toolkit.setImageAccessor:(Lcom/sun/javafx/tk/Toolkit$ImageAccessor;)V
      10: ldc           #154                // String ^\\p{Alpha}[\\p{Alnum}+.-]*:.*$
      12: invokestatic  #155                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      15: putstatic     #122                // Field URL_QUICKMATCH:Ljava/util/regex/Pattern;
      18: iconst_0
      19: putstatic     #95                 // Field runningTasks:I
      22: new           #156                // class java/util/LinkedList
      25: dup
      26: invokespecial #157                // Method java/util/LinkedList."<init>":()V
      29: putstatic     #94                 // Field pendingTasks:Ljava/util/Queue;
      32: return
}
