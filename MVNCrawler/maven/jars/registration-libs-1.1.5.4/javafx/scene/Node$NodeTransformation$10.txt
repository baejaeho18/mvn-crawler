Compiled from "Node.java"
class javafx.scene.Node$NodeTransformation$10 extends com.sun.javafx.collections.TrackableObservableList<javafx.scene.transform.Transform> {
  final javafx.scene.Node$NodeTransformation this$1;

  javafx.scene.Node$NodeTransformation$10(javafx.scene.Node$NodeTransformation);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Ljavafx/scene/Node$NodeTransformation;
       5: aload_0
       6: invokespecial #2                  // Method com/sun/javafx/collections/TrackableObservableList."<init>":()V
       9: return

  protected void onChanged(javafx.collections.ListChangeListener$Change<javafx.scene.transform.Transform>);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method javafx/collections/ListChangeListener$Change.next:()Z
       4: ifeq          96
       7: aload_1
       8: invokevirtual #4                  // Method javafx/collections/ListChangeListener$Change.getRemoved:()Ljava/util/List;
      11: invokeinterface #5,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          50
      26: aload_2
      27: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #8                  // class javafx/scene/transform/Transform
      35: astore_3
      36: aload_3
      37: aload_0
      38: getfield      #1                  // Field this$1:Ljavafx/scene/Node$NodeTransformation;
      41: getfield      #9                  // Field javafx/scene/Node$NodeTransformation.this$0:Ljavafx/scene/Node;
      44: invokestatic  #10                 // Method com/sun/javafx/scene/transform/TransformHelper.remove:(Ljavafx/scene/transform/Transform;Ljavafx/scene/Node;)V
      47: goto          17
      50: aload_1
      51: invokevirtual #11                 // Method javafx/collections/ListChangeListener$Change.getAddedSubList:()Ljava/util/List;
      54: invokeinterface #5,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      59: astore_2
      60: aload_2
      61: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      66: ifeq          93
      69: aload_2
      70: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #8                  // class javafx/scene/transform/Transform
      78: astore_3
      79: aload_3
      80: aload_0
      81: getfield      #1                  // Field this$1:Ljavafx/scene/Node$NodeTransformation;
      84: getfield      #9                  // Field javafx/scene/Node$NodeTransformation.this$0:Ljavafx/scene/Node;
      87: invokestatic  #12                 // Method com/sun/javafx/scene/transform/TransformHelper.add:(Ljavafx/scene/transform/Transform;Ljavafx/scene/Node;)V
      90: goto          60
      93: goto          0
      96: aload_0
      97: getfield      #1                  // Field this$1:Ljavafx/scene/Node$NodeTransformation;
     100: getfield      #9                  // Field javafx/scene/Node$NodeTransformation.this$0:Ljavafx/scene/Node;
     103: invokestatic  #13                 // Method com/sun/javafx/scene/NodeHelper.transformsChanged:(Ljavafx/scene/Node;)V
     106: return
}
