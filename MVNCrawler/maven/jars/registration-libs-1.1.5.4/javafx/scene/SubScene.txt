Compiled from "SubScene.java"
public class javafx.scene.SubScene extends javafx.scene.Node {
  private static boolean is3DSupported;

  private final javafx.scene.SceneAntialiasing antiAliasing;

  private final boolean depthBuffer;

  private javafx.beans.property.ObjectProperty<javafx.scene.Parent> root;

  private javafx.beans.property.ObjectProperty<javafx.scene.Camera> camera;

  private javafx.scene.Camera defaultCamera;

  private javafx.beans.property.DoubleProperty width;

  private javafx.beans.property.DoubleProperty height;

  private javafx.beans.property.ObjectProperty<javafx.scene.paint.Paint> fill;

  private javafx.beans.property.ObjectProperty<java.lang.String> userAgentStylesheet;

  boolean dirtyLayout;

  private boolean dirtyNodes;

  private com.sun.javafx.scene.traversal.TopMostTraversalEngine traversalEngine;

  private int dirtyBits;

  private java.util.List<javafx.scene.LightBase> lights;

  public javafx.scene.SubScene(javafx.scene.Parent, double, double);
    Code:
       0: aload_0
       1: aload_1
       2: dload_2
       3: dload         4
       5: iconst_0
       6: getstatic     #10                 // Field javafx/scene/SceneAntialiasing.DISABLED:Ljavafx/scene/SceneAntialiasing;
       9: invokespecial #11                 // Method "<init>":(Ljavafx/scene/Parent;DDZLjavafx/scene/SceneAntialiasing;)V
      12: return

  public javafx.scene.SubScene(javafx.scene.Parent, double, double, boolean, javafx.scene.SceneAntialiasing);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method javafx/scene/Node."<init>":()V
       4: aload_0
       5: invokestatic  #13                 // Method com/sun/javafx/scene/SubSceneHelper.initHelper:(Ljavafx/scene/SubScene;)V
       8: aload_0
       9: aconst_null
      10: putfield      #14                 // Field userAgentStylesheet:Ljavafx/beans/property/ObjectProperty;
      13: aload_0
      14: iconst_0
      15: putfield      #15                 // Field dirtyLayout:Z
      18: aload_0
      19: iconst_0
      20: putfield      #16                 // Field dirtyNodes:Z
      23: aload_0
      24: new           #17                 // class com/sun/javafx/scene/traversal/SubSceneTraversalEngine
      27: dup
      28: aload_0
      29: invokespecial #18                 // Method com/sun/javafx/scene/traversal/SubSceneTraversalEngine."<init>":(Ljavafx/scene/SubScene;)V
      32: putfield      #19                 // Field traversalEngine:Lcom/sun/javafx/scene/traversal/TopMostTraversalEngine;
      35: aload_0
      36: iconst_m1
      37: putfield      #20                 // Field dirtyBits:I
      40: aload_0
      41: new           #21                 // class java/util/ArrayList
      44: dup
      45: invokespecial #22                 // Method java/util/ArrayList."<init>":()V
      48: putfield      #23                 // Field lights:Ljava/util/List;
      51: aload_0
      52: iload         6
      54: putfield      #24                 // Field depthBuffer:Z
      57: aload_0
      58: aload         7
      60: putfield      #25                 // Field antiAliasing:Ljavafx/scene/SceneAntialiasing;
      63: aload         7
      65: ifnull        80
      68: aload         7
      70: getstatic     #10                 // Field javafx/scene/SceneAntialiasing.DISABLED:Ljavafx/scene/SceneAntialiasing;
      73: if_acmpeq     80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: istore        8
      83: aload_0
      84: aload_1
      85: invokevirtual #26                 // Method setRoot:(Ljavafx/scene/Parent;)V
      88: aload_0
      89: dload_2
      90: invokevirtual #27                 // Method setWidth:(D)V
      93: aload_0
      94: dload         4
      96: invokevirtual #28                 // Method setHeight:(D)V
      99: iload         6
     101: ifne          109
     104: iload         8
     106: ifeq          132
     109: getstatic     #1                  // Field is3DSupported:Z
     112: ifne          132
     115: ldc           #29                 // class javafx/scene/SubScene
     117: invokevirtual #30                 // Method java/lang/Class.getName:()Ljava/lang/String;
     120: astore        9
     122: aload         9
     124: invokestatic  #31                 // Method com/sun/javafx/logging/PlatformLogger.getLogger:(Ljava/lang/String;)Lcom/sun/javafx/logging/PlatformLogger;
     127: ldc           #32                 // String System can\'t support ConditionalFeature.SCENE3D
     129: invokevirtual #33                 // Method com/sun/javafx/logging/PlatformLogger.warning:(Ljava/lang/String;)V
     132: iload         8
     134: ifeq          163
     137: invokestatic  #34                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
     140: invokevirtual #35                 // Method com/sun/javafx/tk/Toolkit.isMSAASupported:()Z
     143: ifne          163
     146: ldc           #29                 // class javafx/scene/SubScene
     148: invokevirtual #30                 // Method java/lang/Class.getName:()Ljava/lang/String;
     151: astore        9
     153: aload         9
     155: invokestatic  #31                 // Method com/sun/javafx/logging/PlatformLogger.getLogger:(Ljava/lang/String;)Lcom/sun/javafx/logging/PlatformLogger;
     158: ldc           #36                 // String System can\'t support antiAliasing
     160: invokevirtual #33                 // Method com/sun/javafx/logging/PlatformLogger.warning:(Ljava/lang/String;)V
     163: return

  public final javafx.scene.SceneAntialiasing getAntiAliasing();
    Code:
       0: aload_0
       1: getfield      #25                 // Field antiAliasing:Ljavafx/scene/SceneAntialiasing;
       4: areturn

  public final boolean isDepthBuffer();
    Code:
       0: aload_0
       1: getfield      #24                 // Field depthBuffer:Z
       4: ireturn

  private boolean isDepthBufferInternal();
    Code:
       0: getstatic     #1                  // Field is3DSupported:Z
       3: ifeq          13
       6: aload_0
       7: getfield      #24                 // Field depthBuffer:Z
      10: goto          14
      13: iconst_0
      14: ireturn

  public final void setRoot(javafx.scene.Parent);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method rootProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #38                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.scene.Parent getRoot();
    Code:
       0: aload_0
       1: getfield      #39                 // Field root:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #39                 // Field root:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #40                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #41                 // class javafx/scene/Parent
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.scene.Parent> rootProperty();
    Code:
       0: aload_0
       1: getfield      #39                 // Field root:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #42                 // class javafx/scene/SubScene$2
      11: dup
      12: aload_0
      13: invokespecial #43                 // Method javafx/scene/SubScene$2."<init>":(Ljavafx/scene/SubScene;)V
      16: putfield      #39                 // Field root:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #39                 // Field root:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setCamera(javafx.scene.Camera);
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method cameraProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #38                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.scene.Camera getCamera();
    Code:
       0: aload_0
       1: getfield      #45                 // Field camera:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #45                 // Field camera:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #40                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #46                 // class javafx/scene/Camera
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.scene.Camera> cameraProperty();
    Code:
       0: aload_0
       1: getfield      #45                 // Field camera:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #47                 // class javafx/scene/SubScene$3
      11: dup
      12: aload_0
      13: invokespecial #48                 // Method javafx/scene/SubScene$3."<init>":(Ljavafx/scene/SubScene;)V
      16: putfield      #45                 // Field camera:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #45                 // Field camera:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  javafx.scene.Camera getEffectiveCamera();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method getCamera:()Ljavafx/scene/Camera;
       4: astore_1
       5: aload_1
       6: ifnull        22
       9: aload_1
      10: instanceof    #50                 // class javafx/scene/PerspectiveCamera
      13: ifeq          75
      16: getstatic     #1                  // Field is3DSupported:Z
      19: ifne          75
      22: aload_0
      23: getfield      #51                 // Field defaultCamera:Ljavafx/scene/Camera;
      26: ifnonnull     70
      29: aload_0
      30: new           #52                 // class javafx/scene/ParallelCamera
      33: dup
      34: invokespecial #53                 // Method javafx/scene/ParallelCamera."<init>":()V
      37: putfield      #51                 // Field defaultCamera:Ljavafx/scene/Camera;
      40: aload_0
      41: getfield      #51                 // Field defaultCamera:Ljavafx/scene/Camera;
      44: aload_0
      45: invokevirtual #54                 // Method javafx/scene/Camera.setOwnerSubScene:(Ljavafx/scene/SubScene;)V
      48: aload_0
      49: getfield      #51                 // Field defaultCamera:Ljavafx/scene/Camera;
      52: aload_0
      53: invokevirtual #55                 // Method getWidth:()D
      56: invokevirtual #56                 // Method javafx/scene/Camera.setViewWidth:(D)V
      59: aload_0
      60: getfield      #51                 // Field defaultCamera:Ljavafx/scene/Camera;
      63: aload_0
      64: invokevirtual #57                 // Method getHeight:()D
      67: invokevirtual #58                 // Method javafx/scene/Camera.setViewHeight:(D)V
      70: aload_0
      71: getfield      #51                 // Field defaultCamera:Ljavafx/scene/Camera;
      74: areturn
      75: aload_1
      76: areturn

  final void markContentDirty();
    Code:
       0: aload_0
       1: getstatic     #59                 // Field javafx/scene/SubScene$SubSceneDirtyBits.CONTENT_DIRTY:Ljavafx/scene/SubScene$SubSceneDirtyBits;
       4: invokespecial #2                  // Method markDirty:(Ljavafx/scene/SubScene$SubSceneDirtyBits;)V
       7: return

  public final void setWidth(double);
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method widthProperty:()Ljavafx/beans/property/DoubleProperty;
       4: dload_1
       5: invokevirtual #61                 // Method javafx/beans/property/DoubleProperty.set:(D)V
       8: return

  public final double getWidth();
    Code:
       0: aload_0
       1: getfield      #62                 // Field width:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     11
       7: dconst_0
       8: goto          18
      11: aload_0
      12: getfield      #62                 // Field width:Ljavafx/beans/property/DoubleProperty;
      15: invokevirtual #63                 // Method javafx/beans/property/DoubleProperty.get:()D
      18: dreturn

  public final javafx.beans.property.DoubleProperty widthProperty();
    Code:
       0: aload_0
       1: getfield      #62                 // Field width:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #64                 // class javafx/scene/SubScene$4
      11: dup
      12: aload_0
      13: invokespecial #65                 // Method javafx/scene/SubScene$4."<init>":(Ljavafx/scene/SubScene;)V
      16: putfield      #62                 // Field width:Ljavafx/beans/property/DoubleProperty;
      19: aload_0
      20: getfield      #62                 // Field width:Ljavafx/beans/property/DoubleProperty;
      23: areturn

  public final void setHeight(double);
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method heightProperty:()Ljavafx/beans/property/DoubleProperty;
       4: dload_1
       5: invokevirtual #61                 // Method javafx/beans/property/DoubleProperty.set:(D)V
       8: return

  public final double getHeight();
    Code:
       0: aload_0
       1: getfield      #67                 // Field height:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     11
       7: dconst_0
       8: goto          18
      11: aload_0
      12: getfield      #67                 // Field height:Ljavafx/beans/property/DoubleProperty;
      15: invokevirtual #63                 // Method javafx/beans/property/DoubleProperty.get:()D
      18: dreturn

  public final javafx.beans.property.DoubleProperty heightProperty();
    Code:
       0: aload_0
       1: getfield      #67                 // Field height:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #68                 // class javafx/scene/SubScene$5
      11: dup
      12: aload_0
      13: invokespecial #69                 // Method javafx/scene/SubScene$5."<init>":(Ljavafx/scene/SubScene;)V
      16: putfield      #67                 // Field height:Ljavafx/beans/property/DoubleProperty;
      19: aload_0
      20: getfield      #67                 // Field height:Ljavafx/beans/property/DoubleProperty;
      23: areturn

  public final void setFill(javafx.scene.paint.Paint);
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method fillProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #38                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.scene.paint.Paint getFill();
    Code:
       0: aload_0
       1: getfield      #71                 // Field fill:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #71                 // Field fill:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #40                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #72                 // class javafx/scene/paint/Paint
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.scene.paint.Paint> fillProperty();
    Code:
       0: aload_0
       1: getfield      #71                 // Field fill:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #73                 // class javafx/scene/SubScene$6
      11: dup
      12: aload_0
      13: aconst_null
      14: invokespecial #74                 // Method javafx/scene/SubScene$6."<init>":(Ljavafx/scene/SubScene;Ljavafx/scene/paint/Paint;)V
      17: putfield      #71                 // Field fill:Ljavafx/beans/property/ObjectProperty;
      20: aload_0
      21: getfield      #71                 // Field fill:Ljavafx/beans/property/ObjectProperty;
      24: areturn

  private void doUpdatePeer();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #16                 // Field dirtyNodes:Z
       5: aload_0
       6: invokespecial #75                 // Method isDirty:()Z
       9: ifeq          194
      12: aload_0
      13: invokevirtual #76                 // Method getPeer:()Lcom/sun/javafx/sg/prism/NGNode;
      16: checkcast     #77                 // class com/sun/javafx/sg/prism/NGSubScene
      19: astore_1
      20: aload_0
      21: invokevirtual #78                 // Method getEffectiveCamera:()Ljavafx/scene/Camera;
      24: astore_2
      25: iconst_0
      26: istore_3
      27: aload_2
      28: invokevirtual #79                 // Method javafx/scene/Camera.getSubScene:()Ljavafx/scene/SubScene;
      31: ifnonnull     48
      34: aload_0
      35: getstatic     #59                 // Field javafx/scene/SubScene$SubSceneDirtyBits.CONTENT_DIRTY:Ljavafx/scene/SubScene$SubSceneDirtyBits;
      38: invokespecial #80                 // Method isDirty:(Ljavafx/scene/SubScene$SubSceneDirtyBits;)Z
      41: ifeq          48
      44: aload_2
      45: invokevirtual #81                 // Method javafx/scene/Camera.syncPeer:()V
      48: aload_0
      49: getstatic     #82                 // Field javafx/scene/SubScene$SubSceneDirtyBits.FILL_DIRTY:Ljavafx/scene/SubScene$SubSceneDirtyBits;
      52: invokespecial #80                 // Method isDirty:(Ljavafx/scene/SubScene$SubSceneDirtyBits;)Z
      55: ifeq          91
      58: aload_0
      59: invokevirtual #83                 // Method getFill:()Ljavafx/scene/paint/Paint;
      62: ifnonnull     69
      65: aconst_null
      66: goto          81
      69: invokestatic  #84                 // Method com/sun/javafx/tk/Toolkit.getPaintAccessor:()Lcom/sun/javafx/tk/Toolkit$PaintAccessor;
      72: aload_0
      73: invokevirtual #83                 // Method getFill:()Ljavafx/scene/paint/Paint;
      76: invokeinterface #85,  2           // InterfaceMethod com/sun/javafx/tk/Toolkit$PaintAccessor.getPlatformPaint:(Ljavafx/scene/paint/Paint;)Ljava/lang/Object;
      81: astore        4
      83: aload_1
      84: aload         4
      86: invokevirtual #86                 // Method com/sun/javafx/sg/prism/NGSubScene.setFillPaint:(Ljava/lang/Object;)V
      89: iconst_1
      90: istore_3
      91: aload_0
      92: getstatic     #87                 // Field javafx/scene/SubScene$SubSceneDirtyBits.SIZE_DIRTY:Ljavafx/scene/SubScene$SubSceneDirtyBits;
      95: invokespecial #80                 // Method isDirty:(Ljavafx/scene/SubScene$SubSceneDirtyBits;)Z
      98: ifeq          119
     101: aload_1
     102: aload_0
     103: invokevirtual #55                 // Method getWidth:()D
     106: d2f
     107: invokevirtual #88                 // Method com/sun/javafx/sg/prism/NGSubScene.setWidth:(F)V
     110: aload_1
     111: aload_0
     112: invokevirtual #57                 // Method getHeight:()D
     115: d2f
     116: invokevirtual #89                 // Method com/sun/javafx/sg/prism/NGSubScene.setHeight:(F)V
     119: aload_0
     120: getstatic     #90                 // Field javafx/scene/SubScene$SubSceneDirtyBits.CAMERA_DIRTY:Ljavafx/scene/SubScene$SubSceneDirtyBits;
     123: invokespecial #80                 // Method isDirty:(Ljavafx/scene/SubScene$SubSceneDirtyBits;)Z
     126: ifeq          142
     129: aload_1
     130: aload_2
     131: invokevirtual #91                 // Method javafx/scene/Camera.getPeer:()Lcom/sun/javafx/sg/prism/NGNode;
     134: checkcast     #92                 // class com/sun/javafx/sg/prism/NGCamera
     137: invokevirtual #93                 // Method com/sun/javafx/sg/prism/NGSubScene.setCamera:(Lcom/sun/javafx/sg/prism/NGCamera;)V
     140: iconst_1
     141: istore_3
     142: aload_0
     143: getstatic     #94                 // Field javafx/scene/SubScene$SubSceneDirtyBits.ROOT_SG_DIRTY:Ljavafx/scene/SubScene$SubSceneDirtyBits;
     146: invokespecial #80                 // Method isDirty:(Ljavafx/scene/SubScene$SubSceneDirtyBits;)Z
     149: ifeq          165
     152: aload_1
     153: aload_0
     154: invokevirtual #95                 // Method getRoot:()Ljavafx/scene/Parent;
     157: invokevirtual #96                 // Method javafx/scene/Parent.getPeer:()Lcom/sun/javafx/sg/prism/NGNode;
     160: invokevirtual #97                 // Method com/sun/javafx/sg/prism/NGSubScene.setRoot:(Lcom/sun/javafx/sg/prism/NGNode;)V
     163: iconst_1
     164: istore_3
     165: iload_3
     166: aload_0
     167: invokespecial #98                 // Method syncLights:()Z
     170: ior
     171: istore_3
     172: iload_3
     173: ifne          186
     176: aload_0
     177: getstatic     #59                 // Field javafx/scene/SubScene$SubSceneDirtyBits.CONTENT_DIRTY:Ljavafx/scene/SubScene$SubSceneDirtyBits;
     180: invokespecial #80                 // Method isDirty:(Ljavafx/scene/SubScene$SubSceneDirtyBits;)Z
     183: ifeq          190
     186: aload_1
     187: invokevirtual #99                 // Method com/sun/javafx/sg/prism/NGSubScene.markContentDirty:()V
     190: aload_0
     191: invokespecial #100                // Method clearDirtyBits:()V
     194: return

  void nodeResolvedOrientationChanged();
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method getRoot:()Ljavafx/scene/Parent;
       4: invokevirtual #101                // Method javafx/scene/Parent.parentResolvedOrientationInvalidated:()V
       7: return

  private void doProcessCSS();
    Code:
       0: aload_0
       1: getfield      #102                // Field cssFlag:Lcom/sun/javafx/scene/CssFlags;
       4: getstatic     #103                // Field com/sun/javafx/scene/CssFlags.CLEAN:Lcom/sun/javafx/scene/CssFlags;
       7: if_acmpne     11
      10: return
      11: aload_0
      12: invokevirtual #95                 // Method getRoot:()Ljavafx/scene/Parent;
      15: getfield      #104                // Field javafx/scene/Parent.cssFlag:Lcom/sun/javafx/scene/CssFlags;
      18: getstatic     #103                // Field com/sun/javafx/scene/CssFlags.CLEAN:Lcom/sun/javafx/scene/CssFlags;
      21: if_acmpne     35
      24: aload_0
      25: invokevirtual #95                 // Method getRoot:()Ljavafx/scene/Parent;
      28: aload_0
      29: getfield      #102                // Field cssFlag:Lcom/sun/javafx/scene/CssFlags;
      32: putfield      #104                // Field javafx/scene/Parent.cssFlag:Lcom/sun/javafx/scene/CssFlags;
      35: aload_0
      36: invokestatic  #105                // Method com/sun/javafx/scene/SubSceneHelper.superProcessCSS:(Ljavafx/scene/Node;)V
      39: aload_0
      40: invokevirtual #95                 // Method getRoot:()Ljavafx/scene/Parent;
      43: invokevirtual #106                // Method javafx/scene/Parent.processCSS:()V
      46: return

  void processCSS();
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method getRoot:()Ljavafx/scene/Parent;
       4: astore_1
       5: aload_1
       6: getstatic     #107                // Field com/sun/javafx/scene/DirtyBits.NODE_CSS:Lcom/sun/javafx/scene/DirtyBits;
       9: invokevirtual #108                // Method javafx/scene/Parent.isDirty:(Lcom/sun/javafx/scene/DirtyBits;)Z
      12: ifeq          39
      15: aload_1
      16: getstatic     #107                // Field com/sun/javafx/scene/DirtyBits.NODE_CSS:Lcom/sun/javafx/scene/DirtyBits;
      19: invokevirtual #109                // Method javafx/scene/Parent.clearDirty:(Lcom/sun/javafx/scene/DirtyBits;)V
      22: aload_0
      23: getfield      #102                // Field cssFlag:Lcom/sun/javafx/scene/CssFlags;
      26: getstatic     #103                // Field com/sun/javafx/scene/CssFlags.CLEAN:Lcom/sun/javafx/scene/CssFlags;
      29: if_acmpne     39
      32: aload_0
      33: getstatic     #110                // Field com/sun/javafx/scene/CssFlags.UPDATE:Lcom/sun/javafx/scene/CssFlags;
      36: putfield      #102                // Field cssFlag:Lcom/sun/javafx/scene/CssFlags;
      39: aload_0
      40: invokespecial #111                // Method javafx/scene/Node.processCSS:()V
      43: return

  public final javafx.beans.property.ObjectProperty<java.lang.String> userAgentStylesheetProperty();
    Code:
       0: aload_0
       1: getfield      #14                 // Field userAgentStylesheet:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     23
       7: aload_0
       8: new           #112                // class javafx/scene/SubScene$7
      11: dup
      12: aload_0
      13: aload_0
      14: ldc           #113                // String userAgentStylesheet
      16: aconst_null
      17: invokespecial #114                // Method javafx/scene/SubScene$7."<init>":(Ljavafx/scene/SubScene;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V
      20: putfield      #14                 // Field userAgentStylesheet:Ljavafx/beans/property/ObjectProperty;
      23: aload_0
      24: getfield      #14                 // Field userAgentStylesheet:Ljavafx/beans/property/ObjectProperty;
      27: areturn

  public final java.lang.String getUserAgentStylesheet();
    Code:
       0: aload_0
       1: getfield      #14                 // Field userAgentStylesheet:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #14                 // Field userAgentStylesheet:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #40                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #115                // class java/lang/String
      21: areturn

  public final void setUserAgentStylesheet(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #116                // Method userAgentStylesheetProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #38                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  void updateBounds();
    Code:
       0: aload_0
       1: invokespecial #117                // Method javafx/scene/Node.updateBounds:()V
       4: aload_0
       5: invokevirtual #95                 // Method getRoot:()Ljavafx/scene/Parent;
       8: invokevirtual #118                // Method javafx/scene/Parent.updateBounds:()V
      11: return

  private com.sun.javafx.sg.prism.NGNode doCreatePeer();
    Code:
       0: getstatic     #1                  // Field is3DSupported:Z
       3: ifne          16
       6: new           #77                 // class com/sun/javafx/sg/prism/NGSubScene
       9: dup
      10: iconst_0
      11: iconst_0
      12: invokespecial #119                // Method com/sun/javafx/sg/prism/NGSubScene."<init>":(ZZ)V
      15: areturn
      16: aload_0
      17: getfield      #25                 // Field antiAliasing:Ljavafx/scene/SceneAntialiasing;
      20: ifnull        37
      23: aload_0
      24: getfield      #25                 // Field antiAliasing:Ljavafx/scene/SceneAntialiasing;
      27: getstatic     #10                 // Field javafx/scene/SceneAntialiasing.DISABLED:Ljavafx/scene/SceneAntialiasing;
      30: if_acmpeq     37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: istore_1
      39: new           #77                 // class com/sun/javafx/sg/prism/NGSubScene
      42: dup
      43: aload_0
      44: getfield      #24                 // Field depthBuffer:Z
      47: iload_1
      48: ifeq          64
      51: invokestatic  #34                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      54: invokevirtual #35                 // Method com/sun/javafx/tk/Toolkit.isMSAASupported:()Z
      57: ifeq          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: invokespecial #119                // Method com/sun/javafx/sg/prism/NGSubScene."<init>":(ZZ)V
      68: areturn

  private com.sun.javafx.geom.BaseBounds doComputeGeomBounds(com.sun.javafx.geom.BaseBounds, com.sun.javafx.geom.transform.BaseTransform);
    Code:
       0: aload_0
       1: getfield      #62                 // Field width:Ljavafx/beans/property/DoubleProperty;
       4: invokevirtual #63                 // Method javafx/beans/property/DoubleProperty.get:()D
       7: invokestatic  #120                // Method java/lang/Math.ceil:(D)D
      10: d2i
      11: istore_3
      12: aload_0
      13: getfield      #67                 // Field height:Ljavafx/beans/property/DoubleProperty;
      16: invokevirtual #63                 // Method javafx/beans/property/DoubleProperty.get:()D
      19: invokestatic  #120                // Method java/lang/Math.ceil:(D)D
      22: d2i
      23: istore        4
      25: aload_1
      26: fconst_0
      27: fconst_0
      28: fconst_0
      29: iload_3
      30: i2f
      31: iload         4
      33: i2f
      34: fconst_0
      35: invokevirtual #121                // Method com/sun/javafx/geom/BaseBounds.deriveWithNewBounds:(FFFFFF)Lcom/sun/javafx/geom/BaseBounds;
      38: astore_1
      39: aload_2
      40: aload_1
      41: aload_1
      42: invokevirtual #122                // Method com/sun/javafx/geom/transform/BaseTransform.transform:(Lcom/sun/javafx/geom/BaseBounds;Lcom/sun/javafx/geom/BaseBounds;)Lcom/sun/javafx/geom/BaseBounds;
      45: astore_1
      46: aload_1
      47: areturn

  void setDirtyLayout(javafx.scene.Parent);
    Code:
       0: aload_0
       1: getfield      #15                 // Field dirtyLayout:Z
       4: ifne          42
       7: aload_1
       8: ifnull        42
      11: aload_1
      12: invokevirtual #123                // Method javafx/scene/Parent.getSubScene:()Ljavafx/scene/SubScene;
      15: aload_0
      16: if_acmpne     42
      19: aload_0
      20: invokevirtual #124                // Method getScene:()Ljavafx/scene/Scene;
      23: ifnull        42
      26: aload_0
      27: iconst_1
      28: putfield      #15                 // Field dirtyLayout:Z
      31: aload_0
      32: invokevirtual #125                // Method markDirtyLayoutBranch:()V
      35: aload_0
      36: getstatic     #59                 // Field javafx/scene/SubScene$SubSceneDirtyBits.CONTENT_DIRTY:Ljavafx/scene/SubScene$SubSceneDirtyBits;
      39: invokespecial #2                  // Method markDirty:(Ljavafx/scene/SubScene$SubSceneDirtyBits;)V
      42: return

  void setDirty(javafx.scene.Node);
    Code:
       0: aload_0
       1: getfield      #16                 // Field dirtyNodes:Z
       4: ifne          38
       7: aload_1
       8: ifnull        38
      11: aload_1
      12: invokevirtual #126                // Method javafx/scene/Node.getSubScene:()Ljavafx/scene/SubScene;
      15: aload_0
      16: if_acmpne     38
      19: aload_0
      20: invokevirtual #124                // Method getScene:()Ljavafx/scene/Scene;
      23: ifnull        38
      26: aload_0
      27: iconst_1
      28: putfield      #16                 // Field dirtyNodes:Z
      31: aload_0
      32: getstatic     #59                 // Field javafx/scene/SubScene$SubSceneDirtyBits.CONTENT_DIRTY:Ljavafx/scene/SubScene$SubSceneDirtyBits;
      35: invokespecial #2                  // Method markDirty:(Ljavafx/scene/SubScene$SubSceneDirtyBits;)V
      38: return

  void layoutPass();
    Code:
       0: aload_0
       1: getfield      #15                 // Field dirtyLayout:Z
       4: ifeq          25
       7: aload_0
       8: invokevirtual #95                 // Method getRoot:()Ljavafx/scene/Parent;
      11: astore_1
      12: aload_1
      13: ifnull        20
      16: aload_1
      17: invokevirtual #127                // Method javafx/scene/Parent.layout:()V
      20: aload_0
      21: iconst_0
      22: putfield      #15                 // Field dirtyLayout:Z
      25: return

  boolean traverse(javafx.scene.Node, com.sun.javafx.scene.traversal.Direction);
    Code:
       0: aload_0
       1: getfield      #19                 // Field traversalEngine:Lcom/sun/javafx/scene/traversal/TopMostTraversalEngine;
       4: aload_1
       5: aload_2
       6: invokevirtual #128                // Method com/sun/javafx/scene/traversal/TopMostTraversalEngine.trav:(Ljavafx/scene/Node;Lcom/sun/javafx/scene/traversal/Direction;)Ljavafx/scene/Node;
       9: ifnull        16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private void clearDirtyBits();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #20                 // Field dirtyBits:I
       5: return

  private boolean isDirty();
    Code:
       0: aload_0
       1: getfield      #20                 // Field dirtyBits:I
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private void setDirty(javafx.scene.SubScene$SubSceneDirtyBits);
    Code:
       0: aload_0
       1: dup
       2: getfield      #20                 // Field dirtyBits:I
       5: aload_1
       6: invokevirtual #129                // Method javafx/scene/SubScene$SubSceneDirtyBits.getMask:()I
       9: ior
      10: putfield      #20                 // Field dirtyBits:I
      13: return

  private boolean isDirty(javafx.scene.SubScene$SubSceneDirtyBits);
    Code:
       0: aload_0
       1: getfield      #20                 // Field dirtyBits:I
       4: aload_1
       5: invokevirtual #129                // Method javafx/scene/SubScene$SubSceneDirtyBits.getMask:()I
       8: iand
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private void markDirty(javafx.scene.SubScene$SubSceneDirtyBits);
    Code:
       0: aload_0
       1: invokespecial #75                 // Method isDirty:()Z
       4: ifne          14
       7: aload_0
       8: getstatic     #130                // Field com/sun/javafx/scene/DirtyBits.NODE_CONTENTS:Lcom/sun/javafx/scene/DirtyBits;
      11: invokestatic  #131                // Method com/sun/javafx/scene/NodeHelper.markDirty:(Ljavafx/scene/Node;Lcom/sun/javafx/scene/DirtyBits;)V
      14: aload_0
      15: aload_1
      16: invokespecial #132                // Method setDirty:(Ljavafx/scene/SubScene$SubSceneDirtyBits;)V
      19: return

  private boolean doComputeContains(double, double);
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: invokespecial #133                // Method subSceneComputeContains:(DD)Z
       6: ifeq          11
       9: iconst_1
      10: ireturn
      11: aload_0
      12: invokevirtual #95                 // Method getRoot:()Ljavafx/scene/Parent;
      15: dload_1
      16: dload_3
      17: invokestatic  #134                // Method com/sun/javafx/scene/NodeHelper.computeContains:(Ljavafx/scene/Node;DD)Z
      20: ireturn

  private boolean subSceneComputeContains(double, double);
    Code:
       0: dload_1
       1: dconst_0
       2: dcmpg
       3: iflt          30
       6: dload_3
       7: dconst_0
       8: dcmpg
       9: iflt          30
      12: dload_1
      13: aload_0
      14: invokevirtual #55                 // Method getWidth:()D
      17: dcmpl
      18: ifgt          30
      21: dload_3
      22: aload_0
      23: invokevirtual #57                 // Method getHeight:()D
      26: dcmpl
      27: ifle          32
      30: iconst_0
      31: ireturn
      32: aload_0
      33: invokevirtual #83                 // Method getFill:()Ljavafx/scene/paint/Paint;
      36: ifnull        43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  private javafx.scene.input.PickResult pickRootSG(double, double);
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method getWidth:()D
       4: dstore        5
       6: aload_0
       7: invokevirtual #57                 // Method getHeight:()D
      10: dstore        7
      12: dload_1
      13: dconst_0
      14: dcmpg
      15: iflt          38
      18: dload_3
      19: dconst_0
      20: dcmpg
      21: iflt          38
      24: dload_1
      25: dload         5
      27: dcmpl
      28: ifgt          38
      31: dload_3
      32: dload         7
      34: dcmpl
      35: ifle          40
      38: aconst_null
      39: areturn
      40: new           #135                // class com/sun/javafx/scene/input/PickResultChooser
      43: dup
      44: invokespecial #136                // Method com/sun/javafx/scene/input/PickResultChooser."<init>":()V
      47: astore        9
      49: aload_0
      50: invokevirtual #78                 // Method getEffectiveCamera:()Ljavafx/scene/Camera;
      53: dload_1
      54: dload_3
      55: new           #137                // class com/sun/javafx/geom/PickRay
      58: dup
      59: invokespecial #138                // Method com/sun/javafx/geom/PickRay."<init>":()V
      62: invokevirtual #139                // Method javafx/scene/Camera.computePickRay:(DDLcom/sun/javafx/geom/PickRay;)Lcom/sun/javafx/geom/PickRay;
      65: astore        10
      67: aload         10
      69: invokevirtual #140                // Method com/sun/javafx/geom/PickRay.getDirectionNoClone:()Lcom/sun/javafx/geom/Vec3d;
      72: invokevirtual #141                // Method com/sun/javafx/geom/Vec3d.normalize:()V
      75: aload_0
      76: invokevirtual #95                 // Method getRoot:()Ljavafx/scene/Parent;
      79: aload         10
      81: aload         9
      83: invokevirtual #142                // Method javafx/scene/Parent.pickNode:(Lcom/sun/javafx/geom/PickRay;Lcom/sun/javafx/scene/input/PickResultChooser;)V
      86: aload         9
      88: invokevirtual #143                // Method com/sun/javafx/scene/input/PickResultChooser.toPickResult:()Ljavafx/scene/input/PickResult;
      91: areturn

  private void doPickNodeLocal(com.sun.javafx.geom.PickRay, com.sun.javafx.scene.input.PickResultChooser);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #144                // Method intersectsBounds:(Lcom/sun/javafx/geom/PickRay;)D
       5: dstore_3
       6: dload_3
       7: invokestatic  #145                // Method java/lang/Double.isNaN:(D)Z
      10: ifne          94
      13: aload_2
      14: dload_3
      15: invokevirtual #146                // Method com/sun/javafx/scene/input/PickResultChooser.isCloser:(D)Z
      18: ifeq          94
      21: aload_1
      22: dload_3
      23: invokestatic  #147                // Method com/sun/javafx/scene/input/PickResultChooser.computePoint:(Lcom/sun/javafx/geom/PickRay;D)Ljavafx/geometry/Point3D;
      26: astore        5
      28: aload_0
      29: aload         5
      31: invokevirtual #148                // Method javafx/geometry/Point3D.getX:()D
      34: aload         5
      36: invokevirtual #149                // Method javafx/geometry/Point3D.getY:()D
      39: invokespecial #150                // Method pickRootSG:(DD)Ljavafx/scene/input/PickResult;
      42: astore        6
      44: aload         6
      46: ifnull        61
      49: aload_2
      50: aload_0
      51: aload         6
      53: dload_3
      54: invokevirtual #151                // Method com/sun/javafx/scene/input/PickResultChooser.offerSubScenePickResult:(Ljavafx/scene/SubScene;Ljavafx/scene/input/PickResult;D)Z
      57: pop
      58: goto          94
      61: aload_0
      62: invokevirtual #152                // Method isPickOnBounds:()Z
      65: ifne          85
      68: aload_0
      69: aload         5
      71: invokevirtual #148                // Method javafx/geometry/Point3D.getX:()D
      74: aload         5
      76: invokevirtual #149                // Method javafx/geometry/Point3D.getY:()D
      79: invokespecial #133                // Method subSceneComputeContains:(DD)Z
      82: ifeq          94
      85: aload_2
      86: aload_0
      87: dload_3
      88: aload         5
      90: invokevirtual #153                // Method com/sun/javafx/scene/input/PickResultChooser.offer:(Ljavafx/scene/Node;DLjavafx/geometry/Point3D;)Z
      93: pop
      94: return

  final void addLight(javafx.scene.LightBase);
    Code:
       0: aload_0
       1: getfield      #23                 // Field lights:Ljava/util/List;
       4: aload_1
       5: invokeinterface #154,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      10: ifne          31
      13: aload_0
      14: getstatic     #155                // Field javafx/scene/SubScene$SubSceneDirtyBits.LIGHTS_DIRTY:Ljavafx/scene/SubScene$SubSceneDirtyBits;
      17: invokespecial #2                  // Method markDirty:(Ljavafx/scene/SubScene$SubSceneDirtyBits;)V
      20: aload_0
      21: getfield      #23                 // Field lights:Ljava/util/List;
      24: aload_1
      25: invokeinterface #156,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      30: pop
      31: return

  final void removeLight(javafx.scene.LightBase);
    Code:
       0: aload_0
       1: getfield      #23                 // Field lights:Ljava/util/List;
       4: aload_1
       5: invokeinterface #157,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: ifeq          20
      13: aload_0
      14: getstatic     #155                // Field javafx/scene/SubScene$SubSceneDirtyBits.LIGHTS_DIRTY:Ljavafx/scene/SubScene$SubSceneDirtyBits;
      17: invokespecial #2                  // Method markDirty:(Ljavafx/scene/SubScene$SubSceneDirtyBits;)V
      20: return

  private boolean syncLights();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getstatic     #155                // Field javafx/scene/SubScene$SubSceneDirtyBits.LIGHTS_DIRTY:Ljavafx/scene/SubScene$SubSceneDirtyBits;
       6: invokespecial #80                 // Method isDirty:(Ljavafx/scene/SubScene$SubSceneDirtyBits;)Z
       9: ifne          14
      12: iload_1
      13: ireturn
      14: aload_0
      15: invokevirtual #76                 // Method getPeer:()Lcom/sun/javafx/sg/prism/NGNode;
      18: checkcast     #77                 // class com/sun/javafx/sg/prism/NGSubScene
      21: astore_2
      22: aload_2
      23: invokevirtual #158                // Method com/sun/javafx/sg/prism/NGSubScene.getLights:()[Lcom/sun/javafx/sg/prism/NGLightBase;
      26: astore_3
      27: aload_0
      28: getfield      #23                 // Field lights:Ljava/util/List;
      31: invokeinterface #159,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      36: ifeq          43
      39: aload_3
      40: ifnull        173
      43: aload_0
      44: getfield      #23                 // Field lights:Ljava/util/List;
      47: invokeinterface #159,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      52: ifeq          63
      55: aload_2
      56: aconst_null
      57: invokevirtual #160                // Method com/sun/javafx/sg/prism/NGSubScene.setLights:([Lcom/sun/javafx/sg/prism/NGLightBase;)V
      60: goto          171
      63: aload_3
      64: ifnull        81
      67: aload_3
      68: arraylength
      69: aload_0
      70: getfield      #23                 // Field lights:Ljava/util/List;
      73: invokeinterface #161,  1          // InterfaceMethod java/util/List.size:()I
      78: if_icmpge     94
      81: aload_0
      82: getfield      #23                 // Field lights:Ljava/util/List;
      85: invokeinterface #161,  1          // InterfaceMethod java/util/List.size:()I
      90: anewarray     #162                // class com/sun/javafx/sg/prism/NGLightBase
      93: astore_3
      94: iconst_0
      95: istore        4
      97: iload         4
      99: aload_0
     100: getfield      #23                 // Field lights:Ljava/util/List;
     103: invokeinterface #161,  1          // InterfaceMethod java/util/List.size:()I
     108: if_icmpge     141
     111: aload_3
     112: iload         4
     114: aload_0
     115: getfield      #23                 // Field lights:Ljava/util/List;
     118: iload         4
     120: invokeinterface #163,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     125: checkcast     #164                // class javafx/scene/LightBase
     128: invokevirtual #165                // Method javafx/scene/LightBase.getPeer:()Lcom/sun/javafx/sg/prism/NGNode;
     131: checkcast     #162                // class com/sun/javafx/sg/prism/NGLightBase
     134: aastore
     135: iinc          4, 1
     138: goto          97
     141: iload         4
     143: aload_3
     144: arraylength
     145: if_icmpge     166
     148: aload_3
     149: iload         4
     151: aaload
     152: ifnull        166
     155: aload_3
     156: iload         4
     158: iinc          4, 1
     161: aconst_null
     162: aastore
     163: goto          141
     166: aload_2
     167: aload_3
     168: invokevirtual #160                // Method com/sun/javafx/sg/prism/NGSubScene.setLights:([Lcom/sun/javafx/sg/prism/NGLightBase;)V
     171: iconst_1
     172: istore_1
     173: iload_1
     174: ireturn

  static com.sun.javafx.sg.prism.NGNode access$000(javafx.scene.SubScene);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method doCreatePeer:()Lcom/sun/javafx/sg/prism/NGNode;
       4: areturn

  static void access$100(javafx.scene.SubScene);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method doUpdatePeer:()V
       4: return

  static com.sun.javafx.geom.BaseBounds access$200(javafx.scene.SubScene, com.sun.javafx.geom.BaseBounds, com.sun.javafx.geom.transform.BaseTransform);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #7                  // Method doComputeGeomBounds:(Lcom/sun/javafx/geom/BaseBounds;Lcom/sun/javafx/geom/transform/BaseTransform;)Lcom/sun/javafx/geom/BaseBounds;
       6: areturn

  static boolean access$300(javafx.scene.SubScene, double, double);
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: invokespecial #6                  // Method doComputeContains:(DD)Z
       6: ireturn

  static void access$400(javafx.scene.SubScene);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method doProcessCSS:()V
       4: return

  static void access$500(javafx.scene.SubScene, com.sun.javafx.geom.PickRay, com.sun.javafx.scene.input.PickResultChooser);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #4                  // Method doPickNodeLocal:(Lcom/sun/javafx/geom/PickRay;Lcom/sun/javafx/scene/input/PickResultChooser;)V
       6: return

  static boolean access$600(javafx.scene.SubScene);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method isDepthBufferInternal:()Z
       4: ireturn

  static void access$700(javafx.scene.SubScene, javafx.scene.SubScene$SubSceneDirtyBits);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method markDirty:(Ljavafx/scene/SubScene$SubSceneDirtyBits;)V
       5: return

  static boolean access$800();
    Code:
       0: getstatic     #1                  // Field is3DSupported:Z
       3: ireturn

  static {};
    Code:
       0: new           #166                // class javafx/scene/SubScene$1
       3: dup
       4: invokespecial #167                // Method javafx/scene/SubScene$1."<init>":()V
       7: invokestatic  #168                // Method com/sun/javafx/scene/SubSceneHelper.setSubSceneAccessor:(Lcom/sun/javafx/scene/SubSceneHelper$SubSceneAccessor;)V
      10: getstatic     #169                // Field javafx/application/ConditionalFeature.SCENE3D:Ljavafx/application/ConditionalFeature;
      13: invokestatic  #170                // Method javafx/application/Platform.isSupported:(Ljavafx/application/ConditionalFeature;)Z
      16: putstatic     #1                  // Field is3DSupported:Z
      19: return
}
