Compiled from "Parent.java"
public abstract class javafx.scene.Parent extends javafx.scene.Node {
  static final int DIRTY_CHILDREN_THRESHOLD;

  private static final boolean warnOnAutoMove;

  private static final int REMOVED_CHILDREN_THRESHOLD;

  private boolean removedChildrenOptimizationDisabled;

  private final java.util.Set<javafx.scene.Node> childSet;

  private int startIdx;

  private int pgChildrenSize;

  private final java.util.List<javafx.scene.Node> viewOrderChildren;

  private boolean childrenTriggerPermutation;

  private java.util.List<javafx.scene.Node> removed;

  private boolean geomChanged;

  private boolean childSetModified;

  private final javafx.collections.ObservableList<javafx.scene.Node> children;

  private final javafx.collections.ObservableList<javafx.scene.Node> unmodifiableChildren;

  private java.util.List<javafx.scene.Node> unmodifiableManagedChildren;

  private com.sun.javafx.scene.traversal.ParentTraversalEngine traversalEngine;

  private javafx.beans.property.ReadOnlyBooleanWrapper needsLayout;

  com.sun.javafx.scene.LayoutFlags layoutFlag;

  private boolean performingLayout;

  private boolean sizeCacheClear;

  private double prefWidthCache;

  private double prefHeightCache;

  private double minWidthCache;

  private double minHeightCache;

  private boolean forceParentLayout;

  private javafx.scene.Node currentLayoutChild;

  private boolean sceneRoot;

  boolean layoutRoot;

  private final javafx.collections.ObservableList<java.lang.String> stylesheets;

  private com.sun.javafx.geom.BaseBounds tmp;

  private com.sun.javafx.geom.BaseBounds cachedBounds;

  private boolean cachedBoundsInvalid;

  private int dirtyChildrenCount;

  private java.util.ArrayList<javafx.scene.Node> dirtyChildren;

  private javafx.scene.Node top;

  private javafx.scene.Node left;

  private javafx.scene.Node bottom;

  private javafx.scene.Node right;

  private javafx.scene.Node near;

  private javafx.scene.Node far;

  private final int LEFT_INVALID;

  private final int TOP_INVALID;

  private final int NEAR_INVALID;

  private final int RIGHT_INVALID;

  private final int BOTTOM_INVALID;

  private final int FAR_INVALID;

  private javafx.scene.Node currentlyProcessedChild;

  private void doUpdatePeer();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getPeer:()Lcom/sun/javafx/sg/prism/NGNode;
       4: checkcast     #26                 // class com/sun/javafx/sg/prism/NGGroup
       7: astore_1
       8: invokestatic  #27                 // Method com/sun/javafx/util/Utils.assertionEnabled:()Z
      11: ifeq          53
      14: aload_1
      15: invokevirtual #28                 // Method com/sun/javafx/sg/prism/NGGroup.getChildren:()Ljava/util/List;
      18: astore_2
      19: aload_2
      20: invokeinterface #29,  1           // InterfaceMethod java/util/List.size:()I
      25: aload_0
      26: getfield      #30                 // Field pgChildrenSize:I
      29: if_icmpeq     53
      32: getstatic     #31                 // Field java/lang/System.err:Ljava/io/PrintStream;
      35: aload_2
      36: invokeinterface #29,  1           // InterfaceMethod java/util/List.size:()I
      41: aload_0
      42: getfield      #30                 // Field pgChildrenSize:I
      45: invokedynamic #32,  0             // InvokeDynamic #0:makeConcatWithConstants:(II)Ljava/lang/String;
      50: invokevirtual #33                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      53: aload_0
      54: getstatic     #34                 // Field com/sun/javafx/scene/DirtyBits.PARENT_CHILDREN:Lcom/sun/javafx/scene/DirtyBits;
      57: invokevirtual #35                 // Method isDirty:(Lcom/sun/javafx/scene/DirtyBits;)Z
      60: ifeq          232
      63: aload_1
      64: aload_0
      65: getfield      #6                  // Field startIdx:I
      68: invokevirtual #36                 // Method com/sun/javafx/sg/prism/NGGroup.clearFrom:(I)V
      71: aload_0
      72: getfield      #6                  // Field startIdx:I
      75: istore_2
      76: iload_2
      77: aload_0
      78: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      81: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      86: if_icmpge     116
      89: aload_1
      90: iload_2
      91: aload_0
      92: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      95: iload_2
      96: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
     101: checkcast     #39                 // class javafx/scene/Node
     104: invokevirtual #40                 // Method javafx/scene/Node.getPeer:()Lcom/sun/javafx/sg/prism/NGNode;
     107: invokevirtual #41                 // Method com/sun/javafx/sg/prism/NGGroup.add:(ILcom/sun/javafx/sg/prism/NGNode;)V
     110: iinc          2, 1
     113: goto          76
     116: aload_0
     117: getfield      #2                  // Field removedChildrenOptimizationDisabled:Z
     120: ifeq          135
     123: aload_1
     124: invokevirtual #42                 // Method com/sun/javafx/sg/prism/NGGroup.markDirty:()V
     127: aload_0
     128: iconst_0
     129: putfield      #2                  // Field removedChildrenOptimizationDisabled:Z
     132: goto          195
     135: aload_0
     136: getfield      #3                  // Field removed:Ljava/util/List;
     139: ifnull        195
     142: aload_0
     143: getfield      #3                  // Field removed:Ljava/util/List;
     146: invokeinterface #43,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     151: ifne          195
     154: iconst_0
     155: istore_2
     156: iload_2
     157: aload_0
     158: getfield      #3                  // Field removed:Ljava/util/List;
     161: invokeinterface #29,  1           // InterfaceMethod java/util/List.size:()I
     166: if_icmpge     195
     169: aload_1
     170: aload_0
     171: getfield      #3                  // Field removed:Ljava/util/List;
     174: iload_2
     175: invokeinterface #44,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     180: checkcast     #39                 // class javafx/scene/Node
     183: invokevirtual #40                 // Method javafx/scene/Node.getPeer:()Lcom/sun/javafx/sg/prism/NGNode;
     186: invokevirtual #45                 // Method com/sun/javafx/sg/prism/NGGroup.addToRemoved:(Lcom/sun/javafx/sg/prism/NGNode;)V
     189: iinc          2, 1
     192: goto          156
     195: aload_0
     196: getfield      #3                  // Field removed:Ljava/util/List;
     199: ifnull        211
     202: aload_0
     203: getfield      #3                  // Field removed:Ljava/util/List;
     206: invokeinterface #46,  1           // InterfaceMethod java/util/List.clear:()V
     211: aload_0
     212: aload_0
     213: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
     216: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
     221: putfield      #30                 // Field pgChildrenSize:I
     224: aload_0
     225: aload_0
     226: getfield      #30                 // Field pgChildrenSize:I
     229: putfield      #6                  // Field startIdx:I
     232: aload_0
     233: getstatic     #47                 // Field com/sun/javafx/scene/DirtyBits.PARENT_CHILDREN_VIEW_ORDER:Lcom/sun/javafx/scene/DirtyBits;
     236: invokevirtual #35                 // Method isDirty:(Lcom/sun/javafx/scene/DirtyBits;)Z
     239: ifeq          246
     242: aload_0
     243: invokespecial #48                 // Method computeViewOrderChidrenAndUpdatePeer:()V
     246: invokestatic  #27                 // Method com/sun/javafx/util/Utils.assertionEnabled:()Z
     249: ifeq          256
     252: aload_0
     253: invokevirtual #49                 // Method validatePG:()V
     256: return

  void validatePG();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #25                 // Method getPeer:()Lcom/sun/javafx/sg/prism/NGNode;
       6: checkcast     #26                 // class com/sun/javafx/sg/prism/NGGroup
       9: astore_2
      10: aload_2
      11: invokevirtual #28                 // Method com/sun/javafx/sg/prism/NGGroup.getChildren:()Ljava/util/List;
      14: astore_3
      15: aload_3
      16: invokeinterface #29,  1           // InterfaceMethod java/util/List.size:()I
      21: aload_0
      22: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      25: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      30: if_icmpeq     64
      33: getstatic     #31                 // Field java/lang/System.err:Ljava/io/PrintStream;
      36: aload_3
      37: invokeinterface #29,  1           // InterfaceMethod java/util/List.size:()I
      42: aload_0
      43: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      46: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      51: invokedynamic #50,  0             // InvokeDynamic #1:makeConcatWithConstants:(II)Ljava/lang/String;
      56: invokevirtual #33                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      59: iconst_1
      60: istore_1
      61: goto          166
      64: iconst_0
      65: istore        4
      67: iload         4
      69: aload_0
      70: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      73: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      78: if_icmpge     166
      81: aload_0
      82: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      85: iload         4
      87: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      92: checkcast     #39                 // class javafx/scene/Node
      95: astore        5
      97: aload         5
      99: invokevirtual #51                 // Method javafx/scene/Node.getParent:()Ljavafx/scene/Parent;
     102: aload_0
     103: if_acmpeq     127
     106: getstatic     #31                 // Field java/lang/System.err:Ljava/io/PrintStream;
     109: aload_0
     110: iload         4
     112: aload         5
     114: invokevirtual #51                 // Method javafx/scene/Node.getParent:()Ljavafx/scene/Parent;
     117: invokedynamic #52,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljavafx/scene/Parent;ILjavafx/scene/Parent;)Ljava/lang/String;
     122: invokevirtual #33                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     125: iconst_1
     126: istore_1
     127: aload         5
     129: invokevirtual #40                 // Method javafx/scene/Node.getPeer:()Lcom/sun/javafx/sg/prism/NGNode;
     132: aload_3
     133: iload         4
     135: invokeinterface #44,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     140: if_acmpeq     160
     143: getstatic     #31                 // Field java/lang/System.err:Ljava/io/PrintStream;
     146: iload         4
     148: iload         4
     150: invokedynamic #53,  0             // InvokeDynamic #3:makeConcatWithConstants:(II)Ljava/lang/String;
     155: invokevirtual #33                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     158: iconst_1
     159: istore_1
     160: iinc          4, 1
     163: goto          67
     166: iload_1
     167: ifeq          180
     170: new           #54                 // class java/lang/AssertionError
     173: dup
     174: ldc           #55                 // String validation of PGGroup children failed
     176: invokespecial #56                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     179: athrow
     180: return

  void printSeq(java.lang.String, java.util.List<javafx.scene.Node>);
    Code:
       0: aload_1
       1: astore_3
       2: aload_2
       3: invokeinterface #57,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: astore        4
      10: aload         4
      12: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          44
      20: aload         4
      22: invokeinterface #59,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #39                 // class javafx/scene/Node
      30: astore        5
      32: aload_3
      33: aload         5
      35: invokedynamic #60,  0             // InvokeDynamic #4:makeConcatWithConstants:(Ljava/lang/String;Ljavafx/scene/Node;)Ljava/lang/String;
      40: astore_3
      41: goto          10
      44: getstatic     #61                 // Field java/lang/System.out:Ljava/io/PrintStream;
      47: aload_3
      48: invokevirtual #33                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      51: return

  void markViewOrderChildrenDirty();
    Code:
       0: aload_0
       1: getstatic     #47                 // Field com/sun/javafx/scene/DirtyBits.PARENT_CHILDREN_VIEW_ORDER:Lcom/sun/javafx/scene/DirtyBits;
       4: invokestatic  #62                 // Method com/sun/javafx/scene/NodeHelper.markDirty:(Ljavafx/scene/Node;Lcom/sun/javafx/scene/DirtyBits;)V
       7: return

  private void computeViewOrderChidrenAndUpdatePeer();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
       6: invokeinterface #63,  1           // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          53
      21: aload_2
      22: invokeinterface #59,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #39                 // class javafx/scene/Node
      30: astore_3
      31: aload_3
      32: invokevirtual #64                 // Method javafx/scene/Node.getViewOrder:()D
      35: dstore        4
      37: iload_1
      38: ifne          50
      41: dload         4
      43: dconst_0
      44: dcmpl
      45: ifeq          50
      48: iconst_1
      49: istore_1
      50: goto          12
      53: aload_0
      54: getfield      #11                 // Field viewOrderChildren:Ljava/util/List;
      57: invokeinterface #46,  1           // InterfaceMethod java/util/List.clear:()V
      62: iload_1
      63: ifeq          92
      66: aload_0
      67: getfield      #11                 // Field viewOrderChildren:Ljava/util/List;
      70: aload_0
      71: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      74: invokeinterface #65,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      79: pop
      80: aload_0
      81: getfield      #11                 // Field viewOrderChildren:Ljava/util/List;
      84: invokedynamic #66,  0             // InvokeDynamic #5:compare:()Ljava/util/Comparator;
      89: invokestatic  #67                 // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      92: aload_0
      93: invokevirtual #25                 // Method getPeer:()Lcom/sun/javafx/sg/prism/NGNode;
      96: checkcast     #26                 // class com/sun/javafx/sg/prism/NGGroup
      99: astore_2
     100: aload_2
     101: aload_0
     102: getfield      #11                 // Field viewOrderChildren:Ljava/util/List;
     105: invokevirtual #68                 // Method com/sun/javafx/sg/prism/NGGroup.setViewOrderChildren:(Ljava/util/List;)V
     108: return

  private java.util.List<javafx.scene.Node> getOrderedChildren();
    Code:
       0: aload_0
       1: getfield      #11                 // Field viewOrderChildren:Ljava/util/List;
       4: invokeinterface #43,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifne          17
      12: aload_0
      13: getfield      #11                 // Field viewOrderChildren:Ljava/util/List;
      16: areturn
      17: aload_0
      18: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      21: areturn

  protected javafx.collections.ObservableList<javafx.scene.Node> getChildren();
    Code:
       0: aload_0
       1: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
       4: areturn

  public javafx.collections.ObservableList<javafx.scene.Node> getChildrenUnmodifiable();
    Code:
       0: aload_0
       1: getfield      #69                 // Field unmodifiableChildren:Ljavafx/collections/ObservableList;
       4: areturn

  protected <E extends javafx.scene.Node> java.util.List<E> getManagedChildren();
    Code:
       0: aload_0
       1: getfield      #15                 // Field unmodifiableManagedChildren:Ljava/util/List;
       4: ifnonnull     73
       7: aload_0
       8: new           #70                 // class java/util/ArrayList
      11: dup
      12: invokespecial #71                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #15                 // Field unmodifiableManagedChildren:Ljava/util/List;
      18: iconst_0
      19: istore_1
      20: aload_0
      21: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      24: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      29: istore_2
      30: iload_1
      31: iload_2
      32: if_icmpge     73
      35: aload_0
      36: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      39: iload_1
      40: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      45: checkcast     #39                 // class javafx/scene/Node
      48: astore_3
      49: aload_3
      50: invokevirtual #72                 // Method javafx/scene/Node.isManaged:()Z
      53: ifeq          67
      56: aload_0
      57: getfield      #15                 // Field unmodifiableManagedChildren:Ljava/util/List;
      60: aload_3
      61: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      66: pop
      67: iinc          1, 1
      70: goto          30
      73: aload_0
      74: getfield      #15                 // Field unmodifiableManagedChildren:Ljava/util/List;
      77: areturn

  final void managedChildChanged();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method requestLayout:()V
       4: aload_0
       5: aconst_null
       6: putfield      #15                 // Field unmodifiableManagedChildren:Ljava/util/List;
       9: return

  final void toFront(javafx.scene.Node);
    Code:
       0: invokestatic  #27                 // Method com/sun/javafx/util/Utils.assertionEnabled:()Z
       3: ifeq          29
       6: aload_0
       7: getfield      #4                  // Field childSet:Ljava/util/Set;
      10: aload_1
      11: invokeinterface #75,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      16: ifne          29
      19: new           #54                 // class java/lang/AssertionError
      22: dup
      23: ldc           #76                 // String specified node is not in the list of children
      25: invokespecial #56                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      28: athrow
      29: aload_0
      30: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      33: aload_0
      34: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      37: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      42: iconst_1
      43: isub
      44: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      49: aload_1
      50: if_acmpeq     96
      53: aload_0
      54: iconst_1
      55: putfield      #5                  // Field childrenTriggerPermutation:Z
      58: aload_0
      59: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      62: aload_1
      63: invokeinterface #77,  2           // InterfaceMethod javafx/collections/ObservableList.remove:(Ljava/lang/Object;)Z
      68: pop
      69: aload_0
      70: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      73: aload_1
      74: invokeinterface #78,  2           // InterfaceMethod javafx/collections/ObservableList.add:(Ljava/lang/Object;)Z
      79: pop
      80: aload_0
      81: iconst_0
      82: putfield      #5                  // Field childrenTriggerPermutation:Z
      85: goto          96
      88: astore_2
      89: aload_0
      90: iconst_0
      91: putfield      #5                  // Field childrenTriggerPermutation:Z
      94: aload_2
      95: athrow
      96: return
    Exception table:
       from    to  target type
          58    80    88   any

  final void toBack(javafx.scene.Node);
    Code:
       0: invokestatic  #27                 // Method com/sun/javafx/util/Utils.assertionEnabled:()Z
       3: ifeq          29
       6: aload_0
       7: getfield      #4                  // Field childSet:Ljava/util/Set;
      10: aload_1
      11: invokeinterface #75,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      16: ifne          29
      19: new           #54                 // class java/lang/AssertionError
      22: dup
      23: ldc           #76                 // String specified node is not in the list of children
      25: invokespecial #56                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      28: athrow
      29: aload_0
      30: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      33: iconst_0
      34: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      39: aload_1
      40: if_acmpeq     86
      43: aload_0
      44: iconst_1
      45: putfield      #5                  // Field childrenTriggerPermutation:Z
      48: aload_0
      49: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      52: aload_1
      53: invokeinterface #77,  2           // InterfaceMethod javafx/collections/ObservableList.remove:(Ljava/lang/Object;)Z
      58: pop
      59: aload_0
      60: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      63: iconst_0
      64: aload_1
      65: invokeinterface #79,  3           // InterfaceMethod javafx/collections/ObservableList.add:(ILjava/lang/Object;)V
      70: aload_0
      71: iconst_0
      72: putfield      #5                  // Field childrenTriggerPermutation:Z
      75: goto          86
      78: astore_2
      79: aload_0
      80: iconst_0
      81: putfield      #5                  // Field childrenTriggerPermutation:Z
      84: aload_2
      85: athrow
      86: return
    Exception table:
       from    to  target type
          48    70    78   any

  void scenesChanged(javafx.scene.Scene, javafx.scene.SubScene, javafx.scene.Scene, javafx.scene.SubScene);
    Code:
       0: aload_3
       1: ifnull        31
       4: aload_1
       5: ifnonnull     31
       8: invokestatic  #80                 // Method com/sun/javafx/css/StyleManager.getInstance:()Lcom/sun/javafx/css/StyleManager;
      11: aload_0
      12: invokevirtual #81                 // Method com/sun/javafx/css/StyleManager.forget:(Ljavafx/scene/Parent;)V
      15: aload_0
      16: getfield      #3                  // Field removed:Ljava/util/List;
      19: ifnull        31
      22: aload_0
      23: getfield      #3                  // Field removed:Ljava/util/List;
      26: invokeinterface #46,  1           // InterfaceMethod java/util/List.clear:()V
      31: iconst_0
      32: istore        5
      34: iload         5
      36: aload_0
      37: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      40: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      45: if_icmpge     73
      48: aload_0
      49: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      52: iload         5
      54: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      59: checkcast     #39                 // class javafx/scene/Node
      62: aload_1
      63: aload_2
      64: invokevirtual #82                 // Method javafx/scene/Node.setScenes:(Ljavafx/scene/Scene;Ljavafx/scene/SubScene;)V
      67: iinc          5, 1
      70: goto          34
      73: aload_0
      74: getfield      #83                 // Field layoutFlag:Lcom/sun/javafx/scene/LayoutFlags;
      77: getstatic     #84                 // Field com/sun/javafx/scene/LayoutFlags.CLEAN:Lcom/sun/javafx/scene/LayoutFlags;
      80: if_acmpeq     87
      83: iconst_1
      84: goto          88
      87: iconst_0
      88: istore        5
      90: aload_0
      91: aload_2
      92: ifnull        103
      95: aload_2
      96: invokevirtual #85                 // Method javafx/scene/SubScene.getRoot:()Ljavafx/scene/Parent;
      99: aload_0
     100: if_acmpeq     115
     103: aload_1
     104: ifnull        119
     107: aload_1
     108: invokevirtual #86                 // Method javafx/scene/Scene.getRoot:()Ljavafx/scene/Parent;
     111: aload_0
     112: if_acmpne     119
     115: iconst_1
     116: goto          120
     119: iconst_0
     120: putfield      #87                 // Field sceneRoot:Z
     123: aload_0
     124: aload_0
     125: invokevirtual #88                 // Method isManaged:()Z
     128: ifeq          138
     131: aload_0
     132: getfield      #87                 // Field sceneRoot:Z
     135: ifeq          142
     138: iconst_1
     139: goto          143
     142: iconst_0
     143: putfield      #89                 // Field layoutRoot:Z
     146: iload         5
     148: ifeq          171
     151: aload_1
     152: ifnull        171
     155: aload_0
     156: getfield      #89                 // Field layoutRoot:Z
     159: ifeq          171
     162: aload_2
     163: ifnull        171
     166: aload_2
     167: aload_0
     168: invokevirtual #90                 // Method javafx/scene/SubScene.setDirtyLayout:(Ljavafx/scene/Parent;)V
     171: return

  void setDerivedDepthTest(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #91                 // Method javafx/scene/Node.setDerivedDepthTest:(Z)V
       5: iconst_0
       6: istore_2
       7: aload_0
       8: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      11: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      16: istore_3
      17: iload_2
      18: iload_3
      19: if_icmpge     48
      22: aload_0
      23: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      26: iload_2
      27: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      32: checkcast     #39                 // class javafx/scene/Node
      35: astore        4
      37: aload         4
      39: invokevirtual #92                 // Method javafx/scene/Node.computeDerivedDepthTest:()V
      42: iinc          2, 1
      45: goto          17
      48: return

  boolean pickChildrenNode(com.sun.javafx.geom.PickRay, com.sun.javafx.scene.input.PickResultChooser);
    Code:
       0: aload_0
       1: invokespecial #93                 // Method getOrderedChildren:()Ljava/util/List;
       4: astore_3
       5: aload_3
       6: invokeinterface #29,  1           // InterfaceMethod java/util/List.size:()I
      11: iconst_1
      12: isub
      13: istore        4
      15: iload         4
      17: iflt          51
      20: aload_3
      21: iload         4
      23: invokeinterface #44,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      28: checkcast     #39                 // class javafx/scene/Node
      31: aload_1
      32: aload_2
      33: invokevirtual #94                 // Method javafx/scene/Node.pickNode:(Lcom/sun/javafx/geom/PickRay;Lcom/sun/javafx/scene/input/PickResultChooser;)V
      36: aload_2
      37: invokevirtual #95                 // Method com/sun/javafx/scene/input/PickResultChooser.isClosed:()Z
      40: ifeq          45
      43: iconst_0
      44: ireturn
      45: iinc          4, -1
      48: goto          15
      51: iconst_1
      52: ireturn

  private void doPickNodeLocal(com.sun.javafx.geom.PickRay, com.sun.javafx.scene.input.PickResultChooser);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #96                 // Method intersectsBounds:(Lcom/sun/javafx/geom/PickRay;)D
       5: dstore_3
       6: dload_3
       7: invokestatic  #97                 // Method java/lang/Double.isNaN:(D)Z
      10: ifne          41
      13: aload_0
      14: aload_1
      15: aload_2
      16: invokevirtual #98                 // Method pickChildrenNode:(Lcom/sun/javafx/geom/PickRay;Lcom/sun/javafx/scene/input/PickResultChooser;)Z
      19: ifeq          41
      22: aload_0
      23: invokevirtual #99                 // Method isPickOnBounds:()Z
      26: ifeq          41
      29: aload_2
      30: aload_0
      31: dload_3
      32: aload_1
      33: dload_3
      34: invokestatic  #100                // Method com/sun/javafx/scene/input/PickResultChooser.computePoint:(Lcom/sun/javafx/geom/PickRay;D)Ljavafx/geometry/Point3D;
      37: invokevirtual #101                // Method com/sun/javafx/scene/input/PickResultChooser.offer:(Ljavafx/scene/Node;DLjavafx/geometry/Point3D;)Z
      40: pop
      41: return

  boolean isConnected();
    Code:
       0: aload_0
       1: invokespecial #102                // Method javafx/scene/Node.isConnected:()Z
       4: ifne          14
       7: aload_0
       8: getfield      #87                 // Field sceneRoot:Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public javafx.scene.Node lookup(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #103                // Method javafx/scene/Node.lookup:(Ljava/lang/String;)Ljavafx/scene/Node;
       5: astore_2
       6: aload_2
       7: ifnonnull     63
      10: iconst_0
      11: istore_3
      12: aload_0
      13: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      16: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      21: istore        4
      23: iload_3
      24: iload         4
      26: if_icmpge     63
      29: aload_0
      30: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      33: iload_3
      34: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      39: checkcast     #39                 // class javafx/scene/Node
      42: astore        5
      44: aload         5
      46: aload_1
      47: invokevirtual #103                // Method javafx/scene/Node.lookup:(Ljava/lang/String;)Ljavafx/scene/Node;
      50: astore_2
      51: aload_2
      52: ifnull        57
      55: aload_2
      56: areturn
      57: iinc          3, 1
      60: goto          23
      63: aload_2
      64: areturn

  java.util.List<javafx.scene.Node> lookupAll(javafx.css.Selector, java.util.List<javafx.scene.Node>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #104                // Method javafx/scene/Node.lookupAll:(Ljavafx/css/Selector;Ljava/util/List;)Ljava/util/List;
       6: astore_2
       7: iconst_0
       8: istore_3
       9: aload_0
      10: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      13: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      18: istore        4
      20: iload_3
      21: iload         4
      23: if_icmpge     55
      26: aload_0
      27: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      30: iload_3
      31: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      36: checkcast     #39                 // class javafx/scene/Node
      39: astore        5
      41: aload         5
      43: aload_1
      44: aload_2
      45: invokevirtual #104                // Method javafx/scene/Node.lookupAll:(Ljavafx/css/Selector;Ljava/util/List;)Ljava/util/List;
      48: astore_2
      49: iinc          3, 1
      52: goto          20
      55: aload_2
      56: areturn

  private final void setTraversalEngine(com.sun.javafx.scene.traversal.ParentTraversalEngine);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #105                // Field traversalEngine:Lcom/sun/javafx/scene/traversal/ParentTraversalEngine;
       5: return

  private final com.sun.javafx.scene.traversal.ParentTraversalEngine getTraversalEngine();
    Code:
       0: aload_0
       1: getfield      #105                // Field traversalEngine:Lcom/sun/javafx/scene/traversal/ParentTraversalEngine;
       4: areturn

  protected final void setNeedsLayout(boolean);
    Code:
       0: iload_1
       1: ifeq          13
       4: aload_0
       5: iconst_1
       6: iconst_0
       7: invokespecial #106                // Method markDirtyLayout:(ZZ)V
      10: goto          109
      13: aload_0
      14: getfield      #83                 // Field layoutFlag:Lcom/sun/javafx/scene/LayoutFlags;
      17: getstatic     #107                // Field com/sun/javafx/scene/LayoutFlags.NEEDS_LAYOUT:Lcom/sun/javafx/scene/LayoutFlags;
      20: if_acmpne     109
      23: iconst_0
      24: istore_2
      25: iconst_0
      26: istore_3
      27: aload_0
      28: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      31: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      36: istore        4
      38: iload_3
      39: iload         4
      41: if_icmpge     92
      44: aload_0
      45: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      48: iload_3
      49: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      54: checkcast     #39                 // class javafx/scene/Node
      57: astore        5
      59: aload         5
      61: instanceof    #108                // class javafx/scene/Parent
      64: ifeq          86
      67: aload         5
      69: checkcast     #108                // class javafx/scene/Parent
      72: getfield      #83                 // Field layoutFlag:Lcom/sun/javafx/scene/LayoutFlags;
      75: getstatic     #84                 // Field com/sun/javafx/scene/LayoutFlags.CLEAN:Lcom/sun/javafx/scene/LayoutFlags;
      78: if_acmpeq     86
      81: iconst_1
      82: istore_2
      83: goto          92
      86: iinc          3, 1
      89: goto          38
      92: aload_0
      93: iload_2
      94: ifeq          103
      97: getstatic     #109                // Field com/sun/javafx/scene/LayoutFlags.DIRTY_BRANCH:Lcom/sun/javafx/scene/LayoutFlags;
     100: goto          106
     103: getstatic     #84                 // Field com/sun/javafx/scene/LayoutFlags.CLEAN:Lcom/sun/javafx/scene/LayoutFlags;
     106: invokevirtual #110                // Method setLayoutFlag:(Lcom/sun/javafx/scene/LayoutFlags;)V
     109: return

  public final boolean isNeedsLayout();
    Code:
       0: aload_0
       1: getfield      #83                 // Field layoutFlag:Lcom/sun/javafx/scene/LayoutFlags;
       4: getstatic     #107                // Field com/sun/javafx/scene/LayoutFlags.NEEDS_LAYOUT:Lcom/sun/javafx/scene/LayoutFlags;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public final javafx.beans.property.ReadOnlyBooleanProperty needsLayoutProperty();
    Code:
       0: aload_0
       1: getfield      #111                // Field needsLayout:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: ifnonnull     36
       7: aload_0
       8: new           #112                // class javafx/beans/property/ReadOnlyBooleanWrapper
      11: dup
      12: aload_0
      13: ldc           #113                // String needsLayout
      15: aload_0
      16: getfield      #83                 // Field layoutFlag:Lcom/sun/javafx/scene/LayoutFlags;
      19: getstatic     #107                // Field com/sun/javafx/scene/LayoutFlags.NEEDS_LAYOUT:Lcom/sun/javafx/scene/LayoutFlags;
      22: if_acmpne     29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: invokespecial #114                // Method javafx/beans/property/ReadOnlyBooleanWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;Z)V
      33: putfield      #111                // Field needsLayout:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      36: aload_0
      37: getfield      #111                // Field needsLayout:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      40: areturn

  boolean isPerformingLayout();
    Code:
       0: aload_0
       1: getfield      #115                // Field performingLayout:Z
       4: ireturn

  void setLayoutFlag(com.sun.javafx.scene.LayoutFlags);
    Code:
       0: aload_0
       1: getfield      #111                // Field needsLayout:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: ifnull        26
       7: aload_0
       8: getfield      #111                // Field needsLayout:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      11: aload_1
      12: getstatic     #107                // Field com/sun/javafx/scene/LayoutFlags.NEEDS_LAYOUT:Lcom/sun/javafx/scene/LayoutFlags;
      15: if_acmpne     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: invokevirtual #116                // Method javafx/beans/property/ReadOnlyBooleanWrapper.set:(Z)V
      26: aload_0
      27: aload_1
      28: putfield      #83                 // Field layoutFlag:Lcom/sun/javafx/scene/LayoutFlags;
      31: return

  private void markDirtyLayout(boolean, boolean);
    Code:
       0: aload_0
       1: getstatic     #107                // Field com/sun/javafx/scene/LayoutFlags.NEEDS_LAYOUT:Lcom/sun/javafx/scene/LayoutFlags;
       4: invokevirtual #110                // Method setLayoutFlag:(Lcom/sun/javafx/scene/LayoutFlags;)V
       7: iload_1
       8: ifne          18
      11: aload_0
      12: getfield      #89                 // Field layoutRoot:Z
      15: ifeq          56
      18: aload_0
      19: getfield      #87                 // Field sceneRoot:Z
      22: ifeq          49
      25: invokestatic  #117                // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      28: invokevirtual #118                // Method com/sun/javafx/tk/Toolkit.requestNextPulse:()V
      31: aload_0
      32: invokevirtual #119                // Method getSubScene:()Ljavafx/scene/SubScene;
      35: ifnull        61
      38: aload_0
      39: invokevirtual #119                // Method getSubScene:()Ljavafx/scene/SubScene;
      42: aload_0
      43: invokevirtual #90                 // Method javafx/scene/SubScene.setDirtyLayout:(Ljavafx/scene/Parent;)V
      46: goto          61
      49: aload_0
      50: invokevirtual #120                // Method markDirtyLayoutBranch:()V
      53: goto          61
      56: aload_0
      57: iload_2
      58: invokevirtual #121                // Method requestParentLayout:(Z)V
      61: return

  public void requestLayout();
    Code:
       0: aload_0
       1: invokevirtual #122                // Method clearSizeCache:()V
       4: aload_0
       5: iconst_0
       6: aload_0
       7: getfield      #123                // Field forceParentLayout:Z
      10: invokespecial #106                // Method markDirtyLayout:(ZZ)V
      13: return

  void requestLayout(boolean);
    Code:
       0: aload_0
       1: getfield      #123                // Field forceParentLayout:Z
       4: istore_2
       5: aload_0
       6: iload_1
       7: putfield      #123                // Field forceParentLayout:Z
      10: aload_0
      11: invokevirtual #74                 // Method requestLayout:()V
      14: aload_0
      15: iload_2
      16: putfield      #123                // Field forceParentLayout:Z
      19: return

  protected final void requestParentLayout();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #121                // Method requestParentLayout:(Z)V
       5: return

  void requestParentLayout(boolean);
    Code:
       0: aload_0
       1: getfield      #89                 // Field layoutRoot:Z
       4: ifne          31
       7: aload_0
       8: invokevirtual #124                // Method getParent:()Ljavafx/scene/Parent;
      11: astore_2
      12: aload_2
      13: ifnull        31
      16: aload_2
      17: getfield      #115                // Field performingLayout:Z
      20: ifeq          27
      23: iload_1
      24: ifeq          31
      27: aload_2
      28: invokevirtual #74                 // Method requestLayout:()V
      31: return

  void clearSizeCache();
    Code:
       0: aload_0
       1: getfield      #125                // Field sizeCacheClear:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #125                // Field sizeCacheClear:Z
      13: aload_0
      14: ldc2_w        #126                // double -1.0d
      17: putfield      #128                // Field prefWidthCache:D
      20: aload_0
      21: ldc2_w        #126                // double -1.0d
      24: putfield      #129                // Field prefHeightCache:D
      27: aload_0
      28: ldc2_w        #126                // double -1.0d
      31: putfield      #130                // Field minWidthCache:D
      34: aload_0
      35: ldc2_w        #126                // double -1.0d
      38: putfield      #131                // Field minHeightCache:D
      41: return

  public double prefWidth(double);
    Code:
       0: dload_1
       1: ldc2_w        #126                // double -1.0d
       4: dcmpl
       5: ifne          64
       8: aload_0
       9: getfield      #128                // Field prefWidthCache:D
      12: ldc2_w        #126                // double -1.0d
      15: dcmpl
      16: ifne          59
      19: aload_0
      20: aload_0
      21: ldc2_w        #126                // double -1.0d
      24: invokevirtual #132                // Method computePrefWidth:(D)D
      27: putfield      #128                // Field prefWidthCache:D
      30: aload_0
      31: getfield      #128                // Field prefWidthCache:D
      34: invokestatic  #97                 // Method java/lang/Double.isNaN:(D)Z
      37: ifne          49
      40: aload_0
      41: getfield      #128                // Field prefWidthCache:D
      44: dconst_0
      45: dcmpg
      46: ifge          54
      49: aload_0
      50: dconst_0
      51: putfield      #128                // Field prefWidthCache:D
      54: aload_0
      55: iconst_0
      56: putfield      #125                // Field sizeCacheClear:Z
      59: aload_0
      60: getfield      #128                // Field prefWidthCache:D
      63: dreturn
      64: aload_0
      65: dload_1
      66: invokevirtual #132                // Method computePrefWidth:(D)D
      69: dstore_3
      70: dload_3
      71: invokestatic  #97                 // Method java/lang/Double.isNaN:(D)Z
      74: ifne          83
      77: dload_3
      78: dconst_0
      79: dcmpg
      80: ifge          87
      83: dconst_0
      84: goto          88
      87: dload_3
      88: dreturn

  public double prefHeight(double);
    Code:
       0: dload_1
       1: ldc2_w        #126                // double -1.0d
       4: dcmpl
       5: ifne          64
       8: aload_0
       9: getfield      #129                // Field prefHeightCache:D
      12: ldc2_w        #126                // double -1.0d
      15: dcmpl
      16: ifne          59
      19: aload_0
      20: aload_0
      21: ldc2_w        #126                // double -1.0d
      24: invokevirtual #133                // Method computePrefHeight:(D)D
      27: putfield      #129                // Field prefHeightCache:D
      30: aload_0
      31: getfield      #129                // Field prefHeightCache:D
      34: invokestatic  #97                 // Method java/lang/Double.isNaN:(D)Z
      37: ifne          49
      40: aload_0
      41: getfield      #129                // Field prefHeightCache:D
      44: dconst_0
      45: dcmpg
      46: ifge          54
      49: aload_0
      50: dconst_0
      51: putfield      #129                // Field prefHeightCache:D
      54: aload_0
      55: iconst_0
      56: putfield      #125                // Field sizeCacheClear:Z
      59: aload_0
      60: getfield      #129                // Field prefHeightCache:D
      63: dreturn
      64: aload_0
      65: dload_1
      66: invokevirtual #133                // Method computePrefHeight:(D)D
      69: dstore_3
      70: dload_3
      71: invokestatic  #97                 // Method java/lang/Double.isNaN:(D)Z
      74: ifne          83
      77: dload_3
      78: dconst_0
      79: dcmpg
      80: ifge          87
      83: dconst_0
      84: goto          88
      87: dload_3
      88: dreturn

  public double minWidth(double);
    Code:
       0: dload_1
       1: ldc2_w        #126                // double -1.0d
       4: dcmpl
       5: ifne          64
       8: aload_0
       9: getfield      #130                // Field minWidthCache:D
      12: ldc2_w        #126                // double -1.0d
      15: dcmpl
      16: ifne          59
      19: aload_0
      20: aload_0
      21: ldc2_w        #126                // double -1.0d
      24: invokevirtual #134                // Method computeMinWidth:(D)D
      27: putfield      #130                // Field minWidthCache:D
      30: aload_0
      31: getfield      #130                // Field minWidthCache:D
      34: invokestatic  #97                 // Method java/lang/Double.isNaN:(D)Z
      37: ifne          49
      40: aload_0
      41: getfield      #130                // Field minWidthCache:D
      44: dconst_0
      45: dcmpg
      46: ifge          54
      49: aload_0
      50: dconst_0
      51: putfield      #130                // Field minWidthCache:D
      54: aload_0
      55: iconst_0
      56: putfield      #125                // Field sizeCacheClear:Z
      59: aload_0
      60: getfield      #130                // Field minWidthCache:D
      63: dreturn
      64: aload_0
      65: dload_1
      66: invokevirtual #134                // Method computeMinWidth:(D)D
      69: dstore_3
      70: dload_3
      71: invokestatic  #97                 // Method java/lang/Double.isNaN:(D)Z
      74: ifne          83
      77: dload_3
      78: dconst_0
      79: dcmpg
      80: ifge          87
      83: dconst_0
      84: goto          88
      87: dload_3
      88: dreturn

  public double minHeight(double);
    Code:
       0: dload_1
       1: ldc2_w        #126                // double -1.0d
       4: dcmpl
       5: ifne          64
       8: aload_0
       9: getfield      #131                // Field minHeightCache:D
      12: ldc2_w        #126                // double -1.0d
      15: dcmpl
      16: ifne          59
      19: aload_0
      20: aload_0
      21: ldc2_w        #126                // double -1.0d
      24: invokevirtual #135                // Method computeMinHeight:(D)D
      27: putfield      #131                // Field minHeightCache:D
      30: aload_0
      31: getfield      #131                // Field minHeightCache:D
      34: invokestatic  #97                 // Method java/lang/Double.isNaN:(D)Z
      37: ifne          49
      40: aload_0
      41: getfield      #131                // Field minHeightCache:D
      44: dconst_0
      45: dcmpg
      46: ifge          54
      49: aload_0
      50: dconst_0
      51: putfield      #131                // Field minHeightCache:D
      54: aload_0
      55: iconst_0
      56: putfield      #125                // Field sizeCacheClear:Z
      59: aload_0
      60: getfield      #131                // Field minHeightCache:D
      63: dreturn
      64: aload_0
      65: dload_1
      66: invokevirtual #135                // Method computeMinHeight:(D)D
      69: dstore_3
      70: dload_3
      71: invokestatic  #97                 // Method java/lang/Double.isNaN:(D)Z
      74: ifne          83
      77: dload_3
      78: dconst_0
      79: dcmpg
      80: ifge          87
      83: dconst_0
      84: goto          88
      87: dload_3
      88: dreturn

  protected double computePrefWidth(double);
    Code:
       0: dconst_0
       1: dstore_3
       2: dconst_0
       3: dstore        5
       5: iconst_0
       6: istore        7
       8: aload_0
       9: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      12: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      17: istore        8
      19: iload         7
      21: iload         8
      23: if_icmpge     117
      26: aload_0
      27: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      30: iload         7
      32: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      37: checkcast     #39                 // class javafx/scene/Node
      40: astore        9
      42: aload         9
      44: invokevirtual #72                 // Method javafx/scene/Node.isManaged:()Z
      47: ifeq          111
      50: aload         9
      52: invokevirtual #136                // Method javafx/scene/Node.getLayoutBounds:()Ljavafx/geometry/Bounds;
      55: invokevirtual #137                // Method javafx/geometry/Bounds.getMinX:()D
      58: aload         9
      60: invokevirtual #138                // Method javafx/scene/Node.getLayoutX:()D
      63: dadd
      64: dstore        10
      66: dload_3
      67: dload         10
      69: invokestatic  #139                // Method java/lang/Math.min:(DD)D
      72: dstore_3
      73: dload         5
      75: dload         10
      77: aload_0
      78: aload         9
      80: ldc2_w        #126                // double -1.0d
      83: invokevirtual #140                // Method javafx/scene/Node.prefWidth:(D)D
      86: aload         9
      88: ldc2_w        #126                // double -1.0d
      91: invokevirtual #141                // Method javafx/scene/Node.minWidth:(D)D
      94: aload         9
      96: ldc2_w        #126                // double -1.0d
      99: invokevirtual #142                // Method javafx/scene/Node.maxWidth:(D)D
     102: invokevirtual #143                // Method boundedSize:(DDD)D
     105: dadd
     106: invokestatic  #144                // Method java/lang/Math.max:(DD)D
     109: dstore        5
     111: iinc          7, 1
     114: goto          19
     117: dload         5
     119: dload_3
     120: dsub
     121: dreturn

  protected double computePrefHeight(double);
    Code:
       0: dconst_0
       1: dstore_3
       2: dconst_0
       3: dstore        5
       5: iconst_0
       6: istore        7
       8: aload_0
       9: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      12: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      17: istore        8
      19: iload         7
      21: iload         8
      23: if_icmpge     117
      26: aload_0
      27: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      30: iload         7
      32: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      37: checkcast     #39                 // class javafx/scene/Node
      40: astore        9
      42: aload         9
      44: invokevirtual #72                 // Method javafx/scene/Node.isManaged:()Z
      47: ifeq          111
      50: aload         9
      52: invokevirtual #136                // Method javafx/scene/Node.getLayoutBounds:()Ljavafx/geometry/Bounds;
      55: invokevirtual #145                // Method javafx/geometry/Bounds.getMinY:()D
      58: aload         9
      60: invokevirtual #146                // Method javafx/scene/Node.getLayoutY:()D
      63: dadd
      64: dstore        10
      66: dload_3
      67: dload         10
      69: invokestatic  #139                // Method java/lang/Math.min:(DD)D
      72: dstore_3
      73: dload         5
      75: dload         10
      77: aload_0
      78: aload         9
      80: ldc2_w        #126                // double -1.0d
      83: invokevirtual #147                // Method javafx/scene/Node.prefHeight:(D)D
      86: aload         9
      88: ldc2_w        #126                // double -1.0d
      91: invokevirtual #148                // Method javafx/scene/Node.minHeight:(D)D
      94: aload         9
      96: ldc2_w        #126                // double -1.0d
      99: invokevirtual #149                // Method javafx/scene/Node.maxHeight:(D)D
     102: invokevirtual #143                // Method boundedSize:(DDD)D
     105: dadd
     106: invokestatic  #144                // Method java/lang/Math.max:(DD)D
     109: dstore        5
     111: iinc          7, 1
     114: goto          19
     117: dload         5
     119: dload_3
     120: dsub
     121: dreturn

  protected double computeMinWidth(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #150                // Method prefWidth:(D)D
       5: dreturn

  protected double computeMinHeight(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #151                // Method prefHeight:(D)D
       5: dreturn

  public double getBaselineOffset();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
       6: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      11: istore_2
      12: iload_1
      13: iload_2
      14: if_icmpge     78
      17: aload_0
      18: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      21: iload_1
      22: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      27: checkcast     #39                 // class javafx/scene/Node
      30: astore_3
      31: aload_3
      32: invokevirtual #72                 // Method javafx/scene/Node.isManaged:()Z
      35: ifeq          72
      38: aload_3
      39: invokevirtual #152                // Method javafx/scene/Node.getBaselineOffset:()D
      42: dstore        4
      44: dload         4
      46: ldc2_w        #153                // double -Infinityd
      49: dcmpl
      50: ifne          56
      53: goto          72
      56: aload_3
      57: invokevirtual #136                // Method javafx/scene/Node.getLayoutBounds:()Ljavafx/geometry/Bounds;
      60: invokevirtual #145                // Method javafx/geometry/Bounds.getMinY:()D
      63: aload_3
      64: invokevirtual #146                // Method javafx/scene/Node.getLayoutY:()D
      67: dadd
      68: dload         4
      70: dadd
      71: dreturn
      72: iinc          1, 1
      75: goto          12
      78: aload_0
      79: invokespecial #152                // Method javafx/scene/Node.getBaselineOffset:()D
      82: dreturn

  boolean isCurrentLayoutChild(javafx.scene.Node);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #155                // Field currentLayoutChild:Ljavafx/scene/Node;
       5: if_acmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public final void layout();
    Code:
       0: aload_0
       1: getfield      #83                 // Field layoutFlag:Lcom/sun/javafx/scene/LayoutFlags;
       4: astore_1
       5: aload_0
       6: getstatic     #84                 // Field com/sun/javafx/scene/LayoutFlags.CLEAN:Lcom/sun/javafx/scene/LayoutFlags;
       9: invokevirtual #110                // Method setLayoutFlag:(Lcom/sun/javafx/scene/LayoutFlags;)V
      12: getstatic     #156                // Field javafx/scene/Parent$5.$SwitchMap$com$sun$javafx$scene$LayoutFlags:[I
      15: aload_1
      16: invokevirtual #157                // Method com/sun/javafx/scene/LayoutFlags.ordinal:()I
      19: iaload
      20: tableswitch   { // 1 to 3
                     1: 48
                     2: 51
                     3: 70
               default: 159
          }
      48: goto          159
      51: aload_0
      52: getfield      #115                // Field performingLayout:Z
      55: ifeq          61
      58: goto          159
      61: aload_0
      62: iconst_1
      63: putfield      #115                // Field performingLayout:Z
      66: aload_0
      67: invokevirtual #158                // Method layoutChildren:()V
      70: iconst_0
      71: istore_2
      72: aload_0
      73: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      76: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      81: istore_3
      82: iload_2
      83: iload_3
      84: if_icmpge     149
      87: aload_0
      88: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      91: iload_2
      92: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      97: checkcast     #39                 // class javafx/scene/Node
     100: astore        4
     102: aload_0
     103: aload         4
     105: putfield      #155                // Field currentLayoutChild:Ljavafx/scene/Node;
     108: aload         4
     110: instanceof    #108                // class javafx/scene/Parent
     113: ifeq          127
     116: aload         4
     118: checkcast     #108                // class javafx/scene/Parent
     121: invokevirtual #159                // Method layout:()V
     124: goto          143
     127: aload         4
     129: instanceof    #160                // class javafx/scene/SubScene
     132: ifeq          143
     135: aload         4
     137: checkcast     #160                // class javafx/scene/SubScene
     140: invokevirtual #161                // Method javafx/scene/SubScene.layoutPass:()V
     143: iinc          2, 1
     146: goto          82
     149: aload_0
     150: aconst_null
     151: putfield      #155                // Field currentLayoutChild:Ljavafx/scene/Node;
     154: aload_0
     155: iconst_0
     156: putfield      #115                // Field performingLayout:Z
     159: return

  protected void layoutChildren();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
       6: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      11: istore_2
      12: iload_1
      13: iload_2
      14: if_icmpge     60
      17: aload_0
      18: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      21: iload_1
      22: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      27: checkcast     #39                 // class javafx/scene/Node
      30: astore_3
      31: aload_0
      32: aload_3
      33: putfield      #155                // Field currentLayoutChild:Ljavafx/scene/Node;
      36: aload_3
      37: invokevirtual #162                // Method javafx/scene/Node.isResizable:()Z
      40: ifeq          54
      43: aload_3
      44: invokevirtual #72                 // Method javafx/scene/Node.isManaged:()Z
      47: ifeq          54
      50: aload_3
      51: invokevirtual #163                // Method javafx/scene/Node.autosize:()V
      54: iinc          1, 1
      57: goto          12
      60: aload_0
      61: aconst_null
      62: putfield      #155                // Field currentLayoutChild:Ljavafx/scene/Node;
      65: return

  final void notifyManagedChanged();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #88                 // Method isManaged:()Z
       5: ifeq          15
       8: aload_0
       9: getfield      #87                 // Field sceneRoot:Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: putfield      #89                 // Field layoutRoot:Z
      23: return

  final boolean isSceneRoot();
    Code:
       0: aload_0
       1: getfield      #87                 // Field sceneRoot:Z
       4: ireturn

  public final javafx.collections.ObservableList<java.lang.String> getStylesheets();
    Code:
       0: aload_0
       1: getfield      #164                // Field stylesheets:Ljavafx/collections/ObservableList;
       4: areturn

  private java.util.List<java.lang.String> doGetAllParentStylesheets();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokevirtual #124                // Method getParent:()Ljavafx/scene/Parent;
       6: astore_2
       7: aload_2
       8: ifnull        16
      11: aload_2
      12: invokestatic  #165                // Method com/sun/javafx/scene/ParentHelper.getAllParentStylesheets:(Ljavafx/scene/Parent;)Ljava/util/List;
      15: astore_1
      16: aload_0
      17: getfield      #164                // Field stylesheets:Ljavafx/collections/ObservableList;
      20: ifnull        101
      23: aload_0
      24: getfield      #164                // Field stylesheets:Ljavafx/collections/ObservableList;
      27: invokeinterface #166,  1          // InterfaceMethod javafx/collections/ObservableList.isEmpty:()Z
      32: ifne          101
      35: aload_1
      36: ifnonnull     56
      39: new           #70                 // class java/util/ArrayList
      42: dup
      43: aload_0
      44: getfield      #164                // Field stylesheets:Ljavafx/collections/ObservableList;
      47: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      52: invokespecial #167                // Method java/util/ArrayList."<init>":(I)V
      55: astore_1
      56: iconst_0
      57: istore_3
      58: aload_0
      59: getfield      #164                // Field stylesheets:Ljavafx/collections/ObservableList;
      62: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      67: istore        4
      69: iload_3
      70: iload         4
      72: if_icmpge     101
      75: aload_1
      76: aload_0
      77: getfield      #164                // Field stylesheets:Ljavafx/collections/ObservableList;
      80: iload_3
      81: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      86: checkcast     #168                // class java/lang/String
      89: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      94: pop
      95: iinc          3, 1
      98: goto          69
     101: aload_1
     102: areturn

  private void doProcessCSS();
    Code:
       0: aload_0
       1: getfield      #169                // Field cssFlag:Lcom/sun/javafx/scene/CssFlags;
       4: getstatic     #170                // Field com/sun/javafx/scene/CssFlags.CLEAN:Lcom/sun/javafx/scene/CssFlags;
       7: if_acmpne     11
      10: return
      11: aload_0
      12: getfield      #169                // Field cssFlag:Lcom/sun/javafx/scene/CssFlags;
      15: getstatic     #171                // Field com/sun/javafx/scene/CssFlags.DIRTY_BRANCH:Lcom/sun/javafx/scene/CssFlags;
      18: if_acmpne     26
      21: aload_0
      22: invokespecial #172                // Method javafx/scene/Node.processCSS:()V
      25: return
      26: aload_0
      27: invokestatic  #173                // Method com/sun/javafx/scene/ParentHelper.superProcessCSS:(Ljavafx/scene/Node;)V
      30: aload_0
      31: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      34: invokeinterface #166,  1          // InterfaceMethod javafx/collections/ObservableList.isEmpty:()Z
      39: ifeq          43
      42: return
      43: aload_0
      44: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      47: aload_0
      48: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      51: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      56: anewarray     #39                 // class javafx/scene/Node
      59: invokeinterface #174,  2          // InterfaceMethod javafx/collections/ObservableList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      64: checkcast     #175                // class "[Ljavafx/scene/Node;"
      67: astore_1
      68: iconst_0
      69: istore_2
      70: iload_2
      71: aload_1
      72: arraylength
      73: if_icmpge     130
      76: aload_1
      77: iload_2
      78: aaload
      79: astore_3
      80: aload_3
      81: invokevirtual #51                 // Method javafx/scene/Node.getParent:()Ljavafx/scene/Parent;
      84: astore        4
      86: aload         4
      88: ifnull        124
      91: aload         4
      93: aload_0
      94: if_acmpeq     100
      97: goto          124
     100: getstatic     #176                // Field com/sun/javafx/scene/CssFlags.UPDATE:Lcom/sun/javafx/scene/CssFlags;
     103: aload_3
     104: getfield      #177                // Field javafx/scene/Node.cssFlag:Lcom/sun/javafx/scene/CssFlags;
     107: invokevirtual #178                // Method com/sun/javafx/scene/CssFlags.compareTo:(Ljava/lang/Enum;)I
     110: ifle          120
     113: aload_3
     114: getstatic     #176                // Field com/sun/javafx/scene/CssFlags.UPDATE:Lcom/sun/javafx/scene/CssFlags;
     117: putfield      #177                // Field javafx/scene/Node.cssFlag:Lcom/sun/javafx/scene/CssFlags;
     120: aload_3
     121: invokestatic  #179                // Method com/sun/javafx/scene/NodeHelper.processCSS:(Ljavafx/scene/Node;)V
     124: iinc          2, 1
     127: goto          70
     130: return

  protected javafx.scene.Parent();
    Code:
       0: aload_0
       1: invokespecial #180                // Method javafx/scene/Node."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field removedChildrenOptimizationDisabled:Z
       9: aload_0
      10: new           #181                // class java/util/HashSet
      13: dup
      14: invokespecial #182                // Method java/util/HashSet."<init>":()V
      17: putfield      #4                  // Field childSet:Ljava/util/Set;
      20: aload_0
      21: iconst_0
      22: putfield      #6                  // Field startIdx:I
      25: aload_0
      26: iconst_0
      27: putfield      #30                 // Field pgChildrenSize:I
      30: aload_0
      31: new           #70                 // class java/util/ArrayList
      34: dup
      35: iconst_1
      36: invokespecial #167                // Method java/util/ArrayList."<init>":(I)V
      39: putfield      #11                 // Field viewOrderChildren:Ljava/util/List;
      42: aload_0
      43: iconst_0
      44: putfield      #5                  // Field childrenTriggerPermutation:Z
      47: aload_0
      48: new           #183                // class javafx/scene/Parent$3
      51: dup
      52: aload_0
      53: new           #184                // class javafx/scene/Parent$2
      56: dup
      57: aload_0
      58: invokespecial #185                // Method javafx/scene/Parent$2."<init>":(Ljavafx/scene/Parent;)V
      61: invokespecial #186                // Method javafx/scene/Parent$3."<init>":(Ljavafx/scene/Parent;Ljavafx/collections/ObservableList;)V
      64: putfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      67: aload_0
      68: aload_0
      69: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      72: invokestatic  #187                // Method javafx/collections/FXCollections.unmodifiableObservableList:(Ljavafx/collections/ObservableList;)Ljavafx/collections/ObservableList;
      75: putfield      #69                 // Field unmodifiableChildren:Ljavafx/collections/ObservableList;
      78: aload_0
      79: aconst_null
      80: putfield      #15                 // Field unmodifiableManagedChildren:Ljava/util/List;
      83: aload_0
      84: getstatic     #84                 // Field com/sun/javafx/scene/LayoutFlags.CLEAN:Lcom/sun/javafx/scene/LayoutFlags;
      87: putfield      #83                 // Field layoutFlag:Lcom/sun/javafx/scene/LayoutFlags;
      90: aload_0
      91: iconst_0
      92: putfield      #115                // Field performingLayout:Z
      95: aload_0
      96: iconst_1
      97: putfield      #125                // Field sizeCacheClear:Z
     100: aload_0
     101: ldc2_w        #126                // double -1.0d
     104: putfield      #128                // Field prefWidthCache:D
     107: aload_0
     108: ldc2_w        #126                // double -1.0d
     111: putfield      #129                // Field prefHeightCache:D
     114: aload_0
     115: ldc2_w        #126                // double -1.0d
     118: putfield      #130                // Field minWidthCache:D
     121: aload_0
     122: ldc2_w        #126                // double -1.0d
     125: putfield      #131                // Field minHeightCache:D
     128: aload_0
     129: iconst_0
     130: putfield      #123                // Field forceParentLayout:Z
     133: aload_0
     134: aconst_null
     135: putfield      #155                // Field currentLayoutChild:Ljavafx/scene/Node;
     138: aload_0
     139: iconst_0
     140: putfield      #87                 // Field sceneRoot:Z
     143: aload_0
     144: iconst_0
     145: putfield      #89                 // Field layoutRoot:Z
     148: aload_0
     149: new           #188                // class javafx/scene/Parent$4
     152: dup
     153: aload_0
     154: invokespecial #189                // Method javafx/scene/Parent$4."<init>":(Ljavafx/scene/Parent;)V
     157: putfield      #164                // Field stylesheets:Ljavafx/collections/ObservableList;
     160: aload_0
     161: invokestatic  #190                // Method com/sun/javafx/scene/ParentHelper.initHelper:(Ljavafx/scene/Parent;)V
     164: aload_0
     165: new           #191                // class com/sun/javafx/geom/RectBounds
     168: dup
     169: invokespecial #192                // Method com/sun/javafx/geom/RectBounds."<init>":()V
     172: putfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     175: aload_0
     176: new           #191                // class com/sun/javafx/geom/RectBounds
     179: dup
     180: invokespecial #192                // Method com/sun/javafx/geom/RectBounds."<init>":()V
     183: putfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
     186: aload_0
     187: iconst_1
     188: putfield      #195                // Field LEFT_INVALID:I
     191: aload_0
     192: iconst_2
     193: putfield      #196                // Field TOP_INVALID:I
     196: aload_0
     197: iconst_4
     198: putfield      #197                // Field NEAR_INVALID:I
     201: aload_0
     202: bipush        8
     204: putfield      #198                // Field RIGHT_INVALID:I
     207: aload_0
     208: bipush        16
     210: putfield      #199                // Field BOTTOM_INVALID:I
     213: aload_0
     214: bipush        32
     216: putfield      #200                // Field FAR_INVALID:I
     219: aload_0
     220: getstatic     #107                // Field com/sun/javafx/scene/LayoutFlags.NEEDS_LAYOUT:Lcom/sun/javafx/scene/LayoutFlags;
     223: putfield      #83                 // Field layoutFlag:Lcom/sun/javafx/scene/LayoutFlags;
     226: aload_0
     227: getstatic     #201                // Field javafx/scene/AccessibleRole.PARENT:Ljavafx/scene/AccessibleRole;
     230: invokevirtual #202                // Method setAccessibleRole:(Ljavafx/scene/AccessibleRole;)V
     233: return

  private com.sun.javafx.sg.prism.NGNode doCreatePeer();
    Code:
       0: new           #26                 // class com/sun/javafx/sg/prism/NGGroup
       3: dup
       4: invokespecial #203                // Method com/sun/javafx/sg/prism/NGGroup."<init>":()V
       7: areturn

  void nodeResolvedOrientationChanged();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
       6: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      11: istore_2
      12: iload_1
      13: iload_2
      14: if_icmpge     39
      17: aload_0
      18: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      21: iload_1
      22: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      27: checkcast     #39                 // class javafx/scene/Node
      30: invokevirtual #204                // Method javafx/scene/Node.parentResolvedOrientationInvalidated:()V
      33: iinc          1, 1
      36: goto          12
      39: return

  private com.sun.javafx.geom.BaseBounds doComputeGeomBounds(com.sun.javafx.geom.BaseBounds, com.sun.javafx.geom.transform.BaseTransform);
    Code:
       0: aload_0
       1: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
       4: invokeinterface #166,  1          // InterfaceMethod javafx/collections/ObservableList.isEmpty:()Z
       9: ifeq          17
      12: aload_1
      13: invokevirtual #205                // Method com/sun/javafx/geom/BaseBounds.makeEmpty:()Lcom/sun/javafx/geom/BaseBounds;
      16: areturn
      17: aload_2
      18: invokevirtual #206                // Method com/sun/javafx/geom/transform/BaseTransform.isTranslateOrIdentity:()Z
      21: ifeq          169
      24: aload_0
      25: getfield      #207                // Field cachedBoundsInvalid:Z
      28: ifeq          59
      31: aload_0
      32: invokespecial #208                // Method recomputeBounds:()V
      35: aload_0
      36: getfield      #8                  // Field dirtyChildren:Ljava/util/ArrayList;
      39: ifnull        49
      42: aload_0
      43: getfield      #8                  // Field dirtyChildren:Ljava/util/ArrayList;
      46: invokevirtual #209                // Method java/util/ArrayList.clear:()V
      49: aload_0
      50: iconst_0
      51: putfield      #207                // Field cachedBoundsInvalid:Z
      54: aload_0
      55: iconst_0
      56: putfield      #7                  // Field dirtyChildrenCount:I
      59: aload_2
      60: invokevirtual #210                // Method com/sun/javafx/geom/transform/BaseTransform.isIdentity:()Z
      63: ifne          158
      66: aload_1
      67: aload_0
      68: getfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
      71: invokevirtual #211                // Method com/sun/javafx/geom/BaseBounds.getMinX:()F
      74: f2d
      75: aload_2
      76: invokevirtual #212                // Method com/sun/javafx/geom/transform/BaseTransform.getMxt:()D
      79: dadd
      80: d2f
      81: aload_0
      82: getfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
      85: invokevirtual #213                // Method com/sun/javafx/geom/BaseBounds.getMinY:()F
      88: f2d
      89: aload_2
      90: invokevirtual #214                // Method com/sun/javafx/geom/transform/BaseTransform.getMyt:()D
      93: dadd
      94: d2f
      95: aload_0
      96: getfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
      99: invokevirtual #215                // Method com/sun/javafx/geom/BaseBounds.getMinZ:()F
     102: f2d
     103: aload_2
     104: invokevirtual #216                // Method com/sun/javafx/geom/transform/BaseTransform.getMzt:()D
     107: dadd
     108: d2f
     109: aload_0
     110: getfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
     113: invokevirtual #217                // Method com/sun/javafx/geom/BaseBounds.getMaxX:()F
     116: f2d
     117: aload_2
     118: invokevirtual #212                // Method com/sun/javafx/geom/transform/BaseTransform.getMxt:()D
     121: dadd
     122: d2f
     123: aload_0
     124: getfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
     127: invokevirtual #218                // Method com/sun/javafx/geom/BaseBounds.getMaxY:()F
     130: f2d
     131: aload_2
     132: invokevirtual #214                // Method com/sun/javafx/geom/transform/BaseTransform.getMyt:()D
     135: dadd
     136: d2f
     137: aload_0
     138: getfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
     141: invokevirtual #219                // Method com/sun/javafx/geom/BaseBounds.getMaxZ:()F
     144: f2d
     145: aload_2
     146: invokevirtual #216                // Method com/sun/javafx/geom/transform/BaseTransform.getMzt:()D
     149: dadd
     150: d2f
     151: invokevirtual #220                // Method com/sun/javafx/geom/BaseBounds.deriveWithNewBounds:(FFFFFF)Lcom/sun/javafx/geom/BaseBounds;
     154: astore_1
     155: goto          167
     158: aload_1
     159: aload_0
     160: getfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
     163: invokevirtual #221                // Method com/sun/javafx/geom/BaseBounds.deriveWithNewBounds:(Lcom/sun/javafx/geom/BaseBounds;)Lcom/sun/javafx/geom/BaseBounds;
     166: astore_1
     167: aload_1
     168: areturn
     169: ldc2_w        #223                // double 1.7976931348623157E308d
     172: dstore_3
     173: ldc2_w        #223                // double 1.7976931348623157E308d
     176: dstore        5
     178: ldc2_w        #223                // double 1.7976931348623157E308d
     181: dstore        7
     183: ldc2_w        #225                // double 4.9E-324d
     186: dstore        9
     188: ldc2_w        #225                // double 4.9E-324d
     191: dstore        11
     193: ldc2_w        #225                // double 4.9E-324d
     196: dstore        13
     198: iconst_1
     199: istore        15
     201: iconst_0
     202: istore        16
     204: aload_0
     205: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
     208: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
     213: istore        17
     215: iload         16
     217: iload         17
     219: if_icmpge     393
     222: aload_0
     223: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
     226: iload         16
     228: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
     233: checkcast     #39                 // class javafx/scene/Node
     236: astore        18
     238: aload         18
     240: invokevirtual #227                // Method javafx/scene/Node.isVisible:()Z
     243: ifeq          387
     246: aload_0
     247: aload         18
     249: aload_2
     250: aload_1
     251: invokespecial #228                // Method getChildTransformedBounds:(Ljavafx/scene/Node;Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/BaseBounds;)Lcom/sun/javafx/geom/BaseBounds;
     254: astore_1
     255: aload_1
     256: invokevirtual #229                // Method com/sun/javafx/geom/BaseBounds.isEmpty:()Z
     259: ifeq          265
     262: goto          387
     265: iload         15
     267: ifeq          317
     270: aload_1
     271: invokevirtual #211                // Method com/sun/javafx/geom/BaseBounds.getMinX:()F
     274: f2d
     275: dstore_3
     276: aload_1
     277: invokevirtual #213                // Method com/sun/javafx/geom/BaseBounds.getMinY:()F
     280: f2d
     281: dstore        5
     283: aload_1
     284: invokevirtual #215                // Method com/sun/javafx/geom/BaseBounds.getMinZ:()F
     287: f2d
     288: dstore        7
     290: aload_1
     291: invokevirtual #217                // Method com/sun/javafx/geom/BaseBounds.getMaxX:()F
     294: f2d
     295: dstore        9
     297: aload_1
     298: invokevirtual #218                // Method com/sun/javafx/geom/BaseBounds.getMaxY:()F
     301: f2d
     302: dstore        11
     304: aload_1
     305: invokevirtual #219                // Method com/sun/javafx/geom/BaseBounds.getMaxZ:()F
     308: f2d
     309: dstore        13
     311: iconst_0
     312: istore        15
     314: goto          387
     317: aload_1
     318: invokevirtual #211                // Method com/sun/javafx/geom/BaseBounds.getMinX:()F
     321: f2d
     322: dload_3
     323: invokestatic  #139                // Method java/lang/Math.min:(DD)D
     326: dstore_3
     327: aload_1
     328: invokevirtual #213                // Method com/sun/javafx/geom/BaseBounds.getMinY:()F
     331: f2d
     332: dload         5
     334: invokestatic  #139                // Method java/lang/Math.min:(DD)D
     337: dstore        5
     339: aload_1
     340: invokevirtual #215                // Method com/sun/javafx/geom/BaseBounds.getMinZ:()F
     343: f2d
     344: dload         7
     346: invokestatic  #139                // Method java/lang/Math.min:(DD)D
     349: dstore        7
     351: aload_1
     352: invokevirtual #217                // Method com/sun/javafx/geom/BaseBounds.getMaxX:()F
     355: f2d
     356: dload         9
     358: invokestatic  #144                // Method java/lang/Math.max:(DD)D
     361: dstore        9
     363: aload_1
     364: invokevirtual #218                // Method com/sun/javafx/geom/BaseBounds.getMaxY:()F
     367: f2d
     368: dload         11
     370: invokestatic  #144                // Method java/lang/Math.max:(DD)D
     373: dstore        11
     375: aload_1
     376: invokevirtual #219                // Method com/sun/javafx/geom/BaseBounds.getMaxZ:()F
     379: f2d
     380: dload         13
     382: invokestatic  #144                // Method java/lang/Math.max:(DD)D
     385: dstore        13
     387: iinc          16, 1
     390: goto          215
     393: iload         15
     395: ifeq          406
     398: aload_1
     399: invokevirtual #205                // Method com/sun/javafx/geom/BaseBounds.makeEmpty:()Lcom/sun/javafx/geom/BaseBounds;
     402: pop
     403: goto          428
     406: aload_1
     407: dload_3
     408: d2f
     409: dload         5
     411: d2f
     412: dload         7
     414: d2f
     415: dload         9
     417: d2f
     418: dload         11
     420: d2f
     421: dload         13
     423: d2f
     424: invokevirtual #220                // Method com/sun/javafx/geom/BaseBounds.deriveWithNewBounds:(FFFFFF)Lcom/sun/javafx/geom/BaseBounds;
     427: astore_1
     428: aload_1
     429: areturn

  private void setChildDirty(javafx.scene.Node, boolean);
    Code:
       0: aload_1
       1: getfield      #230                // Field javafx/scene/Node.boundsChanged:Z
       4: iload_2
       5: if_icmpne     9
       8: return
       9: aload_1
      10: iload_2
      11: putfield      #230                // Field javafx/scene/Node.boundsChanged:Z
      14: iload_2
      15: ifeq          47
      18: aload_0
      19: getfield      #8                  // Field dirtyChildren:Ljava/util/ArrayList;
      22: ifnull        34
      25: aload_0
      26: getfield      #8                  // Field dirtyChildren:Ljava/util/ArrayList;
      29: aload_1
      30: invokevirtual #231                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      33: pop
      34: aload_0
      35: dup
      36: getfield      #7                  // Field dirtyChildrenCount:I
      39: iconst_1
      40: iadd
      41: putfield      #7                  // Field dirtyChildrenCount:I
      44: goto          73
      47: aload_0
      48: getfield      #8                  // Field dirtyChildren:Ljava/util/ArrayList;
      51: ifnull        63
      54: aload_0
      55: getfield      #8                  // Field dirtyChildren:Ljava/util/ArrayList;
      58: aload_1
      59: invokevirtual #232                // Method java/util/ArrayList.remove:(Ljava/lang/Object;)Z
      62: pop
      63: aload_0
      64: dup
      65: getfield      #7                  // Field dirtyChildrenCount:I
      68: iconst_1
      69: isub
      70: putfield      #7                  // Field dirtyChildrenCount:I
      73: return

  private void childIncluded(javafx.scene.Node);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #207                // Field cachedBoundsInvalid:Z
       5: aload_0
       6: aload_1
       7: iconst_1
       8: invokespecial #233                // Method setChildDirty:(Ljavafx/scene/Node;Z)V
      11: return

  private void childExcluded(javafx.scene.Node);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #234                // Field left:Ljavafx/scene/Node;
       5: if_acmpne     18
       8: aload_0
       9: aconst_null
      10: putfield      #234                // Field left:Ljavafx/scene/Node;
      13: aload_0
      14: iconst_1
      15: putfield      #207                // Field cachedBoundsInvalid:Z
      18: aload_1
      19: aload_0
      20: getfield      #235                // Field top:Ljavafx/scene/Node;
      23: if_acmpne     36
      26: aload_0
      27: aconst_null
      28: putfield      #235                // Field top:Ljavafx/scene/Node;
      31: aload_0
      32: iconst_1
      33: putfield      #207                // Field cachedBoundsInvalid:Z
      36: aload_1
      37: aload_0
      38: getfield      #236                // Field near:Ljavafx/scene/Node;
      41: if_acmpne     54
      44: aload_0
      45: aconst_null
      46: putfield      #236                // Field near:Ljavafx/scene/Node;
      49: aload_0
      50: iconst_1
      51: putfield      #207                // Field cachedBoundsInvalid:Z
      54: aload_1
      55: aload_0
      56: getfield      #237                // Field right:Ljavafx/scene/Node;
      59: if_acmpne     72
      62: aload_0
      63: aconst_null
      64: putfield      #237                // Field right:Ljavafx/scene/Node;
      67: aload_0
      68: iconst_1
      69: putfield      #207                // Field cachedBoundsInvalid:Z
      72: aload_1
      73: aload_0
      74: getfield      #238                // Field bottom:Ljavafx/scene/Node;
      77: if_acmpne     90
      80: aload_0
      81: aconst_null
      82: putfield      #238                // Field bottom:Ljavafx/scene/Node;
      85: aload_0
      86: iconst_1
      87: putfield      #207                // Field cachedBoundsInvalid:Z
      90: aload_1
      91: aload_0
      92: getfield      #239                // Field far:Ljavafx/scene/Node;
      95: if_acmpne     108
      98: aload_0
      99: aconst_null
     100: putfield      #239                // Field far:Ljavafx/scene/Node;
     103: aload_0
     104: iconst_1
     105: putfield      #207                // Field cachedBoundsInvalid:Z
     108: aload_0
     109: aload_1
     110: iconst_0
     111: invokespecial #233                // Method setChildDirty:(Ljavafx/scene/Node;Z)V
     114: return

  private void recomputeBounds();
    Code:
       0: aload_0
       1: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
       4: invokeinterface #166,  1          // InterfaceMethod javafx/collections/ObservableList.isEmpty:()Z
       9: ifeq          21
      12: aload_0
      13: getfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
      16: invokevirtual #205                // Method com/sun/javafx/geom/BaseBounds.makeEmpty:()Lcom/sun/javafx/geom/BaseBounds;
      19: pop
      20: return
      21: aload_0
      22: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      25: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      30: iconst_1
      31: if_icmpne     118
      34: aload_0
      35: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      38: iconst_0
      39: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      44: checkcast     #39                 // class javafx/scene/Node
      47: astore_1
      48: aload_1
      49: iconst_0
      50: putfield      #230                // Field javafx/scene/Node.boundsChanged:Z
      53: aload_1
      54: invokevirtual #227                // Method javafx/scene/Node.isVisible:()Z
      57: ifeq          109
      60: aload_0
      61: aload_0
      62: aload_1
      63: getstatic     #240                // Field com/sun/javafx/geom/transform/BaseTransform.IDENTITY_TRANSFORM:Lcom/sun/javafx/geom/transform/BaseTransform;
      66: aload_0
      67: getfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
      70: invokespecial #228                // Method getChildTransformedBounds:(Ljavafx/scene/Node;Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/BaseBounds;)Lcom/sun/javafx/geom/BaseBounds;
      73: putfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
      76: aload_0
      77: aload_0
      78: aload_0
      79: aload_0
      80: aload_0
      81: aload_0
      82: aload_1
      83: dup_x1
      84: putfield      #239                // Field far:Ljavafx/scene/Node;
      87: dup_x1
      88: putfield      #236                // Field near:Ljavafx/scene/Node;
      91: dup_x1
      92: putfield      #237                // Field right:Ljavafx/scene/Node;
      95: dup_x1
      96: putfield      #238                // Field bottom:Ljavafx/scene/Node;
      99: dup_x1
     100: putfield      #234                // Field left:Ljavafx/scene/Node;
     103: putfield      #235                // Field top:Ljavafx/scene/Node;
     106: goto          117
     109: aload_0
     110: getfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
     113: invokevirtual #205                // Method com/sun/javafx/geom/BaseBounds.makeEmpty:()Lcom/sun/javafx/geom/BaseBounds;
     116: pop
     117: return
     118: aload_0
     119: getfield      #7                  // Field dirtyChildrenCount:I
     122: ifeq          154
     125: aload_0
     126: aload_0
     127: getfield      #8                  // Field dirtyChildren:Ljava/util/ArrayList;
     130: ifnull        140
     133: aload_0
     134: getfield      #8                  // Field dirtyChildren:Ljava/util/ArrayList;
     137: goto          144
     140: aload_0
     141: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
     144: aload_0
     145: getfield      #7                  // Field dirtyChildrenCount:I
     148: invokespecial #241                // Method updateCachedBounds:(Ljava/util/List;I)Z
     151: ifne          162
     154: aload_0
     155: aload_0
     156: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
     159: invokespecial #242                // Method createCachedBounds:(Ljava/util/List;)V
     162: return

  private boolean updateCachedBounds(java.util.List<javafx.scene.Node>, int);
    Code:
       0: aload_0
       1: getfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
       4: invokevirtual #229                // Method com/sun/javafx/geom/BaseBounds.isEmpty:()Z
       7: ifeq          17
      10: aload_0
      11: aload_1
      12: invokespecial #242                // Method createCachedBounds:(Ljava/util/List;)V
      15: iconst_1
      16: ireturn
      17: iconst_0
      18: istore_3
      19: aload_0
      20: getfield      #234                // Field left:Ljavafx/scene/Node;
      23: ifnull        36
      26: aload_0
      27: getfield      #234                // Field left:Ljavafx/scene/Node;
      30: getfield      #230                // Field javafx/scene/Node.boundsChanged:Z
      33: ifeq          40
      36: iload_3
      37: iconst_1
      38: ior
      39: istore_3
      40: aload_0
      41: getfield      #235                // Field top:Ljavafx/scene/Node;
      44: ifnull        57
      47: aload_0
      48: getfield      #235                // Field top:Ljavafx/scene/Node;
      51: getfield      #230                // Field javafx/scene/Node.boundsChanged:Z
      54: ifeq          61
      57: iload_3
      58: iconst_2
      59: ior
      60: istore_3
      61: aload_0
      62: getfield      #236                // Field near:Ljavafx/scene/Node;
      65: ifnull        78
      68: aload_0
      69: getfield      #236                // Field near:Ljavafx/scene/Node;
      72: getfield      #230                // Field javafx/scene/Node.boundsChanged:Z
      75: ifeq          82
      78: iload_3
      79: iconst_4
      80: ior
      81: istore_3
      82: aload_0
      83: getfield      #237                // Field right:Ljavafx/scene/Node;
      86: ifnull        99
      89: aload_0
      90: getfield      #237                // Field right:Ljavafx/scene/Node;
      93: getfield      #230                // Field javafx/scene/Node.boundsChanged:Z
      96: ifeq          104
      99: iload_3
     100: bipush        8
     102: ior
     103: istore_3
     104: aload_0
     105: getfield      #238                // Field bottom:Ljavafx/scene/Node;
     108: ifnull        121
     111: aload_0
     112: getfield      #238                // Field bottom:Ljavafx/scene/Node;
     115: getfield      #230                // Field javafx/scene/Node.boundsChanged:Z
     118: ifeq          126
     121: iload_3
     122: bipush        16
     124: ior
     125: istore_3
     126: aload_0
     127: getfield      #239                // Field far:Ljavafx/scene/Node;
     130: ifnull        143
     133: aload_0
     134: getfield      #239                // Field far:Ljavafx/scene/Node;
     137: getfield      #230                // Field javafx/scene/Node.boundsChanged:Z
     140: ifeq          148
     143: iload_3
     144: bipush        32
     146: ior
     147: istore_3
     148: aload_0
     149: getfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
     152: invokevirtual #211                // Method com/sun/javafx/geom/BaseBounds.getMinX:()F
     155: fstore        4
     157: aload_0
     158: getfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
     161: invokevirtual #213                // Method com/sun/javafx/geom/BaseBounds.getMinY:()F
     164: fstore        5
     166: aload_0
     167: getfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
     170: invokevirtual #215                // Method com/sun/javafx/geom/BaseBounds.getMinZ:()F
     173: fstore        6
     175: aload_0
     176: getfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
     179: invokevirtual #217                // Method com/sun/javafx/geom/BaseBounds.getMaxX:()F
     182: fstore        7
     184: aload_0
     185: getfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
     188: invokevirtual #218                // Method com/sun/javafx/geom/BaseBounds.getMaxY:()F
     191: fstore        8
     193: aload_0
     194: getfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
     197: invokevirtual #219                // Method com/sun/javafx/geom/BaseBounds.getMaxZ:()F
     200: fstore        9
     202: aload_1
     203: invokeinterface #29,  1           // InterfaceMethod java/util/List.size:()I
     208: iconst_1
     209: isub
     210: istore        10
     212: iload_2
     213: ifle          471
     216: aload_1
     217: iload         10
     219: invokeinterface #44,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     224: checkcast     #39                 // class javafx/scene/Node
     227: astore        11
     229: aload         11
     231: getfield      #230                // Field javafx/scene/Node.boundsChanged:Z
     234: ifeq          465
     237: aload         11
     239: iconst_0
     240: putfield      #230                // Field javafx/scene/Node.boundsChanged:Z
     243: iinc          2, -1
     246: aload_0
     247: aload_0
     248: aload         11
     250: getstatic     #240                // Field com/sun/javafx/geom/transform/BaseTransform.IDENTITY_TRANSFORM:Lcom/sun/javafx/geom/transform/BaseTransform;
     253: aload_0
     254: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     257: invokespecial #228                // Method getChildTransformedBounds:(Ljavafx/scene/Node;Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/BaseBounds;)Lcom/sun/javafx/geom/BaseBounds;
     260: putfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     263: aload_0
     264: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     267: invokevirtual #229                // Method com/sun/javafx/geom/BaseBounds.isEmpty:()Z
     270: ifne          465
     273: aload_0
     274: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     277: invokevirtual #211                // Method com/sun/javafx/geom/BaseBounds.getMinX:()F
     280: fstore        12
     282: aload_0
     283: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     286: invokevirtual #213                // Method com/sun/javafx/geom/BaseBounds.getMinY:()F
     289: fstore        13
     291: aload_0
     292: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     295: invokevirtual #215                // Method com/sun/javafx/geom/BaseBounds.getMinZ:()F
     298: fstore        14
     300: aload_0
     301: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     304: invokevirtual #217                // Method com/sun/javafx/geom/BaseBounds.getMaxX:()F
     307: fstore        15
     309: aload_0
     310: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     313: invokevirtual #218                // Method com/sun/javafx/geom/BaseBounds.getMaxY:()F
     316: fstore        16
     318: aload_0
     319: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     322: invokevirtual #219                // Method com/sun/javafx/geom/BaseBounds.getMaxZ:()F
     325: fstore        17
     327: fload         12
     329: fload         4
     331: fcmpg
     332: ifgt          350
     335: fload         12
     337: fstore        4
     339: aload_0
     340: aload         11
     342: putfield      #234                // Field left:Ljavafx/scene/Node;
     345: iload_3
     346: bipush        -2
     348: iand
     349: istore_3
     350: fload         13
     352: fload         5
     354: fcmpg
     355: ifgt          373
     358: fload         13
     360: fstore        5
     362: aload_0
     363: aload         11
     365: putfield      #235                // Field top:Ljavafx/scene/Node;
     368: iload_3
     369: bipush        -3
     371: iand
     372: istore_3
     373: fload         14
     375: fload         6
     377: fcmpg
     378: ifgt          396
     381: fload         14
     383: fstore        6
     385: aload_0
     386: aload         11
     388: putfield      #236                // Field near:Ljavafx/scene/Node;
     391: iload_3
     392: bipush        -5
     394: iand
     395: istore_3
     396: fload         15
     398: fload         7
     400: fcmpl
     401: iflt          419
     404: fload         15
     406: fstore        7
     408: aload_0
     409: aload         11
     411: putfield      #237                // Field right:Ljavafx/scene/Node;
     414: iload_3
     415: bipush        -9
     417: iand
     418: istore_3
     419: fload         16
     421: fload         8
     423: fcmpl
     424: iflt          442
     427: fload         16
     429: fstore        8
     431: aload_0
     432: aload         11
     434: putfield      #238                // Field bottom:Ljavafx/scene/Node;
     437: iload_3
     438: bipush        -17
     440: iand
     441: istore_3
     442: fload         17
     444: fload         9
     446: fcmpl
     447: iflt          465
     450: fload         17
     452: fstore        9
     454: aload_0
     455: aload         11
     457: putfield      #239                // Field far:Ljavafx/scene/Node;
     460: iload_3
     461: bipush        -33
     463: iand
     464: istore_3
     465: iinc          10, -1
     468: goto          212
     471: iload_3
     472: ifeq          477
     475: iconst_0
     476: ireturn
     477: aload_0
     478: aload_0
     479: getfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
     482: fload         4
     484: fload         5
     486: fload         6
     488: fload         7
     490: fload         8
     492: fload         9
     494: invokevirtual #220                // Method com/sun/javafx/geom/BaseBounds.deriveWithNewBounds:(FFFFFF)Lcom/sun/javafx/geom/BaseBounds;
     497: putfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
     500: iconst_1
     501: ireturn

  private void createCachedBounds(java.util.List<javafx.scene.Node>);
    Code:
       0: aload_1
       1: invokeinterface #29,  1           // InterfaceMethod java/util/List.size:()I
       6: istore        8
       8: iconst_0
       9: istore        9
      11: iload         9
      13: iload         8
      15: if_icmpge     111
      18: aload_1
      19: iload         9
      21: invokeinterface #44,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      26: checkcast     #39                 // class javafx/scene/Node
      29: astore        10
      31: aload         10
      33: iconst_0
      34: putfield      #230                // Field javafx/scene/Node.boundsChanged:Z
      37: aload         10
      39: invokevirtual #227                // Method javafx/scene/Node.isVisible:()Z
      42: ifeq          105
      45: aload_0
      46: aload         10
      48: aload_0
      49: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
      52: getstatic     #240                // Field com/sun/javafx/geom/transform/BaseTransform.IDENTITY_TRANSFORM:Lcom/sun/javafx/geom/transform/BaseTransform;
      55: invokevirtual #243                // Method javafx/scene/Node.getTransformedBounds:(Lcom/sun/javafx/geom/BaseBounds;Lcom/sun/javafx/geom/transform/BaseTransform;)Lcom/sun/javafx/geom/BaseBounds;
      58: putfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
      61: aload_0
      62: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
      65: invokevirtual #229                // Method com/sun/javafx/geom/BaseBounds.isEmpty:()Z
      68: ifne          105
      71: aload_0
      72: aload_0
      73: aload_0
      74: aload_0
      75: aload_0
      76: aload_0
      77: aload         10
      79: dup_x1
      80: putfield      #239                // Field far:Ljavafx/scene/Node;
      83: dup_x1
      84: putfield      #238                // Field bottom:Ljavafx/scene/Node;
      87: dup_x1
      88: putfield      #237                // Field right:Ljavafx/scene/Node;
      91: dup_x1
      92: putfield      #236                // Field near:Ljavafx/scene/Node;
      95: dup_x1
      96: putfield      #235                // Field top:Ljavafx/scene/Node;
      99: putfield      #234                // Field left:Ljavafx/scene/Node;
     102: goto          111
     105: iinc          9, 1
     108: goto          11
     111: iload         9
     113: iload         8
     115: if_icmpne     157
     118: aload_0
     119: aload_0
     120: aload_0
     121: aload_0
     122: aload_0
     123: aload_0
     124: aconst_null
     125: dup_x1
     126: putfield      #239                // Field far:Ljavafx/scene/Node;
     129: dup_x1
     130: putfield      #238                // Field bottom:Ljavafx/scene/Node;
     133: dup_x1
     134: putfield      #237                // Field right:Ljavafx/scene/Node;
     137: dup_x1
     138: putfield      #236                // Field near:Ljavafx/scene/Node;
     141: dup_x1
     142: putfield      #235                // Field top:Ljavafx/scene/Node;
     145: putfield      #234                // Field left:Ljavafx/scene/Node;
     148: aload_0
     149: getfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
     152: invokevirtual #205                // Method com/sun/javafx/geom/BaseBounds.makeEmpty:()Lcom/sun/javafx/geom/BaseBounds;
     155: pop
     156: return
     157: aload_0
     158: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     161: invokevirtual #211                // Method com/sun/javafx/geom/BaseBounds.getMinX:()F
     164: fstore_2
     165: aload_0
     166: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     169: invokevirtual #213                // Method com/sun/javafx/geom/BaseBounds.getMinY:()F
     172: fstore_3
     173: aload_0
     174: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     177: invokevirtual #215                // Method com/sun/javafx/geom/BaseBounds.getMinZ:()F
     180: fstore        4
     182: aload_0
     183: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     186: invokevirtual #217                // Method com/sun/javafx/geom/BaseBounds.getMaxX:()F
     189: fstore        5
     191: aload_0
     192: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     195: invokevirtual #218                // Method com/sun/javafx/geom/BaseBounds.getMaxY:()F
     198: fstore        6
     200: aload_0
     201: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     204: invokevirtual #219                // Method com/sun/javafx/geom/BaseBounds.getMaxZ:()F
     207: fstore        7
     209: iinc          9, 1
     212: iload         9
     214: iload         8
     216: if_icmpge     436
     219: aload_1
     220: iload         9
     222: invokeinterface #44,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     227: checkcast     #39                 // class javafx/scene/Node
     230: astore        10
     232: aload         10
     234: iconst_0
     235: putfield      #230                // Field javafx/scene/Node.boundsChanged:Z
     238: aload         10
     240: invokevirtual #227                // Method javafx/scene/Node.isVisible:()Z
     243: ifeq          430
     246: aload_0
     247: aload         10
     249: aload_0
     250: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     253: getstatic     #240                // Field com/sun/javafx/geom/transform/BaseTransform.IDENTITY_TRANSFORM:Lcom/sun/javafx/geom/transform/BaseTransform;
     256: invokevirtual #243                // Method javafx/scene/Node.getTransformedBounds:(Lcom/sun/javafx/geom/BaseBounds;Lcom/sun/javafx/geom/transform/BaseTransform;)Lcom/sun/javafx/geom/BaseBounds;
     259: putfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     262: aload_0
     263: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     266: invokevirtual #229                // Method com/sun/javafx/geom/BaseBounds.isEmpty:()Z
     269: ifne          430
     272: aload_0
     273: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     276: invokevirtual #211                // Method com/sun/javafx/geom/BaseBounds.getMinX:()F
     279: fstore        11
     281: aload_0
     282: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     285: invokevirtual #213                // Method com/sun/javafx/geom/BaseBounds.getMinY:()F
     288: fstore        12
     290: aload_0
     291: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     294: invokevirtual #215                // Method com/sun/javafx/geom/BaseBounds.getMinZ:()F
     297: fstore        13
     299: aload_0
     300: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     303: invokevirtual #217                // Method com/sun/javafx/geom/BaseBounds.getMaxX:()F
     306: fstore        14
     308: aload_0
     309: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     312: invokevirtual #218                // Method com/sun/javafx/geom/BaseBounds.getMaxY:()F
     315: fstore        15
     317: aload_0
     318: getfield      #193                // Field tmp:Lcom/sun/javafx/geom/BaseBounds;
     321: invokevirtual #219                // Method com/sun/javafx/geom/BaseBounds.getMaxZ:()F
     324: fstore        16
     326: fload         11
     328: fload_2
     329: fcmpg
     330: ifge          342
     333: fload         11
     335: fstore_2
     336: aload_0
     337: aload         10
     339: putfield      #234                // Field left:Ljavafx/scene/Node;
     342: fload         12
     344: fload_3
     345: fcmpg
     346: ifge          358
     349: fload         12
     351: fstore_3
     352: aload_0
     353: aload         10
     355: putfield      #235                // Field top:Ljavafx/scene/Node;
     358: fload         13
     360: fload         4
     362: fcmpg
     363: ifge          376
     366: fload         13
     368: fstore        4
     370: aload_0
     371: aload         10
     373: putfield      #236                // Field near:Ljavafx/scene/Node;
     376: fload         14
     378: fload         5
     380: fcmpl
     381: ifle          394
     384: fload         14
     386: fstore        5
     388: aload_0
     389: aload         10
     391: putfield      #237                // Field right:Ljavafx/scene/Node;
     394: fload         15
     396: fload         6
     398: fcmpl
     399: ifle          412
     402: fload         15
     404: fstore        6
     406: aload_0
     407: aload         10
     409: putfield      #238                // Field bottom:Ljavafx/scene/Node;
     412: fload         16
     414: fload         7
     416: fcmpl
     417: ifle          430
     420: fload         16
     422: fstore        7
     424: aload_0
     425: aload         10
     427: putfield      #239                // Field far:Ljavafx/scene/Node;
     430: iinc          9, 1
     433: goto          212
     436: aload_0
     437: aload_0
     438: getfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
     441: fload_2
     442: fload_3
     443: fload         4
     445: fload         5
     447: fload         6
     449: fload         7
     451: invokevirtual #220                // Method com/sun/javafx/geom/BaseBounds.deriveWithNewBounds:(FFFFFF)Lcom/sun/javafx/geom/BaseBounds;
     454: putfield      #194                // Field cachedBounds:Lcom/sun/javafx/geom/BaseBounds;
     457: return

  protected void updateBounds();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
       6: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      11: istore_2
      12: iload_1
      13: iload_2
      14: if_icmpge     39
      17: aload_0
      18: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      21: iload_1
      22: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      27: checkcast     #39                 // class javafx/scene/Node
      30: invokevirtual #244                // Method javafx/scene/Node.updateBounds:()V
      33: iinc          1, 1
      36: goto          12
      39: aload_0
      40: invokespecial #244                // Method javafx/scene/Node.updateBounds:()V
      43: return

  private com.sun.javafx.geom.BaseBounds getChildTransformedBounds(javafx.scene.Node, com.sun.javafx.geom.transform.BaseTransform, com.sun.javafx.geom.BaseBounds);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #245                // Field currentlyProcessedChild:Ljavafx/scene/Node;
       5: aload_1
       6: aload_3
       7: aload_2
       8: invokevirtual #243                // Method javafx/scene/Node.getTransformedBounds:(Lcom/sun/javafx/geom/BaseBounds;Lcom/sun/javafx/geom/transform/BaseTransform;)Lcom/sun/javafx/geom/BaseBounds;
      11: astore_3
      12: aload_0
      13: aconst_null
      14: putfield      #245                // Field currentlyProcessedChild:Ljavafx/scene/Node;
      17: aload_3
      18: areturn

  void childBoundsChanged(javafx.scene.Node);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #245                // Field currentlyProcessedChild:Ljavafx/scene/Node;
       5: if_acmpne     9
       8: return
       9: aload_0
      10: iconst_1
      11: putfield      #207                // Field cachedBoundsInvalid:Z
      14: aload_0
      15: aload_1
      16: iconst_1
      17: invokespecial #233                // Method setChildDirty:(Ljavafx/scene/Node;Z)V
      20: aload_0
      21: invokestatic  #246                // Method com/sun/javafx/scene/NodeHelper.geomChanged:(Ljavafx/scene/Node;)V
      24: return

  void childVisibilityChanged(javafx.scene.Node);
    Code:
       0: aload_1
       1: invokevirtual #227                // Method javafx/scene/Node.isVisible:()Z
       4: ifeq          15
       7: aload_0
       8: aload_1
       9: invokespecial #9                  // Method childIncluded:(Ljavafx/scene/Node;)V
      12: goto          20
      15: aload_0
      16: aload_1
      17: invokespecial #1                  // Method childExcluded:(Ljavafx/scene/Node;)V
      20: aload_0
      21: invokestatic  #246                // Method com/sun/javafx/scene/NodeHelper.geomChanged:(Ljavafx/scene/Node;)V
      24: return

  private boolean doComputeContains(double, double);
    Code:
       0: invokestatic  #247                // Method com/sun/javafx/util/TempState.getInstance:()Lcom/sun/javafx/util/TempState;
       3: getfield      #248                // Field com/sun/javafx/util/TempState.point:Lcom/sun/javafx/geom/Point2D;
       6: astore        5
       8: iconst_0
       9: istore        6
      11: aload_0
      12: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      15: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      20: istore        7
      22: iload         6
      24: iload         7
      26: if_icmpge     102
      29: aload_0
      30: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      33: iload         6
      35: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      40: checkcast     #39                 // class javafx/scene/Node
      43: astore        8
      45: aload         5
      47: dload_1
      48: d2f
      49: putfield      #249                // Field com/sun/javafx/geom/Point2D.x:F
      52: aload         5
      54: dload_3
      55: d2f
      56: putfield      #250                // Field com/sun/javafx/geom/Point2D.y:F
      59: aload         8
      61: aload         5
      63: invokevirtual #251                // Method javafx/scene/Node.parentToLocal:(Lcom/sun/javafx/geom/Point2D;)V
      66: goto          74
      69: astore        9
      71: goto          96
      74: aload         8
      76: aload         5
      78: getfield      #249                // Field com/sun/javafx/geom/Point2D.x:F
      81: f2d
      82: aload         5
      84: getfield      #250                // Field com/sun/javafx/geom/Point2D.y:F
      87: f2d
      88: invokevirtual #253                // Method javafx/scene/Node.contains:(DD)Z
      91: ifeq          96
      94: iconst_1
      95: ireturn
      96: iinc          6, 1
      99: goto          22
     102: iconst_0
     103: ireturn
    Exception table:
       from    to  target type
          59    66    69   Class com/sun/javafx/geom/transform/NoninvertibleTransformException

  public java.lang.Object queryAccessibleAttribute(javafx.scene.AccessibleAttribute, java.lang.Object...);
    Code:
       0: getstatic     #254                // Field javafx/scene/Parent$5.$SwitchMap$javafx$scene$AccessibleAttribute:[I
       3: aload_1
       4: invokevirtual #255                // Method javafx/scene/AccessibleAttribute.ordinal:()I
       7: iaload
       8: lookupswitch  { // 1
                     1: 28
               default: 33
          }
      28: aload_0
      29: invokevirtual #256                // Method getChildrenUnmodifiable:()Ljavafx/collections/ObservableList;
      32: areturn
      33: aload_0
      34: aload_1
      35: aload_2
      36: invokespecial #257                // Method javafx/scene/Node.queryAccessibleAttribute:(Ljavafx/scene/AccessibleAttribute;[Ljava/lang/Object;)Ljava/lang/Object;
      39: areturn

  void releaseAccessible();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
       6: invokeinterface #37,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      11: istore_2
      12: iload_1
      13: iload_2
      14: if_icmpge     41
      17: aload_0
      18: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
      21: iload_1
      22: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      27: checkcast     #39                 // class javafx/scene/Node
      30: astore_3
      31: aload_3
      32: invokevirtual #258                // Method javafx/scene/Node.releaseAccessible:()V
      35: iinc          1, 1
      38: goto          12
      41: aload_0
      42: invokespecial #258                // Method javafx/scene/Node.releaseAccessible:()V
      45: return

  java.util.List<javafx.scene.Node> test_getRemoved();
    Code:
       0: aload_0
       1: getfield      #3                  // Field removed:Ljava/util/List;
       4: areturn

  java.util.List<javafx.scene.Node> test_getViewOrderChildren();
    Code:
       0: aload_0
       1: getfield      #11                 // Field viewOrderChildren:Ljava/util/List;
       4: areturn

  private static int lambda$computeViewOrderChidrenAndUpdatePeer$0(javafx.scene.Node, javafx.scene.Node);
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method javafx/scene/Node.getViewOrder:()D
       4: aload_1
       5: invokevirtual #64                 // Method javafx/scene/Node.getViewOrder:()D
       8: dcmpg
       9: ifge          16
      12: iconst_1
      13: goto          33
      16: aload_0
      17: invokevirtual #64                 // Method javafx/scene/Node.getViewOrder:()D
      20: aload_1
      21: invokevirtual #64                 // Method javafx/scene/Node.getViewOrder:()D
      24: dcmpl
      25: ifne          32
      28: iconst_0
      29: goto          33
      32: iconst_m1
      33: ireturn

  static com.sun.javafx.sg.prism.NGNode access$000(javafx.scene.Parent);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method doCreatePeer:()Lcom/sun/javafx/sg/prism/NGNode;
       4: areturn

  static void access$100(javafx.scene.Parent);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method doUpdatePeer:()V
       4: return

  static com.sun.javafx.geom.BaseBounds access$200(javafx.scene.Parent, com.sun.javafx.geom.BaseBounds, com.sun.javafx.geom.transform.BaseTransform);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #22                 // Method doComputeGeomBounds:(Lcom/sun/javafx/geom/BaseBounds;Lcom/sun/javafx/geom/transform/BaseTransform;)Lcom/sun/javafx/geom/BaseBounds;
       6: areturn

  static boolean access$300(javafx.scene.Parent, double, double);
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: invokespecial #21                 // Method doComputeContains:(DD)Z
       6: ireturn

  static void access$400(javafx.scene.Parent);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method doProcessCSS:()V
       4: return

  static void access$500(javafx.scene.Parent, com.sun.javafx.geom.PickRay, com.sun.javafx.scene.input.PickResultChooser);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #19                 // Method doPickNodeLocal:(Lcom/sun/javafx/geom/PickRay;Lcom/sun/javafx/scene/input/PickResultChooser;)V
       6: return

  static void access$600(javafx.scene.Parent, com.sun.javafx.scene.traversal.ParentTraversalEngine);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #18                 // Method setTraversalEngine:(Lcom/sun/javafx/scene/traversal/ParentTraversalEngine;)V
       5: return

  static com.sun.javafx.scene.traversal.ParentTraversalEngine access$700(javafx.scene.Parent);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method getTraversalEngine:()Lcom/sun/javafx/scene/traversal/ParentTraversalEngine;
       4: areturn

  static java.util.List access$800(javafx.scene.Parent);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method doGetAllParentStylesheets:()Ljava/util/List;
       4: areturn

  static java.util.List access$902(javafx.scene.Parent, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #15                 // Field unmodifiableManagedChildren:Ljava/util/List;
       6: areturn

  static boolean access$1000(javafx.scene.Parent);
    Code:
       0: aload_0
       1: getfield      #14                 // Field childSetModified:Z
       4: ireturn

  static javafx.collections.ObservableList access$1100(javafx.scene.Parent);
    Code:
       0: aload_0
       1: getfield      #13                 // Field children:Ljavafx/collections/ObservableList;
       4: areturn

  static boolean access$1200();
    Code:
       0: getstatic     #12                 // Field warnOnAutoMove:Z
       3: ireturn

  static java.util.List access$1300(javafx.scene.Parent);
    Code:
       0: aload_0
       1: getfield      #11                 // Field viewOrderChildren:Ljava/util/List;
       4: areturn

  static boolean access$1402(javafx.scene.Parent, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #10                 // Field geomChanged:Z
       6: ireturn

  static void access$1500(javafx.scene.Parent, javafx.scene.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method childIncluded:(Ljavafx/scene/Node;)V
       5: return

  static java.util.ArrayList access$1600(javafx.scene.Parent);
    Code:
       0: aload_0
       1: getfield      #8                  // Field dirtyChildren:Ljava/util/ArrayList;
       4: areturn

  static java.util.ArrayList access$1602(javafx.scene.Parent, java.util.ArrayList);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #8                  // Field dirtyChildren:Ljava/util/ArrayList;
       6: areturn

  static int access$1700(javafx.scene.Parent);
    Code:
       0: aload_0
       1: getfield      #7                  // Field dirtyChildrenCount:I
       4: ireturn

  static boolean access$1400(javafx.scene.Parent);
    Code:
       0: aload_0
       1: getfield      #10                 // Field geomChanged:Z
       4: ireturn

  static int access$1800(javafx.scene.Parent);
    Code:
       0: aload_0
       1: getfield      #6                  // Field startIdx:I
       4: ireturn

  static int access$1802(javafx.scene.Parent, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #6                  // Field startIdx:I
       6: ireturn

  static boolean access$1900(javafx.scene.Parent);
    Code:
       0: aload_0
       1: getfield      #5                  // Field childrenTriggerPermutation:Z
       4: ireturn

  static boolean access$1002(javafx.scene.Parent, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #14                 // Field childSetModified:Z
       6: ireturn

  static java.util.Set access$2000(javafx.scene.Parent);
    Code:
       0: aload_0
       1: getfield      #4                  // Field childSet:Ljava/util/Set;
       4: areturn

  static java.util.List access$2100(javafx.scene.Parent);
    Code:
       0: aload_0
       1: getfield      #3                  // Field removed:Ljava/util/List;
       4: areturn

  static java.util.List access$2102(javafx.scene.Parent, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field removed:Ljava/util/List;
       6: areturn

  static boolean access$2202(javafx.scene.Parent, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #2                  // Field removedChildrenOptimizationDisabled:Z
       6: ireturn

  static void access$2300(javafx.scene.Parent, javafx.scene.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method childExcluded:(Ljavafx/scene/Node;)V
       5: return

  static boolean access$2200(javafx.scene.Parent);
    Code:
       0: aload_0
       1: getfield      #2                  // Field removedChildrenOptimizationDisabled:Z
       4: ireturn

  static {};
    Code:
       0: ldc_w         #259                // String javafx.sg.warn
       3: invokestatic  #260                // Method javafx/scene/PropertyHelper.getBooleanProperty:(Ljava/lang/String;)Z
       6: putstatic     #12                 // Field warnOnAutoMove:Z
       9: new           #261                // class javafx/scene/Parent$1
      12: dup
      13: invokespecial #262                // Method javafx/scene/Parent$1."<init>":()V
      16: invokestatic  #263                // Method com/sun/javafx/scene/ParentHelper.setParentAccessor:(Lcom/sun/javafx/scene/ParentHelper$ParentAccessor;)V
      19: return
}
