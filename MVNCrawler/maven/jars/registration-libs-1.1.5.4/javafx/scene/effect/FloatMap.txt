Compiled from "FloatMap.java"
public class javafx.scene.effect.FloatMap {
  private com.sun.scenario.effect.FloatMap map;

  private float[] buf;

  private boolean mapBufferDirty;

  private javafx.beans.property.BooleanProperty effectDirty;

  private javafx.beans.property.IntegerProperty width;

  private javafx.beans.property.IntegerProperty height;

  com.sun.scenario.effect.FloatMap getImpl();
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Lcom/sun/scenario/effect/FloatMap;
       4: areturn

  private void updateBuffer();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getWidth:()I
       4: ifle          54
       7: aload_0
       8: invokevirtual #5                  // Method getHeight:()I
      11: ifle          54
      14: aload_0
      15: invokevirtual #4                  // Method getWidth:()I
      18: sipush        4096
      21: invokestatic  #6                  // Method com/sun/javafx/util/Utils.clampMax:(II)I
      24: istore_1
      25: aload_0
      26: invokevirtual #5                  // Method getHeight:()I
      29: sipush        4096
      32: invokestatic  #6                  // Method com/sun/javafx/util/Utils.clampMax:(II)I
      35: istore_2
      36: iload_1
      37: iload_2
      38: imul
      39: iconst_4
      40: imul
      41: istore_3
      42: aload_0
      43: iload_3
      44: newarray       float
      46: putfield      #7                  // Field buf:[F
      49: aload_0
      50: iconst_1
      51: putfield      #8                  // Field mapBufferDirty:Z
      54: return

  private void update();
    Code:
       0: aload_0
       1: getfield      #8                  // Field mapBufferDirty:Z
       4: ifeq          45
       7: aload_0
       8: new           #9                  // class com/sun/scenario/effect/FloatMap
      11: dup
      12: iconst_1
      13: aload_0
      14: invokevirtual #4                  // Method getWidth:()I
      17: sipush        4096
      20: invokestatic  #10                 // Method com/sun/javafx/util/Utils.clamp:(III)I
      23: iconst_1
      24: aload_0
      25: invokevirtual #5                  // Method getHeight:()I
      28: sipush        4096
      31: invokestatic  #10                 // Method com/sun/javafx/util/Utils.clamp:(III)I
      34: invokespecial #11                 // Method com/sun/scenario/effect/FloatMap."<init>":(II)V
      37: putfield      #3                  // Field map:Lcom/sun/scenario/effect/FloatMap;
      40: aload_0
      41: iconst_0
      42: putfield      #8                  // Field mapBufferDirty:Z
      45: aload_0
      46: getfield      #3                  // Field map:Lcom/sun/scenario/effect/FloatMap;
      49: aload_0
      50: getfield      #7                  // Field buf:[F
      53: invokevirtual #12                 // Method com/sun/scenario/effect/FloatMap.put:([F)V
      56: return

  void sync();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method isEffectDirty:()Z
       4: ifeq          15
       7: aload_0
       8: invokespecial #14                 // Method update:()V
      11: aload_0
      12: invokespecial #15                 // Method clearDirty:()V
      15: return

  private void setEffectDirty(boolean);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method effectDirtyProperty:()Ljavafx/beans/property/BooleanProperty;
       4: iload_1
       5: invokevirtual #17                 // Method javafx/beans/property/BooleanProperty.set:(Z)V
       8: return

  final javafx.beans.property.BooleanProperty effectDirtyProperty();
    Code:
       0: aload_0
       1: getfield      #18                 // Field effectDirty:Ljavafx/beans/property/BooleanProperty;
       4: ifnonnull     21
       7: aload_0
       8: new           #19                 // class javafx/beans/property/SimpleBooleanProperty
      11: dup
      12: aload_0
      13: ldc           #20                 // String effectDirty
      15: invokespecial #21                 // Method javafx/beans/property/SimpleBooleanProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      18: putfield      #18                 // Field effectDirty:Ljavafx/beans/property/BooleanProperty;
      21: aload_0
      22: getfield      #18                 // Field effectDirty:Ljavafx/beans/property/BooleanProperty;
      25: areturn

  boolean isEffectDirty();
    Code:
       0: aload_0
       1: getfield      #18                 // Field effectDirty:Ljavafx/beans/property/BooleanProperty;
       4: ifnonnull     11
       7: iconst_0
       8: goto          18
      11: aload_0
      12: getfield      #18                 // Field effectDirty:Ljavafx/beans/property/BooleanProperty;
      15: invokevirtual #22                 // Method javafx/beans/property/BooleanProperty.get:()Z
      18: ireturn

  private void markDirty();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #23                 // Method setEffectDirty:(Z)V
       5: return

  private void clearDirty();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #23                 // Method setEffectDirty:(Z)V
       5: return

  public javafx.scene.effect.FloatMap();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #8                  // Field mapBufferDirty:Z
       9: aload_0
      10: invokespecial #2                  // Method updateBuffer:()V
      13: aload_0
      14: invokespecial #1                  // Method markDirty:()V
      17: return

  public javafx.scene.effect.FloatMap(int, int);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #8                  // Field mapBufferDirty:Z
       9: aload_0
      10: iload_1
      11: invokevirtual #25                 // Method setWidth:(I)V
      14: aload_0
      15: iload_2
      16: invokevirtual #26                 // Method setHeight:(I)V
      19: aload_0
      20: invokespecial #2                  // Method updateBuffer:()V
      23: aload_0
      24: invokespecial #1                  // Method markDirty:()V
      27: return

  public final void setWidth(int);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method widthProperty:()Ljavafx/beans/property/IntegerProperty;
       4: iload_1
       5: invokevirtual #28                 // Method javafx/beans/property/IntegerProperty.set:(I)V
       8: return

  public final int getWidth();
    Code:
       0: aload_0
       1: getfield      #29                 // Field width:Ljavafx/beans/property/IntegerProperty;
       4: ifnonnull     11
       7: iconst_1
       8: goto          18
      11: aload_0
      12: getfield      #29                 // Field width:Ljavafx/beans/property/IntegerProperty;
      15: invokevirtual #30                 // Method javafx/beans/property/IntegerProperty.get:()I
      18: ireturn

  public final javafx.beans.property.IntegerProperty widthProperty();
    Code:
       0: aload_0
       1: getfield      #29                 // Field width:Ljavafx/beans/property/IntegerProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #31                 // class javafx/scene/effect/FloatMap$1
      11: dup
      12: aload_0
      13: iconst_1
      14: invokespecial #32                 // Method javafx/scene/effect/FloatMap$1."<init>":(Ljavafx/scene/effect/FloatMap;I)V
      17: putfield      #29                 // Field width:Ljavafx/beans/property/IntegerProperty;
      20: aload_0
      21: getfield      #29                 // Field width:Ljavafx/beans/property/IntegerProperty;
      24: areturn

  public final void setHeight(int);
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method heightProperty:()Ljavafx/beans/property/IntegerProperty;
       4: iload_1
       5: invokevirtual #28                 // Method javafx/beans/property/IntegerProperty.set:(I)V
       8: return

  public final int getHeight();
    Code:
       0: aload_0
       1: getfield      #34                 // Field height:Ljavafx/beans/property/IntegerProperty;
       4: ifnonnull     11
       7: iconst_1
       8: goto          18
      11: aload_0
      12: getfield      #34                 // Field height:Ljavafx/beans/property/IntegerProperty;
      15: invokevirtual #30                 // Method javafx/beans/property/IntegerProperty.get:()I
      18: ireturn

  public final javafx.beans.property.IntegerProperty heightProperty();
    Code:
       0: aload_0
       1: getfield      #34                 // Field height:Ljavafx/beans/property/IntegerProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #35                 // class javafx/scene/effect/FloatMap$2
      11: dup
      12: aload_0
      13: iconst_1
      14: invokespecial #36                 // Method javafx/scene/effect/FloatMap$2."<init>":(Ljavafx/scene/effect/FloatMap;I)V
      17: putfield      #34                 // Field height:Ljavafx/beans/property/IntegerProperty;
      20: aload_0
      21: getfield      #34                 // Field height:Ljavafx/beans/property/IntegerProperty;
      24: areturn

  public void setSample(int, int, int, float);
    Code:
       0: aload_0
       1: getfield      #7                  // Field buf:[F
       4: iload_1
       5: iload_2
       6: aload_0
       7: invokevirtual #4                  // Method getWidth:()I
      10: imul
      11: iadd
      12: iconst_4
      13: imul
      14: iload_3
      15: iadd
      16: fload         4
      18: fastore
      19: aload_0
      20: invokespecial #1                  // Method markDirty:()V
      23: return

  public void setSamples(int, int, float);
    Code:
       0: iload_1
       1: iload_2
       2: aload_0
       3: invokevirtual #4                  // Method getWidth:()I
       6: imul
       7: iadd
       8: iconst_4
       9: imul
      10: istore        4
      12: aload_0
      13: getfield      #7                  // Field buf:[F
      16: iload         4
      18: iconst_0
      19: iadd
      20: fload_3
      21: fastore
      22: aload_0
      23: invokespecial #1                  // Method markDirty:()V
      26: return

  public void setSamples(int, int, float, float);
    Code:
       0: iload_1
       1: iload_2
       2: aload_0
       3: invokevirtual #4                  // Method getWidth:()I
       6: imul
       7: iadd
       8: iconst_4
       9: imul
      10: istore        5
      12: aload_0
      13: getfield      #7                  // Field buf:[F
      16: iload         5
      18: iconst_0
      19: iadd
      20: fload_3
      21: fastore
      22: aload_0
      23: getfield      #7                  // Field buf:[F
      26: iload         5
      28: iconst_1
      29: iadd
      30: fload         4
      32: fastore
      33: aload_0
      34: invokespecial #1                  // Method markDirty:()V
      37: return

  public void setSamples(int, int, float, float, float);
    Code:
       0: iload_1
       1: iload_2
       2: aload_0
       3: invokevirtual #4                  // Method getWidth:()I
       6: imul
       7: iadd
       8: iconst_4
       9: imul
      10: istore        6
      12: aload_0
      13: getfield      #7                  // Field buf:[F
      16: iload         6
      18: iconst_0
      19: iadd
      20: fload_3
      21: fastore
      22: aload_0
      23: getfield      #7                  // Field buf:[F
      26: iload         6
      28: iconst_1
      29: iadd
      30: fload         4
      32: fastore
      33: aload_0
      34: getfield      #7                  // Field buf:[F
      37: iload         6
      39: iconst_2
      40: iadd
      41: fload         5
      43: fastore
      44: aload_0
      45: invokespecial #1                  // Method markDirty:()V
      48: return

  public void setSamples(int, int, float, float, float, float);
    Code:
       0: iload_1
       1: iload_2
       2: aload_0
       3: invokevirtual #4                  // Method getWidth:()I
       6: imul
       7: iadd
       8: iconst_4
       9: imul
      10: istore        7
      12: aload_0
      13: getfield      #7                  // Field buf:[F
      16: iload         7
      18: iconst_0
      19: iadd
      20: fload_3
      21: fastore
      22: aload_0
      23: getfield      #7                  // Field buf:[F
      26: iload         7
      28: iconst_1
      29: iadd
      30: fload         4
      32: fastore
      33: aload_0
      34: getfield      #7                  // Field buf:[F
      37: iload         7
      39: iconst_2
      40: iadd
      41: fload         5
      43: fastore
      44: aload_0
      45: getfield      #7                  // Field buf:[F
      48: iload         7
      50: iconst_3
      51: iadd
      52: fload         6
      54: fastore
      55: aload_0
      56: invokespecial #1                  // Method markDirty:()V
      59: return

  javafx.scene.effect.FloatMap copy();
    Code:
       0: new           #37                 // class javafx/scene/effect/FloatMap
       3: dup
       4: aload_0
       5: invokevirtual #4                  // Method getWidth:()I
       8: aload_0
       9: invokevirtual #5                  // Method getHeight:()I
      12: invokespecial #38                 // Method "<init>":(II)V
      15: astore_1
      16: aload_0
      17: getfield      #7                  // Field buf:[F
      20: iconst_0
      21: aload_1
      22: getfield      #7                  // Field buf:[F
      25: iconst_0
      26: aload_0
      27: getfield      #7                  // Field buf:[F
      30: arraylength
      31: invokestatic  #39                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      34: aload_1
      35: areturn

  static void access$000(javafx.scene.effect.FloatMap);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method updateBuffer:()V
       4: return

  static void access$100(javafx.scene.effect.FloatMap);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method markDirty:()V
       4: return
}
