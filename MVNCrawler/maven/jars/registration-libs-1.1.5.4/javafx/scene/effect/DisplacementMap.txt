Compiled from "DisplacementMap.java"
public class javafx.scene.effect.DisplacementMap extends javafx.scene.effect.Effect {
  private javafx.beans.property.ObjectProperty<javafx.scene.effect.Effect> input;

  private final javafx.scene.effect.FloatMap defaultMap;

  private javafx.beans.property.ObjectProperty<javafx.scene.effect.FloatMap> mapData;

  private final javafx.scene.effect.DisplacementMap$MapDataChangeListener mapDataChangeListener;

  private javafx.beans.property.DoubleProperty scaleX;

  private javafx.beans.property.DoubleProperty scaleY;

  private javafx.beans.property.DoubleProperty offsetX;

  private javafx.beans.property.DoubleProperty offsetY;

  private javafx.beans.property.BooleanProperty wrap;

  com.sun.scenario.effect.DisplacementMap createPeer();
    Code:
       0: new           #1                  // class com/sun/scenario/effect/DisplacementMap
       3: dup
       4: new           #2                  // class com/sun/scenario/effect/FloatMap
       7: dup
       8: iconst_1
       9: iconst_1
      10: invokespecial #3                  // Method com/sun/scenario/effect/FloatMap."<init>":(II)V
      13: getstatic     #4                  // Field com/sun/scenario/effect/Effect.DefaultInput:Lcom/sun/scenario/effect/Effect;
      16: invokespecial #5                  // Method com/sun/scenario/effect/DisplacementMap."<init>":(Lcom/sun/scenario/effect/FloatMap;Lcom/sun/scenario/effect/Effect;)V
      19: areturn

  public javafx.scene.effect.DisplacementMap();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method javafx/scene/effect/Effect."<init>":()V
       4: aload_0
       5: new           #7                  // class javafx/scene/effect/FloatMap
       8: dup
       9: iconst_1
      10: iconst_1
      11: invokespecial #8                  // Method javafx/scene/effect/FloatMap."<init>":(II)V
      14: putfield      #9                  // Field defaultMap:Ljavafx/scene/effect/FloatMap;
      17: aload_0
      18: new           #10                 // class javafx/scene/effect/DisplacementMap$MapDataChangeListener
      21: dup
      22: aload_0
      23: aconst_null
      24: invokespecial #11                 // Method javafx/scene/effect/DisplacementMap$MapDataChangeListener."<init>":(Ljavafx/scene/effect/DisplacementMap;Ljavafx/scene/effect/DisplacementMap$1;)V
      27: putfield      #12                 // Field mapDataChangeListener:Ljavafx/scene/effect/DisplacementMap$MapDataChangeListener;
      30: aload_0
      31: new           #7                  // class javafx/scene/effect/FloatMap
      34: dup
      35: iconst_1
      36: iconst_1
      37: invokespecial #8                  // Method javafx/scene/effect/FloatMap."<init>":(II)V
      40: invokevirtual #13                 // Method setMapData:(Ljavafx/scene/effect/FloatMap;)V
      43: return

  public javafx.scene.effect.DisplacementMap(javafx.scene.effect.FloatMap);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method javafx/scene/effect/Effect."<init>":()V
       4: aload_0
       5: new           #7                  // class javafx/scene/effect/FloatMap
       8: dup
       9: iconst_1
      10: iconst_1
      11: invokespecial #8                  // Method javafx/scene/effect/FloatMap."<init>":(II)V
      14: putfield      #9                  // Field defaultMap:Ljavafx/scene/effect/FloatMap;
      17: aload_0
      18: new           #10                 // class javafx/scene/effect/DisplacementMap$MapDataChangeListener
      21: dup
      22: aload_0
      23: aconst_null
      24: invokespecial #11                 // Method javafx/scene/effect/DisplacementMap$MapDataChangeListener."<init>":(Ljavafx/scene/effect/DisplacementMap;Ljavafx/scene/effect/DisplacementMap$1;)V
      27: putfield      #12                 // Field mapDataChangeListener:Ljavafx/scene/effect/DisplacementMap$MapDataChangeListener;
      30: aload_0
      31: aload_1
      32: invokevirtual #13                 // Method setMapData:(Ljavafx/scene/effect/FloatMap;)V
      35: return

  public javafx.scene.effect.DisplacementMap(javafx.scene.effect.FloatMap, double, double, double, double);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method javafx/scene/effect/Effect."<init>":()V
       4: aload_0
       5: new           #7                  // class javafx/scene/effect/FloatMap
       8: dup
       9: iconst_1
      10: iconst_1
      11: invokespecial #8                  // Method javafx/scene/effect/FloatMap."<init>":(II)V
      14: putfield      #9                  // Field defaultMap:Ljavafx/scene/effect/FloatMap;
      17: aload_0
      18: new           #10                 // class javafx/scene/effect/DisplacementMap$MapDataChangeListener
      21: dup
      22: aload_0
      23: aconst_null
      24: invokespecial #11                 // Method javafx/scene/effect/DisplacementMap$MapDataChangeListener."<init>":(Ljavafx/scene/effect/DisplacementMap;Ljavafx/scene/effect/DisplacementMap$1;)V
      27: putfield      #12                 // Field mapDataChangeListener:Ljavafx/scene/effect/DisplacementMap$MapDataChangeListener;
      30: aload_0
      31: aload_1
      32: invokevirtual #13                 // Method setMapData:(Ljavafx/scene/effect/FloatMap;)V
      35: aload_0
      36: dload_2
      37: invokevirtual #14                 // Method setOffsetX:(D)V
      40: aload_0
      41: dload         4
      43: invokevirtual #15                 // Method setOffsetY:(D)V
      46: aload_0
      47: dload         6
      49: invokevirtual #16                 // Method setScaleX:(D)V
      52: aload_0
      53: dload         8
      55: invokevirtual #17                 // Method setScaleY:(D)V
      58: return

  public final void setInput(javafx.scene.effect.Effect);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method inputProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #19                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.scene.effect.Effect getInput();
    Code:
       0: aload_0
       1: getfield      #20                 // Field input:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #20                 // Field input:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #21                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #22                 // class javafx/scene/effect/Effect
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.scene.effect.Effect> inputProperty();
    Code:
       0: aload_0
       1: getfield      #20                 // Field input:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     21
       7: aload_0
       8: new           #23                 // class javafx/scene/effect/Effect$EffectInputProperty
      11: dup
      12: aload_0
      13: ldc           #24                 // String input
      15: invokespecial #25                 // Method javafx/scene/effect/Effect$EffectInputProperty."<init>":(Ljavafx/scene/effect/Effect;Ljava/lang/String;)V
      18: putfield      #20                 // Field input:Ljavafx/beans/property/ObjectProperty;
      21: aload_0
      22: getfield      #20                 // Field input:Ljavafx/beans/property/ObjectProperty;
      25: areturn

  boolean checkChainContains(javafx.scene.effect.Effect);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method getInput:()Ljavafx/scene/effect/Effect;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: aload_2
      12: aload_1
      13: if_acmpne     18
      16: iconst_1
      17: ireturn
      18: aload_2
      19: aload_1
      20: invokevirtual #27                 // Method javafx/scene/effect/Effect.checkChainContains:(Ljavafx/scene/effect/Effect;)Z
      23: ireturn

  public final void setMapData(javafx.scene.effect.FloatMap);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method mapDataProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #19                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.scene.effect.FloatMap getMapData();
    Code:
       0: aload_0
       1: getfield      #29                 // Field mapData:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #29                 // Field mapData:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #21                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #7                  // class javafx/scene/effect/FloatMap
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.scene.effect.FloatMap> mapDataProperty();
    Code:
       0: aload_0
       1: getfield      #29                 // Field mapData:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #30                 // class javafx/scene/effect/DisplacementMap$1
      11: dup
      12: aload_0
      13: invokespecial #31                 // Method javafx/scene/effect/DisplacementMap$1."<init>":(Ljavafx/scene/effect/DisplacementMap;)V
      16: putfield      #29                 // Field mapData:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #29                 // Field mapData:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setScaleX(double);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method scaleXProperty:()Ljavafx/beans/property/DoubleProperty;
       4: dload_1
       5: invokevirtual #33                 // Method javafx/beans/property/DoubleProperty.set:(D)V
       8: return

  public final double getScaleX();
    Code:
       0: aload_0
       1: getfield      #34                 // Field scaleX:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     11
       7: dconst_1
       8: goto          18
      11: aload_0
      12: getfield      #34                 // Field scaleX:Ljavafx/beans/property/DoubleProperty;
      15: invokevirtual #35                 // Method javafx/beans/property/DoubleProperty.get:()D
      18: dreturn

  public final javafx.beans.property.DoubleProperty scaleXProperty();
    Code:
       0: aload_0
       1: getfield      #34                 // Field scaleX:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #36                 // class javafx/scene/effect/DisplacementMap$2
      11: dup
      12: aload_0
      13: dconst_1
      14: invokespecial #37                 // Method javafx/scene/effect/DisplacementMap$2."<init>":(Ljavafx/scene/effect/DisplacementMap;D)V
      17: putfield      #34                 // Field scaleX:Ljavafx/beans/property/DoubleProperty;
      20: aload_0
      21: getfield      #34                 // Field scaleX:Ljavafx/beans/property/DoubleProperty;
      24: areturn

  public final void setScaleY(double);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method scaleYProperty:()Ljavafx/beans/property/DoubleProperty;
       4: dload_1
       5: invokevirtual #33                 // Method javafx/beans/property/DoubleProperty.set:(D)V
       8: return

  public final double getScaleY();
    Code:
       0: aload_0
       1: getfield      #39                 // Field scaleY:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     11
       7: dconst_1
       8: goto          18
      11: aload_0
      12: getfield      #39                 // Field scaleY:Ljavafx/beans/property/DoubleProperty;
      15: invokevirtual #35                 // Method javafx/beans/property/DoubleProperty.get:()D
      18: dreturn

  public final javafx.beans.property.DoubleProperty scaleYProperty();
    Code:
       0: aload_0
       1: getfield      #39                 // Field scaleY:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #40                 // class javafx/scene/effect/DisplacementMap$3
      11: dup
      12: aload_0
      13: dconst_1
      14: invokespecial #41                 // Method javafx/scene/effect/DisplacementMap$3."<init>":(Ljavafx/scene/effect/DisplacementMap;D)V
      17: putfield      #39                 // Field scaleY:Ljavafx/beans/property/DoubleProperty;
      20: aload_0
      21: getfield      #39                 // Field scaleY:Ljavafx/beans/property/DoubleProperty;
      24: areturn

  public final void setOffsetX(double);
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method offsetXProperty:()Ljavafx/beans/property/DoubleProperty;
       4: dload_1
       5: invokevirtual #33                 // Method javafx/beans/property/DoubleProperty.set:(D)V
       8: return

  public final double getOffsetX();
    Code:
       0: aload_0
       1: getfield      #43                 // Field offsetX:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     11
       7: dconst_0
       8: goto          18
      11: aload_0
      12: getfield      #43                 // Field offsetX:Ljavafx/beans/property/DoubleProperty;
      15: invokevirtual #35                 // Method javafx/beans/property/DoubleProperty.get:()D
      18: dreturn

  public final javafx.beans.property.DoubleProperty offsetXProperty();
    Code:
       0: aload_0
       1: getfield      #43                 // Field offsetX:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #44                 // class javafx/scene/effect/DisplacementMap$4
      11: dup
      12: aload_0
      13: invokespecial #45                 // Method javafx/scene/effect/DisplacementMap$4."<init>":(Ljavafx/scene/effect/DisplacementMap;)V
      16: putfield      #43                 // Field offsetX:Ljavafx/beans/property/DoubleProperty;
      19: aload_0
      20: getfield      #43                 // Field offsetX:Ljavafx/beans/property/DoubleProperty;
      23: areturn

  public final void setOffsetY(double);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method offsetYProperty:()Ljavafx/beans/property/DoubleProperty;
       4: dload_1
       5: invokevirtual #33                 // Method javafx/beans/property/DoubleProperty.set:(D)V
       8: return

  public final double getOffsetY();
    Code:
       0: aload_0
       1: getfield      #47                 // Field offsetY:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     11
       7: dconst_0
       8: goto          18
      11: aload_0
      12: getfield      #47                 // Field offsetY:Ljavafx/beans/property/DoubleProperty;
      15: invokevirtual #35                 // Method javafx/beans/property/DoubleProperty.get:()D
      18: dreturn

  public final javafx.beans.property.DoubleProperty offsetYProperty();
    Code:
       0: aload_0
       1: getfield      #47                 // Field offsetY:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #48                 // class javafx/scene/effect/DisplacementMap$5
      11: dup
      12: aload_0
      13: invokespecial #49                 // Method javafx/scene/effect/DisplacementMap$5."<init>":(Ljavafx/scene/effect/DisplacementMap;)V
      16: putfield      #47                 // Field offsetY:Ljavafx/beans/property/DoubleProperty;
      19: aload_0
      20: getfield      #47                 // Field offsetY:Ljavafx/beans/property/DoubleProperty;
      23: areturn

  public final void setWrap(boolean);
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method wrapProperty:()Ljavafx/beans/property/BooleanProperty;
       4: iload_1
       5: invokevirtual #51                 // Method javafx/beans/property/BooleanProperty.set:(Z)V
       8: return

  public final boolean isWrap();
    Code:
       0: aload_0
       1: getfield      #52                 // Field wrap:Ljavafx/beans/property/BooleanProperty;
       4: ifnonnull     11
       7: iconst_0
       8: goto          18
      11: aload_0
      12: getfield      #52                 // Field wrap:Ljavafx/beans/property/BooleanProperty;
      15: invokevirtual #53                 // Method javafx/beans/property/BooleanProperty.get:()Z
      18: ireturn

  public final javafx.beans.property.BooleanProperty wrapProperty();
    Code:
       0: aload_0
       1: getfield      #52                 // Field wrap:Ljavafx/beans/property/BooleanProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #54                 // class javafx/scene/effect/DisplacementMap$6
      11: dup
      12: aload_0
      13: invokespecial #55                 // Method javafx/scene/effect/DisplacementMap$6."<init>":(Ljavafx/scene/effect/DisplacementMap;)V
      16: putfield      #52                 // Field wrap:Ljavafx/beans/property/BooleanProperty;
      19: aload_0
      20: getfield      #52                 // Field wrap:Ljavafx/beans/property/BooleanProperty;
      23: areturn

  void update();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method getInput:()Ljavafx/scene/effect/Effect;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: aload_1
      10: invokevirtual #56                 // Method javafx/scene/effect/Effect.sync:()V
      13: aload_0
      14: invokevirtual #57                 // Method getPeer:()Lcom/sun/scenario/effect/Effect;
      17: checkcast     #1                  // class com/sun/scenario/effect/DisplacementMap
      20: astore_2
      21: aload_2
      22: aload_1
      23: ifnonnull     30
      26: aconst_null
      27: goto          34
      30: aload_1
      31: invokevirtual #58                 // Method javafx/scene/effect/Effect.getPeer:()Lcom/sun/scenario/effect/Effect;
      34: invokevirtual #59                 // Method com/sun/scenario/effect/DisplacementMap.setContentInput:(Lcom/sun/scenario/effect/Effect;)V
      37: aload_0
      38: invokevirtual #60                 // Method getMapData:()Ljavafx/scene/effect/FloatMap;
      41: astore_3
      42: aload_0
      43: getfield      #12                 // Field mapDataChangeListener:Ljavafx/scene/effect/DisplacementMap$MapDataChangeListener;
      46: aload_3
      47: invokevirtual #61                 // Method javafx/scene/effect/DisplacementMap$MapDataChangeListener.register:(Ljavafx/scene/effect/FloatMap;)V
      50: aload_3
      51: ifnull        69
      54: aload_3
      55: invokevirtual #62                 // Method javafx/scene/effect/FloatMap.sync:()V
      58: aload_2
      59: aload_3
      60: invokevirtual #63                 // Method javafx/scene/effect/FloatMap.getImpl:()Lcom/sun/scenario/effect/FloatMap;
      63: invokevirtual #64                 // Method com/sun/scenario/effect/DisplacementMap.setMapData:(Lcom/sun/scenario/effect/FloatMap;)V
      66: goto          87
      69: aload_0
      70: getfield      #9                  // Field defaultMap:Ljavafx/scene/effect/FloatMap;
      73: invokevirtual #62                 // Method javafx/scene/effect/FloatMap.sync:()V
      76: aload_2
      77: aload_0
      78: getfield      #9                  // Field defaultMap:Ljavafx/scene/effect/FloatMap;
      81: invokevirtual #63                 // Method javafx/scene/effect/FloatMap.getImpl:()Lcom/sun/scenario/effect/FloatMap;
      84: invokevirtual #64                 // Method com/sun/scenario/effect/DisplacementMap.setMapData:(Lcom/sun/scenario/effect/FloatMap;)V
      87: aload_2
      88: aload_0
      89: invokevirtual #65                 // Method getScaleX:()D
      92: d2f
      93: invokevirtual #66                 // Method com/sun/scenario/effect/DisplacementMap.setScaleX:(F)V
      96: aload_2
      97: aload_0
      98: invokevirtual #67                 // Method getScaleY:()D
     101: d2f
     102: invokevirtual #68                 // Method com/sun/scenario/effect/DisplacementMap.setScaleY:(F)V
     105: aload_2
     106: aload_0
     107: invokevirtual #69                 // Method getOffsetX:()D
     110: d2f
     111: invokevirtual #70                 // Method com/sun/scenario/effect/DisplacementMap.setOffsetX:(F)V
     114: aload_2
     115: aload_0
     116: invokevirtual #71                 // Method getOffsetY:()D
     119: d2f
     120: invokevirtual #72                 // Method com/sun/scenario/effect/DisplacementMap.setOffsetY:(F)V
     123: aload_2
     124: aload_0
     125: invokevirtual #73                 // Method isWrap:()Z
     128: invokevirtual #74                 // Method com/sun/scenario/effect/DisplacementMap.setWrap:(Z)V
     131: return

  com.sun.javafx.geom.BaseBounds getBounds(com.sun.javafx.geom.BaseBounds, com.sun.javafx.geom.transform.BaseTransform, javafx.scene.Node, com.sun.javafx.scene.BoundsAccessor);
    Code:
       0: aload_1
       1: getstatic     #75                 // Field com/sun/javafx/geom/transform/BaseTransform.IDENTITY_TRANSFORM:Lcom/sun/javafx/geom/transform/BaseTransform;
       4: aload_3
       5: aload         4
       7: aload_0
       8: invokevirtual #26                 // Method getInput:()Ljavafx/scene/effect/Effect;
      11: invokestatic  #76                 // Method getInputBounds:(Lcom/sun/javafx/geom/BaseBounds;Lcom/sun/javafx/geom/transform/BaseTransform;Ljavafx/scene/Node;Lcom/sun/javafx/scene/BoundsAccessor;Ljavafx/scene/effect/Effect;)Lcom/sun/javafx/geom/BaseBounds;
      14: astore_1
      15: aload_2
      16: aload_1
      17: invokestatic  #77                 // Method transformBounds:(Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/BaseBounds;)Lcom/sun/javafx/geom/BaseBounds;
      20: areturn

  javafx.scene.effect.Effect copy();
    Code:
       0: new           #78                 // class javafx/scene/effect/DisplacementMap
       3: dup
       4: aload_0
       5: invokevirtual #60                 // Method getMapData:()Ljavafx/scene/effect/FloatMap;
       8: invokevirtual #79                 // Method javafx/scene/effect/FloatMap.copy:()Ljavafx/scene/effect/FloatMap;
      11: aload_0
      12: invokevirtual #69                 // Method getOffsetX:()D
      15: aload_0
      16: invokevirtual #71                 // Method getOffsetY:()D
      19: aload_0
      20: invokevirtual #65                 // Method getScaleX:()D
      23: aload_0
      24: invokevirtual #67                 // Method getScaleY:()D
      27: invokespecial #80                 // Method "<init>":(Ljavafx/scene/effect/FloatMap;DDDD)V
      30: astore_1
      31: aload_1
      32: aload_0
      33: invokevirtual #26                 // Method getInput:()Ljavafx/scene/effect/Effect;
      36: invokevirtual #81                 // Method setInput:(Ljavafx/scene/effect/Effect;)V
      39: aload_1
      40: areturn

  com.sun.scenario.effect.Effect createPeer();
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method createPeer:()Lcom/sun/scenario/effect/DisplacementMap;
       4: areturn
}
