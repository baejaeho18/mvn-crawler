Compiled from "ControlUtils.java"
class javafx.scene.control.ControlUtils {
  private javafx.scene.control.ControlUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void scrollToIndex(javafx.scene.control.Control, int);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method javafx/scene/control/Control.skinProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_0
       5: iload_1
       6: invokedynamic #3,  0              // InvokeDynamic #0:accept:(Ljavafx/scene/control/Control;I)Ljava/util/function/Consumer;
      11: invokestatic  #4                  // Method com/sun/javafx/scene/control/skin/Utils.executeOnceWhenPropertyIsNonNull:(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Consumer;)V
      14: return

  public static void scrollToColumn(javafx.scene.control.Control, javafx.scene.control.TableColumnBase<?, ?>);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method javafx/scene/control/Control.skinProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_0
       5: aload_1
       6: invokedynamic #5,  0              // InvokeDynamic #1:accept:(Ljavafx/scene/control/Control;Ljavafx/scene/control/TableColumnBase;)Ljava/util/function/Consumer;
      11: invokestatic  #4                  // Method com/sun/javafx/scene/control/skin/Utils.executeOnceWhenPropertyIsNonNull:(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Consumer;)V
      14: return

  static void requestFocusOnControlOnlyIfCurrentFocusOwnerIsChild(javafx.scene.control.Control);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method javafx/scene/control/Control.getScene:()Ljavafx/scene/Scene;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: aconst_null
      10: goto          17
      13: aload_1
      14: invokevirtual #7                  // Method javafx/scene/Scene.getFocusOwner:()Ljavafx/scene/Node;
      17: astore_2
      18: aload_2
      19: ifnonnull     29
      22: aload_0
      23: invokevirtual #8                  // Method javafx/scene/control/Control.requestFocus:()V
      26: goto          69
      29: aload_0
      30: aload_2
      31: invokevirtual #9                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      34: ifne          69
      37: aload_2
      38: invokevirtual #10                 // Method javafx/scene/Node.getParent:()Ljavafx/scene/Parent;
      41: astore_3
      42: aload_3
      43: ifnull        69
      46: aload_0
      47: aload_3
      48: invokevirtual #9                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      51: ifeq          61
      54: aload_0
      55: invokevirtual #8                  // Method javafx/scene/control/Control.requestFocus:()V
      58: goto          69
      61: aload_3
      62: invokevirtual #11                 // Method javafx/scene/Parent.getParent:()Ljavafx/scene/Parent;
      65: astore_3
      66: goto          42
      69: return

  static <T> javafx.collections.ListChangeListener$Change<T> buildClearAndSelectChange(javafx.collections.ObservableList<T>, java.util.List<T>, int);
    Code:
       0: new           #12                 // class javafx/scene/control/ControlUtils$1
       3: dup
       4: aload_0
       5: aload_1
       6: iload_2
       7: invokespecial #13                 // Method javafx/scene/control/ControlUtils$1."<init>":(Ljavafx/collections/ObservableList;Ljava/util/List;I)V
      10: areturn

  public static <S> void updateSelectedIndices(javafx.scene.control.MultipleSelectionModelBase<S>, javafx.collections.ListChangeListener$Change<? extends javafx.scene.control.TablePositionBase<?>>);
    Code:
       0: aload_0
       1: getfield      #14                 // Field javafx/scene/control/MultipleSelectionModelBase.selectedIndices:Ljavafx/scene/control/MultipleSelectionModelBase$SelectedIndicesList;
       4: invokevirtual #15                 // Method javafx/scene/control/MultipleSelectionModelBase$SelectedIndicesList._beginChange:()V
       7: aload_1
       8: invokevirtual #16                 // Method javafx/collections/ListChangeListener$Change.next:()Z
      11: ifeq          204
      14: aload_0
      15: invokevirtual #17                 // Method javafx/scene/control/MultipleSelectionModelBase.startAtomic:()V
      18: aload_1
      19: invokevirtual #18                 // Method javafx/collections/ListChangeListener$Change.getRemoved:()Ljava/util/List;
      22: invokeinterface #19,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      27: invokedynamic #20,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      32: invokeinterface #21,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      37: invokeinterface #22,  1           // InterfaceMethod java/util/stream/Stream.distinct:()Ljava/util/stream/Stream;
      42: aload_0
      43: getfield      #14                 // Field javafx/scene/control/MultipleSelectionModelBase.selectedIndices:Ljavafx/scene/control/MultipleSelectionModelBase$SelectedIndicesList;
      46: dup
      47: invokestatic  #23                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: invokedynamic #24,  0             // InvokeDynamic #3:accept:(Ljavafx/scene/control/MultipleSelectionModelBase$SelectedIndicesList;)Ljava/util/function/Consumer;
      56: invokeinterface #25,  2           // InterfaceMethod java/util/stream/Stream.peek:(Ljava/util/function/Consumer;)Ljava/util/stream/Stream;
      61: invokestatic  #26                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      64: invokeinterface #27,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      69: checkcast     #28                 // class java/util/List
      72: astore_2
      73: aload_1
      74: invokevirtual #29                 // Method javafx/collections/ListChangeListener$Change.getAddedSubList:()Ljava/util/List;
      77: invokeinterface #19,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      82: invokedynamic #20,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      87: invokeinterface #21,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      92: invokeinterface #22,  1           // InterfaceMethod java/util/stream/Stream.distinct:()Ljava/util/stream/Stream;
      97: aload_0
      98: getfield      #14                 // Field javafx/scene/control/MultipleSelectionModelBase.selectedIndices:Ljavafx/scene/control/MultipleSelectionModelBase$SelectedIndicesList;
     101: dup
     102: invokestatic  #23                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
     105: pop
     106: invokedynamic #30,  0             // InvokeDynamic #4:accept:(Ljavafx/scene/control/MultipleSelectionModelBase$SelectedIndicesList;)Ljava/util/function/Consumer;
     111: invokeinterface #25,  2           // InterfaceMethod java/util/stream/Stream.peek:(Ljava/util/function/Consumer;)Ljava/util/stream/Stream;
     116: invokeinterface #31,  1           // InterfaceMethod java/util/stream/Stream.count:()J
     121: l2i
     122: istore_3
     123: aload_0
     124: invokevirtual #32                 // Method javafx/scene/control/MultipleSelectionModelBase.stopAtomic:()V
     127: aload_1
     128: invokevirtual #33                 // Method javafx/collections/ListChangeListener$Change.getFrom:()I
     131: iload_3
     132: iadd
     133: istore        4
     135: aload_1
     136: invokevirtual #34                 // Method javafx/collections/ListChangeListener$Change.wasReplaced:()Z
     139: ifeq          159
     142: aload_0
     143: getfield      #14                 // Field javafx/scene/control/MultipleSelectionModelBase.selectedIndices:Ljavafx/scene/control/MultipleSelectionModelBase$SelectedIndicesList;
     146: aload_1
     147: invokevirtual #33                 // Method javafx/collections/ListChangeListener$Change.getFrom:()I
     150: iload         4
     152: aload_2
     153: invokevirtual #35                 // Method javafx/scene/control/MultipleSelectionModelBase$SelectedIndicesList._nextReplace:(IILjava/util/List;)V
     156: goto          201
     159: aload_1
     160: invokevirtual #36                 // Method javafx/collections/ListChangeListener$Change.wasRemoved:()Z
     163: ifeq          181
     166: aload_0
     167: getfield      #14                 // Field javafx/scene/control/MultipleSelectionModelBase.selectedIndices:Ljavafx/scene/control/MultipleSelectionModelBase$SelectedIndicesList;
     170: aload_1
     171: invokevirtual #33                 // Method javafx/collections/ListChangeListener$Change.getFrom:()I
     174: aload_2
     175: invokevirtual #37                 // Method javafx/scene/control/MultipleSelectionModelBase$SelectedIndicesList._nextRemove:(ILjava/util/List;)V
     178: goto          201
     181: aload_1
     182: invokevirtual #38                 // Method javafx/collections/ListChangeListener$Change.wasAdded:()Z
     185: ifeq          201
     188: aload_0
     189: getfield      #14                 // Field javafx/scene/control/MultipleSelectionModelBase.selectedIndices:Ljavafx/scene/control/MultipleSelectionModelBase$SelectedIndicesList;
     192: aload_1
     193: invokevirtual #33                 // Method javafx/collections/ListChangeListener$Change.getFrom:()I
     196: iload         4
     198: invokevirtual #39                 // Method javafx/scene/control/MultipleSelectionModelBase$SelectedIndicesList._nextAdd:(II)V
     201: goto          7
     204: aload_1
     205: invokevirtual #40                 // Method javafx/collections/ListChangeListener$Change.reset:()V
     208: aload_0
     209: getfield      #14                 // Field javafx/scene/control/MultipleSelectionModelBase.selectedIndices:Ljavafx/scene/control/MultipleSelectionModelBase$SelectedIndicesList;
     212: invokevirtual #41                 // Method javafx/scene/control/MultipleSelectionModelBase$SelectedIndicesList.reset:()V
     215: aload_0
     216: invokevirtual #42                 // Method javafx/scene/control/MultipleSelectionModelBase.isAtomic:()Z
     219: ifeq          223
     222: return
     223: aload_0
     224: invokevirtual #43                 // Method javafx/scene/control/MultipleSelectionModelBase.getSelectedItems:()Ljavafx/collections/ObservableList;
     227: invokeinterface #44,  1           // InterfaceMethod javafx/collections/ObservableList.isEmpty:()Z
     232: ifeq          247
     235: aload_0
     236: invokevirtual #45                 // Method javafx/scene/control/MultipleSelectionModelBase.getSelectedItem:()Ljava/lang/Object;
     239: ifnull        247
     242: aload_0
     243: aconst_null
     244: invokevirtual #46                 // Method javafx/scene/control/MultipleSelectionModelBase.setSelectedItem:(Ljava/lang/Object;)V
     247: aload_0
     248: getfield      #14                 // Field javafx/scene/control/MultipleSelectionModelBase.selectedIndices:Ljavafx/scene/control/MultipleSelectionModelBase$SelectedIndicesList;
     251: invokevirtual #47                 // Method javafx/scene/control/MultipleSelectionModelBase$SelectedIndicesList._endChange:()V
     254: return

  static void reducingChange(javafx.scene.control.MultipleSelectionModelBase<?>.SelectedIndicesList, java.util.List<java.lang.Integer>);
    Code:
       0: aload_1
       1: invokeinterface #48,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       6: ifeq          10
       9: return
      10: iconst_0
      11: istore_2
      12: iconst_1
      13: istore_3
      14: iconst_0
      15: istore        4
      17: iload_3
      18: aload_1
      19: invokeinterface #49,  1           // InterfaceMethod java/util/List.size:()I
      24: if_icmpge     99
      27: aload_1
      28: iload_2
      29: invokeinterface #50,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      34: checkcast     #51                 // class java/lang/Integer
      37: invokevirtual #52                 // Method java/lang/Integer.intValue:()I
      40: aload_1
      41: iload_3
      42: invokeinterface #50,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      47: checkcast     #51                 // class java/lang/Integer
      50: invokevirtual #52                 // Method java/lang/Integer.intValue:()I
      53: iconst_1
      54: isub
      55: if_icmpne     64
      58: iinc          3, 1
      61: goto          17
      64: aload_0
      65: aload_0
      66: aload_1
      67: iload_2
      68: invokeinterface #50,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      73: invokevirtual #53                 // Method javafx/scene/control/MultipleSelectionModelBase$SelectedIndicesList.indexOf:(Ljava/lang/Object;)I
      76: aload_1
      77: iload_2
      78: iload_3
      79: invokeinterface #54,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      84: invokevirtual #37                 // Method javafx/scene/control/MultipleSelectionModelBase$SelectedIndicesList._nextRemove:(ILjava/util/List;)V
      87: iload_3
      88: istore_2
      89: iload_2
      90: iconst_1
      91: iadd
      92: istore_3
      93: iconst_1
      94: istore        4
      96: goto          17
      99: iload         4
     101: ifne          120
     104: aload_0
     105: aload_0
     106: aload_1
     107: iconst_0
     108: invokeinterface #50,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     113: invokevirtual #53                 // Method javafx/scene/control/MultipleSelectionModelBase$SelectedIndicesList.indexOf:(Ljava/lang/Object;)I
     116: aload_1
     117: invokevirtual #37                 // Method javafx/scene/control/MultipleSelectionModelBase$SelectedIndicesList._nextRemove:(ILjava/util/List;)V
     120: return

  private static void lambda$scrollToColumn$1(javafx.scene.control.Control, javafx.scene.control.TableColumnBase, javafx.scene.control.Skin);
    Code:
       0: aload_0
       1: new           #55                 // class javafx/scene/control/ScrollToEvent
       4: dup
       5: aload_0
       6: aload_0
       7: invokestatic  #56                 // Method javafx/scene/control/ScrollToEvent.scrollToColumn:()Ljavafx/event/EventType;
      10: aload_1
      11: invokespecial #57                 // Method javafx/scene/control/ScrollToEvent."<init>":(Ljava/lang/Object;Ljavafx/event/EventTarget;Ljavafx/event/EventType;Ljava/lang/Object;)V
      14: invokevirtual #58                 // Method javafx/scene/control/Control.fireEvent:(Ljavafx/event/Event;)V
      17: return

  private static void lambda$scrollToIndex$0(javafx.scene.control.Control, int, javafx.scene.control.Skin);
    Code:
       0: aload_0
       1: new           #55                 // class javafx/scene/control/ScrollToEvent
       4: dup
       5: aload_0
       6: aload_0
       7: invokestatic  #59                 // Method javafx/scene/control/ScrollToEvent.scrollToTopIndex:()Ljavafx/event/EventType;
      10: iload_1
      11: invokestatic  #60                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: invokespecial #57                 // Method javafx/scene/control/ScrollToEvent."<init>":(Ljava/lang/Object;Ljavafx/event/EventTarget;Ljavafx/event/EventType;Ljava/lang/Object;)V
      17: invokestatic  #61                 // Method javafx/event/Event.fireEvent:(Ljavafx/event/EventTarget;Ljavafx/event/Event;)V
      20: return
}
