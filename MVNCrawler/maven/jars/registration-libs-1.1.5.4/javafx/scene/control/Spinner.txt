Compiled from "Spinner.java"
public class javafx.scene.control.Spinner<T> extends javafx.scene.control.Control {
  private static final java.lang.String DEFAULT_STYLE_CLASS;

  public static final java.lang.String STYLE_CLASS_ARROWS_ON_RIGHT_HORIZONTAL;

  public static final java.lang.String STYLE_CLASS_ARROWS_ON_LEFT_VERTICAL;

  public static final java.lang.String STYLE_CLASS_ARROWS_ON_LEFT_HORIZONTAL;

  public static final java.lang.String STYLE_CLASS_SPLIT_ARROWS_VERTICAL;

  public static final java.lang.String STYLE_CLASS_SPLIT_ARROWS_HORIZONTAL;

  private javafx.beans.property.ReadOnlyObjectWrapper<T> value;

  private javafx.beans.property.ObjectProperty<javafx.scene.control.SpinnerValueFactory<T>> valueFactory;

  private javafx.beans.property.BooleanProperty editable;

  private javafx.scene.control.TextField textField;

  private javafx.beans.property.ReadOnlyObjectWrapper<javafx.scene.control.TextField> editor;

  private final javafx.beans.property.ObjectProperty<javafx.util.Duration> initialDelay;

  private final javafx.beans.property.ObjectProperty<javafx.util.Duration> repeatDelay;

  private static final javafx.css.CssMetaData<javafx.scene.control.Spinner<?>, javafx.util.Duration> INITIAL_DELAY;

  private static final javafx.css.CssMetaData<javafx.scene.control.Spinner<?>, javafx.util.Duration> REPEAT_DELAY;

  private static final java.util.List<javafx.css.CssMetaData<? extends javafx.css.Styleable, ?>> STYLEABLES;

  public javafx.scene.control.Spinner();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method javafx/scene/control/Control."<init>":()V
       4: aload_0
       5: new           #3                  // class javafx/beans/property/ReadOnlyObjectWrapper
       8: dup
       9: aload_0
      10: ldc           #4                  // String value
      12: invokespecial #5                  // Method javafx/beans/property/ReadOnlyObjectWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      15: putfield      #1                  // Field value:Ljavafx/beans/property/ReadOnlyObjectWrapper;
      18: aload_0
      19: new           #6                  // class javafx/scene/control/Spinner$1
      22: dup
      23: aload_0
      24: aload_0
      25: ldc           #7                  // String valueFactory
      27: invokespecial #8                  // Method javafx/scene/control/Spinner$1."<init>":(Ljavafx/scene/control/Spinner;Ljava/lang/Object;Ljava/lang/String;)V
      30: putfield      #9                  // Field valueFactory:Ljavafx/beans/property/ObjectProperty;
      33: aload_0
      34: new           #10                 // class javafx/css/SimpleStyleableObjectProperty
      37: dup
      38: getstatic     #11                 // Field INITIAL_DELAY:Ljavafx/css/CssMetaData;
      41: aload_0
      42: ldc           #12                 // String initialDelay
      44: new           #13                 // class javafx/util/Duration
      47: dup
      48: ldc2_w        #14                 // double 300.0d
      51: invokespecial #16                 // Method javafx/util/Duration."<init>":(D)V
      54: invokespecial #17                 // Method javafx/css/SimpleStyleableObjectProperty."<init>":(Ljavafx/css/CssMetaData;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      57: putfield      #18                 // Field initialDelay:Ljavafx/beans/property/ObjectProperty;
      60: aload_0
      61: new           #10                 // class javafx/css/SimpleStyleableObjectProperty
      64: dup
      65: getstatic     #19                 // Field REPEAT_DELAY:Ljavafx/css/CssMetaData;
      68: aload_0
      69: ldc           #20                 // String repeatDelay
      71: new           #13                 // class javafx/util/Duration
      74: dup
      75: ldc2_w        #21                 // double 60.0d
      78: invokespecial #16                 // Method javafx/util/Duration."<init>":(D)V
      81: invokespecial #17                 // Method javafx/css/SimpleStyleableObjectProperty."<init>":(Ljavafx/css/CssMetaData;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      84: putfield      #23                 // Field repeatDelay:Ljavafx/beans/property/ObjectProperty;
      87: aload_0
      88: invokevirtual #24                 // Method getStyleClass:()Ljavafx/collections/ObservableList;
      91: ldc           #26                 // String spinner
      93: invokeinterface #27,  2           // InterfaceMethod javafx/collections/ObservableList.add:(Ljava/lang/Object;)Z
      98: pop
      99: aload_0
     100: getstatic     #28                 // Field javafx/scene/AccessibleRole.SPINNER:Ljavafx/scene/AccessibleRole;
     103: invokevirtual #29                 // Method setAccessibleRole:(Ljavafx/scene/AccessibleRole;)V
     106: aload_0
     107: invokevirtual #30                 // Method getEditor:()Ljavafx/scene/control/TextField;
     110: aload_0
     111: invokedynamic #31,  0             // InvokeDynamic #0:handle:(Ljavafx/scene/control/Spinner;)Ljavafx/event/EventHandler;
     116: invokevirtual #32                 // Method javafx/scene/control/TextField.setOnAction:(Ljavafx/event/EventHandler;)V
     119: aload_0
     120: invokevirtual #30                 // Method getEditor:()Ljavafx/scene/control/TextField;
     123: invokevirtual #33                 // Method javafx/scene/control/TextField.editableProperty:()Ljavafx/beans/property/BooleanProperty;
     126: aload_0
     127: invokevirtual #34                 // Method editableProperty:()Ljavafx/beans/property/BooleanProperty;
     130: invokevirtual #35                 // Method javafx/beans/property/BooleanProperty.bind:(Ljavafx/beans/value/ObservableValue;)V
     133: aload_0
     134: getfield      #1                  // Field value:Ljavafx/beans/property/ReadOnlyObjectWrapper;
     137: aload_0
     138: invokedynamic #36,  0             // InvokeDynamic #1:changed:(Ljavafx/scene/control/Spinner;)Ljavafx/beans/value/ChangeListener;
     143: invokevirtual #37                 // Method javafx/beans/property/ReadOnlyObjectWrapper.addListener:(Ljavafx/beans/value/ChangeListener;)V
     146: aload_0
     147: invokevirtual #38                 // Method getProperties:()Ljavafx/collections/ObservableMap;
     150: aload_0
     151: invokedynamic #39,  0             // InvokeDynamic #2:onChanged:(Ljavafx/scene/control/Spinner;)Ljavafx/collections/MapChangeListener;
     156: invokeinterface #40,  2           // InterfaceMethod javafx/collections/ObservableMap.addListener:(Ljavafx/collections/MapChangeListener;)V
     161: aload_0
     162: invokevirtual #41                 // Method focusedProperty:()Ljavafx/beans/property/ReadOnlyBooleanProperty;
     165: aload_0
     166: invokedynamic #42,  0             // InvokeDynamic #3:invalidated:(Ljavafx/scene/control/Spinner;)Ljavafx/beans/InvalidationListener;
     171: invokevirtual #43                 // Method javafx/beans/property/ReadOnlyBooleanProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
     174: return

  public javafx.scene.control.Spinner(int, int, int);
    Code:
       0: aload_0
       1: new           #44                 // class javafx/scene/control/SpinnerValueFactory$IntegerSpinnerValueFactory
       4: dup
       5: iload_1
       6: iload_2
       7: iload_3
       8: invokespecial #45                 // Method javafx/scene/control/SpinnerValueFactory$IntegerSpinnerValueFactory."<init>":(III)V
      11: invokespecial #46                 // Method "<init>":(Ljavafx/scene/control/SpinnerValueFactory;)V
      14: return

  public javafx.scene.control.Spinner(int, int, int, int);
    Code:
       0: aload_0
       1: new           #44                 // class javafx/scene/control/SpinnerValueFactory$IntegerSpinnerValueFactory
       4: dup
       5: iload_1
       6: iload_2
       7: iload_3
       8: iload         4
      10: invokespecial #47                 // Method javafx/scene/control/SpinnerValueFactory$IntegerSpinnerValueFactory."<init>":(IIII)V
      13: invokespecial #46                 // Method "<init>":(Ljavafx/scene/control/SpinnerValueFactory;)V
      16: return

  public javafx.scene.control.Spinner(double, double, double);
    Code:
       0: aload_0
       1: new           #48                 // class javafx/scene/control/SpinnerValueFactory$DoubleSpinnerValueFactory
       4: dup
       5: dload_1
       6: dload_3
       7: dload         5
       9: invokespecial #49                 // Method javafx/scene/control/SpinnerValueFactory$DoubleSpinnerValueFactory."<init>":(DDD)V
      12: invokespecial #46                 // Method "<init>":(Ljavafx/scene/control/SpinnerValueFactory;)V
      15: return

  public javafx.scene.control.Spinner(double, double, double, double);
    Code:
       0: aload_0
       1: new           #48                 // class javafx/scene/control/SpinnerValueFactory$DoubleSpinnerValueFactory
       4: dup
       5: dload_1
       6: dload_3
       7: dload         5
       9: dload         7
      11: invokespecial #50                 // Method javafx/scene/control/SpinnerValueFactory$DoubleSpinnerValueFactory."<init>":(DDDD)V
      14: invokespecial #46                 // Method "<init>":(Ljavafx/scene/control/SpinnerValueFactory;)V
      17: return

  javafx.scene.control.Spinner(java.time.LocalDate, java.time.LocalDate, java.time.LocalDate);
    Code:
       0: aload_0
       1: new           #51                 // class javafx/scene/control/SpinnerValueFactory$LocalDateSpinnerValueFactory
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokespecial #52                 // Method javafx/scene/control/SpinnerValueFactory$LocalDateSpinnerValueFactory."<init>":(Ljava/time/LocalDate;Ljava/time/LocalDate;Ljava/time/LocalDate;)V
      11: invokespecial #46                 // Method "<init>":(Ljavafx/scene/control/SpinnerValueFactory;)V
      14: return

  javafx.scene.control.Spinner(java.time.LocalDate, java.time.LocalDate, java.time.LocalDate, long, java.time.temporal.TemporalUnit);
    Code:
       0: aload_0
       1: new           #51                 // class javafx/scene/control/SpinnerValueFactory$LocalDateSpinnerValueFactory
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: lload         4
      10: aload         6
      12: invokespecial #53                 // Method javafx/scene/control/SpinnerValueFactory$LocalDateSpinnerValueFactory."<init>":(Ljava/time/LocalDate;Ljava/time/LocalDate;Ljava/time/LocalDate;JLjava/time/temporal/TemporalUnit;)V
      15: invokespecial #46                 // Method "<init>":(Ljavafx/scene/control/SpinnerValueFactory;)V
      18: return

  javafx.scene.control.Spinner(java.time.LocalTime, java.time.LocalTime, java.time.LocalTime);
    Code:
       0: aload_0
       1: new           #54                 // class javafx/scene/control/SpinnerValueFactory$LocalTimeSpinnerValueFactory
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokespecial #55                 // Method javafx/scene/control/SpinnerValueFactory$LocalTimeSpinnerValueFactory."<init>":(Ljava/time/LocalTime;Ljava/time/LocalTime;Ljava/time/LocalTime;)V
      11: invokespecial #46                 // Method "<init>":(Ljavafx/scene/control/SpinnerValueFactory;)V
      14: return

  javafx.scene.control.Spinner(java.time.LocalTime, java.time.LocalTime, java.time.LocalTime, long, java.time.temporal.TemporalUnit);
    Code:
       0: aload_0
       1: new           #54                 // class javafx/scene/control/SpinnerValueFactory$LocalTimeSpinnerValueFactory
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: lload         4
      10: aload         6
      12: invokespecial #56                 // Method javafx/scene/control/SpinnerValueFactory$LocalTimeSpinnerValueFactory."<init>":(Ljava/time/LocalTime;Ljava/time/LocalTime;Ljava/time/LocalTime;JLjava/time/temporal/TemporalUnit;)V
      15: invokespecial #46                 // Method "<init>":(Ljavafx/scene/control/SpinnerValueFactory;)V
      18: return

  public javafx.scene.control.Spinner(javafx.collections.ObservableList<T>);
    Code:
       0: aload_0
       1: new           #57                 // class javafx/scene/control/SpinnerValueFactory$ListSpinnerValueFactory
       4: dup
       5: aload_1
       6: invokespecial #58                 // Method javafx/scene/control/SpinnerValueFactory$ListSpinnerValueFactory."<init>":(Ljavafx/collections/ObservableList;)V
       9: invokespecial #46                 // Method "<init>":(Ljavafx/scene/control/SpinnerValueFactory;)V
      12: return

  public javafx.scene.control.Spinner(javafx.scene.control.SpinnerValueFactory<T>);
    Code:
       0: aload_0
       1: invokespecial #59                 // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #60                 // Method setValueFactory:(Ljavafx/scene/control/SpinnerValueFactory;)V
       9: return

  public void increment();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #61                 // Method increment:(I)V
       5: return

  public void increment(int);
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method getValueFactory:()Ljavafx/scene/control/SpinnerValueFactory;
       4: astore_2
       5: aload_2
       6: ifnonnull     19
       9: new           #63                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #64                 // String Can\'t increment Spinner with a null SpinnerValueFactory
      15: invokespecial #65                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: invokevirtual #66                 // Method commitValue:()V
      23: aload_2
      24: iload_1
      25: invokevirtual #67                 // Method javafx/scene/control/SpinnerValueFactory.increment:(I)V
      28: return

  public void decrement();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #68                 // Method decrement:(I)V
       5: return

  public void decrement(int);
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method getValueFactory:()Ljavafx/scene/control/SpinnerValueFactory;
       4: astore_2
       5: aload_2
       6: ifnonnull     19
       9: new           #63                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #69                 // String Can\'t decrement Spinner with a null SpinnerValueFactory
      15: invokespecial #65                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: invokevirtual #66                 // Method commitValue:()V
      23: aload_2
      24: iload_1
      25: invokevirtual #70                 // Method javafx/scene/control/SpinnerValueFactory.decrement:(I)V
      28: return

  protected javafx.scene.control.Skin<?> createDefaultSkin();
    Code:
       0: new           #71                 // class javafx/scene/control/skin/SpinnerSkin
       3: dup
       4: aload_0
       5: invokespecial #72                 // Method javafx/scene/control/skin/SpinnerSkin."<init>":(Ljavafx/scene/control/Spinner;)V
       8: areturn

  public final void commitValue();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method isEditable:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokevirtual #30                 // Method getEditor:()Ljavafx/scene/control/TextField;
      12: invokevirtual #74                 // Method javafx/scene/control/TextField.getText:()Ljava/lang/String;
      15: astore_1
      16: aload_0
      17: invokevirtual #62                 // Method getValueFactory:()Ljavafx/scene/control/SpinnerValueFactory;
      20: astore_2
      21: aload_2
      22: ifnull        47
      25: aload_2
      26: invokevirtual #75                 // Method javafx/scene/control/SpinnerValueFactory.getConverter:()Ljavafx/util/StringConverter;
      29: astore_3
      30: aload_3
      31: ifnull        47
      34: aload_3
      35: aload_1
      36: invokevirtual #76                 // Method javafx/util/StringConverter.fromString:(Ljava/lang/String;)Ljava/lang/Object;
      39: astore        4
      41: aload_2
      42: aload         4
      44: invokevirtual #77                 // Method javafx/scene/control/SpinnerValueFactory.setValue:(Ljava/lang/Object;)V
      47: return

  public final void cancelEdit();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method isEditable:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokevirtual #78                 // Method getValue:()Ljava/lang/Object;
      12: astore_1
      13: aload_0
      14: invokevirtual #62                 // Method getValueFactory:()Ljavafx/scene/control/SpinnerValueFactory;
      17: astore_2
      18: aload_2
      19: ifnull        47
      22: aload_2
      23: invokevirtual #75                 // Method javafx/scene/control/SpinnerValueFactory.getConverter:()Ljavafx/util/StringConverter;
      26: astore_3
      27: aload_3
      28: ifnull        47
      31: aload_3
      32: aload_1
      33: invokevirtual #79                 // Method javafx/util/StringConverter.toString:(Ljava/lang/Object;)Ljava/lang/String;
      36: astore        4
      38: aload_0
      39: invokevirtual #30                 // Method getEditor:()Ljavafx/scene/control/TextField;
      42: aload         4
      44: invokevirtual #80                 // Method javafx/scene/control/TextField.setText:(Ljava/lang/String;)V
      47: return

  public final T getValue();
    Code:
       0: aload_0
       1: getfield      #1                  // Field value:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #81                 // Method javafx/beans/property/ReadOnlyObjectWrapper.get:()Ljava/lang/Object;
       7: areturn

  public final javafx.beans.property.ReadOnlyObjectProperty<T> valueProperty();
    Code:
       0: aload_0
       1: getfield      #1                  // Field value:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: areturn

  public final void setValueFactory(javafx.scene.control.SpinnerValueFactory<T>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field valueFactory:Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #82                 // Method javafx/beans/property/ObjectProperty.setValue:(Ljava/lang/Object;)V
       8: return

  public final javafx.scene.control.SpinnerValueFactory<T> getValueFactory();
    Code:
       0: aload_0
       1: getfield      #9                  // Field valueFactory:Ljavafx/beans/property/ObjectProperty;
       4: invokevirtual #83                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
       7: checkcast     #84                 // class javafx/scene/control/SpinnerValueFactory
      10: areturn

  public final javafx.beans.property.ObjectProperty<javafx.scene.control.SpinnerValueFactory<T>> valueFactoryProperty();
    Code:
       0: aload_0
       1: getfield      #9                  // Field valueFactory:Ljavafx/beans/property/ObjectProperty;
       4: areturn

  public final void setEditable(boolean);
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method editableProperty:()Ljavafx/beans/property/BooleanProperty;
       4: iload_1
       5: invokevirtual #85                 // Method javafx/beans/property/BooleanProperty.set:(Z)V
       8: return

  public final boolean isEditable();
    Code:
       0: aload_0
       1: getfield      #86                 // Field editable:Ljavafx/beans/property/BooleanProperty;
       4: ifnonnull     11
       7: iconst_1
       8: goto          18
      11: aload_0
      12: getfield      #86                 // Field editable:Ljavafx/beans/property/BooleanProperty;
      15: invokevirtual #87                 // Method javafx/beans/property/BooleanProperty.get:()Z
      18: ireturn

  public final javafx.beans.property.BooleanProperty editableProperty();
    Code:
       0: aload_0
       1: getfield      #86                 // Field editable:Ljavafx/beans/property/BooleanProperty;
       4: ifnonnull     22
       7: aload_0
       8: new           #88                 // class javafx/beans/property/SimpleBooleanProperty
      11: dup
      12: aload_0
      13: ldc           #89                 // String editable
      15: iconst_0
      16: invokespecial #90                 // Method javafx/beans/property/SimpleBooleanProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;Z)V
      19: putfield      #86                 // Field editable:Ljavafx/beans/property/BooleanProperty;
      22: aload_0
      23: getfield      #86                 // Field editable:Ljavafx/beans/property/BooleanProperty;
      26: areturn

  public final javafx.beans.property.ReadOnlyObjectProperty<javafx.scene.control.TextField> editorProperty();
    Code:
       0: aload_0
       1: getfield      #91                 // Field editor:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: ifnonnull     57
       7: aload_0
       8: new           #3                  // class javafx/beans/property/ReadOnlyObjectWrapper
      11: dup
      12: aload_0
      13: ldc           #92                 // String editor
      15: invokespecial #5                  // Method javafx/beans/property/ReadOnlyObjectWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      18: putfield      #91                 // Field editor:Ljavafx/beans/property/ReadOnlyObjectWrapper;
      21: aload_0
      22: new           #93                 // class com/sun/javafx/scene/control/FakeFocusTextField
      25: dup
      26: invokespecial #94                 // Method com/sun/javafx/scene/control/FakeFocusTextField."<init>":()V
      29: putfield      #95                 // Field textField:Ljavafx/scene/control/TextField;
      32: aload_0
      33: getfield      #95                 // Field textField:Ljavafx/scene/control/TextField;
      36: invokevirtual #96                 // Method javafx/scene/control/TextField.tooltipProperty:()Ljavafx/beans/property/ObjectProperty;
      39: aload_0
      40: invokevirtual #97                 // Method tooltipProperty:()Ljavafx/beans/property/ObjectProperty;
      43: invokevirtual #98                 // Method javafx/beans/property/ObjectProperty.bind:(Ljavafx/beans/value/ObservableValue;)V
      46: aload_0
      47: getfield      #91                 // Field editor:Ljavafx/beans/property/ReadOnlyObjectWrapper;
      50: aload_0
      51: getfield      #95                 // Field textField:Ljavafx/scene/control/TextField;
      54: invokevirtual #99                 // Method javafx/beans/property/ReadOnlyObjectWrapper.set:(Ljava/lang/Object;)V
      57: aload_0
      58: getfield      #91                 // Field editor:Ljavafx/beans/property/ReadOnlyObjectWrapper;
      61: invokevirtual #100                // Method javafx/beans/property/ReadOnlyObjectWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
      64: areturn

  public final javafx.scene.control.TextField getEditor();
    Code:
       0: aload_0
       1: invokevirtual #101                // Method editorProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       4: invokevirtual #102                // Method javafx/beans/property/ReadOnlyObjectProperty.get:()Ljava/lang/Object;
       7: checkcast     #103                // class javafx/scene/control/TextField
      10: areturn

  public final javafx.beans.property.StringProperty promptTextProperty();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getEditor:()Ljavafx/scene/control/TextField;
       4: invokevirtual #104                // Method javafx/scene/control/TextField.promptTextProperty:()Ljavafx/beans/property/StringProperty;
       7: areturn

  public final java.lang.String getPromptText();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getEditor:()Ljavafx/scene/control/TextField;
       4: invokevirtual #105                // Method javafx/scene/control/TextField.getPromptText:()Ljava/lang/String;
       7: areturn

  public final void setPromptText(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getEditor:()Ljavafx/scene/control/TextField;
       4: aload_1
       5: invokevirtual #106                // Method javafx/scene/control/TextField.setPromptText:(Ljava/lang/String;)V
       8: return

  public final javafx.beans.property.ObjectProperty<javafx.util.Duration> initialDelayProperty();
    Code:
       0: aload_0
       1: getfield      #18                 // Field initialDelay:Ljavafx/beans/property/ObjectProperty;
       4: areturn

  public final void setInitialDelay(javafx.util.Duration);
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_0
       5: getfield      #18                 // Field initialDelay:Ljavafx/beans/property/ObjectProperty;
       8: aload_1
       9: invokevirtual #107                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
      12: return

  public final javafx.util.Duration getInitialDelay();
    Code:
       0: aload_0
       1: getfield      #18                 // Field initialDelay:Ljavafx/beans/property/ObjectProperty;
       4: invokevirtual #83                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
       7: checkcast     #13                 // class javafx/util/Duration
      10: areturn

  public final javafx.beans.property.ObjectProperty<javafx.util.Duration> repeatDelayProperty();
    Code:
       0: aload_0
       1: getfield      #23                 // Field repeatDelay:Ljavafx/beans/property/ObjectProperty;
       4: areturn

  public final void setRepeatDelay(javafx.util.Duration);
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_0
       5: getfield      #23                 // Field repeatDelay:Ljavafx/beans/property/ObjectProperty;
       8: aload_1
       9: invokevirtual #107                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
      12: return

  public final javafx.util.Duration getRepeatDelay();
    Code:
       0: aload_0
       1: getfield      #23                 // Field repeatDelay:Ljavafx/beans/property/ObjectProperty;
       4: invokevirtual #83                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
       7: checkcast     #13                 // class javafx/util/Duration
      10: areturn

  public static java.util.List<javafx.css.CssMetaData<? extends javafx.css.Styleable, ?>> getClassCssMetaData();
    Code:
       0: getstatic     #108                // Field STYLEABLES:Ljava/util/List;
       3: areturn

  public java.util.List<javafx.css.CssMetaData<? extends javafx.css.Styleable, ?>> getControlCssMetaData();
    Code:
       0: invokestatic  #109                // Method getClassCssMetaData:()Ljava/util/List;
       3: areturn

  private void setText(T);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokevirtual #62                 // Method getValueFactory:()Ljavafx/scene/control/SpinnerValueFactory;
       6: astore_3
       7: aload_3
       8: ifnull        29
      11: aload_3
      12: invokevirtual #75                 // Method javafx/scene/control/SpinnerValueFactory.getConverter:()Ljavafx/util/StringConverter;
      15: astore        4
      17: aload         4
      19: ifnull        29
      22: aload         4
      24: aload_1
      25: invokevirtual #79                 // Method javafx/util/StringConverter.toString:(Ljava/lang/Object;)Ljava/lang/String;
      28: astore_2
      29: aload_0
      30: getstatic     #110                // Field javafx/scene/AccessibleAttribute.TEXT:Ljavafx/scene/AccessibleAttribute;
      33: invokevirtual #111                // Method notifyAccessibleAttributeChanged:(Ljavafx/scene/AccessibleAttribute;)V
      36: aload_2
      37: ifnonnull     57
      40: aload_1
      41: ifnonnull     52
      44: aload_0
      45: invokevirtual #30                 // Method getEditor:()Ljavafx/scene/control/TextField;
      48: invokevirtual #112                // Method javafx/scene/control/TextField.clear:()V
      51: return
      52: aload_1
      53: invokevirtual #113                // Method java/lang/Object.toString:()Ljava/lang/String;
      56: astore_2
      57: aload_0
      58: invokevirtual #30                 // Method getEditor:()Ljavafx/scene/control/TextField;
      61: aload_2
      62: invokevirtual #80                 // Method javafx/scene/control/TextField.setText:(Ljava/lang/String;)V
      65: return

  static int wrapValue(int, int, int);
    Code:
       0: iload_2
       1: ifne          12
       4: new           #114                // class java/lang/RuntimeException
       7: dup
       8: invokespecial #115                // Method java/lang/RuntimeException."<init>":()V
      11: athrow
      12: iload_0
      13: iload_2
      14: irem
      15: istore_3
      16: iload_3
      17: iload_1
      18: if_icmple     35
      21: iload_2
      22: iload_1
      23: if_icmpge     35
      26: iload_3
      27: iload_2
      28: iadd
      29: iload_1
      30: isub
      31: istore_3
      32: goto          51
      35: iload_3
      36: iload_1
      37: if_icmpge     51
      40: iload_2
      41: iload_1
      42: if_icmple     51
      45: iload_3
      46: iload_2
      47: iadd
      48: iload_1
      49: isub
      50: istore_3
      51: iload_3
      52: ireturn

  static java.math.BigDecimal wrapValue(java.math.BigDecimal, java.math.BigDecimal, java.math.BigDecimal);
    Code:
       0: aload_2
       1: invokevirtual #116                // Method java/math/BigDecimal.doubleValue:()D
       4: dconst_0
       5: dcmpl
       6: ifne          17
       9: new           #114                // class java/lang/RuntimeException
      12: dup
      13: invokespecial #115                // Method java/lang/RuntimeException."<init>":()V
      16: athrow
      17: aload_0
      18: aload_1
      19: invokevirtual #117                // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
      22: ifge          27
      25: aload_2
      26: areturn
      27: aload_0
      28: aload_2
      29: invokevirtual #117                // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
      32: ifle          37
      35: aload_1
      36: areturn
      37: aload_0
      38: areturn

  public java.lang.Object queryAccessibleAttribute(javafx.scene.AccessibleAttribute, java.lang.Object...);
    Code:
       0: getstatic     #118                // Field javafx/scene/control/Spinner$4.$SwitchMap$javafx$scene$AccessibleAttribute:[I
       3: aload_1
       4: invokevirtual #119                // Method javafx/scene/AccessibleAttribute.ordinal:()I
       7: iaload
       8: lookupswitch  { // 1
                     1: 28
               default: 77
          }
      28: aload_0
      29: invokevirtual #78                 // Method getValue:()Ljava/lang/Object;
      32: astore_3
      33: aload_0
      34: invokevirtual #62                 // Method getValueFactory:()Ljavafx/scene/control/SpinnerValueFactory;
      37: astore        4
      39: aload         4
      41: ifnull        63
      44: aload         4
      46: invokevirtual #75                 // Method javafx/scene/control/SpinnerValueFactory.getConverter:()Ljavafx/util/StringConverter;
      49: astore        5
      51: aload         5
      53: ifnull        63
      56: aload         5
      58: aload_3
      59: invokevirtual #79                 // Method javafx/util/StringConverter.toString:(Ljava/lang/Object;)Ljava/lang/String;
      62: areturn
      63: aload_3
      64: ifnull        74
      67: aload_3
      68: invokevirtual #113                // Method java/lang/Object.toString:()Ljava/lang/String;
      71: goto          76
      74: ldc           #120                // String
      76: areturn
      77: aload_0
      78: aload_1
      79: aload_2
      80: invokespecial #121                // Method javafx/scene/control/Control.queryAccessibleAttribute:(Ljavafx/scene/AccessibleAttribute;[Ljava/lang/Object;)Ljava/lang/Object;
      83: areturn

  public void executeAccessibleAction(javafx.scene.AccessibleAction, java.lang.Object...);
    Code:
       0: getstatic     #122                // Field javafx/scene/control/Spinner$4.$SwitchMap$javafx$scene$AccessibleAction:[I
       3: aload_1
       4: invokevirtual #123                // Method javafx/scene/AccessibleAction.ordinal:()I
       7: iaload
       8: lookupswitch  { // 2
                     1: 36
                     2: 43
               default: 50
          }
      36: aload_0
      37: invokevirtual #124                // Method increment:()V
      40: goto          59
      43: aload_0
      44: invokevirtual #125                // Method decrement:()V
      47: goto          59
      50: aload_0
      51: aload_1
      52: iconst_0
      53: anewarray     #126                // class java/lang/Object
      56: invokespecial #127                // Method javafx/scene/control/Control.executeAccessibleAction:(Ljavafx/scene/AccessibleAction;[Ljava/lang/Object;)V
      59: return

  private void lambda$new$3(javafx.beans.Observable);
    Code:
       0: aload_0
       1: invokevirtual #128                // Method isFocused:()Z
       4: ifne          11
       7: aload_0
       8: invokevirtual #66                 // Method commitValue:()V
      11: return

  private void lambda$new$2(javafx.collections.MapChangeListener$Change);
    Code:
       0: aload_1
       1: invokevirtual #129                // Method javafx/collections/MapChangeListener$Change.wasAdded:()Z
       4: ifeq          42
       7: aload_1
       8: invokevirtual #130                // Method javafx/collections/MapChangeListener$Change.getKey:()Ljava/lang/Object;
      11: ldc           #131                // String FOCUSED
      13: if_acmpne     42
      16: aload_0
      17: aload_1
      18: invokevirtual #132                // Method javafx/collections/MapChangeListener$Change.getValueAdded:()Ljava/lang/Object;
      21: checkcast     #133                // class java/lang/Boolean
      24: invokevirtual #134                // Method java/lang/Boolean.booleanValue:()Z
      27: invokevirtual #135                // Method setFocused:(Z)V
      30: aload_0
      31: invokevirtual #38                 // Method getProperties:()Ljavafx/collections/ObservableMap;
      34: ldc           #131                // String FOCUSED
      36: invokeinterface #136,  2          // InterfaceMethod javafx/collections/ObservableMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: return

  private void lambda$new$1(javafx.beans.value.ObservableValue, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #137                // Method setText:(Ljava/lang/Object;)V
       5: return

  private void lambda$new$0(javafx.event.ActionEvent);
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method commitValue:()V
       4: return

  static javafx.beans.property.ReadOnlyObjectWrapper access$000(javafx.scene.control.Spinner);
    Code:
       0: aload_0
       1: getfield      #1                  // Field value:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: areturn

  static {};
    Code:
       0: new           #138                // class javafx/scene/control/Spinner$2
       3: dup
       4: ldc           #139                // String -fx-initial-delay
       6: invokestatic  #140                // Method javafx/css/converter/DurationConverter.getInstance:()Ljavafx/css/StyleConverter;
       9: new           #13                 // class javafx/util/Duration
      12: dup
      13: ldc2_w        #14                 // double 300.0d
      16: invokespecial #16                 // Method javafx/util/Duration."<init>":(D)V
      19: invokespecial #141                // Method javafx/scene/control/Spinner$2."<init>":(Ljava/lang/String;Ljavafx/css/StyleConverter;Ljavafx/util/Duration;)V
      22: putstatic     #11                 // Field INITIAL_DELAY:Ljavafx/css/CssMetaData;
      25: new           #142                // class javafx/scene/control/Spinner$3
      28: dup
      29: ldc           #143                // String -fx-repeat-delay
      31: invokestatic  #140                // Method javafx/css/converter/DurationConverter.getInstance:()Ljavafx/css/StyleConverter;
      34: new           #13                 // class javafx/util/Duration
      37: dup
      38: ldc2_w        #21                 // double 60.0d
      41: invokespecial #16                 // Method javafx/util/Duration."<init>":(D)V
      44: invokespecial #144                // Method javafx/scene/control/Spinner$3."<init>":(Ljava/lang/String;Ljavafx/css/StyleConverter;Ljavafx/util/Duration;)V
      47: putstatic     #19                 // Field REPEAT_DELAY:Ljavafx/css/CssMetaData;
      50: new           #145                // class java/util/ArrayList
      53: dup
      54: invokestatic  #146                // Method javafx/scene/control/Control.getClassCssMetaData:()Ljava/util/List;
      57: invokespecial #147                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      60: astore_0
      61: aload_0
      62: getstatic     #11                 // Field INITIAL_DELAY:Ljavafx/css/CssMetaData;
      65: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      70: pop
      71: aload_0
      72: getstatic     #19                 // Field REPEAT_DELAY:Ljavafx/css/CssMetaData;
      75: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      80: pop
      81: aload_0
      82: invokestatic  #149                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      85: putstatic     #108                // Field STYLEABLES:Ljava/util/List;
      88: return
}
