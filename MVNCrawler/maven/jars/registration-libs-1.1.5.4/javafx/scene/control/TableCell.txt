Compiled from "TableCell.java"
public class javafx.scene.control.TableCell<S, T> extends javafx.scene.control.IndexedCell<T> {
  boolean lockItemOnEdit;

  private boolean itemDirty;

  private javafx.collections.ListChangeListener<javafx.scene.control.TablePosition> selectedListener;

  private final javafx.beans.InvalidationListener focusedListener;

  private final javafx.beans.InvalidationListener tableRowUpdateObserver;

  private final javafx.beans.InvalidationListener editingListener;

  private javafx.collections.ListChangeListener<javafx.scene.control.TableColumn<S, ?>> visibleLeafColumnsListener;

  private javafx.collections.ListChangeListener<java.lang.String> columnStyleClassListener;

  private final javafx.beans.InvalidationListener columnStyleListener;

  private final javafx.beans.InvalidationListener columnIdListener;

  private final javafx.collections.WeakListChangeListener<javafx.scene.control.TablePosition> weakSelectedListener;

  private final javafx.beans.WeakInvalidationListener weakFocusedListener;

  private final javafx.beans.WeakInvalidationListener weaktableRowUpdateObserver;

  private final javafx.beans.WeakInvalidationListener weakEditingListener;

  private final javafx.beans.WeakInvalidationListener weakColumnStyleListener;

  private final javafx.beans.WeakInvalidationListener weakColumnIdListener;

  private final javafx.collections.WeakListChangeListener<javafx.scene.control.TableColumn<S, ?>> weakVisibleLeafColumnsListener;

  private final javafx.collections.WeakListChangeListener<java.lang.String> weakColumnStyleClassListener;

  private javafx.beans.property.ReadOnlyObjectWrapper<javafx.scene.control.TableColumn<S, T>> tableColumn;

  private javafx.beans.property.ReadOnlyObjectWrapper<javafx.scene.control.TableView<S>> tableView;

  private javafx.beans.property.ReadOnlyObjectWrapper<javafx.scene.control.TableRow<S>> tableRow;

  private boolean isLastVisibleColumn;

  private int columnIndex;

  private boolean updateEditingIndex;

  private javafx.beans.value.ObservableValue<T> currentObservableValue;

  private boolean isFirstRun;

  private java.lang.ref.WeakReference<S> oldRowItemRef;

  private static final java.lang.String DEFAULT_STYLE_CLASS;

  private static final javafx.css.PseudoClass PSEUDO_CLASS_LAST_VISIBLE;

  public javafx.scene.control.TableCell();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method javafx/scene/control/IndexedCell."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #8                  // Field lockItemOnEdit:Z
       9: aload_0
      10: iconst_0
      11: putfield      #9                  // Field itemDirty:Z
      14: aload_0
      15: aload_0
      16: invokedynamic #10,  0             // InvokeDynamic #0:onChanged:(Ljavafx/scene/control/TableCell;)Ljavafx/collections/ListChangeListener;
      21: putfield      #11                 // Field selectedListener:Ljavafx/collections/ListChangeListener;
      24: aload_0
      25: aload_0
      26: invokedynamic #12,  0             // InvokeDynamic #1:invalidated:(Ljavafx/scene/control/TableCell;)Ljavafx/beans/InvalidationListener;
      31: putfield      #13                 // Field focusedListener:Ljavafx/beans/InvalidationListener;
      34: aload_0
      35: aload_0
      36: invokedynamic #14,  0             // InvokeDynamic #2:invalidated:(Ljavafx/scene/control/TableCell;)Ljavafx/beans/InvalidationListener;
      41: putfield      #15                 // Field tableRowUpdateObserver:Ljavafx/beans/InvalidationListener;
      44: aload_0
      45: aload_0
      46: invokedynamic #16,  0             // InvokeDynamic #3:invalidated:(Ljavafx/scene/control/TableCell;)Ljavafx/beans/InvalidationListener;
      51: putfield      #17                 // Field editingListener:Ljavafx/beans/InvalidationListener;
      54: aload_0
      55: aload_0
      56: invokedynamic #18,  0             // InvokeDynamic #4:onChanged:(Ljavafx/scene/control/TableCell;)Ljavafx/collections/ListChangeListener;
      61: putfield      #19                 // Field visibleLeafColumnsListener:Ljavafx/collections/ListChangeListener;
      64: aload_0
      65: aload_0
      66: invokedynamic #20,  0             // InvokeDynamic #5:onChanged:(Ljavafx/scene/control/TableCell;)Ljavafx/collections/ListChangeListener;
      71: putfield      #21                 // Field columnStyleClassListener:Ljavafx/collections/ListChangeListener;
      74: aload_0
      75: aload_0
      76: invokedynamic #22,  0             // InvokeDynamic #6:invalidated:(Ljavafx/scene/control/TableCell;)Ljavafx/beans/InvalidationListener;
      81: putfield      #23                 // Field columnStyleListener:Ljavafx/beans/InvalidationListener;
      84: aload_0
      85: aload_0
      86: invokedynamic #24,  0             // InvokeDynamic #7:invalidated:(Ljavafx/scene/control/TableCell;)Ljavafx/beans/InvalidationListener;
      91: putfield      #25                 // Field columnIdListener:Ljavafx/beans/InvalidationListener;
      94: aload_0
      95: new           #26                 // class javafx/collections/WeakListChangeListener
      98: dup
      99: aload_0
     100: getfield      #11                 // Field selectedListener:Ljavafx/collections/ListChangeListener;
     103: invokespecial #27                 // Method javafx/collections/WeakListChangeListener."<init>":(Ljavafx/collections/ListChangeListener;)V
     106: putfield      #4                  // Field weakSelectedListener:Ljavafx/collections/WeakListChangeListener;
     109: aload_0
     110: new           #28                 // class javafx/beans/WeakInvalidationListener
     113: dup
     114: aload_0
     115: getfield      #13                 // Field focusedListener:Ljavafx/beans/InvalidationListener;
     118: invokespecial #29                 // Method javafx/beans/WeakInvalidationListener."<init>":(Ljavafx/beans/InvalidationListener;)V
     121: putfield      #3                  // Field weakFocusedListener:Ljavafx/beans/WeakInvalidationListener;
     124: aload_0
     125: new           #28                 // class javafx/beans/WeakInvalidationListener
     128: dup
     129: aload_0
     130: getfield      #15                 // Field tableRowUpdateObserver:Ljavafx/beans/InvalidationListener;
     133: invokespecial #29                 // Method javafx/beans/WeakInvalidationListener."<init>":(Ljavafx/beans/InvalidationListener;)V
     136: putfield      #30                 // Field weaktableRowUpdateObserver:Ljavafx/beans/WeakInvalidationListener;
     139: aload_0
     140: new           #28                 // class javafx/beans/WeakInvalidationListener
     143: dup
     144: aload_0
     145: getfield      #17                 // Field editingListener:Ljavafx/beans/InvalidationListener;
     148: invokespecial #29                 // Method javafx/beans/WeakInvalidationListener."<init>":(Ljavafx/beans/InvalidationListener;)V
     151: putfield      #2                  // Field weakEditingListener:Ljavafx/beans/WeakInvalidationListener;
     154: aload_0
     155: new           #28                 // class javafx/beans/WeakInvalidationListener
     158: dup
     159: aload_0
     160: getfield      #23                 // Field columnStyleListener:Ljavafx/beans/InvalidationListener;
     163: invokespecial #29                 // Method javafx/beans/WeakInvalidationListener."<init>":(Ljavafx/beans/InvalidationListener;)V
     166: putfield      #31                 // Field weakColumnStyleListener:Ljavafx/beans/WeakInvalidationListener;
     169: aload_0
     170: new           #28                 // class javafx/beans/WeakInvalidationListener
     173: dup
     174: aload_0
     175: getfield      #25                 // Field columnIdListener:Ljavafx/beans/InvalidationListener;
     178: invokespecial #29                 // Method javafx/beans/WeakInvalidationListener."<init>":(Ljavafx/beans/InvalidationListener;)V
     181: putfield      #32                 // Field weakColumnIdListener:Ljavafx/beans/WeakInvalidationListener;
     184: aload_0
     185: new           #26                 // class javafx/collections/WeakListChangeListener
     188: dup
     189: aload_0
     190: getfield      #19                 // Field visibleLeafColumnsListener:Ljavafx/collections/ListChangeListener;
     193: invokespecial #27                 // Method javafx/collections/WeakListChangeListener."<init>":(Ljavafx/collections/ListChangeListener;)V
     196: putfield      #1                  // Field weakVisibleLeafColumnsListener:Ljavafx/collections/WeakListChangeListener;
     199: aload_0
     200: new           #26                 // class javafx/collections/WeakListChangeListener
     203: dup
     204: aload_0
     205: getfield      #21                 // Field columnStyleClassListener:Ljavafx/collections/ListChangeListener;
     208: invokespecial #27                 // Method javafx/collections/WeakListChangeListener."<init>":(Ljavafx/collections/ListChangeListener;)V
     211: putfield      #33                 // Field weakColumnStyleClassListener:Ljavafx/collections/WeakListChangeListener;
     214: aload_0
     215: new           #34                 // class javafx/scene/control/TableCell$1
     218: dup
     219: aload_0
     220: invokespecial #35                 // Method javafx/scene/control/TableCell$1."<init>":(Ljavafx/scene/control/TableCell;)V
     223: putfield      #36                 // Field tableColumn:Ljavafx/beans/property/ReadOnlyObjectWrapper;
     226: aload_0
     227: new           #37                 // class javafx/beans/property/ReadOnlyObjectWrapper
     230: dup
     231: aload_0
     232: ldc           #38                 // String tableRow
     234: invokespecial #39                 // Method javafx/beans/property/ReadOnlyObjectWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
     237: putfield      #40                 // Field tableRow:Ljavafx/beans/property/ReadOnlyObjectWrapper;
     240: aload_0
     241: iconst_0
     242: putfield      #41                 // Field isLastVisibleColumn:Z
     245: aload_0
     246: iconst_m1
     247: putfield      #42                 // Field columnIndex:I
     250: aload_0
     251: iconst_1
     252: putfield      #43                 // Field updateEditingIndex:Z
     255: aload_0
     256: aconst_null
     257: putfield      #44                 // Field currentObservableValue:Ljavafx/beans/value/ObservableValue;
     260: aload_0
     261: iconst_1
     262: putfield      #45                 // Field isFirstRun:Z
     265: aload_0
     266: invokevirtual #46                 // Method getStyleClass:()Ljavafx/collections/ObservableList;
     269: iconst_1
     270: anewarray     #47                 // class java/lang/String
     273: dup
     274: iconst_0
     275: ldc           #49                 // String table-cell
     277: aastore
     278: invokeinterface #50,  2           // InterfaceMethod javafx/collections/ObservableList.addAll:([Ljava/lang/Object;)Z
     283: pop
     284: aload_0
     285: getstatic     #51                 // Field javafx/scene/AccessibleRole.TABLE_CELL:Ljavafx/scene/AccessibleRole;
     288: invokevirtual #52                 // Method setAccessibleRole:(Ljavafx/scene/AccessibleRole;)V
     291: aload_0
     292: invokespecial #6                  // Method updateColumnIndex:()V
     295: return

  public final javafx.beans.property.ReadOnlyObjectProperty<javafx.scene.control.TableColumn<S, T>> tableColumnProperty();
    Code:
       0: aload_0
       1: getfield      #36                 // Field tableColumn:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #53                 // Method javafx/beans/property/ReadOnlyObjectWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       7: areturn

  private void setTableColumn(javafx.scene.control.TableColumn<S, T>);
    Code:
       0: aload_0
       1: getfield      #36                 // Field tableColumn:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: aload_1
       5: invokevirtual #54                 // Method javafx/beans/property/ReadOnlyObjectWrapper.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.scene.control.TableColumn<S, T> getTableColumn();
    Code:
       0: aload_0
       1: getfield      #36                 // Field tableColumn:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #55                 // Method javafx/beans/property/ReadOnlyObjectWrapper.get:()Ljava/lang/Object;
       7: checkcast     #56                 // class javafx/scene/control/TableColumn
      10: areturn

  private void setTableView(javafx.scene.control.TableView<S>);
    Code:
       0: aload_0
       1: invokespecial #57                 // Method tableViewPropertyImpl:()Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: aload_1
       5: invokevirtual #54                 // Method javafx/beans/property/ReadOnlyObjectWrapper.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.scene.control.TableView<S> getTableView();
    Code:
       0: aload_0
       1: getfield      #58                 // Field tableView:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #58                 // Field tableView:Ljavafx/beans/property/ReadOnlyObjectWrapper;
      15: invokevirtual #55                 // Method javafx/beans/property/ReadOnlyObjectWrapper.get:()Ljava/lang/Object;
      18: checkcast     #59                 // class javafx/scene/control/TableView
      21: areturn

  public final javafx.beans.property.ReadOnlyObjectProperty<javafx.scene.control.TableView<S>> tableViewProperty();
    Code:
       0: aload_0
       1: invokespecial #57                 // Method tableViewPropertyImpl:()Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #53                 // Method javafx/beans/property/ReadOnlyObjectWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       7: areturn

  private javafx.beans.property.ReadOnlyObjectWrapper<javafx.scene.control.TableView<S>> tableViewPropertyImpl();
    Code:
       0: aload_0
       1: getfield      #58                 // Field tableView:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: ifnonnull     19
       7: aload_0
       8: new           #60                 // class javafx/scene/control/TableCell$2
      11: dup
      12: aload_0
      13: invokespecial #61                 // Method javafx/scene/control/TableCell$2."<init>":(Ljavafx/scene/control/TableCell;)V
      16: putfield      #58                 // Field tableView:Ljavafx/beans/property/ReadOnlyObjectWrapper;
      19: aload_0
      20: getfield      #58                 // Field tableView:Ljavafx/beans/property/ReadOnlyObjectWrapper;
      23: areturn

  private void setTableRow(javafx.scene.control.TableRow<S>);
    Code:
       0: aload_0
       1: getfield      #40                 // Field tableRow:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: aload_1
       5: invokevirtual #54                 // Method javafx/beans/property/ReadOnlyObjectWrapper.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.scene.control.TableRow<S> getTableRow();
    Code:
       0: aload_0
       1: getfield      #40                 // Field tableRow:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #55                 // Method javafx/beans/property/ReadOnlyObjectWrapper.get:()Ljava/lang/Object;
       7: checkcast     #62                 // class javafx/scene/control/TableRow
      10: areturn

  public final javafx.beans.property.ReadOnlyObjectProperty<javafx.scene.control.TableRow<S>> tableRowProperty();
    Code:
       0: aload_0
       1: getfield      #40                 // Field tableRow:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: areturn

  public void startEdit();
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method getTableView:()Ljavafx/scene/control/TableView;
       4: astore_1
       5: aload_0
       6: invokevirtual #64                 // Method getTableColumn:()Ljavafx/scene/control/TableColumn;
       9: astore_2
      10: aload_0
      11: invokevirtual #65                 // Method isEditable:()Z
      14: ifeq          42
      17: aload_1
      18: ifnull        28
      21: aload_1
      22: invokevirtual #66                 // Method javafx/scene/control/TableView.isEditable:()Z
      25: ifeq          42
      28: aload_2
      29: ifnull        43
      32: aload_0
      33: invokevirtual #64                 // Method getTableColumn:()Ljavafx/scene/control/TableColumn;
      36: invokevirtual #67                 // Method javafx/scene/control/TableColumn.isEditable:()Z
      39: ifne          43
      42: return
      43: aload_0
      44: getfield      #8                  // Field lockItemOnEdit:Z
      47: ifne          55
      50: aload_0
      51: iconst_m1
      52: invokespecial #68                 // Method updateItem:(I)V
      55: aload_0
      56: invokespecial #69                 // Method javafx/scene/control/IndexedCell.startEdit:()V
      59: aload_2
      60: ifnull        85
      63: new           #70                 // class javafx/scene/control/TableColumn$CellEditEvent
      66: dup
      67: aload_1
      68: aload_1
      69: invokevirtual #71                 // Method javafx/scene/control/TableView.getEditingCell:()Ljavafx/scene/control/TablePosition;
      72: invokestatic  #72                 // Method javafx/scene/control/TableColumn.editStartEvent:()Ljavafx/event/EventType;
      75: aconst_null
      76: invokespecial #73                 // Method javafx/scene/control/TableColumn$CellEditEvent."<init>":(Ljavafx/scene/control/TableView;Ljavafx/scene/control/TablePosition;Ljavafx/event/EventType;Ljava/lang/Object;)V
      79: astore_3
      80: aload_2
      81: aload_3
      82: invokestatic  #74                 // Method javafx/event/Event.fireEvent:(Ljavafx/event/EventTarget;Ljavafx/event/Event;)V
      85: return

  public void commitEdit(T);
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method isEditing:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokevirtual #63                 // Method getTableView:()Ljavafx/scene/control/TableView;
      12: astore_2
      13: aload_2
      14: ifnull        42
      17: new           #70                 // class javafx/scene/control/TableColumn$CellEditEvent
      20: dup
      21: aload_2
      22: aload_2
      23: invokevirtual #71                 // Method javafx/scene/control/TableView.getEditingCell:()Ljavafx/scene/control/TablePosition;
      26: invokestatic  #76                 // Method javafx/scene/control/TableColumn.editCommitEvent:()Ljavafx/event/EventType;
      29: aload_1
      30: invokespecial #73                 // Method javafx/scene/control/TableColumn$CellEditEvent."<init>":(Ljavafx/scene/control/TableView;Ljavafx/scene/control/TablePosition;Ljavafx/event/EventType;Ljava/lang/Object;)V
      33: astore_3
      34: aload_0
      35: invokevirtual #64                 // Method getTableColumn:()Ljavafx/scene/control/TableColumn;
      38: aload_3
      39: invokestatic  #74                 // Method javafx/event/Event.fireEvent:(Ljavafx/event/EventTarget;Ljavafx/event/Event;)V
      42: aload_0
      43: aload_1
      44: invokespecial #77                 // Method javafx/scene/control/IndexedCell.commitEdit:(Ljava/lang/Object;)V
      47: aload_0
      48: aload_1
      49: iconst_0
      50: invokevirtual #78                 // Method updateItem:(Ljava/lang/Object;Z)V
      53: aload_2
      54: ifnull        67
      57: aload_2
      58: iconst_m1
      59: aconst_null
      60: invokevirtual #79                 // Method javafx/scene/control/TableView.edit:(ILjavafx/scene/control/TableColumn;)V
      63: aload_2
      64: invokestatic  #80                 // Method javafx/scene/control/ControlUtils.requestFocusOnControlOnlyIfCurrentFocusOwnerIsChild:(Ljavafx/scene/control/Control;)V
      67: return

  public void cancelEdit();
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method isEditing:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokevirtual #63                 // Method getTableView:()Ljavafx/scene/control/TableView;
      12: astore_1
      13: aload_0
      14: invokespecial #81                 // Method javafx/scene/control/IndexedCell.cancelEdit:()V
      17: aload_1
      18: ifnull        65
      21: aload_1
      22: invokevirtual #71                 // Method javafx/scene/control/TableView.getEditingCell:()Ljavafx/scene/control/TablePosition;
      25: astore_2
      26: aload_0
      27: getfield      #43                 // Field updateEditingIndex:Z
      30: ifeq          39
      33: aload_1
      34: iconst_m1
      35: aconst_null
      36: invokevirtual #79                 // Method javafx/scene/control/TableView.edit:(ILjavafx/scene/control/TableColumn;)V
      39: aload_1
      40: invokestatic  #80                 // Method javafx/scene/control/ControlUtils.requestFocusOnControlOnlyIfCurrentFocusOwnerIsChild:(Ljavafx/scene/control/Control;)V
      43: new           #70                 // class javafx/scene/control/TableColumn$CellEditEvent
      46: dup
      47: aload_1
      48: aload_2
      49: invokestatic  #82                 // Method javafx/scene/control/TableColumn.editCancelEvent:()Ljavafx/event/EventType;
      52: aconst_null
      53: invokespecial #73                 // Method javafx/scene/control/TableColumn$CellEditEvent."<init>":(Ljavafx/scene/control/TableView;Ljavafx/scene/control/TablePosition;Ljavafx/event/EventType;Ljava/lang/Object;)V
      56: astore_3
      57: aload_0
      58: invokevirtual #64                 // Method getTableColumn:()Ljavafx/scene/control/TableColumn;
      61: aload_3
      62: invokestatic  #74                 // Method javafx/event/Event.fireEvent:(Ljavafx/event/EventTarget;Ljavafx/event/Event;)V
      65: return

  public void updateSelected(boolean);
    Code:
       0: aload_0
       1: invokevirtual #83                 // Method getTableRow:()Ljavafx/scene/control/TableRow;
       4: ifnull        17
       7: aload_0
       8: invokevirtual #83                 // Method getTableRow:()Ljavafx/scene/control/TableRow;
      11: invokevirtual #84                 // Method javafx/scene/control/TableRow.isEmpty:()Z
      14: ifeq          18
      17: return
      18: aload_0
      19: iload_1
      20: invokevirtual #85                 // Method setSelected:(Z)V
      23: return

  protected javafx.scene.control.Skin<?> createDefaultSkin();
    Code:
       0: new           #86                 // class javafx/scene/control/skin/TableCellSkin
       3: dup
       4: aload_0
       5: invokespecial #87                 // Method javafx/scene/control/skin/TableCellSkin."<init>":(Ljavafx/scene/control/TableCell;)V
       8: areturn

  private void cleanUpTableViewListeners(javafx.scene.control.TableView<S>);
    Code:
       0: aload_1
       1: ifnull        70
       4: aload_1
       5: invokevirtual #88                 // Method javafx/scene/control/TableView.getSelectionModel:()Ljavafx/scene/control/TableView$TableViewSelectionModel;
       8: astore_2
       9: aload_2
      10: ifnull        26
      13: aload_2
      14: invokevirtual #89                 // Method javafx/scene/control/TableView$TableViewSelectionModel.getSelectedCells:()Ljavafx/collections/ObservableList;
      17: aload_0
      18: getfield      #4                  // Field weakSelectedListener:Ljavafx/collections/WeakListChangeListener;
      21: invokeinterface #90,  2           // InterfaceMethod javafx/collections/ObservableList.removeListener:(Ljavafx/collections/ListChangeListener;)V
      26: aload_1
      27: invokevirtual #91                 // Method javafx/scene/control/TableView.getFocusModel:()Ljavafx/scene/control/TableView$TableViewFocusModel;
      30: astore_3
      31: aload_3
      32: ifnull        46
      35: aload_3
      36: invokevirtual #92                 // Method javafx/scene/control/TableView$TableViewFocusModel.focusedCellProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
      39: aload_0
      40: getfield      #3                  // Field weakFocusedListener:Ljavafx/beans/WeakInvalidationListener;
      43: invokevirtual #93                 // Method javafx/beans/property/ReadOnlyObjectProperty.removeListener:(Ljavafx/beans/InvalidationListener;)V
      46: aload_1
      47: invokevirtual #94                 // Method javafx/scene/control/TableView.editingCellProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
      50: aload_0
      51: getfield      #2                  // Field weakEditingListener:Ljavafx/beans/WeakInvalidationListener;
      54: invokevirtual #93                 // Method javafx/beans/property/ReadOnlyObjectProperty.removeListener:(Ljavafx/beans/InvalidationListener;)V
      57: aload_1
      58: invokevirtual #95                 // Method javafx/scene/control/TableView.getVisibleLeafColumns:()Ljavafx/collections/ObservableList;
      61: aload_0
      62: getfield      #1                  // Field weakVisibleLeafColumnsListener:Ljavafx/collections/WeakListChangeListener;
      65: invokeinterface #90,  2           // InterfaceMethod javafx/collections/ObservableList.removeListener:(Ljavafx/collections/ListChangeListener;)V
      70: return

  void indexChanged(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #96                 // Method javafx/scene/control/IndexedCell.indexChanged:(II)V
       6: aload_0
       7: iload_1
       8: invokespecial #68                 // Method updateItem:(I)V
      11: aload_0
      12: invokespecial #97                 // Method updateSelection:()V
      15: aload_0
      16: invokespecial #98                 // Method updateFocus:()V
      19: aload_0
      20: invokespecial #99                 // Method updateEditing:()V
      23: return

  private void updateColumnIndex();
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method getTableView:()Ljavafx/scene/control/TableView;
       4: astore_1
       5: aload_0
       6: invokevirtual #64                 // Method getTableColumn:()Ljavafx/scene/control/TableColumn;
       9: astore_2
      10: aload_0
      11: aload_1
      12: ifnull        19
      15: aload_2
      16: ifnonnull     23
      19: iconst_m1
      20: goto          28
      23: aload_1
      24: aload_2
      25: invokevirtual #100                // Method javafx/scene/control/TableView.getVisibleLeafIndex:(Ljavafx/scene/control/TableColumn;)I
      28: putfield      #42                 // Field columnIndex:I
      31: aload_0
      32: aload_0
      33: invokevirtual #64                 // Method getTableColumn:()Ljavafx/scene/control/TableColumn;
      36: ifnull        72
      39: aload_0
      40: getfield      #42                 // Field columnIndex:I
      43: iconst_m1
      44: if_icmpeq     72
      47: aload_0
      48: getfield      #42                 // Field columnIndex:I
      51: aload_0
      52: invokevirtual #63                 // Method getTableView:()Ljavafx/scene/control/TableView;
      55: invokevirtual #95                 // Method javafx/scene/control/TableView.getVisibleLeafColumns:()Ljavafx/collections/ObservableList;
      58: invokeinterface #101,  1          // InterfaceMethod javafx/collections/ObservableList.size:()I
      63: iconst_1
      64: isub
      65: if_icmpne     72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: putfield      #41                 // Field isLastVisibleColumn:Z
      76: aload_0
      77: getstatic     #102                // Field PSEUDO_CLASS_LAST_VISIBLE:Ljavafx/css/PseudoClass;
      80: aload_0
      81: getfield      #41                 // Field isLastVisibleColumn:Z
      84: invokevirtual #103                // Method pseudoClassStateChanged:(Ljavafx/css/PseudoClass;Z)V
      87: return

  private void updateSelection();
    Code:
       0: aload_0
       1: invokevirtual #104                // Method isEmpty:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokevirtual #105                // Method isSelected:()Z
      12: istore_1
      13: aload_0
      14: invokespecial #106                // Method isInCellSelectionMode:()Z
      17: ifne          30
      20: iload_1
      21: ifeq          29
      24: aload_0
      25: iconst_0
      26: invokevirtual #107                // Method updateSelected:(Z)V
      29: return
      30: aload_0
      31: invokevirtual #63                 // Method getTableView:()Ljavafx/scene/control/TableView;
      34: astore_2
      35: aload_0
      36: invokevirtual #108                // Method getIndex:()I
      39: iconst_m1
      40: if_icmpeq     47
      43: aload_2
      44: ifnonnull     48
      47: return
      48: aload_2
      49: invokevirtual #88                 // Method javafx/scene/control/TableView.getSelectionModel:()Ljavafx/scene/control/TableView$TableViewSelectionModel;
      52: astore_3
      53: aload_3
      54: ifnonnull     63
      57: aload_0
      58: iconst_0
      59: invokevirtual #107                // Method updateSelected:(Z)V
      62: return
      63: aload_3
      64: aload_0
      65: invokevirtual #108                // Method getIndex:()I
      68: aload_0
      69: invokevirtual #64                 // Method getTableColumn:()Ljavafx/scene/control/TableColumn;
      72: invokevirtual #109                // Method javafx/scene/control/TableSelectionModel.isSelected:(ILjavafx/scene/control/TableColumnBase;)Z
      75: istore        4
      77: iload_1
      78: iload         4
      80: if_icmpne     84
      83: return
      84: aload_0
      85: iload         4
      87: invokevirtual #107                // Method updateSelected:(Z)V
      90: return

  private void updateFocus();
    Code:
       0: aload_0
       1: invokevirtual #110                // Method isFocused:()Z
       4: istore_1
       5: aload_0
       6: invokespecial #106                // Method isInCellSelectionMode:()Z
       9: ifne          22
      12: iload_1
      13: ifeq          21
      16: aload_0
      17: iconst_0
      18: invokevirtual #111                // Method setFocused:(Z)V
      21: return
      22: aload_0
      23: invokevirtual #63                 // Method getTableView:()Ljavafx/scene/control/TableView;
      26: astore_2
      27: aload_0
      28: invokevirtual #83                 // Method getTableRow:()Ljavafx/scene/control/TableRow;
      31: astore_3
      32: aload_0
      33: invokevirtual #108                // Method getIndex:()I
      36: istore        4
      38: iload         4
      40: iconst_m1
      41: if_icmpeq     52
      44: aload_2
      45: ifnull        52
      48: aload_3
      49: ifnonnull     53
      52: return
      53: aload_2
      54: invokevirtual #91                 // Method javafx/scene/control/TableView.getFocusModel:()Ljavafx/scene/control/TableView$TableViewFocusModel;
      57: astore        5
      59: aload         5
      61: ifnonnull     70
      64: aload_0
      65: iconst_0
      66: invokevirtual #111                // Method setFocused:(Z)V
      69: return
      70: aload_0
      71: aload         5
      73: iload         4
      75: aload_0
      76: invokevirtual #64                 // Method getTableColumn:()Ljavafx/scene/control/TableColumn;
      79: invokevirtual #112                // Method javafx/scene/control/TableView$TableViewFocusModel.isFocused:(ILjavafx/scene/control/TableColumn;)Z
      82: invokevirtual #111                // Method setFocused:(Z)V
      85: return

  private void updateEditing();
    Code:
       0: aload_0
       1: invokevirtual #108                // Method getIndex:()I
       4: iconst_m1
       5: if_icmpeq     15
       8: aload_0
       9: invokevirtual #63                 // Method getTableView:()Ljavafx/scene/control/TableView;
      12: ifnonnull     16
      15: return
      16: aload_0
      17: invokevirtual #63                 // Method getTableView:()Ljavafx/scene/control/TableView;
      20: invokevirtual #71                 // Method javafx/scene/control/TableView.getEditingCell:()Ljavafx/scene/control/TablePosition;
      23: astore_1
      24: aload_0
      25: aload_1
      26: invokespecial #113                // Method match:(Ljavafx/scene/control/TablePosition;)Z
      29: istore_2
      30: iload_2
      31: ifeq          48
      34: aload_0
      35: invokevirtual #75                 // Method isEditing:()Z
      38: ifne          48
      41: aload_0
      42: invokevirtual #114                // Method startEdit:()V
      45: goto          73
      48: iload_2
      49: ifne          73
      52: aload_0
      53: invokevirtual #75                 // Method isEditing:()Z
      56: ifeq          73
      59: aload_0
      60: iconst_0
      61: putfield      #43                 // Field updateEditingIndex:Z
      64: aload_0
      65: invokevirtual #115                // Method cancelEdit:()V
      68: aload_0
      69: iconst_1
      70: putfield      #43                 // Field updateEditingIndex:Z
      73: return

  private boolean match(javafx.scene.control.TablePosition<S, ?>);
    Code:
       0: aload_1
       1: ifnull        30
       4: aload_1
       5: invokevirtual #116                // Method javafx/scene/control/TablePosition.getRow:()I
       8: aload_0
       9: invokevirtual #108                // Method getIndex:()I
      12: if_icmpne     30
      15: aload_1
      16: invokevirtual #117                // Method javafx/scene/control/TablePosition.getTableColumn:()Ljavafx/scene/control/TableColumn;
      19: aload_0
      20: invokevirtual #64                 // Method getTableColumn:()Ljavafx/scene/control/TableColumn;
      23: if_acmpne     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  private boolean isInCellSelectionMode();
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method getTableView:()Ljavafx/scene/control/TableView;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: aload_1
      12: invokevirtual #88                 // Method javafx/scene/control/TableView.getSelectionModel:()Ljavafx/scene/control/TableView$TableViewSelectionModel;
      15: astore_2
      16: aload_2
      17: ifnull        31
      20: aload_2
      21: invokevirtual #118                // Method javafx/scene/control/TableSelectionModel.isCellSelectionEnabled:()Z
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  private void updateItem(int);
    Code:
       0: aload_0
       1: getfield      #44                 // Field currentObservableValue:Ljavafx/beans/value/ObservableValue;
       4: ifnull        20
       7: aload_0
       8: getfield      #44                 // Field currentObservableValue:Ljavafx/beans/value/ObservableValue;
      11: aload_0
      12: getfield      #30                 // Field weaktableRowUpdateObserver:Ljavafx/beans/WeakInvalidationListener;
      15: invokeinterface #119,  2          // InterfaceMethod javafx/beans/value/ObservableValue.removeListener:(Ljavafx/beans/InvalidationListener;)V
      20: aload_0
      21: invokevirtual #63                 // Method getTableView:()Ljavafx/scene/control/TableView;
      24: astore_2
      25: aload_2
      26: ifnonnull     35
      29: invokestatic  #120                // Method javafx/collections/FXCollections.emptyObservableList:()Ljavafx/collections/ObservableList;
      32: goto          39
      35: aload_2
      36: invokevirtual #121                // Method javafx/scene/control/TableView.getItems:()Ljavafx/collections/ObservableList;
      39: astore_3
      40: aload_0
      41: invokevirtual #64                 // Method getTableColumn:()Ljavafx/scene/control/TableColumn;
      44: astore        4
      46: aload_3
      47: ifnonnull     54
      50: iconst_m1
      51: goto          60
      54: aload_3
      55: invokeinterface #122,  1          // InterfaceMethod java/util/List.size:()I
      60: istore        5
      62: aload_0
      63: invokevirtual #108                // Method getIndex:()I
      66: istore        6
      68: aload_0
      69: invokevirtual #104                // Method isEmpty:()Z
      72: istore        7
      74: aload_0
      75: invokevirtual #123                // Method getItem:()Ljava/lang/Object;
      78: astore        8
      80: aload_0
      81: invokevirtual #83                 // Method getTableRow:()Ljavafx/scene/control/TableRow;
      84: astore        9
      86: aload         9
      88: ifnonnull     95
      91: aconst_null
      92: goto          100
      95: aload         9
      97: invokevirtual #124                // Method javafx/scene/control/TableRow.getItem:()Ljava/lang/Object;
     100: astore        10
     102: iload         6
     104: iload         5
     106: if_icmplt     113
     109: iconst_1
     110: goto          114
     113: iconst_0
     114: istore        11
     116: iload         11
     118: ifne          153
     121: iload         6
     123: iflt          153
     126: aload_0
     127: getfield      #42                 // Field columnIndex:I
     130: iflt          153
     133: aload_0
     134: invokevirtual #125                // Method isVisible:()Z
     137: ifeq          153
     140: aload         4
     142: ifnull        153
     145: aload         4
     147: invokevirtual #126                // Method javafx/scene/control/TableColumn.isVisible:()Z
     150: ifne          187
     153: iload         7
     155: ifne          163
     158: aload         8
     160: ifnonnull     175
     163: aload_0
     164: getfield      #45                 // Field isFirstRun:Z
     167: ifne          175
     170: iload         11
     172: ifeq          186
     175: aload_0
     176: aconst_null
     177: iconst_1
     178: invokevirtual #78                 // Method updateItem:(Ljava/lang/Object;Z)V
     181: aload_0
     182: iconst_0
     183: putfield      #45                 // Field isFirstRun:Z
     186: return
     187: aload_0
     188: aload         4
     190: iload         6
     192: invokevirtual #127                // Method javafx/scene/control/TableColumn.getCellObservableValue:(I)Ljavafx/beans/value/ObservableValue;
     195: putfield      #44                 // Field currentObservableValue:Ljavafx/beans/value/ObservableValue;
     198: aload_0
     199: getfield      #44                 // Field currentObservableValue:Ljavafx/beans/value/ObservableValue;
     202: ifnonnull     209
     205: aconst_null
     206: goto          218
     209: aload_0
     210: getfield      #44                 // Field currentObservableValue:Ljavafx/beans/value/ObservableValue;
     213: invokeinterface #128,  1          // InterfaceMethod javafx/beans/value/ObservableValue.getValue:()Ljava/lang/Object;
     218: astore        12
     220: iload_1
     221: iload         6
     223: if_icmpne     275
     226: aload_0
     227: aload         8
     229: aload         12
     231: invokevirtual #129                // Method isItemChanged:(Ljava/lang/Object;Ljava/lang/Object;)Z
     234: ifne          275
     237: aload_0
     238: getfield      #130                // Field oldRowItemRef:Ljava/lang/ref/WeakReference;
     241: ifnull        254
     244: aload_0
     245: getfield      #130                // Field oldRowItemRef:Ljava/lang/ref/WeakReference;
     248: invokevirtual #131                // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
     251: goto          255
     254: aconst_null
     255: astore        13
     257: aload         13
     259: ifnull        275
     262: aload         13
     264: aload         10
     266: invokevirtual #132                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     269: ifeq          275
     272: goto          282
     275: aload_0
     276: aload         12
     278: iconst_0
     279: invokevirtual #78                 // Method updateItem:(Ljava/lang/Object;Z)V
     282: aload_0
     283: new           #133                // class java/lang/ref/WeakReference
     286: dup
     287: aload         10
     289: invokespecial #134                // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
     292: putfield      #130                // Field oldRowItemRef:Ljava/lang/ref/WeakReference;
     295: aload_0
     296: getfield      #44                 // Field currentObservableValue:Ljavafx/beans/value/ObservableValue;
     299: ifnonnull     303
     302: return
     303: aload_0
     304: getfield      #44                 // Field currentObservableValue:Ljavafx/beans/value/ObservableValue;
     307: aload_0
     308: getfield      #30                 // Field weaktableRowUpdateObserver:Ljavafx/beans/WeakInvalidationListener;
     311: invokeinterface #135,  2          // InterfaceMethod javafx/beans/value/ObservableValue.addListener:(Ljavafx/beans/InvalidationListener;)V
     316: return

  protected void layoutChildren();
    Code:
       0: aload_0
       1: getfield      #9                  // Field itemDirty:Z
       4: ifeq          17
       7: aload_0
       8: iconst_m1
       9: invokespecial #68                 // Method updateItem:(I)V
      12: aload_0
      13: iconst_0
      14: putfield      #9                  // Field itemDirty:Z
      17: aload_0
      18: invokespecial #136                // Method javafx/scene/control/IndexedCell.layoutChildren:()V
      21: return

  public final void updateTableView(javafx.scene.control.TableView);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #137                // Method setTableView:(Ljavafx/scene/control/TableView;)V
       5: return

  public final void updateTableRow(javafx.scene.control.TableRow);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #138                // Method setTableRow:(Ljavafx/scene/control/TableRow;)V
       5: return

  public final void updateTableColumn(javafx.scene.control.TableColumn);
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method getTableColumn:()Ljavafx/scene/control/TableColumn;
       4: astore_2
       5: aload_2
       6: ifnull        112
       9: aload_2
      10: invokevirtual #139                // Method javafx/scene/control/TableColumn.getStyleClass:()Ljavafx/collections/ObservableList;
      13: aload_0
      14: getfield      #33                 // Field weakColumnStyleClassListener:Ljavafx/collections/WeakListChangeListener;
      17: invokeinterface #90,  2           // InterfaceMethod javafx/collections/ObservableList.removeListener:(Ljavafx/collections/ListChangeListener;)V
      22: aload_0
      23: invokevirtual #46                 // Method getStyleClass:()Ljavafx/collections/ObservableList;
      26: aload_2
      27: invokevirtual #139                // Method javafx/scene/control/TableColumn.getStyleClass:()Ljavafx/collections/ObservableList;
      30: invokeinterface #140,  2          // InterfaceMethod javafx/collections/ObservableList.removeAll:(Ljava/util/Collection;)Z
      35: pop
      36: aload_2
      37: invokevirtual #141                // Method javafx/scene/control/TableColumn.idProperty:()Ljavafx/beans/property/StringProperty;
      40: aload_0
      41: getfield      #32                 // Field weakColumnIdListener:Ljavafx/beans/WeakInvalidationListener;
      44: invokevirtual #142                // Method javafx/beans/property/StringProperty.removeListener:(Ljavafx/beans/InvalidationListener;)V
      47: aload_2
      48: invokevirtual #143                // Method javafx/scene/control/TableColumn.styleProperty:()Ljavafx/beans/property/StringProperty;
      51: aload_0
      52: getfield      #31                 // Field weakColumnStyleListener:Ljavafx/beans/WeakInvalidationListener;
      55: invokevirtual #142                // Method javafx/beans/property/StringProperty.removeListener:(Ljavafx/beans/InvalidationListener;)V
      58: aload_0
      59: invokevirtual #144                // Method getId:()Ljava/lang/String;
      62: astore_3
      63: aload_0
      64: invokevirtual #145                // Method getStyle:()Ljava/lang/String;
      67: astore        4
      69: aload_3
      70: ifnull        89
      73: aload_3
      74: aload_2
      75: invokevirtual #146                // Method javafx/scene/control/TableColumn.getId:()Ljava/lang/String;
      78: invokevirtual #147                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      81: ifeq          89
      84: aload_0
      85: aconst_null
      86: invokevirtual #148                // Method setId:(Ljava/lang/String;)V
      89: aload         4
      91: ifnull        112
      94: aload         4
      96: aload_2
      97: invokevirtual #149                // Method javafx/scene/control/TableColumn.getStyle:()Ljava/lang/String;
     100: invokevirtual #147                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     103: ifeq          112
     106: aload_0
     107: ldc           #150                // String
     109: invokevirtual #151                // Method setStyle:(Ljava/lang/String;)V
     112: aload_0
     113: aload_1
     114: invokespecial #152                // Method setTableColumn:(Ljavafx/scene/control/TableColumn;)V
     117: aload_1
     118: ifnull        186
     121: aload_0
     122: invokevirtual #46                 // Method getStyleClass:()Ljavafx/collections/ObservableList;
     125: aload_1
     126: invokevirtual #139                // Method javafx/scene/control/TableColumn.getStyleClass:()Ljavafx/collections/ObservableList;
     129: invokeinterface #153,  2          // InterfaceMethod javafx/collections/ObservableList.addAll:(Ljava/util/Collection;)Z
     134: pop
     135: aload_1
     136: invokevirtual #139                // Method javafx/scene/control/TableColumn.getStyleClass:()Ljavafx/collections/ObservableList;
     139: aload_0
     140: getfield      #33                 // Field weakColumnStyleClassListener:Ljavafx/collections/WeakListChangeListener;
     143: invokeinterface #154,  2          // InterfaceMethod javafx/collections/ObservableList.addListener:(Ljavafx/collections/ListChangeListener;)V
     148: aload_1
     149: invokevirtual #141                // Method javafx/scene/control/TableColumn.idProperty:()Ljavafx/beans/property/StringProperty;
     152: aload_0
     153: getfield      #32                 // Field weakColumnIdListener:Ljavafx/beans/WeakInvalidationListener;
     156: invokevirtual #155                // Method javafx/beans/property/StringProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
     159: aload_1
     160: invokevirtual #143                // Method javafx/scene/control/TableColumn.styleProperty:()Ljavafx/beans/property/StringProperty;
     163: aload_0
     164: getfield      #31                 // Field weakColumnStyleListener:Ljavafx/beans/WeakInvalidationListener;
     167: invokevirtual #155                // Method javafx/beans/property/StringProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
     170: aload_0
     171: aload_1
     172: invokevirtual #146                // Method javafx/scene/control/TableColumn.getId:()Ljava/lang/String;
     175: invokespecial #156                // Method possiblySetId:(Ljava/lang/String;)V
     178: aload_0
     179: aload_1
     180: invokevirtual #149                // Method javafx/scene/control/TableColumn.getStyle:()Ljava/lang/String;
     183: invokespecial #157                // Method possiblySetStyle:(Ljava/lang/String;)V
     186: return

  private void possiblySetId(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #144                // Method getId:()Ljava/lang/String;
       4: ifnull        17
       7: aload_0
       8: invokevirtual #144                // Method getId:()Ljava/lang/String;
      11: invokevirtual #158                // Method java/lang/String.isEmpty:()Z
      14: ifeq          22
      17: aload_0
      18: aload_1
      19: invokevirtual #148                // Method setId:(Ljava/lang/String;)V
      22: return

  private void possiblySetStyle(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #145                // Method getStyle:()Ljava/lang/String;
       4: ifnull        17
       7: aload_0
       8: invokevirtual #145                // Method getStyle:()Ljava/lang/String;
      11: invokevirtual #158                // Method java/lang/String.isEmpty:()Z
      14: ifeq          22
      17: aload_0
      18: aload_1
      19: invokevirtual #151                // Method setStyle:(Ljava/lang/String;)V
      22: return

  public java.lang.Object queryAccessibleAttribute(javafx.scene.AccessibleAttribute, java.lang.Object...);
    Code:
       0: getstatic     #159                // Field javafx/scene/control/TableCell$3.$SwitchMap$javafx$scene$AccessibleAttribute:[I
       3: aload_1
       4: invokevirtual #160                // Method javafx/scene/AccessibleAttribute.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 3
                     1: 36
                     2: 44
                     3: 52
               default: 77
          }
      36: aload_0
      37: invokevirtual #108                // Method getIndex:()I
      40: invokestatic  #161                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      43: areturn
      44: aload_0
      45: getfield      #42                 // Field columnIndex:I
      48: invokestatic  #161                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: areturn
      52: aload_0
      53: invokespecial #106                // Method isInCellSelectionMode:()Z
      56: ifeq          66
      59: aload_0
      60: invokevirtual #105                // Method isSelected:()Z
      63: goto          73
      66: aload_0
      67: invokevirtual #83                 // Method getTableRow:()Ljavafx/scene/control/TableRow;
      70: invokevirtual #162                // Method javafx/scene/control/TableRow.isSelected:()Z
      73: invokestatic  #163                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      76: areturn
      77: aload_0
      78: aload_1
      79: aload_2
      80: invokespecial #164                // Method javafx/scene/control/IndexedCell.queryAccessibleAttribute:(Ljavafx/scene/AccessibleAttribute;[Ljava/lang/Object;)Ljava/lang/Object;
      83: areturn

  public void executeAccessibleAction(javafx.scene.AccessibleAction, java.lang.Object...);
    Code:
       0: getstatic     #165                // Field javafx/scene/control/TableCell$3.$SwitchMap$javafx$scene$AccessibleAction:[I
       3: aload_1
       4: invokevirtual #166                // Method javafx/scene/AccessibleAction.ordinal:()I
       7: iaload
       8: lookupswitch  { // 1
                     1: 28
               default: 64
          }
      28: aload_0
      29: invokevirtual #63                 // Method getTableView:()Ljavafx/scene/control/TableView;
      32: astore_3
      33: aload_3
      34: ifnull        70
      37: aload_3
      38: invokevirtual #91                 // Method javafx/scene/control/TableView.getFocusModel:()Ljavafx/scene/control/TableView$TableViewFocusModel;
      41: astore        4
      43: aload         4
      45: ifnull        61
      48: aload         4
      50: aload_0
      51: invokevirtual #108                // Method getIndex:()I
      54: aload_0
      55: invokevirtual #64                 // Method getTableColumn:()Ljavafx/scene/control/TableColumn;
      58: invokevirtual #167                // Method javafx/scene/control/TableView$TableViewFocusModel.focus:(ILjavafx/scene/control/TableColumn;)V
      61: goto          70
      64: aload_0
      65: aload_1
      66: aload_2
      67: invokespecial #168                // Method javafx/scene/control/IndexedCell.executeAccessibleAction:(Ljavafx/scene/AccessibleAction;[Ljava/lang/Object;)V
      70: return

  private void lambda$new$7(javafx.beans.Observable);
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method getTableColumn:()Ljavafx/scene/control/TableColumn;
       4: ifnull        18
       7: aload_0
       8: aload_0
       9: invokevirtual #64                 // Method getTableColumn:()Ljavafx/scene/control/TableColumn;
      12: invokevirtual #146                // Method javafx/scene/control/TableColumn.getId:()Ljava/lang/String;
      15: invokespecial #156                // Method possiblySetId:(Ljava/lang/String;)V
      18: return

  private void lambda$new$6(javafx.beans.Observable);
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method getTableColumn:()Ljavafx/scene/control/TableColumn;
       4: ifnull        18
       7: aload_0
       8: aload_0
       9: invokevirtual #64                 // Method getTableColumn:()Ljavafx/scene/control/TableColumn;
      12: invokevirtual #149                // Method javafx/scene/control/TableColumn.getStyle:()Ljava/lang/String;
      15: invokespecial #157                // Method possiblySetStyle:(Ljava/lang/String;)V
      18: return

  private void lambda$new$5(javafx.collections.ListChangeListener$Change);
    Code:
       0: aload_1
       1: invokevirtual #169                // Method javafx/collections/ListChangeListener$Change.next:()Z
       4: ifeq          52
       7: aload_1
       8: invokevirtual #170                // Method javafx/collections/ListChangeListener$Change.wasRemoved:()Z
      11: ifeq          28
      14: aload_0
      15: invokevirtual #46                 // Method getStyleClass:()Ljavafx/collections/ObservableList;
      18: aload_1
      19: invokevirtual #171                // Method javafx/collections/ListChangeListener$Change.getRemoved:()Ljava/util/List;
      22: invokeinterface #140,  2          // InterfaceMethod javafx/collections/ObservableList.removeAll:(Ljava/util/Collection;)Z
      27: pop
      28: aload_1
      29: invokevirtual #172                // Method javafx/collections/ListChangeListener$Change.wasAdded:()Z
      32: ifeq          0
      35: aload_0
      36: invokevirtual #46                 // Method getStyleClass:()Ljavafx/collections/ObservableList;
      39: aload_1
      40: invokevirtual #173                // Method javafx/collections/ListChangeListener$Change.getAddedSubList:()Ljava/util/List;
      43: invokeinterface #153,  2          // InterfaceMethod javafx/collections/ObservableList.addAll:(Ljava/util/Collection;)Z
      48: pop
      49: goto          0
      52: return

  private void lambda$new$4(javafx.collections.ListChangeListener$Change);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method updateColumnIndex:()V
       4: return

  private void lambda$new$3(javafx.beans.Observable);
    Code:
       0: aload_0
       1: invokespecial #99                 // Method updateEditing:()V
       4: return

  private void lambda$new$2(javafx.beans.Observable);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #9                  // Field itemDirty:Z
       5: aload_0
       6: invokevirtual #174                // Method requestLayout:()V
       9: return

  private void lambda$new$1(javafx.beans.Observable);
    Code:
       0: aload_0
       1: invokespecial #98                 // Method updateFocus:()V
       4: return

  private void lambda$new$0(javafx.collections.ListChangeListener$Change);
    Code:
       0: aload_1
       1: invokevirtual #169                // Method javafx/collections/ListChangeListener$Change.next:()Z
       4: ifeq          28
       7: aload_1
       8: invokevirtual #172                // Method javafx/collections/ListChangeListener$Change.wasAdded:()Z
      11: ifne          21
      14: aload_1
      15: invokevirtual #170                // Method javafx/collections/ListChangeListener$Change.wasRemoved:()Z
      18: ifeq          0
      21: aload_0
      22: invokespecial #97                 // Method updateSelection:()V
      25: goto          0
      28: return

  static void access$000(javafx.scene.control.TableCell);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method updateColumnIndex:()V
       4: return

  static void access$100(javafx.scene.control.TableCell, javafx.scene.control.TableView);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method cleanUpTableViewListeners:(Ljavafx/scene/control/TableView;)V
       5: return

  static javafx.collections.WeakListChangeListener access$200(javafx.scene.control.TableCell);
    Code:
       0: aload_0
       1: getfield      #4                  // Field weakSelectedListener:Ljavafx/collections/WeakListChangeListener;
       4: areturn

  static javafx.beans.WeakInvalidationListener access$300(javafx.scene.control.TableCell);
    Code:
       0: aload_0
       1: getfield      #3                  // Field weakFocusedListener:Ljavafx/beans/WeakInvalidationListener;
       4: areturn

  static javafx.beans.WeakInvalidationListener access$400(javafx.scene.control.TableCell);
    Code:
       0: aload_0
       1: getfield      #2                  // Field weakEditingListener:Ljavafx/beans/WeakInvalidationListener;
       4: areturn

  static javafx.collections.WeakListChangeListener access$500(javafx.scene.control.TableCell);
    Code:
       0: aload_0
       1: getfield      #1                  // Field weakVisibleLeafColumnsListener:Ljavafx/collections/WeakListChangeListener;
       4: areturn

  static {};
    Code:
       0: ldc           #175                // String last-visible
       2: invokestatic  #176                // Method javafx/css/PseudoClass.getPseudoClass:(Ljava/lang/String;)Ljavafx/css/PseudoClass;
       5: putstatic     #102                // Field PSEUDO_CLASS_LAST_VISIBLE:Ljavafx/css/PseudoClass;
       8: return
}
