Compiled from "Slider.java"
public class javafx.scene.control.Slider extends javafx.scene.control.Control {
  private javafx.beans.property.DoubleProperty max;

  private javafx.beans.property.DoubleProperty min;

  private javafx.beans.property.DoubleProperty value;

  private javafx.beans.property.BooleanProperty valueChanging;

  private javafx.beans.property.ObjectProperty<javafx.geometry.Orientation> orientation;

  private javafx.beans.property.BooleanProperty showTickLabels;

  private javafx.beans.property.BooleanProperty showTickMarks;

  private javafx.beans.property.DoubleProperty majorTickUnit;

  private javafx.beans.property.IntegerProperty minorTickCount;

  private javafx.beans.property.BooleanProperty snapToTicks;

  private javafx.beans.property.ObjectProperty<javafx.util.StringConverter<java.lang.Double>> labelFormatter;

  private javafx.beans.property.DoubleProperty blockIncrement;

  private static final java.lang.String DEFAULT_STYLE_CLASS;

  private static final javafx.css.PseudoClass VERTICAL_PSEUDOCLASS_STATE;

  private static final javafx.css.PseudoClass HORIZONTAL_PSEUDOCLASS_STATE;

  public javafx.scene.control.Slider();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method javafx/scene/control/Control."<init>":()V
       4: aload_0
       5: invokespecial #12                 // Method initialize:()V
       8: return

  public javafx.scene.control.Slider(double, double, double);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method javafx/scene/control/Control."<init>":()V
       4: aload_0
       5: dload_3
       6: invokevirtual #13                 // Method setMax:(D)V
       9: aload_0
      10: dload_1
      11: invokevirtual #14                 // Method setMin:(D)V
      14: aload_0
      15: dload         5
      17: invokevirtual #15                 // Method setValue:(D)V
      20: aload_0
      21: invokespecial #10                 // Method adjustValues:()V
      24: aload_0
      25: invokespecial #12                 // Method initialize:()V
      28: return

  private void initialize();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method getStyleClass:()Ljavafx/collections/ObservableList;
       4: iconst_1
       5: anewarray     #17                 // class java/lang/String
       8: dup
       9: iconst_0
      10: ldc           #19                 // String slider
      12: aastore
      13: invokeinterface #20,  2           // InterfaceMethod javafx/collections/ObservableList.setAll:([Ljava/lang/Object;)Z
      18: pop
      19: aload_0
      20: getstatic     #21                 // Field javafx/scene/AccessibleRole.SLIDER:Ljavafx/scene/AccessibleRole;
      23: invokevirtual #22                 // Method setAccessibleRole:(Ljavafx/scene/AccessibleRole;)V
      26: return

  public final void setMax(double);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method maxProperty:()Ljavafx/beans/property/DoubleProperty;
       4: dload_1
       5: invokevirtual #24                 // Method javafx/beans/property/DoubleProperty.set:(D)V
       8: return

  public final double getMax();
    Code:
       0: aload_0
       1: getfield      #25                 // Field max:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     13
       7: ldc2_w        #26                 // double 100.0d
      10: goto          20
      13: aload_0
      14: getfield      #25                 // Field max:Ljavafx/beans/property/DoubleProperty;
      17: invokevirtual #28                 // Method javafx/beans/property/DoubleProperty.get:()D
      20: dreturn

  public final javafx.beans.property.DoubleProperty maxProperty();
    Code:
       0: aload_0
       1: getfield      #25                 // Field max:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     22
       7: aload_0
       8: new           #29                 // class javafx/scene/control/Slider$1
      11: dup
      12: aload_0
      13: ldc2_w        #26                 // double 100.0d
      16: invokespecial #30                 // Method javafx/scene/control/Slider$1."<init>":(Ljavafx/scene/control/Slider;D)V
      19: putfield      #25                 // Field max:Ljavafx/beans/property/DoubleProperty;
      22: aload_0
      23: getfield      #25                 // Field max:Ljavafx/beans/property/DoubleProperty;
      26: areturn

  public final void setMin(double);
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method minProperty:()Ljavafx/beans/property/DoubleProperty;
       4: dload_1
       5: invokevirtual #24                 // Method javafx/beans/property/DoubleProperty.set:(D)V
       8: return

  public final double getMin();
    Code:
       0: aload_0
       1: getfield      #32                 // Field min:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     11
       7: dconst_0
       8: goto          18
      11: aload_0
      12: getfield      #32                 // Field min:Ljavafx/beans/property/DoubleProperty;
      15: invokevirtual #28                 // Method javafx/beans/property/DoubleProperty.get:()D
      18: dreturn

  public final javafx.beans.property.DoubleProperty minProperty();
    Code:
       0: aload_0
       1: getfield      #32                 // Field min:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #33                 // class javafx/scene/control/Slider$2
      11: dup
      12: aload_0
      13: dconst_0
      14: invokespecial #34                 // Method javafx/scene/control/Slider$2."<init>":(Ljavafx/scene/control/Slider;D)V
      17: putfield      #32                 // Field min:Ljavafx/beans/property/DoubleProperty;
      20: aload_0
      21: getfield      #32                 // Field min:Ljavafx/beans/property/DoubleProperty;
      24: areturn

  public final void setValue(double);
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method valueProperty:()Ljavafx/beans/property/DoubleProperty;
       4: invokevirtual #36                 // Method javafx/beans/property/DoubleProperty.isBound:()Z
       7: ifne          18
      10: aload_0
      11: invokevirtual #35                 // Method valueProperty:()Ljavafx/beans/property/DoubleProperty;
      14: dload_1
      15: invokevirtual #24                 // Method javafx/beans/property/DoubleProperty.set:(D)V
      18: return

  public final double getValue();
    Code:
       0: aload_0
       1: getfield      #37                 // Field value:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     11
       7: dconst_0
       8: goto          18
      11: aload_0
      12: getfield      #37                 // Field value:Ljavafx/beans/property/DoubleProperty;
      15: invokevirtual #28                 // Method javafx/beans/property/DoubleProperty.get:()D
      18: dreturn

  public final javafx.beans.property.DoubleProperty valueProperty();
    Code:
       0: aload_0
       1: getfield      #37                 // Field value:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #38                 // class javafx/scene/control/Slider$3
      11: dup
      12: aload_0
      13: dconst_0
      14: invokespecial #39                 // Method javafx/scene/control/Slider$3."<init>":(Ljavafx/scene/control/Slider;D)V
      17: putfield      #37                 // Field value:Ljavafx/beans/property/DoubleProperty;
      20: aload_0
      21: getfield      #37                 // Field value:Ljavafx/beans/property/DoubleProperty;
      24: areturn

  public final void setValueChanging(boolean);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method valueChangingProperty:()Ljavafx/beans/property/BooleanProperty;
       4: iload_1
       5: invokevirtual #41                 // Method javafx/beans/property/BooleanProperty.set:(Z)V
       8: return

  public final boolean isValueChanging();
    Code:
       0: aload_0
       1: getfield      #42                 // Field valueChanging:Ljavafx/beans/property/BooleanProperty;
       4: ifnonnull     11
       7: iconst_0
       8: goto          18
      11: aload_0
      12: getfield      #42                 // Field valueChanging:Ljavafx/beans/property/BooleanProperty;
      15: invokevirtual #43                 // Method javafx/beans/property/BooleanProperty.get:()Z
      18: ireturn

  public final javafx.beans.property.BooleanProperty valueChangingProperty();
    Code:
       0: aload_0
       1: getfield      #42                 // Field valueChanging:Ljavafx/beans/property/BooleanProperty;
       4: ifnonnull     22
       7: aload_0
       8: new           #44                 // class javafx/beans/property/SimpleBooleanProperty
      11: dup
      12: aload_0
      13: ldc           #45                 // String valueChanging
      15: iconst_0
      16: invokespecial #46                 // Method javafx/beans/property/SimpleBooleanProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;Z)V
      19: putfield      #42                 // Field valueChanging:Ljavafx/beans/property/BooleanProperty;
      22: aload_0
      23: getfield      #42                 // Field valueChanging:Ljavafx/beans/property/BooleanProperty;
      26: areturn

  public final void setOrientation(javafx.geometry.Orientation);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method orientationProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #48                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.geometry.Orientation getOrientation();
    Code:
       0: aload_0
       1: getfield      #1                  // Field orientation:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     13
       7: getstatic     #49                 // Field javafx/geometry/Orientation.HORIZONTAL:Ljavafx/geometry/Orientation;
      10: goto          23
      13: aload_0
      14: getfield      #1                  // Field orientation:Ljavafx/beans/property/ObjectProperty;
      17: invokevirtual #50                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      20: checkcast     #51                 // class javafx/geometry/Orientation
      23: areturn

  public final javafx.beans.property.ObjectProperty<javafx.geometry.Orientation> orientationProperty();
    Code:
       0: aload_0
       1: getfield      #1                  // Field orientation:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     22
       7: aload_0
       8: new           #52                 // class javafx/scene/control/Slider$4
      11: dup
      12: aload_0
      13: getstatic     #49                 // Field javafx/geometry/Orientation.HORIZONTAL:Ljavafx/geometry/Orientation;
      16: invokespecial #53                 // Method javafx/scene/control/Slider$4."<init>":(Ljavafx/scene/control/Slider;Ljavafx/geometry/Orientation;)V
      19: putfield      #1                  // Field orientation:Ljavafx/beans/property/ObjectProperty;
      22: aload_0
      23: getfield      #1                  // Field orientation:Ljavafx/beans/property/ObjectProperty;
      26: areturn

  public final void setShowTickLabels(boolean);
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method showTickLabelsProperty:()Ljavafx/beans/property/BooleanProperty;
       4: iload_1
       5: invokevirtual #41                 // Method javafx/beans/property/BooleanProperty.set:(Z)V
       8: return

  public final boolean isShowTickLabels();
    Code:
       0: aload_0
       1: getfield      #6                  // Field showTickLabels:Ljavafx/beans/property/BooleanProperty;
       4: ifnonnull     11
       7: iconst_0
       8: goto          18
      11: aload_0
      12: getfield      #6                  // Field showTickLabels:Ljavafx/beans/property/BooleanProperty;
      15: invokevirtual #43                 // Method javafx/beans/property/BooleanProperty.get:()Z
      18: ireturn

  public final javafx.beans.property.BooleanProperty showTickLabelsProperty();
    Code:
       0: aload_0
       1: getfield      #6                  // Field showTickLabels:Ljavafx/beans/property/BooleanProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #55                 // class javafx/scene/control/Slider$5
      11: dup
      12: aload_0
      13: iconst_0
      14: invokespecial #56                 // Method javafx/scene/control/Slider$5."<init>":(Ljavafx/scene/control/Slider;Z)V
      17: putfield      #6                  // Field showTickLabels:Ljavafx/beans/property/BooleanProperty;
      20: aload_0
      21: getfield      #6                  // Field showTickLabels:Ljavafx/beans/property/BooleanProperty;
      24: areturn

  public final void setShowTickMarks(boolean);
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method showTickMarksProperty:()Ljavafx/beans/property/BooleanProperty;
       4: iload_1
       5: invokevirtual #41                 // Method javafx/beans/property/BooleanProperty.set:(Z)V
       8: return

  public final boolean isShowTickMarks();
    Code:
       0: aload_0
       1: getfield      #5                  // Field showTickMarks:Ljavafx/beans/property/BooleanProperty;
       4: ifnonnull     11
       7: iconst_0
       8: goto          18
      11: aload_0
      12: getfield      #5                  // Field showTickMarks:Ljavafx/beans/property/BooleanProperty;
      15: invokevirtual #43                 // Method javafx/beans/property/BooleanProperty.get:()Z
      18: ireturn

  public final javafx.beans.property.BooleanProperty showTickMarksProperty();
    Code:
       0: aload_0
       1: getfield      #5                  // Field showTickMarks:Ljavafx/beans/property/BooleanProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #58                 // class javafx/scene/control/Slider$6
      11: dup
      12: aload_0
      13: iconst_0
      14: invokespecial #59                 // Method javafx/scene/control/Slider$6."<init>":(Ljavafx/scene/control/Slider;Z)V
      17: putfield      #5                  // Field showTickMarks:Ljavafx/beans/property/BooleanProperty;
      20: aload_0
      21: getfield      #5                  // Field showTickMarks:Ljavafx/beans/property/BooleanProperty;
      24: areturn

  public final void setMajorTickUnit(double);
    Code:
       0: dload_1
       1: dconst_0
       2: dcmpg
       3: ifgt          16
       6: new           #60                 // class java/lang/IllegalArgumentException
       9: dup
      10: ldc           #61                 // String MajorTickUnit cannot be less than or equal to 0.
      12: invokespecial #62                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: invokevirtual #63                 // Method majorTickUnitProperty:()Ljavafx/beans/property/DoubleProperty;
      20: dload_1
      21: invokevirtual #24                 // Method javafx/beans/property/DoubleProperty.set:(D)V
      24: return

  public final double getMajorTickUnit();
    Code:
       0: aload_0
       1: getfield      #3                  // Field majorTickUnit:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     13
       7: ldc2_w        #64                 // double 25.0d
      10: goto          20
      13: aload_0
      14: getfield      #3                  // Field majorTickUnit:Ljavafx/beans/property/DoubleProperty;
      17: invokevirtual #28                 // Method javafx/beans/property/DoubleProperty.get:()D
      20: dreturn

  public final javafx.beans.property.DoubleProperty majorTickUnitProperty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field majorTickUnit:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     22
       7: aload_0
       8: new           #66                 // class javafx/scene/control/Slider$7
      11: dup
      12: aload_0
      13: ldc2_w        #64                 // double 25.0d
      16: invokespecial #67                 // Method javafx/scene/control/Slider$7."<init>":(Ljavafx/scene/control/Slider;D)V
      19: putfield      #3                  // Field majorTickUnit:Ljavafx/beans/property/DoubleProperty;
      22: aload_0
      23: getfield      #3                  // Field majorTickUnit:Ljavafx/beans/property/DoubleProperty;
      26: areturn

  public final void setMinorTickCount(int);
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method minorTickCountProperty:()Ljavafx/beans/property/IntegerProperty;
       4: iload_1
       5: invokevirtual #69                 // Method javafx/beans/property/IntegerProperty.set:(I)V
       8: return

  public final int getMinorTickCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field minorTickCount:Ljavafx/beans/property/IntegerProperty;
       4: ifnonnull     11
       7: iconst_3
       8: goto          18
      11: aload_0
      12: getfield      #2                  // Field minorTickCount:Ljavafx/beans/property/IntegerProperty;
      15: invokevirtual #70                 // Method javafx/beans/property/IntegerProperty.get:()I
      18: ireturn

  public final javafx.beans.property.IntegerProperty minorTickCountProperty();
    Code:
       0: aload_0
       1: getfield      #2                  // Field minorTickCount:Ljavafx/beans/property/IntegerProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #71                 // class javafx/scene/control/Slider$8
      11: dup
      12: aload_0
      13: iconst_3
      14: invokespecial #72                 // Method javafx/scene/control/Slider$8."<init>":(Ljavafx/scene/control/Slider;I)V
      17: putfield      #2                  // Field minorTickCount:Ljavafx/beans/property/IntegerProperty;
      20: aload_0
      21: getfield      #2                  // Field minorTickCount:Ljavafx/beans/property/IntegerProperty;
      24: areturn

  public final void setSnapToTicks(boolean);
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method snapToTicksProperty:()Ljavafx/beans/property/BooleanProperty;
       4: iload_1
       5: invokevirtual #41                 // Method javafx/beans/property/BooleanProperty.set:(Z)V
       8: return

  public final boolean isSnapToTicks();
    Code:
       0: aload_0
       1: getfield      #4                  // Field snapToTicks:Ljavafx/beans/property/BooleanProperty;
       4: ifnonnull     11
       7: iconst_0
       8: goto          18
      11: aload_0
      12: getfield      #4                  // Field snapToTicks:Ljavafx/beans/property/BooleanProperty;
      15: invokevirtual #43                 // Method javafx/beans/property/BooleanProperty.get:()Z
      18: ireturn

  public final javafx.beans.property.BooleanProperty snapToTicksProperty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field snapToTicks:Ljavafx/beans/property/BooleanProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #74                 // class javafx/scene/control/Slider$9
      11: dup
      12: aload_0
      13: iconst_0
      14: invokespecial #75                 // Method javafx/scene/control/Slider$9."<init>":(Ljavafx/scene/control/Slider;Z)V
      17: putfield      #4                  // Field snapToTicks:Ljavafx/beans/property/BooleanProperty;
      20: aload_0
      21: getfield      #4                  // Field snapToTicks:Ljavafx/beans/property/BooleanProperty;
      24: areturn

  public final void setLabelFormatter(javafx.util.StringConverter<java.lang.Double>);
    Code:
       0: aload_0
       1: invokevirtual #76                 // Method labelFormatterProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #48                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.util.StringConverter<java.lang.Double> getLabelFormatter();
    Code:
       0: aload_0
       1: getfield      #77                 // Field labelFormatter:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #77                 // Field labelFormatter:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #50                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #78                 // class javafx/util/StringConverter
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.util.StringConverter<java.lang.Double>> labelFormatterProperty();
    Code:
       0: aload_0
       1: getfield      #77                 // Field labelFormatter:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     21
       7: aload_0
       8: new           #79                 // class javafx/beans/property/SimpleObjectProperty
      11: dup
      12: aload_0
      13: ldc           #80                 // String labelFormatter
      15: invokespecial #81                 // Method javafx/beans/property/SimpleObjectProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      18: putfield      #77                 // Field labelFormatter:Ljavafx/beans/property/ObjectProperty;
      21: aload_0
      22: getfield      #77                 // Field labelFormatter:Ljavafx/beans/property/ObjectProperty;
      25: areturn

  public final void setBlockIncrement(double);
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method blockIncrementProperty:()Ljavafx/beans/property/DoubleProperty;
       4: dload_1
       5: invokevirtual #24                 // Method javafx/beans/property/DoubleProperty.set:(D)V
       8: return

  public final double getBlockIncrement();
    Code:
       0: aload_0
       1: getfield      #7                  // Field blockIncrement:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     13
       7: ldc2_w        #83                 // double 10.0d
      10: goto          20
      13: aload_0
      14: getfield      #7                  // Field blockIncrement:Ljavafx/beans/property/DoubleProperty;
      17: invokevirtual #28                 // Method javafx/beans/property/DoubleProperty.get:()D
      20: dreturn

  public final javafx.beans.property.DoubleProperty blockIncrementProperty();
    Code:
       0: aload_0
       1: getfield      #7                  // Field blockIncrement:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     22
       7: aload_0
       8: new           #85                 // class javafx/scene/control/Slider$10
      11: dup
      12: aload_0
      13: ldc2_w        #83                 // double 10.0d
      16: invokespecial #86                 // Method javafx/scene/control/Slider$10."<init>":(Ljavafx/scene/control/Slider;D)V
      19: putfield      #7                  // Field blockIncrement:Ljavafx/beans/property/DoubleProperty;
      22: aload_0
      23: getfield      #7                  // Field blockIncrement:Ljavafx/beans/property/DoubleProperty;
      26: areturn

  public void adjustValue(double);
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method getMin:()D
       4: dstore_3
       5: aload_0
       6: invokevirtual #88                 // Method getMax:()D
       9: dstore        5
      11: dload         5
      13: dload_3
      14: dcmpg
      15: ifgt          19
      18: return
      19: dload_1
      20: dload_3
      21: dcmpg
      22: ifge          29
      25: dload_3
      26: goto          30
      29: dload_1
      30: dstore_1
      31: dload_1
      32: dload         5
      34: dcmpl
      35: ifle          43
      38: dload         5
      40: goto          44
      43: dload_1
      44: dstore_1
      45: aload_0
      46: aload_0
      47: dload_1
      48: invokespecial #89                 // Method snapValueToTicks:(D)D
      51: invokevirtual #15                 // Method setValue:(D)V
      54: return

  public void increment();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #90                 // Method getValue:()D
       5: aload_0
       6: invokevirtual #91                 // Method getBlockIncrement:()D
       9: dadd
      10: invokevirtual #92                 // Method adjustValue:(D)V
      13: return

  public void decrement();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #90                 // Method getValue:()D
       5: aload_0
       6: invokevirtual #91                 // Method getBlockIncrement:()D
       9: dsub
      10: invokevirtual #92                 // Method adjustValue:(D)V
      13: return

  private void adjustValues();
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method getValue:()D
       4: aload_0
       5: invokevirtual #87                 // Method getMin:()D
       8: dcmpg
       9: iflt          24
      12: aload_0
      13: invokevirtual #90                 // Method getValue:()D
      16: aload_0
      17: invokevirtual #88                 // Method getMax:()D
      20: dcmpl
      21: ifle          43
      24: aload_0
      25: aload_0
      26: invokevirtual #87                 // Method getMin:()D
      29: aload_0
      30: invokevirtual #90                 // Method getValue:()D
      33: aload_0
      34: invokevirtual #88                 // Method getMax:()D
      37: invokestatic  #93                 // Method com/sun/javafx/util/Utils.clamp:(DDD)D
      40: invokevirtual #15                 // Method setValue:(D)V
      43: return

  private double snapValueToTicks(double);
    Code:
       0: dload_1
       1: dstore_3
       2: aload_0
       3: invokevirtual #94                 // Method isSnapToTicks:()Z
       6: ifeq          95
       9: dconst_0
      10: dstore        5
      12: aload_0
      13: invokevirtual #95                 // Method getMinorTickCount:()I
      16: ifeq          40
      19: aload_0
      20: invokevirtual #96                 // Method getMajorTickUnit:()D
      23: aload_0
      24: invokevirtual #95                 // Method getMinorTickCount:()I
      27: iconst_0
      28: invokestatic  #97                 // Method java/lang/Math.max:(II)I
      31: iconst_1
      32: iadd
      33: i2d
      34: ddiv
      35: dstore        5
      37: goto          46
      40: aload_0
      41: invokevirtual #96                 // Method getMajorTickUnit:()D
      44: dstore        5
      46: dload_3
      47: aload_0
      48: invokevirtual #87                 // Method getMin:()D
      51: dsub
      52: dload         5
      54: ddiv
      55: d2i
      56: istore        7
      58: iload         7
      60: i2d
      61: dload         5
      63: dmul
      64: aload_0
      65: invokevirtual #87                 // Method getMin:()D
      68: dadd
      69: dstore        8
      71: iload         7
      73: iconst_1
      74: iadd
      75: i2d
      76: dload         5
      78: dmul
      79: aload_0
      80: invokevirtual #87                 // Method getMin:()D
      83: dadd
      84: dstore        10
      86: dload         8
      88: dload_3
      89: dload         10
      91: invokestatic  #98                 // Method com/sun/javafx/util/Utils.nearest:(DDD)D
      94: dstore_3
      95: aload_0
      96: invokevirtual #87                 // Method getMin:()D
      99: dload_3
     100: aload_0
     101: invokevirtual #88                 // Method getMax:()D
     104: invokestatic  #93                 // Method com/sun/javafx/util/Utils.clamp:(DDD)D
     107: dreturn

  protected javafx.scene.control.Skin<?> createDefaultSkin();
    Code:
       0: new           #99                 // class javafx/scene/control/skin/SliderSkin
       3: dup
       4: aload_0
       5: invokespecial #100                // Method javafx/scene/control/skin/SliderSkin."<init>":(Ljavafx/scene/control/Slider;)V
       8: areturn

  public static java.util.List<javafx.css.CssMetaData<? extends javafx.css.Styleable, ?>> getClassCssMetaData();
    Code:
       0: invokestatic  #101                // Method javafx/scene/control/Slider$StyleableProperties.access$1700:()Ljava/util/List;
       3: areturn

  protected java.util.List<javafx.css.CssMetaData<? extends javafx.css.Styleable, ?>> getControlCssMetaData();
    Code:
       0: invokestatic  #102                // Method getClassCssMetaData:()Ljava/util/List;
       3: areturn

  public java.lang.Object queryAccessibleAttribute(javafx.scene.AccessibleAttribute, java.lang.Object...);
    Code:
       0: getstatic     #103                // Field javafx/scene/control/Slider$11.$SwitchMap$javafx$scene$AccessibleAttribute:[I
       3: aload_1
       4: invokevirtual #104                // Method javafx/scene/AccessibleAttribute.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 4
                     1: 40
                     2: 48
                     3: 56
                     4: 64
               default: 69
          }
      40: aload_0
      41: invokevirtual #90                 // Method getValue:()D
      44: invokestatic  #105                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      47: areturn
      48: aload_0
      49: invokevirtual #88                 // Method getMax:()D
      52: invokestatic  #105                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      55: areturn
      56: aload_0
      57: invokevirtual #87                 // Method getMin:()D
      60: invokestatic  #105                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      63: areturn
      64: aload_0
      65: invokevirtual #106                // Method getOrientation:()Ljavafx/geometry/Orientation;
      68: areturn
      69: aload_0
      70: aload_1
      71: aload_2
      72: invokespecial #107                // Method javafx/scene/control/Control.queryAccessibleAttribute:(Ljavafx/scene/AccessibleAttribute;[Ljava/lang/Object;)Ljava/lang/Object;
      75: areturn

  public void executeAccessibleAction(javafx.scene.AccessibleAction, java.lang.Object...);
    Code:
       0: getstatic     #108                // Field javafx/scene/control/Slider$11.$SwitchMap$javafx$scene$AccessibleAction:[I
       3: aload_1
       4: invokevirtual #109                // Method javafx/scene/AccessibleAction.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 3
                     1: 36
                     2: 43
                     3: 50
               default: 72
          }
      36: aload_0
      37: invokevirtual #110                // Method increment:()V
      40: goto          78
      43: aload_0
      44: invokevirtual #111                // Method decrement:()V
      47: goto          78
      50: aload_2
      51: iconst_0
      52: aaload
      53: checkcast     #112                // class java/lang/Double
      56: astore_3
      57: aload_3
      58: ifnull        78
      61: aload_0
      62: aload_3
      63: invokevirtual #113                // Method java/lang/Double.doubleValue:()D
      66: invokevirtual #15                 // Method setValue:(D)V
      69: goto          78
      72: aload_0
      73: aload_1
      74: aload_2
      75: invokespecial #114                // Method javafx/scene/control/Control.executeAccessibleAction:(Ljavafx/scene/AccessibleAction;[Ljava/lang/Object;)V
      78: return

  static void access$000(javafx.scene.control.Slider);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method adjustValues:()V
       4: return

  static javafx.css.PseudoClass access$100();
    Code:
       0: getstatic     #9                  // Field VERTICAL_PSEUDOCLASS_STATE:Ljavafx/css/PseudoClass;
       3: areturn

  static javafx.css.PseudoClass access$200();
    Code:
       0: getstatic     #8                  // Field HORIZONTAL_PSEUDOCLASS_STATE:Ljavafx/css/PseudoClass;
       3: areturn

  static javafx.beans.property.DoubleProperty access$1000(javafx.scene.control.Slider);
    Code:
       0: aload_0
       1: getfield      #7                  // Field blockIncrement:Ljavafx/beans/property/DoubleProperty;
       4: areturn

  static javafx.beans.property.BooleanProperty access$1100(javafx.scene.control.Slider);
    Code:
       0: aload_0
       1: getfield      #6                  // Field showTickLabels:Ljavafx/beans/property/BooleanProperty;
       4: areturn

  static javafx.beans.property.BooleanProperty access$1200(javafx.scene.control.Slider);
    Code:
       0: aload_0
       1: getfield      #5                  // Field showTickMarks:Ljavafx/beans/property/BooleanProperty;
       4: areturn

  static javafx.beans.property.BooleanProperty access$1300(javafx.scene.control.Slider);
    Code:
       0: aload_0
       1: getfield      #4                  // Field snapToTicks:Ljavafx/beans/property/BooleanProperty;
       4: areturn

  static javafx.beans.property.DoubleProperty access$1400(javafx.scene.control.Slider);
    Code:
       0: aload_0
       1: getfield      #3                  // Field majorTickUnit:Ljavafx/beans/property/DoubleProperty;
       4: areturn

  static javafx.beans.property.IntegerProperty access$1500(javafx.scene.control.Slider);
    Code:
       0: aload_0
       1: getfield      #2                  // Field minorTickCount:Ljavafx/beans/property/IntegerProperty;
       4: areturn

  static javafx.beans.property.ObjectProperty access$1600(javafx.scene.control.Slider);
    Code:
       0: aload_0
       1: getfield      #1                  // Field orientation:Ljavafx/beans/property/ObjectProperty;
       4: areturn

  static {};
    Code:
       0: ldc           #115                // String vertical
       2: invokestatic  #116                // Method javafx/css/PseudoClass.getPseudoClass:(Ljava/lang/String;)Ljavafx/css/PseudoClass;
       5: putstatic     #9                  // Field VERTICAL_PSEUDOCLASS_STATE:Ljavafx/css/PseudoClass;
       8: ldc           #117                // String horizontal
      10: invokestatic  #116                // Method javafx/css/PseudoClass.getPseudoClass:(Ljava/lang/String;)Ljavafx/css/PseudoClass;
      13: putstatic     #8                  // Field HORIZONTAL_PSEUDOCLASS_STATE:Ljavafx/css/PseudoClass;
      16: return
}
