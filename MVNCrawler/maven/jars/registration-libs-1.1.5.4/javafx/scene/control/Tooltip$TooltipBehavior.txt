Compiled from "Tooltip.java"
class javafx.scene.control.Tooltip$TooltipBehavior {
  private javafx.animation.Timeline activationTimer;

  private javafx.animation.Timeline hideTimer;

  private javafx.animation.Timeline leftTimer;

  private javafx.scene.Node hoveredNode;

  private javafx.scene.control.Tooltip activatedTooltip;

  private javafx.scene.control.Tooltip visibleTooltip;

  private double lastMouseX;

  private double lastMouseY;

  private boolean hideOnExit;

  private boolean cssForced;

  private javafx.event.EventHandler<javafx.scene.input.MouseEvent> MOVE_HANDLER;

  private javafx.event.EventHandler<javafx.scene.input.MouseEvent> LEAVING_HANDLER;

  private javafx.event.EventHandler<javafx.scene.input.MouseEvent> KILL_HANDLER;

  static final boolean $assertionsDisabled;

  javafx.scene.control.Tooltip$TooltipBehavior(boolean);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class javafx/animation/Timeline
       8: dup
       9: invokespecial #8                  // Method javafx/animation/Timeline."<init>":()V
      12: putfield      #9                  // Field activationTimer:Ljavafx/animation/Timeline;
      15: aload_0
      16: new           #7                  // class javafx/animation/Timeline
      19: dup
      20: invokespecial #8                  // Method javafx/animation/Timeline."<init>":()V
      23: putfield      #10                 // Field hideTimer:Ljavafx/animation/Timeline;
      26: aload_0
      27: new           #7                  // class javafx/animation/Timeline
      30: dup
      31: invokespecial #8                  // Method javafx/animation/Timeline."<init>":()V
      34: putfield      #11                 // Field leftTimer:Ljavafx/animation/Timeline;
      37: aload_0
      38: iconst_0
      39: putfield      #12                 // Field cssForced:Z
      42: aload_0
      43: aload_0
      44: invokedynamic #13,  0             // InvokeDynamic #0:handle:(Ljavafx/scene/control/Tooltip$TooltipBehavior;)Ljavafx/event/EventHandler;
      49: putfield      #14                 // Field MOVE_HANDLER:Ljavafx/event/EventHandler;
      52: aload_0
      53: aload_0
      54: invokedynamic #15,  0             // InvokeDynamic #1:handle:(Ljavafx/scene/control/Tooltip$TooltipBehavior;)Ljavafx/event/EventHandler;
      59: putfield      #16                 // Field LEAVING_HANDLER:Ljavafx/event/EventHandler;
      62: aload_0
      63: aload_0
      64: invokedynamic #17,  0             // InvokeDynamic #2:handle:(Ljavafx/scene/control/Tooltip$TooltipBehavior;)Ljavafx/event/EventHandler;
      69: putfield      #18                 // Field KILL_HANDLER:Ljavafx/event/EventHandler;
      72: aload_0
      73: iload_1
      74: putfield      #19                 // Field hideOnExit:Z
      77: aload_0
      78: getfield      #9                  // Field activationTimer:Ljavafx/animation/Timeline;
      81: aload_0
      82: invokedynamic #20,  0             // InvokeDynamic #3:handle:(Ljavafx/scene/control/Tooltip$TooltipBehavior;)Ljavafx/event/EventHandler;
      87: invokevirtual #21                 // Method javafx/animation/Timeline.setOnFinished:(Ljavafx/event/EventHandler;)V
      90: aload_0
      91: getfield      #10                 // Field hideTimer:Ljavafx/animation/Timeline;
      94: aload_0
      95: invokedynamic #22,  0             // InvokeDynamic #4:handle:(Ljavafx/scene/control/Tooltip$TooltipBehavior;)Ljavafx/event/EventHandler;
     100: invokevirtual #21                 // Method javafx/animation/Timeline.setOnFinished:(Ljavafx/event/EventHandler;)V
     103: aload_0
     104: getfield      #11                 // Field leftTimer:Ljavafx/animation/Timeline;
     107: aload_0
     108: iload_1
     109: invokedynamic #23,  0             // InvokeDynamic #5:handle:(Ljavafx/scene/control/Tooltip$TooltipBehavior;Z)Ljavafx/event/EventHandler;
     114: invokevirtual #21                 // Method javafx/animation/Timeline.setOnFinished:(Ljavafx/event/EventHandler;)V
     117: return

  private void install(javafx.scene.Node, javafx.scene.control.Tooltip);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: getstatic     #24                 // Field javafx/scene/input/MouseEvent.MOUSE_MOVED:Ljavafx/event/EventType;
       9: aload_0
      10: getfield      #14                 // Field MOVE_HANDLER:Ljavafx/event/EventHandler;
      13: invokevirtual #25                 // Method javafx/scene/Node.addEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      16: aload_1
      17: getstatic     #26                 // Field javafx/scene/input/MouseEvent.MOUSE_EXITED:Ljavafx/event/EventType;
      20: aload_0
      21: getfield      #16                 // Field LEAVING_HANDLER:Ljavafx/event/EventHandler;
      24: invokevirtual #25                 // Method javafx/scene/Node.addEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      27: aload_1
      28: getstatic     #27                 // Field javafx/scene/input/MouseEvent.MOUSE_PRESSED:Ljavafx/event/EventType;
      31: aload_0
      32: getfield      #18                 // Field KILL_HANDLER:Ljavafx/event/EventHandler;
      35: invokevirtual #25                 // Method javafx/scene/Node.addEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      38: aload_1
      39: invokevirtual #28                 // Method javafx/scene/Node.getProperties:()Ljavafx/collections/ObservableMap;
      42: invokestatic  #29                 // Method javafx/scene/control/Tooltip.access$1200:()Ljava/lang/String;
      45: aload_2
      46: invokeinterface #30,  3           // InterfaceMethod javafx/collections/ObservableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      51: pop
      52: return

  private void uninstall(javafx.scene.Node);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: getstatic     #24                 // Field javafx/scene/input/MouseEvent.MOUSE_MOVED:Ljavafx/event/EventType;
       9: aload_0
      10: getfield      #14                 // Field MOVE_HANDLER:Ljavafx/event/EventHandler;
      13: invokevirtual #31                 // Method javafx/scene/Node.removeEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      16: aload_1
      17: getstatic     #26                 // Field javafx/scene/input/MouseEvent.MOUSE_EXITED:Ljavafx/event/EventType;
      20: aload_0
      21: getfield      #16                 // Field LEAVING_HANDLER:Ljavafx/event/EventHandler;
      24: invokevirtual #31                 // Method javafx/scene/Node.removeEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      27: aload_1
      28: getstatic     #27                 // Field javafx/scene/input/MouseEvent.MOUSE_PRESSED:Ljavafx/event/EventType;
      31: aload_0
      32: getfield      #18                 // Field KILL_HANDLER:Ljavafx/event/EventHandler;
      35: invokevirtual #31                 // Method javafx/scene/Node.removeEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      38: aload_1
      39: invokevirtual #28                 // Method javafx/scene/Node.getProperties:()Ljavafx/collections/ObservableMap;
      42: invokestatic  #29                 // Method javafx/scene/control/Tooltip.access$1200:()Ljava/lang/String;
      45: invokeinterface #32,  2           // InterfaceMethod javafx/collections/ObservableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      50: checkcast     #33                 // class javafx/scene/control/Tooltip
      53: astore_2
      54: aload_2
      55: ifnull        103
      58: aload_1
      59: invokevirtual #28                 // Method javafx/scene/Node.getProperties:()Ljavafx/collections/ObservableMap;
      62: invokestatic  #29                 // Method javafx/scene/control/Tooltip.access$1200:()Ljava/lang/String;
      65: invokeinterface #34,  2           // InterfaceMethod javafx/collections/ObservableMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      70: pop
      71: aload_2
      72: aload_0
      73: getfield      #35                 // Field visibleTooltip:Ljavafx/scene/control/Tooltip;
      76: invokevirtual #36                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      79: ifne          93
      82: aload_2
      83: aload_0
      84: getfield      #37                 // Field activatedTooltip:Ljavafx/scene/control/Tooltip;
      87: invokevirtual #36                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      90: ifeq          103
      93: aload_0
      94: getfield      #18                 // Field KILL_HANDLER:Ljavafx/event/EventHandler;
      97: aconst_null
      98: invokeinterface #38,  2           // InterfaceMethod javafx/event/EventHandler.handle:(Ljavafx/event/Event;)V
     103: return

  private javafx.stage.Window getWindow(javafx.scene.Node);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: aconst_null
       5: goto          12
       8: aload_1
       9: invokevirtual #39                 // Method javafx/scene/Node.getScene:()Ljavafx/scene/Scene;
      12: astore_2
      13: aload_2
      14: ifnonnull     21
      17: aconst_null
      18: goto          25
      21: aload_2
      22: invokevirtual #40                 // Method javafx/scene/Scene.getWindow:()Ljavafx/stage/Window;
      25: areturn

  private boolean isWindowHierarchyVisible(javafx.scene.Node);
    Code:
       0: aload_1
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: istore_2
      10: aload_1
      11: ifnonnull     18
      14: aconst_null
      15: goto          22
      18: aload_1
      19: invokevirtual #41                 // Method javafx/scene/Node.getParent:()Ljavafx/scene/Parent;
      22: astore_3
      23: aload_3
      24: ifnull        44
      27: iload_2
      28: ifeq          44
      31: aload_3
      32: invokevirtual #42                 // Method javafx/scene/Parent.isVisible:()Z
      35: istore_2
      36: aload_3
      37: invokevirtual #43                 // Method javafx/scene/Parent.getParent:()Ljavafx/scene/Parent;
      40: astore_3
      41: goto          23
      44: iload_2
      45: ireturn

  private void lambda$new$5(javafx.scene.input.MouseEvent);
    Code:
       0: aload_0
       1: getfield      #9                  // Field activationTimer:Ljavafx/animation/Timeline;
       4: invokevirtual #44                 // Method javafx/animation/Timeline.stop:()V
       7: aload_0
       8: getfield      #10                 // Field hideTimer:Ljavafx/animation/Timeline;
      11: invokevirtual #44                 // Method javafx/animation/Timeline.stop:()V
      14: aload_0
      15: getfield      #11                 // Field leftTimer:Ljavafx/animation/Timeline;
      18: invokevirtual #44                 // Method javafx/animation/Timeline.stop:()V
      21: aload_0
      22: getfield      #35                 // Field visibleTooltip:Ljavafx/scene/control/Tooltip;
      25: ifnull        35
      28: aload_0
      29: getfield      #35                 // Field visibleTooltip:Ljavafx/scene/control/Tooltip;
      32: invokevirtual #45                 // Method javafx/scene/control/Tooltip.hide:()V
      35: aload_0
      36: aconst_null
      37: putfield      #1                  // Field hoveredNode:Ljavafx/scene/Node;
      40: aload_0
      41: aconst_null
      42: putfield      #37                 // Field activatedTooltip:Ljavafx/scene/control/Tooltip;
      45: aload_0
      46: aconst_null
      47: putfield      #35                 // Field visibleTooltip:Ljavafx/scene/control/Tooltip;
      50: return

  private void lambda$new$4(javafx.scene.input.MouseEvent);
    Code:
       0: aload_0
       1: getfield      #9                  // Field activationTimer:Ljavafx/animation/Timeline;
       4: invokevirtual #46                 // Method javafx/animation/Timeline.getStatus:()Ljavafx/animation/Animation$Status;
       7: getstatic     #47                 // Field javafx/animation/Animation$Status.RUNNING:Ljavafx/animation/Animation$Status;
      10: if_acmpne     23
      13: aload_0
      14: getfield      #9                  // Field activationTimer:Ljavafx/animation/Timeline;
      17: invokevirtual #44                 // Method javafx/animation/Timeline.stop:()V
      20: goto          155
      23: aload_0
      24: getfield      #10                 // Field hideTimer:Ljavafx/animation/Timeline;
      27: invokevirtual #46                 // Method javafx/animation/Timeline.getStatus:()Ljavafx/animation/Animation$Status;
      30: getstatic     #47                 // Field javafx/animation/Animation$Status.RUNNING:Ljavafx/animation/Animation$Status;
      33: if_acmpne     155
      36: getstatic     #48                 // Field $assertionsDisabled:Z
      39: ifne          57
      42: aload_0
      43: getfield      #35                 // Field visibleTooltip:Ljavafx/scene/control/Tooltip;
      46: ifnonnull     57
      49: new           #49                 // class java/lang/AssertionError
      52: dup
      53: invokespecial #50                 // Method java/lang/AssertionError."<init>":()V
      56: athrow
      57: aload_0
      58: getfield      #10                 // Field hideTimer:Ljavafx/animation/Timeline;
      61: invokevirtual #44                 // Method javafx/animation/Timeline.stop:()V
      64: aload_0
      65: getfield      #19                 // Field hideOnExit:Z
      68: ifeq          78
      71: aload_0
      72: getfield      #35                 // Field visibleTooltip:Ljavafx/scene/control/Tooltip;
      75: invokevirtual #45                 // Method javafx/scene/control/Tooltip.hide:()V
      78: aload_1
      79: invokevirtual #51                 // Method javafx/scene/input/MouseEvent.getSource:()Ljava/lang/Object;
      82: checkcast     #52                 // class javafx/scene/Node
      85: astore_2
      86: aload_2
      87: invokevirtual #28                 // Method javafx/scene/Node.getProperties:()Ljavafx/collections/ObservableMap;
      90: invokestatic  #29                 // Method javafx/scene/control/Tooltip.access$1200:()Ljava/lang/String;
      93: invokeinterface #32,  2           // InterfaceMethod javafx/collections/ObservableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      98: checkcast     #33                 // class javafx/scene/control/Tooltip
     101: astore_3
     102: aload_3
     103: ifnull        155
     106: aload_3
     107: invokevirtual #53                 // Method javafx/scene/control/Tooltip.getHideDelay:()Ljavafx/util/Duration;
     110: ifnull        148
     113: aload_0
     114: getfield      #11                 // Field leftTimer:Ljavafx/animation/Timeline;
     117: invokevirtual #54                 // Method javafx/animation/Timeline.getKeyFrames:()Ljavafx/collections/ObservableList;
     120: iconst_1
     121: anewarray     #55                 // class javafx/animation/KeyFrame
     124: dup
     125: iconst_0
     126: new           #55                 // class javafx/animation/KeyFrame
     129: dup
     130: aload_3
     131: invokevirtual #53                 // Method javafx/scene/control/Tooltip.getHideDelay:()Ljavafx/util/Duration;
     134: iconst_0
     135: anewarray     #56                 // class javafx/animation/KeyValue
     138: invokespecial #57                 // Method javafx/animation/KeyFrame."<init>":(Ljavafx/util/Duration;[Ljavafx/animation/KeyValue;)V
     141: aastore
     142: invokeinterface #58,  2           // InterfaceMethod javafx/collections/ObservableList.setAll:([Ljava/lang/Object;)Z
     147: pop
     148: aload_0
     149: getfield      #11                 // Field leftTimer:Ljavafx/animation/Timeline;
     152: invokevirtual #59                 // Method javafx/animation/Timeline.playFromStart:()V
     155: aload_0
     156: aconst_null
     157: putfield      #1                  // Field hoveredNode:Ljavafx/scene/Node;
     160: aload_0
     161: aconst_null
     162: putfield      #37                 // Field activatedTooltip:Ljavafx/scene/control/Tooltip;
     165: aload_0
     166: getfield      #19                 // Field hideOnExit:Z
     169: ifeq          177
     172: aload_0
     173: aconst_null
     174: putfield      #35                 // Field visibleTooltip:Ljavafx/scene/control/Tooltip;
     177: return

  private void lambda$new$3(javafx.scene.input.MouseEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #60                 // Method javafx/scene/input/MouseEvent.getScreenX:()D
       5: putfield      #3                  // Field lastMouseX:D
       8: aload_0
       9: aload_1
      10: invokevirtual #61                 // Method javafx/scene/input/MouseEvent.getScreenY:()D
      13: putfield      #2                  // Field lastMouseY:D
      16: aload_0
      17: getfield      #10                 // Field hideTimer:Ljavafx/animation/Timeline;
      20: invokevirtual #46                 // Method javafx/animation/Timeline.getStatus:()Ljavafx/animation/Animation$Status;
      23: getstatic     #47                 // Field javafx/animation/Animation$Status.RUNNING:Ljavafx/animation/Animation$Status;
      26: if_acmpne     30
      29: return
      30: aload_0
      31: aload_1
      32: invokevirtual #51                 // Method javafx/scene/input/MouseEvent.getSource:()Ljava/lang/Object;
      35: checkcast     #52                 // class javafx/scene/Node
      38: putfield      #1                  // Field hoveredNode:Ljavafx/scene/Node;
      41: aload_0
      42: getfield      #1                  // Field hoveredNode:Ljavafx/scene/Node;
      45: invokevirtual #28                 // Method javafx/scene/Node.getProperties:()Ljavafx/collections/ObservableMap;
      48: invokestatic  #29                 // Method javafx/scene/control/Tooltip.access$1200:()Ljava/lang/String;
      51: invokeinterface #32,  2           // InterfaceMethod javafx/collections/ObservableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #33                 // class javafx/scene/control/Tooltip
      59: astore_2
      60: aload_2
      61: ifnull        310
      64: aload_0
      65: aload_0
      66: getfield      #1                  // Field hoveredNode:Ljavafx/scene/Node;
      69: invokespecial #62                 // Method getWindow:(Ljavafx/scene/Node;)Ljavafx/stage/Window;
      72: astore_3
      73: aload_0
      74: aload_0
      75: getfield      #1                  // Field hoveredNode:Ljavafx/scene/Node;
      78: invokespecial #63                 // Method isWindowHierarchyVisible:(Ljavafx/scene/Node;)Z
      81: istore        4
      83: aload_3
      84: ifnull        310
      87: iload         4
      89: ifeq          310
      92: aload_0
      93: getfield      #11                 // Field leftTimer:Ljavafx/animation/Timeline;
      96: invokevirtual #46                 // Method javafx/animation/Timeline.getStatus:()Ljavafx/animation/Animation$Status;
      99: getstatic     #47                 // Field javafx/animation/Animation$Status.RUNNING:Ljavafx/animation/Animation$Status;
     102: if_acmpne     206
     105: aload_0
     106: getfield      #35                 // Field visibleTooltip:Ljavafx/scene/control/Tooltip;
     109: ifnull        119
     112: aload_0
     113: getfield      #35                 // Field visibleTooltip:Ljavafx/scene/control/Tooltip;
     116: invokevirtual #45                 // Method javafx/scene/control/Tooltip.hide:()V
     119: aload_0
     120: aload_2
     121: putfield      #35                 // Field visibleTooltip:Ljavafx/scene/control/Tooltip;
     124: aload_2
     125: aload_3
     126: aload_1
     127: invokevirtual #60                 // Method javafx/scene/input/MouseEvent.getScreenX:()D
     130: invokestatic  #64                 // Method javafx/scene/control/Tooltip.access$1300:()I
     133: i2d
     134: dadd
     135: aload_1
     136: invokevirtual #61                 // Method javafx/scene/input/MouseEvent.getScreenY:()D
     139: invokestatic  #65                 // Method javafx/scene/control/Tooltip.access$1400:()I
     142: i2d
     143: dadd
     144: invokevirtual #66                 // Method javafx/scene/control/Tooltip.show:(Ljavafx/stage/Window;DD)V
     147: aload_0
     148: getfield      #11                 // Field leftTimer:Ljavafx/animation/Timeline;
     151: invokevirtual #44                 // Method javafx/animation/Timeline.stop:()V
     154: aload_2
     155: invokevirtual #67                 // Method javafx/scene/control/Tooltip.getShowDuration:()Ljavafx/util/Duration;
     158: ifnull        196
     161: aload_0
     162: getfield      #10                 // Field hideTimer:Ljavafx/animation/Timeline;
     165: invokevirtual #54                 // Method javafx/animation/Timeline.getKeyFrames:()Ljavafx/collections/ObservableList;
     168: iconst_1
     169: anewarray     #55                 // class javafx/animation/KeyFrame
     172: dup
     173: iconst_0
     174: new           #55                 // class javafx/animation/KeyFrame
     177: dup
     178: aload_2
     179: invokevirtual #67                 // Method javafx/scene/control/Tooltip.getShowDuration:()Ljavafx/util/Duration;
     182: iconst_0
     183: anewarray     #56                 // class javafx/animation/KeyValue
     186: invokespecial #57                 // Method javafx/animation/KeyFrame."<init>":(Ljavafx/util/Duration;[Ljavafx/animation/KeyValue;)V
     189: aastore
     190: invokeinterface #58,  2           // InterfaceMethod javafx/collections/ObservableList.setAll:([Ljava/lang/Object;)Z
     195: pop
     196: aload_0
     197: getfield      #10                 // Field hideTimer:Ljavafx/animation/Timeline;
     200: invokevirtual #59                 // Method javafx/animation/Timeline.playFromStart:()V
     203: goto          310
     206: aload_0
     207: getfield      #12                 // Field cssForced:Z
     210: ifne          244
     213: aload_2
     214: invokevirtual #68                 // Method javafx/scene/control/Tooltip.getOpacity:()D
     217: dstore        5
     219: aload_2
     220: dconst_0
     221: invokevirtual #69                 // Method javafx/scene/control/Tooltip.setOpacity:(D)V
     224: aload_2
     225: aload_3
     226: invokevirtual #70                 // Method javafx/scene/control/Tooltip.show:(Ljavafx/stage/Window;)V
     229: aload_2
     230: invokevirtual #45                 // Method javafx/scene/control/Tooltip.hide:()V
     233: aload_2
     234: dload         5
     236: invokevirtual #69                 // Method javafx/scene/control/Tooltip.setOpacity:(D)V
     239: aload_0
     240: iconst_1
     241: putfield      #12                 // Field cssForced:Z
     244: aload_2
     245: iconst_1
     246: invokevirtual #71                 // Method javafx/scene/control/Tooltip.setActivated:(Z)V
     249: aload_0
     250: aload_2
     251: putfield      #37                 // Field activatedTooltip:Ljavafx/scene/control/Tooltip;
     254: aload_0
     255: getfield      #9                  // Field activationTimer:Ljavafx/animation/Timeline;
     258: invokevirtual #44                 // Method javafx/animation/Timeline.stop:()V
     261: aload_2
     262: invokevirtual #72                 // Method javafx/scene/control/Tooltip.getShowDelay:()Ljavafx/util/Duration;
     265: ifnull        303
     268: aload_0
     269: getfield      #9                  // Field activationTimer:Ljavafx/animation/Timeline;
     272: invokevirtual #54                 // Method javafx/animation/Timeline.getKeyFrames:()Ljavafx/collections/ObservableList;
     275: iconst_1
     276: anewarray     #55                 // class javafx/animation/KeyFrame
     279: dup
     280: iconst_0
     281: new           #55                 // class javafx/animation/KeyFrame
     284: dup
     285: aload_2
     286: invokevirtual #72                 // Method javafx/scene/control/Tooltip.getShowDelay:()Ljavafx/util/Duration;
     289: iconst_0
     290: anewarray     #56                 // class javafx/animation/KeyValue
     293: invokespecial #57                 // Method javafx/animation/KeyFrame."<init>":(Ljavafx/util/Duration;[Ljavafx/animation/KeyValue;)V
     296: aastore
     297: invokeinterface #58,  2           // InterfaceMethod javafx/collections/ObservableList.setAll:([Ljava/lang/Object;)Z
     302: pop
     303: aload_0
     304: getfield      #9                  // Field activationTimer:Ljavafx/animation/Timeline;
     307: invokevirtual #59                 // Method javafx/animation/Timeline.playFromStart:()V
     310: return

  private void lambda$new$2(boolean, javafx.event.ActionEvent);
    Code:
       0: iload_1
       1: ifne          42
       4: getstatic     #48                 // Field $assertionsDisabled:Z
       7: ifne          25
      10: aload_0
      11: getfield      #35                 // Field visibleTooltip:Ljavafx/scene/control/Tooltip;
      14: ifnonnull     25
      17: new           #49                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #50                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: getfield      #35                 // Field visibleTooltip:Ljavafx/scene/control/Tooltip;
      29: invokevirtual #45                 // Method javafx/scene/control/Tooltip.hide:()V
      32: aload_0
      33: aconst_null
      34: putfield      #35                 // Field visibleTooltip:Ljavafx/scene/control/Tooltip;
      37: aload_0
      38: aconst_null
      39: putfield      #1                  // Field hoveredNode:Ljavafx/scene/Node;
      42: return

  private void lambda$new$1(javafx.event.ActionEvent);
    Code:
       0: getstatic     #48                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #35                 // Field visibleTooltip:Ljavafx/scene/control/Tooltip;
      10: ifnonnull     21
      13: new           #49                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #50                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #35                 // Field visibleTooltip:Ljavafx/scene/control/Tooltip;
      25: invokevirtual #45                 // Method javafx/scene/control/Tooltip.hide:()V
      28: aload_0
      29: aconst_null
      30: putfield      #35                 // Field visibleTooltip:Ljavafx/scene/control/Tooltip;
      33: aload_0
      34: aconst_null
      35: putfield      #1                  // Field hoveredNode:Ljavafx/scene/Node;
      38: return

  private void lambda$new$0(javafx.event.ActionEvent);
    Code:
       0: getstatic     #48                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #37                 // Field activatedTooltip:Ljavafx/scene/control/Tooltip;
      10: ifnonnull     21
      13: new           #49                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #50                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #1                  // Field hoveredNode:Ljavafx/scene/Node;
      26: invokespecial #62                 // Method getWindow:(Ljavafx/scene/Node;)Ljavafx/stage/Window;
      29: astore_2
      30: aload_0
      31: aload_0
      32: getfield      #1                  // Field hoveredNode:Ljavafx/scene/Node;
      35: invokespecial #63                 // Method isWindowHierarchyVisible:(Ljavafx/scene/Node;)Z
      38: istore_3
      39: aload_2
      40: ifnull        251
      43: aload_2
      44: invokevirtual #73                 // Method javafx/stage/Window.isShowing:()Z
      47: ifeq          251
      50: iload_3
      51: ifeq          251
      54: aload_0
      55: getfield      #3                  // Field lastMouseX:D
      58: dstore        4
      60: aload_0
      61: getfield      #2                  // Field lastMouseY:D
      64: dstore        6
      66: aload_0
      67: getfield      #1                  // Field hoveredNode:Ljavafx/scene/Node;
      70: invokevirtual #74                 // Method javafx/scene/Node.getEffectiveNodeOrientation:()Ljavafx/geometry/NodeOrientation;
      73: astore        8
      75: aload_0
      76: getfield      #37                 // Field activatedTooltip:Ljavafx/scene/control/Tooltip;
      79: invokevirtual #75                 // Method javafx/scene/control/Tooltip.getScene:()Ljavafx/scene/Scene;
      82: aload         8
      84: invokevirtual #76                 // Method javafx/scene/Scene.setNodeOrientation:(Ljavafx/geometry/NodeOrientation;)V
      87: aload         8
      89: getstatic     #77                 // Field javafx/geometry/NodeOrientation.RIGHT_TO_LEFT:Ljavafx/geometry/NodeOrientation;
      92: if_acmpne     107
      95: dload         4
      97: aload_0
      98: getfield      #37                 // Field activatedTooltip:Ljavafx/scene/control/Tooltip;
     101: invokevirtual #78                 // Method javafx/scene/control/Tooltip.getWidth:()D
     104: dsub
     105: dstore        4
     107: aload_0
     108: getfield      #37                 // Field activatedTooltip:Ljavafx/scene/control/Tooltip;
     111: aload_2
     112: dload         4
     114: invokestatic  #64                 // Method javafx/scene/control/Tooltip.access$1300:()I
     117: i2d
     118: dadd
     119: dload         6
     121: invokestatic  #65                 // Method javafx/scene/control/Tooltip.access$1400:()I
     124: i2d
     125: dadd
     126: invokevirtual #66                 // Method javafx/scene/control/Tooltip.show:(Ljavafx/stage/Window;DD)V
     129: dload         6
     131: invokestatic  #65                 // Method javafx/scene/control/Tooltip.access$1400:()I
     134: i2d
     135: dadd
     136: aload_0
     137: getfield      #37                 // Field activatedTooltip:Ljavafx/scene/control/Tooltip;
     140: invokevirtual #79                 // Method javafx/scene/control/Tooltip.getAnchorY:()D
     143: dcmpl
     144: ifle          183
     147: aload_0
     148: getfield      #37                 // Field activatedTooltip:Ljavafx/scene/control/Tooltip;
     151: invokevirtual #45                 // Method javafx/scene/control/Tooltip.hide:()V
     154: dload         6
     156: aload_0
     157: getfield      #37                 // Field activatedTooltip:Ljavafx/scene/control/Tooltip;
     160: invokevirtual #80                 // Method javafx/scene/control/Tooltip.getHeight:()D
     163: dsub
     164: dstore        6
     166: aload_0
     167: getfield      #37                 // Field activatedTooltip:Ljavafx/scene/control/Tooltip;
     170: aload_2
     171: dload         4
     173: invokestatic  #64                 // Method javafx/scene/control/Tooltip.access$1300:()I
     176: i2d
     177: dadd
     178: dload         6
     180: invokevirtual #66                 // Method javafx/scene/control/Tooltip.show:(Ljavafx/stage/Window;DD)V
     183: aload_0
     184: aload_0
     185: getfield      #37                 // Field activatedTooltip:Ljavafx/scene/control/Tooltip;
     188: putfield      #35                 // Field visibleTooltip:Ljavafx/scene/control/Tooltip;
     191: aload_0
     192: aconst_null
     193: putfield      #1                  // Field hoveredNode:Ljavafx/scene/Node;
     196: aload_0
     197: getfield      #37                 // Field activatedTooltip:Ljavafx/scene/control/Tooltip;
     200: invokevirtual #67                 // Method javafx/scene/control/Tooltip.getShowDuration:()Ljavafx/util/Duration;
     203: ifnull        244
     206: aload_0
     207: getfield      #10                 // Field hideTimer:Ljavafx/animation/Timeline;
     210: invokevirtual #54                 // Method javafx/animation/Timeline.getKeyFrames:()Ljavafx/collections/ObservableList;
     213: iconst_1
     214: anewarray     #55                 // class javafx/animation/KeyFrame
     217: dup
     218: iconst_0
     219: new           #55                 // class javafx/animation/KeyFrame
     222: dup
     223: aload_0
     224: getfield      #37                 // Field activatedTooltip:Ljavafx/scene/control/Tooltip;
     227: invokevirtual #67                 // Method javafx/scene/control/Tooltip.getShowDuration:()Ljavafx/util/Duration;
     230: iconst_0
     231: anewarray     #56                 // class javafx/animation/KeyValue
     234: invokespecial #57                 // Method javafx/animation/KeyFrame."<init>":(Ljavafx/util/Duration;[Ljavafx/animation/KeyValue;)V
     237: aastore
     238: invokeinterface #58,  2           // InterfaceMethod javafx/collections/ObservableList.setAll:([Ljava/lang/Object;)Z
     243: pop
     244: aload_0
     245: getfield      #10                 // Field hideTimer:Ljavafx/animation/Timeline;
     248: invokevirtual #59                 // Method javafx/animation/Timeline.playFromStart:()V
     251: aload_0
     252: getfield      #37                 // Field activatedTooltip:Ljavafx/scene/control/Tooltip;
     255: iconst_0
     256: invokevirtual #71                 // Method javafx/scene/control/Tooltip.setActivated:(Z)V
     259: aload_0
     260: aconst_null
     261: putfield      #37                 // Field activatedTooltip:Ljavafx/scene/control/Tooltip;
     264: return

  static void access$000(javafx.scene.control.Tooltip$TooltipBehavior, javafx.scene.Node, javafx.scene.control.Tooltip);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #5                  // Method install:(Ljavafx/scene/Node;Ljavafx/scene/control/Tooltip;)V
       6: return

  static void access$100(javafx.scene.control.Tooltip$TooltipBehavior, javafx.scene.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method uninstall:(Ljavafx/scene/Node;)V
       5: return

  static double access$300(javafx.scene.control.Tooltip$TooltipBehavior);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lastMouseX:D
       4: dreturn

  static double access$400(javafx.scene.control.Tooltip$TooltipBehavior);
    Code:
       0: aload_0
       1: getfield      #2                  // Field lastMouseY:D
       4: dreturn

  static javafx.scene.Node access$1100(javafx.scene.control.Tooltip$TooltipBehavior);
    Code:
       0: aload_0
       1: getfield      #1                  // Field hoveredNode:Ljavafx/scene/Node;
       4: areturn

  static {};
    Code:
       0: ldc           #33                 // class javafx/scene/control/Tooltip
       2: invokevirtual #81                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #48                 // Field $assertionsDisabled:Z
      16: return
}
