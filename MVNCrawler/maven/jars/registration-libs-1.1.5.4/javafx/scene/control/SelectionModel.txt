Compiled from "SelectionModel.java"
public abstract class javafx.scene.control.SelectionModel<T> {
  private javafx.beans.property.ReadOnlyIntegerWrapper selectedIndex;

  private javafx.beans.property.ReadOnlyObjectWrapper<T> selectedItem;

  public final javafx.beans.property.ReadOnlyIntegerProperty selectedIndexProperty();
    Code:
       0: aload_0
       1: getfield      #1                  // Field selectedIndex:Ljavafx/beans/property/ReadOnlyIntegerWrapper;
       4: invokevirtual #2                  // Method javafx/beans/property/ReadOnlyIntegerWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyIntegerProperty;
       7: areturn

  protected final void setSelectedIndex(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field selectedIndex:Ljavafx/beans/property/ReadOnlyIntegerWrapper;
       4: iload_1
       5: invokevirtual #3                  // Method javafx/beans/property/ReadOnlyIntegerWrapper.set:(I)V
       8: return

  public final int getSelectedIndex();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method selectedIndexProperty:()Ljavafx/beans/property/ReadOnlyIntegerProperty;
       4: invokevirtual #5                  // Method javafx/beans/property/ReadOnlyIntegerProperty.get:()I
       7: ireturn

  public final javafx.beans.property.ReadOnlyObjectProperty<T> selectedItemProperty();
    Code:
       0: aload_0
       1: getfield      #6                  // Field selectedItem:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #7                  // Method javafx/beans/property/ReadOnlyObjectWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       7: areturn

  protected final void setSelectedItem(T);
    Code:
       0: aload_0
       1: getfield      #6                  // Field selectedItem:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: aload_1
       5: invokevirtual #8                  // Method javafx/beans/property/ReadOnlyObjectWrapper.set:(Ljava/lang/Object;)V
       8: return

  public final T getSelectedItem();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method selectedItemProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       4: invokevirtual #10                 // Method javafx/beans/property/ReadOnlyObjectProperty.get:()Ljava/lang/Object;
       7: areturn

  public javafx.scene.control.SelectionModel();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #12                 // class javafx/beans/property/ReadOnlyIntegerWrapper
       8: dup
       9: aload_0
      10: ldc           #13                 // String selectedIndex
      12: iconst_m1
      13: invokespecial #14                 // Method javafx/beans/property/ReadOnlyIntegerWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;I)V
      16: putfield      #1                  // Field selectedIndex:Ljavafx/beans/property/ReadOnlyIntegerWrapper;
      19: aload_0
      20: new           #15                 // class javafx/beans/property/ReadOnlyObjectWrapper
      23: dup
      24: aload_0
      25: ldc           #16                 // String selectedItem
      27: invokespecial #17                 // Method javafx/beans/property/ReadOnlyObjectWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      30: putfield      #6                  // Field selectedItem:Ljavafx/beans/property/ReadOnlyObjectWrapper;
      33: return

  public abstract void clearAndSelect(int);

  public abstract void select(int);

  public abstract void select(T);

  public abstract void clearSelection(int);

  public abstract void clearSelection();

  public abstract boolean isSelected(int);

  public abstract boolean isEmpty();

  public abstract void selectPrevious();

  public abstract void selectNext();

  public abstract void selectFirst();

  public abstract void selectLast();
}
