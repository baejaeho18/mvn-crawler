Compiled from "TableViewSkinBase.java"
public abstract class javafx.scene.control.skin.TableViewSkinBase<M, S, C extends javafx.scene.control.Control, I extends javafx.scene.control.IndexedCell<M>, TC extends javafx.scene.control.TableColumnBase<S, ?>> extends javafx.scene.control.skin.VirtualContainerBase<C, I> {
  private static final double GOLDEN_RATIO_MULTIPLIER;

  private static final boolean IS_PANNABLE;

  private final java.lang.String EMPTY_TABLE_TEXT;

  private final java.lang.String NO_COLUMNS_TEXT;

  javafx.scene.control.skin.VirtualFlow<I> flow;

  private boolean contentWidthDirty;

  private javafx.scene.layout.Region columnReorderLine;

  private javafx.scene.layout.Region columnReorderOverlay;

  private javafx.scene.control.skin.TableHeaderRow tableHeaderRow;

  private javafx.util.Callback<C, I> rowFactory;

  private javafx.scene.layout.StackPane placeholderRegion;

  private javafx.scene.control.Label placeholderLabel;

  private int visibleColCount;

  boolean needCellsRecreated;

  boolean needCellsReconfigured;

  private int itemCount;

  private javafx.collections.MapChangeListener<java.lang.Object, java.lang.Object> propertiesMapListener;

  private javafx.collections.ListChangeListener<S> rowCountListener;

  private javafx.collections.ListChangeListener<TC> visibleLeafColumnsListener;

  private javafx.beans.InvalidationListener widthListener;

  private javafx.beans.InvalidationListener itemsChangeListener;

  private javafx.collections.WeakListChangeListener<S> weakRowCountListener;

  private javafx.collections.WeakListChangeListener<TC> weakVisibleLeafColumnsListener;

  private javafx.beans.WeakInvalidationListener weakWidthListener;

  private javafx.beans.WeakInvalidationListener weakItemsChangeListener;

  public javafx.scene.control.skin.TableViewSkinBase(C);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method javafx/scene/control/skin/VirtualContainerBase."<init>":(Ljavafx/scene/control/Control;)V
       5: aload_0
       6: ldc           #3                  // String TableView.noContent
       8: invokestatic  #4                  // Method com/sun/javafx/scene/control/skin/resources/ControlResources.getString:(Ljava/lang/String;)Ljava/lang/String;
      11: putfield      #5                  // Field EMPTY_TABLE_TEXT:Ljava/lang/String;
      14: aload_0
      15: ldc           #6                  // String TableView.noColumns
      17: invokestatic  #4                  // Method com/sun/javafx/scene/control/skin/resources/ControlResources.getString:(Ljava/lang/String;)Ljava/lang/String;
      20: putfield      #7                  // Field NO_COLUMNS_TEXT:Ljava/lang/String;
      23: aload_0
      24: iconst_1
      25: putfield      #8                  // Field contentWidthDirty:Z
      28: aload_0
      29: iconst_1
      30: putfield      #9                  // Field needCellsRecreated:Z
      33: aload_0
      34: iconst_0
      35: putfield      #10                 // Field needCellsReconfigured:Z
      38: aload_0
      39: iconst_m1
      40: putfield      #11                 // Field itemCount:I
      43: aload_0
      44: aload_0
      45: invokedynamic #12,  0             // InvokeDynamic #0:onChanged:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/collections/MapChangeListener;
      50: putfield      #13                 // Field propertiesMapListener:Ljavafx/collections/MapChangeListener;
      53: aload_0
      54: aload_0
      55: invokedynamic #14,  0             // InvokeDynamic #1:onChanged:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/collections/ListChangeListener;
      60: putfield      #15                 // Field rowCountListener:Ljavafx/collections/ListChangeListener;
      63: aload_0
      64: aload_0
      65: invokedynamic #16,  0             // InvokeDynamic #2:onChanged:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/collections/ListChangeListener;
      70: putfield      #17                 // Field visibleLeafColumnsListener:Ljavafx/collections/ListChangeListener;
      73: aload_0
      74: aload_0
      75: invokedynamic #18,  0             // InvokeDynamic #3:invalidated:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/beans/InvalidationListener;
      80: putfield      #19                 // Field widthListener:Ljavafx/beans/InvalidationListener;
      83: aload_0
      84: new           #20                 // class javafx/collections/WeakListChangeListener
      87: dup
      88: aload_0
      89: getfield      #15                 // Field rowCountListener:Ljavafx/collections/ListChangeListener;
      92: invokespecial #21                 // Method javafx/collections/WeakListChangeListener."<init>":(Ljavafx/collections/ListChangeListener;)V
      95: putfield      #22                 // Field weakRowCountListener:Ljavafx/collections/WeakListChangeListener;
      98: aload_0
      99: new           #20                 // class javafx/collections/WeakListChangeListener
     102: dup
     103: aload_0
     104: getfield      #17                 // Field visibleLeafColumnsListener:Ljavafx/collections/ListChangeListener;
     107: invokespecial #21                 // Method javafx/collections/WeakListChangeListener."<init>":(Ljavafx/collections/ListChangeListener;)V
     110: putfield      #23                 // Field weakVisibleLeafColumnsListener:Ljavafx/collections/WeakListChangeListener;
     113: aload_0
     114: new           #24                 // class javafx/beans/WeakInvalidationListener
     117: dup
     118: aload_0
     119: getfield      #19                 // Field widthListener:Ljavafx/beans/InvalidationListener;
     122: invokespecial #25                 // Method javafx/beans/WeakInvalidationListener."<init>":(Ljavafx/beans/InvalidationListener;)V
     125: putfield      #26                 // Field weakWidthListener:Ljavafx/beans/WeakInvalidationListener;
     128: aload_0
     129: aload_0
     130: invokevirtual #27                 // Method getVirtualFlow:()Ljavafx/scene/control/skin/VirtualFlow;
     133: putfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     136: aload_0
     137: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     140: getstatic     #29                 // Field IS_PANNABLE:Z
     143: invokevirtual #30                 // Method javafx/scene/control/skin/VirtualFlow.setPannable:(Z)V
     146: aload_0
     147: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     150: invokevirtual #31                 // Method javafx/scene/control/skin/VirtualFlow.getHbar:()Lcom/sun/javafx/scene/control/VirtualScrollBar;
     153: invokevirtual #32                 // Method com/sun/javafx/scene/control/VirtualScrollBar.valueProperty:()Ljavafx/beans/property/DoubleProperty;
     156: aload_0
     157: invokedynamic #33,  0             // InvokeDynamic #4:invalidated:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/beans/InvalidationListener;
     162: invokevirtual #34                 // Method javafx/beans/property/DoubleProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
     165: aload_0
     166: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     169: invokevirtual #31                 // Method javafx/scene/control/skin/VirtualFlow.getHbar:()Lcom/sun/javafx/scene/control/VirtualScrollBar;
     172: ldc2_w        #35                 // double 15.0d
     175: invokevirtual #37                 // Method com/sun/javafx/scene/control/VirtualScrollBar.setUnitIncrement:(D)V
     178: aload_0
     179: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     182: invokevirtual #31                 // Method javafx/scene/control/skin/VirtualFlow.getHbar:()Lcom/sun/javafx/scene/control/VirtualScrollBar;
     185: ldc2_w        #39                 // double 80.0d
     188: invokevirtual #41                 // Method com/sun/javafx/scene/control/VirtualScrollBar.setBlockIncrement:(D)V
     191: aload_0
     192: new           #42                 // class javafx/scene/layout/Region
     195: dup
     196: invokespecial #43                 // Method javafx/scene/layout/Region."<init>":()V
     199: putfield      #44                 // Field columnReorderLine:Ljavafx/scene/layout/Region;
     202: aload_0
     203: getfield      #44                 // Field columnReorderLine:Ljavafx/scene/layout/Region;
     206: invokevirtual #45                 // Method javafx/scene/layout/Region.getStyleClass:()Ljavafx/collections/ObservableList;
     209: iconst_1
     210: anewarray     #46                 // class java/lang/String
     213: dup
     214: iconst_0
     215: ldc           #47                 // String column-resize-line
     217: aastore
     218: invokeinterface #48,  2           // InterfaceMethod javafx/collections/ObservableList.setAll:([Ljava/lang/Object;)Z
     223: pop
     224: aload_0
     225: getfield      #44                 // Field columnReorderLine:Ljavafx/scene/layout/Region;
     228: iconst_0
     229: invokevirtual #49                 // Method javafx/scene/layout/Region.setManaged:(Z)V
     232: aload_0
     233: getfield      #44                 // Field columnReorderLine:Ljavafx/scene/layout/Region;
     236: iconst_0
     237: invokevirtual #50                 // Method javafx/scene/layout/Region.setVisible:(Z)V
     240: aload_0
     241: new           #42                 // class javafx/scene/layout/Region
     244: dup
     245: invokespecial #43                 // Method javafx/scene/layout/Region."<init>":()V
     248: putfield      #51                 // Field columnReorderOverlay:Ljavafx/scene/layout/Region;
     251: aload_0
     252: getfield      #51                 // Field columnReorderOverlay:Ljavafx/scene/layout/Region;
     255: invokevirtual #45                 // Method javafx/scene/layout/Region.getStyleClass:()Ljavafx/collections/ObservableList;
     258: iconst_1
     259: anewarray     #46                 // class java/lang/String
     262: dup
     263: iconst_0
     264: ldc           #52                 // String column-overlay
     266: aastore
     267: invokeinterface #48,  2           // InterfaceMethod javafx/collections/ObservableList.setAll:([Ljava/lang/Object;)Z
     272: pop
     273: aload_0
     274: getfield      #51                 // Field columnReorderOverlay:Ljavafx/scene/layout/Region;
     277: iconst_0
     278: invokevirtual #50                 // Method javafx/scene/layout/Region.setVisible:(Z)V
     281: aload_0
     282: getfield      #51                 // Field columnReorderOverlay:Ljavafx/scene/layout/Region;
     285: iconst_0
     286: invokevirtual #49                 // Method javafx/scene/layout/Region.setManaged:(Z)V
     289: aload_0
     290: aload_0
     291: invokevirtual #53                 // Method createTableHeaderRow:()Ljavafx/scene/control/skin/TableHeaderRow;
     294: putfield      #54                 // Field tableHeaderRow:Ljavafx/scene/control/skin/TableHeaderRow;
     297: aload_0
     298: getfield      #54                 // Field tableHeaderRow:Ljavafx/scene/control/skin/TableHeaderRow;
     301: iconst_0
     302: invokevirtual #55                 // Method javafx/scene/control/skin/TableHeaderRow.setFocusTraversable:(Z)V
     305: aload_0
     306: invokevirtual #56                 // Method getChildren:()Ljavafx/collections/ObservableList;
     309: iconst_4
     310: anewarray     #57                 // class javafx/scene/Node
     313: dup
     314: iconst_0
     315: aload_0
     316: getfield      #54                 // Field tableHeaderRow:Ljavafx/scene/control/skin/TableHeaderRow;
     319: aastore
     320: dup
     321: iconst_1
     322: aload_0
     323: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     326: aastore
     327: dup
     328: iconst_2
     329: aload_0
     330: getfield      #51                 // Field columnReorderOverlay:Ljavafx/scene/layout/Region;
     333: aastore
     334: dup
     335: iconst_3
     336: aload_0
     337: getfield      #44                 // Field columnReorderLine:Ljavafx/scene/layout/Region;
     340: aastore
     341: invokeinterface #58,  2           // InterfaceMethod javafx/collections/ObservableList.addAll:([Ljava/lang/Object;)Z
     346: pop
     347: aload_0
     348: invokespecial #59                 // Method updateVisibleColumnCount:()V
     351: aload_0
     352: aload_0
     353: invokespecial #60                 // Method getVisibleLeafColumns:()Ljavafx/collections/ObservableList;
     356: invokestatic  #61                 // Method javafx/collections/FXCollections.emptyObservableList:()Ljavafx/collections/ObservableList;
     359: invokespecial #62                 // Method updateVisibleLeafColumnWidthListeners:(Ljava/util/List;Ljava/util/List;)V
     362: aload_0
     363: getfield      #54                 // Field tableHeaderRow:Ljavafx/scene/control/skin/TableHeaderRow;
     366: invokevirtual #63                 // Method javafx/scene/control/skin/TableHeaderRow.reorderingProperty:()Ljavafx/beans/property/BooleanProperty;
     369: aload_0
     370: invokedynamic #64,  0             // InvokeDynamic #5:invalidated:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/beans/InvalidationListener;
     375: invokevirtual #65                 // Method javafx/beans/property/BooleanProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
     378: aload_0
     379: invokespecial #60                 // Method getVisibleLeafColumns:()Ljavafx/collections/ObservableList;
     382: aload_0
     383: getfield      #23                 // Field weakVisibleLeafColumnsListener:Ljavafx/collections/WeakListChangeListener;
     386: invokeinterface #66,  2           // InterfaceMethod javafx/collections/ObservableList.addListener:(Ljavafx/collections/ListChangeListener;)V
     391: aload_0
     392: invokestatic  #67                 // Method javafx/scene/control/skin/TableSkinUtils.itemsProperty:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/beans/property/ObjectProperty;
     395: astore_2
     396: aload_0
     397: aconst_null
     398: aload_2
     399: invokevirtual #68                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
     402: checkcast     #69                 // class javafx/collections/ObservableList
     405: invokespecial #1                  // Method updateTableItems:(Ljavafx/collections/ObservableList;Ljavafx/collections/ObservableList;)V
     408: aload_0
     409: new           #70                 // class javafx/scene/control/skin/TableViewSkinBase$1
     412: dup
     413: aload_0
     414: aload_2
     415: invokespecial #71                 // Method javafx/scene/control/skin/TableViewSkinBase$1."<init>":(Ljavafx/scene/control/skin/TableViewSkinBase;Ljavafx/beans/property/ObjectProperty;)V
     418: putfield      #72                 // Field itemsChangeListener:Ljavafx/beans/InvalidationListener;
     421: aload_0
     422: new           #24                 // class javafx/beans/WeakInvalidationListener
     425: dup
     426: aload_0
     427: getfield      #72                 // Field itemsChangeListener:Ljavafx/beans/InvalidationListener;
     430: invokespecial #25                 // Method javafx/beans/WeakInvalidationListener."<init>":(Ljavafx/beans/InvalidationListener;)V
     433: putfield      #73                 // Field weakItemsChangeListener:Ljavafx/beans/WeakInvalidationListener;
     436: aload_2
     437: aload_0
     438: getfield      #73                 // Field weakItemsChangeListener:Ljavafx/beans/WeakInvalidationListener;
     441: invokevirtual #74                 // Method javafx/beans/property/ObjectProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
     444: aload_1
     445: invokevirtual #75                 // Method javafx/scene/control/Control.getProperties:()Ljavafx/collections/ObservableMap;
     448: astore_3
     449: aload_3
     450: ldc           #77                 // String refreshKey
     452: invokeinterface #78,  2           // InterfaceMethod javafx/collections/ObservableMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     457: pop
     458: aload_3
     459: ldc           #79                 // String recreateKey
     461: invokeinterface #78,  2           // InterfaceMethod javafx/collections/ObservableMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     466: pop
     467: aload_3
     468: aload_0
     469: getfield      #13                 // Field propertiesMapListener:Ljavafx/collections/MapChangeListener;
     472: invokeinterface #80,  2           // InterfaceMethod javafx/collections/ObservableMap.addListener:(Ljavafx/collections/MapChangeListener;)V
     477: aload_1
     478: invokestatic  #81                 // Method javafx/scene/control/ScrollToEvent.scrollToColumn:()Ljavafx/event/EventType;
     481: aload_0
     482: invokedynamic #82,  0             // InvokeDynamic #6:handle:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/event/EventHandler;
     487: invokevirtual #83                 // Method javafx/scene/control/Control.addEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
     490: aload_0
     491: invokedynamic #84,  0             // InvokeDynamic #7:invalidated:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/beans/InvalidationListener;
     496: astore        4
     498: aload_0
     499: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     502: invokevirtual #85                 // Method javafx/scene/control/skin/VirtualFlow.widthProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
     505: aload         4
     507: invokevirtual #86                 // Method javafx/beans/property/ReadOnlyDoubleProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
     510: aload_0
     511: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     514: invokevirtual #87                 // Method javafx/scene/control/skin/VirtualFlow.getVbar:()Lcom/sun/javafx/scene/control/VirtualScrollBar;
     517: invokevirtual #88                 // Method com/sun/javafx/scene/control/VirtualScrollBar.widthProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
     520: aload         4
     522: invokevirtual #86                 // Method javafx/beans/property/ReadOnlyDoubleProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
     525: aload_0
     526: invokestatic  #89                 // Method javafx/scene/control/skin/TableSkinUtils.rowFactoryProperty:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/beans/property/ObjectProperty;
     529: astore        5
     531: aload_0
     532: aload         5
     534: aload_0
     535: aload         5
     537: invokedynamic #90,  0             // InvokeDynamic #8:accept:(Ljavafx/scene/control/skin/TableViewSkinBase;Ljavafx/beans/property/ObjectProperty;)Ljava/util/function/Consumer;
     542: invokevirtual #91                 // Method registerChangeListener:(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Consumer;)V
     545: aload_0
     546: aload_0
     547: invokestatic  #92                 // Method javafx/scene/control/skin/TableSkinUtils.placeholderProperty:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/beans/property/ObjectProperty;
     550: aload_0
     551: invokedynamic #93,  0             // InvokeDynamic #9:accept:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljava/util/function/Consumer;
     556: invokevirtual #91                 // Method registerChangeListener:(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Consumer;)V
     559: aload_0
     560: aload_0
     561: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     564: invokevirtual #87                 // Method javafx/scene/control/skin/VirtualFlow.getVbar:()Lcom/sun/javafx/scene/control/VirtualScrollBar;
     567: invokevirtual #94                 // Method com/sun/javafx/scene/control/VirtualScrollBar.visibleProperty:()Ljavafx/beans/property/BooleanProperty;
     570: aload_0
     571: invokedynamic #95,  0             // InvokeDynamic #10:accept:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljava/util/function/Consumer;
     576: invokevirtual #91                 // Method registerChangeListener:(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Consumer;)V
     579: return

  public void dispose();
    Code:
       0: aload_0
       1: invokestatic  #67                 // Method javafx/scene/control/skin/TableSkinUtils.itemsProperty:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/beans/property/ObjectProperty;
       4: astore_1
       5: aload_0
       6: invokespecial #60                 // Method getVisibleLeafColumns:()Ljavafx/collections/ObservableList;
       9: aload_0
      10: getfield      #23                 // Field weakVisibleLeafColumnsListener:Ljavafx/collections/WeakListChangeListener;
      13: invokeinterface #96,  2           // InterfaceMethod javafx/collections/ObservableList.removeListener:(Ljavafx/collections/ListChangeListener;)V
      18: aload_1
      19: aload_0
      20: getfield      #73                 // Field weakItemsChangeListener:Ljavafx/beans/WeakInvalidationListener;
      23: invokevirtual #97                 // Method javafx/beans/property/ObjectProperty.removeListener:(Ljavafx/beans/InvalidationListener;)V
      26: aload_0
      27: invokevirtual #98                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      30: invokevirtual #75                 // Method javafx/scene/control/Control.getProperties:()Ljavafx/collections/ObservableMap;
      33: aload_0
      34: getfield      #13                 // Field propertiesMapListener:Ljavafx/collections/MapChangeListener;
      37: invokeinterface #99,  2           // InterfaceMethod javafx/collections/ObservableMap.removeListener:(Ljavafx/collections/MapChangeListener;)V
      42: aload_0
      43: aload_1
      44: invokevirtual #68                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      47: checkcast     #69                 // class javafx/collections/ObservableList
      50: aconst_null
      51: invokespecial #1                  // Method updateTableItems:(Ljavafx/collections/ObservableList;Ljavafx/collections/ObservableList;)V
      54: aload_0
      55: invokespecial #100                // Method javafx/scene/control/skin/VirtualContainerBase.dispose:()V
      58: return

  protected double computePrefHeight(double, double, double, double, double);
    Code:
       0: ldc2_w        #101                // double 400.0d
       3: dreturn

  protected double computePrefWidth(double, double, double, double, double);
    Code:
       0: aload_0
       1: ldc2_w        #103                // double -1.0d
       4: dload_3
       5: dload         5
       7: dload         7
       9: dload         9
      11: invokevirtual #105                // Method computePrefHeight:(DDDDD)D
      14: dstore        11
      16: aload_0
      17: invokespecial #60                 // Method getVisibleLeafColumns:()Ljavafx/collections/ObservableList;
      20: astore        13
      22: aload         13
      24: ifnull        37
      27: aload         13
      29: invokeinterface #106,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      34: ifeq          44
      37: dload         11
      39: ldc2_w        #108                // double 0.618033987d
      42: dmul
      43: dreturn
      44: dload         9
      46: dload         5
      48: dadd
      49: dstore        14
      51: iconst_0
      52: istore        16
      54: aload         13
      56: invokeinterface #110,  1          // InterfaceMethod java/util/List.size:()I
      61: istore        17
      63: iload         16
      65: iload         17
      67: if_icmpge     108
      70: aload         13
      72: iload         16
      74: invokeinterface #111,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      79: checkcast     #112                // class javafx/scene/control/TableColumnBase
      82: astore        18
      84: dload         14
      86: aload         18
      88: invokevirtual #113                // Method javafx/scene/control/TableColumnBase.getPrefWidth:()D
      91: aload         18
      93: invokevirtual #114                // Method javafx/scene/control/TableColumnBase.getMinWidth:()D
      96: invokestatic  #115                // Method java/lang/Math.max:(DD)D
      99: dadd
     100: dstore        14
     102: iinc          16, 1
     105: goto          63
     108: dload         14
     110: dload         11
     112: ldc2_w        #108                // double 0.618033987d
     115: dmul
     116: invokestatic  #115                // Method java/lang/Math.max:(DD)D
     119: dreturn

  protected void layoutChildren(double, double, double, double);
    Code:
       0: aload_0
       1: invokevirtual #98                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       4: astore        9
       6: aload         9
       8: ifnonnull     12
      11: return
      12: aload_0
      13: dload_1
      14: dload_3
      15: dload         5
      17: dload         7
      19: invokespecial #116                // Method javafx/scene/control/skin/VirtualContainerBase.layoutChildren:(DDDD)V
      22: aload_0
      23: getfield      #9                  // Field needCellsRecreated:Z
      26: ifeq          39
      29: aload_0
      30: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
      33: invokevirtual #117                // Method javafx/scene/control/skin/VirtualFlow.recreateCells:()V
      36: goto          53
      39: aload_0
      40: getfield      #10                 // Field needCellsReconfigured:Z
      43: ifeq          53
      46: aload_0
      47: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
      50: invokevirtual #118                // Method javafx/scene/control/skin/VirtualFlow.reconfigureCells:()V
      53: aload_0
      54: iconst_0
      55: putfield      #9                  // Field needCellsRecreated:Z
      58: aload_0
      59: iconst_0
      60: putfield      #10                 // Field needCellsReconfigured:Z
      63: aload         9
      65: invokevirtual #119                // Method javafx/scene/control/Control.getLayoutBounds:()Ljavafx/geometry/Bounds;
      68: invokevirtual #120                // Method javafx/geometry/Bounds.getHeight:()D
      71: ldc2_w        #121                // double 2.0d
      74: ddiv
      75: dstore        10
      77: aload_0
      78: getfield      #54                 // Field tableHeaderRow:Ljavafx/scene/control/skin/TableHeaderRow;
      81: ldc2_w        #103                // double -1.0d
      84: invokevirtual #123                // Method javafx/scene/control/skin/TableHeaderRow.prefHeight:(D)D
      87: dstore        12
      89: aload_0
      90: aload_0
      91: getfield      #54                 // Field tableHeaderRow:Ljavafx/scene/control/skin/TableHeaderRow;
      94: dload_1
      95: dload_3
      96: dload         5
      98: dload         12
     100: dload         10
     102: getstatic     #124                // Field javafx/geometry/HPos.CENTER:Ljavafx/geometry/HPos;
     105: getstatic     #125                // Field javafx/geometry/VPos.CENTER:Ljavafx/geometry/VPos;
     108: invokevirtual #126                // Method layoutInArea:(Ljavafx/scene/Node;DDDDDLjavafx/geometry/HPos;Ljavafx/geometry/VPos;)V
     111: dload_3
     112: dload         12
     114: dadd
     115: dstore_3
     116: dload         7
     118: dload         12
     120: dsub
     121: invokestatic  #127                // Method java/lang/Math.floor:(D)D
     124: dstore        14
     126: aload_0
     127: invokevirtual #128                // Method getItemCount:()I
     130: ifeq          140
     133: aload_0
     134: getfield      #129                // Field visibleColCount:I
     137: ifne          165
     140: aload_0
     141: aload_0
     142: getfield      #130                // Field placeholderRegion:Ljavafx/scene/layout/StackPane;
     145: dload_1
     146: dload_3
     147: dload         5
     149: dload         14
     151: dload         10
     153: getstatic     #124                // Field javafx/geometry/HPos.CENTER:Ljavafx/geometry/HPos;
     156: getstatic     #125                // Field javafx/geometry/VPos.CENTER:Ljavafx/geometry/VPos;
     159: invokevirtual #126                // Method layoutInArea:(Ljavafx/scene/Node;DDDDDLjavafx/geometry/HPos;Ljavafx/geometry/VPos;)V
     162: goto          187
     165: aload_0
     166: aload_0
     167: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     170: dload_1
     171: dload_3
     172: dload         5
     174: dload         14
     176: dload         10
     178: getstatic     #124                // Field javafx/geometry/HPos.CENTER:Ljavafx/geometry/HPos;
     181: getstatic     #125                // Field javafx/geometry/VPos.CENTER:Ljavafx/geometry/VPos;
     184: invokevirtual #126                // Method layoutInArea:(Ljavafx/scene/Node;DDDDDLjavafx/geometry/HPos;Ljavafx/geometry/VPos;)V
     187: aload_0
     188: getfield      #54                 // Field tableHeaderRow:Ljavafx/scene/control/skin/TableHeaderRow;
     191: invokevirtual #131                // Method javafx/scene/control/skin/TableHeaderRow.getReorderingRegion:()Ljavafx/scene/control/skin/TableColumnHeader;
     194: ifnull        469
     197: aload_0
     198: getfield      #54                 // Field tableHeaderRow:Ljavafx/scene/control/skin/TableHeaderRow;
     201: invokevirtual #131                // Method javafx/scene/control/skin/TableHeaderRow.getReorderingRegion:()Ljavafx/scene/control/skin/TableColumnHeader;
     204: astore        16
     206: aload         16
     208: invokevirtual #132                // Method javafx/scene/control/skin/TableColumnHeader.getTableColumn:()Ljavafx/scene/control/TableColumnBase;
     211: astore        17
     213: aload         17
     215: ifnull        399
     218: aload_0
     219: getfield      #54                 // Field tableHeaderRow:Ljavafx/scene/control/skin/TableHeaderRow;
     222: invokevirtual #131                // Method javafx/scene/control/skin/TableHeaderRow.getReorderingRegion:()Ljavafx/scene/control/skin/TableColumnHeader;
     225: astore        18
     227: aload_0
     228: getfield      #54                 // Field tableHeaderRow:Ljavafx/scene/control/skin/TableHeaderRow;
     231: aload         18
     233: aload         18
     235: invokevirtual #133                // Method javafx/scene/Node.getBoundsInLocal:()Ljavafx/geometry/Bounds;
     238: invokevirtual #134                // Method javafx/scene/Node.localToScene:(Ljavafx/geometry/Bounds;)Ljavafx/geometry/Bounds;
     241: invokevirtual #135                // Method javafx/scene/control/skin/TableHeaderRow.sceneToLocal:(Ljavafx/geometry/Bounds;)Ljavafx/geometry/Bounds;
     244: invokevirtual #136                // Method javafx/geometry/Bounds.getMinX:()D
     247: dstore        19
     249: aload         16
     251: invokevirtual #137                // Method javafx/scene/control/skin/TableColumnHeader.getWidth:()D
     254: dstore        21
     256: dload         19
     258: dconst_0
     259: dcmpg
     260: ifge          270
     263: dload         21
     265: dload         19
     267: dadd
     268: dstore        21
     270: dload         19
     272: dconst_0
     273: dcmpg
     274: ifge          281
     277: dconst_0
     278: goto          283
     281: dload         19
     283: dstore        19
     285: dload         19
     287: dload         21
     289: dadd
     290: dload         5
     292: dcmpl
     293: ifle          333
     296: dload         5
     298: dload         19
     300: dsub
     301: dstore        21
     303: aload_0
     304: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     307: invokevirtual #87                 // Method javafx/scene/control/skin/VirtualFlow.getVbar:()Lcom/sun/javafx/scene/control/VirtualScrollBar;
     310: invokevirtual #138                // Method com/sun/javafx/scene/control/VirtualScrollBar.isVisible:()Z
     313: ifeq          333
     316: dload         21
     318: aload_0
     319: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     322: invokevirtual #87                 // Method javafx/scene/control/skin/VirtualFlow.getVbar:()Lcom/sun/javafx/scene/control/VirtualScrollBar;
     325: invokevirtual #139                // Method com/sun/javafx/scene/control/VirtualScrollBar.getWidth:()D
     328: dconst_1
     329: dsub
     330: dsub
     331: dstore        21
     333: dload         14
     335: dstore        23
     337: aload_0
     338: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     341: invokevirtual #31                 // Method javafx/scene/control/skin/VirtualFlow.getHbar:()Lcom/sun/javafx/scene/control/VirtualScrollBar;
     344: invokevirtual #138                // Method com/sun/javafx/scene/control/VirtualScrollBar.isVisible:()Z
     347: ifeq          365
     350: dload         23
     352: aload_0
     353: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     356: invokevirtual #31                 // Method javafx/scene/control/skin/VirtualFlow.getHbar:()Lcom/sun/javafx/scene/control/VirtualScrollBar;
     359: invokevirtual #140                // Method com/sun/javafx/scene/control/VirtualScrollBar.getHeight:()D
     362: dsub
     363: dstore        23
     365: aload_0
     366: getfield      #51                 // Field columnReorderOverlay:Ljavafx/scene/layout/Region;
     369: dload         21
     371: dload         23
     373: invokevirtual #141                // Method javafx/scene/layout/Region.resize:(DD)V
     376: aload_0
     377: getfield      #51                 // Field columnReorderOverlay:Ljavafx/scene/layout/Region;
     380: dload         19
     382: invokevirtual #142                // Method javafx/scene/layout/Region.setLayoutX:(D)V
     385: aload_0
     386: getfield      #51                 // Field columnReorderOverlay:Ljavafx/scene/layout/Region;
     389: aload_0
     390: getfield      #54                 // Field tableHeaderRow:Ljavafx/scene/control/skin/TableHeaderRow;
     393: invokevirtual #143                // Method javafx/scene/control/skin/TableHeaderRow.getHeight:()D
     396: invokevirtual #144                // Method javafx/scene/layout/Region.setLayoutY:(D)V
     399: aload_0
     400: getfield      #44                 // Field columnReorderLine:Ljavafx/scene/layout/Region;
     403: invokevirtual #145                // Method javafx/scene/layout/Region.snappedLeftInset:()D
     406: aload_0
     407: getfield      #44                 // Field columnReorderLine:Ljavafx/scene/layout/Region;
     410: invokevirtual #146                // Method javafx/scene/layout/Region.snappedRightInset:()D
     413: dadd
     414: dstore        18
     416: dload         7
     418: aload_0
     419: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     422: invokevirtual #31                 // Method javafx/scene/control/skin/VirtualFlow.getHbar:()Lcom/sun/javafx/scene/control/VirtualScrollBar;
     425: invokevirtual #138                // Method com/sun/javafx/scene/control/VirtualScrollBar.isVisible:()Z
     428: ifeq          446
     431: aload_0
     432: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     435: invokevirtual #31                 // Method javafx/scene/control/skin/VirtualFlow.getHbar:()Lcom/sun/javafx/scene/control/VirtualScrollBar;
     438: invokevirtual #140                // Method com/sun/javafx/scene/control/VirtualScrollBar.getHeight:()D
     441: dconst_1
     442: dsub
     443: goto          447
     446: dconst_0
     447: dsub
     448: dstore        20
     450: aload_0
     451: getfield      #44                 // Field columnReorderLine:Ljavafx/scene/layout/Region;
     454: dconst_0
     455: aload_0
     456: getfield      #44                 // Field columnReorderLine:Ljavafx/scene/layout/Region;
     459: invokevirtual #147                // Method javafx/scene/layout/Region.snappedTopInset:()D
     462: dload         18
     464: dload         20
     466: invokevirtual #148                // Method javafx/scene/layout/Region.resizeRelocate:(DDDD)V
     469: aload_0
     470: getfield      #44                 // Field columnReorderLine:Ljavafx/scene/layout/Region;
     473: aload_0
     474: getfield      #54                 // Field tableHeaderRow:Ljavafx/scene/control/skin/TableHeaderRow;
     477: invokevirtual #149                // Method javafx/scene/control/skin/TableHeaderRow.isReordering:()Z
     480: invokevirtual #50                 // Method javafx/scene/layout/Region.setVisible:(Z)V
     483: aload_0
     484: getfield      #51                 // Field columnReorderOverlay:Ljavafx/scene/layout/Region;
     487: aload_0
     488: getfield      #54                 // Field tableHeaderRow:Ljavafx/scene/control/skin/TableHeaderRow;
     491: invokevirtual #149                // Method javafx/scene/control/skin/TableHeaderRow.isReordering:()Z
     494: invokevirtual #50                 // Method javafx/scene/layout/Region.setVisible:(Z)V
     497: aload_0
     498: invokespecial #150                // Method checkContentWidthState:()V
     501: return

  protected javafx.scene.control.skin.TableHeaderRow createTableHeaderRow();
    Code:
       0: new           #151                // class javafx/scene/control/skin/TableHeaderRow
       3: dup
       4: aload_0
       5: invokespecial #152                // Method javafx/scene/control/skin/TableHeaderRow."<init>":(Ljavafx/scene/control/skin/TableViewSkinBase;)V
       8: areturn

  final javafx.scene.control.skin.TableHeaderRow getTableHeaderRow();
    Code:
       0: aload_0
       1: getfield      #54                 // Field tableHeaderRow:Ljavafx/scene/control/skin/TableHeaderRow;
       4: areturn

  private javafx.scene.control.TableSelectionModel<S> getSelectionModel();
    Code:
       0: aload_0
       1: invokestatic  #153                // Method javafx/scene/control/skin/TableSkinUtils.getSelectionModel:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/scene/control/TableSelectionModel;
       4: areturn

  private javafx.scene.control.TableFocusModel<M, ?> getFocusModel();
    Code:
       0: aload_0
       1: invokestatic  #154                // Method javafx/scene/control/skin/TableSkinUtils.getFocusModel:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/scene/control/TableFocusModel;
       4: areturn

  private javafx.scene.control.TablePositionBase<? extends TC> getFocusedCell();
    Code:
       0: aload_0
       1: invokestatic  #155                // Method javafx/scene/control/skin/TableSkinUtils.getFocusedCell:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/scene/control/TablePositionBase;
       4: areturn

  private javafx.collections.ObservableList<? extends TC> getVisibleLeafColumns();
    Code:
       0: aload_0
       1: invokestatic  #156                // Method javafx/scene/control/skin/TableSkinUtils.getVisibleLeafColumns:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/collections/ObservableList;
       4: areturn

  protected void updateItemCount();
    Code:
       0: aload_0
       1: invokevirtual #157                // Method updatePlaceholderRegionVisibility:()V
       4: aload_0
       5: getfield      #11                 // Field itemCount:I
       8: istore_1
       9: aload_0
      10: invokevirtual #128                // Method getItemCount:()I
      13: istore_2
      14: aload_0
      15: iload_2
      16: putfield      #11                 // Field itemCount:I
      19: aload_0
      20: getfield      #11                 // Field itemCount:I
      23: ifne          37
      26: aload_0
      27: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
      30: invokevirtual #31                 // Method javafx/scene/control/skin/VirtualFlow.getHbar:()Lcom/sun/javafx/scene/control/VirtualScrollBar;
      33: dconst_0
      34: invokevirtual #158                // Method com/sun/javafx/scene/control/VirtualScrollBar.setValue:(D)V
      37: aload_0
      38: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
      41: iload_2
      42: invokevirtual #159                // Method javafx/scene/control/skin/VirtualFlow.setCellCount:(I)V
      45: iload_2
      46: iload_1
      47: if_icmpeq     57
      50: aload_0
      51: invokevirtual #160                // Method requestRebuildCells:()V
      54: goto          62
      57: aload_0
      58: iconst_1
      59: putfield      #10                 // Field needCellsReconfigured:Z
      62: return

  private void checkContentWidthState();
    Code:
       0: aload_0
       1: getfield      #8                  // Field contentWidthDirty:Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #128                // Method getItemCount:()I
      11: ifne          23
      14: aload_0
      15: invokespecial #161                // Method updateContentWidth:()V
      18: aload_0
      19: iconst_0
      20: putfield      #8                  // Field contentWidthDirty:Z
      23: return

  void horizontalScroll();
    Code:
       0: aload_0
       1: getfield      #54                 // Field tableHeaderRow:Ljavafx/scene/control/skin/TableHeaderRow;
       4: invokevirtual #162                // Method javafx/scene/control/skin/TableHeaderRow.updateScrollX:()V
       7: return

  void onFocusPreviousCell();
    Code:
       0: aload_0
       1: invokespecial #163                // Method getFocusModel:()Ljavafx/scene/control/TableFocusModel;
       4: astore_1
       5: aload_1
       6: ifnonnull     10
       9: return
      10: aload_0
      11: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
      14: aload_1
      15: invokevirtual #164                // Method javafx/scene/control/TableFocusModel.getFocusedIndex:()I
      18: invokevirtual #165                // Method javafx/scene/control/skin/VirtualFlow.scrollTo:(I)V
      21: return

  void onFocusNextCell();
    Code:
       0: aload_0
       1: invokespecial #163                // Method getFocusModel:()Ljavafx/scene/control/TableFocusModel;
       4: astore_1
       5: aload_1
       6: ifnonnull     10
       9: return
      10: aload_0
      11: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
      14: aload_1
      15: invokevirtual #164                // Method javafx/scene/control/TableFocusModel.getFocusedIndex:()I
      18: invokevirtual #165                // Method javafx/scene/control/skin/VirtualFlow.scrollTo:(I)V
      21: return

  void onSelectPreviousCell();
    Code:
       0: aload_0
       1: invokespecial #166                // Method getSelectionModel:()Ljavafx/scene/control/TableSelectionModel;
       4: astore_1
       5: aload_1
       6: ifnonnull     10
       9: return
      10: aload_0
      11: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
      14: aload_1
      15: invokevirtual #167                // Method javafx/scene/control/SelectionModel.getSelectedIndex:()I
      18: invokevirtual #165                // Method javafx/scene/control/skin/VirtualFlow.scrollTo:(I)V
      21: return

  void onSelectNextCell();
    Code:
       0: aload_0
       1: invokespecial #166                // Method getSelectionModel:()Ljavafx/scene/control/TableSelectionModel;
       4: astore_1
       5: aload_1
       6: ifnonnull     10
       9: return
      10: aload_0
      11: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
      14: aload_1
      15: invokevirtual #167                // Method javafx/scene/control/SelectionModel.getSelectedIndex:()I
      18: invokevirtual #165                // Method javafx/scene/control/skin/VirtualFlow.scrollTo:(I)V
      21: return

  void onSelectLeftCell();
    Code:
       0: aload_0
       1: invokevirtual #168                // Method scrollHorizontally:()V
       4: return

  void onSelectRightCell();
    Code:
       0: aload_0
       1: invokevirtual #168                // Method scrollHorizontally:()V
       4: return

  void onMoveToFirstCell();
    Code:
       0: aload_0
       1: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
       4: iconst_0
       5: invokevirtual #165                // Method javafx/scene/control/skin/VirtualFlow.scrollTo:(I)V
       8: aload_0
       9: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
      12: dconst_0
      13: invokevirtual #169                // Method javafx/scene/control/skin/VirtualFlow.setPosition:(D)V
      16: return

  void onMoveToLastCell();
    Code:
       0: aload_0
       1: invokevirtual #128                // Method getItemCount:()I
       4: istore_1
       5: aload_0
       6: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
       9: iload_1
      10: invokevirtual #165                // Method javafx/scene/control/skin/VirtualFlow.scrollTo:(I)V
      13: aload_0
      14: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
      17: dconst_1
      18: invokevirtual #169                // Method javafx/scene/control/skin/VirtualFlow.setPosition:(D)V
      21: return

  private void updateTableItems(javafx.collections.ObservableList<S>, javafx.collections.ObservableList<S>);
    Code:
       0: aload_1
       1: ifnull        14
       4: aload_1
       5: aload_0
       6: getfield      #22                 // Field weakRowCountListener:Ljavafx/collections/WeakListChangeListener;
       9: invokeinterface #96,  2           // InterfaceMethod javafx/collections/ObservableList.removeListener:(Ljavafx/collections/ListChangeListener;)V
      14: aload_2
      15: ifnull        28
      18: aload_2
      19: aload_0
      20: getfield      #22                 // Field weakRowCountListener:Ljavafx/collections/WeakListChangeListener;
      23: invokeinterface #66,  2           // InterfaceMethod javafx/collections/ObservableList.addListener:(Ljavafx/collections/ListChangeListener;)V
      28: aload_0
      29: invokevirtual #170                // Method markItemCountDirty:()V
      32: aload_0
      33: invokevirtual #98                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      36: invokevirtual #171                // Method javafx/scene/control/Control.requestLayout:()V
      39: return

  javafx.scene.layout.Region getColumnReorderLine();
    Code:
       0: aload_0
       1: getfield      #44                 // Field columnReorderLine:Ljavafx/scene/layout/Region;
       4: areturn

  int onScrollPageDown(boolean);
    Code:
       0: aload_0
       1: invokespecial #166                // Method getSelectionModel:()Ljavafx/scene/control/TableSelectionModel;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_m1
      10: ireturn
      11: aload_0
      12: invokevirtual #128                // Method getItemCount:()I
      15: istore_3
      16: aload_0
      17: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
      20: invokevirtual #172                // Method javafx/scene/control/skin/VirtualFlow.getLastVisibleCellWithinViewPort:()Ljavafx/scene/control/IndexedCell;
      23: astore        4
      25: aload         4
      27: ifnonnull     32
      30: iconst_m1
      31: ireturn
      32: aload         4
      34: invokevirtual #173                // Method javafx/scene/control/IndexedCell.getIndex:()I
      37: istore        5
      39: iload         5
      41: iload_3
      42: if_icmplt     51
      45: iload_3
      46: iconst_1
      47: isub
      48: goto          53
      51: iload         5
      53: istore        5
      55: iload_1
      56: ifeq          86
      59: aload         4
      61: invokevirtual #174                // Method javafx/scene/control/IndexedCell.isFocused:()Z
      64: ifne          76
      67: aload_0
      68: iload         5
      70: invokespecial #175                // Method isCellFocused:(I)Z
      73: ifeq          80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: istore        6
      83: goto          110
      86: aload         4
      88: invokevirtual #176                // Method javafx/scene/control/IndexedCell.isSelected:()Z
      91: ifne          103
      94: aload_0
      95: iload         5
      97: invokespecial #177                // Method isCellSelected:(I)Z
     100: ifeq          107
     103: iconst_1
     104: goto          108
     107: iconst_0
     108: istore        6
     110: iload         6
     112: ifeq          161
     115: aload_0
     116: iload_1
     117: iload         5
     119: invokespecial #178                // Method isLeadIndex:(ZI)Z
     122: istore        7
     124: iload         7
     126: ifeq          161
     129: aload_0
     130: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     133: aload         4
     135: invokevirtual #179                // Method javafx/scene/control/skin/VirtualFlow.scrollToTop:(Ljavafx/scene/control/IndexedCell;)V
     138: aload_0
     139: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     142: invokevirtual #172                // Method javafx/scene/control/skin/VirtualFlow.getLastVisibleCellWithinViewPort:()Ljavafx/scene/control/IndexedCell;
     145: astore        8
     147: aload         8
     149: ifnonnull     157
     152: aload         4
     154: goto          159
     157: aload         8
     159: astore        4
     161: aload         4
     163: invokevirtual #173                // Method javafx/scene/control/IndexedCell.getIndex:()I
     166: istore        7
     168: iload         7
     170: iload_3
     171: if_icmplt     180
     174: iload_3
     175: iconst_1
     176: isub
     177: goto          182
     180: iload         7
     182: istore        7
     184: aload_0
     185: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     188: iload         7
     190: invokevirtual #165                // Method javafx/scene/control/skin/VirtualFlow.scrollTo:(I)V
     193: iload         7
     195: ireturn

  int onScrollPageUp(boolean);
    Code:
       0: aload_0
       1: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
       4: invokevirtual #180                // Method javafx/scene/control/skin/VirtualFlow.getFirstVisibleCellWithinViewPort:()Ljavafx/scene/control/IndexedCell;
       7: astore_2
       8: aload_2
       9: ifnonnull     14
      12: iconst_m1
      13: ireturn
      14: aload_2
      15: invokevirtual #173                // Method javafx/scene/control/IndexedCell.getIndex:()I
      18: istore_3
      19: iconst_0
      20: istore        4
      22: iload_1
      23: ifeq          51
      26: aload_2
      27: invokevirtual #174                // Method javafx/scene/control/IndexedCell.isFocused:()Z
      30: ifne          41
      33: aload_0
      34: iload_3
      35: invokespecial #175                // Method isCellFocused:(I)Z
      38: ifeq          45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: istore        4
      48: goto          73
      51: aload_2
      52: invokevirtual #176                // Method javafx/scene/control/IndexedCell.isSelected:()Z
      55: ifne          66
      58: aload_0
      59: iload_3
      60: invokespecial #177                // Method isCellSelected:(I)Z
      63: ifeq          70
      66: iconst_1
      67: goto          71
      70: iconst_0
      71: istore        4
      73: iload         4
      75: ifeq          120
      78: aload_0
      79: iload_1
      80: iload_3
      81: invokespecial #178                // Method isLeadIndex:(ZI)Z
      84: istore        5
      86: iload         5
      88: ifeq          120
      91: aload_0
      92: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
      95: aload_2
      96: invokevirtual #181                // Method javafx/scene/control/skin/VirtualFlow.scrollToBottom:(Ljavafx/scene/control/IndexedCell;)V
      99: aload_0
     100: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     103: invokevirtual #180                // Method javafx/scene/control/skin/VirtualFlow.getFirstVisibleCellWithinViewPort:()Ljavafx/scene/control/IndexedCell;
     106: astore        6
     108: aload         6
     110: ifnonnull     117
     113: aload_2
     114: goto          119
     117: aload         6
     119: astore_2
     120: aload_2
     121: invokevirtual #173                // Method javafx/scene/control/IndexedCell.getIndex:()I
     124: istore        5
     126: aload_0
     127: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     130: iload         5
     132: invokevirtual #165                // Method javafx/scene/control/skin/VirtualFlow.scrollTo:(I)V
     135: iload         5
     137: ireturn

  private boolean isLeadIndex(boolean, int);
    Code:
       0: aload_0
       1: invokespecial #166                // Method getSelectionModel:()Ljavafx/scene/control/TableSelectionModel;
       4: astore_3
       5: aload_0
       6: invokespecial #163                // Method getFocusModel:()Ljavafx/scene/control/TableFocusModel;
       9: astore        4
      11: iload_1
      12: ifeq          24
      15: aload         4
      17: invokevirtual #182                // Method javafx/scene/control/FocusModel.getFocusedIndex:()I
      20: iload_2
      21: if_icmpeq     36
      24: iload_1
      25: ifne          40
      28: aload_3
      29: invokevirtual #183                // Method javafx/scene/control/TableSelectionModel.getSelectedIndex:()I
      32: iload_2
      33: if_icmpne     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  private void updateVisibleColumnCount();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #60                 // Method getVisibleLeafColumns:()Ljavafx/collections/ObservableList;
       5: invokeinterface #184,  1          // InterfaceMethod javafx/collections/ObservableList.size:()I
      10: putfield      #129                // Field visibleColCount:I
      13: aload_0
      14: invokevirtual #157                // Method updatePlaceholderRegionVisibility:()V
      17: aload_0
      18: invokevirtual #160                // Method requestRebuildCells:()V
      21: return

  private void updateVisibleLeafColumnWidthListeners(java.util.List<? extends TC>, java.util.List<? extends TC>);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_2
       3: invokeinterface #110,  1          // InterfaceMethod java/util/List.size:()I
       8: istore        4
      10: iload_3
      11: iload         4
      13: if_icmpge     46
      16: aload_2
      17: iload_3
      18: invokeinterface #111,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      23: checkcast     #112                // class javafx/scene/control/TableColumnBase
      26: astore        5
      28: aload         5
      30: invokevirtual #185                // Method javafx/scene/control/TableColumnBase.widthProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
      33: aload_0
      34: getfield      #26                 // Field weakWidthListener:Ljavafx/beans/WeakInvalidationListener;
      37: invokevirtual #186                // Method javafx/beans/property/ReadOnlyDoubleProperty.removeListener:(Ljavafx/beans/InvalidationListener;)V
      40: iinc          3, 1
      43: goto          10
      46: iconst_0
      47: istore_3
      48: aload_1
      49: invokeinterface #110,  1          // InterfaceMethod java/util/List.size:()I
      54: istore        4
      56: iload_3
      57: iload         4
      59: if_icmpge     92
      62: aload_1
      63: iload_3
      64: invokeinterface #111,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      69: checkcast     #112                // class javafx/scene/control/TableColumnBase
      72: astore        5
      74: aload         5
      76: invokevirtual #185                // Method javafx/scene/control/TableColumnBase.widthProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
      79: aload_0
      80: getfield      #26                 // Field weakWidthListener:Ljavafx/beans/WeakInvalidationListener;
      83: invokevirtual #86                 // Method javafx/beans/property/ReadOnlyDoubleProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
      86: iinc          3, 1
      89: goto          56
      92: aload_0
      93: invokevirtual #160                // Method requestRebuildCells:()V
      96: return

  final void updatePlaceholderRegionVisibility();
    Code:
       0: aload_0
       1: getfield      #129                // Field visibleColCount:I
       4: ifeq          14
       7: aload_0
       8: invokevirtual #128                // Method getItemCount:()I
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: istore_1
      20: iload_1
      21: ifeq          186
      24: aload_0
      25: getfield      #130                // Field placeholderRegion:Ljavafx/scene/layout/StackPane;
      28: ifnonnull     78
      31: aload_0
      32: new           #187                // class javafx/scene/layout/StackPane
      35: dup
      36: invokespecial #188                // Method javafx/scene/layout/StackPane."<init>":()V
      39: putfield      #130                // Field placeholderRegion:Ljavafx/scene/layout/StackPane;
      42: aload_0
      43: getfield      #130                // Field placeholderRegion:Ljavafx/scene/layout/StackPane;
      46: invokevirtual #189                // Method javafx/scene/layout/StackPane.getStyleClass:()Ljavafx/collections/ObservableList;
      49: iconst_1
      50: anewarray     #46                 // class java/lang/String
      53: dup
      54: iconst_0
      55: ldc           #190                // String placeholder
      57: aastore
      58: invokeinterface #48,  2           // InterfaceMethod javafx/collections/ObservableList.setAll:([Ljava/lang/Object;)Z
      63: pop
      64: aload_0
      65: invokevirtual #56                 // Method getChildren:()Ljavafx/collections/ObservableList;
      68: aload_0
      69: getfield      #130                // Field placeholderRegion:Ljavafx/scene/layout/StackPane;
      72: invokeinterface #191,  2          // InterfaceMethod javafx/collections/ObservableList.add:(Ljava/lang/Object;)Z
      77: pop
      78: aload_0
      79: invokestatic  #92                 // Method javafx/scene/control/skin/TableSkinUtils.placeholderProperty:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/beans/property/ObjectProperty;
      82: invokevirtual #68                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      85: checkcast     #57                 // class javafx/scene/Node
      88: astore_2
      89: aload_2
      90: ifnonnull     165
      93: aload_0
      94: getfield      #192                // Field placeholderLabel:Ljavafx/scene/control/Label;
      97: ifnonnull     111
     100: aload_0
     101: new           #193                // class javafx/scene/control/Label
     104: dup
     105: invokespecial #194                // Method javafx/scene/control/Label."<init>":()V
     108: putfield      #192                // Field placeholderLabel:Ljavafx/scene/control/Label;
     111: aload_0
     112: getfield      #129                // Field visibleColCount:I
     115: ifne          125
     118: aload_0
     119: getfield      #7                  // Field NO_COLUMNS_TEXT:Ljava/lang/String;
     122: goto          129
     125: aload_0
     126: getfield      #5                  // Field EMPTY_TABLE_TEXT:Ljava/lang/String;
     129: astore_3
     130: aload_0
     131: getfield      #192                // Field placeholderLabel:Ljavafx/scene/control/Label;
     134: aload_3
     135: invokevirtual #195                // Method javafx/scene/control/Label.setText:(Ljava/lang/String;)V
     138: aload_0
     139: getfield      #130                // Field placeholderRegion:Ljavafx/scene/layout/StackPane;
     142: invokevirtual #196                // Method javafx/scene/layout/StackPane.getChildren:()Ljavafx/collections/ObservableList;
     145: iconst_1
     146: anewarray     #57                 // class javafx/scene/Node
     149: dup
     150: iconst_0
     151: aload_0
     152: getfield      #192                // Field placeholderLabel:Ljavafx/scene/control/Label;
     155: aastore
     156: invokeinterface #48,  2           // InterfaceMethod javafx/collections/ObservableList.setAll:([Ljava/lang/Object;)Z
     161: pop
     162: goto          186
     165: aload_0
     166: getfield      #130                // Field placeholderRegion:Ljavafx/scene/layout/StackPane;
     169: invokevirtual #196                // Method javafx/scene/layout/StackPane.getChildren:()Ljavafx/collections/ObservableList;
     172: iconst_1
     173: anewarray     #57                 // class javafx/scene/Node
     176: dup
     177: iconst_0
     178: aload_2
     179: aastore
     180: invokeinterface #48,  2           // InterfaceMethod javafx/collections/ObservableList.setAll:([Ljava/lang/Object;)Z
     185: pop
     186: aload_0
     187: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     190: iload_1
     191: ifne          198
     194: iconst_1
     195: goto          199
     198: iconst_0
     199: invokevirtual #197                // Method javafx/scene/control/skin/VirtualFlow.setVisible:(Z)V
     202: aload_0
     203: getfield      #130                // Field placeholderRegion:Ljavafx/scene/layout/StackPane;
     206: ifnull        217
     209: aload_0
     210: getfield      #130                // Field placeholderRegion:Ljavafx/scene/layout/StackPane;
     213: iload_1
     214: invokevirtual #198                // Method javafx/scene/layout/StackPane.setVisible:(Z)V
     217: return

  private void updateContentWidth();
    Code:
       0: aload_0
       1: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
       4: invokevirtual #199                // Method javafx/scene/control/skin/VirtualFlow.getWidth:()D
       7: dstore_1
       8: aload_0
       9: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
      12: invokevirtual #87                 // Method javafx/scene/control/skin/VirtualFlow.getVbar:()Lcom/sun/javafx/scene/control/VirtualScrollBar;
      15: invokevirtual #138                // Method com/sun/javafx/scene/control/VirtualScrollBar.isVisible:()Z
      18: ifeq          34
      21: dload_1
      22: aload_0
      23: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
      26: invokevirtual #87                 // Method javafx/scene/control/skin/VirtualFlow.getVbar:()Lcom/sun/javafx/scene/control/VirtualScrollBar;
      29: invokevirtual #139                // Method com/sun/javafx/scene/control/VirtualScrollBar.getWidth:()D
      32: dsub
      33: dstore_1
      34: dload_1
      35: dconst_0
      36: dcmpg
      37: ifgt          60
      40: aload_0
      41: invokevirtual #98                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      44: astore_3
      45: aload_3
      46: invokevirtual #200                // Method javafx/scene/control/Control.getWidth:()D
      49: aload_0
      50: invokevirtual #201                // Method snappedLeftInset:()D
      53: aload_0
      54: invokevirtual #202                // Method snappedRightInset:()D
      57: dadd
      58: dsub
      59: dstore_1
      60: dconst_0
      61: dload_1
      62: invokestatic  #115                // Method java/lang/Math.max:(DD)D
      65: dstore_1
      66: aload_0
      67: invokevirtual #98                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      70: invokevirtual #75                 // Method javafx/scene/control/Control.getProperties:()Ljavafx/collections/ObservableMap;
      73: ldc           #203                // String TableView.contentWidth
      75: dload_1
      76: invokestatic  #127                // Method java/lang/Math.floor:(D)D
      79: invokestatic  #204                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      82: invokeinterface #205,  3          // InterfaceMethod javafx/collections/ObservableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: return

  private void refreshView();
    Code:
       0: aload_0
       1: invokevirtual #170                // Method markItemCountDirty:()V
       4: aload_0
       5: invokevirtual #98                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       8: astore_1
       9: aload_1
      10: ifnull        17
      13: aload_1
      14: invokevirtual #171                // Method javafx/scene/control/Control.requestLayout:()V
      17: return

  void scrollHorizontally();
    Code:
       0: aload_0
       1: invokespecial #163                // Method getFocusModel:()Ljavafx/scene/control/TableFocusModel;
       4: astore_1
       5: aload_1
       6: ifnonnull     10
       9: return
      10: aload_0
      11: invokespecial #206                // Method getFocusedCell:()Ljavafx/scene/control/TablePositionBase;
      14: invokevirtual #207                // Method javafx/scene/control/TablePositionBase.getTableColumn:()Ljavafx/scene/control/TableColumnBase;
      17: astore_2
      18: aload_0
      19: aload_2
      20: invokevirtual #208                // Method scrollHorizontally:(Ljavafx/scene/control/TableColumnBase;)V
      23: return

  void scrollHorizontally(TC);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #209                // Method javafx/scene/control/TableColumnBase.isVisible:()Z
       8: ifne          12
      11: return
      12: aload_0
      13: invokevirtual #98                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      16: astore_2
      17: aload_0
      18: getfield      #54                 // Field tableHeaderRow:Ljavafx/scene/control/skin/TableHeaderRow;
      21: aload_1
      22: invokevirtual #210                // Method javafx/scene/control/skin/TableHeaderRow.getColumnHeaderFor:(Ljavafx/scene/control/TableColumnBase;)Ljavafx/scene/control/skin/TableColumnHeader;
      25: astore_3
      26: aload_3
      27: ifnull        39
      30: aload_3
      31: invokevirtual #137                // Method javafx/scene/control/skin/TableColumnHeader.getWidth:()D
      34: dconst_0
      35: dcmpg
      36: ifgt          50
      39: aload_0
      40: aload_1
      41: invokedynamic #211,  0            // InvokeDynamic #11:run:(Ljavafx/scene/control/skin/TableViewSkinBase;Ljavafx/scene/control/TableColumnBase;)Ljava/lang/Runnable;
      46: invokestatic  #212                // Method javafx/application/Platform.runLater:(Ljava/lang/Runnable;)V
      49: return
      50: dconst_0
      51: dstore        4
      53: aload_0
      54: invokespecial #60                 // Method getVisibleLeafColumns:()Ljavafx/collections/ObservableList;
      57: invokeinterface #213,  1          // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
      62: astore        6
      64: aload         6
      66: invokeinterface #214,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifeq          111
      74: aload         6
      76: invokeinterface #215,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: checkcast     #112                // class javafx/scene/control/TableColumnBase
      84: astore        7
      86: aload         7
      88: aload_1
      89: invokevirtual #216                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          98
      95: goto          111
      98: dload         4
     100: aload         7
     102: invokevirtual #217                // Method javafx/scene/control/TableColumnBase.getWidth:()D
     105: dadd
     106: dstore        4
     108: goto          64
     111: dload         4
     113: aload_1
     114: invokevirtual #217                // Method javafx/scene/control/TableColumnBase.getWidth:()D
     117: dadd
     118: dstore        6
     120: aload_2
     121: invokevirtual #200                // Method javafx/scene/control/Control.getWidth:()D
     124: aload_0
     125: invokevirtual #201                // Method snappedLeftInset:()D
     128: dsub
     129: aload_0
     130: invokevirtual #202                // Method snappedRightInset:()D
     133: dsub
     134: dstore        8
     136: aload_0
     137: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     140: invokevirtual #31                 // Method javafx/scene/control/skin/VirtualFlow.getHbar:()Lcom/sun/javafx/scene/control/VirtualScrollBar;
     143: invokevirtual #218                // Method com/sun/javafx/scene/control/VirtualScrollBar.getValue:()D
     146: dstore        10
     148: aload_0
     149: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     152: invokevirtual #31                 // Method javafx/scene/control/skin/VirtualFlow.getHbar:()Lcom/sun/javafx/scene/control/VirtualScrollBar;
     155: invokevirtual #219                // Method com/sun/javafx/scene/control/VirtualScrollBar.getMax:()D
     158: dstore        12
     160: dload         4
     162: dload         10
     164: dcmpg
     165: ifge          182
     168: dload         4
     170: dconst_0
     171: dcmpl
     172: iflt          182
     175: dload         4
     177: dstore        14
     179: goto          231
     182: dload         4
     184: dconst_0
     185: dcmpg
     186: iflt          197
     189: dload         6
     191: dload         8
     193: dcmpl
     194: ifle          205
     197: dload         4
     199: dload         10
     201: dsub
     202: goto          206
     205: dconst_0
     206: dstore        16
     208: dload         10
     210: dload         16
     212: dadd
     213: dload         12
     215: dcmpl
     216: ifle          224
     219: dload         12
     221: goto          229
     224: dload         10
     226: dload         16
     228: dadd
     229: dstore        14
     231: aload_0
     232: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     235: invokevirtual #31                 // Method javafx/scene/control/skin/VirtualFlow.getHbar:()Lcom/sun/javafx/scene/control/VirtualScrollBar;
     238: dload         14
     240: invokevirtual #158                // Method com/sun/javafx/scene/control/VirtualScrollBar.setValue:(D)V
     243: return

  private boolean isCellSelected(int);
    Code:
       0: aload_0
       1: invokespecial #166                // Method getSelectionModel:()Ljavafx/scene/control/TableSelectionModel;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: aload_2
      12: invokevirtual #220                // Method javafx/scene/control/TableSelectionModel.isCellSelectionEnabled:()Z
      15: ifne          20
      18: iconst_0
      19: ireturn
      20: aload_0
      21: invokespecial #60                 // Method getVisibleLeafColumns:()Ljavafx/collections/ObservableList;
      24: invokeinterface #184,  1          // InterfaceMethod javafx/collections/ObservableList.size:()I
      29: istore_3
      30: iconst_0
      31: istore        4
      33: iload         4
      35: iload_3
      36: if_icmpge     61
      39: aload_2
      40: iload_1
      41: aload_0
      42: iload         4
      44: invokestatic  #221                // Method javafx/scene/control/skin/TableSkinUtils.getVisibleLeafColumn:(Ljavafx/scene/control/skin/TableViewSkinBase;I)Ljavafx/scene/control/TableColumnBase;
      47: invokevirtual #222                // Method javafx/scene/control/TableSelectionModel.isSelected:(ILjavafx/scene/control/TableColumnBase;)Z
      50: ifeq          55
      53: iconst_1
      54: ireturn
      55: iinc          4, 1
      58: goto          33
      61: iconst_0
      62: ireturn

  private boolean isCellFocused(int);
    Code:
       0: aload_0
       1: invokespecial #163                // Method getFocusModel:()Ljavafx/scene/control/TableFocusModel;
       4: checkcast     #223                // class javafx/scene/control/TableFocusModel
       7: astore_2
       8: aload_2
       9: ifnonnull     14
      12: iconst_0
      13: ireturn
      14: aload_0
      15: invokespecial #60                 // Method getVisibleLeafColumns:()Ljavafx/collections/ObservableList;
      18: invokeinterface #184,  1          // InterfaceMethod javafx/collections/ObservableList.size:()I
      23: istore_3
      24: iconst_0
      25: istore        4
      27: iload         4
      29: iload_3
      30: if_icmpge     55
      33: aload_2
      34: iload_1
      35: aload_0
      36: iload         4
      38: invokestatic  #221                // Method javafx/scene/control/skin/TableSkinUtils.getVisibleLeafColumn:(Ljavafx/scene/control/skin/TableViewSkinBase;I)Ljavafx/scene/control/TableColumnBase;
      41: invokevirtual #224                // Method javafx/scene/control/TableFocusModel.isFocused:(ILjavafx/scene/control/TableColumnBase;)Z
      44: ifeq          49
      47: iconst_1
      48: ireturn
      49: iinc          4, 1
      52: goto          27
      55: iconst_0
      56: ireturn

  protected java.lang.Object queryAccessibleAttribute(javafx.scene.AccessibleAttribute, java.lang.Object...);
    Code:
       0: getstatic     #225                // Field javafx/scene/control/skin/TableViewSkinBase$2.$SwitchMap$javafx$scene$AccessibleAttribute:[I
       3: aload_1
       4: invokevirtual #226                // Method javafx/scene/AccessibleAttribute.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 6
                     1: 48
                     2: 121
                     3: 140
                     4: 167
                     5: 172
                     6: 180
               default: 188
          }
      48: aload_0
      49: invokespecial #163                // Method getFocusModel:()Ljavafx/scene/control/TableFocusModel;
      52: astore_3
      53: aload_3
      54: invokevirtual #164                // Method javafx/scene/control/TableFocusModel.getFocusedIndex:()I
      57: istore        4
      59: iload         4
      61: iconst_m1
      62: if_icmpne     111
      65: aload_0
      66: getfield      #130                // Field placeholderRegion:Ljavafx/scene/layout/StackPane;
      69: ifnull        96
      72: aload_0
      73: getfield      #130                // Field placeholderRegion:Ljavafx/scene/layout/StackPane;
      76: invokevirtual #227                // Method javafx/scene/layout/StackPane.isVisible:()Z
      79: ifeq          96
      82: aload_0
      83: getfield      #130                // Field placeholderRegion:Ljavafx/scene/layout/StackPane;
      86: invokevirtual #196                // Method javafx/scene/layout/StackPane.getChildren:()Ljavafx/collections/ObservableList;
      89: iconst_0
      90: invokeinterface #228,  2          // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      95: areturn
      96: aload_0
      97: invokevirtual #128                // Method getItemCount:()I
     100: ifle          109
     103: iconst_0
     104: istore        4
     106: goto          111
     109: aconst_null
     110: areturn
     111: aload_0
     112: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     115: iload         4
     117: invokevirtual #229                // Method javafx/scene/control/skin/VirtualFlow.getPrivateCell:(I)Ljavafx/scene/control/IndexedCell;
     120: areturn
     121: aload_2
     122: iconst_0
     123: aaload
     124: checkcast     #230                // class java/lang/Integer
     127: invokevirtual #231                // Method java/lang/Integer.intValue:()I
     130: istore_3
     131: aload_0
     132: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     135: iload_3
     136: invokevirtual #229                // Method javafx/scene/control/skin/VirtualFlow.getPrivateCell:(I)Ljavafx/scene/control/IndexedCell;
     139: areturn
     140: aload_2
     141: iconst_0
     142: aaload
     143: checkcast     #230                // class java/lang/Integer
     146: invokevirtual #231                // Method java/lang/Integer.intValue:()I
     149: istore_3
     150: aload_0
     151: iload_3
     152: invokestatic  #221                // Method javafx/scene/control/skin/TableSkinUtils.getVisibleLeafColumn:(Ljavafx/scene/control/skin/TableViewSkinBase;I)Ljavafx/scene/control/TableColumnBase;
     155: astore        4
     157: aload_0
     158: invokevirtual #232                // Method getTableHeaderRow:()Ljavafx/scene/control/skin/TableHeaderRow;
     161: aload         4
     163: invokevirtual #210                // Method javafx/scene/control/skin/TableHeaderRow.getColumnHeaderFor:(Ljavafx/scene/control/TableColumnBase;)Ljavafx/scene/control/skin/TableColumnHeader;
     166: areturn
     167: aload_0
     168: invokevirtual #232                // Method getTableHeaderRow:()Ljavafx/scene/control/skin/TableHeaderRow;
     171: areturn
     172: aload_0
     173: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     176: invokevirtual #87                 // Method javafx/scene/control/skin/VirtualFlow.getVbar:()Lcom/sun/javafx/scene/control/VirtualScrollBar;
     179: areturn
     180: aload_0
     181: getfield      #28                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     184: invokevirtual #31                 // Method javafx/scene/control/skin/VirtualFlow.getHbar:()Lcom/sun/javafx/scene/control/VirtualScrollBar;
     187: areturn
     188: aload_0
     189: aload_1
     190: aload_2
     191: invokespecial #233                // Method javafx/scene/control/skin/VirtualContainerBase.queryAccessibleAttribute:(Ljavafx/scene/AccessibleAttribute;[Ljava/lang/Object;)Ljava/lang/Object;
     194: areturn

  private void lambda$scrollHorizontally$12(javafx.scene.control.TableColumnBase);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #208                // Method scrollHorizontally:(Ljavafx/scene/control/TableColumnBase;)V
       5: return

  private void lambda$new$11(javafx.beans.value.ObservableValue);
    Code:
       0: aload_0
       1: invokespecial #161                // Method updateContentWidth:()V
       4: return

  private void lambda$new$10(javafx.beans.value.ObservableValue);
    Code:
       0: aload_0
       1: invokevirtual #157                // Method updatePlaceholderRegionVisibility:()V
       4: return

  private void lambda$new$9(javafx.beans.property.ObjectProperty, javafx.beans.value.ObservableValue);
    Code:
       0: aload_0
       1: getfield      #234                // Field rowFactory:Ljavafx/util/Callback;
       4: astore_3
       5: aload_0
       6: aload_1
       7: invokevirtual #68                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      10: checkcast     #235                // class javafx/util/Callback
      13: putfield      #234                // Field rowFactory:Ljavafx/util/Callback;
      16: aload_3
      17: aload_0
      18: getfield      #234                // Field rowFactory:Ljavafx/util/Callback;
      21: if_acmpeq     28
      24: aload_0
      25: invokevirtual #160                // Method requestRebuildCells:()V
      28: return

  private void lambda$new$8(javafx.beans.Observable);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #8                  // Field contentWidthDirty:Z
       5: aload_0
       6: invokevirtual #98                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       9: invokevirtual #171                // Method javafx/scene/control/Control.requestLayout:()V
      12: return

  private void lambda$new$7(javafx.scene.control.ScrollToEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #236                // Method javafx/scene/control/ScrollToEvent.getScrollTarget:()Ljava/lang/Object;
       5: checkcast     #112                // class javafx/scene/control/TableColumnBase
       8: invokevirtual #208                // Method scrollHorizontally:(Ljavafx/scene/control/TableColumnBase;)V
      11: return

  private void lambda$new$6(javafx.beans.Observable);
    Code:
       0: aload_0
       1: invokevirtual #98                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       4: invokevirtual #171                // Method javafx/scene/control/Control.requestLayout:()V
       7: return

  private void lambda$new$5(javafx.beans.Observable);
    Code:
       0: aload_0
       1: invokevirtual #237                // Method horizontalScroll:()V
       4: return

  private void lambda$new$4(javafx.beans.Observable);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #10                 // Field needCellsReconfigured:Z
       5: aload_0
       6: invokevirtual #98                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       9: ifnull        19
      12: aload_0
      13: invokevirtual #98                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      16: invokevirtual #171                // Method javafx/scene/control/Control.requestLayout:()V
      19: return

  private void lambda$new$3(javafx.collections.ListChangeListener$Change);
    Code:
       0: aload_0
       1: invokespecial #59                 // Method updateVisibleColumnCount:()V
       4: aload_1
       5: invokevirtual #238                // Method javafx/collections/ListChangeListener$Change.next:()Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: invokevirtual #239                // Method javafx/collections/ListChangeListener$Change.getAddedSubList:()Ljava/util/List;
      16: aload_1
      17: invokevirtual #240                // Method javafx/collections/ListChangeListener$Change.getRemoved:()Ljava/util/List;
      20: invokespecial #62                 // Method updateVisibleLeafColumnWidthListeners:(Ljava/util/List;Ljava/util/List;)V
      23: goto          4
      26: return

  private void lambda$new$2(javafx.collections.ListChangeListener$Change);
    Code:
       0: aload_1
       1: invokevirtual #238                // Method javafx/collections/ListChangeListener$Change.next:()Z
       4: ifeq          41
       7: aload_1
       8: invokevirtual #241                // Method javafx/collections/ListChangeListener$Change.wasReplaced:()Z
      11: ifeq          22
      14: aload_0
      15: iconst_0
      16: putfield      #11                 // Field itemCount:I
      19: goto          41
      22: aload_1
      23: invokevirtual #242                // Method javafx/collections/ListChangeListener$Change.getRemovedSize:()I
      26: aload_0
      27: getfield      #11                 // Field itemCount:I
      30: if_icmpne     0
      33: aload_0
      34: iconst_0
      35: putfield      #11                 // Field itemCount:I
      38: goto          41
      41: aload_0
      42: invokevirtual #98                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      45: instanceof    #243                // class javafx/scene/control/TableView
      48: ifeq          63
      51: aload_0
      52: invokevirtual #98                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      55: checkcast     #243                // class javafx/scene/control/TableView
      58: iconst_m1
      59: aconst_null
      60: invokevirtual #244                // Method javafx/scene/control/TableView.edit:(ILjavafx/scene/control/TableColumn;)V
      63: aload_0
      64: invokevirtual #170                // Method markItemCountDirty:()V
      67: aload_0
      68: invokevirtual #98                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      71: invokevirtual #171                // Method javafx/scene/control/Control.requestLayout:()V
      74: return

  private void lambda$new$1(javafx.collections.MapChangeListener$Change);
    Code:
       0: aload_1
       1: invokevirtual #245                // Method javafx/collections/MapChangeListener$Change.wasAdded:()Z
       4: ifne          8
       7: return
       8: ldc           #77                 // String refreshKey
      10: aload_1
      11: invokevirtual #246                // Method javafx/collections/MapChangeListener$Change.getKey:()Ljava/lang/Object;
      14: invokevirtual #247                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      17: ifeq          42
      20: aload_0
      21: invokespecial #248                // Method refreshView:()V
      24: aload_0
      25: invokevirtual #98                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      28: invokevirtual #75                 // Method javafx/scene/control/Control.getProperties:()Ljavafx/collections/ObservableMap;
      31: ldc           #77                 // String refreshKey
      33: invokeinterface #78,  2           // InterfaceMethod javafx/collections/ObservableMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: goto          78
      42: ldc           #79                 // String recreateKey
      44: aload_1
      45: invokevirtual #246                // Method javafx/collections/MapChangeListener$Change.getKey:()Ljava/lang/Object;
      48: invokevirtual #247                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      51: ifeq          78
      54: aload_0
      55: iconst_1
      56: putfield      #9                  // Field needCellsRecreated:Z
      59: aload_0
      60: invokespecial #248                // Method refreshView:()V
      63: aload_0
      64: invokevirtual #98                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      67: invokevirtual #75                 // Method javafx/scene/control/Control.getProperties:()Ljavafx/collections/ObservableMap;
      70: ldc           #79                 // String recreateKey
      72: invokeinterface #78,  2           // InterfaceMethod javafx/collections/ObservableMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      77: pop
      78: return

  private static java.lang.Boolean lambda$static$0();
    Code:
       0: ldc           #249                // String javafx.scene.control.skin.TableViewSkin.pannable
       2: invokestatic  #250                // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
       5: invokestatic  #251                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       8: areturn

  static void access$000(javafx.scene.control.skin.TableViewSkinBase, javafx.collections.ObservableList, javafx.collections.ObservableList);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method updateTableItems:(Ljavafx/collections/ObservableList;Ljavafx/collections/ObservableList;)V
       6: return

  static {};
    Code:
       0: invokedynamic #252,  0            // InvokeDynamic #12:run:()Ljava/security/PrivilegedAction;
       5: invokestatic  #253                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
       8: checkcast     #254                // class java/lang/Boolean
      11: invokevirtual #255                // Method java/lang/Boolean.booleanValue:()Z
      14: putstatic     #29                 // Field IS_PANNABLE:Z
      17: return
}
