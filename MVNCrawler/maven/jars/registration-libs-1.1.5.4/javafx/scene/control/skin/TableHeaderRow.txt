Compiled from "TableHeaderRow.java"
public class javafx.scene.control.skin.TableHeaderRow extends javafx.scene.layout.StackPane {
  private final java.lang.String MENU_SEPARATOR;

  private final javafx.scene.control.skin.VirtualFlow flow;

  final javafx.scene.control.skin.TableViewSkinBase<?, ?, ?, ?, ?> tableSkin;

  private java.util.Map<javafx.scene.control.TableColumnBase, javafx.scene.control.CheckMenuItem> columnMenuItems;

  private double scrollX;

  private double tableWidth;

  private javafx.scene.shape.Rectangle clip;

  private javafx.scene.control.skin.TableColumnHeader reorderingRegion;

  private javafx.scene.layout.StackPane dragHeader;

  private final javafx.scene.control.Label dragHeaderLabel;

  private javafx.scene.layout.Region filler;

  private javafx.scene.layout.Pane cornerRegion;

  private javafx.scene.control.ContextMenu columnPopupMenu;

  boolean columnDragLock;

  private javafx.beans.InvalidationListener tableWidthListener;

  private javafx.beans.InvalidationListener tablePaddingListener;

  private javafx.collections.ListChangeListener visibleLeafColumnsListener;

  private final javafx.collections.ListChangeListener tableColumnsListener;

  private final javafx.beans.InvalidationListener columnTextListener;

  private final javafx.beans.WeakInvalidationListener weakTableWidthListener;

  private final javafx.beans.WeakInvalidationListener weakTablePaddingListener;

  private final javafx.collections.WeakListChangeListener weakVisibleLeafColumnsListener;

  private final javafx.collections.WeakListChangeListener weakTableColumnsListener;

  private final javafx.beans.WeakInvalidationListener weakColumnTextListener;

  private javafx.beans.property.BooleanProperty reordering;

  private javafx.beans.property.ReadOnlyObjectWrapper<javafx.scene.control.skin.NestedTableColumnHeader> rootHeader;

  public javafx.scene.control.skin.TableHeaderRow(javafx.scene.control.skin.TableViewSkinBase);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method javafx/scene/layout/StackPane."<init>":()V
       4: aload_0
       5: ldc           #3                  // String TableView.nestedColumnControlMenuSeparator
       7: invokestatic  #4                  // Method com/sun/javafx/scene/control/skin/resources/ControlResources.getString:(Ljava/lang/String;)Ljava/lang/String;
      10: putfield      #5                  // Field MENU_SEPARATOR:Ljava/lang/String;
      13: aload_0
      14: new           #6                  // class java/util/HashMap
      17: dup
      18: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      21: putfield      #8                  // Field columnMenuItems:Ljava/util/Map;
      24: aload_0
      25: new           #9                  // class javafx/scene/control/Label
      28: dup
      29: invokespecial #10                 // Method javafx/scene/control/Label."<init>":()V
      32: putfield      #11                 // Field dragHeaderLabel:Ljavafx/scene/control/Label;
      35: aload_0
      36: iconst_0
      37: putfield      #12                 // Field columnDragLock:Z
      40: aload_0
      41: aload_0
      42: invokedynamic #13,  0             // InvokeDynamic #0:invalidated:(Ljavafx/scene/control/skin/TableHeaderRow;)Ljavafx/beans/InvalidationListener;
      47: putfield      #14                 // Field tableWidthListener:Ljavafx/beans/InvalidationListener;
      50: aload_0
      51: aload_0
      52: invokedynamic #15,  0             // InvokeDynamic #1:invalidated:(Ljavafx/scene/control/skin/TableHeaderRow;)Ljavafx/beans/InvalidationListener;
      57: putfield      #16                 // Field tablePaddingListener:Ljavafx/beans/InvalidationListener;
      60: aload_0
      61: aload_0
      62: invokedynamic #17,  0             // InvokeDynamic #2:onChanged:(Ljavafx/scene/control/skin/TableHeaderRow;)Ljavafx/collections/ListChangeListener;
      67: putfield      #18                 // Field visibleLeafColumnsListener:Ljavafx/collections/ListChangeListener;
      70: aload_0
      71: aload_0
      72: invokedynamic #19,  0             // InvokeDynamic #3:onChanged:(Ljavafx/scene/control/skin/TableHeaderRow;)Ljavafx/collections/ListChangeListener;
      77: putfield      #20                 // Field tableColumnsListener:Ljavafx/collections/ListChangeListener;
      80: aload_0
      81: aload_0
      82: invokedynamic #21,  0             // InvokeDynamic #4:invalidated:(Ljavafx/scene/control/skin/TableHeaderRow;)Ljavafx/beans/InvalidationListener;
      87: putfield      #22                 // Field columnTextListener:Ljavafx/beans/InvalidationListener;
      90: aload_0
      91: new           #23                 // class javafx/beans/WeakInvalidationListener
      94: dup
      95: aload_0
      96: getfield      #14                 // Field tableWidthListener:Ljavafx/beans/InvalidationListener;
      99: invokespecial #24                 // Method javafx/beans/WeakInvalidationListener."<init>":(Ljavafx/beans/InvalidationListener;)V
     102: putfield      #25                 // Field weakTableWidthListener:Ljavafx/beans/WeakInvalidationListener;
     105: aload_0
     106: new           #23                 // class javafx/beans/WeakInvalidationListener
     109: dup
     110: aload_0
     111: getfield      #16                 // Field tablePaddingListener:Ljavafx/beans/InvalidationListener;
     114: invokespecial #24                 // Method javafx/beans/WeakInvalidationListener."<init>":(Ljavafx/beans/InvalidationListener;)V
     117: putfield      #26                 // Field weakTablePaddingListener:Ljavafx/beans/WeakInvalidationListener;
     120: aload_0
     121: new           #27                 // class javafx/collections/WeakListChangeListener
     124: dup
     125: aload_0
     126: getfield      #18                 // Field visibleLeafColumnsListener:Ljavafx/collections/ListChangeListener;
     129: invokespecial #28                 // Method javafx/collections/WeakListChangeListener."<init>":(Ljavafx/collections/ListChangeListener;)V
     132: putfield      #29                 // Field weakVisibleLeafColumnsListener:Ljavafx/collections/WeakListChangeListener;
     135: aload_0
     136: new           #27                 // class javafx/collections/WeakListChangeListener
     139: dup
     140: aload_0
     141: getfield      #20                 // Field tableColumnsListener:Ljavafx/collections/ListChangeListener;
     144: invokespecial #28                 // Method javafx/collections/WeakListChangeListener."<init>":(Ljavafx/collections/ListChangeListener;)V
     147: putfield      #30                 // Field weakTableColumnsListener:Ljavafx/collections/WeakListChangeListener;
     150: aload_0
     151: new           #23                 // class javafx/beans/WeakInvalidationListener
     154: dup
     155: aload_0
     156: getfield      #22                 // Field columnTextListener:Ljavafx/beans/InvalidationListener;
     159: invokespecial #24                 // Method javafx/beans/WeakInvalidationListener."<init>":(Ljavafx/beans/InvalidationListener;)V
     162: putfield      #31                 // Field weakColumnTextListener:Ljavafx/beans/WeakInvalidationListener;
     165: aload_0
     166: new           #32                 // class javafx/scene/control/skin/TableHeaderRow$2
     169: dup
     170: aload_0
     171: aload_0
     172: ldc           #33                 // String reordering
     174: iconst_0
     175: invokespecial #34                 // Method javafx/scene/control/skin/TableHeaderRow$2."<init>":(Ljavafx/scene/control/skin/TableHeaderRow;Ljava/lang/Object;Ljava/lang/String;Z)V
     178: putfield      #35                 // Field reordering:Ljavafx/beans/property/BooleanProperty;
     181: aload_0
     182: new           #36                 // class javafx/beans/property/ReadOnlyObjectWrapper
     185: dup
     186: aload_0
     187: ldc           #37                 // String rootHeader
     189: invokespecial #38                 // Method javafx/beans/property/ReadOnlyObjectWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
     192: putfield      #39                 // Field rootHeader:Ljavafx/beans/property/ReadOnlyObjectWrapper;
     195: aload_0
     196: aload_1
     197: putfield      #40                 // Field tableSkin:Ljavafx/scene/control/skin/TableViewSkinBase;
     200: aload_0
     201: aload_1
     202: getfield      #41                 // Field javafx/scene/control/skin/TableViewSkinBase.flow:Ljavafx/scene/control/skin/VirtualFlow;
     205: putfield      #42                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
     208: aload_0
     209: invokevirtual #43                 // Method getStyleClass:()Ljavafx/collections/ObservableList;
     212: iconst_1
     213: anewarray     #44                 // class java/lang/String
     216: dup
     217: iconst_0
     218: ldc           #45                 // String column-header-background
     220: aastore
     221: invokeinterface #46,  2           // InterfaceMethod javafx/collections/ObservableList.setAll:([Ljava/lang/Object;)Z
     226: pop
     227: aload_0
     228: new           #47                 // class javafx/scene/shape/Rectangle
     231: dup
     232: invokespecial #48                 // Method javafx/scene/shape/Rectangle."<init>":()V
     235: putfield      #49                 // Field clip:Ljavafx/scene/shape/Rectangle;
     238: aload_0
     239: getfield      #49                 // Field clip:Ljavafx/scene/shape/Rectangle;
     242: iconst_0
     243: invokevirtual #50                 // Method javafx/scene/shape/Rectangle.setSmooth:(Z)V
     246: aload_0
     247: getfield      #49                 // Field clip:Ljavafx/scene/shape/Rectangle;
     250: invokevirtual #51                 // Method javafx/scene/shape/Rectangle.heightProperty:()Ljavafx/beans/property/DoubleProperty;
     253: aload_0
     254: invokevirtual #52                 // Method heightProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
     257: invokevirtual #53                 // Method javafx/beans/property/DoubleProperty.bind:(Ljavafx/beans/value/ObservableValue;)V
     260: aload_0
     261: aload_0
     262: getfield      #49                 // Field clip:Ljavafx/scene/shape/Rectangle;
     265: invokevirtual #54                 // Method setClip:(Ljavafx/scene/Node;)V
     268: aload_0
     269: invokespecial #55                 // Method updateTableWidth:()V
     272: aload_0
     273: getfield      #40                 // Field tableSkin:Ljavafx/scene/control/skin/TableViewSkinBase;
     276: invokevirtual #56                 // Method javafx/scene/control/skin/TableViewSkinBase.getSkinnable:()Ljavafx/scene/control/Control;
     279: invokevirtual #57                 // Method javafx/scene/control/Control.widthProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
     282: aload_0
     283: getfield      #25                 // Field weakTableWidthListener:Ljavafx/beans/WeakInvalidationListener;
     286: invokevirtual #58                 // Method javafx/beans/property/ReadOnlyDoubleProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
     289: aload_0
     290: getfield      #40                 // Field tableSkin:Ljavafx/scene/control/skin/TableViewSkinBase;
     293: invokevirtual #56                 // Method javafx/scene/control/skin/TableViewSkinBase.getSkinnable:()Ljavafx/scene/control/Control;
     296: invokevirtual #59                 // Method javafx/scene/control/Control.paddingProperty:()Ljavafx/beans/property/ObjectProperty;
     299: aload_0
     300: getfield      #26                 // Field weakTablePaddingListener:Ljavafx/beans/WeakInvalidationListener;
     303: invokevirtual #60                 // Method javafx/beans/property/ObjectProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
     306: aload_1
     307: invokestatic  #61                 // Method javafx/scene/control/skin/TableSkinUtils.getVisibleLeafColumns:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/collections/ObservableList;
     310: aload_0
     311: getfield      #29                 // Field weakVisibleLeafColumnsListener:Ljavafx/collections/WeakListChangeListener;
     314: invokeinterface #62,  2           // InterfaceMethod javafx/collections/ObservableList.addListener:(Ljavafx/collections/ListChangeListener;)V
     319: aload_0
     320: new           #63                 // class javafx/scene/control/ContextMenu
     323: dup
     324: invokespecial #64                 // Method javafx/scene/control/ContextMenu."<init>":()V
     327: putfield      #65                 // Field columnPopupMenu:Ljavafx/scene/control/ContextMenu;
     330: aload_0
     331: aload_0
     332: getfield      #40                 // Field tableSkin:Ljavafx/scene/control/skin/TableViewSkinBase;
     335: invokestatic  #66                 // Method javafx/scene/control/skin/TableSkinUtils.getColumns:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/collections/ObservableList;
     338: invokestatic  #67                 // Method java/util/Collections.emptyList:()Ljava/util/List;
     341: invokespecial #68                 // Method updateTableColumnListeners:(Ljava/util/List;Ljava/util/List;)V
     344: aload_1
     345: invokestatic  #61                 // Method javafx/scene/control/skin/TableSkinUtils.getVisibleLeafColumns:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/collections/ObservableList;
     348: aload_0
     349: getfield      #30                 // Field weakTableColumnsListener:Ljavafx/collections/WeakListChangeListener;
     352: invokeinterface #62,  2           // InterfaceMethod javafx/collections/ObservableList.addListener:(Ljavafx/collections/ListChangeListener;)V
     357: aload_0
     358: getfield      #40                 // Field tableSkin:Ljavafx/scene/control/skin/TableViewSkinBase;
     361: invokestatic  #66                 // Method javafx/scene/control/skin/TableSkinUtils.getColumns:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/collections/ObservableList;
     364: aload_0
     365: getfield      #30                 // Field weakTableColumnsListener:Ljavafx/collections/WeakListChangeListener;
     368: invokeinterface #62,  2           // InterfaceMethod javafx/collections/ObservableList.addListener:(Ljavafx/collections/ListChangeListener;)V
     373: aload_0
     374: new           #69                 // class javafx/scene/layout/StackPane
     377: dup
     378: invokespecial #2                  // Method javafx/scene/layout/StackPane."<init>":()V
     381: putfield      #1                  // Field dragHeader:Ljavafx/scene/layout/StackPane;
     384: aload_0
     385: getfield      #1                  // Field dragHeader:Ljavafx/scene/layout/StackPane;
     388: iconst_0
     389: invokevirtual #70                 // Method javafx/scene/layout/StackPane.setVisible:(Z)V
     392: aload_0
     393: getfield      #1                  // Field dragHeader:Ljavafx/scene/layout/StackPane;
     396: invokevirtual #71                 // Method javafx/scene/layout/StackPane.getStyleClass:()Ljavafx/collections/ObservableList;
     399: iconst_1
     400: anewarray     #44                 // class java/lang/String
     403: dup
     404: iconst_0
     405: ldc           #72                 // String column-drag-header
     407: aastore
     408: invokeinterface #46,  2           // InterfaceMethod javafx/collections/ObservableList.setAll:([Ljava/lang/Object;)Z
     413: pop
     414: aload_0
     415: getfield      #1                  // Field dragHeader:Ljavafx/scene/layout/StackPane;
     418: iconst_0
     419: invokevirtual #73                 // Method javafx/scene/layout/StackPane.setManaged:(Z)V
     422: aload_0
     423: getfield      #1                  // Field dragHeader:Ljavafx/scene/layout/StackPane;
     426: iconst_1
     427: invokevirtual #74                 // Method javafx/scene/layout/StackPane.setMouseTransparent:(Z)V
     430: aload_0
     431: getfield      #1                  // Field dragHeader:Ljavafx/scene/layout/StackPane;
     434: invokevirtual #75                 // Method javafx/scene/layout/StackPane.getChildren:()Ljavafx/collections/ObservableList;
     437: aload_0
     438: getfield      #11                 // Field dragHeaderLabel:Ljavafx/scene/control/Label;
     441: invokeinterface #76,  2           // InterfaceMethod javafx/collections/ObservableList.add:(Ljava/lang/Object;)Z
     446: pop
     447: aload_0
     448: invokevirtual #77                 // Method createRootHeader:()Ljavafx/scene/control/skin/NestedTableColumnHeader;
     451: astore_2
     452: aload_0
     453: aload_2
     454: invokespecial #78                 // Method setRootHeader:(Ljavafx/scene/control/skin/NestedTableColumnHeader;)V
     457: aload_2
     458: iconst_0
     459: invokevirtual #79                 // Method javafx/scene/control/skin/NestedTableColumnHeader.setFocusTraversable:(Z)V
     462: aload_2
     463: aload_0
     464: invokevirtual #80                 // Method javafx/scene/control/skin/NestedTableColumnHeader.setTableHeaderRow:(Ljavafx/scene/control/skin/TableHeaderRow;)V
     467: aload_0
     468: new           #81                 // class javafx/scene/layout/Region
     471: dup
     472: invokespecial #82                 // Method javafx/scene/layout/Region."<init>":()V
     475: putfield      #83                 // Field filler:Ljavafx/scene/layout/Region;
     478: aload_0
     479: getfield      #83                 // Field filler:Ljavafx/scene/layout/Region;
     482: invokevirtual #84                 // Method javafx/scene/layout/Region.getStyleClass:()Ljavafx/collections/ObservableList;
     485: iconst_1
     486: anewarray     #44                 // class java/lang/String
     489: dup
     490: iconst_0
     491: ldc           #85                 // String filler
     493: aastore
     494: invokeinterface #46,  2           // InterfaceMethod javafx/collections/ObservableList.setAll:([Ljava/lang/Object;)Z
     499: pop
     500: aload_0
     501: aload_1
     502: invokedynamic #86,  0             // InvokeDynamic #5:handle:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/event/EventHandler;
     507: invokevirtual #87                 // Method setOnMousePressed:(Ljavafx/event/EventHandler;)V
     510: new           #69                 // class javafx/scene/layout/StackPane
     513: dup
     514: invokespecial #2                  // Method javafx/scene/layout/StackPane."<init>":()V
     517: astore_3
     518: aload_3
     519: iconst_0
     520: invokevirtual #88                 // Method javafx/scene/layout/StackPane.setSnapToPixel:(Z)V
     523: aload_3
     524: invokevirtual #71                 // Method javafx/scene/layout/StackPane.getStyleClass:()Ljavafx/collections/ObservableList;
     527: iconst_1
     528: anewarray     #44                 // class java/lang/String
     531: dup
     532: iconst_0
     533: ldc           #89                 // String show-hide-column-image
     535: aastore
     536: invokeinterface #46,  2           // InterfaceMethod javafx/collections/ObservableList.setAll:([Ljava/lang/Object;)Z
     541: pop
     542: aload_0
     543: new           #90                 // class javafx/scene/control/skin/TableHeaderRow$1
     546: dup
     547: aload_0
     548: aload_3
     549: invokespecial #91                 // Method javafx/scene/control/skin/TableHeaderRow$1."<init>":(Ljavafx/scene/control/skin/TableHeaderRow;Ljavafx/scene/layout/StackPane;)V
     552: putfield      #92                 // Field cornerRegion:Ljavafx/scene/layout/Pane;
     555: aload_0
     556: getfield      #92                 // Field cornerRegion:Ljavafx/scene/layout/Pane;
     559: invokevirtual #93                 // Method javafx/scene/layout/Pane.getStyleClass:()Ljavafx/collections/ObservableList;
     562: iconst_1
     563: anewarray     #44                 // class java/lang/String
     566: dup
     567: iconst_0
     568: ldc           #94                 // String show-hide-columns-button
     570: aastore
     571: invokeinterface #46,  2           // InterfaceMethod javafx/collections/ObservableList.setAll:([Ljava/lang/Object;)Z
     576: pop
     577: aload_0
     578: getfield      #92                 // Field cornerRegion:Ljavafx/scene/layout/Pane;
     581: invokevirtual #95                 // Method javafx/scene/layout/Pane.getChildren:()Ljavafx/collections/ObservableList;
     584: iconst_1
     585: anewarray     #96                 // class javafx/scene/Node
     588: dup
     589: iconst_0
     590: aload_3
     591: aastore
     592: invokeinterface #97,  2           // InterfaceMethod javafx/collections/ObservableList.addAll:([Ljava/lang/Object;)Z
     597: pop
     598: aload_1
     599: invokestatic  #98                 // Method javafx/scene/control/skin/TableSkinUtils.tableMenuButtonVisibleProperty:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/beans/property/BooleanProperty;
     602: astore        4
     604: aload         4
     606: ifnull        621
     609: aload_0
     610: getfield      #92                 // Field cornerRegion:Ljavafx/scene/layout/Pane;
     613: invokevirtual #99                 // Method javafx/scene/layout/Pane.visibleProperty:()Ljavafx/beans/property/BooleanProperty;
     616: aload         4
     618: invokevirtual #100                // Method javafx/beans/property/BooleanProperty.bind:(Ljavafx/beans/value/ObservableValue;)V
     621: aload_0
     622: getfield      #92                 // Field cornerRegion:Ljavafx/scene/layout/Pane;
     625: aload_0
     626: invokedynamic #101,  0            // InvokeDynamic #6:handle:(Ljavafx/scene/control/skin/TableHeaderRow;)Ljavafx/event/EventHandler;
     631: invokevirtual #102                // Method javafx/scene/layout/Pane.setOnMousePressed:(Ljavafx/event/EventHandler;)V
     634: aload_0
     635: invokevirtual #103                // Method getChildren:()Ljavafx/collections/ObservableList;
     638: iconst_4
     639: anewarray     #96                 // class javafx/scene/Node
     642: dup
     643: iconst_0
     644: aload_0
     645: getfield      #83                 // Field filler:Ljavafx/scene/layout/Region;
     648: aastore
     649: dup
     650: iconst_1
     651: aload_2
     652: aastore
     653: dup
     654: iconst_2
     655: aload_0
     656: getfield      #92                 // Field cornerRegion:Ljavafx/scene/layout/Pane;
     659: aastore
     660: dup
     661: iconst_3
     662: aload_0
     663: getfield      #1                  // Field dragHeader:Ljavafx/scene/layout/StackPane;
     666: aastore
     667: invokeinterface #97,  2           // InterfaceMethod javafx/collections/ObservableList.addAll:([Ljava/lang/Object;)Z
     672: pop
     673: return

  final void setReordering(boolean);
    Code:
       0: aload_0
       1: getfield      #35                 // Field reordering:Ljavafx/beans/property/BooleanProperty;
       4: iload_1
       5: invokevirtual #104                // Method javafx/beans/property/BooleanProperty.set:(Z)V
       8: return

  final boolean isReordering();
    Code:
       0: aload_0
       1: getfield      #35                 // Field reordering:Ljavafx/beans/property/BooleanProperty;
       4: invokevirtual #105                // Method javafx/beans/property/BooleanProperty.get:()Z
       7: ireturn

  final javafx.beans.property.BooleanProperty reorderingProperty();
    Code:
       0: aload_0
       1: getfield      #35                 // Field reordering:Ljavafx/beans/property/BooleanProperty;
       4: areturn

  private final javafx.beans.property.ReadOnlyObjectProperty<javafx.scene.control.skin.NestedTableColumnHeader> rootHeaderProperty();
    Code:
       0: aload_0
       1: getfield      #39                 // Field rootHeader:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #106                // Method javafx/beans/property/ReadOnlyObjectWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       7: areturn

  final javafx.scene.control.skin.NestedTableColumnHeader getRootHeader();
    Code:
       0: aload_0
       1: getfield      #39                 // Field rootHeader:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #107                // Method javafx/beans/property/ReadOnlyObjectWrapper.get:()Ljava/lang/Object;
       7: checkcast     #108                // class javafx/scene/control/skin/NestedTableColumnHeader
      10: areturn

  private final void setRootHeader(javafx.scene.control.skin.NestedTableColumnHeader);
    Code:
       0: aload_0
       1: getfield      #39                 // Field rootHeader:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: aload_1
       5: invokevirtual #109                // Method javafx/beans/property/ReadOnlyObjectWrapper.set:(Ljava/lang/Object;)V
       8: return

  protected void layoutChildren();
    Code:
       0: aload_0
       1: getfield      #110                // Field scrollX:D
       4: dstore_1
       5: aload_0
       6: aload_0
       7: invokevirtual #111                // Method getRootHeader:()Ljavafx/scene/control/skin/NestedTableColumnHeader;
      10: ldc2_w        #112                // double -1.0d
      13: invokevirtual #114                // Method javafx/scene/control/skin/NestedTableColumnHeader.prefWidth:(D)D
      16: invokevirtual #115                // Method snapSizeX:(D)D
      19: dstore_3
      20: aload_0
      21: invokevirtual #116                // Method getHeight:()D
      24: aload_0
      25: invokevirtual #117                // Method snappedTopInset:()D
      28: dsub
      29: aload_0
      30: invokevirtual #118                // Method snappedBottomInset:()D
      33: dsub
      34: dstore        5
      36: aload_0
      37: aload_0
      38: getfield      #42                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
      41: invokevirtual #119                // Method javafx/scene/control/skin/VirtualFlow.getVbar:()Lcom/sun/javafx/scene/control/VirtualScrollBar;
      44: ldc2_w        #112                // double -1.0d
      47: invokevirtual #120                // Method com/sun/javafx/scene/control/VirtualScrollBar.prefWidth:(D)D
      50: invokevirtual #115                // Method snapSizeX:(D)D
      53: dstore        7
      55: aload_0
      56: invokevirtual #111                // Method getRootHeader:()Ljavafx/scene/control/skin/NestedTableColumnHeader;
      59: dload_1
      60: aload_0
      61: invokevirtual #117                // Method snappedTopInset:()D
      64: dload_3
      65: dload         5
      67: invokevirtual #121                // Method javafx/scene/control/skin/NestedTableColumnHeader.resizeRelocate:(DDDD)V
      70: aload_0
      71: getfield      #40                 // Field tableSkin:Ljavafx/scene/control/skin/TableViewSkinBase;
      74: invokevirtual #56                 // Method javafx/scene/control/skin/TableViewSkinBase.getSkinnable:()Ljavafx/scene/control/Control;
      77: astore        9
      79: aload         9
      81: ifnonnull     85
      84: return
      85: aload_0
      86: getfield      #40                 // Field tableSkin:Ljavafx/scene/control/skin/TableViewSkinBase;
      89: invokestatic  #98                 // Method javafx/scene/control/skin/TableSkinUtils.tableMenuButtonVisibleProperty:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/beans/property/BooleanProperty;
      92: astore        10
      94: aload         9
      96: invokevirtual #122                // Method javafx/scene/control/Control.snappedLeftInset:()D
      99: aload         9
     101: invokevirtual #123                // Method javafx/scene/control/Control.snappedRightInset:()D
     104: dadd
     105: dstore        11
     107: aload_0
     108: getfield      #124                // Field tableWidth:D
     111: dload_3
     112: dsub
     113: aload_0
     114: getfield      #83                 // Field filler:Ljavafx/scene/layout/Region;
     117: invokevirtual #125                // Method javafx/scene/layout/Region.getInsets:()Ljavafx/geometry/Insets;
     120: invokevirtual #126                // Method javafx/geometry/Insets.getLeft:()D
     123: dadd
     124: dload         11
     126: dsub
     127: dstore        13
     129: dload         13
     131: aload         10
     133: ifnull        149
     136: aload         10
     138: invokevirtual #105                // Method javafx/beans/property/BooleanProperty.get:()Z
     141: ifeq          149
     144: dload         7
     146: goto          150
     149: dconst_0
     150: dsub
     151: dstore        13
     153: aload_0
     154: getfield      #83                 // Field filler:Ljavafx/scene/layout/Region;
     157: dload         13
     159: dconst_0
     160: dcmpl
     161: ifle          168
     164: iconst_1
     165: goto          169
     168: iconst_0
     169: invokevirtual #127                // Method javafx/scene/layout/Region.setVisible:(Z)V
     172: dload         13
     174: dconst_0
     175: dcmpl
     176: ifle          197
     179: aload_0
     180: getfield      #83                 // Field filler:Ljavafx/scene/layout/Region;
     183: dload_1
     184: dload_3
     185: dadd
     186: aload_0
     187: invokevirtual #117                // Method snappedTopInset:()D
     190: dload         13
     192: dload         5
     194: invokevirtual #128                // Method javafx/scene/layout/Region.resizeRelocate:(DDDD)V
     197: aload_0
     198: getfield      #92                 // Field cornerRegion:Ljavafx/scene/layout/Pane;
     201: aload_0
     202: getfield      #124                // Field tableWidth:D
     205: dload         7
     207: dsub
     208: aload_0
     209: invokevirtual #117                // Method snappedTopInset:()D
     212: dload         7
     214: dload         5
     216: invokevirtual #129                // Method javafx/scene/layout/Pane.resizeRelocate:(DDDD)V
     219: return

  protected double computePrefWidth(double);
    Code:
       0: aload_0
       1: invokevirtual #111                // Method getRootHeader:()Ljavafx/scene/control/skin/NestedTableColumnHeader;
       4: dload_1
       5: invokevirtual #114                // Method javafx/scene/control/skin/NestedTableColumnHeader.prefWidth:(D)D
       8: dreturn

  protected double computeMinHeight(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #130                // Method computePrefHeight:(D)D
       5: dreturn

  protected double computePrefHeight(double);
    Code:
       0: aload_0
       1: invokevirtual #111                // Method getRootHeader:()Ljavafx/scene/control/skin/NestedTableColumnHeader;
       4: dload_1
       5: invokevirtual #131                // Method javafx/scene/control/skin/NestedTableColumnHeader.prefHeight:(D)D
       8: dstore_3
       9: dload_3
      10: dconst_0
      11: dcmpl
      12: ifne          21
      15: ldc2_w        #132                // double 24.0d
      18: goto          22
      21: dload_3
      22: dstore_3
      23: aload_0
      24: invokevirtual #117                // Method snappedTopInset:()D
      27: dload_3
      28: dadd
      29: aload_0
      30: invokevirtual #118                // Method snappedBottomInset:()D
      33: dadd
      34: dreturn

  void updateScrollX();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #42                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
       5: invokevirtual #134                // Method javafx/scene/control/skin/VirtualFlow.getHbar:()Lcom/sun/javafx/scene/control/VirtualScrollBar;
       8: invokevirtual #135                // Method com/sun/javafx/scene/control/VirtualScrollBar.isVisible:()Z
      11: ifeq          28
      14: aload_0
      15: getfield      #42                 // Field flow:Ljavafx/scene/control/skin/VirtualFlow;
      18: invokevirtual #134                // Method javafx/scene/control/skin/VirtualFlow.getHbar:()Lcom/sun/javafx/scene/control/VirtualScrollBar;
      21: invokevirtual #136                // Method com/sun/javafx/scene/control/VirtualScrollBar.getValue:()D
      24: dneg
      25: goto          29
      28: dconst_0
      29: putfield      #110                // Field scrollX:D
      32: aload_0
      33: invokevirtual #137                // Method requestLayout:()V
      36: aload_0
      37: invokevirtual #138                // Method layout:()V
      40: return

  private void updateTableWidth();
    Code:
       0: aload_0
       1: getfield      #40                 // Field tableSkin:Ljavafx/scene/control/skin/TableViewSkinBase;
       4: invokevirtual #56                 // Method javafx/scene/control/skin/TableViewSkinBase.getSkinnable:()Ljavafx/scene/control/Control;
       7: astore_1
       8: aload_1
       9: ifnonnull     20
      12: aload_0
      13: dconst_0
      14: putfield      #124                // Field tableWidth:D
      17: goto          70
      20: aload_1
      21: invokevirtual #139                // Method javafx/scene/control/Control.getInsets:()Ljavafx/geometry/Insets;
      24: ifnonnull     33
      27: getstatic     #140                // Field javafx/geometry/Insets.EMPTY:Ljavafx/geometry/Insets;
      30: goto          37
      33: aload_1
      34: invokevirtual #139                // Method javafx/scene/control/Control.getInsets:()Ljavafx/geometry/Insets;
      37: astore_2
      38: aload_0
      39: aload_2
      40: invokevirtual #126                // Method javafx/geometry/Insets.getLeft:()D
      43: invokevirtual #115                // Method snapSizeX:(D)D
      46: aload_0
      47: aload_2
      48: invokevirtual #141                // Method javafx/geometry/Insets.getRight:()D
      51: invokevirtual #115                // Method snapSizeX:(D)D
      54: dadd
      55: dstore_3
      56: aload_0
      57: aload_0
      58: aload_1
      59: invokevirtual #142                // Method javafx/scene/control/Control.getWidth:()D
      62: invokevirtual #115                // Method snapSizeX:(D)D
      65: dload_3
      66: dsub
      67: putfield      #124                // Field tableWidth:D
      70: aload_0
      71: getfield      #49                 // Field clip:Ljavafx/scene/shape/Rectangle;
      74: aload_0
      75: getfield      #124                // Field tableWidth:D
      78: invokevirtual #143                // Method javafx/scene/shape/Rectangle.setWidth:(D)V
      81: return

  protected javafx.scene.control.skin.NestedTableColumnHeader createRootHeader();
    Code:
       0: new           #108                // class javafx/scene/control/skin/NestedTableColumnHeader
       3: dup
       4: aconst_null
       5: invokespecial #144                // Method javafx/scene/control/skin/NestedTableColumnHeader."<init>":(Ljavafx/scene/control/TableColumnBase;)V
       8: areturn

  javafx.scene.control.skin.TableColumnHeader getReorderingRegion();
    Code:
       0: aload_0
       1: getfield      #145                // Field reorderingRegion:Ljavafx/scene/control/skin/TableColumnHeader;
       4: areturn

  void setReorderingColumn(javafx.scene.control.TableColumnBase);
    Code:
       0: aload_0
       1: getfield      #11                 // Field dragHeaderLabel:Ljavafx/scene/control/Label;
       4: aload_1
       5: ifnonnull     13
       8: ldc           #146                // String
      10: goto          17
      13: aload_1
      14: invokevirtual #147                // Method javafx/scene/control/TableColumnBase.getText:()Ljava/lang/String;
      17: invokevirtual #148                // Method javafx/scene/control/Label.setText:(Ljava/lang/String;)V
      20: return

  void setReorderingRegion(javafx.scene.control.skin.TableColumnHeader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #145                // Field reorderingRegion:Ljavafx/scene/control/skin/TableColumnHeader;
       5: aload_1
       6: ifnull        27
       9: aload_0
      10: getfield      #1                  // Field dragHeader:Ljavafx/scene/layout/StackPane;
      13: aload_1
      14: invokevirtual #149                // Method javafx/scene/control/skin/TableColumnHeader.getWidth:()D
      17: aload_0
      18: getfield      #1                  // Field dragHeader:Ljavafx/scene/layout/StackPane;
      21: invokevirtual #150                // Method javafx/scene/layout/StackPane.getHeight:()D
      24: invokevirtual #151                // Method javafx/scene/layout/StackPane.resize:(DD)V
      27: return

  void setDragHeaderX(double);
    Code:
       0: aload_0
       1: getfield      #1                  // Field dragHeader:Ljavafx/scene/layout/StackPane;
       4: dload_1
       5: invokevirtual #152                // Method javafx/scene/layout/StackPane.setTranslateX:(D)V
       8: return

  javafx.scene.control.skin.TableColumnHeader getColumnHeaderFor(javafx.scene.control.TableColumnBase<?, ?>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #153                // class java/util/ArrayList
       9: dup
      10: invokespecial #154                // Method java/util/ArrayList."<init>":()V
      13: astore_2
      14: aload_2
      15: aload_1
      16: invokeinterface #155,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_1
      23: invokevirtual #156                // Method javafx/scene/control/TableColumnBase.getParentColumn:()Ljavafx/scene/control/TableColumnBase;
      26: astore_3
      27: aload_3
      28: ifnull        47
      31: aload_2
      32: iconst_0
      33: aload_3
      34: invokeinterface #157,  3          // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      39: aload_3
      40: invokevirtual #156                // Method javafx/scene/control/TableColumnBase.getParentColumn:()Ljavafx/scene/control/TableColumnBase;
      43: astore_3
      44: goto          27
      47: aload_0
      48: invokevirtual #111                // Method getRootHeader:()Ljavafx/scene/control/skin/NestedTableColumnHeader;
      51: astore        4
      53: iconst_0
      54: istore        5
      56: iload         5
      58: aload_2
      59: invokeinterface #158,  1          // InterfaceMethod java/util/List.size:()I
      64: if_icmpge     96
      67: aload_2
      68: iload         5
      70: invokeinterface #159,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      75: checkcast     #160                // class javafx/scene/control/TableColumnBase
      78: astore        6
      80: aload_0
      81: aload         6
      83: aload         4
      85: invokespecial #161                // Method getColumnHeaderFor:(Ljavafx/scene/control/TableColumnBase;Ljavafx/scene/control/skin/TableColumnHeader;)Ljavafx/scene/control/skin/TableColumnHeader;
      88: astore        4
      90: iinc          5, 1
      93: goto          56
      96: aload         4
      98: areturn

  private javafx.scene.control.skin.TableColumnHeader getColumnHeaderFor(javafx.scene.control.TableColumnBase<?, ?>, javafx.scene.control.skin.TableColumnHeader);
    Code:
       0: aload_2
       1: instanceof    #108                // class javafx/scene/control/skin/NestedTableColumnHeader
       4: ifeq          60
       7: aload_2
       8: checkcast     #108                // class javafx/scene/control/skin/NestedTableColumnHeader
      11: invokevirtual #162                // Method javafx/scene/control/skin/NestedTableColumnHeader.getColumnHeaders:()Ljavafx/collections/ObservableList;
      14: astore_3
      15: iconst_0
      16: istore        4
      18: iload         4
      20: aload_3
      21: invokeinterface #158,  1          // InterfaceMethod java/util/List.size:()I
      26: if_icmpge     60
      29: aload_3
      30: iload         4
      32: invokeinterface #159,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      37: checkcast     #163                // class javafx/scene/control/skin/TableColumnHeader
      40: astore        5
      42: aload         5
      44: invokevirtual #164                // Method javafx/scene/control/skin/TableColumnHeader.getTableColumn:()Ljavafx/scene/control/TableColumnBase;
      47: aload_1
      48: if_acmpne     54
      51: aload         5
      53: areturn
      54: iinc          4, 1
      57: goto          18
      60: aconst_null
      61: areturn

  private void updateTableColumnListeners(java.util.List<? extends javafx.scene.control.TableColumnBase<?, ?>>, java.util.List<? extends javafx.scene.control.TableColumnBase<?, ?>>);
    Code:
       0: aload_2
       1: invokeinterface #165,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          36
      16: aload_3
      17: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #160                // class javafx/scene/control/TableColumnBase
      25: astore        4
      27: aload_0
      28: aload         4
      30: invokespecial #168                // Method remove:(Ljavafx/scene/control/TableColumnBase;)V
      33: goto          7
      36: aload_0
      37: invokespecial #169                // Method rebuildColumnMenu:()V
      40: return

  private void remove(javafx.scene.control.TableColumnBase<?, ?>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #8                  // Field columnMenuItems:Ljava/util/Map;
       9: aload_1
      10: invokeinterface #170,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #171                // class javafx/scene/control/CheckMenuItem
      18: astore_2
      19: aload_2
      20: ifnull        59
      23: aload_1
      24: invokevirtual #172                // Method javafx/scene/control/TableColumnBase.textProperty:()Ljavafx/beans/property/StringProperty;
      27: aload_0
      28: getfield      #31                 // Field weakColumnTextListener:Ljavafx/beans/WeakInvalidationListener;
      31: invokevirtual #173                // Method javafx/beans/property/StringProperty.removeListener:(Ljavafx/beans/InvalidationListener;)V
      34: aload_2
      35: invokevirtual #174                // Method javafx/scene/control/CheckMenuItem.selectedProperty:()Ljavafx/beans/property/BooleanProperty;
      38: aload_1
      39: invokevirtual #175                // Method javafx/scene/control/TableColumnBase.visibleProperty:()Ljavafx/beans/property/BooleanProperty;
      42: invokevirtual #176                // Method javafx/beans/property/BooleanProperty.unbindBidirectional:(Ljavafx/beans/property/Property;)V
      45: aload_0
      46: getfield      #65                 // Field columnPopupMenu:Ljavafx/scene/control/ContextMenu;
      49: invokevirtual #177                // Method javafx/scene/control/ContextMenu.getItems:()Ljavafx/collections/ObservableList;
      52: aload_2
      53: invokeinterface #178,  2          // InterfaceMethod javafx/collections/ObservableList.remove:(Ljava/lang/Object;)Z
      58: pop
      59: aload_1
      60: invokevirtual #179                // Method javafx/scene/control/TableColumnBase.getColumns:()Ljavafx/collections/ObservableList;
      63: invokeinterface #180,  1          // InterfaceMethod javafx/collections/ObservableList.isEmpty:()Z
      68: ifne          110
      71: aload_1
      72: invokevirtual #179                // Method javafx/scene/control/TableColumnBase.getColumns:()Ljavafx/collections/ObservableList;
      75: invokeinterface #181,  1          // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
      80: astore_3
      81: aload_3
      82: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      87: ifeq          110
      90: aload_3
      91: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      96: checkcast     #160                // class javafx/scene/control/TableColumnBase
      99: astore        4
     101: aload_0
     102: aload         4
     104: invokespecial #168                // Method remove:(Ljavafx/scene/control/TableColumnBase;)V
     107: goto          81
     110: return

  private void rebuildColumnMenu();
    Code:
       0: aload_0
       1: getfield      #65                 // Field columnPopupMenu:Ljavafx/scene/control/ContextMenu;
       4: invokevirtual #177                // Method javafx/scene/control/ContextMenu.getItems:()Ljavafx/collections/ObservableList;
       7: invokeinterface #182,  1          // InterfaceMethod javafx/collections/ObservableList.clear:()V
      12: aload_0
      13: getfield      #40                 // Field tableSkin:Ljavafx/scene/control/skin/TableViewSkinBase;
      16: invokestatic  #66                 // Method javafx/scene/control/skin/TableSkinUtils.getColumns:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/collections/ObservableList;
      19: invokeinterface #181,  1          // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
      24: astore_1
      25: aload_1
      26: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          112
      34: aload_1
      35: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #160                // class javafx/scene/control/TableColumnBase
      43: astore_2
      44: aload_2
      45: invokevirtual #179                // Method javafx/scene/control/TableColumnBase.getColumns:()Ljavafx/collections/ObservableList;
      48: invokeinterface #180,  1          // InterfaceMethod javafx/collections/ObservableList.isEmpty:()Z
      53: ifeq          64
      56: aload_0
      57: aload_2
      58: invokespecial #183                // Method createMenuItem:(Ljavafx/scene/control/TableColumnBase;)V
      61: goto          109
      64: aload_0
      65: aload_2
      66: invokespecial #184                // Method getLeafColumns:(Ljavafx/scene/control/TableColumnBase;)Ljava/util/List;
      69: astore_3
      70: aload_3
      71: invokeinterface #165,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      76: astore        4
      78: aload         4
      80: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      85: ifeq          109
      88: aload         4
      90: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      95: checkcast     #160                // class javafx/scene/control/TableColumnBase
      98: astore        5
     100: aload_0
     101: aload         5
     103: invokespecial #183                // Method createMenuItem:(Ljavafx/scene/control/TableColumnBase;)V
     106: goto          78
     109: goto          25
     112: return

  private java.util.List<javafx.scene.control.TableColumnBase<?, ?>> getLeafColumns(javafx.scene.control.TableColumnBase<?, ?>);
    Code:
       0: new           #153                // class java/util/ArrayList
       3: dup
       4: invokespecial #154                // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokevirtual #179                // Method javafx/scene/control/TableColumnBase.getColumns:()Ljavafx/collections/ObservableList;
      12: invokeinterface #181,  1          // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #166,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          79
      27: aload_3
      28: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #160                // class javafx/scene/control/TableColumnBase
      36: astore        4
      38: aload         4
      40: invokevirtual #179                // Method javafx/scene/control/TableColumnBase.getColumns:()Ljavafx/collections/ObservableList;
      43: invokeinterface #180,  1          // InterfaceMethod javafx/collections/ObservableList.isEmpty:()Z
      48: ifeq          63
      51: aload_2
      52: aload         4
      54: invokeinterface #155,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      59: pop
      60: goto          76
      63: aload_2
      64: aload_0
      65: aload         4
      67: invokespecial #184                // Method getLeafColumns:(Ljavafx/scene/control/TableColumnBase;)Ljava/util/List;
      70: invokeinterface #185,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      75: pop
      76: goto          18
      79: aload_2
      80: areturn

  private void createMenuItem(javafx.scene.control.TableColumnBase<?, ?>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field columnMenuItems:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #186,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #171                // class javafx/scene/control/CheckMenuItem
      13: astore_2
      14: aload_2
      15: ifnonnull     38
      18: new           #171                // class javafx/scene/control/CheckMenuItem
      21: dup
      22: invokespecial #187                // Method javafx/scene/control/CheckMenuItem."<init>":()V
      25: astore_2
      26: aload_0
      27: getfield      #8                  // Field columnMenuItems:Ljava/util/Map;
      30: aload_1
      31: aload_2
      32: invokeinterface #188,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_2
      39: aload_0
      40: aload_1
      41: invokevirtual #147                // Method javafx/scene/control/TableColumnBase.getText:()Ljava/lang/String;
      44: aload_1
      45: invokespecial #189                // Method getText:(Ljava/lang/String;Ljavafx/scene/control/TableColumnBase;)Ljava/lang/String;
      48: invokevirtual #190                // Method javafx/scene/control/CheckMenuItem.setText:(Ljava/lang/String;)V
      51: aload_1
      52: invokevirtual #172                // Method javafx/scene/control/TableColumnBase.textProperty:()Ljavafx/beans/property/StringProperty;
      55: aload_0
      56: getfield      #31                 // Field weakColumnTextListener:Ljavafx/beans/WeakInvalidationListener;
      59: invokevirtual #191                // Method javafx/beans/property/StringProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
      62: aload_2
      63: aload_1
      64: invokevirtual #175                // Method javafx/scene/control/TableColumnBase.visibleProperty:()Ljavafx/beans/property/BooleanProperty;
      67: invokevirtual #192                // Method javafx/beans/property/BooleanProperty.isBound:()Z
      70: invokevirtual #193                // Method javafx/scene/control/CheckMenuItem.setDisable:(Z)V
      73: aload_2
      74: aload_1
      75: invokevirtual #194                // Method javafx/scene/control/TableColumnBase.isVisible:()Z
      78: invokevirtual #195                // Method javafx/scene/control/CheckMenuItem.setSelected:(Z)V
      81: aload_2
      82: astore_3
      83: aload_2
      84: invokevirtual #174                // Method javafx/scene/control/CheckMenuItem.selectedProperty:()Ljavafx/beans/property/BooleanProperty;
      87: aload_1
      88: aload_3
      89: invokedynamic #196,  0            // InvokeDynamic #7:invalidated:(Ljavafx/scene/control/TableColumnBase;Ljavafx/scene/control/CheckMenuItem;)Ljavafx/beans/InvalidationListener;
      94: invokevirtual #197                // Method javafx/beans/property/BooleanProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
      97: aload_1
      98: invokevirtual #175                // Method javafx/scene/control/TableColumnBase.visibleProperty:()Ljavafx/beans/property/BooleanProperty;
     101: aload_3
     102: aload_1
     103: invokedynamic #198,  0            // InvokeDynamic #8:invalidated:(Ljavafx/scene/control/CheckMenuItem;Ljavafx/scene/control/TableColumnBase;)Ljavafx/beans/InvalidationListener;
     108: invokevirtual #197                // Method javafx/beans/property/BooleanProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
     111: aload_0
     112: getfield      #65                 // Field columnPopupMenu:Ljavafx/scene/control/ContextMenu;
     115: invokevirtual #177                // Method javafx/scene/control/ContextMenu.getItems:()Ljavafx/collections/ObservableList;
     118: aload_2
     119: invokeinterface #76,  2           // InterfaceMethod javafx/collections/ObservableList.add:(Ljava/lang/Object;)Z
     124: pop
     125: return

  private java.lang.String getText(java.lang.String, javafx.scene.control.TableColumnBase);
    Code:
       0: aload_1
       1: astore_3
       2: aload_2
       3: invokevirtual #156                // Method javafx/scene/control/TableColumnBase.getParentColumn:()Ljavafx/scene/control/TableColumnBase;
       6: astore        4
       8: aload         4
      10: ifnull        55
      13: aload_0
      14: aload         4
      16: aload_0
      17: getfield      #40                 // Field tableSkin:Ljavafx/scene/control/skin/TableViewSkinBase;
      20: invokestatic  #66                 // Method javafx/scene/control/skin/TableSkinUtils.getColumns:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/collections/ObservableList;
      23: invokespecial #199                // Method isColumnVisibleInHeader:(Ljavafx/scene/control/TableColumnBase;Ljava/util/List;)Z
      26: ifeq          45
      29: aload         4
      31: invokevirtual #147                // Method javafx/scene/control/TableColumnBase.getText:()Ljava/lang/String;
      34: aload_0
      35: getfield      #5                  // Field MENU_SEPARATOR:Ljava/lang/String;
      38: aload_3
      39: invokedynamic #200,  0            // InvokeDynamic #9:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      44: astore_3
      45: aload         4
      47: invokevirtual #156                // Method javafx/scene/control/TableColumnBase.getParentColumn:()Ljavafx/scene/control/TableColumnBase;
      50: astore        4
      52: goto          8
      55: aload_3
      56: areturn

  private boolean isColumnVisibleInHeader(javafx.scene.control.TableColumnBase, java.util.List);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: iconst_0
       7: istore_3
       8: iload_3
       9: aload_2
      10: invokeinterface #158,  1          // InterfaceMethod java/util/List.size:()I
      15: if_icmpge     79
      18: aload_2
      19: iload_3
      20: invokeinterface #159,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: checkcast     #160                // class javafx/scene/control/TableColumnBase
      28: astore        4
      30: aload_1
      31: aload         4
      33: invokevirtual #201                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      36: ifeq          41
      39: iconst_1
      40: ireturn
      41: aload         4
      43: invokevirtual #179                // Method javafx/scene/control/TableColumnBase.getColumns:()Ljavafx/collections/ObservableList;
      46: invokeinterface #180,  1          // InterfaceMethod javafx/collections/ObservableList.isEmpty:()Z
      51: ifne          73
      54: aload_0
      55: aload_1
      56: aload         4
      58: invokevirtual #179                // Method javafx/scene/control/TableColumnBase.getColumns:()Ljavafx/collections/ObservableList;
      61: invokespecial #199                // Method isColumnVisibleInHeader:(Ljavafx/scene/control/TableColumnBase;Ljava/util/List;)Z
      64: istore        5
      66: iload         5
      68: ifeq          73
      71: iconst_1
      72: ireturn
      73: iinc          3, 1
      76: goto          8
      79: iconst_0
      80: ireturn

  private static void lambda$createMenuItem$8(javafx.scene.control.CheckMenuItem, javafx.scene.control.TableColumnBase, javafx.beans.Observable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #194                // Method javafx/scene/control/TableColumnBase.isVisible:()Z
       5: invokevirtual #195                // Method javafx/scene/control/CheckMenuItem.setSelected:(Z)V
       8: return

  private static void lambda$createMenuItem$7(javafx.scene.control.TableColumnBase, javafx.scene.control.CheckMenuItem, javafx.beans.Observable);
    Code:
       0: aload_0
       1: invokevirtual #175                // Method javafx/scene/control/TableColumnBase.visibleProperty:()Ljavafx/beans/property/BooleanProperty;
       4: invokevirtual #192                // Method javafx/beans/property/BooleanProperty.isBound:()Z
       7: ifeq          11
      10: return
      11: aload_0
      12: aload_1
      13: invokevirtual #202                // Method javafx/scene/control/CheckMenuItem.isSelected:()Z
      16: invokevirtual #203                // Method javafx/scene/control/TableColumnBase.setVisible:(Z)V
      19: return

  private void lambda$new$6(javafx.scene.input.MouseEvent);
    Code:
       0: aload_0
       1: getfield      #65                 // Field columnPopupMenu:Ljavafx/scene/control/ContextMenu;
       4: aload_0
       5: getfield      #92                 // Field cornerRegion:Ljavafx/scene/layout/Pane;
       8: getstatic     #204                // Field javafx/geometry/Side.BOTTOM:Ljavafx/geometry/Side;
      11: dconst_0
      12: dconst_0
      13: invokevirtual #205                // Method javafx/scene/control/ContextMenu.show:(Ljavafx/scene/Node;Ljavafx/geometry/Side;DD)V
      16: aload_1
      17: invokevirtual #206                // Method javafx/scene/input/MouseEvent.consume:()V
      20: return

  private static void lambda$new$5(javafx.scene.control.skin.TableViewSkinBase, javafx.scene.input.MouseEvent);
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method javafx/scene/control/skin/TableViewSkinBase.getSkinnable:()Ljavafx/scene/control/Control;
       4: invokevirtual #207                // Method javafx/scene/control/Control.requestFocus:()V
       7: return

  private void lambda$new$4(javafx.beans.Observable);
    Code:
       0: aload_1
       1: checkcast     #208                // class javafx/beans/property/StringProperty
       4: invokevirtual #209                // Method javafx/beans/property/StringProperty.getBean:()Ljava/lang/Object;
       7: checkcast     #160                // class javafx/scene/control/TableColumnBase
      10: astore_2
      11: aload_0
      12: getfield      #8                  // Field columnMenuItems:Ljava/util/Map;
      15: aload_2
      16: invokeinterface #186,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #171                // class javafx/scene/control/CheckMenuItem
      24: astore_3
      25: aload_3
      26: ifnull        42
      29: aload_3
      30: aload_0
      31: aload_2
      32: invokevirtual #147                // Method javafx/scene/control/TableColumnBase.getText:()Ljava/lang/String;
      35: aload_2
      36: invokespecial #189                // Method getText:(Ljava/lang/String;Ljavafx/scene/control/TableColumnBase;)Ljava/lang/String;
      39: invokevirtual #190                // Method javafx/scene/control/CheckMenuItem.setText:(Ljava/lang/String;)V
      42: return

  private void lambda$new$3(javafx.collections.ListChangeListener$Change);
    Code:
       0: aload_1
       1: invokevirtual #210                // Method javafx/collections/ListChangeListener$Change.next:()Z
       4: ifeq          22
       7: aload_0
       8: aload_1
       9: invokevirtual #211                // Method javafx/collections/ListChangeListener$Change.getAddedSubList:()Ljava/util/List;
      12: aload_1
      13: invokevirtual #212                // Method javafx/collections/ListChangeListener$Change.getRemoved:()Ljava/util/List;
      16: invokespecial #68                 // Method updateTableColumnListeners:(Ljava/util/List;Ljava/util/List;)V
      19: goto          0
      22: return

  private void lambda$new$2(javafx.collections.ListChangeListener$Change);
    Code:
       0: aload_0
       1: invokevirtual #111                // Method getRootHeader:()Ljavafx/scene/control/skin/NestedTableColumnHeader;
       4: invokevirtual #213                // Method javafx/scene/control/skin/NestedTableColumnHeader.setHeadersNeedUpdate:()V
       7: return

  private void lambda$new$1(javafx.beans.Observable);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method updateTableWidth:()V
       4: return

  private void lambda$new$0(javafx.beans.Observable);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method updateTableWidth:()V
       4: return

  static javafx.scene.layout.StackPane access$000(javafx.scene.control.skin.TableHeaderRow);
    Code:
       0: aload_0
       1: getfield      #1                  // Field dragHeader:Ljavafx/scene/layout/StackPane;
       4: areturn
}
