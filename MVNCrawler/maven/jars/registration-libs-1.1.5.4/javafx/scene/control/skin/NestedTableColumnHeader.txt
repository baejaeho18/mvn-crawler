Compiled from "NestedTableColumnHeader.java"
public class javafx.scene.control.skin.NestedTableColumnHeader extends javafx.scene.control.skin.TableColumnHeader {
  static final java.lang.String DEFAULT_STYLE_CLASS;

  private static final int DRAG_RECT_WIDTH;

  private static final java.lang.String TABLE_COLUMN_KEY;

  private static final java.lang.String TABLE_COLUMN_HEADER_KEY;

  private javafx.collections.ObservableList<? extends javafx.scene.control.TableColumnBase> columns;

  private javafx.scene.control.skin.TableColumnHeader label;

  private javafx.collections.ObservableList<javafx.scene.control.skin.TableColumnHeader> columnHeaders;

  private javafx.collections.ObservableList<javafx.scene.control.skin.TableColumnHeader> unmodifiableColumnHeaders;

  private double lastX;

  private double dragAnchorX;

  private java.util.Map<javafx.scene.control.TableColumnBase<?, ?>, javafx.scene.shape.Rectangle> dragRects;

  boolean updateColumns;

  private final javafx.collections.ListChangeListener<javafx.scene.control.TableColumnBase> columnsListener;

  private final javafx.collections.WeakListChangeListener weakColumnsListener;

  private static final javafx.event.EventHandler<javafx.scene.input.MouseEvent> rectMousePressed;

  private static final javafx.event.EventHandler<javafx.scene.input.MouseEvent> rectMouseDragged;

  private static final javafx.event.EventHandler<javafx.scene.input.MouseEvent> rectMouseReleased;

  private static final javafx.event.EventHandler<javafx.scene.input.MouseEvent> rectCursorChangeListener;

  public javafx.scene.control.skin.NestedTableColumnHeader(javafx.scene.control.TableColumnBase);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method javafx/scene/control/skin/TableColumnHeader."<init>":(Ljavafx/scene/control/TableColumnBase;)V
       5: aload_0
       6: dconst_0
       7: putfield      #2                  // Field lastX:D
      10: aload_0
      11: dconst_0
      12: putfield      #3                  // Field dragAnchorX:D
      15: aload_0
      16: new           #4                  // class java/util/WeakHashMap
      19: dup
      20: invokespecial #5                  // Method java/util/WeakHashMap."<init>":()V
      23: putfield      #6                  // Field dragRects:Ljava/util/Map;
      26: aload_0
      27: iconst_1
      28: putfield      #7                  // Field updateColumns:Z
      31: aload_0
      32: aload_0
      33: invokedynamic #8,  0              // InvokeDynamic #0:onChanged:(Ljavafx/scene/control/skin/NestedTableColumnHeader;)Ljavafx/collections/ListChangeListener;
      38: putfield      #9                  // Field columnsListener:Ljavafx/collections/ListChangeListener;
      41: aload_0
      42: new           #10                 // class javafx/collections/WeakListChangeListener
      45: dup
      46: aload_0
      47: getfield      #9                  // Field columnsListener:Ljavafx/collections/ListChangeListener;
      50: invokespecial #11                 // Method javafx/collections/WeakListChangeListener."<init>":(Ljavafx/collections/ListChangeListener;)V
      53: putfield      #12                 // Field weakColumnsListener:Ljavafx/collections/WeakListChangeListener;
      56: aload_0
      57: iconst_0
      58: invokevirtual #13                 // Method setFocusTraversable:(Z)V
      61: aload_0
      62: aload_0
      63: aload_0
      64: invokevirtual #14                 // Method getTableColumn:()Ljavafx/scene/control/TableColumnBase;
      67: invokevirtual #15                 // Method createTableColumnHeader:(Ljavafx/scene/control/TableColumnBase;)Ljavafx/scene/control/skin/TableColumnHeader;
      70: putfield      #16                 // Field label:Ljavafx/scene/control/skin/TableColumnHeader;
      73: aload_0
      74: getfield      #16                 // Field label:Ljavafx/scene/control/skin/TableColumnHeader;
      77: aload_0
      78: invokevirtual #17                 // Method getTableHeaderRow:()Ljavafx/scene/control/skin/TableHeaderRow;
      81: invokevirtual #18                 // Method javafx/scene/control/skin/TableColumnHeader.setTableHeaderRow:(Ljavafx/scene/control/skin/TableHeaderRow;)V
      84: aload_0
      85: getfield      #16                 // Field label:Ljavafx/scene/control/skin/TableColumnHeader;
      88: aload_0
      89: invokevirtual #19                 // Method getParentHeader:()Ljavafx/scene/control/skin/NestedTableColumnHeader;
      92: invokevirtual #20                 // Method javafx/scene/control/skin/TableColumnHeader.setParentHeader:(Ljavafx/scene/control/skin/NestedTableColumnHeader;)V
      95: aload_0
      96: getfield      #16                 // Field label:Ljavafx/scene/control/skin/TableColumnHeader;
      99: aload_0
     100: invokevirtual #21                 // Method javafx/scene/control/skin/TableColumnHeader.setNestedColumnHeader:(Ljavafx/scene/control/skin/NestedTableColumnHeader;)V
     103: aload_0
     104: invokevirtual #14                 // Method getTableColumn:()Ljavafx/scene/control/TableColumnBase;
     107: ifnull        130
     110: aload_0
     111: getfield      #22                 // Field changeListenerHandler:Lcom/sun/javafx/scene/control/LambdaMultiplePropertyChangeListenerHandler;
     114: aload_0
     115: invokevirtual #14                 // Method getTableColumn:()Ljavafx/scene/control/TableColumnBase;
     118: invokevirtual #23                 // Method javafx/scene/control/TableColumnBase.textProperty:()Ljavafx/beans/property/StringProperty;
     121: aload_0
     122: invokedynamic #24,  0             // InvokeDynamic #1:accept:(Ljavafx/scene/control/skin/NestedTableColumnHeader;)Ljava/util/function/Consumer;
     127: invokevirtual #25                 // Method com/sun/javafx/scene/control/LambdaMultiplePropertyChangeListenerHandler.registerChangeListener:(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Consumer;)V
     130: return

  void dispose();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method javafx/scene/control/skin/TableColumnHeader.dispose:()V
       4: aload_0
       5: getfield      #16                 // Field label:Ljavafx/scene/control/skin/TableColumnHeader;
       8: ifnull        18
      11: aload_0
      12: getfield      #16                 // Field label:Ljavafx/scene/control/skin/TableColumnHeader;
      15: invokevirtual #26                 // Method javafx/scene/control/skin/TableColumnHeader.dispose:()V
      18: aload_0
      19: invokevirtual #27                 // Method getColumns:()Ljavafx/collections/ObservableList;
      22: ifnull        38
      25: aload_0
      26: invokevirtual #27                 // Method getColumns:()Ljavafx/collections/ObservableList;
      29: aload_0
      30: getfield      #12                 // Field weakColumnsListener:Ljavafx/collections/WeakListChangeListener;
      33: invokeinterface #28,  2           // InterfaceMethod javafx/collections/ObservableList.removeListener:(Ljavafx/collections/ListChangeListener;)V
      38: iconst_0
      39: istore_1
      40: iload_1
      41: aload_0
      42: invokevirtual #29                 // Method getColumnHeaders:()Ljavafx/collections/ObservableList;
      45: invokeinterface #30,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      50: if_icmpge     77
      53: aload_0
      54: invokevirtual #29                 // Method getColumnHeaders:()Ljavafx/collections/ObservableList;
      57: iload_1
      58: invokeinterface #31,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      63: checkcast     #32                 // class javafx/scene/control/skin/TableColumnHeader
      66: astore_2
      67: aload_2
      68: invokevirtual #26                 // Method javafx/scene/control/skin/TableColumnHeader.dispose:()V
      71: iinc          1, 1
      74: goto          40
      77: aload_0
      78: getfield      #6                  // Field dragRects:Ljava/util/Map;
      81: invokeinterface #33,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      86: invokeinterface #34,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      91: astore_1
      92: aload_1
      93: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      98: ifeq          125
     101: aload_1
     102: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     107: checkcast     #37                 // class javafx/scene/shape/Rectangle
     110: astore_2
     111: aload_2
     112: ifnull        122
     115: aload_2
     116: invokevirtual #38                 // Method javafx/scene/shape/Rectangle.visibleProperty:()Ljavafx/beans/property/BooleanProperty;
     119: invokevirtual #39                 // Method javafx/beans/property/BooleanProperty.unbind:()V
     122: goto          92
     125: aload_0
     126: getfield      #6                  // Field dragRects:Ljava/util/Map;
     129: invokeinterface #40,  1           // InterfaceMethod java/util/Map.clear:()V
     134: aload_0
     135: invokevirtual #41                 // Method getChildren:()Ljavafx/collections/ObservableList;
     138: invokeinterface #42,  1           // InterfaceMethod javafx/collections/ObservableList.clear:()V
     143: aload_0
     144: getfield      #22                 // Field changeListenerHandler:Lcom/sun/javafx/scene/control/LambdaMultiplePropertyChangeListenerHandler;
     147: invokevirtual #43                 // Method com/sun/javafx/scene/control/LambdaMultiplePropertyChangeListenerHandler.dispose:()V
     150: return

  public final javafx.collections.ObservableList<javafx.scene.control.skin.TableColumnHeader> getColumnHeaders();
    Code:
       0: aload_0
       1: getfield      #44                 // Field columnHeaders:Ljavafx/collections/ObservableList;
       4: ifnonnull     25
       7: aload_0
       8: invokestatic  #45                 // Method javafx/collections/FXCollections.observableArrayList:()Ljavafx/collections/ObservableList;
      11: putfield      #44                 // Field columnHeaders:Ljavafx/collections/ObservableList;
      14: aload_0
      15: aload_0
      16: getfield      #44                 // Field columnHeaders:Ljavafx/collections/ObservableList;
      19: invokestatic  #46                 // Method javafx/collections/FXCollections.unmodifiableObservableList:(Ljavafx/collections/ObservableList;)Ljavafx/collections/ObservableList;
      22: putfield      #47                 // Field unmodifiableColumnHeaders:Ljavafx/collections/ObservableList;
      25: aload_0
      26: getfield      #47                 // Field unmodifiableColumnHeaders:Ljavafx/collections/ObservableList;
      29: areturn

  protected void layoutChildren();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method getWidth:()D
       4: aload_0
       5: invokevirtual #49                 // Method snappedLeftInset:()D
       8: dsub
       9: aload_0
      10: invokevirtual #50                 // Method snappedRightInset:()D
      13: dsub
      14: dstore_1
      15: aload_0
      16: invokevirtual #51                 // Method getHeight:()D
      19: aload_0
      20: invokevirtual #52                 // Method snappedTopInset:()D
      23: dsub
      24: aload_0
      25: invokevirtual #53                 // Method snappedBottomInset:()D
      28: dsub
      29: dstore_3
      30: iconst_0
      31: istore        5
      33: aload_0
      34: getfield      #16                 // Field label:Ljavafx/scene/control/skin/TableColumnHeader;
      37: invokevirtual #54                 // Method javafx/scene/control/skin/TableColumnHeader.isVisible:()Z
      40: ifeq          89
      43: aload_0
      44: invokevirtual #14                 // Method getTableColumn:()Ljavafx/scene/control/TableColumnBase;
      47: ifnull        89
      50: aload_0
      51: getfield      #16                 // Field label:Ljavafx/scene/control/skin/TableColumnHeader;
      54: ldc2_w        #55                 // double -1.0d
      57: invokevirtual #57                 // Method javafx/scene/control/skin/TableColumnHeader.prefHeight:(D)D
      60: d2i
      61: istore        5
      63: aload_0
      64: getfield      #16                 // Field label:Ljavafx/scene/control/skin/TableColumnHeader;
      67: dload_1
      68: iload         5
      70: i2d
      71: invokevirtual #58                 // Method javafx/scene/control/skin/TableColumnHeader.resize:(DD)V
      74: aload_0
      75: getfield      #16                 // Field label:Ljavafx/scene/control/skin/TableColumnHeader;
      78: aload_0
      79: invokevirtual #49                 // Method snappedLeftInset:()D
      82: aload_0
      83: invokevirtual #52                 // Method snappedTopInset:()D
      86: invokevirtual #59                 // Method javafx/scene/control/skin/TableColumnHeader.relocate:(DD)V
      89: aload_0
      90: invokevirtual #49                 // Method snappedLeftInset:()D
      93: dstore        6
      95: aload_0
      96: dload_3
      97: iload         5
      99: i2d
     100: dsub
     101: invokevirtual #60                 // Method snapSizeY:(D)D
     104: dstore        8
     106: iconst_0
     107: istore        10
     109: aload_0
     110: invokevirtual #29                 // Method getColumnHeaders:()Ljavafx/collections/ObservableList;
     113: invokeinterface #30,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
     118: istore        11
     120: iload         10
     122: iload         11
     124: if_icmpge     253
     127: aload_0
     128: invokevirtual #29                 // Method getColumnHeaders:()Ljavafx/collections/ObservableList;
     131: iload         10
     133: invokeinterface #31,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
     138: checkcast     #32                 // class javafx/scene/control/skin/TableColumnHeader
     141: astore        12
     143: aload         12
     145: invokevirtual #54                 // Method javafx/scene/control/skin/TableColumnHeader.isVisible:()Z
     148: ifne          154
     151: goto          247
     154: aload         12
     156: dload         8
     158: invokevirtual #61                 // Method javafx/scene/control/skin/TableColumnHeader.prefWidth:(D)D
     161: dstore        13
     163: aload         12
     165: dload         13
     167: dload         8
     169: invokevirtual #58                 // Method javafx/scene/control/skin/TableColumnHeader.resize:(DD)V
     172: aload         12
     174: dload         6
     176: iload         5
     178: i2d
     179: aload_0
     180: invokevirtual #52                 // Method snappedTopInset:()D
     183: dadd
     184: invokevirtual #59                 // Method javafx/scene/control/skin/TableColumnHeader.relocate:(DD)V
     187: dload         6
     189: dload         13
     191: dadd
     192: dstore        6
     194: aload_0
     195: getfield      #6                  // Field dragRects:Ljava/util/Map;
     198: aload         12
     200: invokevirtual #62                 // Method javafx/scene/control/skin/TableColumnHeader.getTableColumn:()Ljavafx/scene/control/TableColumnBase;
     203: invokeinterface #63,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     208: checkcast     #37                 // class javafx/scene/shape/Rectangle
     211: astore        15
     213: aload         15
     215: ifnull        247
     218: aload         15
     220: aload         12
     222: invokevirtual #64                 // Method javafx/scene/control/skin/TableColumnHeader.getDragRectHeight:()D
     225: invokevirtual #65                 // Method javafx/scene/shape/Rectangle.setHeight:(D)V
     228: aload         15
     230: dload         6
     232: ldc2_w        #67                 // double 2.0d
     235: dsub
     236: aload_0
     237: invokevirtual #52                 // Method snappedTopInset:()D
     240: iload         5
     242: i2d
     243: dadd
     244: invokevirtual #69                 // Method javafx/scene/shape/Rectangle.relocate:(DD)V
     247: iinc          10, 1
     250: goto          120
     253: return

  protected double computePrefWidth(double);
    Code:
       0: aload_0
       1: invokespecial #70                 // Method checkState:()V
       4: dconst_0
       5: dstore_3
       6: aload_0
       7: invokevirtual #27                 // Method getColumns:()Ljavafx/collections/ObservableList;
      10: ifnull        66
      13: aload_0
      14: invokevirtual #29                 // Method getColumnHeaders:()Ljavafx/collections/ObservableList;
      17: invokeinterface #71,  1           // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
      22: astore        5
      24: aload         5
      26: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          66
      34: aload         5
      36: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #32                 // class javafx/scene/control/skin/TableColumnHeader
      44: astore        6
      46: aload         6
      48: invokevirtual #54                 // Method javafx/scene/control/skin/TableColumnHeader.isVisible:()Z
      51: ifeq          63
      54: dload_3
      55: aload         6
      57: dload_1
      58: invokevirtual #72                 // Method javafx/scene/control/skin/TableColumnHeader.computePrefWidth:(D)D
      61: dadd
      62: dstore_3
      63: goto          24
      66: dload_3
      67: dreturn

  protected double computePrefHeight(double);
    Code:
       0: aload_0
       1: invokespecial #70                 // Method checkState:()V
       4: dconst_0
       5: dstore_3
       6: aload_0
       7: invokevirtual #29                 // Method getColumnHeaders:()Ljavafx/collections/ObservableList;
      10: ifnull        62
      13: aload_0
      14: invokevirtual #29                 // Method getColumnHeaders:()Ljavafx/collections/ObservableList;
      17: invokeinterface #71,  1           // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
      22: astore        5
      24: aload         5
      26: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          62
      34: aload         5
      36: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #32                 // class javafx/scene/control/skin/TableColumnHeader
      44: astore        6
      46: dload_3
      47: aload         6
      49: ldc2_w        #55                 // double -1.0d
      52: invokevirtual #57                 // Method javafx/scene/control/skin/TableColumnHeader.prefHeight:(D)D
      55: invokestatic  #73                 // Method java/lang/Math.max:(DD)D
      58: dstore_3
      59: goto          24
      62: dconst_0
      63: dstore        5
      65: aload_0
      66: getfield      #16                 // Field label:Ljavafx/scene/control/skin/TableColumnHeader;
      69: invokevirtual #54                 // Method javafx/scene/control/skin/TableColumnHeader.isVisible:()Z
      72: ifeq          94
      75: aload_0
      76: invokevirtual #14                 // Method getTableColumn:()Ljavafx/scene/control/TableColumnBase;
      79: ifnull        94
      82: aload_0
      83: getfield      #16                 // Field label:Ljavafx/scene/control/skin/TableColumnHeader;
      86: ldc2_w        #55                 // double -1.0d
      89: invokevirtual #57                 // Method javafx/scene/control/skin/TableColumnHeader.prefHeight:(D)D
      92: dstore        5
      94: dload_3
      95: dload         5
      97: dadd
      98: aload_0
      99: invokevirtual #52                 // Method snappedTopInset:()D
     102: dadd
     103: aload_0
     104: invokevirtual #53                 // Method snappedBottomInset:()D
     107: dadd
     108: dreturn

  protected javafx.scene.control.skin.TableColumnHeader createTableColumnHeader(javafx.scene.control.TableColumnBase);
    Code:
       0: aload_1
       1: ifnull        24
       4: aload_1
       5: invokevirtual #74                 // Method javafx/scene/control/TableColumnBase.getColumns:()Ljavafx/collections/ObservableList;
       8: invokeinterface #75,  1           // InterfaceMethod javafx/collections/ObservableList.isEmpty:()Z
      13: ifne          24
      16: aload_1
      17: aload_0
      18: invokevirtual #14                 // Method getTableColumn:()Ljavafx/scene/control/TableColumnBase;
      21: if_acmpne     35
      24: new           #32                 // class javafx/scene/control/skin/TableColumnHeader
      27: dup
      28: aload_1
      29: invokespecial #1                  // Method javafx/scene/control/skin/TableColumnHeader."<init>":(Ljavafx/scene/control/TableColumnBase;)V
      32: goto          43
      35: new           #66                 // class javafx/scene/control/skin/NestedTableColumnHeader
      38: dup
      39: aload_1
      40: invokespecial #76                 // Method "<init>":(Ljavafx/scene/control/TableColumnBase;)V
      43: areturn

  void initStyleClasses();
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method getStyleClass:()Ljavafx/collections/ObservableList;
       4: iconst_1
       5: anewarray     #78                 // class java/lang/String
       8: dup
       9: iconst_0
      10: ldc           #79                 // String nested-column-header
      12: aastore
      13: invokeinterface #80,  2           // InterfaceMethod javafx/collections/ObservableList.setAll:([Ljava/lang/Object;)Z
      18: pop
      19: aload_0
      20: invokevirtual #81                 // Method installTableColumnStyleClassListener:()V
      23: return

  void setTableHeaderRow(javafx.scene.control.skin.TableHeaderRow);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #18                 // Method javafx/scene/control/skin/TableColumnHeader.setTableHeaderRow:(Ljavafx/scene/control/skin/TableHeaderRow;)V
       5: aload_0
       6: invokevirtual #82                 // Method getTableSkin:()Ljavafx/scene/control/skin/TableViewSkinBase;
       9: ifnull        32
      12: aload_0
      13: getfield      #22                 // Field changeListenerHandler:Lcom/sun/javafx/scene/control/LambdaMultiplePropertyChangeListenerHandler;
      16: aload_0
      17: invokevirtual #82                 // Method getTableSkin:()Ljavafx/scene/control/skin/TableViewSkinBase;
      20: invokestatic  #83                 // Method javafx/scene/control/skin/TableSkinUtils.columnResizePolicyProperty:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/beans/property/ObjectProperty;
      23: aload_0
      24: invokedynamic #84,  0             // InvokeDynamic #2:accept:(Ljavafx/scene/control/skin/NestedTableColumnHeader;)Ljava/util/function/Consumer;
      29: invokevirtual #25                 // Method com/sun/javafx/scene/control/LambdaMultiplePropertyChangeListenerHandler.registerChangeListener:(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Consumer;)V
      32: aload_0
      33: getfield      #16                 // Field label:Ljavafx/scene/control/skin/TableColumnHeader;
      36: aload_1
      37: invokevirtual #18                 // Method javafx/scene/control/skin/TableColumnHeader.setTableHeaderRow:(Ljavafx/scene/control/skin/TableHeaderRow;)V
      40: aload_0
      41: invokevirtual #29                 // Method getColumnHeaders:()Ljavafx/collections/ObservableList;
      44: invokeinterface #71,  1           // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
      49: astore_2
      50: aload_2
      51: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      56: ifeq          77
      59: aload_2
      60: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      65: checkcast     #32                 // class javafx/scene/control/skin/TableColumnHeader
      68: astore_3
      69: aload_3
      70: aload_1
      71: invokevirtual #18                 // Method javafx/scene/control/skin/TableColumnHeader.setTableHeaderRow:(Ljavafx/scene/control/skin/TableHeaderRow;)V
      74: goto          50
      77: return

  void setParentHeader(javafx.scene.control.skin.NestedTableColumnHeader);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method javafx/scene/control/skin/TableColumnHeader.setParentHeader:(Ljavafx/scene/control/skin/NestedTableColumnHeader;)V
       5: aload_0
       6: getfield      #16                 // Field label:Ljavafx/scene/control/skin/TableColumnHeader;
       9: aload_1
      10: invokevirtual #20                 // Method javafx/scene/control/skin/TableColumnHeader.setParentHeader:(Ljavafx/scene/control/skin/NestedTableColumnHeader;)V
      13: return

  javafx.collections.ObservableList<? extends javafx.scene.control.TableColumnBase> getColumns();
    Code:
       0: aload_0
       1: getfield      #85                 // Field columns:Ljavafx/collections/ObservableList;
       4: areturn

  void setColumns(javafx.collections.ObservableList<? extends javafx.scene.control.TableColumnBase>);
    Code:
       0: aload_0
       1: getfield      #85                 // Field columns:Ljavafx/collections/ObservableList;
       4: ifnull        20
       7: aload_0
       8: getfield      #85                 // Field columns:Ljavafx/collections/ObservableList;
      11: aload_0
      12: getfield      #12                 // Field weakColumnsListener:Ljavafx/collections/WeakListChangeListener;
      15: invokeinterface #28,  2           // InterfaceMethod javafx/collections/ObservableList.removeListener:(Ljavafx/collections/ListChangeListener;)V
      20: aload_0
      21: aload_1
      22: putfield      #85                 // Field columns:Ljavafx/collections/ObservableList;
      25: aload_0
      26: getfield      #85                 // Field columns:Ljavafx/collections/ObservableList;
      29: ifnull        45
      32: aload_0
      33: getfield      #85                 // Field columns:Ljavafx/collections/ObservableList;
      36: aload_0
      37: getfield      #12                 // Field weakColumnsListener:Ljavafx/collections/WeakListChangeListener;
      40: invokeinterface #86,  2           // InterfaceMethod javafx/collections/ObservableList.addListener:(Ljavafx/collections/ListChangeListener;)V
      45: return

  void updateTableColumnHeaders();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getTableColumn:()Ljavafx/scene/control/TableColumnBase;
       4: ifnonnull     28
       7: aload_0
       8: invokevirtual #82                 // Method getTableSkin:()Ljavafx/scene/control/skin/TableViewSkinBase;
      11: ifnull        28
      14: aload_0
      15: aload_0
      16: invokevirtual #82                 // Method getTableSkin:()Ljavafx/scene/control/skin/TableViewSkinBase;
      19: invokestatic  #87                 // Method javafx/scene/control/skin/TableSkinUtils.getColumns:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/collections/ObservableList;
      22: invokevirtual #88                 // Method setColumns:(Ljavafx/collections/ObservableList;)V
      25: goto          46
      28: aload_0
      29: invokevirtual #14                 // Method getTableColumn:()Ljavafx/scene/control/TableColumnBase;
      32: ifnull        46
      35: aload_0
      36: aload_0
      37: invokevirtual #14                 // Method getTableColumn:()Ljavafx/scene/control/TableColumnBase;
      40: invokevirtual #74                 // Method javafx/scene/control/TableColumnBase.getColumns:()Ljavafx/collections/ObservableList;
      43: invokevirtual #88                 // Method setColumns:(Ljavafx/collections/ObservableList;)V
      46: aload_0
      47: invokevirtual #27                 // Method getColumns:()Ljavafx/collections/ObservableList;
      50: invokeinterface #75,  1           // InterfaceMethod javafx/collections/ObservableList.isEmpty:()Z
      55: ifeq          164
      58: iconst_0
      59: istore_1
      60: iload_1
      61: aload_0
      62: invokevirtual #29                 // Method getColumnHeaders:()Ljavafx/collections/ObservableList;
      65: invokeinterface #30,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      70: if_icmpge     97
      73: aload_0
      74: invokevirtual #29                 // Method getColumnHeaders:()Ljavafx/collections/ObservableList;
      77: iload_1
      78: invokeinterface #31,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      83: checkcast     #32                 // class javafx/scene/control/skin/TableColumnHeader
      86: astore_2
      87: aload_2
      88: invokevirtual #26                 // Method javafx/scene/control/skin/TableColumnHeader.dispose:()V
      91: iinc          1, 1
      94: goto          60
      97: aload_0
      98: invokevirtual #19                 // Method getParentHeader:()Ljavafx/scene/control/skin/NestedTableColumnHeader;
     101: astore_1
     102: aload_1
     103: ifnull        152
     106: aload_1
     107: invokevirtual #29                 // Method getColumnHeaders:()Ljavafx/collections/ObservableList;
     110: astore_2
     111: aload_2
     112: aload_0
     113: invokeinterface #89,  2           // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
     118: istore_3
     119: iload_3
     120: iflt          149
     123: iload_3
     124: aload_2
     125: invokeinterface #90,  1           // InterfaceMethod java/util/List.size:()I
     130: if_icmpge     149
     133: aload_2
     134: iload_3
     135: aload_0
     136: aload_0
     137: invokevirtual #14                 // Method getTableColumn:()Ljavafx/scene/control/TableColumnBase;
     140: invokespecial #91                 // Method createColumnHeader:(Ljavafx/scene/control/TableColumnBase;)Ljavafx/scene/control/skin/TableColumnHeader;
     143: invokeinterface #92,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     148: pop
     149: goto          161
     152: aload_0
     153: getfield      #44                 // Field columnHeaders:Ljavafx/collections/ObservableList;
     156: invokeinterface #42,  1           // InterfaceMethod javafx/collections/ObservableList.clear:()V
     161: goto          365
     164: new           #93                 // class java/util/ArrayList
     167: dup
     168: aload_0
     169: invokevirtual #29                 // Method getColumnHeaders:()Ljavafx/collections/ObservableList;
     172: invokespecial #94                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     175: astore_1
     176: new           #93                 // class java/util/ArrayList
     179: dup
     180: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
     183: astore_2
     184: iconst_0
     185: istore_3
     186: iload_3
     187: aload_0
     188: invokevirtual #27                 // Method getColumns:()Ljavafx/collections/ObservableList;
     191: invokeinterface #30,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
     196: if_icmpge     315
     199: aload_0
     200: invokevirtual #27                 // Method getColumns:()Ljavafx/collections/ObservableList;
     203: iload_3
     204: invokeinterface #31,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
     209: checkcast     #96                 // class javafx/scene/control/TableColumnBase
     212: astore        4
     214: aload         4
     216: ifnull        309
     219: aload         4
     221: invokevirtual #97                 // Method javafx/scene/control/TableColumnBase.isVisible:()Z
     224: ifne          230
     227: goto          309
     230: iconst_0
     231: istore        5
     233: iconst_0
     234: istore        6
     236: iload         6
     238: aload_1
     239: invokeinterface #90,  1           // InterfaceMethod java/util/List.size:()I
     244: if_icmpge     291
     247: aload_1
     248: iload         6
     250: invokeinterface #98,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     255: checkcast     #32                 // class javafx/scene/control/skin/TableColumnHeader
     258: astore        7
     260: aload         7
     262: aload         4
     264: invokevirtual #99                 // Method javafx/scene/control/skin/TableColumnHeader.represents:(Ljavafx/scene/control/TableColumnBase;)Z
     267: ifeq          285
     270: aload_2
     271: aload         7
     273: invokeinterface #100,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     278: pop
     279: iconst_1
     280: istore        5
     282: goto          291
     285: iinc          6, 1
     288: goto          236
     291: iload         5
     293: ifne          309
     296: aload_2
     297: aload_0
     298: aload         4
     300: invokespecial #91                 // Method createColumnHeader:(Ljavafx/scene/control/TableColumnBase;)Ljavafx/scene/control/skin/TableColumnHeader;
     303: invokeinterface #100,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     308: pop
     309: iinc          3, 1
     312: goto          186
     315: aload_0
     316: getfield      #44                 // Field columnHeaders:Ljavafx/collections/ObservableList;
     319: aload_2
     320: invokeinterface #101,  2          // InterfaceMethod javafx/collections/ObservableList.setAll:(Ljava/util/Collection;)Z
     325: pop
     326: aload_1
     327: aload_2
     328: invokeinterface #102,  2          // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
     333: pop
     334: iconst_0
     335: istore_3
     336: iload_3
     337: aload_1
     338: invokeinterface #90,  1           // InterfaceMethod java/util/List.size:()I
     343: if_icmpge     365
     346: aload_1
     347: iload_3
     348: invokeinterface #98,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     353: checkcast     #32                 // class javafx/scene/control/skin/TableColumnHeader
     356: invokevirtual #26                 // Method javafx/scene/control/skin/TableColumnHeader.dispose:()V
     359: iinc          3, 1
     362: goto          336
     365: aload_0
     366: invokespecial #103                // Method updateContent:()V
     369: aload_0
     370: invokevirtual #29                 // Method getColumnHeaders:()Ljavafx/collections/ObservableList;
     373: invokeinterface #71,  1           // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
     378: astore_1
     379: aload_1
     380: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     385: ifeq          405
     388: aload_1
     389: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     394: checkcast     #32                 // class javafx/scene/control/skin/TableColumnHeader
     397: astore_2
     398: aload_2
     399: invokevirtual #104                // Method javafx/scene/control/skin/TableColumnHeader.applyCss:()V
     402: goto          379
     405: return

  boolean represents(javafx.scene.control.TableColumnBase<?, ?>);
    Code:
       0: aload_1
       1: invokevirtual #74                 // Method javafx/scene/control/TableColumnBase.getColumns:()Ljavafx/collections/ObservableList;
       4: invokeinterface #75,  1           // InterfaceMethod javafx/collections/ObservableList.isEmpty:()Z
       9: ifeq          14
      12: iconst_0
      13: ireturn
      14: aload_1
      15: aload_0
      16: invokevirtual #14                 // Method getTableColumn:()Ljavafx/scene/control/TableColumnBase;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: invokevirtual #74                 // Method javafx/scene/control/TableColumnBase.getColumns:()Ljavafx/collections/ObservableList;
      28: invokeinterface #30,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      33: istore_2
      34: aload_0
      35: invokevirtual #29                 // Method getColumnHeaders:()Ljavafx/collections/ObservableList;
      38: invokeinterface #30,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      43: istore_3
      44: iload_2
      45: iload_3
      46: if_icmpeq     51
      49: iconst_0
      50: ireturn
      51: iconst_0
      52: istore        4
      54: iload         4
      56: iload_2
      57: if_icmpge     110
      60: aload_1
      61: invokevirtual #74                 // Method javafx/scene/control/TableColumnBase.getColumns:()Ljavafx/collections/ObservableList;
      64: iload         4
      66: invokeinterface #31,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      71: checkcast     #96                 // class javafx/scene/control/TableColumnBase
      74: astore        5
      76: aload_0
      77: invokevirtual #29                 // Method getColumnHeaders:()Ljavafx/collections/ObservableList;
      80: iload         4
      82: invokeinterface #31,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      87: checkcast     #32                 // class javafx/scene/control/skin/TableColumnHeader
      90: astore        6
      92: aload         6
      94: aload         5
      96: invokevirtual #99                 // Method javafx/scene/control/skin/TableColumnHeader.represents:(Ljavafx/scene/control/TableColumnBase;)Z
      99: ifne          104
     102: iconst_0
     103: ireturn
     104: iinc          4, 1
     107: goto          54
     110: iconst_1
     111: ireturn

  double getDragRectHeight();
    Code:
       0: aload_0
       1: getfield      #16                 // Field label:Ljavafx/scene/control/skin/TableColumnHeader;
       4: ldc2_w        #55                 // double -1.0d
       7: invokevirtual #57                 // Method javafx/scene/control/skin/TableColumnHeader.prefHeight:(D)D
      10: dreturn

  void setHeadersNeedUpdate();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #7                  // Field updateColumns:Z
       5: iconst_0
       6: istore_1
       7: iload_1
       8: aload_0
       9: invokevirtual #29                 // Method getColumnHeaders:()Ljavafx/collections/ObservableList;
      12: invokeinterface #30,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      17: if_icmpge     54
      20: aload_0
      21: invokevirtual #29                 // Method getColumnHeaders:()Ljavafx/collections/ObservableList;
      24: iload_1
      25: invokeinterface #31,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      30: checkcast     #32                 // class javafx/scene/control/skin/TableColumnHeader
      33: astore_2
      34: aload_2
      35: instanceof    #66                 // class javafx/scene/control/skin/NestedTableColumnHeader
      38: ifeq          48
      41: aload_2
      42: checkcast     #66                 // class javafx/scene/control/skin/NestedTableColumnHeader
      45: invokevirtual #105                // Method setHeadersNeedUpdate:()V
      48: iinc          1, 1
      51: goto          7
      54: aload_0
      55: invokevirtual #106                // Method requestLayout:()V
      58: return

  private void updateContent();
    Code:
       0: new           #93                 // class java/util/ArrayList
       3: dup
       4: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #16                 // Field label:Ljavafx/scene/control/skin/TableColumnHeader;
      13: invokeinterface #100,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      18: pop
      19: aload_1
      20: aload_0
      21: invokevirtual #29                 // Method getColumnHeaders:()Ljavafx/collections/ObservableList;
      24: invokeinterface #107,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      29: pop
      30: aload_0
      31: invokespecial #108                // Method isColumnResizingEnabled:()Z
      34: ifeq          57
      37: aload_0
      38: invokespecial #109                // Method rebuildDragRects:()V
      41: aload_1
      42: aload_0
      43: getfield      #6                  // Field dragRects:Ljava/util/Map;
      46: invokeinterface #33,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      51: invokeinterface #107,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      56: pop
      57: aload_0
      58: invokevirtual #41                 // Method getChildren:()Ljavafx/collections/ObservableList;
      61: aload_1
      62: invokeinterface #101,  2          // InterfaceMethod javafx/collections/ObservableList.setAll:(Ljava/util/Collection;)Z
      67: pop
      68: return

  private void rebuildDragRects();
    Code:
       0: aload_0
       1: invokespecial #108                // Method isColumnResizingEnabled:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokevirtual #41                 // Method getChildren:()Ljavafx/collections/ObservableList;
      12: aload_0
      13: getfield      #6                  // Field dragRects:Ljava/util/Map;
      16: invokeinterface #33,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      21: invokeinterface #110,  2          // InterfaceMethod javafx/collections/ObservableList.removeAll:(Ljava/util/Collection;)Z
      26: pop
      27: aload_0
      28: getfield      #6                  // Field dragRects:Ljava/util/Map;
      31: invokeinterface #33,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      36: invokeinterface #34,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      41: astore_1
      42: aload_1
      43: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          71
      51: aload_1
      52: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #37                 // class javafx/scene/shape/Rectangle
      60: astore_2
      61: aload_2
      62: invokevirtual #38                 // Method javafx/scene/shape/Rectangle.visibleProperty:()Ljavafx/beans/property/BooleanProperty;
      65: invokevirtual #39                 // Method javafx/beans/property/BooleanProperty.unbind:()V
      68: goto          42
      71: aload_0
      72: getfield      #6                  // Field dragRects:Ljava/util/Map;
      75: invokeinterface #40,  1           // InterfaceMethod java/util/Map.clear:()V
      80: aload_0
      81: invokevirtual #27                 // Method getColumns:()Ljavafx/collections/ObservableList;
      84: astore_1
      85: aload_1
      86: ifnonnull     90
      89: return
      90: iconst_0
      91: istore_2
      92: aload_0
      93: invokevirtual #82                 // Method getTableSkin:()Ljavafx/scene/control/skin/TableViewSkinBase;
      96: astore_3
      97: aload_3
      98: invokestatic  #83                 // Method javafx/scene/control/skin/TableSkinUtils.columnResizePolicyProperty:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/beans/property/ObjectProperty;
     101: invokevirtual #111                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
     104: checkcast     #112                // class javafx/util/Callback
     107: astore        4
     109: aload         4
     111: ifnull        152
     114: aload_3
     115: instanceof    #113                // class javafx/scene/control/skin/TableViewSkin
     118: ifeq          132
     121: getstatic     #114                // Field javafx/scene/control/TableView.CONSTRAINED_RESIZE_POLICY:Ljavafx/util/Callback;
     124: aload         4
     126: invokevirtual #115                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     129: goto          151
     132: aload_3
     133: instanceof    #116                // class javafx/scene/control/skin/TreeTableViewSkin
     136: ifeq          150
     139: getstatic     #117                // Field javafx/scene/control/TreeTableView.CONSTRAINED_RESIZE_POLICY:Ljavafx/util/Callback;
     142: aload         4
     144: invokevirtual #115                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     147: goto          151
     150: iconst_0
     151: istore_2
     152: iload_2
     153: ifeq          170
     156: aload_3
     157: invokestatic  #118                // Method javafx/scene/control/skin/TableSkinUtils.getVisibleLeafColumns:(Ljavafx/scene/control/skin/TableViewSkinBase;)Ljavafx/collections/ObservableList;
     160: invokeinterface #30,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
     165: iconst_1
     166: if_icmpne     170
     169: return
     170: iconst_0
     171: istore        5
     173: iload         5
     175: aload_1
     176: invokeinterface #90,  1           // InterfaceMethod java/util/List.size:()I
     181: if_icmpge     372
     184: iload_2
     185: ifeq          207
     188: iload         5
     190: aload_0
     191: invokevirtual #27                 // Method getColumns:()Ljavafx/collections/ObservableList;
     194: invokeinterface #30,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
     199: iconst_1
     200: isub
     201: if_icmpne     207
     204: goto          372
     207: aload_1
     208: iload         5
     210: invokeinterface #98,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     215: checkcast     #96                 // class javafx/scene/control/TableColumnBase
     218: astore        6
     220: new           #37                 // class javafx/scene/shape/Rectangle
     223: dup
     224: invokespecial #119                // Method javafx/scene/shape/Rectangle."<init>":()V
     227: astore        7
     229: aload         7
     231: invokevirtual #120                // Method javafx/scene/shape/Rectangle.getProperties:()Ljavafx/collections/ObservableMap;
     234: ldc           #121                // String TableColumn
     236: aload         6
     238: invokeinterface #122,  3          // InterfaceMethod javafx/collections/ObservableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     243: pop
     244: aload         7
     246: invokevirtual #120                // Method javafx/scene/shape/Rectangle.getProperties:()Ljavafx/collections/ObservableMap;
     249: ldc           #123                // String TableColumnHeader
     251: aload_0
     252: invokeinterface #122,  3          // InterfaceMethod javafx/collections/ObservableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     257: pop
     258: aload         7
     260: ldc2_w        #124                // double 4.0d
     263: invokevirtual #126                // Method javafx/scene/shape/Rectangle.setWidth:(D)V
     266: aload         7
     268: aload_0
     269: invokevirtual #51                 // Method getHeight:()D
     272: aload_0
     273: getfield      #16                 // Field label:Ljavafx/scene/control/skin/TableColumnHeader;
     276: invokevirtual #127                // Method javafx/scene/control/skin/TableColumnHeader.getHeight:()D
     279: dsub
     280: invokevirtual #65                 // Method javafx/scene/shape/Rectangle.setHeight:(D)V
     283: aload         7
     285: getstatic     #128                // Field javafx/scene/paint/Color.TRANSPARENT:Ljavafx/scene/paint/Color;
     288: invokevirtual #129                // Method javafx/scene/shape/Rectangle.setFill:(Ljavafx/scene/paint/Paint;)V
     291: aload         7
     293: invokevirtual #38                 // Method javafx/scene/shape/Rectangle.visibleProperty:()Ljavafx/beans/property/BooleanProperty;
     296: aload         6
     298: invokevirtual #130                // Method javafx/scene/control/TableColumnBase.visibleProperty:()Ljavafx/beans/property/BooleanProperty;
     301: aload         6
     303: invokevirtual #131                // Method javafx/scene/control/TableColumnBase.resizableProperty:()Ljavafx/beans/property/BooleanProperty;
     306: invokevirtual #132                // Method javafx/beans/property/BooleanProperty.and:(Ljavafx/beans/value/ObservableBooleanValue;)Ljavafx/beans/binding/BooleanBinding;
     309: invokevirtual #133                // Method javafx/beans/property/BooleanProperty.bind:(Ljavafx/beans/value/ObservableValue;)V
     312: aload         7
     314: getstatic     #134                // Field rectMousePressed:Ljavafx/event/EventHandler;
     317: invokevirtual #135                // Method javafx/scene/shape/Rectangle.setOnMousePressed:(Ljavafx/event/EventHandler;)V
     320: aload         7
     322: getstatic     #136                // Field rectMouseDragged:Ljavafx/event/EventHandler;
     325: invokevirtual #137                // Method javafx/scene/shape/Rectangle.setOnMouseDragged:(Ljavafx/event/EventHandler;)V
     328: aload         7
     330: getstatic     #138                // Field rectMouseReleased:Ljavafx/event/EventHandler;
     333: invokevirtual #139                // Method javafx/scene/shape/Rectangle.setOnMouseReleased:(Ljavafx/event/EventHandler;)V
     336: aload         7
     338: getstatic     #140                // Field rectCursorChangeListener:Ljavafx/event/EventHandler;
     341: invokevirtual #141                // Method javafx/scene/shape/Rectangle.setOnMouseEntered:(Ljavafx/event/EventHandler;)V
     344: aload         7
     346: getstatic     #140                // Field rectCursorChangeListener:Ljavafx/event/EventHandler;
     349: invokevirtual #142                // Method javafx/scene/shape/Rectangle.setOnMouseExited:(Ljavafx/event/EventHandler;)V
     352: aload_0
     353: getfield      #6                  // Field dragRects:Ljava/util/Map;
     356: aload         6
     358: aload         7
     360: invokeinterface #143,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     365: pop
     366: iinc          5, 1
     369: goto          173
     372: return

  private void checkState();
    Code:
       0: aload_0
       1: getfield      #7                  // Field updateColumns:Z
       4: ifeq          16
       7: aload_0
       8: invokevirtual #144                // Method updateTableColumnHeaders:()V
      11: aload_0
      12: iconst_0
      13: putfield      #7                  // Field updateColumns:Z
      16: return

  private javafx.scene.control.skin.TableColumnHeader createColumnHeader(javafx.scene.control.TableColumnBase);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method createTableColumnHeader:(Ljavafx/scene/control/TableColumnBase;)Ljavafx/scene/control/skin/TableColumnHeader;
       5: astore_2
       6: aload_2
       7: aload_0
       8: invokevirtual #17                 // Method getTableHeaderRow:()Ljavafx/scene/control/skin/TableHeaderRow;
      11: invokevirtual #18                 // Method javafx/scene/control/skin/TableColumnHeader.setTableHeaderRow:(Ljavafx/scene/control/skin/TableHeaderRow;)V
      14: aload_2
      15: aload_0
      16: invokevirtual #20                 // Method javafx/scene/control/skin/TableColumnHeader.setParentHeader:(Ljavafx/scene/control/skin/NestedTableColumnHeader;)V
      19: aload_2
      20: areturn

  private boolean isColumnResizingEnabled();
    Code:
       0: iconst_1
       1: ireturn

  private void columnResizingStarted(double);
    Code:
       0: aload_0
       1: getstatic     #145                // Field javafx/scene/Cursor.H_RESIZE:Ljavafx/scene/Cursor;
       4: invokevirtual #146                // Method setCursor:(Ljavafx/scene/Cursor;)V
       7: aload_0
       8: getfield      #147                // Field columnReorderLine:Ljavafx/scene/layout/Region;
      11: dload_1
      12: invokevirtual #148                // Method javafx/scene/layout/Region.setLayoutX:(D)V
      15: return

  private void columnResizing(javafx.scene.control.TableColumnBase, javafx.scene.input.MouseEvent);
    Code:
       0: aload_2
       1: invokevirtual #149                // Method javafx/scene/input/MouseEvent.getSceneX:()D
       4: aload_0
       5: getfield      #3                  // Field dragAnchorX:D
       8: dsub
       9: dstore_3
      10: aload_0
      11: invokevirtual #150                // Method getEffectiveNodeOrientation:()Ljavafx/geometry/NodeOrientation;
      14: getstatic     #151                // Field javafx/geometry/NodeOrientation.RIGHT_TO_LEFT:Ljavafx/geometry/NodeOrientation;
      17: if_acmpne     23
      20: dload_3
      21: dneg
      22: dstore_3
      23: dload_3
      24: aload_0
      25: getfield      #2                  // Field lastX:D
      28: dsub
      29: dstore        5
      31: aload_0
      32: invokevirtual #82                 // Method getTableSkin:()Ljavafx/scene/control/skin/TableViewSkinBase;
      35: aload_1
      36: dload         5
      38: invokestatic  #152                // Method javafx/scene/control/skin/TableSkinUtils.resizeColumn:(Ljavafx/scene/control/skin/TableViewSkinBase;Ljavafx/scene/control/TableColumnBase;D)Z
      41: istore        7
      43: iload         7
      45: ifeq          53
      48: aload_0
      49: dload_3
      50: putfield      #2                  // Field lastX:D
      53: return

  private void columnResizingComplete(javafx.scene.control.TableColumnBase, javafx.scene.input.MouseEvent);
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #146                // Method setCursor:(Ljavafx/scene/Cursor;)V
       5: aload_0
       6: getfield      #147                // Field columnReorderLine:Ljavafx/scene/layout/Region;
       9: dconst_0
      10: invokevirtual #153                // Method javafx/scene/layout/Region.setTranslateX:(D)V
      13: aload_0
      14: getfield      #147                // Field columnReorderLine:Ljavafx/scene/layout/Region;
      17: dconst_0
      18: invokevirtual #148                // Method javafx/scene/layout/Region.setLayoutX:(D)V
      21: aload_0
      22: dconst_0
      23: putfield      #2                  // Field lastX:D
      26: return

  private void lambda$setTableHeaderRow$6(javafx.beans.value.ObservableValue);
    Code:
       0: aload_0
       1: invokespecial #103                // Method updateContent:()V
       4: return

  private static void lambda$static$5(javafx.scene.input.MouseEvent);
    Code:
       0: aload_0
       1: invokevirtual #154                // Method javafx/scene/input/MouseEvent.getSource:()Ljava/lang/Object;
       4: checkcast     #37                 // class javafx/scene/shape/Rectangle
       7: astore_1
       8: aload_1
       9: invokevirtual #120                // Method javafx/scene/shape/Rectangle.getProperties:()Ljavafx/collections/ObservableMap;
      12: ldc           #121                // String TableColumn
      14: invokeinterface #155,  2          // InterfaceMethod javafx/collections/ObservableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #96                 // class javafx/scene/control/TableColumnBase
      22: astore_2
      23: aload_1
      24: invokevirtual #120                // Method javafx/scene/shape/Rectangle.getProperties:()Ljavafx/collections/ObservableMap;
      27: ldc           #123                // String TableColumnHeader
      29: invokeinterface #155,  2          // InterfaceMethod javafx/collections/ObservableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #66                 // class javafx/scene/control/skin/NestedTableColumnHeader
      37: astore_3
      38: aload_3
      39: invokevirtual #17                 // Method getTableHeaderRow:()Ljavafx/scene/control/skin/TableHeaderRow;
      42: getfield      #156                // Field javafx/scene/control/skin/TableHeaderRow.columnDragLock:Z
      45: ifeq          49
      48: return
      49: aload_3
      50: invokevirtual #157                // Method getCursor:()Ljavafx/scene/Cursor;
      53: ifnonnull     88
      56: aload_1
      57: aload_3
      58: invokespecial #108                // Method isColumnResizingEnabled:()Z
      61: ifeq          84
      64: aload_1
      65: invokevirtual #158                // Method javafx/scene/shape/Rectangle.isHover:()Z
      68: ifeq          84
      71: aload_2
      72: invokevirtual #159                // Method javafx/scene/control/TableColumnBase.isResizable:()Z
      75: ifeq          84
      78: getstatic     #145                // Field javafx/scene/Cursor.H_RESIZE:Ljavafx/scene/Cursor;
      81: goto          85
      84: aconst_null
      85: invokevirtual #160                // Method javafx/scene/shape/Rectangle.setCursor:(Ljavafx/scene/Cursor;)V
      88: return

  private static void lambda$static$4(javafx.scene.input.MouseEvent);
    Code:
       0: aload_0
       1: invokevirtual #154                // Method javafx/scene/input/MouseEvent.getSource:()Ljava/lang/Object;
       4: checkcast     #37                 // class javafx/scene/shape/Rectangle
       7: astore_1
       8: aload_1
       9: invokevirtual #120                // Method javafx/scene/shape/Rectangle.getProperties:()Ljavafx/collections/ObservableMap;
      12: ldc           #121                // String TableColumn
      14: invokeinterface #155,  2          // InterfaceMethod javafx/collections/ObservableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #96                 // class javafx/scene/control/TableColumnBase
      22: astore_2
      23: aload_1
      24: invokevirtual #120                // Method javafx/scene/shape/Rectangle.getProperties:()Ljavafx/collections/ObservableMap;
      27: ldc           #123                // String TableColumnHeader
      29: invokeinterface #155,  2          // InterfaceMethod javafx/collections/ObservableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #66                 // class javafx/scene/control/skin/NestedTableColumnHeader
      37: astore_3
      38: aload_3
      39: invokespecial #108                // Method isColumnResizingEnabled:()Z
      42: ifne          46
      45: return
      46: aload_3
      47: invokevirtual #17                 // Method getTableHeaderRow:()Ljavafx/scene/control/skin/TableHeaderRow;
      50: getfield      #156                // Field javafx/scene/control/skin/TableHeaderRow.columnDragLock:Z
      53: ifeq          57
      56: return
      57: aload_0
      58: invokevirtual #161                // Method javafx/scene/input/MouseEvent.isConsumed:()Z
      61: ifeq          65
      64: return
      65: aload_0
      66: invokevirtual #162                // Method javafx/scene/input/MouseEvent.consume:()V
      69: aload_3
      70: aload_2
      71: aload_0
      72: invokespecial #163                // Method columnResizingComplete:(Ljavafx/scene/control/TableColumnBase;Ljavafx/scene/input/MouseEvent;)V
      75: return

  private static void lambda$static$3(javafx.scene.input.MouseEvent);
    Code:
       0: aload_0
       1: invokevirtual #154                // Method javafx/scene/input/MouseEvent.getSource:()Ljava/lang/Object;
       4: checkcast     #37                 // class javafx/scene/shape/Rectangle
       7: astore_1
       8: aload_1
       9: invokevirtual #120                // Method javafx/scene/shape/Rectangle.getProperties:()Ljavafx/collections/ObservableMap;
      12: ldc           #121                // String TableColumn
      14: invokeinterface #155,  2          // InterfaceMethod javafx/collections/ObservableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #96                 // class javafx/scene/control/TableColumnBase
      22: astore_2
      23: aload_1
      24: invokevirtual #120                // Method javafx/scene/shape/Rectangle.getProperties:()Ljavafx/collections/ObservableMap;
      27: ldc           #123                // String TableColumnHeader
      29: invokeinterface #155,  2          // InterfaceMethod javafx/collections/ObservableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #66                 // class javafx/scene/control/skin/NestedTableColumnHeader
      37: astore_3
      38: aload_3
      39: invokespecial #108                // Method isColumnResizingEnabled:()Z
      42: ifne          46
      45: return
      46: aload_3
      47: invokevirtual #17                 // Method getTableHeaderRow:()Ljavafx/scene/control/skin/TableHeaderRow;
      50: getfield      #156                // Field javafx/scene/control/skin/TableHeaderRow.columnDragLock:Z
      53: ifeq          57
      56: return
      57: aload_0
      58: invokevirtual #161                // Method javafx/scene/input/MouseEvent.isConsumed:()Z
      61: ifeq          65
      64: return
      65: aload_0
      66: invokevirtual #162                // Method javafx/scene/input/MouseEvent.consume:()V
      69: aload_3
      70: aload_2
      71: aload_0
      72: invokespecial #164                // Method columnResizing:(Ljavafx/scene/control/TableColumnBase;Ljavafx/scene/input/MouseEvent;)V
      75: return

  private static void lambda$static$2(javafx.scene.input.MouseEvent);
    Code:
       0: aload_0
       1: invokevirtual #154                // Method javafx/scene/input/MouseEvent.getSource:()Ljava/lang/Object;
       4: checkcast     #37                 // class javafx/scene/shape/Rectangle
       7: astore_1
       8: aload_1
       9: invokevirtual #120                // Method javafx/scene/shape/Rectangle.getProperties:()Ljavafx/collections/ObservableMap;
      12: ldc           #121                // String TableColumn
      14: invokeinterface #155,  2          // InterfaceMethod javafx/collections/ObservableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #96                 // class javafx/scene/control/TableColumnBase
      22: astore_2
      23: aload_1
      24: invokevirtual #120                // Method javafx/scene/shape/Rectangle.getProperties:()Ljavafx/collections/ObservableMap;
      27: ldc           #123                // String TableColumnHeader
      29: invokeinterface #155,  2          // InterfaceMethod javafx/collections/ObservableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #66                 // class javafx/scene/control/skin/NestedTableColumnHeader
      37: astore_3
      38: aload_3
      39: invokespecial #108                // Method isColumnResizingEnabled:()Z
      42: ifne          46
      45: return
      46: aload_3
      47: invokevirtual #17                 // Method getTableHeaderRow:()Ljavafx/scene/control/skin/TableHeaderRow;
      50: getfield      #156                // Field javafx/scene/control/skin/TableHeaderRow.columnDragLock:Z
      53: ifeq          57
      56: return
      57: aload_0
      58: invokevirtual #161                // Method javafx/scene/input/MouseEvent.isConsumed:()Z
      61: ifeq          65
      64: return
      65: aload_0
      66: invokevirtual #162                // Method javafx/scene/input/MouseEvent.consume:()V
      69: aload_0
      70: invokevirtual #165                // Method javafx/scene/input/MouseEvent.getClickCount:()I
      73: iconst_2
      74: if_icmpne     96
      77: aload_0
      78: invokevirtual #166                // Method javafx/scene/input/MouseEvent.isPrimaryButtonDown:()Z
      81: ifeq          96
      84: aload_3
      85: invokevirtual #82                 // Method getTableSkin:()Ljavafx/scene/control/skin/TableViewSkinBase;
      88: aload_2
      89: iconst_m1
      90: invokestatic  #167                // Method javafx/scene/control/skin/TableSkinUtils.resizeColumnToFitContent:(Ljavafx/scene/control/skin/TableViewSkinBase;Ljavafx/scene/control/TableColumnBase;I)V
      93: goto          145
      96: aload_0
      97: invokevirtual #154                // Method javafx/scene/input/MouseEvent.getSource:()Ljava/lang/Object;
     100: checkcast     #37                 // class javafx/scene/shape/Rectangle
     103: astore        4
     105: aload_3
     106: invokevirtual #17                 // Method getTableHeaderRow:()Ljavafx/scene/control/skin/TableHeaderRow;
     109: aload         4
     111: aload         4
     113: invokevirtual #168                // Method javafx/scene/shape/Rectangle.getBoundsInLocal:()Ljavafx/geometry/Bounds;
     116: invokevirtual #169                // Method javafx/scene/shape/Rectangle.localToScene:(Ljavafx/geometry/Bounds;)Ljavafx/geometry/Bounds;
     119: invokevirtual #170                // Method javafx/scene/control/skin/TableHeaderRow.sceneToLocal:(Ljavafx/geometry/Bounds;)Ljavafx/geometry/Bounds;
     122: invokevirtual #171                // Method javafx/geometry/Bounds.getMinX:()D
     125: ldc2_w        #67                 // double 2.0d
     128: dadd
     129: dstore        5
     131: aload_3
     132: aload_0
     133: invokevirtual #149                // Method javafx/scene/input/MouseEvent.getSceneX:()D
     136: putfield      #3                  // Field dragAnchorX:D
     139: aload_3
     140: dload         5
     142: invokespecial #172                // Method columnResizingStarted:(D)V
     145: return

  private void lambda$new$1(javafx.collections.ListChangeListener$Change);
    Code:
       0: aload_0
       1: invokevirtual #105                // Method setHeadersNeedUpdate:()V
       4: return

  private void lambda$new$0(javafx.beans.value.ObservableValue);
    Code:
       0: aload_0
       1: getfield      #16                 // Field label:Ljavafx/scene/control/skin/TableColumnHeader;
       4: aload_0
       5: invokevirtual #14                 // Method getTableColumn:()Ljavafx/scene/control/TableColumnBase;
       8: invokevirtual #173                // Method javafx/scene/control/TableColumnBase.getText:()Ljava/lang/String;
      11: ifnull        31
      14: aload_0
      15: invokevirtual #14                 // Method getTableColumn:()Ljavafx/scene/control/TableColumnBase;
      18: invokevirtual #173                // Method javafx/scene/control/TableColumnBase.getText:()Ljava/lang/String;
      21: invokevirtual #174                // Method java/lang/String.isEmpty:()Z
      24: ifne          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: invokevirtual #175                // Method javafx/scene/control/skin/TableColumnHeader.setVisible:(Z)V
      35: return

  static {};
    Code:
       0: invokedynamic #176,  0            // InvokeDynamic #3:handle:()Ljavafx/event/EventHandler;
       5: putstatic     #134                // Field rectMousePressed:Ljavafx/event/EventHandler;
       8: invokedynamic #177,  0            // InvokeDynamic #4:handle:()Ljavafx/event/EventHandler;
      13: putstatic     #136                // Field rectMouseDragged:Ljavafx/event/EventHandler;
      16: invokedynamic #178,  0            // InvokeDynamic #5:handle:()Ljavafx/event/EventHandler;
      21: putstatic     #138                // Field rectMouseReleased:Ljavafx/event/EventHandler;
      24: invokedynamic #179,  0            // InvokeDynamic #6:handle:()Ljavafx/event/EventHandler;
      29: putstatic     #140                // Field rectCursorChangeListener:Ljavafx/event/EventHandler;
      32: return
}
