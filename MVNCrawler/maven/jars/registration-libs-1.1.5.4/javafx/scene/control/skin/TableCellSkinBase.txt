Compiled from "TableCellSkinBase.java"
public abstract class javafx.scene.control.skin.TableCellSkinBase<S, T, C extends javafx.scene.control.IndexedCell<T>> extends javafx.scene.control.skin.CellSkinBase<C> {
  boolean isDeferToParentForPrefWidth;

  private javafx.beans.InvalidationListener columnWidthListener;

  private javafx.beans.WeakInvalidationListener weakColumnWidthListener;

  public javafx.scene.control.skin.TableCellSkinBase(C);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method javafx/scene/control/skin/CellSkinBase."<init>":(Ljavafx/scene/control/Cell;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field isDeferToParentForPrefWidth:Z
      10: aload_0
      11: aload_0
      12: invokedynamic #3,  0              // InvokeDynamic #0:invalidated:(Ljavafx/scene/control/skin/TableCellSkinBase;)Ljavafx/beans/InvalidationListener;
      17: putfield      #4                  // Field columnWidthListener:Ljavafx/beans/InvalidationListener;
      20: aload_0
      21: new           #5                  // class javafx/beans/WeakInvalidationListener
      24: dup
      25: aload_0
      26: getfield      #4                  // Field columnWidthListener:Ljavafx/beans/InvalidationListener;
      29: invokespecial #6                  // Method javafx/beans/WeakInvalidationListener."<init>":(Ljavafx/beans/InvalidationListener;)V
      32: putfield      #7                  // Field weakColumnWidthListener:Ljavafx/beans/WeakInvalidationListener;
      35: new           #8                  // class javafx/scene/shape/Rectangle
      38: dup
      39: invokespecial #9                  // Method javafx/scene/shape/Rectangle."<init>":()V
      42: astore_2
      43: aload_2
      44: invokevirtual #10                 // Method javafx/scene/shape/Rectangle.widthProperty:()Ljavafx/beans/property/DoubleProperty;
      47: aload_1
      48: invokevirtual #11                 // Method javafx/scene/control/IndexedCell.widthProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
      51: invokevirtual #12                 // Method javafx/beans/property/DoubleProperty.bind:(Ljavafx/beans/value/ObservableValue;)V
      54: aload_2
      55: invokevirtual #13                 // Method javafx/scene/shape/Rectangle.heightProperty:()Ljavafx/beans/property/DoubleProperty;
      58: aload_1
      59: invokevirtual #14                 // Method javafx/scene/control/IndexedCell.heightProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
      62: invokevirtual #12                 // Method javafx/beans/property/DoubleProperty.bind:(Ljavafx/beans/value/ObservableValue;)V
      65: aload_0
      66: invokevirtual #15                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      69: checkcast     #16                 // class javafx/scene/control/IndexedCell
      72: aload_2
      73: invokevirtual #17                 // Method javafx/scene/control/IndexedCell.setClip:(Ljavafx/scene/Node;)V
      76: aload_0
      77: invokevirtual #18                 // Method getTableColumn:()Ljavafx/scene/control/TableColumnBase;
      80: astore_3
      81: aload_3
      82: ifnull        96
      85: aload_3
      86: invokevirtual #19                 // Method javafx/scene/control/TableColumnBase.widthProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
      89: aload_0
      90: getfield      #7                  // Field weakColumnWidthListener:Ljavafx/beans/WeakInvalidationListener;
      93: invokevirtual #20                 // Method javafx/beans/property/ReadOnlyDoubleProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
      96: aload_1
      97: invokevirtual #21                 // Method javafx/scene/control/IndexedCell.getProperties:()Ljavafx/collections/ObservableMap;
     100: ldc           #23                 // String deferToParentPrefWidth
     102: invokeinterface #24,  2           // InterfaceMethod javafx/collections/ObservableMap.containsKey:(Ljava/lang/Object;)Z
     107: ifeq          115
     110: aload_0
     111: iconst_1
     112: putfield      #2                  // Field isDeferToParentForPrefWidth:Z
     115: return

  public abstract javafx.beans.property.ReadOnlyObjectProperty<? extends javafx.scene.control.TableColumnBase<S, T>> tableColumnProperty();

  public final javafx.scene.control.TableColumnBase<S, T> getTableColumn();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method tableColumnProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       4: invokevirtual #26                 // Method javafx/beans/property/ReadOnlyObjectProperty.get:()Ljava/lang/Object;
       7: checkcast     #27                 // class javafx/scene/control/TableColumnBase
      10: areturn

  public void dispose();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getTableColumn:()Ljavafx/scene/control/TableColumnBase;
       4: astore_1
       5: aload_1
       6: ifnull        20
       9: aload_1
      10: invokevirtual #19                 // Method javafx/scene/control/TableColumnBase.widthProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
      13: aload_0
      14: getfield      #7                  // Field weakColumnWidthListener:Ljavafx/beans/WeakInvalidationListener;
      17: invokevirtual #28                 // Method javafx/beans/property/ReadOnlyDoubleProperty.removeListener:(Ljavafx/beans/InvalidationListener;)V
      20: aload_0
      21: invokespecial #29                 // Method javafx/scene/control/skin/CellSkinBase.dispose:()V
      24: return

  protected void layoutChildren(double, double, double, double);
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: dload         5
       5: dload         7
       7: aload_0
       8: invokevirtual #15                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      11: checkcast     #16                 // class javafx/scene/control/IndexedCell
      14: invokevirtual #30                 // Method javafx/scene/control/IndexedCell.getPadding:()Ljavafx/geometry/Insets;
      17: invokevirtual #31                 // Method javafx/geometry/Insets.getBottom:()D
      20: dsub
      21: invokevirtual #32                 // Method layoutLabelInArea:(DDDD)V
      24: return

  protected double computePrefWidth(double, double, double, double, double);
    Code:
       0: aload_0
       1: getfield      #2                  // Field isDeferToParentForPrefWidth:Z
       4: ifeq          20
       7: aload_0
       8: dload_1
       9: dload_3
      10: dload         5
      12: dload         7
      14: dload         9
      16: invokespecial #33                 // Method javafx/scene/control/skin/CellSkinBase.computePrefWidth:(DDDDD)D
      19: dreturn
      20: aload_0
      21: invokevirtual #18                 // Method getTableColumn:()Ljavafx/scene/control/TableColumnBase;
      24: astore        11
      26: aload         11
      28: ifnonnull     35
      31: dconst_0
      32: goto          44
      35: aload_0
      36: aload         11
      38: invokevirtual #34                 // Method javafx/scene/control/TableColumnBase.getWidth:()D
      41: invokevirtual #35                 // Method snapSizeX:(D)D
      44: dreturn

  private void lambda$new$0(javafx.beans.Observable);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       4: checkcast     #16                 // class javafx/scene/control/IndexedCell
       7: invokevirtual #36                 // Method javafx/scene/control/IndexedCell.requestLayout:()V
      10: return
}
