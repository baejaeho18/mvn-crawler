Compiled from "TabPaneSkin.java"
public class javafx.scene.control.skin.TabPaneSkin extends javafx.scene.control.SkinBase<javafx.scene.control.TabPane> {
  static int CLOSE_BTN_SIZE;

  private static final double ANIMATION_SPEED;

  private static final int SPACER;

  private javafx.scene.control.skin.TabPaneSkin$TabHeaderArea tabHeaderArea;

  private javafx.collections.ObservableList<javafx.scene.control.skin.TabPaneSkin$TabContentRegion> tabContentRegions;

  private javafx.scene.shape.Rectangle clipRect;

  private javafx.scene.shape.Rectangle tabHeaderAreaClipRect;

  private javafx.scene.control.Tab selectedTab;

  private boolean isSelectingTab;

  private final com.sun.javafx.scene.control.behavior.TabPaneBehavior behavior;

  private javafx.beans.property.ObjectProperty<javafx.scene.control.skin.TabPaneSkin$TabAnimation> openTabAnimation;

  private javafx.beans.property.ObjectProperty<javafx.scene.control.skin.TabPaneSkin$TabAnimation> closeTabAnimation;

  private static final javafx.css.PseudoClass SELECTED_PSEUDOCLASS_STATE;

  private static final javafx.css.PseudoClass TOP_PSEUDOCLASS_STATE;

  private static final javafx.css.PseudoClass BOTTOM_PSEUDOCLASS_STATE;

  private static final javafx.css.PseudoClass LEFT_PSEUDOCLASS_STATE;

  private static final javafx.css.PseudoClass RIGHT_PSEUDOCLASS_STATE;

  private static final javafx.css.PseudoClass DISABLED_PSEUDOCLASS_STATE;

  private javafx.event.EventHandler<javafx.scene.input.MouseEvent> headerDraggedHandler;

  private javafx.event.EventHandler<javafx.scene.input.MouseEvent> headerMousePressedHandler;

  private javafx.event.EventHandler<javafx.scene.input.MouseEvent> headerMouseReleasedHandler;

  private int dragTabHeaderIndex;

  private javafx.scene.control.skin.TabPaneSkin$TabHeaderSkin dragTabHeader;

  private javafx.scene.control.skin.TabPaneSkin$TabHeaderSkin dropTabHeader;

  private javafx.scene.layout.StackPane headersRegion;

  private javafx.scene.control.skin.TabPaneSkin$DragState dragState;

  private final int MIN_TO_MAX;

  private final int MAX_TO_MIN;

  private int xLayoutDirection;

  private double dragEventPrevLoc;

  private int prevDragDirection;

  private final double DRAG_DIST_THRESHOLD;

  private final double ANIM_DURATION;

  private javafx.scene.control.skin.TabPaneSkin$TabHeaderSkin dropAnimHeader;

  private javafx.scene.control.Tab swapTab;

  private double dropHeaderSourceX;

  private double dropHeaderTransitionX;

  private final javafx.animation.Animation dropHeaderAnim;

  private double dragHeaderStartX;

  private double dragHeaderDestX;

  private double dragHeaderSourceX;

  private double dragHeaderTransitionX;

  private final javafx.animation.Animation dragHeaderAnim;

  private javafx.collections.ListChangeListener childListener;

  public javafx.scene.control.skin.TabPaneSkin(javafx.scene.control.TabPane);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #28                 // Method javafx/scene/control/SkinBase."<init>":(Ljavafx/scene/control/Control;)V
       5: aload_0
       6: new           #29                 // class javafx/scene/control/skin/TabPaneSkin$1
       9: dup
      10: aload_0
      11: getstatic     #30                 // Field javafx/scene/control/skin/TabPaneSkin$TabAnimation.GROW:Ljavafx/scene/control/skin/TabPaneSkin$TabAnimation;
      14: invokespecial #31                 // Method javafx/scene/control/skin/TabPaneSkin$1."<init>":(Ljavafx/scene/control/skin/TabPaneSkin;Ljavafx/scene/control/skin/TabPaneSkin$TabAnimation;)V
      17: putfield      #27                 // Field openTabAnimation:Ljavafx/beans/property/ObjectProperty;
      20: aload_0
      21: new           #32                 // class javafx/scene/control/skin/TabPaneSkin$2
      24: dup
      25: aload_0
      26: getstatic     #30                 // Field javafx/scene/control/skin/TabPaneSkin$TabAnimation.GROW:Ljavafx/scene/control/skin/TabPaneSkin$TabAnimation;
      29: invokespecial #33                 // Method javafx/scene/control/skin/TabPaneSkin$2."<init>":(Ljavafx/scene/control/skin/TabPaneSkin;Ljavafx/scene/control/skin/TabPaneSkin$TabAnimation;)V
      32: putfield      #26                 // Field closeTabAnimation:Ljavafx/beans/property/ObjectProperty;
      35: aload_0
      36: aload_0
      37: invokedynamic #34,  0             // InvokeDynamic #0:handle:(Ljavafx/scene/control/skin/TabPaneSkin;)Ljavafx/event/EventHandler;
      42: putfield      #35                 // Field headerDraggedHandler:Ljavafx/event/EventHandler;
      45: aload_0
      46: aload_0
      47: invokedynamic #36,  0             // InvokeDynamic #1:handle:(Ljavafx/scene/control/skin/TabPaneSkin;)Ljavafx/event/EventHandler;
      52: putfield      #37                 // Field headerMousePressedHandler:Ljavafx/event/EventHandler;
      55: aload_0
      56: aload_0
      57: invokedynamic #38,  0             // InvokeDynamic #2:handle:(Ljavafx/scene/control/skin/TabPaneSkin;)Ljavafx/event/EventHandler;
      62: putfield      #39                 // Field headerMouseReleasedHandler:Ljavafx/event/EventHandler;
      65: aload_0
      66: iconst_1
      67: putfield      #40                 // Field MIN_TO_MAX:I
      70: aload_0
      71: iconst_m1
      72: putfield      #41                 // Field MAX_TO_MIN:I
      75: aload_0
      76: iconst_1
      77: putfield      #43                 // Field prevDragDirection:I
      80: aload_0
      81: ldc2_w        #44                 // double 0.75d
      84: putfield      #46                 // Field DRAG_DIST_THRESHOLD:D
      87: aload_0
      88: ldc2_w        #47                 // double 120.0d
      91: putfield      #49                 // Field ANIM_DURATION:D
      94: aload_0
      95: new           #50                 // class javafx/scene/control/skin/TabPaneSkin$3
      98: dup
      99: aload_0
     100: invokespecial #51                 // Method javafx/scene/control/skin/TabPaneSkin$3."<init>":(Ljavafx/scene/control/skin/TabPaneSkin;)V
     103: putfield      #52                 // Field dropHeaderAnim:Ljavafx/animation/Animation;
     106: aload_0
     107: new           #53                 // class javafx/scene/control/skin/TabPaneSkin$4
     110: dup
     111: aload_0
     112: invokespecial #54                 // Method javafx/scene/control/skin/TabPaneSkin$4."<init>":(Ljavafx/scene/control/skin/TabPaneSkin;)V
     115: putfield      #55                 // Field dragHeaderAnim:Ljavafx/animation/Animation;
     118: aload_0
     119: new           #56                 // class javafx/scene/control/skin/TabPaneSkin$5
     122: dup
     123: aload_0
     124: invokespecial #57                 // Method javafx/scene/control/skin/TabPaneSkin$5."<init>":(Ljavafx/scene/control/skin/TabPaneSkin;)V
     127: putfield      #58                 // Field childListener:Ljavafx/collections/ListChangeListener;
     130: aload_0
     131: new           #59                 // class com/sun/javafx/scene/control/behavior/TabPaneBehavior
     134: dup
     135: aload_1
     136: invokespecial #60                 // Method com/sun/javafx/scene/control/behavior/TabPaneBehavior."<init>":(Ljavafx/scene/control/TabPane;)V
     139: putfield      #17                 // Field behavior:Lcom/sun/javafx/scene/control/behavior/TabPaneBehavior;
     142: aload_0
     143: new           #61                 // class javafx/scene/shape/Rectangle
     146: dup
     147: aload_1
     148: invokevirtual #62                 // Method javafx/scene/control/TabPane.getWidth:()D
     151: aload_1
     152: invokevirtual #63                 // Method javafx/scene/control/TabPane.getHeight:()D
     155: invokespecial #64                 // Method javafx/scene/shape/Rectangle."<init>":(DD)V
     158: putfield      #65                 // Field clipRect:Ljavafx/scene/shape/Rectangle;
     161: aload_0
     162: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
     165: checkcast     #67                 // class javafx/scene/control/TabPane
     168: aload_0
     169: getfield      #65                 // Field clipRect:Ljavafx/scene/shape/Rectangle;
     172: invokevirtual #68                 // Method javafx/scene/control/TabPane.setClip:(Ljavafx/scene/Node;)V
     175: aload_0
     176: invokestatic  #69                 // Method javafx/collections/FXCollections.observableArrayList:()Ljavafx/collections/ObservableList;
     179: putfield      #70                 // Field tabContentRegions:Ljavafx/collections/ObservableList;
     182: aload_0
     183: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
     186: checkcast     #67                 // class javafx/scene/control/TabPane
     189: invokevirtual #71                 // Method javafx/scene/control/TabPane.getTabs:()Ljavafx/collections/ObservableList;
     192: invokeinterface #72,  1           // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
     197: astore_2
     198: aload_2
     199: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     204: ifeq          225
     207: aload_2
     208: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     213: checkcast     #75                 // class javafx/scene/control/Tab
     216: astore_3
     217: aload_0
     218: aload_3
     219: invokespecial #76                 // Method addTabContent:(Ljavafx/scene/control/Tab;)V
     222: goto          198
     225: aload_0
     226: new           #61                 // class javafx/scene/shape/Rectangle
     229: dup
     230: invokespecial #77                 // Method javafx/scene/shape/Rectangle."<init>":()V
     233: putfield      #78                 // Field tabHeaderAreaClipRect:Ljavafx/scene/shape/Rectangle;
     236: aload_0
     237: new           #79                 // class javafx/scene/control/skin/TabPaneSkin$TabHeaderArea
     240: dup
     241: aload_0
     242: invokespecial #80                 // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea."<init>":(Ljavafx/scene/control/skin/TabPaneSkin;)V
     245: putfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     248: aload_0
     249: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     252: aload_0
     253: getfield      #78                 // Field tabHeaderAreaClipRect:Ljavafx/scene/shape/Rectangle;
     256: invokevirtual #81                 // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.setClip:(Ljavafx/scene/Node;)V
     259: aload_0
     260: invokevirtual #82                 // Method getChildren:()Ljavafx/collections/ObservableList;
     263: aload_0
     264: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     267: invokeinterface #83,  2           // InterfaceMethod javafx/collections/ObservableList.add:(Ljava/lang/Object;)Z
     272: pop
     273: aload_0
     274: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
     277: checkcast     #67                 // class javafx/scene/control/TabPane
     280: invokevirtual #71                 // Method javafx/scene/control/TabPane.getTabs:()Ljavafx/collections/ObservableList;
     283: invokeinterface #84,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
     288: ifne          299
     291: aload_0
     292: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     295: iconst_0
     296: invokevirtual #85                 // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.setVisible:(Z)V
     299: aload_0
     300: invokespecial #86                 // Method initializeTabListener:()V
     303: aload_0
     304: aload_1
     305: invokevirtual #87                 // Method javafx/scene/control/TabPane.getSelectionModel:()Ljavafx/scene/control/SingleSelectionModel;
     308: invokevirtual #88                 // Method javafx/scene/control/SingleSelectionModel.selectedItemProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
     311: aload_0
     312: invokedynamic #89,  0             // InvokeDynamic #3:accept:(Ljavafx/scene/control/skin/TabPaneSkin;)Ljava/util/function/Consumer;
     317: invokevirtual #90                 // Method registerChangeListener:(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Consumer;)V
     320: aload_0
     321: aload_1
     322: invokevirtual #91                 // Method javafx/scene/control/TabPane.sideProperty:()Ljavafx/beans/property/ObjectProperty;
     325: aload_0
     326: invokedynamic #92,  0             // InvokeDynamic #4:accept:(Ljavafx/scene/control/skin/TabPaneSkin;)Ljava/util/function/Consumer;
     331: invokevirtual #90                 // Method registerChangeListener:(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Consumer;)V
     334: aload_0
     335: aload_1
     336: invokevirtual #93                 // Method javafx/scene/control/TabPane.widthProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
     339: aload_0
     340: invokedynamic #94,  0             // InvokeDynamic #5:accept:(Ljavafx/scene/control/skin/TabPaneSkin;)Ljava/util/function/Consumer;
     345: invokevirtual #90                 // Method registerChangeListener:(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Consumer;)V
     348: aload_0
     349: aload_1
     350: invokevirtual #95                 // Method javafx/scene/control/TabPane.heightProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
     353: aload_0
     354: invokedynamic #96,  0             // InvokeDynamic #6:accept:(Ljavafx/scene/control/skin/TabPaneSkin;)Ljava/util/function/Consumer;
     359: invokevirtual #90                 // Method registerChangeListener:(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Consumer;)V
     362: aload_0
     363: aload_0
     364: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
     367: checkcast     #67                 // class javafx/scene/control/TabPane
     370: invokevirtual #87                 // Method javafx/scene/control/TabPane.getSelectionModel:()Ljavafx/scene/control/SingleSelectionModel;
     373: invokevirtual #97                 // Method javafx/scene/control/SingleSelectionModel.getSelectedItem:()Ljava/lang/Object;
     376: checkcast     #75                 // class javafx/scene/control/Tab
     379: putfield      #19                 // Field selectedTab:Ljavafx/scene/control/Tab;
     382: aload_0
     383: getfield      #19                 // Field selectedTab:Ljavafx/scene/control/Tab;
     386: ifnonnull     452
     389: aload_0
     390: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
     393: checkcast     #67                 // class javafx/scene/control/TabPane
     396: invokevirtual #87                 // Method javafx/scene/control/TabPane.getSelectionModel:()Ljavafx/scene/control/SingleSelectionModel;
     399: invokevirtual #98                 // Method javafx/scene/control/SingleSelectionModel.getSelectedIndex:()I
     402: iconst_m1
     403: if_icmpeq     452
     406: aload_0
     407: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
     410: checkcast     #67                 // class javafx/scene/control/TabPane
     413: invokevirtual #87                 // Method javafx/scene/control/TabPane.getSelectionModel:()Ljavafx/scene/control/SingleSelectionModel;
     416: aload_0
     417: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
     420: checkcast     #67                 // class javafx/scene/control/TabPane
     423: invokevirtual #87                 // Method javafx/scene/control/TabPane.getSelectionModel:()Ljavafx/scene/control/SingleSelectionModel;
     426: invokevirtual #98                 // Method javafx/scene/control/SingleSelectionModel.getSelectedIndex:()I
     429: invokevirtual #99                 // Method javafx/scene/control/SingleSelectionModel.select:(I)V
     432: aload_0
     433: aload_0
     434: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
     437: checkcast     #67                 // class javafx/scene/control/TabPane
     440: invokevirtual #87                 // Method javafx/scene/control/TabPane.getSelectionModel:()Ljavafx/scene/control/SingleSelectionModel;
     443: invokevirtual #97                 // Method javafx/scene/control/SingleSelectionModel.getSelectedItem:()Ljava/lang/Object;
     446: checkcast     #75                 // class javafx/scene/control/Tab
     449: putfield      #19                 // Field selectedTab:Ljavafx/scene/control/Tab;
     452: aload_0
     453: getfield      #19                 // Field selectedTab:Ljavafx/scene/control/Tab;
     456: ifnonnull     472
     459: aload_0
     460: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
     463: checkcast     #67                 // class javafx/scene/control/TabPane
     466: invokevirtual #87                 // Method javafx/scene/control/TabPane.getSelectionModel:()Ljavafx/scene/control/SingleSelectionModel;
     469: invokevirtual #100                // Method javafx/scene/control/SingleSelectionModel.selectFirst:()V
     472: aload_0
     473: aload_0
     474: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
     477: checkcast     #67                 // class javafx/scene/control/TabPane
     480: invokevirtual #87                 // Method javafx/scene/control/TabPane.getSelectionModel:()Ljavafx/scene/control/SingleSelectionModel;
     483: invokevirtual #97                 // Method javafx/scene/control/SingleSelectionModel.getSelectedItem:()Ljava/lang/Object;
     486: checkcast     #75                 // class javafx/scene/control/Tab
     489: putfield      #19                 // Field selectedTab:Ljavafx/scene/control/Tab;
     492: aload_0
     493: iconst_0
     494: putfield      #25                 // Field isSelectingTab:Z
     497: aload_0
     498: invokespecial #101                // Method initializeSwipeHandlers:()V
     501: return

  public void dispose();
    Code:
       0: aload_0
       1: invokespecial #102                // Method javafx/scene/control/SkinBase.dispose:()V
       4: aload_0
       5: getfield      #17                 // Field behavior:Lcom/sun/javafx/scene/control/behavior/TabPaneBehavior;
       8: ifnull        18
      11: aload_0
      12: getfield      #17                 // Field behavior:Lcom/sun/javafx/scene/control/behavior/TabPaneBehavior;
      15: invokevirtual #103                // Method com/sun/javafx/scene/control/behavior/TabPaneBehavior.dispose:()V
      18: return

  protected double computePrefWidth(double, double, double, double, double);
    Code:
       0: dconst_0
       1: dstore        11
       3: aload_0
       4: getfield      #70                 // Field tabContentRegions:Ljavafx/collections/ObservableList;
       7: invokeinterface #72,  1           // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
      12: astore        13
      14: aload         13
      16: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          58
      24: aload         13
      26: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #104                // class javafx/scene/control/skin/TabPaneSkin$TabContentRegion
      34: astore        14
      36: dload         11
      38: aload_0
      39: aload         14
      41: ldc2_w        #105                // double -1.0d
      44: invokevirtual #107                // Method javafx/scene/control/skin/TabPaneSkin$TabContentRegion.prefWidth:(D)D
      47: invokevirtual #108                // Method snapSizeX:(D)D
      50: invokestatic  #109                // Method java/lang/Math.max:(DD)D
      53: dstore        11
      55: goto          14
      58: aload_0
      59: invokespecial #20                 // Method isHorizontal:()Z
      62: istore        13
      64: iload         13
      66: ifeq          86
      69: aload_0
      70: aload_0
      71: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
      74: ldc2_w        #105                // double -1.0d
      77: invokevirtual #110                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.prefWidth:(D)D
      80: invokevirtual #108                // Method snapSizeX:(D)D
      83: goto          100
      86: aload_0
      87: aload_0
      88: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
      91: ldc2_w        #105                // double -1.0d
      94: invokevirtual #111                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.prefHeight:(D)D
      97: invokevirtual #112                // Method snapSizeY:(D)D
     100: dstore        14
     102: iload         13
     104: ifeq          117
     107: dload         11
     109: dload         14
     111: invokestatic  #109                // Method java/lang/Math.max:(DD)D
     114: goto          122
     117: dload         11
     119: dload         14
     121: dadd
     122: dstore        16
     124: aload_0
     125: dload         16
     127: invokevirtual #108                // Method snapSizeX:(D)D
     130: dload         5
     132: dadd
     133: dload         9
     135: dadd
     136: dreturn

  protected double computePrefHeight(double, double, double, double, double);
    Code:
       0: dconst_0
       1: dstore        11
       3: aload_0
       4: getfield      #70                 // Field tabContentRegions:Ljavafx/collections/ObservableList;
       7: invokeinterface #72,  1           // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
      12: astore        13
      14: aload         13
      16: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          58
      24: aload         13
      26: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #104                // class javafx/scene/control/skin/TabPaneSkin$TabContentRegion
      34: astore        14
      36: dload         11
      38: aload_0
      39: aload         14
      41: ldc2_w        #105                // double -1.0d
      44: invokevirtual #113                // Method javafx/scene/control/skin/TabPaneSkin$TabContentRegion.prefHeight:(D)D
      47: invokevirtual #112                // Method snapSizeY:(D)D
      50: invokestatic  #109                // Method java/lang/Math.max:(DD)D
      53: dstore        11
      55: goto          14
      58: aload_0
      59: invokespecial #20                 // Method isHorizontal:()Z
      62: istore        13
      64: iload         13
      66: ifeq          86
      69: aload_0
      70: aload_0
      71: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
      74: ldc2_w        #105                // double -1.0d
      77: invokevirtual #111                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.prefHeight:(D)D
      80: invokevirtual #112                // Method snapSizeY:(D)D
      83: goto          100
      86: aload_0
      87: aload_0
      88: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
      91: ldc2_w        #105                // double -1.0d
      94: invokevirtual #110                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.prefWidth:(D)D
      97: invokevirtual #108                // Method snapSizeX:(D)D
     100: dstore        14
     102: iload         13
     104: ifeq          119
     107: dload         11
     109: aload_0
     110: dload         14
     112: invokevirtual #112                // Method snapSizeY:(D)D
     115: dadd
     116: goto          126
     119: dload         11
     121: dload         14
     123: invokestatic  #109                // Method java/lang/Math.max:(DD)D
     126: dstore        16
     128: aload_0
     129: dload         16
     131: invokevirtual #112                // Method snapSizeY:(D)D
     134: dload_3
     135: dadd
     136: dload         7
     138: dadd
     139: dreturn

  public double computeBaselineOffset(double, double, double, double);
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       4: checkcast     #67                 // class javafx/scene/control/TabPane
       7: invokevirtual #114                // Method javafx/scene/control/TabPane.getSide:()Ljavafx/geometry/Side;
      10: astore        9
      12: aload         9
      14: getstatic     #115                // Field javafx/geometry/Side.TOP:Ljavafx/geometry/Side;
      17: if_acmpne     30
      20: aload_0
      21: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
      24: invokevirtual #116                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.getBaselineOffset:()D
      27: dload_1
      28: dadd
      29: dreturn
      30: dconst_0
      31: dreturn

  protected void layoutChildren(double, double, double, double);
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       4: checkcast     #67                 // class javafx/scene/control/TabPane
       7: astore        9
       9: aload         9
      11: invokevirtual #114                // Method javafx/scene/control/TabPane.getSide:()Ljavafx/geometry/Side;
      14: astore        10
      16: aload         10
      18: invokevirtual #117                // Method javafx/geometry/Side.isHorizontal:()Z
      21: ifeq          41
      24: aload_0
      25: aload_0
      26: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
      29: ldc2_w        #105                // double -1.0d
      32: invokevirtual #111                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.prefHeight:(D)D
      35: invokevirtual #112                // Method snapSizeY:(D)D
      38: goto          55
      41: aload_0
      42: aload_0
      43: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
      46: ldc2_w        #105                // double -1.0d
      49: invokevirtual #111                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.prefHeight:(D)D
      52: invokevirtual #108                // Method snapSizeX:(D)D
      55: dstore        11
      57: aload         10
      59: getstatic     #118                // Field javafx/geometry/Side.RIGHT:Ljavafx/geometry/Side;
      62: invokevirtual #119                // Method javafx/geometry/Side.equals:(Ljava/lang/Object;)Z
      65: ifeq          78
      68: dload_1
      69: dload         5
      71: dadd
      72: dload         11
      74: dsub
      75: goto          79
      78: dload_1
      79: dstore        13
      81: aload         10
      83: getstatic     #120                // Field javafx/geometry/Side.BOTTOM:Ljavafx/geometry/Side;
      86: invokevirtual #119                // Method javafx/geometry/Side.equals:(Ljava/lang/Object;)Z
      89: ifeq          102
      92: dload_3
      93: dload         7
      95: dadd
      96: dload         11
      98: dsub
      99: goto          103
     102: dload_3
     103: dstore        15
     105: aload_0
     106: invokevirtual #121                // Method snappedLeftInset:()D
     109: dstore        17
     111: aload_0
     112: invokevirtual #122                // Method snappedTopInset:()D
     115: dstore        19
     117: aload         10
     119: getstatic     #115                // Field javafx/geometry/Side.TOP:Ljavafx/geometry/Side;
     122: if_acmpne     189
     125: aload_0
     126: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     129: dload         5
     131: dload         11
     133: invokevirtual #123                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.resize:(DD)V
     136: aload_0
     137: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     140: dload         13
     142: dload         15
     144: invokevirtual #124                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.relocate:(DD)V
     147: aload_0
     148: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     151: invokevirtual #125                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.getTransforms:()Ljavafx/collections/ObservableList;
     154: invokeinterface #126,  1          // InterfaceMethod javafx/collections/ObservableList.clear:()V
     159: aload_0
     160: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     163: invokevirtual #125                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.getTransforms:()Ljavafx/collections/ObservableList;
     166: new           #127                // class javafx/scene/transform/Rotate
     169: dup
     170: getstatic     #115                // Field javafx/geometry/Side.TOP:Ljavafx/geometry/Side;
     173: invokestatic  #128                // Method getRotation:(Ljavafx/geometry/Side;)I
     176: i2d
     177: invokespecial #129                // Method javafx/scene/transform/Rotate."<init>":(D)V
     180: invokeinterface #83,  2           // InterfaceMethod javafx/collections/ObservableList.add:(Ljava/lang/Object;)Z
     185: pop
     186: goto          428
     189: aload         10
     191: getstatic     #120                // Field javafx/geometry/Side.BOTTOM:Ljavafx/geometry/Side;
     194: if_acmpne     270
     197: aload_0
     198: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     201: dload         5
     203: dload         11
     205: invokevirtual #123                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.resize:(DD)V
     208: aload_0
     209: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     212: dload         5
     214: dload         17
     216: dadd
     217: dload         15
     219: dload         11
     221: dsub
     222: invokevirtual #124                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.relocate:(DD)V
     225: aload_0
     226: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     229: invokevirtual #125                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.getTransforms:()Ljavafx/collections/ObservableList;
     232: invokeinterface #126,  1          // InterfaceMethod javafx/collections/ObservableList.clear:()V
     237: aload_0
     238: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     241: invokevirtual #125                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.getTransforms:()Ljavafx/collections/ObservableList;
     244: new           #127                // class javafx/scene/transform/Rotate
     247: dup
     248: getstatic     #120                // Field javafx/geometry/Side.BOTTOM:Ljavafx/geometry/Side;
     251: invokestatic  #128                // Method getRotation:(Ljavafx/geometry/Side;)I
     254: i2d
     255: dconst_0
     256: dload         11
     258: invokespecial #130                // Method javafx/scene/transform/Rotate."<init>":(DDD)V
     261: invokeinterface #83,  2           // InterfaceMethod javafx/collections/ObservableList.add:(Ljava/lang/Object;)Z
     266: pop
     267: goto          428
     270: aload         10
     272: getstatic     #131                // Field javafx/geometry/Side.LEFT:Ljavafx/geometry/Side;
     275: if_acmpne     354
     278: aload_0
     279: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     282: dload         7
     284: dload         11
     286: invokevirtual #123                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.resize:(DD)V
     289: aload_0
     290: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     293: dload         13
     295: dload         11
     297: dadd
     298: dload         7
     300: dload         11
     302: dsub
     303: dload         19
     305: dadd
     306: invokevirtual #124                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.relocate:(DD)V
     309: aload_0
     310: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     313: invokevirtual #125                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.getTransforms:()Ljavafx/collections/ObservableList;
     316: invokeinterface #126,  1          // InterfaceMethod javafx/collections/ObservableList.clear:()V
     321: aload_0
     322: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     325: invokevirtual #125                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.getTransforms:()Ljavafx/collections/ObservableList;
     328: new           #127                // class javafx/scene/transform/Rotate
     331: dup
     332: getstatic     #131                // Field javafx/geometry/Side.LEFT:Ljavafx/geometry/Side;
     335: invokestatic  #128                // Method getRotation:(Ljavafx/geometry/Side;)I
     338: i2d
     339: dconst_0
     340: dload         11
     342: invokespecial #130                // Method javafx/scene/transform/Rotate."<init>":(DDD)V
     345: invokeinterface #83,  2           // InterfaceMethod javafx/collections/ObservableList.add:(Ljava/lang/Object;)Z
     350: pop
     351: goto          428
     354: aload         10
     356: getstatic     #118                // Field javafx/geometry/Side.RIGHT:Ljavafx/geometry/Side;
     359: if_acmpne     428
     362: aload_0
     363: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     366: dload         7
     368: dload         11
     370: invokevirtual #123                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.resize:(DD)V
     373: aload_0
     374: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     377: dload         13
     379: dload_3
     380: dload         11
     382: dsub
     383: invokevirtual #124                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.relocate:(DD)V
     386: aload_0
     387: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     390: invokevirtual #125                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.getTransforms:()Ljavafx/collections/ObservableList;
     393: invokeinterface #126,  1          // InterfaceMethod javafx/collections/ObservableList.clear:()V
     398: aload_0
     399: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     402: invokevirtual #125                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.getTransforms:()Ljavafx/collections/ObservableList;
     405: new           #127                // class javafx/scene/transform/Rotate
     408: dup
     409: getstatic     #118                // Field javafx/geometry/Side.RIGHT:Ljavafx/geometry/Side;
     412: invokestatic  #128                // Method getRotation:(Ljavafx/geometry/Side;)I
     415: i2d
     416: dconst_0
     417: dload         11
     419: invokespecial #130                // Method javafx/scene/transform/Rotate."<init>":(DDD)V
     422: invokeinterface #83,  2           // InterfaceMethod javafx/collections/ObservableList.add:(Ljava/lang/Object;)Z
     427: pop
     428: aload_0
     429: getfield      #78                 // Field tabHeaderAreaClipRect:Ljavafx/scene/shape/Rectangle;
     432: dconst_0
     433: invokevirtual #132                // Method javafx/scene/shape/Rectangle.setX:(D)V
     436: aload_0
     437: getfield      #78                 // Field tabHeaderAreaClipRect:Ljavafx/scene/shape/Rectangle;
     440: dconst_0
     441: invokevirtual #133                // Method javafx/scene/shape/Rectangle.setY:(D)V
     444: aload_0
     445: invokespecial #20                 // Method isHorizontal:()Z
     448: ifeq          463
     451: aload_0
     452: getfield      #78                 // Field tabHeaderAreaClipRect:Ljavafx/scene/shape/Rectangle;
     455: dload         5
     457: invokevirtual #134                // Method javafx/scene/shape/Rectangle.setWidth:(D)V
     460: goto          472
     463: aload_0
     464: getfield      #78                 // Field tabHeaderAreaClipRect:Ljavafx/scene/shape/Rectangle;
     467: dload         7
     469: invokevirtual #134                // Method javafx/scene/shape/Rectangle.setWidth:(D)V
     472: aload_0
     473: getfield      #78                 // Field tabHeaderAreaClipRect:Ljavafx/scene/shape/Rectangle;
     476: dload         11
     478: invokevirtual #135                // Method javafx/scene/shape/Rectangle.setHeight:(D)V
     481: dconst_0
     482: dstore        21
     484: dconst_0
     485: dstore        23
     487: aload         10
     489: getstatic     #115                // Field javafx/geometry/Side.TOP:Ljavafx/geometry/Side;
     492: if_acmpne     520
     495: dload_1
     496: dstore        21
     498: dload_3
     499: dload         11
     501: dadd
     502: dstore        23
     504: aload_0
     505: invokespecial #18                 // Method isFloatingStyleClass:()Z
     508: ifeq          616
     511: dload         23
     513: dconst_1
     514: dsub
     515: dstore        23
     517: goto          616
     520: aload         10
     522: getstatic     #120                // Field javafx/geometry/Side.BOTTOM:Ljavafx/geometry/Side;
     525: if_acmpne     553
     528: dload_1
     529: dstore        21
     531: dload_3
     532: dload         19
     534: dadd
     535: dstore        23
     537: aload_0
     538: invokespecial #18                 // Method isFloatingStyleClass:()Z
     541: ifeq          616
     544: dconst_1
     545: dload         19
     547: dadd
     548: dstore        23
     550: goto          616
     553: aload         10
     555: getstatic     #131                // Field javafx/geometry/Side.LEFT:Ljavafx/geometry/Side;
     558: if_acmpne     586
     561: dload_1
     562: dload         11
     564: dadd
     565: dstore        21
     567: dload_3
     568: dstore        23
     570: aload_0
     571: invokespecial #18                 // Method isFloatingStyleClass:()Z
     574: ifeq          616
     577: dload         21
     579: dconst_1
     580: dsub
     581: dstore        21
     583: goto          616
     586: aload         10
     588: getstatic     #118                // Field javafx/geometry/Side.RIGHT:Ljavafx/geometry/Side;
     591: if_acmpne     616
     594: dload_1
     595: dload         17
     597: dadd
     598: dstore        21
     600: dload_3
     601: dstore        23
     603: aload_0
     604: invokespecial #18                 // Method isFloatingStyleClass:()Z
     607: ifeq          616
     610: dconst_1
     611: dload         17
     613: dadd
     614: dstore        21
     616: dload         5
     618: aload_0
     619: invokespecial #20                 // Method isHorizontal:()Z
     622: ifeq          629
     625: dconst_0
     626: goto          631
     629: dload         11
     631: dsub
     632: dstore        25
     634: dload         7
     636: aload_0
     637: invokespecial #20                 // Method isHorizontal:()Z
     640: ifeq          648
     643: dload         11
     645: goto          649
     648: dconst_0
     649: dsub
     650: dstore        27
     652: iconst_0
     653: istore        29
     655: aload_0
     656: getfield      #70                 // Field tabContentRegions:Ljavafx/collections/ObservableList;
     659: invokeinterface #84,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
     664: istore        30
     666: iload         29
     668: iload         30
     670: if_icmpge     755
     673: aload_0
     674: getfield      #70                 // Field tabContentRegions:Ljavafx/collections/ObservableList;
     677: iload         29
     679: invokeinterface #136,  2          // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
     684: checkcast     #104                // class javafx/scene/control/skin/TabPaneSkin$TabContentRegion
     687: astore        31
     689: aload         31
     691: getstatic     #137                // Field javafx/geometry/Pos.TOP_LEFT:Ljavafx/geometry/Pos;
     694: invokevirtual #138                // Method javafx/scene/control/skin/TabPaneSkin$TabContentRegion.setAlignment:(Ljavafx/geometry/Pos;)V
     697: aload         31
     699: invokevirtual #139                // Method javafx/scene/control/skin/TabPaneSkin$TabContentRegion.getClip:()Ljavafx/scene/Node;
     702: ifnull        731
     705: aload         31
     707: invokevirtual #139                // Method javafx/scene/control/skin/TabPaneSkin$TabContentRegion.getClip:()Ljavafx/scene/Node;
     710: checkcast     #61                 // class javafx/scene/shape/Rectangle
     713: dload         25
     715: invokevirtual #134                // Method javafx/scene/shape/Rectangle.setWidth:(D)V
     718: aload         31
     720: invokevirtual #139                // Method javafx/scene/control/skin/TabPaneSkin$TabContentRegion.getClip:()Ljavafx/scene/Node;
     723: checkcast     #61                 // class javafx/scene/shape/Rectangle
     726: dload         27
     728: invokevirtual #135                // Method javafx/scene/shape/Rectangle.setHeight:(D)V
     731: aload         31
     733: dload         25
     735: dload         27
     737: invokevirtual #140                // Method javafx/scene/control/skin/TabPaneSkin$TabContentRegion.resize:(DD)V
     740: aload         31
     742: dload         21
     744: dload         23
     746: invokevirtual #141                // Method javafx/scene/control/skin/TabPaneSkin$TabContentRegion.relocate:(DD)V
     749: iinc          29, 1
     752: goto          666
     755: return

  private static int getRotation(javafx.geometry.Side);
    Code:
       0: getstatic     #142                // Field javafx/scene/control/skin/TabPaneSkin$6.$SwitchMap$javafx$geometry$Side:[I
       3: aload_0
       4: invokevirtual #143                // Method javafx/geometry/Side.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 4
                     1: 40
                     2: 42
                     3: 46
                     4: 49
               default: 52
          }
      40: iconst_0
      41: ireturn
      42: sipush        180
      45: ireturn
      46: bipush        -90
      48: ireturn
      49: bipush        90
      51: ireturn
      52: iconst_0
      53: ireturn

  private static javafx.scene.Node clone(javafx.scene.Node);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: instanceof    #144                // class javafx/scene/image/ImageView
      10: ifeq          39
      13: aload_0
      14: checkcast     #144                // class javafx/scene/image/ImageView
      17: astore_1
      18: new           #144                // class javafx/scene/image/ImageView
      21: dup
      22: invokespecial #145                // Method javafx/scene/image/ImageView."<init>":()V
      25: astore_2
      26: aload_2
      27: invokevirtual #146                // Method javafx/scene/image/ImageView.imageProperty:()Ljavafx/beans/property/ObjectProperty;
      30: aload_1
      31: invokevirtual #146                // Method javafx/scene/image/ImageView.imageProperty:()Ljavafx/beans/property/ObjectProperty;
      34: invokevirtual #147                // Method javafx/beans/property/ObjectProperty.bind:(Ljavafx/beans/value/ObservableValue;)V
      37: aload_2
      38: areturn
      39: aload_0
      40: instanceof    #148                // class javafx/scene/control/Label
      43: ifeq          83
      46: aload_0
      47: checkcast     #148                // class javafx/scene/control/Label
      50: astore_1
      51: new           #148                // class javafx/scene/control/Label
      54: dup
      55: aload_1
      56: invokevirtual #149                // Method javafx/scene/control/Label.getText:()Ljava/lang/String;
      59: aload_1
      60: invokevirtual #150                // Method javafx/scene/control/Label.getGraphic:()Ljavafx/scene/Node;
      63: invokestatic  #9                  // Method clone:(Ljavafx/scene/Node;)Ljavafx/scene/Node;
      66: invokespecial #151                // Method javafx/scene/control/Label."<init>":(Ljava/lang/String;Ljavafx/scene/Node;)V
      69: astore_2
      70: aload_2
      71: invokevirtual #152                // Method javafx/scene/control/Label.textProperty:()Ljavafx/beans/property/StringProperty;
      74: aload_1
      75: invokevirtual #152                // Method javafx/scene/control/Label.textProperty:()Ljavafx/beans/property/StringProperty;
      78: invokevirtual #153                // Method javafx/beans/property/StringProperty.bind:(Ljavafx/beans/value/ObservableValue;)V
      81: aload_2
      82: areturn
      83: aconst_null
      84: areturn

  private void removeTabs(java.util.List<? extends javafx.scene.control.Tab>);
    Code:
       0: aload_1
       1: invokeinterface #154,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          138
      16: aload_2
      17: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #75                 // class javafx/scene/control/Tab
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokespecial #155                // Method stopCurrentAnimation:(Ljavafx/scene/control/Tab;)V
      31: aload_0
      32: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
      35: aload_3
      36: invokestatic  #156                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.access$200:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;Ljavafx/scene/control/Tab;)Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
      39: astore        4
      41: aload         4
      43: ifnull        135
      46: aload         4
      48: iconst_1
      49: invokestatic  #157                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.access$302:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;Z)Z
      52: pop
      53: aload         4
      55: aload_3
      56: invokestatic  #158                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.access$400:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;Ljavafx/scene/control/Tab;)V
      59: aload_0
      60: aload_3
      61: invokespecial #159                // Method removeTabContent:(Ljavafx/scene/control/Tab;)V
      64: aload_0
      65: aload         4
      67: aload_3
      68: invokedynamic #160,  0            // InvokeDynamic #7:handle:(Ljavafx/scene/control/skin/TabPaneSkin;Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;Ljavafx/scene/control/Tab;)Ljavafx/event/EventHandler;
      73: astore        5
      75: aload_0
      76: getfield      #26                 // Field closeTabAnimation:Ljavafx/beans/property/ObjectProperty;
      79: invokevirtual #161                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      82: getstatic     #30                 // Field javafx/scene/control/skin/TabPaneSkin$TabAnimation.GROW:Ljavafx/scene/control/skin/TabPaneSkin$TabAnimation;
      85: if_acmpne     127
      88: aload         4
      90: getstatic     #162                // Field javafx/scene/control/skin/TabPaneSkin$TabAnimationState.HIDING:Ljavafx/scene/control/skin/TabPaneSkin$TabAnimationState;
      93: invokestatic  #163                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.access$502:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;Ljavafx/scene/control/skin/TabPaneSkin$TabAnimationState;)Ljavafx/scene/control/skin/TabPaneSkin$TabAnimationState;
      96: pop
      97: aload         4
      99: aload_0
     100: aload         4
     102: ldc2_w        #164                // double 150.0d
     105: invokestatic  #166                // Method javafx/util/Duration.millis:(D)Ljavafx/util/Duration;
     108: dconst_0
     109: aload         5
     111: invokespecial #167                // Method createTimeline:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;Ljavafx/util/Duration;DLjavafx/event/EventHandler;)Ljavafx/animation/Timeline;
     114: invokestatic  #168                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.access$602:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;Ljavafx/animation/Timeline;)Ljavafx/animation/Timeline;
     117: astore        6
     119: aload         6
     121: invokevirtual #169                // Method javafx/animation/Timeline.play:()V
     124: goto          135
     127: aload         5
     129: aconst_null
     130: invokeinterface #170,  2          // InterfaceMethod javafx/event/EventHandler.handle:(Ljavafx/event/Event;)V
     135: goto          7
     138: return

  private void stopCurrentAnimation(javafx.scene.control.Tab);
    Code:
       0: aload_0
       1: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
       4: aload_1
       5: invokestatic  #156                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.access$200:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;Ljavafx/scene/control/Tab;)Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
       8: astore_2
       9: aload_2
      10: ifnull        52
      13: aload_2
      14: invokestatic  #171                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.access$600:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;)Ljavafx/animation/Timeline;
      17: astore_3
      18: aload_3
      19: ifnull        52
      22: aload_3
      23: invokevirtual #172                // Method javafx/animation/Timeline.getStatus:()Ljavafx/animation/Animation$Status;
      26: getstatic     #173                // Field javafx/animation/Animation$Status.RUNNING:Ljavafx/animation/Animation$Status;
      29: if_acmpne     52
      32: aload_3
      33: invokevirtual #174                // Method javafx/animation/Timeline.getOnFinished:()Ljavafx/event/EventHandler;
      36: aconst_null
      37: invokeinterface #170,  2          // InterfaceMethod javafx/event/EventHandler.handle:(Ljavafx/event/Event;)V
      42: aload_3
      43: invokevirtual #175                // Method javafx/animation/Timeline.stop:()V
      46: aload_2
      47: aconst_null
      48: invokestatic  #168                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.access$602:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;Ljavafx/animation/Timeline;)Ljavafx/animation/Timeline;
      51: pop
      52: return

  private void addTabs(java.util.List<? extends javafx.scene.control.Tab>, int);
    Code:
       0: iconst_0
       1: istore_3
       2: new           #176                // class java/util/ArrayList
       5: dup
       6: aload_0
       7: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
      10: invokestatic  #177                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.access$700:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;)Ljavafx/scene/layout/StackPane;
      13: invokevirtual #178                // Method javafx/scene/layout/StackPane.getChildren:()Ljavafx/collections/ObservableList;
      16: invokespecial #179                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      19: astore        4
      21: aload         4
      23: invokeinterface #154,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      28: astore        5
      30: aload         5
      32: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          82
      40: aload         5
      42: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #180                // class javafx/scene/Node
      50: astore        6
      52: aload         6
      54: checkcast     #181                // class javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin
      57: astore        7
      59: aload         7
      61: invokestatic  #182                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.access$500:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;)Ljavafx/scene/control/skin/TabPaneSkin$TabAnimationState;
      64: getstatic     #162                // Field javafx/scene/control/skin/TabPaneSkin$TabAnimationState.HIDING:Ljavafx/scene/control/skin/TabPaneSkin$TabAnimationState;
      67: if_acmpne     79
      70: aload_0
      71: aload         7
      73: invokestatic  #183                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.access$800:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;)Ljavafx/scene/control/Tab;
      76: invokespecial #155                // Method stopCurrentAnimation:(Ljavafx/scene/control/Tab;)V
      79: goto          30
      82: aload_1
      83: invokeinterface #154,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      88: astore        5
      90: aload         5
      92: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      97: ifeq          271
     100: aload         5
     102: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     107: checkcast     #75                 // class javafx/scene/control/Tab
     110: astore        6
     112: aload_0
     113: aload         6
     115: invokespecial #155                // Method stopCurrentAnimation:(Ljavafx/scene/control/Tab;)V
     118: aload_0
     119: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     122: invokevirtual #184                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.isVisible:()Z
     125: ifne          136
     128: aload_0
     129: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     132: iconst_1
     133: invokevirtual #85                 // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.setVisible:(Z)V
     136: iload_2
     137: iload_3
     138: iinc          3, 1
     141: iadd
     142: istore        7
     144: aload_0
     145: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     148: aload         6
     150: iload         7
     152: invokestatic  #185                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.access$900:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;Ljavafx/scene/control/Tab;I)V
     155: aload_0
     156: aload         6
     158: invokespecial #76                 // Method addTabContent:(Ljavafx/scene/control/Tab;)V
     161: aload_0
     162: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     165: aload         6
     167: invokestatic  #156                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.access$200:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;Ljavafx/scene/control/Tab;)Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
     170: astore        8
     172: aload         8
     174: ifnull        268
     177: aload_0
     178: getfield      #27                 // Field openTabAnimation:Ljavafx/beans/property/ObjectProperty;
     181: invokevirtual #161                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
     184: getstatic     #30                 // Field javafx/scene/control/skin/TabPaneSkin$TabAnimation.GROW:Ljavafx/scene/control/skin/TabPaneSkin$TabAnimation;
     187: if_acmpne     254
     190: aload         8
     192: getstatic     #186                // Field javafx/scene/control/skin/TabPaneSkin$TabAnimationState.SHOWING:Ljavafx/scene/control/skin/TabPaneSkin$TabAnimationState;
     195: invokestatic  #163                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.access$502:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;Ljavafx/scene/control/skin/TabPaneSkin$TabAnimationState;)Ljavafx/scene/control/skin/TabPaneSkin$TabAnimationState;
     198: pop
     199: aload         8
     201: invokestatic  #187                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.access$1000:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;)Ljavafx/beans/property/DoubleProperty;
     204: dconst_0
     205: invokestatic  #188                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     208: invokevirtual #189                // Method javafx/beans/property/DoubleProperty.setValue:(Ljava/lang/Number;)V
     211: aload         8
     213: iconst_1
     214: invokevirtual #190                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.setVisible:(Z)V
     217: aload         8
     219: aload_0
     220: aload         8
     222: ldc2_w        #164                // double 150.0d
     225: invokestatic  #166                // Method javafx/util/Duration.millis:(D)Ljavafx/util/Duration;
     228: dconst_1
     229: aload         8
     231: invokedynamic #191,  0            // InvokeDynamic #8:handle:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;)Ljavafx/event/EventHandler;
     236: invokespecial #167                // Method createTimeline:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;Ljavafx/util/Duration;DLjavafx/event/EventHandler;)Ljavafx/animation/Timeline;
     239: invokestatic  #168                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.access$602:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;Ljavafx/animation/Timeline;)Ljavafx/animation/Timeline;
     242: pop
     243: aload         8
     245: invokestatic  #171                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.access$600:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;)Ljavafx/animation/Timeline;
     248: invokevirtual #169                // Method javafx/animation/Timeline.play:()V
     251: goto          268
     254: aload         8
     256: iconst_1
     257: invokevirtual #190                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.setVisible:(Z)V
     260: aload         8
     262: invokestatic  #192                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.access$1100:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;)Ljavafx/scene/layout/StackPane;
     265: invokevirtual #193                // Method javafx/scene/layout/StackPane.requestLayout:()V
     268: goto          90
     271: return

  private void initializeTabListener();
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       4: checkcast     #67                 // class javafx/scene/control/TabPane
       7: invokevirtual #71                 // Method javafx/scene/control/TabPane.getTabs:()Ljavafx/collections/ObservableList;
      10: aload_0
      11: invokedynamic #194,  0            // InvokeDynamic #9:onChanged:(Ljavafx/scene/control/skin/TabPaneSkin;)Ljavafx/collections/ListChangeListener;
      16: invokeinterface #195,  2          // InterfaceMethod javafx/collections/ObservableList.addListener:(Ljavafx/collections/ListChangeListener;)V
      21: return

  private void addTabContent(javafx.scene.control.Tab);
    Code:
       0: new           #104                // class javafx/scene/control/skin/TabPaneSkin$TabContentRegion
       3: dup
       4: aload_1
       5: invokespecial #196                // Method javafx/scene/control/skin/TabPaneSkin$TabContentRegion."<init>":(Ljavafx/scene/control/Tab;)V
       8: astore_2
       9: aload_2
      10: new           #61                 // class javafx/scene/shape/Rectangle
      13: dup
      14: invokespecial #77                 // Method javafx/scene/shape/Rectangle."<init>":()V
      17: invokevirtual #197                // Method javafx/scene/control/skin/TabPaneSkin$TabContentRegion.setClip:(Ljavafx/scene/Node;)V
      20: aload_0
      21: getfield      #70                 // Field tabContentRegions:Ljavafx/collections/ObservableList;
      24: aload_2
      25: invokeinterface #83,  2           // InterfaceMethod javafx/collections/ObservableList.add:(Ljava/lang/Object;)Z
      30: pop
      31: aload_0
      32: invokevirtual #82                 // Method getChildren:()Ljavafx/collections/ObservableList;
      35: iconst_0
      36: aload_2
      37: invokeinterface #198,  3          // InterfaceMethod javafx/collections/ObservableList.add:(ILjava/lang/Object;)V
      42: return

  private void removeTabContent(javafx.scene.control.Tab);
    Code:
       0: aload_0
       1: getfield      #70                 // Field tabContentRegions:Ljavafx/collections/ObservableList;
       4: invokeinterface #72,  1           // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          73
      19: aload_2
      20: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #104                // class javafx/scene/control/skin/TabPaneSkin$TabContentRegion
      28: astore_3
      29: aload_3
      30: invokevirtual #199                // Method javafx/scene/control/skin/TabPaneSkin$TabContentRegion.getTab:()Ljavafx/scene/control/Tab;
      33: aload_1
      34: invokevirtual #200                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      37: ifeq          70
      40: aload_3
      41: aload_1
      42: invokestatic  #201                // Method javafx/scene/control/skin/TabPaneSkin$TabContentRegion.access$1200:(Ljavafx/scene/control/skin/TabPaneSkin$TabContentRegion;Ljavafx/scene/control/Tab;)V
      45: aload_0
      46: invokevirtual #82                 // Method getChildren:()Ljavafx/collections/ObservableList;
      49: aload_3
      50: invokeinterface #202,  2          // InterfaceMethod javafx/collections/ObservableList.remove:(Ljava/lang/Object;)Z
      55: pop
      56: aload_0
      57: getfield      #70                 // Field tabContentRegions:Ljavafx/collections/ObservableList;
      60: aload_3
      61: invokeinterface #202,  2          // InterfaceMethod javafx/collections/ObservableList.remove:(Ljava/lang/Object;)Z
      66: pop
      67: goto          73
      70: goto          10
      73: return

  private void updateTabPosition();
    Code:
       0: aload_0
       1: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
       4: dconst_0
       5: invokestatic  #203                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.access$1300:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;D)V
       8: aload_0
       9: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      12: checkcast     #67                 // class javafx/scene/control/TabPane
      15: invokevirtual #204                // Method javafx/scene/control/TabPane.applyCss:()V
      18: aload_0
      19: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      22: checkcast     #67                 // class javafx/scene/control/TabPane
      25: invokevirtual #205                // Method javafx/scene/control/TabPane.requestLayout:()V
      28: return

  private javafx.animation.Timeline createTimeline(javafx.scene.control.skin.TabPaneSkin$TabHeaderSkin, javafx.util.Duration, double, javafx.event.EventHandler<javafx.event.ActionEvent>);
    Code:
       0: new           #206                // class javafx/animation/Timeline
       3: dup
       4: invokespecial #207                // Method javafx/animation/Timeline."<init>":()V
       7: astore        6
       9: aload         6
      11: iconst_1
      12: invokevirtual #208                // Method javafx/animation/Timeline.setCycleCount:(I)V
      15: new           #209                // class javafx/animation/KeyValue
      18: dup
      19: aload_1
      20: invokestatic  #187                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.access$1000:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;)Ljavafx/beans/property/DoubleProperty;
      23: dload_3
      24: invokestatic  #188                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      27: getstatic     #210                // Field javafx/animation/Interpolator.LINEAR:Ljavafx/animation/Interpolator;
      30: invokespecial #211                // Method javafx/animation/KeyValue."<init>":(Ljavafx/beans/value/WritableValue;Ljava/lang/Object;Ljavafx/animation/Interpolator;)V
      33: astore        7
      35: aload         6
      37: invokevirtual #212                // Method javafx/animation/Timeline.getKeyFrames:()Ljavafx/collections/ObservableList;
      40: invokeinterface #126,  1          // InterfaceMethod javafx/collections/ObservableList.clear:()V
      45: aload         6
      47: invokevirtual #212                // Method javafx/animation/Timeline.getKeyFrames:()Ljavafx/collections/ObservableList;
      50: new           #213                // class javafx/animation/KeyFrame
      53: dup
      54: aload_2
      55: iconst_1
      56: anewarray     #209                // class javafx/animation/KeyValue
      59: dup
      60: iconst_0
      61: aload         7
      63: aastore
      64: invokespecial #214                // Method javafx/animation/KeyFrame."<init>":(Ljavafx/util/Duration;[Ljavafx/animation/KeyValue;)V
      67: invokeinterface #83,  2           // InterfaceMethod javafx/collections/ObservableList.add:(Ljava/lang/Object;)Z
      72: pop
      73: aload         6
      75: aload         5
      77: invokevirtual #215                // Method javafx/animation/Timeline.setOnFinished:(Ljavafx/event/EventHandler;)V
      80: aload         6
      82: areturn

  private boolean isHorizontal();
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       4: checkcast     #67                 // class javafx/scene/control/TabPane
       7: invokevirtual #114                // Method javafx/scene/control/TabPane.getSide:()Ljavafx/geometry/Side;
      10: astore_1
      11: getstatic     #115                // Field javafx/geometry/Side.TOP:Ljavafx/geometry/Side;
      14: aload_1
      15: invokevirtual #119                // Method javafx/geometry/Side.equals:(Ljava/lang/Object;)Z
      18: ifne          31
      21: getstatic     #120                // Field javafx/geometry/Side.BOTTOM:Ljavafx/geometry/Side;
      24: aload_1
      25: invokevirtual #119                // Method javafx/geometry/Side.equals:(Ljava/lang/Object;)Z
      28: ifeq          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  private void initializeSwipeHandlers();
    Code:
       0: getstatic     #216                // Field com/sun/javafx/scene/control/Properties.IS_TOUCH_SUPPORTED:Z
       3: ifeq          44
       6: aload_0
       7: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      10: checkcast     #67                 // class javafx/scene/control/TabPane
      13: getstatic     #217                // Field javafx/scene/input/SwipeEvent.SWIPE_LEFT:Ljavafx/event/EventType;
      16: aload_0
      17: invokedynamic #218,  0            // InvokeDynamic #10:handle:(Ljavafx/scene/control/skin/TabPaneSkin;)Ljavafx/event/EventHandler;
      22: invokevirtual #219                // Method javafx/scene/control/TabPane.addEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      25: aload_0
      26: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      29: checkcast     #67                 // class javafx/scene/control/TabPane
      32: getstatic     #220                // Field javafx/scene/input/SwipeEvent.SWIPE_RIGHT:Ljavafx/event/EventType;
      35: aload_0
      36: invokedynamic #221,  0            // InvokeDynamic #11:handle:(Ljavafx/scene/control/skin/TabPaneSkin;)Ljavafx/event/EventHandler;
      41: invokevirtual #219                // Method javafx/scene/control/TabPane.addEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      44: return

  private boolean isFloatingStyleClass();
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       4: checkcast     #67                 // class javafx/scene/control/TabPane
       7: invokevirtual #222                // Method javafx/scene/control/TabPane.getStyleClass:()Ljavafx/collections/ObservableList;
      10: ldc           #223                // String floating
      12: invokeinterface #224,  2          // InterfaceMethod javafx/collections/ObservableList.contains:(Ljava/lang/Object;)Z
      17: ireturn

  public static java.util.List<javafx.css.CssMetaData<? extends javafx.css.Styleable, ?>> getClassCssMetaData();
    Code:
       0: invokestatic  #225                // Method javafx/scene/control/skin/TabPaneSkin$StyleableProperties.access$1600:()Ljava/util/List;
       3: areturn

  public java.util.List<javafx.css.CssMetaData<? extends javafx.css.Styleable, ?>> getCssMetaData();
    Code:
       0: invokestatic  #226                // Method getClassCssMetaData:()Ljava/util/List;
       3: areturn

  public java.lang.Object queryAccessibleAttribute(javafx.scene.AccessibleAttribute, java.lang.Object...);
    Code:
       0: getstatic     #227                // Field javafx/scene/control/skin/TabPaneSkin$6.$SwitchMap$javafx$scene$AccessibleAttribute:[I
       3: aload_1
       4: invokevirtual #228                // Method javafx/scene/AccessibleAttribute.ordinal:()I
       7: iaload
       8: tableswitch   { // 3 to 5
                     3: 36
                     4: 48
                     5: 67
               default: 100
          }
      36: aload_0
      37: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
      40: aload_0
      41: getfield      #19                 // Field selectedTab:Ljavafx/scene/control/Tab;
      44: invokestatic  #156                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.access$200:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;Ljavafx/scene/control/Tab;)Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
      47: areturn
      48: aload_0
      49: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
      52: invokestatic  #177                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.access$700:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;)Ljavafx/scene/layout/StackPane;
      55: invokevirtual #178                // Method javafx/scene/layout/StackPane.getChildren:()Ljavafx/collections/ObservableList;
      58: invokeinterface #84,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      63: invokestatic  #229                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      66: areturn
      67: aload_2
      68: iconst_0
      69: aaload
      70: checkcast     #230                // class java/lang/Integer
      73: astore_3
      74: aload_3
      75: ifnonnull     80
      78: aconst_null
      79: areturn
      80: aload_0
      81: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
      84: invokestatic  #177                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.access$700:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;)Ljavafx/scene/layout/StackPane;
      87: invokevirtual #178                // Method javafx/scene/layout/StackPane.getChildren:()Ljavafx/collections/ObservableList;
      90: aload_3
      91: invokevirtual #231                // Method java/lang/Integer.intValue:()I
      94: invokeinterface #136,  2          // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      99: areturn
     100: aload_0
     101: aload_1
     102: aload_2
     103: invokespecial #232                // Method javafx/scene/control/SkinBase.queryAccessibleAttribute:(Ljavafx/scene/AccessibleAttribute;[Ljava/lang/Object;)Ljava/lang/Object;
     106: areturn

  private void addReorderListeners(javafx.scene.Node);
    Code:
       0: aload_1
       1: getstatic     #233                // Field javafx/scene/input/MouseEvent.MOUSE_PRESSED:Ljavafx/event/EventType;
       4: aload_0
       5: getfield      #37                 // Field headerMousePressedHandler:Ljavafx/event/EventHandler;
       8: invokevirtual #234                // Method javafx/scene/Node.addEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      11: aload_1
      12: getstatic     #235                // Field javafx/scene/input/MouseEvent.MOUSE_RELEASED:Ljavafx/event/EventType;
      15: aload_0
      16: getfield      #39                 // Field headerMouseReleasedHandler:Ljavafx/event/EventHandler;
      19: invokevirtual #234                // Method javafx/scene/Node.addEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      22: aload_1
      23: getstatic     #236                // Field javafx/scene/input/MouseEvent.MOUSE_DRAGGED:Ljavafx/event/EventType;
      26: aload_0
      27: getfield      #35                 // Field headerDraggedHandler:Ljavafx/event/EventHandler;
      30: invokevirtual #234                // Method javafx/scene/Node.addEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      33: return

  private void removeReorderListeners(javafx.scene.Node);
    Code:
       0: aload_1
       1: getstatic     #233                // Field javafx/scene/input/MouseEvent.MOUSE_PRESSED:Ljavafx/event/EventType;
       4: aload_0
       5: getfield      #37                 // Field headerMousePressedHandler:Ljavafx/event/EventHandler;
       8: invokevirtual #237                // Method javafx/scene/Node.removeEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      11: aload_1
      12: getstatic     #235                // Field javafx/scene/input/MouseEvent.MOUSE_RELEASED:Ljavafx/event/EventType;
      15: aload_0
      16: getfield      #39                 // Field headerMouseReleasedHandler:Ljavafx/event/EventHandler;
      19: invokevirtual #237                // Method javafx/scene/Node.removeEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      22: aload_1
      23: getstatic     #236                // Field javafx/scene/input/MouseEvent.MOUSE_DRAGGED:Ljavafx/event/EventType;
      26: aload_0
      27: getfield      #35                 // Field headerDraggedHandler:Ljavafx/event/EventHandler;
      30: invokevirtual #237                // Method javafx/scene/Node.removeEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      33: return

  private void updateListeners();
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       4: checkcast     #67                 // class javafx/scene/control/TabPane
       7: invokevirtual #238                // Method javafx/scene/control/TabPane.getTabDragPolicy:()Ljavafx/scene/control/TabPane$TabDragPolicy;
      10: getstatic     #239                // Field javafx/scene/control/TabPane$TabDragPolicy.FIXED:Ljavafx/scene/control/TabPane$TabDragPolicy;
      13: if_acmpeq     29
      16: aload_0
      17: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      20: checkcast     #67                 // class javafx/scene/control/TabPane
      23: invokevirtual #238                // Method javafx/scene/control/TabPane.getTabDragPolicy:()Ljavafx/scene/control/TabPane$TabDragPolicy;
      26: ifnonnull     88
      29: aload_0
      30: getfield      #240                // Field headersRegion:Ljavafx/scene/layout/StackPane;
      33: invokevirtual #178                // Method javafx/scene/layout/StackPane.getChildren:()Ljavafx/collections/ObservableList;
      36: invokeinterface #72,  1           // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
      41: astore_1
      42: aload_1
      43: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          69
      51: aload_1
      52: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #180                // class javafx/scene/Node
      60: astore_2
      61: aload_0
      62: aload_2
      63: invokespecial #1                  // Method removeReorderListeners:(Ljavafx/scene/Node;)V
      66: goto          42
      69: aload_0
      70: getfield      #240                // Field headersRegion:Ljavafx/scene/layout/StackPane;
      73: invokevirtual #178                // Method javafx/scene/layout/StackPane.getChildren:()Ljavafx/collections/ObservableList;
      76: aload_0
      77: getfield      #58                 // Field childListener:Ljavafx/collections/ListChangeListener;
      80: invokeinterface #241,  2          // InterfaceMethod javafx/collections/ObservableList.removeListener:(Ljavafx/collections/ListChangeListener;)V
      85: goto          160
      88: aload_0
      89: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      92: checkcast     #67                 // class javafx/scene/control/TabPane
      95: invokevirtual #238                // Method javafx/scene/control/TabPane.getTabDragPolicy:()Ljavafx/scene/control/TabPane$TabDragPolicy;
      98: getstatic     #242                // Field javafx/scene/control/TabPane$TabDragPolicy.REORDER:Ljavafx/scene/control/TabPane$TabDragPolicy;
     101: if_acmpne     160
     104: aload_0
     105: getfield      #240                // Field headersRegion:Ljavafx/scene/layout/StackPane;
     108: invokevirtual #178                // Method javafx/scene/layout/StackPane.getChildren:()Ljavafx/collections/ObservableList;
     111: invokeinterface #72,  1           // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
     116: astore_1
     117: aload_1
     118: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     123: ifeq          144
     126: aload_1
     127: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     132: checkcast     #180                // class javafx/scene/Node
     135: astore_2
     136: aload_0
     137: aload_2
     138: invokespecial #2                  // Method addReorderListeners:(Ljavafx/scene/Node;)V
     141: goto          117
     144: aload_0
     145: getfield      #240                // Field headersRegion:Ljavafx/scene/layout/StackPane;
     148: invokevirtual #178                // Method javafx/scene/layout/StackPane.getChildren:()Ljavafx/collections/ObservableList;
     151: aload_0
     152: getfield      #58                 // Field childListener:Ljavafx/collections/ListChangeListener;
     155: invokeinterface #195,  2          // InterfaceMethod javafx/collections/ObservableList.addListener:(Ljavafx/collections/ListChangeListener;)V
     160: return

  private void setupReordering(javafx.scene.layout.StackPane);
    Code:
       0: aload_0
       1: getstatic     #243                // Field javafx/scene/control/skin/TabPaneSkin$DragState.NONE:Ljavafx/scene/control/skin/TabPaneSkin$DragState;
       4: putfield      #24                 // Field dragState:Ljavafx/scene/control/skin/TabPaneSkin$DragState;
       7: aload_0
       8: aload_1
       9: putfield      #240                // Field headersRegion:Ljavafx/scene/layout/StackPane;
      12: aload_0
      13: invokespecial #244                // Method updateListeners:()V
      16: aload_0
      17: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      20: checkcast     #67                 // class javafx/scene/control/TabPane
      23: invokevirtual #245                // Method javafx/scene/control/TabPane.tabDragPolicyProperty:()Ljavafx/beans/property/ObjectProperty;
      26: aload_0
      27: invokedynamic #246,  0            // InvokeDynamic #12:changed:(Ljavafx/scene/control/skin/TabPaneSkin;)Ljavafx/beans/value/ChangeListener;
      32: invokevirtual #247                // Method javafx/beans/property/ObjectProperty.addListener:(Ljavafx/beans/value/ChangeListener;)V
      35: return

  private void handleHeaderMousePressed(javafx.scene.input.MouseEvent);
    Code:
       0: aload_1
       1: invokevirtual #248                // Method javafx/scene/input/MouseEvent.getButton:()Ljavafx/scene/input/MouseButton;
       4: getstatic     #249                // Field javafx/scene/input/MouseButton.PRIMARY:Ljavafx/scene/input/MouseButton;
       7: invokevirtual #250                // Method javafx/scene/input/MouseButton.equals:(Ljava/lang/Object;)Z
      10: ifeq          29
      13: aload_1
      14: invokevirtual #251                // Method javafx/scene/input/MouseEvent.getSource:()Ljava/lang/Object;
      17: checkcast     #252                // class javafx/scene/layout/StackPane
      20: iconst_1
      21: invokevirtual #253                // Method javafx/scene/layout/StackPane.setMouseTransparent:(Z)V
      24: aload_0
      25: aload_1
      26: invokespecial #254                // Method startDrag:(Ljavafx/scene/input/MouseEvent;)V
      29: return

  private void handleHeaderMouseReleased(javafx.scene.input.MouseEvent);
    Code:
       0: aload_1
       1: invokevirtual #248                // Method javafx/scene/input/MouseEvent.getButton:()Ljavafx/scene/input/MouseButton;
       4: getstatic     #249                // Field javafx/scene/input/MouseButton.PRIMARY:Ljavafx/scene/input/MouseButton;
       7: invokevirtual #250                // Method javafx/scene/input/MouseButton.equals:(Ljava/lang/Object;)Z
      10: ifeq          32
      13: aload_1
      14: invokevirtual #251                // Method javafx/scene/input/MouseEvent.getSource:()Ljava/lang/Object;
      17: checkcast     #252                // class javafx/scene/layout/StackPane
      20: iconst_0
      21: invokevirtual #253                // Method javafx/scene/layout/StackPane.setMouseTransparent:(Z)V
      24: aload_0
      25: invokespecial #255                // Method stopDrag:()V
      28: aload_1
      29: invokevirtual #256                // Method javafx/scene/input/MouseEvent.consume:()V
      32: return

  private void handleHeaderDragged(javafx.scene.input.MouseEvent);
    Code:
       0: aload_1
       1: invokevirtual #248                // Method javafx/scene/input/MouseEvent.getButton:()Ljavafx/scene/input/MouseButton;
       4: getstatic     #249                // Field javafx/scene/input/MouseButton.PRIMARY:Ljavafx/scene/input/MouseButton;
       7: invokevirtual #250                // Method javafx/scene/input/MouseButton.equals:(Ljava/lang/Object;)Z
      10: ifeq          18
      13: aload_0
      14: aload_1
      15: invokespecial #257                // Method perfromDrag:(Ljavafx/scene/input/MouseEvent;)V
      18: return

  private double getDragDelta(double, double);
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       4: checkcast     #67                 // class javafx/scene/control/TabPane
       7: invokevirtual #114                // Method javafx/scene/control/TabPane.getSide:()Ljavafx/geometry/Side;
      10: getstatic     #115                // Field javafx/geometry/Side.TOP:Ljavafx/geometry/Side;
      13: invokevirtual #119                // Method javafx/geometry/Side.equals:(Ljava/lang/Object;)Z
      16: ifne          38
      19: aload_0
      20: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      23: checkcast     #67                 // class javafx/scene/control/TabPane
      26: invokevirtual #114                // Method javafx/scene/control/TabPane.getSide:()Ljavafx/geometry/Side;
      29: getstatic     #118                // Field javafx/geometry/Side.RIGHT:Ljavafx/geometry/Side;
      32: invokevirtual #119                // Method javafx/geometry/Side.equals:(Ljava/lang/Object;)Z
      35: ifeq          42
      38: dload_1
      39: dload_3
      40: dsub
      41: dreturn
      42: dload_3
      43: dload_1
      44: dsub
      45: dreturn

  private int deriveTabHeaderLayoutXDirection();
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       4: checkcast     #67                 // class javafx/scene/control/TabPane
       7: invokevirtual #114                // Method javafx/scene/control/TabPane.getSide:()Ljavafx/geometry/Side;
      10: getstatic     #115                // Field javafx/geometry/Side.TOP:Ljavafx/geometry/Side;
      13: invokevirtual #119                // Method javafx/geometry/Side.equals:(Ljava/lang/Object;)Z
      16: ifne          38
      19: aload_0
      20: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      23: checkcast     #67                 // class javafx/scene/control/TabPane
      26: invokevirtual #114                // Method javafx/scene/control/TabPane.getSide:()Ljavafx/geometry/Side;
      29: getstatic     #118                // Field javafx/geometry/Side.RIGHT:Ljavafx/geometry/Side;
      32: invokevirtual #119                // Method javafx/geometry/Side.equals:(Ljava/lang/Object;)Z
      35: ifeq          40
      38: iconst_1
      39: ireturn
      40: iconst_m1
      41: ireturn

  private void perfromDrag(javafx.scene.input.MouseEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #258                // Method getHeaderRegionLocalX:(Ljavafx/scene/input/MouseEvent;)D
       5: dstore        9
       7: aload_0
       8: dload         9
      10: aload_0
      11: getfield      #259                // Field dragEventPrevLoc:D
      14: invokespecial #260                // Method getDragDelta:(DD)D
      17: dstore        11
      19: dload         11
      21: dconst_0
      22: dcmpl
      23: ifle          31
      26: iconst_1
      27: istore_2
      28: goto          33
      31: iconst_m1
      32: istore_2
      33: aload_0
      34: getfield      #43                 // Field prevDragDirection:I
      37: iload_2
      38: if_icmpeq     54
      41: aload_0
      42: aload_0
      43: getfield      #52                 // Field dropHeaderAnim:Ljavafx/animation/Animation;
      46: invokespecial #261                // Method stopAnim:(Ljavafx/animation/Animation;)V
      49: aload_0
      50: iload_2
      51: putfield      #43                 // Field prevDragDirection:I
      54: aload_0
      55: getfield      #23                 // Field dragTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
      58: invokevirtual #262                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.getLayoutX:()D
      61: aload_0
      62: getfield      #263                // Field xLayoutDirection:I
      65: i2d
      66: dload         11
      68: dmul
      69: dadd
      70: dstore_3
      71: dload_3
      72: dconst_0
      73: dcmpl
      74: iflt          490
      77: dload_3
      78: aload_0
      79: getfield      #23                 // Field dragTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
      82: invokevirtual #264                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.getWidth:()D
      85: dadd
      86: aload_0
      87: getfield      #240                // Field headersRegion:Ljavafx/scene/layout/StackPane;
      90: invokevirtual #265                // Method javafx/scene/layout/StackPane.getWidth:()D
      93: dcmpg
      94: ifgt          490
      97: aload_0
      98: getstatic     #266                // Field javafx/scene/control/skin/TabPaneSkin$DragState.REORDER:Ljavafx/scene/control/skin/TabPaneSkin$DragState;
     101: putfield      #24                 // Field dragState:Ljavafx/scene/control/skin/TabPaneSkin$DragState;
     104: aload_0
     105: getfield      #23                 // Field dragTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
     108: dload_3
     109: invokevirtual #267                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.setLayoutX:(D)V
     112: aload_0
     113: getfield      #23                 // Field dragTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
     116: invokevirtual #268                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.getBoundsInParent:()Ljavafx/geometry/Bounds;
     119: astore        5
     121: iload_2
     122: iconst_1
     123: if_icmpne     316
     126: aload_0
     127: getfield      #269                // Field dragTabHeaderIndex:I
     130: iconst_1
     131: iadd
     132: istore        13
     134: iload         13
     136: aload_0
     137: getfield      #240                // Field headersRegion:Ljavafx/scene/layout/StackPane;
     140: invokevirtual #178                // Method javafx/scene/layout/StackPane.getChildren:()Ljavafx/collections/ObservableList;
     143: invokeinterface #84,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
     148: if_icmpge     313
     151: aload_0
     152: aload_0
     153: getfield      #240                // Field headersRegion:Ljavafx/scene/layout/StackPane;
     156: invokevirtual #178                // Method javafx/scene/layout/StackPane.getChildren:()Ljavafx/collections/ObservableList;
     159: iload         13
     161: invokeinterface #136,  2          // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
     166: checkcast     #181                // class javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin
     169: putfield      #270                // Field dropTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
     172: aload_0
     173: getfield      #22                 // Field dropAnimHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
     176: aload_0
     177: getfield      #270                // Field dropTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
     180: if_acmpeq     307
     183: aload_0
     184: getfield      #270                // Field dropTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
     187: invokevirtual #268                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.getBoundsInParent:()Ljavafx/geometry/Bounds;
     190: astore        6
     192: aload_0
     193: getfield      #263                // Field xLayoutDirection:I
     196: iconst_1
     197: if_icmpne     216
     200: aload         5
     202: invokevirtual #271                // Method javafx/geometry/Bounds.getMaxX:()D
     205: aload         6
     207: invokevirtual #272                // Method javafx/geometry/Bounds.getMinX:()D
     210: dsub
     211: dstore        7
     213: goto          229
     216: aload         6
     218: invokevirtual #271                // Method javafx/geometry/Bounds.getMaxX:()D
     221: aload         5
     223: invokevirtual #272                // Method javafx/geometry/Bounds.getMinX:()D
     226: dsub
     227: dstore        7
     229: dload         7
     231: aload         6
     233: invokevirtual #273                // Method javafx/geometry/Bounds.getWidth:()D
     236: ldc2_w        #44                 // double 0.75d
     239: dmul
     240: dcmpl
     241: ifle          313
     244: aload_0
     245: aload_0
     246: getfield      #52                 // Field dropHeaderAnim:Ljavafx/animation/Animation;
     249: invokespecial #261                // Method stopAnim:(Ljavafx/animation/Animation;)V
     252: aload_0
     253: aload_0
     254: getfield      #263                // Field xLayoutDirection:I
     257: i2d
     258: aload         5
     260: invokevirtual #273                // Method javafx/geometry/Bounds.getWidth:()D
     263: dneg
     264: dmul
     265: putfield      #7                  // Field dropHeaderTransitionX:D
     268: aload_0
     269: getfield      #263                // Field xLayoutDirection:I
     272: iconst_1
     273: if_icmpne     294
     276: aload_0
     277: aload         6
     279: invokevirtual #271                // Method javafx/geometry/Bounds.getMaxX:()D
     282: aload         5
     284: invokevirtual #273                // Method javafx/geometry/Bounds.getWidth:()D
     287: dsub
     288: putfield      #274                // Field dragHeaderDestX:D
     291: goto          303
     294: aload_0
     295: aload         6
     297: invokevirtual #272                // Method javafx/geometry/Bounds.getMinX:()D
     300: putfield      #274                // Field dragHeaderDestX:D
     303: aload_0
     304: invokespecial #275                // Method startHeaderReorderingAnim:()V
     307: iinc          13, 1
     310: goto          134
     313: goto          490
     316: aload_0
     317: getfield      #269                // Field dragTabHeaderIndex:I
     320: iconst_1
     321: isub
     322: istore        13
     324: iload         13
     326: iflt          490
     329: aload_0
     330: aload_0
     331: getfield      #240                // Field headersRegion:Ljavafx/scene/layout/StackPane;
     334: invokevirtual #178                // Method javafx/scene/layout/StackPane.getChildren:()Ljavafx/collections/ObservableList;
     337: iload         13
     339: invokeinterface #136,  2          // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
     344: checkcast     #181                // class javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin
     347: putfield      #270                // Field dropTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
     350: aload_0
     351: getfield      #22                 // Field dropAnimHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
     354: aload_0
     355: getfield      #270                // Field dropTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
     358: if_acmpeq     484
     361: aload_0
     362: getfield      #270                // Field dropTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
     365: invokevirtual #268                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.getBoundsInParent:()Ljavafx/geometry/Bounds;
     368: astore        6
     370: aload_0
     371: getfield      #263                // Field xLayoutDirection:I
     374: iconst_1
     375: if_icmpne     394
     378: aload         6
     380: invokevirtual #271                // Method javafx/geometry/Bounds.getMaxX:()D
     383: aload         5
     385: invokevirtual #272                // Method javafx/geometry/Bounds.getMinX:()D
     388: dsub
     389: dstore        7
     391: goto          407
     394: aload         5
     396: invokevirtual #271                // Method javafx/geometry/Bounds.getMaxX:()D
     399: aload         6
     401: invokevirtual #272                // Method javafx/geometry/Bounds.getMinX:()D
     404: dsub
     405: dstore        7
     407: dload         7
     409: aload         6
     411: invokevirtual #273                // Method javafx/geometry/Bounds.getWidth:()D
     414: ldc2_w        #44                 // double 0.75d
     417: dmul
     418: dcmpl
     419: ifle          490
     422: aload_0
     423: aload_0
     424: getfield      #52                 // Field dropHeaderAnim:Ljavafx/animation/Animation;
     427: invokespecial #261                // Method stopAnim:(Ljavafx/animation/Animation;)V
     430: aload_0
     431: aload_0
     432: getfield      #263                // Field xLayoutDirection:I
     435: i2d
     436: aload         5
     438: invokevirtual #273                // Method javafx/geometry/Bounds.getWidth:()D
     441: dmul
     442: putfield      #7                  // Field dropHeaderTransitionX:D
     445: aload_0
     446: getfield      #263                // Field xLayoutDirection:I
     449: iconst_1
     450: if_icmpne     465
     453: aload_0
     454: aload         6
     456: invokevirtual #272                // Method javafx/geometry/Bounds.getMinX:()D
     459: putfield      #274                // Field dragHeaderDestX:D
     462: goto          480
     465: aload_0
     466: aload         6
     468: invokevirtual #271                // Method javafx/geometry/Bounds.getMaxX:()D
     471: aload         5
     473: invokevirtual #273                // Method javafx/geometry/Bounds.getWidth:()D
     476: dsub
     477: putfield      #274                // Field dragHeaderDestX:D
     480: aload_0
     481: invokespecial #275                // Method startHeaderReorderingAnim:()V
     484: iinc          13, -1
     487: goto          324
     490: aload_0
     491: dload         9
     493: putfield      #259                // Field dragEventPrevLoc:D
     496: aload_1
     497: invokevirtual #256                // Method javafx/scene/input/MouseEvent.consume:()V
     500: return

  private void startDrag(javafx.scene.input.MouseEvent);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #52                 // Field dropHeaderAnim:Ljavafx/animation/Animation;
       5: invokespecial #261                // Method stopAnim:(Ljavafx/animation/Animation;)V
       8: aload_0
       9: aload_0
      10: getfield      #55                 // Field dragHeaderAnim:Ljavafx/animation/Animation;
      13: invokespecial #261                // Method stopAnim:(Ljavafx/animation/Animation;)V
      16: aload_0
      17: aload_1
      18: invokevirtual #251                // Method javafx/scene/input/MouseEvent.getSource:()Ljava/lang/Object;
      21: checkcast     #181                // class javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin
      24: putfield      #23                 // Field dragTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
      27: aload_0
      28: getfield      #23                 // Field dragTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
      31: ifnull        107
      34: aload_0
      35: getstatic     #276                // Field javafx/scene/control/skin/TabPaneSkin$DragState.START:Ljavafx/scene/control/skin/TabPaneSkin$DragState;
      38: putfield      #24                 // Field dragState:Ljavafx/scene/control/skin/TabPaneSkin$DragState;
      41: aload_0
      42: aconst_null
      43: putfield      #277                // Field swapTab:Ljavafx/scene/control/Tab;
      46: aload_0
      47: aload_0
      48: invokespecial #278                // Method deriveTabHeaderLayoutXDirection:()I
      51: putfield      #263                // Field xLayoutDirection:I
      54: aload_0
      55: aload_0
      56: aload_1
      57: invokespecial #258                // Method getHeaderRegionLocalX:(Ljavafx/scene/input/MouseEvent;)D
      60: putfield      #259                // Field dragEventPrevLoc:D
      63: aload_0
      64: aload_0
      65: getfield      #240                // Field headersRegion:Ljavafx/scene/layout/StackPane;
      68: invokevirtual #178                // Method javafx/scene/layout/StackPane.getChildren:()Ljavafx/collections/ObservableList;
      71: aload_0
      72: getfield      #23                 // Field dragTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
      75: invokeinterface #279,  2          // InterfaceMethod javafx/collections/ObservableList.indexOf:(Ljava/lang/Object;)I
      80: putfield      #269                // Field dragTabHeaderIndex:I
      83: aload_0
      84: getfield      #23                 // Field dragTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
      87: dconst_0
      88: invokevirtual #280                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.setViewOrder:(D)V
      91: aload_0
      92: aload_0
      93: aload_0
      94: getfield      #23                 // Field dragTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
      97: invokevirtual #262                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.getLayoutX:()D
     100: dup2_x1
     101: putfield      #274                // Field dragHeaderDestX:D
     104: putfield      #281                // Field dragHeaderStartX:D
     107: return

  private double getHeaderRegionLocalX(javafx.scene.input.MouseEvent);
    Code:
       0: aload_0
       1: getfield      #240                // Field headersRegion:Ljavafx/scene/layout/StackPane;
       4: aload_1
       5: invokevirtual #282                // Method javafx/scene/input/MouseEvent.getSceneX:()D
       8: aload_1
       9: invokevirtual #283                // Method javafx/scene/input/MouseEvent.getSceneY:()D
      12: invokevirtual #284                // Method javafx/scene/layout/StackPane.sceneToLocal:(DD)Ljavafx/geometry/Point2D;
      15: astore_2
      16: aload_2
      17: invokevirtual #285                // Method javafx/geometry/Point2D.getX:()D
      20: dreturn

  private void stopDrag();
    Code:
       0: aload_0
       1: getfield      #24                 // Field dragState:Ljavafx/scene/control/skin/TabPaneSkin$DragState;
       4: getstatic     #276                // Field javafx/scene/control/skin/TabPaneSkin$DragState.START:Ljavafx/scene/control/skin/TabPaneSkin$DragState;
       7: if_acmpne     15
      10: aload_0
      11: invokespecial #3                  // Method resetDrag:()V
      14: return
      15: aload_0
      16: aload_0
      17: getfield      #23                 // Field dragTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
      20: invokevirtual #262                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.getLayoutX:()D
      23: putfield      #5                  // Field dragHeaderSourceX:D
      26: aload_0
      27: aload_0
      28: getfield      #274                // Field dragHeaderDestX:D
      31: aload_0
      32: getfield      #5                  // Field dragHeaderSourceX:D
      35: dsub
      36: putfield      #4                  // Field dragHeaderTransitionX:D
      39: aload_0
      40: getfield      #55                 // Field dragHeaderAnim:Ljavafx/animation/Animation;
      43: invokevirtual #286                // Method javafx/animation/Animation.playFromStart:()V
      46: aload_0
      47: getfield      #281                // Field dragHeaderStartX:D
      50: aload_0
      51: getfield      #274                // Field dragHeaderDestX:D
      54: dcmpl
      55: ifeq          90
      58: aload_0
      59: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      62: checkcast     #67                 // class javafx/scene/control/TabPane
      65: invokevirtual #71                 // Method javafx/scene/control/TabPane.getTabs:()Ljavafx/collections/ObservableList;
      68: checkcast     #287                // class com/sun/javafx/scene/control/TabObservableList
      71: aload_0
      72: getfield      #23                 // Field dragTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
      75: invokestatic  #183                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.access$800:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;)Ljavafx/scene/control/Tab;
      78: aload_0
      79: getfield      #277                // Field swapTab:Ljavafx/scene/control/Tab;
      82: invokevirtual #288                // Method com/sun/javafx/scene/control/TabObservableList.reorder:(Ljavafx/scene/control/Tab;Ljavafx/scene/control/Tab;)V
      85: aload_0
      86: aconst_null
      87: putfield      #277                // Field swapTab:Ljavafx/scene/control/Tab;
      90: return

  private void resetDrag();
    Code:
       0: aload_0
       1: getstatic     #243                // Field javafx/scene/control/skin/TabPaneSkin$DragState.NONE:Ljavafx/scene/control/skin/TabPaneSkin$DragState;
       4: putfield      #24                 // Field dragState:Ljavafx/scene/control/skin/TabPaneSkin$DragState;
       7: aload_0
       8: getfield      #23                 // Field dragTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
      11: dconst_1
      12: invokevirtual #280                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.setViewOrder:(D)V
      15: aload_0
      16: aconst_null
      17: putfield      #23                 // Field dragTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
      20: aload_0
      21: aconst_null
      22: putfield      #270                // Field dropTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
      25: aload_0
      26: getfield      #240                // Field headersRegion:Ljavafx/scene/layout/StackPane;
      29: invokevirtual #193                // Method javafx/scene/layout/StackPane.requestLayout:()V
      32: return

  private void startHeaderReorderingAnim();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #270                // Field dropTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
       5: putfield      #22                 // Field dropAnimHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
       8: aload_0
       9: aload_0
      10: getfield      #22                 // Field dropAnimHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
      13: invokestatic  #183                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.access$800:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;)Ljavafx/scene/control/Tab;
      16: putfield      #277                // Field swapTab:Ljavafx/scene/control/Tab;
      19: aload_0
      20: aload_0
      21: getfield      #22                 // Field dropAnimHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
      24: invokevirtual #262                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.getLayoutX:()D
      27: putfield      #8                  // Field dropHeaderSourceX:D
      30: aload_0
      31: getfield      #52                 // Field dropHeaderAnim:Ljavafx/animation/Animation;
      34: invokevirtual #286                // Method javafx/animation/Animation.playFromStart:()V
      37: return

  private void completeHeaderReordering();
    Code:
       0: aload_0
       1: getfield      #22                 // Field dropAnimHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
       4: ifnull        76
       7: aload_0
       8: getfield      #240                // Field headersRegion:Ljavafx/scene/layout/StackPane;
      11: invokevirtual #178                // Method javafx/scene/layout/StackPane.getChildren:()Ljavafx/collections/ObservableList;
      14: aload_0
      15: getfield      #22                 // Field dropAnimHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
      18: invokeinterface #202,  2          // InterfaceMethod javafx/collections/ObservableList.remove:(Ljava/lang/Object;)Z
      23: pop
      24: aload_0
      25: getfield      #240                // Field headersRegion:Ljavafx/scene/layout/StackPane;
      28: invokevirtual #178                // Method javafx/scene/layout/StackPane.getChildren:()Ljavafx/collections/ObservableList;
      31: aload_0
      32: getfield      #269                // Field dragTabHeaderIndex:I
      35: aload_0
      36: getfield      #22                 // Field dropAnimHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
      39: invokeinterface #198,  3          // InterfaceMethod javafx/collections/ObservableList.add:(ILjava/lang/Object;)V
      44: aload_0
      45: aconst_null
      46: putfield      #22                 // Field dropAnimHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
      49: aload_0
      50: getfield      #240                // Field headersRegion:Ljavafx/scene/layout/StackPane;
      53: invokevirtual #193                // Method javafx/scene/layout/StackPane.requestLayout:()V
      56: aload_0
      57: aload_0
      58: getfield      #240                // Field headersRegion:Ljavafx/scene/layout/StackPane;
      61: invokevirtual #178                // Method javafx/scene/layout/StackPane.getChildren:()Ljavafx/collections/ObservableList;
      64: aload_0
      65: getfield      #23                 // Field dragTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
      68: invokeinterface #279,  2          // InterfaceMethod javafx/collections/ObservableList.indexOf:(Ljava/lang/Object;)I
      73: putfield      #269                // Field dragTabHeaderIndex:I
      76: return

  private void stopAnim(javafx.animation.Animation);
    Code:
       0: aload_1
       1: invokevirtual #289                // Method javafx/animation/Animation.getStatus:()Ljavafx/animation/Animation$Status;
       4: getstatic     #173                // Field javafx/animation/Animation$Status.RUNNING:Ljavafx/animation/Animation$Status;
       7: if_acmpne     24
      10: aload_1
      11: invokevirtual #290                // Method javafx/animation/Animation.getOnFinished:()Ljavafx/event/EventHandler;
      14: aconst_null
      15: invokeinterface #170,  2          // InterfaceMethod javafx/event/EventHandler.handle:(Ljavafx/event/Event;)V
      20: aload_1
      21: invokevirtual #291                // Method javafx/animation/Animation.stop:()V
      24: return

  javafx.scene.control.ContextMenu test_getTabsMenu();
    Code:
       0: aload_0
       1: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
       4: invokestatic  #292                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.access$5500:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;)Ljavafx/scene/control/skin/TabPaneSkin$TabControlButtons;
       7: invokestatic  #293                // Method javafx/scene/control/skin/TabPaneSkin$TabControlButtons.access$5600:(Ljavafx/scene/control/skin/TabPaneSkin$TabControlButtons;)Ljavafx/scene/control/ContextMenu;
      10: areturn

  private void lambda$setupReordering$9(javafx.beans.value.ObservableValue, javafx.scene.control.TabPane$TabDragPolicy, javafx.scene.control.TabPane$TabDragPolicy);
    Code:
       0: aload_2
       1: aload_3
       2: if_acmpeq     9
       5: aload_0
       6: invokespecial #244                // Method updateListeners:()V
       9: return

  private void lambda$initializeSwipeHandlers$8(javafx.scene.input.SwipeEvent);
    Code:
       0: aload_0
       1: getfield      #17                 // Field behavior:Lcom/sun/javafx/scene/control/behavior/TabPaneBehavior;
       4: invokevirtual #294                // Method com/sun/javafx/scene/control/behavior/TabPaneBehavior.selectPreviousTab:()V
       7: return

  private void lambda$initializeSwipeHandlers$7(javafx.scene.input.SwipeEvent);
    Code:
       0: aload_0
       1: getfield      #17                 // Field behavior:Lcom/sun/javafx/scene/control/behavior/TabPaneBehavior;
       4: invokevirtual #295                // Method com/sun/javafx/scene/control/behavior/TabPaneBehavior.selectNextTab:()V
       7: return

  private void lambda$initializeTabListener$6(javafx.collections.ListChangeListener$Change);
    Code:
       0: new           #176                // class java/util/ArrayList
       3: dup
       4: invokespecial #296                // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: new           #176                // class java/util/ArrayList
      11: dup
      12: invokespecial #296                // Method java/util/ArrayList."<init>":()V
      15: astore_3
      16: iconst_m1
      17: istore        4
      19: aload_1
      20: invokevirtual #297                // Method javafx/collections/ListChangeListener$Change.next:()Z
      23: ifeq          286
      26: aload_1
      27: invokevirtual #298                // Method javafx/collections/ListChangeListener$Change.wasPermutated:()Z
      30: ifeq          241
      33: aload_0
      34: getfield      #24                 // Field dragState:Ljavafx/scene/control/skin/TabPaneSkin$DragState;
      37: getstatic     #266                // Field javafx/scene/control/skin/TabPaneSkin$DragState.REORDER:Ljavafx/scene/control/skin/TabPaneSkin$DragState;
      40: if_acmpeq     241
      43: aload_0
      44: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      47: checkcast     #67                 // class javafx/scene/control/TabPane
      50: astore        5
      52: aload         5
      54: invokevirtual #71                 // Method javafx/scene/control/TabPane.getTabs:()Ljavafx/collections/ObservableList;
      57: astore        6
      59: aload_1
      60: invokevirtual #299                // Method javafx/collections/ListChangeListener$Change.getTo:()I
      63: aload_1
      64: invokevirtual #300                // Method javafx/collections/ListChangeListener$Change.getFrom:()I
      67: isub
      68: istore        7
      70: aload         5
      72: invokevirtual #87                 // Method javafx/scene/control/TabPane.getSelectionModel:()Ljavafx/scene/control/SingleSelectionModel;
      75: invokevirtual #97                 // Method javafx/scene/control/SingleSelectionModel.getSelectedItem:()Ljava/lang/Object;
      78: checkcast     #75                 // class javafx/scene/control/Tab
      81: astore        8
      83: new           #176                // class java/util/ArrayList
      86: dup
      87: iload         7
      89: invokespecial #301                // Method java/util/ArrayList."<init>":(I)V
      92: astore        9
      94: aload_0
      95: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      98: checkcast     #67                 // class javafx/scene/control/TabPane
     101: invokevirtual #87                 // Method javafx/scene/control/TabPane.getSelectionModel:()Ljavafx/scene/control/SingleSelectionModel;
     104: invokevirtual #302                // Method javafx/scene/control/SingleSelectionModel.clearSelection:()V
     107: aload_0
     108: getfield      #27                 // Field openTabAnimation:Ljavafx/beans/property/ObjectProperty;
     111: invokevirtual #161                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
     114: checkcast     #303                // class javafx/scene/control/skin/TabPaneSkin$TabAnimation
     117: astore        10
     119: aload_0
     120: getfield      #26                 // Field closeTabAnimation:Ljavafx/beans/property/ObjectProperty;
     123: invokevirtual #161                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
     126: checkcast     #303                // class javafx/scene/control/skin/TabPaneSkin$TabAnimation
     129: astore        11
     131: aload_0
     132: getfield      #27                 // Field openTabAnimation:Ljavafx/beans/property/ObjectProperty;
     135: getstatic     #304                // Field javafx/scene/control/skin/TabPaneSkin$TabAnimation.NONE:Ljavafx/scene/control/skin/TabPaneSkin$TabAnimation;
     138: invokevirtual #305                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
     141: aload_0
     142: getfield      #26                 // Field closeTabAnimation:Ljavafx/beans/property/ObjectProperty;
     145: getstatic     #304                // Field javafx/scene/control/skin/TabPaneSkin$TabAnimation.NONE:Ljavafx/scene/control/skin/TabPaneSkin$TabAnimation;
     148: invokevirtual #305                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
     151: aload_1
     152: invokevirtual #300                // Method javafx/collections/ListChangeListener$Change.getFrom:()I
     155: istore        12
     157: iload         12
     159: aload_1
     160: invokevirtual #299                // Method javafx/collections/ListChangeListener$Change.getTo:()I
     163: if_icmpge     192
     166: aload         9
     168: aload         6
     170: iload         12
     172: invokeinterface #306,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     177: checkcast     #75                 // class javafx/scene/control/Tab
     180: invokeinterface #307,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     185: pop
     186: iinc          12, 1
     189: goto          157
     192: aload_0
     193: aload         9
     195: invokespecial #308                // Method removeTabs:(Ljava/util/List;)V
     198: aload_0
     199: aload         9
     201: aload_1
     202: invokevirtual #300                // Method javafx/collections/ListChangeListener$Change.getFrom:()I
     205: invokespecial #309                // Method addTabs:(Ljava/util/List;I)V
     208: aload_0
     209: getfield      #27                 // Field openTabAnimation:Ljavafx/beans/property/ObjectProperty;
     212: aload         10
     214: invokevirtual #305                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
     217: aload_0
     218: getfield      #26                 // Field closeTabAnimation:Ljavafx/beans/property/ObjectProperty;
     221: aload         11
     223: invokevirtual #305                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
     226: aload_0
     227: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
     230: checkcast     #67                 // class javafx/scene/control/TabPane
     233: invokevirtual #87                 // Method javafx/scene/control/TabPane.getSelectionModel:()Ljavafx/scene/control/SingleSelectionModel;
     236: aload         8
     238: invokevirtual #310                // Method javafx/scene/control/SingleSelectionModel.select:(Ljava/lang/Object;)V
     241: aload_1
     242: invokevirtual #311                // Method javafx/collections/ListChangeListener$Change.wasRemoved:()Z
     245: ifeq          259
     248: aload_2
     249: aload_1
     250: invokevirtual #312                // Method javafx/collections/ListChangeListener$Change.getRemoved:()Ljava/util/List;
     253: invokeinterface #313,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     258: pop
     259: aload_1
     260: invokevirtual #314                // Method javafx/collections/ListChangeListener$Change.wasAdded:()Z
     263: ifeq          19
     266: aload_3
     267: aload_1
     268: invokevirtual #315                // Method javafx/collections/ListChangeListener$Change.getAddedSubList:()Ljava/util/List;
     271: invokeinterface #313,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     276: pop
     277: aload_1
     278: invokevirtual #300                // Method javafx/collections/ListChangeListener$Change.getFrom:()I
     281: istore        4
     283: goto          19
     286: aload_2
     287: aload_3
     288: invokeinterface #316,  2          // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
     293: pop
     294: aload_0
     295: aload_2
     296: invokespecial #308                // Method removeTabs:(Ljava/util/List;)V
     299: aload_3
     300: invokeinterface #317,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     305: ifne          421
     308: aload_0
     309: getfield      #70                 // Field tabContentRegions:Ljavafx/collections/ObservableList;
     312: invokeinterface #72,  1           // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
     317: astore        5
     319: aload         5
     321: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     326: ifeq          396
     329: aload         5
     331: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     336: checkcast     #104                // class javafx/scene/control/skin/TabPaneSkin$TabContentRegion
     339: astore        6
     341: aload         6
     343: invokevirtual #199                // Method javafx/scene/control/skin/TabPaneSkin$TabContentRegion.getTab:()Ljavafx/scene/control/Tab;
     346: astore        7
     348: aload_0
     349: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
     352: aload         7
     354: invokestatic  #156                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.access$200:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;Ljavafx/scene/control/Tab;)Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
     357: astore        8
     359: aload         8
     361: invokestatic  #318                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.access$300:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;)Z
     364: ifne          393
     367: aload_3
     368: aload         6
     370: invokevirtual #199                // Method javafx/scene/control/skin/TabPaneSkin$TabContentRegion.getTab:()Ljavafx/scene/control/Tab;
     373: invokeinterface #319,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     378: ifeq          393
     381: aload_3
     382: aload         6
     384: invokevirtual #199                // Method javafx/scene/control/skin/TabPaneSkin$TabContentRegion.getTab:()Ljavafx/scene/control/Tab;
     387: invokeinterface #320,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
     392: pop
     393: goto          319
     396: aload_0
     397: aload_3
     398: iload         4
     400: iconst_m1
     401: if_icmpne     416
     404: aload_0
     405: getfield      #70                 // Field tabContentRegions:Ljavafx/collections/ObservableList;
     408: invokeinterface #84,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
     413: goto          418
     416: iload         4
     418: invokespecial #309                // Method addTabs:(Ljava/util/List;I)V
     421: aload_0
     422: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
     425: checkcast     #67                 // class javafx/scene/control/TabPane
     428: invokevirtual #205                // Method javafx/scene/control/TabPane.requestLayout:()V
     431: return

  private static void lambda$addTabs$5(javafx.scene.control.skin.TabPaneSkin$TabHeaderSkin, javafx.event.ActionEvent);
    Code:
       0: aload_0
       1: getstatic     #321                // Field javafx/scene/control/skin/TabPaneSkin$TabAnimationState.NONE:Ljavafx/scene/control/skin/TabPaneSkin$TabAnimationState;
       4: invokestatic  #163                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.access$502:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;Ljavafx/scene/control/skin/TabPaneSkin$TabAnimationState;)Ljavafx/scene/control/skin/TabPaneSkin$TabAnimationState;
       7: pop
       8: aload_0
       9: iconst_1
      10: invokevirtual #190                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.setVisible:(Z)V
      13: aload_0
      14: invokestatic  #192                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.access$1100:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;)Ljavafx/scene/layout/StackPane;
      17: invokevirtual #193                // Method javafx/scene/layout/StackPane.requestLayout:()V
      20: return

  private void lambda$removeTabs$4(javafx.scene.control.skin.TabPaneSkin$TabHeaderSkin, javafx.scene.control.Tab, javafx.event.ActionEvent);
    Code:
       0: aload_1
       1: getstatic     #321                // Field javafx/scene/control/skin/TabPaneSkin$TabAnimationState.NONE:Ljavafx/scene/control/skin/TabPaneSkin$TabAnimationState;
       4: invokestatic  #163                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderSkin.access$502:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;Ljavafx/scene/control/skin/TabPaneSkin$TabAnimationState;)Ljavafx/scene/control/skin/TabPaneSkin$TabAnimationState;
       7: pop
       8: aload_0
       9: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
      12: aload_2
      13: invokestatic  #322                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.access$5700:(Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;Ljavafx/scene/control/Tab;)V
      16: aload_0
      17: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
      20: invokevirtual #323                // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.requestLayout:()V
      23: aload_0
      24: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      27: checkcast     #67                 // class javafx/scene/control/TabPane
      30: invokevirtual #71                 // Method javafx/scene/control/TabPane.getTabs:()Ljavafx/collections/ObservableList;
      33: invokeinterface #324,  1          // InterfaceMethod javafx/collections/ObservableList.isEmpty:()Z
      38: ifeq          49
      41: aload_0
      42: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
      45: iconst_0
      46: invokevirtual #85                 // Method javafx/scene/control/skin/TabPaneSkin$TabHeaderArea.setVisible:(Z)V
      49: return

  private void lambda$new$3(javafx.beans.value.ObservableValue);
    Code:
       0: aload_0
       1: getfield      #65                 // Field clipRect:Ljavafx/scene/shape/Rectangle;
       4: aload_0
       5: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       8: checkcast     #67                 // class javafx/scene/control/TabPane
      11: invokevirtual #63                 // Method javafx/scene/control/TabPane.getHeight:()D
      14: invokevirtual #135                // Method javafx/scene/shape/Rectangle.setHeight:(D)V
      17: return

  private void lambda$new$2(javafx.beans.value.ObservableValue);
    Code:
       0: aload_0
       1: getfield      #65                 // Field clipRect:Ljavafx/scene/shape/Rectangle;
       4: aload_0
       5: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       8: checkcast     #67                 // class javafx/scene/control/TabPane
      11: invokevirtual #62                 // Method javafx/scene/control/TabPane.getWidth:()D
      14: invokevirtual #134                // Method javafx/scene/shape/Rectangle.setWidth:(D)V
      17: return

  private void lambda$new$1(javafx.beans.value.ObservableValue);
    Code:
       0: aload_0
       1: invokespecial #325                // Method updateTabPosition:()V
       4: return

  private void lambda$new$0(javafx.beans.value.ObservableValue);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #25                 // Field isSelectingTab:Z
       5: aload_0
       6: aload_0
       7: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      10: checkcast     #67                 // class javafx/scene/control/TabPane
      13: invokevirtual #87                 // Method javafx/scene/control/TabPane.getSelectionModel:()Ljavafx/scene/control/SingleSelectionModel;
      16: invokevirtual #97                 // Method javafx/scene/control/SingleSelectionModel.getSelectedItem:()Ljava/lang/Object;
      19: checkcast     #75                 // class javafx/scene/control/Tab
      22: putfield      #19                 // Field selectedTab:Ljavafx/scene/control/Tab;
      25: aload_0
      26: invokevirtual #66                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      29: checkcast     #67                 // class javafx/scene/control/TabPane
      32: invokevirtual #205                // Method javafx/scene/control/TabPane.requestLayout:()V
      35: return

  static javafx.beans.property.ObjectProperty access$1400(javafx.scene.control.skin.TabPaneSkin);
    Code:
       0: aload_0
       1: getfield      #27                 // Field openTabAnimation:Ljavafx/beans/property/ObjectProperty;
       4: areturn

  static javafx.beans.property.ObjectProperty access$1500(javafx.scene.control.skin.TabPaneSkin);
    Code:
       0: aload_0
       1: getfield      #26                 // Field closeTabAnimation:Ljavafx/beans/property/ObjectProperty;
       4: areturn

  static boolean access$1900(javafx.scene.control.skin.TabPaneSkin);
    Code:
       0: aload_0
       1: getfield      #25                 // Field isSelectingTab:Z
       4: ireturn

  static boolean access$1902(javafx.scene.control.skin.TabPaneSkin, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #25                 // Field isSelectingTab:Z
       6: ireturn

  static javafx.scene.control.skin.TabPaneSkin$DragState access$2300(javafx.scene.control.skin.TabPaneSkin);
    Code:
       0: aload_0
       1: getfield      #24                 // Field dragState:Ljavafx/scene/control/skin/TabPaneSkin$DragState;
       4: areturn

  static javafx.scene.control.skin.TabPaneSkin$TabHeaderSkin access$2400(javafx.scene.control.skin.TabPaneSkin);
    Code:
       0: aload_0
       1: getfield      #23                 // Field dragTabHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
       4: areturn

  static javafx.scene.control.skin.TabPaneSkin$TabHeaderSkin access$2500(javafx.scene.control.skin.TabPaneSkin);
    Code:
       0: aload_0
       1: getfield      #22                 // Field dropAnimHeader:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderSkin;
       4: areturn

  static void access$2600(javafx.scene.control.skin.TabPaneSkin, javafx.scene.layout.StackPane);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #21                 // Method setupReordering:(Ljavafx/scene/layout/StackPane;)V
       5: return

  static boolean access$2700(javafx.scene.control.skin.TabPaneSkin);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method isHorizontal:()Z
       4: ireturn

  static javafx.scene.control.Tab access$2800(javafx.scene.control.skin.TabPaneSkin);
    Code:
       0: aload_0
       1: getfield      #19                 // Field selectedTab:Ljavafx/scene/control/Tab;
       4: areturn

  static boolean access$3000(javafx.scene.control.skin.TabPaneSkin);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method isFloatingStyleClass:()Z
       4: ireturn

  static com.sun.javafx.scene.control.behavior.TabPaneBehavior access$3100(javafx.scene.control.skin.TabPaneSkin);
    Code:
       0: aload_0
       1: getfield      #17                 // Field behavior:Lcom/sun/javafx/scene/control/behavior/TabPaneBehavior;
       4: areturn

  static javafx.css.PseudoClass access$3500();
    Code:
       0: getstatic     #16                 // Field SELECTED_PSEUDOCLASS_STATE:Ljavafx/css/PseudoClass;
       3: areturn

  static javafx.css.PseudoClass access$3600();
    Code:
       0: getstatic     #15                 // Field DISABLED_PSEUDOCLASS_STATE:Ljavafx/css/PseudoClass;
       3: areturn

  static javafx.css.PseudoClass access$3700();
    Code:
       0: getstatic     #14                 // Field TOP_PSEUDOCLASS_STATE:Ljavafx/css/PseudoClass;
       3: areturn

  static javafx.css.PseudoClass access$3800();
    Code:
       0: getstatic     #13                 // Field RIGHT_PSEUDOCLASS_STATE:Ljavafx/css/PseudoClass;
       3: areturn

  static javafx.css.PseudoClass access$3900();
    Code:
       0: getstatic     #12                 // Field BOTTOM_PSEUDOCLASS_STATE:Ljavafx/css/PseudoClass;
       3: areturn

  static javafx.css.PseudoClass access$4000();
    Code:
       0: getstatic     #11                 // Field LEFT_PSEUDOCLASS_STATE:Ljavafx/css/PseudoClass;
       3: areturn

  static javafx.scene.control.skin.TabPaneSkin$TabHeaderArea access$4500(javafx.scene.control.skin.TabPaneSkin);
    Code:
       0: aload_0
       1: getfield      #10                 // Field tabHeaderArea:Ljavafx/scene/control/skin/TabPaneSkin$TabHeaderArea;
       4: areturn

  static javafx.scene.Node access$4600(javafx.scene.Node);
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method clone:(Ljavafx/scene/Node;)Ljavafx/scene/Node;
       4: areturn

  static double access$4700(javafx.scene.control.skin.TabPaneSkin);
    Code:
       0: aload_0
       1: getfield      #8                  // Field dropHeaderSourceX:D
       4: dreturn

  static double access$4800(javafx.scene.control.skin.TabPaneSkin);
    Code:
       0: aload_0
       1: getfield      #7                  // Field dropHeaderTransitionX:D
       4: dreturn

  static void access$4900(javafx.scene.control.skin.TabPaneSkin);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method completeHeaderReordering:()V
       4: return

  static double access$5000(javafx.scene.control.skin.TabPaneSkin);
    Code:
       0: aload_0
       1: getfield      #5                  // Field dragHeaderSourceX:D
       4: dreturn

  static double access$5100(javafx.scene.control.skin.TabPaneSkin);
    Code:
       0: aload_0
       1: getfield      #4                  // Field dragHeaderTransitionX:D
       4: dreturn

  static void access$5200(javafx.scene.control.skin.TabPaneSkin);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method resetDrag:()V
       4: return

  static void access$5300(javafx.scene.control.skin.TabPaneSkin, javafx.scene.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method addReorderListeners:(Ljavafx/scene/Node;)V
       5: return

  static void access$5400(javafx.scene.control.skin.TabPaneSkin, javafx.scene.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method removeReorderListeners:(Ljavafx/scene/Node;)V
       5: return

  static {};
    Code:
       0: bipush        16
       2: putstatic     #326                // Field CLOSE_BTN_SIZE:I
       5: ldc_w         #327                // String selected
       8: invokestatic  #328                // Method javafx/css/PseudoClass.getPseudoClass:(Ljava/lang/String;)Ljavafx/css/PseudoClass;
      11: putstatic     #16                 // Field SELECTED_PSEUDOCLASS_STATE:Ljavafx/css/PseudoClass;
      14: ldc_w         #329                // String top
      17: invokestatic  #328                // Method javafx/css/PseudoClass.getPseudoClass:(Ljava/lang/String;)Ljavafx/css/PseudoClass;
      20: putstatic     #14                 // Field TOP_PSEUDOCLASS_STATE:Ljavafx/css/PseudoClass;
      23: ldc_w         #330                // String bottom
      26: invokestatic  #328                // Method javafx/css/PseudoClass.getPseudoClass:(Ljava/lang/String;)Ljavafx/css/PseudoClass;
      29: putstatic     #12                 // Field BOTTOM_PSEUDOCLASS_STATE:Ljavafx/css/PseudoClass;
      32: ldc_w         #331                // String left
      35: invokestatic  #328                // Method javafx/css/PseudoClass.getPseudoClass:(Ljava/lang/String;)Ljavafx/css/PseudoClass;
      38: putstatic     #11                 // Field LEFT_PSEUDOCLASS_STATE:Ljavafx/css/PseudoClass;
      41: ldc_w         #332                // String right
      44: invokestatic  #328                // Method javafx/css/PseudoClass.getPseudoClass:(Ljava/lang/String;)Ljavafx/css/PseudoClass;
      47: putstatic     #13                 // Field RIGHT_PSEUDOCLASS_STATE:Ljavafx/css/PseudoClass;
      50: ldc_w         #333                // String disabled
      53: invokestatic  #328                // Method javafx/css/PseudoClass.getPseudoClass:(Ljava/lang/String;)Ljavafx/css/PseudoClass;
      56: putstatic     #15                 // Field DISABLED_PSEUDOCLASS_STATE:Ljavafx/css/PseudoClass;
      59: return
}
