Compiled from "TreeTableRowSkin.java"
public class javafx.scene.control.skin.TreeTableRowSkin<T> extends javafx.scene.control.skin.TableRowSkinBase<javafx.scene.control.TreeItem<T>, javafx.scene.control.TreeTableRow<T>, javafx.scene.control.TreeTableCell<T, ?>> {
  private javafx.scene.control.TreeItem<?> treeItem;

  private boolean disclosureNodeDirty;

  private javafx.scene.Node graphic;

  private final com.sun.javafx.scene.control.behavior.BehaviorBase<javafx.scene.control.TreeTableRow<T>> behavior;

  private javafx.scene.control.skin.TreeTableViewSkin treeTableViewSkin;

  private boolean childrenDirty;

  private final javafx.beans.InvalidationListener graphicListener;

  private javafx.beans.property.DoubleProperty indent;

  public javafx.scene.control.skin.TreeTableRowSkin(javafx.scene.control.TreeTableRow<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method javafx/scene/control/skin/TableRowSkinBase."<init>":(Ljavafx/scene/control/IndexedCell;)V
       5: aload_0
       6: iconst_1
       7: putfield      #3                  // Field disclosureNodeDirty:Z
      10: aload_0
      11: iconst_0
      12: putfield      #4                  // Field childrenDirty:Z
      15: aload_0
      16: aload_0
      17: invokedynamic #5,  0              // InvokeDynamic #0:invalidated:(Ljavafx/scene/control/skin/TreeTableRowSkin;)Ljavafx/beans/InvalidationListener;
      22: putfield      #6                  // Field graphicListener:Ljavafx/beans/InvalidationListener;
      25: aload_0
      26: aconst_null
      27: putfield      #7                  // Field indent:Ljavafx/beans/property/DoubleProperty;
      30: aload_0
      31: new           #8                  // class com/sun/javafx/scene/control/behavior/TreeTableRowBehavior
      34: dup
      35: aload_1
      36: invokespecial #9                  // Method com/sun/javafx/scene/control/behavior/TreeTableRowBehavior."<init>":(Ljavafx/scene/control/TreeTableRow;)V
      39: putfield      #10                 // Field behavior:Lcom/sun/javafx/scene/control/behavior/BehaviorBase;
      42: aload_0
      43: invokespecial #11                 // Method updateTreeItem:()V
      46: aload_0
      47: invokespecial #12                 // Method updateTableViewSkin:()V
      50: aload_0
      51: aload_1
      52: invokevirtual #13                 // Method javafx/scene/control/TreeTableRow.treeTableViewProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
      55: aload_0
      56: invokedynamic #14,  0             // InvokeDynamic #1:accept:(Ljavafx/scene/control/skin/TreeTableRowSkin;)Ljava/util/function/Consumer;
      61: invokevirtual #15                 // Method registerChangeListener:(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Consumer;)V
      64: aload_0
      65: aload_1
      66: invokevirtual #16                 // Method javafx/scene/control/TreeTableRow.indexProperty:()Ljavafx/beans/property/ReadOnlyIntegerProperty;
      69: aload_0
      70: invokedynamic #17,  0             // InvokeDynamic #2:accept:(Ljavafx/scene/control/skin/TreeTableRowSkin;)Ljava/util/function/Consumer;
      75: invokevirtual #15                 // Method registerChangeListener:(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Consumer;)V
      78: aload_0
      79: aload_1
      80: invokevirtual #18                 // Method javafx/scene/control/TreeTableRow.treeItemProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
      83: aload_0
      84: invokedynamic #19,  0             // InvokeDynamic #3:accept:(Ljavafx/scene/control/skin/TreeTableRowSkin;)Ljava/util/function/Consumer;
      89: invokevirtual #15                 // Method registerChangeListener:(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Consumer;)V
      92: aload_0
      93: invokespecial #1                  // Method setupTreeTableViewListeners:()V
      96: return

  private void setupTreeTableViewListeners();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       4: checkcast     #21                 // class javafx/scene/control/TreeTableRow
       7: invokevirtual #22                 // Method javafx/scene/control/TreeTableRow.getTreeTableView:()Ljavafx/scene/control/TreeTableView;
      10: astore_1
      11: aload_1
      12: ifnonnull     39
      15: aload_0
      16: invokevirtual #20                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      19: checkcast     #21                 // class javafx/scene/control/TreeTableRow
      22: invokevirtual #13                 // Method javafx/scene/control/TreeTableRow.treeTableViewProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
      25: new           #23                 // class javafx/scene/control/skin/TreeTableRowSkin$1
      28: dup
      29: aload_0
      30: invokespecial #24                 // Method javafx/scene/control/skin/TreeTableRowSkin$1."<init>":(Ljavafx/scene/control/skin/TreeTableRowSkin;)V
      33: invokevirtual #25                 // Method javafx/beans/property/ReadOnlyObjectProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
      36: goto          120
      39: aload_0
      40: aload_1
      41: invokevirtual #26                 // Method javafx/scene/control/TreeTableView.treeColumnProperty:()Ljavafx/beans/property/ObjectProperty;
      44: aload_0
      45: invokedynamic #27,  0             // InvokeDynamic #4:accept:(Ljavafx/scene/control/skin/TreeTableRowSkin;)Ljava/util/function/Consumer;
      50: invokevirtual #15                 // Method registerChangeListener:(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Consumer;)V
      53: aload_0
      54: invokespecial #28                 // Method getTreeTableView:()Ljavafx/scene/control/TreeTableView;
      57: invokevirtual #29                 // Method javafx/scene/control/TreeTableView.fixedCellSizeProperty:()Ljavafx/beans/property/DoubleProperty;
      60: astore_2
      61: aload_2
      62: ifnull        120
      65: aload_0
      66: aload_2
      67: aload_0
      68: aload_2
      69: invokedynamic #30,  0             // InvokeDynamic #5:accept:(Ljavafx/scene/control/skin/TreeTableRowSkin;Ljavafx/beans/property/DoubleProperty;)Ljava/util/function/Consumer;
      74: invokevirtual #15                 // Method registerChangeListener:(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Consumer;)V
      77: aload_0
      78: aload_2
      79: invokevirtual #31                 // Method javafx/beans/property/DoubleProperty.get:()D
      82: putfield      #32                 // Field fixedCellSize:D
      85: aload_0
      86: aload_0
      87: getfield      #32                 // Field fixedCellSize:D
      90: dconst_0
      91: dcmpl
      92: ifle          99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: putfield      #33                 // Field fixedCellSizeEnabled:Z
     103: aload_0
     104: aload_0
     105: invokevirtual #34                 // Method getVirtualFlow:()Ljavafx/scene/control/skin/VirtualFlow;
     108: invokevirtual #35                 // Method javafx/scene/control/skin/VirtualFlow.widthProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
     111: aload_1
     112: invokedynamic #36,  0             // InvokeDynamic #6:accept:(Ljavafx/scene/control/TreeTableView;)Ljava/util/function/Consumer;
     117: invokevirtual #15                 // Method registerChangeListener:(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Consumer;)V
     120: return

  public final void setIndent(double);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method indentProperty:()Ljavafx/beans/property/DoubleProperty;
       4: dload_1
       5: invokevirtual #38                 // Method javafx/beans/property/DoubleProperty.set:(D)V
       8: return

  public final double getIndent();
    Code:
       0: aload_0
       1: getfield      #7                  // Field indent:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     13
       7: ldc2_w        #39                 // double 10.0d
      10: goto          20
      13: aload_0
      14: getfield      #7                  // Field indent:Ljavafx/beans/property/DoubleProperty;
      17: invokevirtual #31                 // Method javafx/beans/property/DoubleProperty.get:()D
      20: dreturn

  public final javafx.beans.property.DoubleProperty indentProperty();
    Code:
       0: aload_0
       1: getfield      #7                  // Field indent:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     22
       7: aload_0
       8: new           #41                 // class javafx/scene/control/skin/TreeTableRowSkin$2
      11: dup
      12: aload_0
      13: ldc2_w        #39                 // double 10.0d
      16: invokespecial #42                 // Method javafx/scene/control/skin/TreeTableRowSkin$2."<init>":(Ljavafx/scene/control/skin/TreeTableRowSkin;D)V
      19: putfield      #7                  // Field indent:Ljavafx/beans/property/DoubleProperty;
      22: aload_0
      23: getfield      #7                  // Field indent:Ljavafx/beans/property/DoubleProperty;
      26: areturn

  public void dispose();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method javafx/scene/control/skin/TableRowSkinBase.dispose:()V
       4: aload_0
       5: getfield      #10                 // Field behavior:Lcom/sun/javafx/scene/control/behavior/BehaviorBase;
       8: ifnull        18
      11: aload_0
      12: getfield      #10                 // Field behavior:Lcom/sun/javafx/scene/control/behavior/BehaviorBase;
      15: invokevirtual #44                 // Method com/sun/javafx/scene/control/behavior/BehaviorBase.dispose:()V
      18: return

  protected void updateChildren();
    Code:
       0: aload_0
       1: invokespecial #45                 // Method javafx/scene/control/skin/TableRowSkinBase.updateChildren:()V
       4: aload_0
       5: invokespecial #46                 // Method updateDisclosureNodeAndGraphic:()V
       8: aload_0
       9: getfield      #4                  // Field childrenDirty:Z
      12: ifeq          58
      15: aload_0
      16: iconst_0
      17: putfield      #4                  // Field childrenDirty:Z
      20: aload_0
      21: getfield      #47                 // Field cells:Ljava/util/List;
      24: invokeinterface #48,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      29: ifeq          44
      32: aload_0
      33: invokevirtual #49                 // Method getChildren:()Ljavafx/collections/ObservableList;
      36: invokeinterface #50,  1           // InterfaceMethod javafx/collections/ObservableList.clear:()V
      41: goto          58
      44: aload_0
      45: invokevirtual #49                 // Method getChildren:()Ljavafx/collections/ObservableList;
      48: aload_0
      49: getfield      #47                 // Field cells:Ljava/util/List;
      52: invokeinterface #51,  2           // InterfaceMethod javafx/collections/ObservableList.addAll:(Ljava/util/Collection;)Z
      57: pop
      58: return

  protected void layoutChildren(double, double, double, double);
    Code:
       0: aload_0
       1: getfield      #3                  // Field disclosureNodeDirty:Z
       4: ifeq          16
       7: aload_0
       8: invokespecial #46                 // Method updateDisclosureNodeAndGraphic:()V
      11: aload_0
      12: iconst_0
      13: putfield      #3                  // Field disclosureNodeDirty:Z
      16: aload_0
      17: invokevirtual #52                 // Method getDisclosureNode:()Ljavafx/scene/Node;
      20: astore        9
      22: aload         9
      24: ifnull        39
      27: aload         9
      29: invokevirtual #53                 // Method javafx/scene/Node.getScene:()Ljavafx/scene/Scene;
      32: ifnonnull     39
      35: aload_0
      36: invokespecial #46                 // Method updateDisclosureNodeAndGraphic:()V
      39: aload_0
      40: dload_1
      41: dload_3
      42: dload         5
      44: dload         7
      46: invokespecial #54                 // Method javafx/scene/control/skin/TableRowSkinBase.layoutChildren:(DDDD)V
      49: return

  protected javafx.scene.control.TreeTableCell<T, ?> createCell(javafx.scene.control.TableColumnBase);
    Code:
       0: aload_1
       1: checkcast     #55                 // class javafx/scene/control/TreeTableColumn
       4: astore_2
       5: aload_2
       6: invokevirtual #56                 // Method javafx/scene/control/TreeTableColumn.getCellFactory:()Ljavafx/util/Callback;
       9: aload_2
      10: invokeinterface #57,  2           // InterfaceMethod javafx/util/Callback.call:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #58                 // class javafx/scene/control/TreeTableCell
      18: astore_3
      19: aload_3
      20: aload_2
      21: invokevirtual #59                 // Method javafx/scene/control/TreeTableCell.updateTreeTableColumn:(Ljavafx/scene/control/TreeTableColumn;)V
      24: aload_3
      25: aload_2
      26: invokevirtual #60                 // Method javafx/scene/control/TreeTableColumn.getTreeTableView:()Ljavafx/scene/control/TreeTableView;
      29: invokevirtual #61                 // Method javafx/scene/control/TreeTableCell.updateTreeTableView:(Ljavafx/scene/control/TreeTableView;)V
      32: aload_3
      33: areturn

  void updateCells(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #62                 // Method javafx/scene/control/skin/TableRowSkinBase.updateCells:(Z)V
       5: iload_1
       6: ifeq          18
       9: aload_0
      10: iconst_1
      11: putfield      #4                  // Field childrenDirty:Z
      14: aload_0
      15: invokevirtual #63                 // Method updateChildren:()V
      18: return

  boolean isIndentationRequired();
    Code:
       0: iconst_1
       1: ireturn

  javafx.scene.control.TableColumnBase getTreeColumn();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method getTreeTableView:()Ljavafx/scene/control/TreeTableView;
       4: invokevirtual #64                 // Method javafx/scene/control/TreeTableView.getTreeColumn:()Ljavafx/scene/control/TreeTableColumn;
       7: areturn

  int getIndentationLevel(javafx.scene.control.TreeTableRow<T>);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method getTreeTableView:()Ljavafx/scene/control/TreeTableView;
       4: aload_1
       5: invokevirtual #65                 // Method javafx/scene/control/TreeTableRow.getTreeItem:()Ljavafx/scene/control/TreeItem;
       8: invokevirtual #66                 // Method javafx/scene/control/TreeTableView.getTreeItemLevel:(Ljavafx/scene/control/TreeItem;)I
      11: ireturn

  double getIndentationPerLevel();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method getIndent:()D
       4: dreturn

  javafx.scene.Node getDisclosureNode();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       4: checkcast     #21                 // class javafx/scene/control/TreeTableRow
       7: invokevirtual #68                 // Method javafx/scene/control/TreeTableRow.getDisclosureNode:()Ljavafx/scene/Node;
      10: areturn

  boolean isDisclosureNodeVisible();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method getDisclosureNode:()Ljavafx/scene/Node;
       4: ifnull        28
       7: aload_0
       8: getfield      #69                 // Field treeItem:Ljavafx/scene/control/TreeItem;
      11: ifnull        28
      14: aload_0
      15: getfield      #69                 // Field treeItem:Ljavafx/scene/control/TreeItem;
      18: invokevirtual #70                 // Method javafx/scene/control/TreeItem.isLeaf:()Z
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  boolean isShowRoot();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method getTreeTableView:()Ljavafx/scene/control/TreeTableView;
       4: invokevirtual #71                 // Method javafx/scene/control/TreeTableView.isShowRoot:()Z
       7: ireturn

  protected javafx.collections.ObservableList<javafx.scene.control.TreeTableColumn<T, ?>> getVisibleLeafColumns();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method getTreeTableView:()Ljavafx/scene/control/TreeTableView;
       4: ifnonnull     13
       7: invokestatic  #72                 // Method javafx/collections/FXCollections.emptyObservableList:()Ljavafx/collections/ObservableList;
      10: goto          20
      13: aload_0
      14: invokespecial #28                 // Method getTreeTableView:()Ljavafx/scene/control/TreeTableView;
      17: invokevirtual #73                 // Method javafx/scene/control/TreeTableView.getVisibleLeafColumns:()Ljavafx/collections/ObservableList;
      20: areturn

  protected void updateCell(javafx.scene.control.TreeTableCell<T, ?>, javafx.scene.control.TreeTableRow<T>);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #74                 // Method javafx/scene/control/TreeTableCell.updateTreeTableRow:(Ljavafx/scene/control/TreeTableRow;)V
       5: return

  protected javafx.scene.control.TreeTableColumn<T, ?> getTableColumn(javafx.scene.control.TreeTableCell);
    Code:
       0: aload_1
       1: invokevirtual #75                 // Method javafx/scene/control/TreeTableCell.getTableColumn:()Ljavafx/scene/control/TreeTableColumn;
       4: areturn

  protected javafx.beans.property.ObjectProperty<javafx.scene.Node> graphicProperty();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       4: checkcast     #21                 // class javafx/scene/control/TreeTableRow
       7: astore_1
       8: aload_1
       9: ifnonnull     14
      12: aconst_null
      13: areturn
      14: aload_0
      15: getfield      #69                 // Field treeItem:Ljavafx/scene/control/TreeItem;
      18: ifnonnull     23
      21: aconst_null
      22: areturn
      23: aload_0
      24: getfield      #69                 // Field treeItem:Ljavafx/scene/control/TreeItem;
      27: invokevirtual #76                 // Method javafx/scene/control/TreeItem.graphicProperty:()Ljavafx/beans/property/ObjectProperty;
      30: areturn

  private void updateTreeItem();
    Code:
       0: aload_0
       1: getfield      #69                 // Field treeItem:Ljavafx/scene/control/TreeItem;
       4: ifnull        21
       7: aload_0
       8: getfield      #69                 // Field treeItem:Ljavafx/scene/control/TreeItem;
      11: invokevirtual #76                 // Method javafx/scene/control/TreeItem.graphicProperty:()Ljavafx/beans/property/ObjectProperty;
      14: aload_0
      15: getfield      #6                  // Field graphicListener:Ljavafx/beans/InvalidationListener;
      18: invokevirtual #77                 // Method javafx/beans/property/ObjectProperty.removeListener:(Ljavafx/beans/InvalidationListener;)V
      21: aload_0
      22: aload_0
      23: invokevirtual #20                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      26: checkcast     #21                 // class javafx/scene/control/TreeTableRow
      29: invokevirtual #65                 // Method javafx/scene/control/TreeTableRow.getTreeItem:()Ljavafx/scene/control/TreeItem;
      32: putfield      #69                 // Field treeItem:Ljavafx/scene/control/TreeItem;
      35: aload_0
      36: getfield      #69                 // Field treeItem:Ljavafx/scene/control/TreeItem;
      39: ifnull        56
      42: aload_0
      43: getfield      #69                 // Field treeItem:Ljavafx/scene/control/TreeItem;
      46: invokevirtual #76                 // Method javafx/scene/control/TreeItem.graphicProperty:()Ljavafx/beans/property/ObjectProperty;
      49: aload_0
      50: getfield      #6                  // Field graphicListener:Ljavafx/beans/InvalidationListener;
      53: invokevirtual #78                 // Method javafx/beans/property/ObjectProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
      56: return

  private javafx.scene.control.TreeTableView<T> getTreeTableView();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       4: checkcast     #21                 // class javafx/scene/control/TreeTableRow
       7: invokevirtual #22                 // Method javafx/scene/control/TreeTableRow.getTreeTableView:()Ljavafx/scene/control/TreeTableView;
      10: areturn

  private void updateDisclosureNodeAndGraphic();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       4: checkcast     #21                 // class javafx/scene/control/TreeTableRow
       7: invokevirtual #79                 // Method javafx/scene/control/TreeTableRow.isEmpty:()Z
      10: ifeq          28
      13: aload_0
      14: invokevirtual #49                 // Method getChildren:()Ljavafx/collections/ObservableList;
      17: aload_0
      18: getfield      #80                 // Field graphic:Ljavafx/scene/Node;
      21: invokeinterface #81,  2           // InterfaceMethod javafx/collections/ObservableList.remove:(Ljava/lang/Object;)Z
      26: pop
      27: return
      28: aload_0
      29: invokevirtual #82                 // Method graphicProperty:()Ljavafx/beans/property/ObjectProperty;
      32: astore_1
      33: aload_1
      34: ifnonnull     41
      37: aconst_null
      38: goto          48
      41: aload_1
      42: invokevirtual #83                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      45: checkcast     #84                 // class javafx/scene/Node
      48: astore_2
      49: aload_2
      50: ifnull        104
      53: aload_2
      54: aload_0
      55: getfield      #80                 // Field graphic:Ljavafx/scene/Node;
      58: if_acmpeq     75
      61: aload_0
      62: invokevirtual #49                 // Method getChildren:()Ljavafx/collections/ObservableList;
      65: aload_0
      66: getfield      #80                 // Field graphic:Ljavafx/scene/Node;
      69: invokeinterface #81,  2           // InterfaceMethod javafx/collections/ObservableList.remove:(Ljava/lang/Object;)Z
      74: pop
      75: aload_0
      76: invokevirtual #49                 // Method getChildren:()Ljavafx/collections/ObservableList;
      79: aload_2
      80: invokeinterface #85,  2           // InterfaceMethod javafx/collections/ObservableList.contains:(Ljava/lang/Object;)Z
      85: ifne          104
      88: aload_0
      89: invokevirtual #49                 // Method getChildren:()Ljavafx/collections/ObservableList;
      92: aload_2
      93: invokeinterface #86,  2           // InterfaceMethod javafx/collections/ObservableList.add:(Ljava/lang/Object;)Z
      98: pop
      99: aload_0
     100: aload_2
     101: putfield      #80                 // Field graphic:Ljavafx/scene/Node;
     104: aload_0
     105: invokevirtual #20                 // Method getSkinnable:()Ljavafx/scene/control/Control;
     108: checkcast     #21                 // class javafx/scene/control/TreeTableRow
     111: invokevirtual #68                 // Method javafx/scene/control/TreeTableRow.getDisclosureNode:()Ljavafx/scene/Node;
     114: astore_3
     115: aload_3
     116: ifnull        208
     119: aload_0
     120: getfield      #69                 // Field treeItem:Ljavafx/scene/control/TreeItem;
     123: ifnull        140
     126: aload_0
     127: getfield      #69                 // Field treeItem:Ljavafx/scene/control/TreeItem;
     130: invokevirtual #70                 // Method javafx/scene/control/TreeItem.isLeaf:()Z
     133: ifne          140
     136: iconst_1
     137: goto          141
     140: iconst_0
     141: istore        4
     143: aload_3
     144: iload         4
     146: invokevirtual #87                 // Method javafx/scene/Node.setVisible:(Z)V
     149: iload         4
     151: ifne          168
     154: aload_0
     155: invokevirtual #49                 // Method getChildren:()Ljavafx/collections/ObservableList;
     158: aload_3
     159: invokeinterface #81,  2           // InterfaceMethod javafx/collections/ObservableList.remove:(Ljava/lang/Object;)Z
     164: pop
     165: goto          197
     168: aload_3
     169: invokevirtual #88                 // Method javafx/scene/Node.getParent:()Ljavafx/scene/Parent;
     172: ifnonnull     193
     175: aload_0
     176: invokevirtual #49                 // Method getChildren:()Ljavafx/collections/ObservableList;
     179: aload_3
     180: invokeinterface #86,  2           // InterfaceMethod javafx/collections/ObservableList.add:(Ljava/lang/Object;)Z
     185: pop
     186: aload_3
     187: invokevirtual #89                 // Method javafx/scene/Node.toFront:()V
     190: goto          197
     193: aload_3
     194: invokevirtual #90                 // Method javafx/scene/Node.toBack:()V
     197: aload_3
     198: invokevirtual #53                 // Method javafx/scene/Node.getScene:()Ljavafx/scene/Scene;
     201: ifnull        208
     204: aload_3
     205: invokevirtual #91                 // Method javafx/scene/Node.applyCss:()V
     208: return

  private void updateTableViewSkin();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       4: checkcast     #21                 // class javafx/scene/control/TreeTableRow
       7: invokevirtual #22                 // Method javafx/scene/control/TreeTableRow.getTreeTableView:()Ljavafx/scene/control/TreeTableView;
      10: astore_1
      11: aload_1
      12: ifnull        36
      15: aload_1
      16: invokevirtual #92                 // Method javafx/scene/control/TreeTableView.getSkin:()Ljavafx/scene/control/Skin;
      19: instanceof    #93                 // class javafx/scene/control/skin/TreeTableViewSkin
      22: ifeq          36
      25: aload_0
      26: aload_1
      27: invokevirtual #92                 // Method javafx/scene/control/TreeTableView.getSkin:()Ljavafx/scene/control/Skin;
      30: checkcast     #93                 // class javafx/scene/control/skin/TreeTableViewSkin
      33: putfield      #94                 // Field treeTableViewSkin:Ljavafx/scene/control/skin/TreeTableViewSkin;
      36: return

  public static java.util.List<javafx.css.CssMetaData<? extends javafx.css.Styleable, ?>> getClassCssMetaData();
    Code:
       0: invokestatic  #95                 // Method javafx/scene/control/skin/TreeTableRowSkin$StyleableProperties.access$200:()Ljava/util/List;
       3: areturn

  public java.util.List<javafx.css.CssMetaData<? extends javafx.css.Styleable, ?>> getCssMetaData();
    Code:
       0: invokestatic  #96                 // Method getClassCssMetaData:()Ljava/util/List;
       3: areturn

  protected java.lang.Object queryAccessibleAttribute(javafx.scene.AccessibleAttribute, java.lang.Object...);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       4: checkcast     #21                 // class javafx/scene/control/TreeTableRow
       7: invokevirtual #22                 // Method javafx/scene/control/TreeTableRow.getTreeTableView:()Ljavafx/scene/control/TreeTableView;
      10: astore_3
      11: getstatic     #97                 // Field javafx/scene/control/skin/TreeTableRowSkin$3.$SwitchMap$javafx$scene$AccessibleAttribute:[I
      14: aload_1
      15: invokevirtual #98                 // Method javafx/scene/AccessibleAttribute.ordinal:()I
      18: iaload
      19: tableswitch   { // 1 to 3
                     1: 44
                     2: 171
                     3: 220
               default: 282
          }
      44: new           #99                 // class java/util/ArrayList
      47: dup
      48: invokespecial #100                // Method java/util/ArrayList."<init>":()V
      51: astore        4
      53: aload_0
      54: invokevirtual #20                 // Method getSkinnable:()Ljavafx/scene/control/Control;
      57: checkcast     #21                 // class javafx/scene/control/TreeTableRow
      60: invokevirtual #101                // Method javafx/scene/control/TreeTableRow.getIndex:()I
      63: istore        5
      65: aload_3
      66: invokevirtual #102                // Method javafx/scene/control/TreeTableView.getSelectionModel:()Ljavafx/scene/control/TreeTableView$TreeTableViewSelectionModel;
      69: invokevirtual #103                // Method javafx/scene/control/TreeTableView$TreeTableViewSelectionModel.getSelectedCells:()Ljavafx/collections/ObservableList;
      72: invokeinterface #104,  1          // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
      77: astore        6
      79: aload         6
      81: invokeinterface #105,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      86: ifeq          171
      89: aload         6
      91: invokeinterface #106,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      96: checkcast     #107                // class javafx/scene/control/TreeTablePosition
      99: astore        7
     101: aload         7
     103: invokevirtual #108                // Method javafx/scene/control/TreeTablePosition.getRow:()I
     106: iload         5
     108: if_icmpne     165
     111: aload         7
     113: invokevirtual #109                // Method javafx/scene/control/TreeTablePosition.getTableColumn:()Ljavafx/scene/control/TreeTableColumn;
     116: astore        8
     118: aload         8
     120: ifnonnull     130
     123: aload_3
     124: iconst_0
     125: invokevirtual #110                // Method javafx/scene/control/TreeTableView.getVisibleLeafColumn:(I)Ljavafx/scene/control/TreeTableColumn;
     128: astore        8
     130: aload_0
     131: getfield      #111                // Field cellsMap:Ljava/util/WeakHashMap;
     134: aload         8
     136: invokevirtual #112                // Method java/util/WeakHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     139: checkcast     #113                // class java/lang/ref/Reference
     142: invokevirtual #114                // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
     145: checkcast     #58                 // class javafx/scene/control/TreeTableCell
     148: astore        9
     150: aload         9
     152: ifnull        165
     155: aload         4
     157: aload         9
     159: invokeinterface #115,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     164: pop
     165: aload         4
     167: invokestatic  #116                // Method javafx/collections/FXCollections.observableArrayList:(Ljava/util/Collection;)Ljavafx/collections/ObservableList;
     170: areturn
     171: aload_2
     172: iconst_1
     173: aaload
     174: checkcast     #117                // class java/lang/Integer
     177: invokevirtual #118                // Method java/lang/Integer.intValue:()I
     180: istore        4
     182: aload_3
     183: iload         4
     185: invokevirtual #110                // Method javafx/scene/control/TreeTableView.getVisibleLeafColumn:(I)Ljavafx/scene/control/TreeTableColumn;
     188: astore        5
     190: aload_0
     191: getfield      #111                // Field cellsMap:Ljava/util/WeakHashMap;
     194: aload         5
     196: invokevirtual #119                // Method java/util/WeakHashMap.containsKey:(Ljava/lang/Object;)Z
     199: ifeq          218
     202: aload_0
     203: getfield      #111                // Field cellsMap:Ljava/util/WeakHashMap;
     206: aload         5
     208: invokevirtual #112                // Method java/util/WeakHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     211: checkcast     #113                // class java/lang/ref/Reference
     214: invokevirtual #114                // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
     217: areturn
     218: aconst_null
     219: areturn
     220: aload_3
     221: invokevirtual #120                // Method javafx/scene/control/TreeTableView.getFocusModel:()Ljavafx/scene/control/TreeTableView$TreeTableViewFocusModel;
     224: astore        4
     226: aload         4
     228: invokevirtual #121                // Method javafx/scene/control/TreeTableView$TreeTableViewFocusModel.getFocusedCell:()Ljavafx/scene/control/TreeTablePosition;
     231: astore        5
     233: aload         5
     235: invokevirtual #109                // Method javafx/scene/control/TreeTablePosition.getTableColumn:()Ljavafx/scene/control/TreeTableColumn;
     238: astore        6
     240: aload         6
     242: ifnonnull     252
     245: aload_3
     246: iconst_0
     247: invokevirtual #110                // Method javafx/scene/control/TreeTableView.getVisibleLeafColumn:(I)Ljavafx/scene/control/TreeTableColumn;
     250: astore        6
     252: aload_0
     253: getfield      #111                // Field cellsMap:Ljava/util/WeakHashMap;
     256: aload         6
     258: invokevirtual #119                // Method java/util/WeakHashMap.containsKey:(Ljava/lang/Object;)Z
     261: ifeq          280
     264: aload_0
     265: getfield      #111                // Field cellsMap:Ljava/util/WeakHashMap;
     268: aload         6
     270: invokevirtual #112                // Method java/util/WeakHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     273: checkcast     #113                // class java/lang/ref/Reference
     276: invokevirtual #114                // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
     279: areturn
     280: aconst_null
     281: areturn
     282: aload_0
     283: aload_1
     284: aload_2
     285: invokespecial #122                // Method javafx/scene/control/skin/TableRowSkinBase.queryAccessibleAttribute:(Ljavafx/scene/AccessibleAttribute;[Ljava/lang/Object;)Ljava/lang/Object;
     288: areturn

  int getIndentationLevel(javafx.scene.control.IndexedCell);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class javafx/scene/control/TreeTableRow
       5: invokevirtual #123                // Method getIndentationLevel:(Ljavafx/scene/control/TreeTableRow;)I
       8: ireturn

  protected javafx.scene.control.TableColumnBase getTableColumn(javafx.scene.control.IndexedCell);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #58                 // class javafx/scene/control/TreeTableCell
       5: invokevirtual #124                // Method getTableColumn:(Ljavafx/scene/control/TreeTableCell;)Ljavafx/scene/control/TreeTableColumn;
       8: areturn

  protected void updateCell(javafx.scene.control.IndexedCell, javafx.scene.control.IndexedCell);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #58                 // class javafx/scene/control/TreeTableCell
       5: aload_2
       6: checkcast     #21                 // class javafx/scene/control/TreeTableRow
       9: invokevirtual #125                // Method updateCell:(Ljavafx/scene/control/TreeTableCell;Ljavafx/scene/control/TreeTableRow;)V
      12: return

  protected javafx.scene.control.IndexedCell createCell(javafx.scene.control.TableColumnBase);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #126                // Method createCell:(Ljavafx/scene/control/TableColumnBase;)Ljavafx/scene/control/TreeTableCell;
       5: areturn

  private void lambda$new$6(javafx.beans.Observable);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field disclosureNodeDirty:Z
       5: aload_0
       6: invokevirtual #20                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       9: checkcast     #21                 // class javafx/scene/control/TreeTableRow
      12: invokevirtual #127                // Method javafx/scene/control/TreeTableRow.requestLayout:()V
      15: return

  private static void lambda$setupTreeTableViewListeners$5(javafx.scene.control.TreeTableView, javafx.beans.value.ObservableValue);
    Code:
       0: aload_0
       1: invokevirtual #128                // Method javafx/scene/control/TreeTableView.requestLayout:()V
       4: return

  private void lambda$setupTreeTableViewListeners$4(javafx.beans.property.DoubleProperty, javafx.beans.value.ObservableValue);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #31                 // Method javafx/beans/property/DoubleProperty.get:()D
       5: putfield      #32                 // Field fixedCellSize:D
       8: aload_0
       9: aload_0
      10: getfield      #32                 // Field fixedCellSize:D
      13: dconst_0
      14: dcmpl
      15: ifle          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: putfield      #33                 // Field fixedCellSizeEnabled:Z
      26: return

  private void lambda$setupTreeTableViewListeners$3(javafx.beans.value.ObservableValue);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #129                // Field isDirty:Z
       5: aload_0
       6: invokevirtual #20                 // Method getSkinnable:()Ljavafx/scene/control/Control;
       9: checkcast     #21                 // class javafx/scene/control/TreeTableRow
      12: invokevirtual #127                // Method javafx/scene/control/TreeTableRow.requestLayout:()V
      15: return

  private void lambda$new$2(javafx.beans.value.ObservableValue);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method updateTreeItem:()V
       4: return

  private void lambda$new$1(javafx.beans.value.ObservableValue);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #130                // Field updateCells:Z
       5: return

  private void lambda$new$0(javafx.beans.value.ObservableValue);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method updateTableViewSkin:()V
       4: return

  static void access$000(javafx.scene.control.skin.TreeTableRowSkin);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method setupTreeTableViewListeners:()V
       4: return
}
