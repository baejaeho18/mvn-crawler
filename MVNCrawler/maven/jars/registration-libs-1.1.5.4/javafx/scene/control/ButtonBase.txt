Compiled from "ButtonBase.java"
public abstract class javafx.scene.control.ButtonBase extends javafx.scene.control.Labeled {
  private javafx.beans.property.ReadOnlyBooleanWrapper armed;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<javafx.event.ActionEvent>> onAction;

  private static final javafx.css.PseudoClass ARMED_PSEUDOCLASS_STATE;

  public javafx.scene.control.ButtonBase();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method javafx/scene/control/Labeled."<init>":()V
       4: aload_0
       5: new           #4                  // class javafx/scene/control/ButtonBase$1
       8: dup
       9: aload_0
      10: invokespecial #5                  // Method javafx/scene/control/ButtonBase$1."<init>":(Ljavafx/scene/control/ButtonBase;)V
      13: putfield      #6                  // Field armed:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      16: aload_0
      17: new           #7                  // class javafx/scene/control/ButtonBase$2
      20: dup
      21: aload_0
      22: invokespecial #8                  // Method javafx/scene/control/ButtonBase$2."<init>":(Ljavafx/scene/control/ButtonBase;)V
      25: putfield      #9                  // Field onAction:Ljavafx/beans/property/ObjectProperty;
      28: return

  public javafx.scene.control.ButtonBase(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method javafx/scene/control/Labeled."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: new           #4                  // class javafx/scene/control/ButtonBase$1
       9: dup
      10: aload_0
      11: invokespecial #5                  // Method javafx/scene/control/ButtonBase$1."<init>":(Ljavafx/scene/control/ButtonBase;)V
      14: putfield      #6                  // Field armed:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      17: aload_0
      18: new           #7                  // class javafx/scene/control/ButtonBase$2
      21: dup
      22: aload_0
      23: invokespecial #8                  // Method javafx/scene/control/ButtonBase$2."<init>":(Ljavafx/scene/control/ButtonBase;)V
      26: putfield      #9                  // Field onAction:Ljavafx/beans/property/ObjectProperty;
      29: return

  public javafx.scene.control.ButtonBase(java.lang.String, javafx.scene.Node);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #11                 // Method javafx/scene/control/Labeled."<init>":(Ljava/lang/String;Ljavafx/scene/Node;)V
       6: aload_0
       7: new           #4                  // class javafx/scene/control/ButtonBase$1
      10: dup
      11: aload_0
      12: invokespecial #5                  // Method javafx/scene/control/ButtonBase$1."<init>":(Ljavafx/scene/control/ButtonBase;)V
      15: putfield      #6                  // Field armed:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      18: aload_0
      19: new           #7                  // class javafx/scene/control/ButtonBase$2
      22: dup
      23: aload_0
      24: invokespecial #8                  // Method javafx/scene/control/ButtonBase$2."<init>":(Ljavafx/scene/control/ButtonBase;)V
      27: putfield      #9                  // Field onAction:Ljavafx/beans/property/ObjectProperty;
      30: return

  public final javafx.beans.property.ReadOnlyBooleanProperty armedProperty();
    Code:
       0: aload_0
       1: getfield      #6                  // Field armed:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: invokevirtual #12                 // Method javafx/beans/property/ReadOnlyBooleanWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyBooleanProperty;
       7: areturn

  private void setArmed(boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field armed:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: iload_1
       5: invokevirtual #13                 // Method javafx/beans/property/ReadOnlyBooleanWrapper.set:(Z)V
       8: return

  public final boolean isArmed();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method armedProperty:()Ljavafx/beans/property/ReadOnlyBooleanProperty;
       4: invokevirtual #15                 // Method javafx/beans/property/ReadOnlyBooleanProperty.get:()Z
       7: ireturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<javafx.event.ActionEvent>> onActionProperty();
    Code:
       0: aload_0
       1: getfield      #9                  // Field onAction:Ljavafx/beans/property/ObjectProperty;
       4: areturn

  public final void setOnAction(javafx.event.EventHandler<javafx.event.ActionEvent>);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method onActionProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #17                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<javafx.event.ActionEvent> getOnAction();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method onActionProperty:()Ljavafx/beans/property/ObjectProperty;
       4: invokevirtual #18                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
       7: checkcast     #19                 // class javafx/event/EventHandler
      10: areturn

  public void arm();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #20                 // Method setArmed:(Z)V
       5: return

  public void disarm();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #20                 // Method setArmed:(Z)V
       5: return

  public abstract void fire();

  public void executeAccessibleAction(javafx.scene.AccessibleAction, java.lang.Object...);
    Code:
       0: getstatic     #21                 // Field javafx/scene/control/ButtonBase$3.$SwitchMap$javafx$scene$AccessibleAction:[I
       3: aload_1
       4: invokevirtual #22                 // Method javafx/scene/AccessibleAction.ordinal:()I
       7: iaload
       8: lookupswitch  { // 1
                     1: 28
               default: 35
          }
      28: aload_0
      29: invokevirtual #23                 // Method fire:()V
      32: goto          44
      35: aload_0
      36: aload_1
      37: iconst_0
      38: anewarray     #24                 // class java/lang/Object
      41: invokespecial #25                 // Method javafx/scene/control/Labeled.executeAccessibleAction:(Ljavafx/scene/AccessibleAction;[Ljava/lang/Object;)V
      44: return

  static javafx.css.PseudoClass access$000();
    Code:
       0: getstatic     #2                  // Field ARMED_PSEUDOCLASS_STATE:Ljavafx/css/PseudoClass;
       3: areturn

  static void access$100(javafx.scene.control.ButtonBase, javafx.event.EventType, javafx.event.EventHandler);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1                  // Method setEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
       6: return

  static {};
    Code:
       0: ldc           #26                 // String armed
       2: invokestatic  #27                 // Method javafx/css/PseudoClass.getPseudoClass:(Ljava/lang/String;)Ljavafx/css/PseudoClass;
       5: putstatic     #2                  // Field ARMED_PSEUDOCLASS_STATE:Ljavafx/css/PseudoClass;
       8: return
}
