Compiled from "TableSelectionModel.java"
public abstract class javafx.scene.control.TableSelectionModel<T> extends javafx.scene.control.MultipleSelectionModelBase<T> {
  private javafx.beans.property.BooleanProperty cellSelectionEnabled;

  public javafx.scene.control.TableSelectionModel();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javafx/scene/control/MultipleSelectionModelBase."<init>":()V
       4: aload_0
       5: new           #2                  // class javafx/beans/property/SimpleBooleanProperty
       8: dup
       9: aload_0
      10: ldc           #3                  // String cellSelectionEnabled
      12: invokespecial #4                  // Method javafx/beans/property/SimpleBooleanProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      15: putfield      #5                  // Field cellSelectionEnabled:Ljavafx/beans/property/BooleanProperty;
      18: return

  public abstract boolean isSelected(int, javafx.scene.control.TableColumnBase<T, ?>);

  public abstract void select(int, javafx.scene.control.TableColumnBase<T, ?>);

  public abstract void clearAndSelect(int, javafx.scene.control.TableColumnBase<T, ?>);

  public abstract void clearSelection(int, javafx.scene.control.TableColumnBase<T, ?>);

  public abstract void selectLeftCell();

  public abstract void selectRightCell();

  public abstract void selectAboveCell();

  public abstract void selectBelowCell();

  public abstract void selectRange(int, javafx.scene.control.TableColumnBase<T, ?>, int, javafx.scene.control.TableColumnBase<T, ?>);

  public final javafx.beans.property.BooleanProperty cellSelectionEnabledProperty();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cellSelectionEnabled:Ljavafx/beans/property/BooleanProperty;
       4: areturn

  public final void setCellSelectionEnabled(boolean);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method cellSelectionEnabledProperty:()Ljavafx/beans/property/BooleanProperty;
       4: iload_1
       5: invokevirtual #7                  // Method javafx/beans/property/BooleanProperty.set:(Z)V
       8: return

  public final boolean isCellSelectionEnabled();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cellSelectionEnabled:Ljavafx/beans/property/BooleanProperty;
       4: ifnonnull     11
       7: iconst_0
       8: goto          18
      11: aload_0
      12: getfield      #5                  // Field cellSelectionEnabled:Ljavafx/beans/property/BooleanProperty;
      15: invokevirtual #8                  // Method javafx/beans/property/BooleanProperty.get:()Z
      18: ireturn

  public void selectNext();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method javafx/scene/control/MultipleSelectionModelBase.selectNext:()V
       4: return

  public void selectPrevious();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method javafx/scene/control/MultipleSelectionModelBase.selectPrevious:()V
       4: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method javafx/scene/control/MultipleSelectionModelBase.isEmpty:()Z
       4: ireturn

  public boolean isSelected(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #12                 // Method javafx/scene/control/MultipleSelectionModelBase.isSelected:(I)Z
       5: ireturn

  public void clearSelection();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method javafx/scene/control/MultipleSelectionModelBase.clearSelection:()V
       4: return

  public void clearSelection(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #14                 // Method javafx/scene/control/MultipleSelectionModelBase.clearSelection:(I)V
       5: return

  public void selectLast();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method javafx/scene/control/MultipleSelectionModelBase.selectLast:()V
       4: return

  public void selectFirst();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method javafx/scene/control/MultipleSelectionModelBase.selectFirst:()V
       4: return

  public void selectAll();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method javafx/scene/control/MultipleSelectionModelBase.selectAll:()V
       4: return

  public void selectIndices(int, int[]);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #18                 // Method javafx/scene/control/MultipleSelectionModelBase.selectIndices:(I[I)V
       6: return

  public void select(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method javafx/scene/control/MultipleSelectionModelBase.select:(Ljava/lang/Object;)V
       5: return

  public void select(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #20                 // Method javafx/scene/control/MultipleSelectionModelBase.select:(I)V
       5: return

  public void clearAndSelect(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #21                 // Method javafx/scene/control/MultipleSelectionModelBase.clearAndSelect:(I)V
       5: return

  public javafx.collections.ObservableList getSelectedItems();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method javafx/scene/control/MultipleSelectionModelBase.getSelectedItems:()Ljavafx/collections/ObservableList;
       4: areturn

  public javafx.collections.ObservableList getSelectedIndices();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method javafx/scene/control/MultipleSelectionModelBase.getSelectedIndices:()Ljavafx/collections/ObservableList;
       4: areturn
}
