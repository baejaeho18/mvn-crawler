Compiled from "PieChart.java"
public final class javafx.scene.chart.PieChart$Data {
  private javafx.scene.text.Text textNode;

  private javafx.scene.chart.PieChart$Data next;

  private int defaultColorIndex;

  private javafx.beans.property.ReadOnlyObjectWrapper<javafx.scene.chart.PieChart> chart;

  private javafx.beans.property.StringProperty name;

  private javafx.beans.property.DoubleProperty pieValue;

  private javafx.beans.property.DoubleProperty currentPieValue;

  private javafx.beans.property.DoubleProperty radiusMultiplier;

  private javafx.beans.property.ReadOnlyObjectWrapper<javafx.scene.Node> node;

  public final javafx.scene.chart.PieChart getChart();
    Code:
       0: aload_0
       1: getfield      #12                 // Field chart:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #13                 // Method javafx/beans/property/ReadOnlyObjectWrapper.getValue:()Ljava/lang/Object;
       7: checkcast     #14                 // class javafx/scene/chart/PieChart
      10: areturn

  private void setChart(javafx.scene.chart.PieChart);
    Code:
       0: aload_0
       1: getfield      #12                 // Field chart:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: aload_1
       5: invokevirtual #15                 // Method javafx/beans/property/ReadOnlyObjectWrapper.setValue:(Ljava/lang/Object;)V
       8: return

  public final javafx.beans.property.ReadOnlyObjectProperty<javafx.scene.chart.PieChart> chartProperty();
    Code:
       0: aload_0
       1: getfield      #12                 // Field chart:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #16                 // Method javafx/beans/property/ReadOnlyObjectWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       7: areturn

  public final void setName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #17                 // Field name:Ljavafx/beans/property/StringProperty;
       4: aload_1
       5: invokevirtual #18                 // Method javafx/beans/property/StringProperty.setValue:(Ljava/lang/String;)V
       8: return

  public final java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #17                 // Field name:Ljavafx/beans/property/StringProperty;
       4: invokevirtual #19                 // Method javafx/beans/property/StringProperty.getValue:()Ljava/lang/String;
       7: areturn

  public final javafx.beans.property.StringProperty nameProperty();
    Code:
       0: aload_0
       1: getfield      #17                 // Field name:Ljavafx/beans/property/StringProperty;
       4: areturn

  public final double getPieValue();
    Code:
       0: aload_0
       1: getfield      #20                 // Field pieValue:Ljavafx/beans/property/DoubleProperty;
       4: invokevirtual #21                 // Method javafx/beans/property/DoubleProperty.getValue:()Ljava/lang/Double;
       7: invokevirtual #22                 // Method java/lang/Double.doubleValue:()D
      10: dreturn

  public final void setPieValue(double);
    Code:
       0: aload_0
       1: getfield      #20                 // Field pieValue:Ljavafx/beans/property/DoubleProperty;
       4: dload_1
       5: invokestatic  #23                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       8: invokevirtual #24                 // Method javafx/beans/property/DoubleProperty.setValue:(Ljava/lang/Number;)V
      11: return

  public final javafx.beans.property.DoubleProperty pieValueProperty();
    Code:
       0: aload_0
       1: getfield      #20                 // Field pieValue:Ljavafx/beans/property/DoubleProperty;
       4: areturn

  private double getCurrentPieValue();
    Code:
       0: aload_0
       1: getfield      #25                 // Field currentPieValue:Ljavafx/beans/property/DoubleProperty;
       4: invokevirtual #21                 // Method javafx/beans/property/DoubleProperty.getValue:()Ljava/lang/Double;
       7: invokevirtual #22                 // Method java/lang/Double.doubleValue:()D
      10: dreturn

  private void setCurrentPieValue(double);
    Code:
       0: aload_0
       1: getfield      #25                 // Field currentPieValue:Ljavafx/beans/property/DoubleProperty;
       4: dload_1
       5: invokestatic  #23                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       8: invokevirtual #24                 // Method javafx/beans/property/DoubleProperty.setValue:(Ljava/lang/Number;)V
      11: return

  private javafx.beans.property.DoubleProperty currentPieValueProperty();
    Code:
       0: aload_0
       1: getfield      #25                 // Field currentPieValue:Ljavafx/beans/property/DoubleProperty;
       4: areturn

  private double getRadiusMultiplier();
    Code:
       0: aload_0
       1: getfield      #26                 // Field radiusMultiplier:Ljavafx/beans/property/DoubleProperty;
       4: invokevirtual #21                 // Method javafx/beans/property/DoubleProperty.getValue:()Ljava/lang/Double;
       7: invokevirtual #22                 // Method java/lang/Double.doubleValue:()D
      10: dreturn

  private void setRadiusMultiplier(double);
    Code:
       0: aload_0
       1: getfield      #26                 // Field radiusMultiplier:Ljavafx/beans/property/DoubleProperty;
       4: dload_1
       5: invokestatic  #23                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       8: invokevirtual #24                 // Method javafx/beans/property/DoubleProperty.setValue:(Ljava/lang/Number;)V
      11: return

  private javafx.beans.property.DoubleProperty radiusMultiplierProperty();
    Code:
       0: aload_0
       1: getfield      #26                 // Field radiusMultiplier:Ljavafx/beans/property/DoubleProperty;
       4: areturn

  public javafx.scene.Node getNode();
    Code:
       0: aload_0
       1: getfield      #27                 // Field node:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #13                 // Method javafx/beans/property/ReadOnlyObjectWrapper.getValue:()Ljava/lang/Object;
       7: checkcast     #28                 // class javafx/scene/Node
      10: areturn

  private void setNode(javafx.scene.Node);
    Code:
       0: aload_0
       1: getfield      #27                 // Field node:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: aload_1
       5: invokevirtual #15                 // Method javafx/beans/property/ReadOnlyObjectWrapper.setValue:(Ljava/lang/Object;)V
       8: return

  public javafx.beans.property.ReadOnlyObjectProperty<javafx.scene.Node> nodeProperty();
    Code:
       0: aload_0
       1: getfield      #27                 // Field node:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #16                 // Method javafx/beans/property/ReadOnlyObjectWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       7: areturn

  public javafx.scene.chart.PieChart$Data(java.lang.String, double);
    Code:
       0: aload_0
       1: invokespecial #29                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #30                 // class javafx/scene/text/Text
       8: dup
       9: invokespecial #31                 // Method javafx/scene/text/Text."<init>":()V
      12: putfield      #11                 // Field textNode:Ljavafx/scene/text/Text;
      15: aload_0
      16: aconst_null
      17: putfield      #2                  // Field next:Ljavafx/scene/chart/PieChart$Data;
      20: aload_0
      21: new           #32                 // class javafx/beans/property/ReadOnlyObjectWrapper
      24: dup
      25: aload_0
      26: ldc           #33                 // String chart
      28: invokespecial #34                 // Method javafx/beans/property/ReadOnlyObjectWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      31: putfield      #12                 // Field chart:Ljavafx/beans/property/ReadOnlyObjectWrapper;
      34: aload_0
      35: new           #35                 // class javafx/scene/chart/PieChart$Data$1
      38: dup
      39: aload_0
      40: invokespecial #36                 // Method javafx/scene/chart/PieChart$Data$1."<init>":(Ljavafx/scene/chart/PieChart$Data;)V
      43: putfield      #17                 // Field name:Ljavafx/beans/property/StringProperty;
      46: aload_0
      47: new           #37                 // class javafx/scene/chart/PieChart$Data$2
      50: dup
      51: aload_0
      52: invokespecial #38                 // Method javafx/scene/chart/PieChart$Data$2."<init>":(Ljavafx/scene/chart/PieChart$Data;)V
      55: putfield      #20                 // Field pieValue:Ljavafx/beans/property/DoubleProperty;
      58: aload_0
      59: new           #39                 // class javafx/beans/property/SimpleDoubleProperty
      62: dup
      63: aload_0
      64: ldc           #40                 // String currentPieValue
      66: invokespecial #41                 // Method javafx/beans/property/SimpleDoubleProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      69: putfield      #25                 // Field currentPieValue:Ljavafx/beans/property/DoubleProperty;
      72: aload_0
      73: new           #39                 // class javafx/beans/property/SimpleDoubleProperty
      76: dup
      77: aload_0
      78: ldc           #42                 // String radiusMultiplier
      80: invokespecial #41                 // Method javafx/beans/property/SimpleDoubleProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      83: putfield      #26                 // Field radiusMultiplier:Ljavafx/beans/property/DoubleProperty;
      86: aload_0
      87: new           #32                 // class javafx/beans/property/ReadOnlyObjectWrapper
      90: dup
      91: aload_0
      92: ldc           #43                 // String node
      94: invokespecial #34                 // Method javafx/beans/property/ReadOnlyObjectWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      97: putfield      #27                 // Field node:Ljavafx/beans/property/ReadOnlyObjectWrapper;
     100: aload_0
     101: aload_1
     102: invokevirtual #44                 // Method setName:(Ljava/lang/String;)V
     105: aload_0
     106: dload_2
     107: invokevirtual #45                 // Method setPieValue:(D)V
     110: aload_0
     111: getfield      #11                 // Field textNode:Ljavafx/scene/text/Text;
     114: invokevirtual #46                 // Method javafx/scene/text/Text.getStyleClass:()Ljavafx/collections/ObservableList;
     117: iconst_2
     118: anewarray     #47                 // class java/lang/String
     121: dup
     122: iconst_0
     123: ldc           #48                 // String text
     125: aastore
     126: dup
     127: iconst_1
     128: ldc           #49                 // String chart-pie-label
     130: aastore
     131: invokeinterface #50,  2           // InterfaceMethod javafx/collections/ObservableList.addAll:([Ljava/lang/Object;)Z
     136: pop
     137: aload_0
     138: getfield      #11                 // Field textNode:Ljavafx/scene/text/Text;
     141: getstatic     #51                 // Field javafx/scene/AccessibleRole.TEXT:Ljavafx/scene/AccessibleRole;
     144: invokevirtual #52                 // Method javafx/scene/text/Text.setAccessibleRole:(Ljavafx/scene/AccessibleRole;)V
     147: aload_0
     148: getfield      #11                 // Field textNode:Ljavafx/scene/text/Text;
     151: ldc           #53                 // String slice
     153: invokevirtual #54                 // Method javafx/scene/text/Text.setAccessibleRoleDescription:(Ljava/lang/String;)V
     156: aload_0
     157: getfield      #11                 // Field textNode:Ljavafx/scene/text/Text;
     160: invokevirtual #55                 // Method javafx/scene/text/Text.focusTraversableProperty:()Ljavafx/beans/property/BooleanProperty;
     163: invokestatic  #56                 // Method javafx/application/Platform.accessibilityActiveProperty:()Ljavafx/beans/property/ReadOnlyBooleanProperty;
     166: invokevirtual #57                 // Method javafx/beans/property/BooleanProperty.bind:(Ljavafx/beans/value/ObservableValue;)V
     169: aload_0
     170: getfield      #11                 // Field textNode:Ljavafx/scene/text/Text;
     173: invokevirtual #58                 // Method javafx/scene/text/Text.accessibleTextProperty:()Ljavafx/beans/property/ObjectProperty;
     176: new           #59                 // class javafx/scene/chart/PieChart$Data$3
     179: dup
     180: aload_0
     181: invokespecial #60                 // Method javafx/scene/chart/PieChart$Data$3."<init>":(Ljavafx/scene/chart/PieChart$Data;)V
     184: invokevirtual #61                 // Method javafx/beans/property/ObjectProperty.bind:(Ljavafx/beans/value/ObservableValue;)V
     187: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method getName:()Ljava/lang/String;
       4: aload_0
       5: invokevirtual #63                 // Method getPieValue:()D
       8: invokedynamic #64,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;D)Ljava/lang/String;
      13: areturn

  static javafx.scene.text.Text access$600(javafx.scene.chart.PieChart$Data);
    Code:
       0: aload_0
       1: getfield      #11                 // Field textNode:Ljavafx/scene/text/Text;
       4: areturn

  static javafx.beans.property.DoubleProperty access$700(javafx.scene.chart.PieChart$Data);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method currentPieValueProperty:()Ljavafx/beans/property/DoubleProperty;
       4: areturn

  static double access$800(javafx.scene.chart.PieChart$Data);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method getCurrentPieValue:()D
       4: dreturn

  static void access$900(javafx.scene.chart.PieChart$Data, double);
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #8                  // Method setCurrentPieValue:(D)V
       5: return

  static void access$1000(javafx.scene.chart.PieChart$Data, javafx.scene.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method setNode:(Ljavafx/scene/Node;)V
       5: return

  static int access$1100(javafx.scene.chart.PieChart$Data);
    Code:
       0: aload_0
       1: getfield      #6                  // Field defaultColorIndex:I
       4: ireturn

  static javafx.beans.property.DoubleProperty access$1200(javafx.scene.chart.PieChart$Data);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method radiusMultiplierProperty:()Ljavafx/beans/property/DoubleProperty;
       4: areturn

  static double access$1300(javafx.scene.chart.PieChart$Data);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method getRadiusMultiplier:()D
       4: dreturn

  static void access$1400(javafx.scene.chart.PieChart$Data, double);
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #3                  // Method setRadiusMultiplier:(D)V
       5: return

  static javafx.scene.chart.PieChart$Data access$1500(javafx.scene.chart.PieChart$Data);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Ljavafx/scene/chart/PieChart$Data;
       4: areturn

  static javafx.scene.chart.PieChart$Data access$1502(javafx.scene.chart.PieChart$Data, javafx.scene.chart.PieChart$Data);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field next:Ljavafx/scene/chart/PieChart$Data;
       6: areturn

  static void access$1600(javafx.scene.chart.PieChart$Data, javafx.scene.chart.PieChart);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method setChart:(Ljavafx/scene/chart/PieChart;)V
       5: return

  static int access$1102(javafx.scene.chart.PieChart$Data, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #6                  // Field defaultColorIndex:I
       6: ireturn
}
