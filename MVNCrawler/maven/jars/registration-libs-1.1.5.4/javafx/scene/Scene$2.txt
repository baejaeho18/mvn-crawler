Compiled from "Scene.java"
class javafx.scene.Scene$2 implements com.sun.javafx.scene.SceneHelper$SceneAccessor {
  javafx.scene.Scene$2();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void enableInputMethodEvents(javafx.scene.Scene, boolean);
    Code:
       0: aload_1
       1: iload_2
       2: invokevirtual #2                  // Method javafx/scene/Scene.enableInputMethodEvents:(Z)V
       5: return

  public void processKeyEvent(javafx.scene.Scene, javafx.scene.input.KeyEvent);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #3                  // Method javafx/scene/Scene.processKeyEvent:(Ljavafx/scene/input/KeyEvent;)V
       5: return

  public void processMouseEvent(javafx.scene.Scene, javafx.scene.input.MouseEvent);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #4                  // Method javafx/scene/Scene.processMouseEvent:(Ljavafx/scene/input/MouseEvent;)V
       5: return

  public void preferredSize(javafx.scene.Scene);
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method javafx/scene/Scene.preferredSize:()V
       4: return

  public void disposePeer(javafx.scene.Scene);
    Code:
       0: aload_1
       1: invokevirtual #6                  // Method javafx/scene/Scene.disposePeer:()V
       4: return

  public void initPeer(javafx.scene.Scene);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method javafx/scene/Scene.initPeer:()V
       4: return

  public void setWindow(javafx.scene.Scene, javafx.stage.Window);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #8                  // Method javafx/scene/Scene.setWindow:(Ljavafx/stage/Window;)V
       5: return

  public com.sun.javafx.tk.TKScene getPeer(javafx.scene.Scene);
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method javafx/scene/Scene.getPeer:()Lcom/sun/javafx/tk/TKScene;
       4: areturn

  public void setAllowPGAccess(boolean);
    Code:
       0: iload_1
       1: invokestatic  #10                 // Method javafx/scene/Scene.setAllowPGAccess:(Z)V
       4: return

  public void parentEffectiveOrientationInvalidated(javafx.scene.Scene);
    Code:
       0: aload_1
       1: invokestatic  #11                 // Method javafx/scene/Scene.access$200:(Ljavafx/scene/Scene;)V
       4: return

  public javafx.scene.Camera getEffectiveCamera(javafx.scene.Scene);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method javafx/scene/Scene.getEffectiveCamera:()Ljavafx/scene/Camera;
       4: areturn

  public javafx.scene.Scene createPopupScene(javafx.scene.Parent);
    Code:
       0: new           #13                 // class javafx/scene/Scene$2$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #14                 // Method javafx/scene/Scene$2$1."<init>":(Ljavafx/scene/Scene$2;Ljavafx/scene/Parent;)V
       9: areturn

  public void setTransientFocusContainer(javafx.scene.Scene, javafx.scene.Node);
    Code:
       0: aload_1
       1: ifnull        10
       4: aload_1
       5: aload_2
       6: invokestatic  #15                 // Method javafx/scene/Scene.access$302:(Ljavafx/scene/Scene;Ljavafx/scene/Node;)Ljavafx/scene/Node;
       9: pop
      10: return

  public com.sun.glass.ui.Accessible getAccessible(javafx.scene.Scene);
    Code:
       0: aload_1
       1: invokevirtual #16                 // Method javafx/scene/Scene.getAccessible:()Lcom/sun/glass/ui/Accessible;
       4: areturn
}
