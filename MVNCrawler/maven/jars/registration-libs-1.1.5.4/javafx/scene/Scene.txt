Compiled from "Scene.java"
public class javafx.scene.Scene implements javafx.event.EventTarget {
  private double widthSetByUser;

  private double heightSetByUser;

  private boolean sizeInitialized;

  private final boolean depthBuffer;

  private final javafx.scene.SceneAntialiasing antiAliasing;

  private int dirtyBits;

  final java.security.AccessControlContext acc;

  private javafx.scene.Camera defaultCamera;

  private javafx.scene.Node transientFocusContainer;

  private static final int MIN_DIRTY_CAPACITY;

  private static boolean inSynchronizer;

  private static boolean inMousePick;

  private static boolean allowPGAccess;

  private static int pgAccessCount;

  private static final boolean PLATFORM_DRAG_GESTURE_INITIATION;

  private javafx.scene.Node[] dirtyNodes;

  private int dirtyNodesSize;

  private com.sun.javafx.tk.TKScene peer;

  javafx.scene.Scene$ScenePulseListener scenePulseListener;

  private java.util.List<java.lang.Runnable> preLayoutPulseListeners;

  private java.util.List<java.lang.Runnable> postLayoutPulseListeners;

  private javafx.beans.property.ReadOnlyObjectWrapper<javafx.stage.Window> window;

  javafx.scene.Scene$DnDGesture dndGesture;

  javafx.scene.Scene$DragGestureListener dragGestureListener;

  private javafx.beans.property.ReadOnlyDoubleWrapper x;

  private javafx.beans.property.ReadOnlyDoubleWrapper y;

  private javafx.beans.property.ReadOnlyDoubleWrapper width;

  private javafx.beans.property.ReadOnlyDoubleWrapper height;

  private javafx.scene.Scene$TargetWrapper tmpTargetWrapper;

  private javafx.beans.property.ObjectProperty<javafx.scene.Camera> camera;

  private javafx.beans.property.ObjectProperty<javafx.scene.paint.Paint> fill;

  private javafx.beans.property.ObjectProperty<javafx.scene.Parent> root;

  javafx.scene.Parent oldRoot;

  private static com.sun.javafx.tk.TKPulseListener snapshotPulseListener;

  private static java.util.List<java.lang.Runnable> snapshotRunnableListA;

  private static java.util.List<java.lang.Runnable> snapshotRunnableListB;

  private static java.util.List<java.lang.Runnable> snapshotRunnableList;

  private javafx.beans.property.ObjectProperty<javafx.scene.Cursor> cursor;

  private final javafx.collections.ObservableList<java.lang.String> stylesheets;

  private javafx.beans.property.ObjectProperty<java.lang.String> userAgentStylesheet;

  private com.sun.javafx.perf.PerformanceTracker tracker;

  private static final java.lang.Object trackerMonitor;

  private javafx.scene.Scene$MouseHandler mouseHandler;

  private javafx.scene.Scene$ClickGenerator clickGenerator;

  private javafx.geometry.Point2D cursorScreenPos;

  private javafx.geometry.Point2D cursorScenePos;

  private final javafx.scene.Scene$TouchGesture scrollGesture;

  private final javafx.scene.Scene$TouchGesture zoomGesture;

  private final javafx.scene.Scene$TouchGesture rotateGesture;

  private final javafx.scene.Scene$TouchGesture swipeGesture;

  private javafx.scene.Scene$TouchMap touchMap;

  private javafx.scene.input.TouchEvent nextTouchEvent;

  private javafx.scene.input.TouchPoint[] touchPoints;

  private int touchEventSetId;

  private int touchPointIndex;

  private java.util.Map<java.lang.Integer, javafx.event.EventTarget> touchTargets;

  private javafx.scene.Scene$KeyHandler keyHandler;

  private boolean focusDirty;

  private com.sun.javafx.scene.traversal.TopMostTraversalEngine traversalEngine;

  private javafx.scene.Node oldFocusOwner;

  private javafx.beans.property.ReadOnlyObjectWrapper<javafx.scene.Node> focusOwner;

  java.lang.Runnable testPulseListener;

  private java.util.List<javafx.scene.LightBase> lights;

  private javafx.beans.property.ObjectProperty<javafx.event.EventDispatcher> eventDispatcher;

  private com.sun.javafx.scene.SceneEventDispatcher internalEventDispatcher;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.ContextMenuEvent>> onContextMenuRequested;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>> onMouseClicked;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>> onMouseDragged;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>> onMouseEntered;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>> onMouseExited;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>> onMouseMoved;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>> onMousePressed;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>> onMouseReleased;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>> onDragDetected;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseDragEvent>> onMouseDragOver;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseDragEvent>> onMouseDragReleased;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseDragEvent>> onMouseDragEntered;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseDragEvent>> onMouseDragExited;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.ScrollEvent>> onScrollStarted;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.ScrollEvent>> onScroll;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.ScrollEvent>> onScrollFinished;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.RotateEvent>> onRotationStarted;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.RotateEvent>> onRotate;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.RotateEvent>> onRotationFinished;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.ZoomEvent>> onZoomStarted;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.ZoomEvent>> onZoom;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.ZoomEvent>> onZoomFinished;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.SwipeEvent>> onSwipeUp;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.SwipeEvent>> onSwipeDown;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.SwipeEvent>> onSwipeLeft;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.SwipeEvent>> onSwipeRight;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.TouchEvent>> onTouchPressed;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.TouchEvent>> onTouchMoved;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.TouchEvent>> onTouchReleased;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.TouchEvent>> onTouchStationary;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.DragEvent>> onDragEntered;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.DragEvent>> onDragExited;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.DragEvent>> onDragOver;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.DragEvent>> onDragDropped;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.DragEvent>> onDragDone;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.KeyEvent>> onKeyPressed;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.KeyEvent>> onKeyReleased;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.KeyEvent>> onKeyTyped;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.InputMethodEvent>> onInputMethodTextChanged;

  private static final java.lang.Object USER_DATA_KEY;

  private javafx.collections.ObservableMap<java.lang.Object, java.lang.Object> properties;

  private static final javafx.geometry.NodeOrientation defaultNodeOrientation;

  private javafx.beans.property.ObjectProperty<javafx.geometry.NodeOrientation> nodeOrientation;

  private javafx.scene.Scene$EffectiveOrientationProperty effectiveNodeOrientationProperty;

  private javafx.geometry.NodeOrientation effectiveNodeOrientation;

  private java.util.Map<javafx.scene.Node, com.sun.glass.ui.Accessible> accMap;

  private com.sun.glass.ui.Accessible accessible;

  static final boolean $assertionsDisabled;

  public javafx.scene.Scene(javafx.scene.Parent);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #53                 // double -1.0d
       5: ldc2_w        #53                 // double -1.0d
       8: getstatic     #55                 // Field javafx/scene/paint/Color.WHITE:Ljavafx/scene/paint/Color;
      11: iconst_0
      12: getstatic     #56                 // Field javafx/scene/SceneAntialiasing.DISABLED:Ljavafx/scene/SceneAntialiasing;
      15: invokespecial #57                 // Method "<init>":(Ljavafx/scene/Parent;DDLjavafx/scene/paint/Paint;ZLjavafx/scene/SceneAntialiasing;)V
      18: return

  public javafx.scene.Scene(javafx.scene.Parent, double, double);
    Code:
       0: aload_0
       1: aload_1
       2: dload_2
       3: dload         4
       5: getstatic     #55                 // Field javafx/scene/paint/Color.WHITE:Ljavafx/scene/paint/Color;
       8: iconst_0
       9: getstatic     #56                 // Field javafx/scene/SceneAntialiasing.DISABLED:Ljavafx/scene/SceneAntialiasing;
      12: invokespecial #57                 // Method "<init>":(Ljavafx/scene/Parent;DDLjavafx/scene/paint/Paint;ZLjavafx/scene/SceneAntialiasing;)V
      15: return

  public javafx.scene.Scene(javafx.scene.Parent, javafx.scene.paint.Paint);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #53                 // double -1.0d
       5: ldc2_w        #53                 // double -1.0d
       8: aload_2
       9: iconst_0
      10: getstatic     #56                 // Field javafx/scene/SceneAntialiasing.DISABLED:Ljavafx/scene/SceneAntialiasing;
      13: invokespecial #57                 // Method "<init>":(Ljavafx/scene/Parent;DDLjavafx/scene/paint/Paint;ZLjavafx/scene/SceneAntialiasing;)V
      16: return

  public javafx.scene.Scene(javafx.scene.Parent, double, double, javafx.scene.paint.Paint);
    Code:
       0: aload_0
       1: aload_1
       2: dload_2
       3: dload         4
       5: aload         6
       7: iconst_0
       8: getstatic     #56                 // Field javafx/scene/SceneAntialiasing.DISABLED:Ljavafx/scene/SceneAntialiasing;
      11: invokespecial #57                 // Method "<init>":(Ljavafx/scene/Parent;DDLjavafx/scene/paint/Paint;ZLjavafx/scene/SceneAntialiasing;)V
      14: return

  public javafx.scene.Scene(javafx.scene.Parent, double, double, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: dload_2
       3: dload         4
       5: getstatic     #55                 // Field javafx/scene/paint/Color.WHITE:Ljavafx/scene/paint/Color;
       8: iload         6
      10: getstatic     #56                 // Field javafx/scene/SceneAntialiasing.DISABLED:Ljavafx/scene/SceneAntialiasing;
      13: invokespecial #57                 // Method "<init>":(Ljavafx/scene/Parent;DDLjavafx/scene/paint/Paint;ZLjavafx/scene/SceneAntialiasing;)V
      16: return

  public javafx.scene.Scene(javafx.scene.Parent, double, double, boolean, javafx.scene.SceneAntialiasing);
    Code:
       0: aload_0
       1: aload_1
       2: dload_2
       3: dload         4
       5: getstatic     #55                 // Field javafx/scene/paint/Color.WHITE:Ljavafx/scene/paint/Color;
       8: iload         6
      10: aload         7
      12: invokespecial #57                 // Method "<init>":(Ljavafx/scene/Parent;DDLjavafx/scene/paint/Paint;ZLjavafx/scene/SceneAntialiasing;)V
      15: aload         7
      17: ifnull        54
      20: aload         7
      22: getstatic     #56                 // Field javafx/scene/SceneAntialiasing.DISABLED:Ljavafx/scene/SceneAntialiasing;
      25: if_acmpeq     54
      28: invokestatic  #58                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      31: invokevirtual #59                 // Method com/sun/javafx/tk/Toolkit.isMSAASupported:()Z
      34: ifne          54
      37: ldc           #1                  // class javafx/scene/Scene
      39: invokevirtual #60                 // Method java/lang/Class.getName:()Ljava/lang/String;
      42: astore        8
      44: aload         8
      46: invokestatic  #61                 // Method com/sun/javafx/logging/PlatformLogger.getLogger:(Ljava/lang/String;)Lcom/sun/javafx/logging/PlatformLogger;
      49: ldc           #62                 // String System can\'t support antiAliasing
      51: invokevirtual #63                 // Method com/sun/javafx/logging/PlatformLogger.warning:(Ljava/lang/String;)V
      54: return

  private javafx.scene.Scene(javafx.scene.Parent, double, double, javafx.scene.paint.Paint, boolean, javafx.scene.SceneAntialiasing);
    Code:
       0: aload_0
       1: invokespecial #64                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #53                 // double -1.0d
       8: putfield      #65                 // Field widthSetByUser:D
      11: aload_0
      12: ldc2_w        #53                 // double -1.0d
      15: putfield      #66                 // Field heightSetByUser:D
      18: aload_0
      19: iconst_0
      20: putfield      #67                 // Field sizeInitialized:Z
      23: aload_0
      24: invokestatic  #68                 // Method java/security/AccessController.getContext:()Ljava/security/AccessControlContext;
      27: putfield      #69                 // Field acc:Ljava/security/AccessControlContext;
      30: aload_0
      31: new           #70                 // class javafx/scene/Scene$ScenePulseListener
      34: dup
      35: aload_0
      36: invokespecial #71                 // Method javafx/scene/Scene$ScenePulseListener."<init>":(Ljavafx/scene/Scene;)V
      39: putfield      #72                 // Field scenePulseListener:Ljavafx/scene/Scene$ScenePulseListener;
      42: aload_0
      43: aconst_null
      44: putfield      #73                 // Field dndGesture:Ljavafx/scene/Scene$DnDGesture;
      47: aload_0
      48: new           #74                 // class javafx/scene/Scene$TargetWrapper
      51: dup
      52: aconst_null
      53: invokespecial #75                 // Method javafx/scene/Scene$TargetWrapper."<init>":(Ljavafx/scene/Scene$1;)V
      56: putfield      #6                  // Field tmpTargetWrapper:Ljavafx/scene/Scene$TargetWrapper;
      59: aload_0
      60: new           #76                 // class javafx/scene/Scene$10
      63: dup
      64: aload_0
      65: invokespecial #77                 // Method javafx/scene/Scene$10."<init>":(Ljavafx/scene/Scene;)V
      68: putfield      #78                 // Field stylesheets:Ljavafx/collections/ObservableList;
      71: aload_0
      72: aconst_null
      73: putfield      #79                 // Field userAgentStylesheet:Ljavafx/beans/property/ObjectProperty;
      76: aload_0
      77: new           #80                 // class javafx/scene/Scene$TouchGesture
      80: dup
      81: aconst_null
      82: invokespecial #81                 // Method javafx/scene/Scene$TouchGesture."<init>":(Ljavafx/scene/Scene$1;)V
      85: putfield      #22                 // Field scrollGesture:Ljavafx/scene/Scene$TouchGesture;
      88: aload_0
      89: new           #80                 // class javafx/scene/Scene$TouchGesture
      92: dup
      93: aconst_null
      94: invokespecial #81                 // Method javafx/scene/Scene$TouchGesture."<init>":(Ljavafx/scene/Scene$1;)V
      97: putfield      #16                 // Field zoomGesture:Ljavafx/scene/Scene$TouchGesture;
     100: aload_0
     101: new           #80                 // class javafx/scene/Scene$TouchGesture
     104: dup
     105: aconst_null
     106: invokespecial #81                 // Method javafx/scene/Scene$TouchGesture."<init>":(Ljavafx/scene/Scene$1;)V
     109: putfield      #15                 // Field rotateGesture:Ljavafx/scene/Scene$TouchGesture;
     112: aload_0
     113: new           #80                 // class javafx/scene/Scene$TouchGesture
     116: dup
     117: aconst_null
     118: invokespecial #81                 // Method javafx/scene/Scene$TouchGesture."<init>":(Ljavafx/scene/Scene$1;)V
     121: putfield      #14                 // Field swipeGesture:Ljavafx/scene/Scene$TouchGesture;
     124: aload_0
     125: new           #82                 // class javafx/scene/Scene$TouchMap
     128: dup
     129: aconst_null
     130: invokespecial #83                 // Method javafx/scene/Scene$TouchMap."<init>":(Ljavafx/scene/Scene$1;)V
     133: putfield      #10                 // Field touchMap:Ljavafx/scene/Scene$TouchMap;
     136: aload_0
     137: aconst_null
     138: putfield      #13                 // Field nextTouchEvent:Ljavafx/scene/input/TouchEvent;
     141: aload_0
     142: aconst_null
     143: putfield      #12                 // Field touchPoints:[Ljavafx/scene/input/TouchPoint;
     146: aload_0
     147: iconst_0
     148: putfield      #7                  // Field touchEventSetId:I
     151: aload_0
     152: iconst_0
     153: putfield      #11                 // Field touchPointIndex:I
     156: aload_0
     157: new           #84                 // class java/util/HashMap
     160: dup
     161: invokespecial #85                 // Method java/util/HashMap."<init>":()V
     164: putfield      #9                  // Field touchTargets:Ljava/util/Map;
     167: aload_0
     168: aconst_null
     169: putfield      #45                 // Field keyHandler:Ljavafx/scene/Scene$KeyHandler;
     172: aload_0
     173: iconst_1
     174: putfield      #86                 // Field focusDirty:Z
     177: aload_0
     178: new           #87                 // class com/sun/javafx/scene/traversal/SceneTraversalEngine
     181: dup
     182: aload_0
     183: invokespecial #88                 // Method com/sun/javafx/scene/traversal/SceneTraversalEngine."<init>":(Ljavafx/scene/Scene;)V
     186: putfield      #89                 // Field traversalEngine:Lcom/sun/javafx/scene/traversal/TopMostTraversalEngine;
     189: aload_0
     190: new           #90                 // class javafx/scene/Scene$12
     193: dup
     194: aload_0
     195: aload_0
     196: ldc           #91                 // String focusOwner
     198: invokespecial #92                 // Method javafx/scene/Scene$12."<init>":(Ljavafx/scene/Scene;Ljava/lang/Object;Ljava/lang/String;)V
     201: putfield      #3                  // Field focusOwner:Ljavafx/beans/property/ReadOnlyObjectWrapper;
     204: aload_0
     205: aconst_null
     206: putfield      #93                 // Field testPulseListener:Ljava/lang/Runnable;
     209: aload_0
     210: new           #94                 // class java/util/ArrayList
     213: dup
     214: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
     217: putfield      #96                 // Field lights:Ljava/util/List;
     220: aload_0
     221: iload         7
     223: putfield      #97                 // Field depthBuffer:Z
     226: aload_0
     227: aload         8
     229: putfield      #98                 // Field antiAliasing:Ljavafx/scene/SceneAntialiasing;
     232: aload_1
     233: ifnonnull     246
     236: new           #99                 // class java/lang/NullPointerException
     239: dup
     240: ldc           #100                // String Root cannot be null
     242: invokespecial #101                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     245: athrow
     246: iload         7
     248: ifne          264
     251: aload         8
     253: ifnull        290
     256: aload         8
     258: getstatic     #56                 // Field javafx/scene/SceneAntialiasing.DISABLED:Ljavafx/scene/SceneAntialiasing;
     261: if_acmpeq     290
     264: getstatic     #102                // Field javafx/application/ConditionalFeature.SCENE3D:Ljavafx/application/ConditionalFeature;
     267: invokestatic  #103                // Method javafx/application/Platform.isSupported:(Ljavafx/application/ConditionalFeature;)Z
     270: ifne          290
     273: ldc           #1                  // class javafx/scene/Scene
     275: invokevirtual #60                 // Method java/lang/Class.getName:()Ljava/lang/String;
     278: astore        9
     280: aload         9
     282: invokestatic  #61                 // Method com/sun/javafx/logging/PlatformLogger.getLogger:(Ljava/lang/String;)Lcom/sun/javafx/logging/PlatformLogger;
     285: ldc           #104                // String System can\'t support ConditionalFeature.SCENE3D
     287: invokevirtual #63                 // Method com/sun/javafx/logging/PlatformLogger.warning:(Ljava/lang/String;)V
     290: aload_0
     291: invokespecial #105                // Method init:()V
     294: aload_0
     295: aload_1
     296: invokevirtual #106                // Method setRoot:(Ljavafx/scene/Parent;)V
     299: aload_0
     300: dload_2
     301: dload         4
     303: invokespecial #107                // Method init:(DD)V
     306: aload_0
     307: aload         6
     309: invokevirtual #108                // Method setFill:(Ljavafx/scene/paint/Paint;)V
     312: return

  static boolean isPGAccessAllowed();
    Code:
       0: getstatic     #43                 // Field inSynchronizer:Z
       3: ifne          18
       6: getstatic     #19                 // Field inMousePick:Z
       9: ifne          18
      12: getstatic     #109                // Field allowPGAccess:Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  static void setAllowPGAccess(boolean);
    Code:
       0: invokestatic  #110                // Method com/sun/javafx/util/Utils.assertionEnabled:()Z
       3: ifeq          57
       6: iload_0
       7: ifeq          25
      10: getstatic     #111                // Field pgAccessCount:I
      13: iconst_1
      14: iadd
      15: putstatic     #111                // Field pgAccessCount:I
      18: iconst_1
      19: putstatic     #109                // Field allowPGAccess:Z
      22: goto          57
      25: getstatic     #111                // Field pgAccessCount:I
      28: ifgt          41
      31: new           #112                // class java/lang/AssertionError
      34: dup
      35: ldc           #113                // String *** pgAccessCount underflow
      37: invokespecial #114                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      40: athrow
      41: getstatic     #111                // Field pgAccessCount:I
      44: iconst_1
      45: isub
      46: dup
      47: putstatic     #111                // Field pgAccessCount:I
      50: ifne          57
      53: iconst_0
      54: putstatic     #109                // Field allowPGAccess:Z
      57: return

  void addToDirtyList(javafx.scene.Node);
    Code:
       0: aload_0
       1: getfield      #42                 // Field dirtyNodes:[Ljavafx/scene/Node;
       4: ifnull        14
       7: aload_0
       8: getfield      #41                 // Field dirtyNodesSize:I
      11: ifne          27
      14: aload_0
      15: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
      18: ifnull        27
      21: invokestatic  #58                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      24: invokevirtual #115                // Method com/sun/javafx/tk/Toolkit.requestNextPulse:()V
      27: aload_0
      28: getfield      #42                 // Field dirtyNodes:[Ljavafx/scene/Node;
      31: ifnull        97
      34: aload_0
      35: getfield      #41                 // Field dirtyNodesSize:I
      38: aload_0
      39: getfield      #42                 // Field dirtyNodes:[Ljavafx/scene/Node;
      42: arraylength
      43: if_icmpne     80
      46: aload_0
      47: getfield      #41                 // Field dirtyNodesSize:I
      50: aload_0
      51: getfield      #41                 // Field dirtyNodesSize:I
      54: iconst_1
      55: ishr
      56: iadd
      57: anewarray     #116                // class javafx/scene/Node
      60: astore_2
      61: aload_0
      62: getfield      #42                 // Field dirtyNodes:[Ljavafx/scene/Node;
      65: iconst_0
      66: aload_2
      67: iconst_0
      68: aload_0
      69: getfield      #41                 // Field dirtyNodesSize:I
      72: invokestatic  #117                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      75: aload_0
      76: aload_2
      77: putfield      #42                 // Field dirtyNodes:[Ljavafx/scene/Node;
      80: aload_0
      81: getfield      #42                 // Field dirtyNodes:[Ljavafx/scene/Node;
      84: aload_0
      85: dup
      86: getfield      #41                 // Field dirtyNodesSize:I
      89: dup_x1
      90: iconst_1
      91: iadd
      92: putfield      #41                 // Field dirtyNodesSize:I
      95: aload_1
      96: aastore
      97: return

  private void doCSSPass();
    Code:
       0: aload_0
       1: invokevirtual #118                // Method getRoot:()Ljavafx/scene/Parent;
       4: astore_1
       5: aload_1
       6: getfield      #119                // Field javafx/scene/Parent.cssFlag:Lcom/sun/javafx/scene/CssFlags;
       9: getstatic     #120                // Field com/sun/javafx/scene/CssFlags.CLEAN:Lcom/sun/javafx/scene/CssFlags;
      12: if_acmpeq     26
      15: aload_1
      16: getstatic     #121                // Field com/sun/javafx/scene/DirtyBits.NODE_CSS:Lcom/sun/javafx/scene/DirtyBits;
      19: invokevirtual #122                // Method javafx/scene/Parent.clearDirty:(Lcom/sun/javafx/scene/DirtyBits;)V
      22: aload_1
      23: invokevirtual #123                // Method javafx/scene/Parent.processCSS:()V
      26: return

  void doLayoutPass();
    Code:
       0: aload_0
       1: invokevirtual #118                // Method getRoot:()Ljavafx/scene/Parent;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: aload_1
      10: invokevirtual #124                // Method javafx/scene/Parent.layout:()V
      13: return

  com.sun.javafx.tk.TKScene getPeer();
    Code:
       0: aload_0
       1: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
       4: areturn

  public final void addPreLayoutPulseListener(java.lang.Runnable);
    Code:
       0: invokestatic  #58                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: invokevirtual #125                // Method com/sun/javafx/tk/Toolkit.checkFxUserThread:()V
       6: aload_1
       7: ifnonnull     20
      10: new           #99                 // class java/lang/NullPointerException
      13: dup
      14: ldc           #126                // String Scene pulse listener should not be null
      16: invokespecial #101                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #33                 // Field preLayoutPulseListeners:Ljava/util/List;
      24: ifnonnull     38
      27: aload_0
      28: new           #127                // class java/util/concurrent/CopyOnWriteArrayList
      31: dup
      32: invokespecial #128                // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      35: putfield      #33                 // Field preLayoutPulseListeners:Ljava/util/List;
      38: aload_0
      39: getfield      #33                 // Field preLayoutPulseListeners:Ljava/util/List;
      42: aload_1
      43: invokeinterface #129,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: return

  public final void removePreLayoutPulseListener(java.lang.Runnable);
    Code:
       0: invokestatic  #58                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: invokevirtual #125                // Method com/sun/javafx/tk/Toolkit.checkFxUserThread:()V
       6: aload_0
       7: getfield      #33                 // Field preLayoutPulseListeners:Ljava/util/List;
      10: ifnonnull     14
      13: return
      14: aload_0
      15: getfield      #33                 // Field preLayoutPulseListeners:Ljava/util/List;
      18: aload_1
      19: invokeinterface #130,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      24: pop
      25: return

  public final void addPostLayoutPulseListener(java.lang.Runnable);
    Code:
       0: invokestatic  #58                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: invokevirtual #125                // Method com/sun/javafx/tk/Toolkit.checkFxUserThread:()V
       6: aload_1
       7: ifnonnull     20
      10: new           #99                 // class java/lang/NullPointerException
      13: dup
      14: ldc           #126                // String Scene pulse listener should not be null
      16: invokespecial #101                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #31                 // Field postLayoutPulseListeners:Ljava/util/List;
      24: ifnonnull     38
      27: aload_0
      28: new           #127                // class java/util/concurrent/CopyOnWriteArrayList
      31: dup
      32: invokespecial #128                // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      35: putfield      #31                 // Field postLayoutPulseListeners:Ljava/util/List;
      38: aload_0
      39: getfield      #31                 // Field postLayoutPulseListeners:Ljava/util/List;
      42: aload_1
      43: invokeinterface #129,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: return

  public final void removePostLayoutPulseListener(java.lang.Runnable);
    Code:
       0: invokestatic  #58                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: invokevirtual #125                // Method com/sun/javafx/tk/Toolkit.checkFxUserThread:()V
       6: aload_0
       7: getfield      #31                 // Field postLayoutPulseListeners:Ljava/util/List;
      10: ifnonnull     14
      13: return
      14: aload_0
      15: getfield      #31                 // Field postLayoutPulseListeners:Ljava/util/List;
      18: aload_1
      19: invokeinterface #130,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      24: pop
      25: return

  public final javafx.scene.SceneAntialiasing getAntiAliasing();
    Code:
       0: aload_0
       1: getfield      #98                 // Field antiAliasing:Ljavafx/scene/SceneAntialiasing;
       4: areturn

  private boolean getAntiAliasingInternal();
    Code:
       0: aload_0
       1: getfield      #98                 // Field antiAliasing:Ljavafx/scene/SceneAntialiasing;
       4: ifnull        43
       7: invokestatic  #58                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      10: invokevirtual #59                 // Method com/sun/javafx/tk/Toolkit.isMSAASupported:()Z
      13: ifeq          43
      16: getstatic     #102                // Field javafx/application/ConditionalFeature.SCENE3D:Ljavafx/application/ConditionalFeature;
      19: invokestatic  #103                // Method javafx/application/Platform.isSupported:(Ljavafx/application/ConditionalFeature;)Z
      22: ifeq          43
      25: aload_0
      26: getfield      #98                 // Field antiAliasing:Ljavafx/scene/SceneAntialiasing;
      29: getstatic     #56                 // Field javafx/scene/SceneAntialiasing.DISABLED:Ljavafx/scene/SceneAntialiasing;
      32: if_acmpeq     39
      35: iconst_1
      36: goto          44
      39: iconst_0
      40: goto          44
      43: iconst_0
      44: ireturn

  void setWindow(javafx.stage.Window);
    Code:
       0: aload_0
       1: invokespecial #131                // Method windowPropertyImpl:()Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: aload_1
       5: invokevirtual #132                // Method javafx/beans/property/ReadOnlyObjectWrapper.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.stage.Window getWindow();
    Code:
       0: aload_0
       1: getfield      #133                // Field window:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #133                // Field window:Ljavafx/beans/property/ReadOnlyObjectWrapper;
      15: invokevirtual #134                // Method javafx/beans/property/ReadOnlyObjectWrapper.get:()Ljava/lang/Object;
      18: checkcast     #135                // class javafx/stage/Window
      21: areturn

  public final javafx.beans.property.ReadOnlyObjectProperty<javafx.stage.Window> windowProperty();
    Code:
       0: aload_0
       1: invokespecial #131                // Method windowPropertyImpl:()Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #136                // Method javafx/beans/property/ReadOnlyObjectWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       7: areturn

  private javafx.beans.property.ReadOnlyObjectWrapper<javafx.stage.Window> windowPropertyImpl();
    Code:
       0: aload_0
       1: getfield      #133                // Field window:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: ifnonnull     19
       7: aload_0
       8: new           #137                // class javafx/scene/Scene$3
      11: dup
      12: aload_0
      13: invokespecial #138                // Method javafx/scene/Scene$3."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #133                // Field window:Ljavafx/beans/property/ReadOnlyObjectWrapper;
      19: aload_0
      20: getfield      #133                // Field window:Ljavafx/beans/property/ReadOnlyObjectWrapper;
      23: areturn

  void initPeer();
    Code:
       0: getstatic     #139                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
      10: ifnull        21
      13: new           #112                // class java/lang/AssertionError
      16: dup
      17: invokespecial #140                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: invokevirtual #141                // Method getWindow:()Ljavafx/stage/Window;
      25: astore_1
      26: getstatic     #139                // Field $assertionsDisabled:Z
      29: ifne          44
      32: aload_1
      33: ifnonnull     44
      36: new           #112                // class java/lang/AssertionError
      39: dup
      40: invokespecial #140                // Method java/lang/AssertionError."<init>":()V
      43: athrow
      44: aload_1
      45: invokestatic  #142                // Method com/sun/javafx/stage/WindowHelper.getPeer:(Ljavafx/stage/Window;)Lcom/sun/javafx/tk/TKStage;
      48: astore_2
      49: aload_2
      50: ifnonnull     54
      53: return
      54: getstatic     #143                // Field javafx/application/ConditionalFeature.TRANSPARENT_WINDOW:Ljavafx/application/ConditionalFeature;
      57: invokestatic  #103                // Method javafx/application/Platform.isSupported:(Ljavafx/application/ConditionalFeature;)Z
      60: istore_3
      61: iload_3
      62: ifne          69
      65: aload_0
      66: invokestatic  #144                // Method com/sun/javafx/application/PlatformImpl.addNoTransparencyStylesheetToScene:(Ljavafx/scene/Scene;)V
      69: ldc           #145                // String Scene.initPeer started
      71: invokestatic  #146                // Method com/sun/javafx/perf/PerformanceTracker.logEvent:(Ljava/lang/String;)V
      74: iconst_1
      75: invokestatic  #147                // Method setAllowPGAccess:(Z)V
      78: invokestatic  #58                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      81: astore        4
      83: aload_0
      84: aload_2
      85: aload_0
      86: invokevirtual #148                // Method isDepthBufferInternal:()Z
      89: aload_0
      90: invokespecial #149                // Method getAntiAliasingInternal:()Z
      93: aload_0
      94: getfield      #69                 // Field acc:Ljava/security/AccessControlContext;
      97: invokeinterface #150,  4          // InterfaceMethod com/sun/javafx/tk/TKStage.createTKScene:(ZZLjava/security/AccessControlContext;)Lcom/sun/javafx/tk/TKScene;
     102: putfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
     105: ldc           #151                // String Scene.initPeer TKScene created
     107: invokestatic  #146                // Method com/sun/javafx/perf/PerformanceTracker.logEvent:(Ljava/lang/String;)V
     110: aload_0
     111: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
     114: new           #152                // class javafx/scene/Scene$ScenePeerListener
     117: dup
     118: aload_0
     119: invokespecial #153                // Method javafx/scene/Scene$ScenePeerListener."<init>":(Ljavafx/scene/Scene;)V
     122: invokeinterface #154,  2          // InterfaceMethod com/sun/javafx/tk/TKScene.setTKSceneListener:(Lcom/sun/javafx/tk/TKSceneListener;)V
     127: aload_0
     128: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
     131: new           #155                // class javafx/scene/Scene$ScenePeerPaintListener
     134: dup
     135: aload_0
     136: aconst_null
     137: invokespecial #156                // Method javafx/scene/Scene$ScenePeerPaintListener."<init>":(Ljavafx/scene/Scene;Ljavafx/scene/Scene$1;)V
     140: invokeinterface #157,  2          // InterfaceMethod com/sun/javafx/tk/TKScene.setTKScenePaintListener:(Lcom/sun/javafx/tk/TKScenePaintListener;)V
     145: ldc           #158                // String Scene.initPeer TKScene set
     147: invokestatic  #146                // Method com/sun/javafx/perf/PerformanceTracker.logEvent:(Ljava/lang/String;)V
     150: aload_0
     151: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
     154: aload_0
     155: invokevirtual #118                // Method getRoot:()Ljavafx/scene/Parent;
     158: invokevirtual #159                // Method javafx/scene/Parent.getPeer:()Lcom/sun/javafx/sg/prism/NGNode;
     161: invokeinterface #160,  2          // InterfaceMethod com/sun/javafx/tk/TKScene.setRoot:(Lcom/sun/javafx/sg/prism/NGNode;)V
     166: aload_0
     167: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
     170: aload_0
     171: invokevirtual #161                // Method getFill:()Ljavafx/scene/paint/Paint;
     174: ifnonnull     181
     177: aconst_null
     178: goto          190
     181: aload         4
     183: aload_0
     184: invokevirtual #161                // Method getFill:()Ljavafx/scene/paint/Paint;
     187: invokevirtual #162                // Method com/sun/javafx/tk/Toolkit.getPaint:(Ljavafx/scene/paint/Paint;)Ljava/lang/Object;
     190: invokeinterface #163,  2          // InterfaceMethod com/sun/javafx/tk/TKScene.setFillPaint:(Ljava/lang/Object;)V
     195: aload_0
     196: invokevirtual #164                // Method getEffectiveCamera:()Ljavafx/scene/Camera;
     199: invokestatic  #165                // Method com/sun/javafx/scene/NodeHelper.updatePeer:(Ljavafx/scene/Node;)V
     202: aload_0
     203: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
     206: aload_0
     207: invokevirtual #164                // Method getEffectiveCamera:()Ljavafx/scene/Camera;
     210: invokevirtual #166                // Method javafx/scene/Camera.getPeer:()Lcom/sun/javafx/sg/prism/NGNode;
     213: checkcast     #167                // class com/sun/javafx/sg/prism/NGCamera
     216: invokeinterface #168,  2          // InterfaceMethod com/sun/javafx/tk/TKScene.setCamera:(Lcom/sun/javafx/sg/prism/NGCamera;)V
     221: aload_0
     222: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
     225: invokeinterface #169,  1          // InterfaceMethod com/sun/javafx/tk/TKScene.markDirty:()V
     230: ldc           #170                // String Scene.initPeer TKScene initialized
     232: invokestatic  #146                // Method com/sun/javafx/perf/PerformanceTracker.logEvent:(Ljava/lang/String;)V
     235: iconst_0
     236: invokestatic  #147                // Method setAllowPGAccess:(Z)V
     239: aload         4
     241: aload_0
     242: getfield      #72                 // Field scenePulseListener:Ljavafx/scene/Scene$ScenePulseListener;
     245: invokevirtual #171                // Method com/sun/javafx/tk/Toolkit.addSceneTkPulseListener:(Lcom/sun/javafx/tk/TKPulseListener;)V
     248: aload         4
     250: aload_0
     251: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
     254: new           #172                // class javafx/scene/Scene$DropTargetListener
     257: dup
     258: aload_0
     259: invokespecial #173                // Method javafx/scene/Scene$DropTargetListener."<init>":(Ljavafx/scene/Scene;)V
     262: invokevirtual #174                // Method com/sun/javafx/tk/Toolkit.enableDrop:(Lcom/sun/javafx/tk/TKScene;Lcom/sun/javafx/tk/TKDropTargetListener;)V
     265: aload         4
     267: aload_0
     268: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
     271: new           #175                // class javafx/scene/Scene$InputMethodRequestsDelegate
     274: dup
     275: aload_0
     276: invokespecial #176                // Method javafx/scene/Scene$InputMethodRequestsDelegate."<init>":(Ljavafx/scene/Scene;)V
     279: invokevirtual #177                // Method com/sun/javafx/tk/Toolkit.installInputMethodRequests:(Lcom/sun/javafx/tk/TKScene;Ljavafx/scene/input/InputMethodRequests;)V
     282: ldc           #178                // String Scene.initPeer finished
     284: invokestatic  #146                // Method com/sun/javafx/perf/PerformanceTracker.logEvent:(Ljava/lang/String;)V
     287: return

  public void disposePeer();
    Code:
       0: aload_0
       1: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
       4: ifnonnull     8
       7: return
       8: ldc           #179                // String Scene.disposePeer started
      10: invokestatic  #146                // Method com/sun/javafx/perf/PerformanceTracker.logEvent:(Ljava/lang/String;)V
      13: invokestatic  #58                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      16: astore_1
      17: aload_1
      18: aload_0
      19: getfield      #72                 // Field scenePulseListener:Ljavafx/scene/Scene$ScenePulseListener;
      22: invokevirtual #180                // Method com/sun/javafx/tk/Toolkit.removeSceneTkPulseListener:(Lcom/sun/javafx/tk/TKPulseListener;)V
      25: aload_0
      26: getfield      #44                 // Field accessible:Lcom/sun/glass/ui/Accessible;
      29: ifnull        61
      32: aload_0
      33: invokespecial #34                 // Method disposeAccessibles:()V
      36: aload_0
      37: invokevirtual #118                // Method getRoot:()Ljavafx/scene/Parent;
      40: astore_2
      41: aload_2
      42: ifnull        49
      45: aload_2
      46: invokevirtual #181                // Method javafx/scene/Node.releaseAccessible:()V
      49: aload_0
      50: getfield      #44                 // Field accessible:Lcom/sun/glass/ui/Accessible;
      53: invokevirtual #182                // Method com/sun/glass/ui/Accessible.dispose:()V
      56: aload_0
      57: aconst_null
      58: putfield      #44                 // Field accessible:Lcom/sun/glass/ui/Accessible;
      61: aload_0
      62: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
      65: invokeinterface #183,  1          // InterfaceMethod com/sun/javafx/tk/TKScene.dispose:()V
      70: aload_0
      71: aconst_null
      72: putfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
      75: ldc           #184                // String Scene.disposePeer finished
      77: invokestatic  #146                // Method com/sun/javafx/perf/PerformanceTracker.logEvent:(Ljava/lang/String;)V
      80: return

  private final void setX(double);
    Code:
       0: aload_0
       1: invokespecial #185                // Method xPropertyImpl:()Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: dload_1
       5: invokevirtual #186                // Method javafx/beans/property/ReadOnlyDoubleWrapper.set:(D)V
       8: return

  public final double getX();
    Code:
       0: aload_0
       1: getfield      #187                // Field x:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: ifnonnull     11
       7: dconst_0
       8: goto          18
      11: aload_0
      12: getfield      #187                // Field x:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      15: invokevirtual #188                // Method javafx/beans/property/ReadOnlyDoubleWrapper.get:()D
      18: dreturn

  public final javafx.beans.property.ReadOnlyDoubleProperty xProperty();
    Code:
       0: aload_0
       1: invokespecial #185                // Method xPropertyImpl:()Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: invokevirtual #189                // Method javafx/beans/property/ReadOnlyDoubleWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
       7: areturn

  private javafx.beans.property.ReadOnlyDoubleWrapper xPropertyImpl();
    Code:
       0: aload_0
       1: getfield      #187                // Field x:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: ifnonnull     21
       7: aload_0
       8: new           #190                // class javafx/beans/property/ReadOnlyDoubleWrapper
      11: dup
      12: aload_0
      13: ldc           #191                // String x
      15: invokespecial #192                // Method javafx/beans/property/ReadOnlyDoubleWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      18: putfield      #187                // Field x:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      21: aload_0
      22: getfield      #187                // Field x:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      25: areturn

  private final void setY(double);
    Code:
       0: aload_0
       1: invokespecial #193                // Method yPropertyImpl:()Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: dload_1
       5: invokevirtual #186                // Method javafx/beans/property/ReadOnlyDoubleWrapper.set:(D)V
       8: return

  public final double getY();
    Code:
       0: aload_0
       1: getfield      #194                // Field y:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: ifnonnull     11
       7: dconst_0
       8: goto          18
      11: aload_0
      12: getfield      #194                // Field y:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      15: invokevirtual #188                // Method javafx/beans/property/ReadOnlyDoubleWrapper.get:()D
      18: dreturn

  public final javafx.beans.property.ReadOnlyDoubleProperty yProperty();
    Code:
       0: aload_0
       1: invokespecial #193                // Method yPropertyImpl:()Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: invokevirtual #189                // Method javafx/beans/property/ReadOnlyDoubleWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
       7: areturn

  private javafx.beans.property.ReadOnlyDoubleWrapper yPropertyImpl();
    Code:
       0: aload_0
       1: getfield      #194                // Field y:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: ifnonnull     21
       7: aload_0
       8: new           #190                // class javafx/beans/property/ReadOnlyDoubleWrapper
      11: dup
      12: aload_0
      13: ldc           #195                // String y
      15: invokespecial #192                // Method javafx/beans/property/ReadOnlyDoubleWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      18: putfield      #194                // Field y:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      21: aload_0
      22: getfield      #194                // Field y:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      25: areturn

  private final void setWidth(double);
    Code:
       0: aload_0
       1: invokespecial #196                // Method widthPropertyImpl:()Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: dload_1
       5: invokevirtual #186                // Method javafx/beans/property/ReadOnlyDoubleWrapper.set:(D)V
       8: return

  public final double getWidth();
    Code:
       0: aload_0
       1: getfield      #197                // Field width:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: ifnonnull     11
       7: dconst_0
       8: goto          18
      11: aload_0
      12: getfield      #197                // Field width:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      15: invokevirtual #188                // Method javafx/beans/property/ReadOnlyDoubleWrapper.get:()D
      18: dreturn

  public final javafx.beans.property.ReadOnlyDoubleProperty widthProperty();
    Code:
       0: aload_0
       1: invokespecial #196                // Method widthPropertyImpl:()Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: invokevirtual #189                // Method javafx/beans/property/ReadOnlyDoubleWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
       7: areturn

  private javafx.beans.property.ReadOnlyDoubleWrapper widthPropertyImpl();
    Code:
       0: aload_0
       1: getfield      #197                // Field width:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: ifnonnull     19
       7: aload_0
       8: new           #198                // class javafx/scene/Scene$4
      11: dup
      12: aload_0
      13: invokespecial #199                // Method javafx/scene/Scene$4."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #197                // Field width:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      19: aload_0
      20: getfield      #197                // Field width:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      23: areturn

  private final void setHeight(double);
    Code:
       0: aload_0
       1: invokespecial #200                // Method heightPropertyImpl:()Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: dload_1
       5: invokevirtual #186                // Method javafx/beans/property/ReadOnlyDoubleWrapper.set:(D)V
       8: return

  public final double getHeight();
    Code:
       0: aload_0
       1: getfield      #201                // Field height:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: ifnonnull     11
       7: dconst_0
       8: goto          18
      11: aload_0
      12: getfield      #201                // Field height:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      15: invokevirtual #188                // Method javafx/beans/property/ReadOnlyDoubleWrapper.get:()D
      18: dreturn

  public final javafx.beans.property.ReadOnlyDoubleProperty heightProperty();
    Code:
       0: aload_0
       1: invokespecial #200                // Method heightPropertyImpl:()Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: invokevirtual #189                // Method javafx/beans/property/ReadOnlyDoubleWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
       7: areturn

  private javafx.beans.property.ReadOnlyDoubleWrapper heightPropertyImpl();
    Code:
       0: aload_0
       1: getfield      #201                // Field height:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: ifnonnull     19
       7: aload_0
       8: new           #202                // class javafx/scene/Scene$5
      11: dup
      12: aload_0
      13: invokespecial #203                // Method javafx/scene/Scene$5."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #201                // Field height:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      19: aload_0
      20: getfield      #201                // Field height:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      23: areturn

  void resizeRootOnSceneSizeChange(double, double);
    Code:
       0: aload_0
       1: invokevirtual #118                // Method getRoot:()Ljavafx/scene/Parent;
       4: dload_1
       5: dload_3
       6: invokevirtual #204                // Method javafx/scene/Parent.resize:(DD)V
       9: return

  public final void setCamera(javafx.scene.Camera);
    Code:
       0: aload_0
       1: invokevirtual #205                // Method cameraProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.scene.Camera getCamera();
    Code:
       0: aload_0
       1: getfield      #207                // Field camera:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #207                // Field camera:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #209                // class javafx/scene/Camera
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.scene.Camera> cameraProperty();
    Code:
       0: aload_0
       1: getfield      #207                // Field camera:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #210                // class javafx/scene/Scene$6
      11: dup
      12: aload_0
      13: invokespecial #211                // Method javafx/scene/Scene$6."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #207                // Field camera:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #207                // Field camera:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  javafx.scene.Camera getEffectiveCamera();
    Code:
       0: aload_0
       1: invokevirtual #212                // Method getCamera:()Ljavafx/scene/Camera;
       4: astore_1
       5: aload_1
       6: ifnull        25
       9: aload_1
      10: instanceof    #213                // class javafx/scene/PerspectiveCamera
      13: ifeq          78
      16: getstatic     #102                // Field javafx/application/ConditionalFeature.SCENE3D:Ljavafx/application/ConditionalFeature;
      19: invokestatic  #103                // Method javafx/application/Platform.isSupported:(Ljavafx/application/ConditionalFeature;)Z
      22: ifne          78
      25: aload_0
      26: getfield      #214                // Field defaultCamera:Ljavafx/scene/Camera;
      29: ifnonnull     73
      32: aload_0
      33: new           #215                // class javafx/scene/ParallelCamera
      36: dup
      37: invokespecial #216                // Method javafx/scene/ParallelCamera."<init>":()V
      40: putfield      #214                // Field defaultCamera:Ljavafx/scene/Camera;
      43: aload_0
      44: getfield      #214                // Field defaultCamera:Ljavafx/scene/Camera;
      47: aload_0
      48: invokevirtual #217                // Method javafx/scene/Camera.setOwnerScene:(Ljavafx/scene/Scene;)V
      51: aload_0
      52: getfield      #214                // Field defaultCamera:Ljavafx/scene/Camera;
      55: aload_0
      56: invokevirtual #218                // Method getWidth:()D
      59: invokevirtual #219                // Method javafx/scene/Camera.setViewWidth:(D)V
      62: aload_0
      63: getfield      #214                // Field defaultCamera:Ljavafx/scene/Camera;
      66: aload_0
      67: invokevirtual #220                // Method getHeight:()D
      70: invokevirtual #221                // Method javafx/scene/Camera.setViewHeight:(D)V
      73: aload_0
      74: getfield      #214                // Field defaultCamera:Ljavafx/scene/Camera;
      77: areturn
      78: aload_1
      79: areturn

  void markCameraDirty();
    Code:
       0: aload_0
       1: getstatic     #222                // Field javafx/scene/Scene$DirtyBits.CAMERA_DIRTY:Ljavafx/scene/Scene$DirtyBits;
       4: invokespecial #47                 // Method markDirty:(Ljavafx/scene/Scene$DirtyBits;)V
       7: aload_0
       8: invokevirtual #223                // Method setNeedsRepaint:()V
      11: return

  void markCursorDirty();
    Code:
       0: aload_0
       1: getstatic     #224                // Field javafx/scene/Scene$DirtyBits.CURSOR_DIRTY:Ljavafx/scene/Scene$DirtyBits;
       4: invokespecial #47                 // Method markDirty:(Ljavafx/scene/Scene$DirtyBits;)V
       7: return

  public final void setFill(javafx.scene.paint.Paint);
    Code:
       0: aload_0
       1: invokevirtual #225                // Method fillProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.scene.paint.Paint getFill();
    Code:
       0: aload_0
       1: getfield      #226                // Field fill:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     13
       7: getstatic     #55                 // Field javafx/scene/paint/Color.WHITE:Ljavafx/scene/paint/Color;
      10: goto          23
      13: aload_0
      14: getfield      #226                // Field fill:Ljavafx/beans/property/ObjectProperty;
      17: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      20: checkcast     #227                // class javafx/scene/paint/Paint
      23: areturn

  public final javafx.beans.property.ObjectProperty<javafx.scene.paint.Paint> fillProperty();
    Code:
       0: aload_0
       1: getfield      #226                // Field fill:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     22
       7: aload_0
       8: new           #228                // class javafx/scene/Scene$7
      11: dup
      12: aload_0
      13: getstatic     #55                 // Field javafx/scene/paint/Color.WHITE:Ljavafx/scene/paint/Color;
      16: invokespecial #229                // Method javafx/scene/Scene$7."<init>":(Ljavafx/scene/Scene;Ljavafx/scene/paint/Paint;)V
      19: putfield      #226                // Field fill:Ljavafx/beans/property/ObjectProperty;
      22: aload_0
      23: getfield      #226                // Field fill:Ljavafx/beans/property/ObjectProperty;
      26: areturn

  public final void setRoot(javafx.scene.Parent);
    Code:
       0: aload_0
       1: invokevirtual #230                // Method rootProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.scene.Parent getRoot();
    Code:
       0: aload_0
       1: getfield      #231                // Field root:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #231                // Field root:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #232                // class javafx/scene/Parent
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.scene.Parent> rootProperty();
    Code:
       0: aload_0
       1: getfield      #231                // Field root:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #233                // class javafx/scene/Scene$8
      11: dup
      12: aload_0
      13: invokespecial #234                // Method javafx/scene/Scene$8."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #231                // Field root:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #231                // Field root:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  void setNeedsRepaint();
    Code:
       0: aload_0
       1: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
       4: ifnull        16
       7: aload_0
       8: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
      11: invokeinterface #235,  1          // InterfaceMethod com/sun/javafx/tk/TKScene.entireSceneNeedsRepaint:()V
      16: return

  void doCSSLayoutSyncForSnapshot(javafx.scene.Node);
    Code:
       0: aload_0
       1: getfield      #67                 // Field sizeInitialized:Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #236                // Method preferredSize:()V
      11: goto          18
      14: aload_0
      15: invokespecial #32                 // Method doCSSPass:()V
      18: aload_0
      19: invokevirtual #237                // Method doLayoutPass:()V
      22: aload_0
      23: invokevirtual #118                // Method getRoot:()Ljavafx/scene/Parent;
      26: invokevirtual #238                // Method javafx/scene/Parent.updateBounds:()V
      29: aload_0
      30: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
      33: ifnull        90
      36: aload_0
      37: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
      40: invokeinterface #239,  1          // InterfaceMethod com/sun/javafx/tk/TKScene.waitForRenderingToComplete:()V
      45: aload_0
      46: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
      49: invokeinterface #240,  1          // InterfaceMethod com/sun/javafx/tk/TKScene.waitForSynchronization:()V
      54: aload_0
      55: getfield      #72                 // Field scenePulseListener:Ljavafx/scene/Scene$ScenePulseListener;
      58: invokestatic  #241                // Method javafx/scene/Scene$ScenePulseListener.access$900:(Ljavafx/scene/Scene$ScenePulseListener;)V
      61: aload_0
      62: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
      65: iconst_0
      66: invokeinterface #242,  2          // InterfaceMethod com/sun/javafx/tk/TKScene.releaseSynchronization:(Z)V
      71: goto          87
      74: astore_2
      75: aload_0
      76: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
      79: iconst_0
      80: invokeinterface #242,  2          // InterfaceMethod com/sun/javafx/tk/TKScene.releaseSynchronization:(Z)V
      85: aload_2
      86: athrow
      87: goto          97
      90: aload_0
      91: getfield      #72                 // Field scenePulseListener:Ljavafx/scene/Scene$ScenePulseListener;
      94: invokestatic  #241                // Method javafx/scene/Scene$ScenePulseListener.access$900:(Ljavafx/scene/Scene$ScenePulseListener;)V
      97: return
    Exception table:
       from    to  target type
          54    61    74   any

  static javafx.scene.image.WritableImage doSnapshot(javafx.scene.Scene, double, double, double, double, javafx.scene.Node, com.sun.javafx.geom.transform.BaseTransform, boolean, javafx.scene.paint.Paint, javafx.scene.Camera, javafx.scene.image.WritableImage);
    Code:
       0: invokestatic  #58                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: astore        15
       5: new           #243                // class com/sun/javafx/tk/Toolkit$ImageRenderingContext
       8: dup
       9: invokespecial #244                // Method com/sun/javafx/tk/Toolkit$ImageRenderingContext."<init>":()V
      12: astore        16
      14: dload_1
      15: invokestatic  #245                // Method java/lang/Math.floor:(D)D
      18: d2i
      19: istore        17
      21: dload_3
      22: invokestatic  #245                // Method java/lang/Math.floor:(D)D
      25: d2i
      26: istore        18
      28: dload_1
      29: dload         5
      31: dadd
      32: invokestatic  #246                // Method java/lang/Math.ceil:(D)D
      35: d2i
      36: istore        19
      38: dload_3
      39: dload         7
      41: dadd
      42: invokestatic  #246                // Method java/lang/Math.ceil:(D)D
      45: d2i
      46: istore        20
      48: iload         19
      50: iload         17
      52: isub
      53: iconst_1
      54: invokestatic  #247                // Method java/lang/Math.max:(II)I
      57: istore        21
      59: iload         20
      61: iload         18
      63: isub
      64: iconst_1
      65: invokestatic  #247                // Method java/lang/Math.max:(II)I
      68: istore        22
      70: aload         14
      72: ifnonnull     91
      75: new           #248                // class javafx/scene/image/WritableImage
      78: dup
      79: iload         21
      81: iload         22
      83: invokespecial #249                // Method javafx/scene/image/WritableImage."<init>":(II)V
      86: astore        14
      88: goto          107
      91: aload         14
      93: invokevirtual #250                // Method javafx/scene/image/WritableImage.getWidth:()D
      96: d2i
      97: istore        21
      99: aload         14
     101: invokevirtual #251                // Method javafx/scene/image/WritableImage.getHeight:()D
     104: d2i
     105: istore        22
     107: iconst_1
     108: invokestatic  #147                // Method setAllowPGAccess:(Z)V
     111: aload         16
     113: iload         17
     115: putfield      #252                // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.x:I
     118: aload         16
     120: iload         18
     122: putfield      #253                // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.y:I
     125: aload         16
     127: iload         21
     129: putfield      #254                // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.width:I
     132: aload         16
     134: iload         22
     136: putfield      #255                // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.height:I
     139: aload         16
     141: aload         10
     143: putfield      #256                // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.transform:Lcom/sun/javafx/geom/transform/BaseTransform;
     146: aload         16
     148: iload         11
     150: putfield      #257                // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.depthBuffer:Z
     153: aload         16
     155: aload         9
     157: invokevirtual #258                // Method javafx/scene/Node.getPeer:()Lcom/sun/javafx/sg/prism/NGNode;
     160: putfield      #259                // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.root:Lcom/sun/javafx/sg/prism/NGNode;
     163: aload         16
     165: aload         12
     167: ifnonnull     174
     170: aconst_null
     171: goto          181
     174: aload         15
     176: aload         12
     178: invokevirtual #162                // Method com/sun/javafx/tk/Toolkit.getPaint:(Ljavafx/scene/paint/Paint;)Ljava/lang/Object;
     181: putfield      #260                // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.platformPaint:Ljava/lang/Object;
     184: dconst_1
     185: dstore        23
     187: dconst_1
     188: dstore        25
     190: aload         13
     192: ifnull        246
     195: aload         13
     197: invokevirtual #261                // Method javafx/scene/Camera.getViewWidth:()D
     200: dstore        23
     202: aload         13
     204: invokevirtual #262                // Method javafx/scene/Camera.getViewHeight:()D
     207: dstore        25
     209: aload         13
     211: iload         21
     213: i2d
     214: invokevirtual #219                // Method javafx/scene/Camera.setViewWidth:(D)V
     217: aload         13
     219: iload         22
     221: i2d
     222: invokevirtual #221                // Method javafx/scene/Camera.setViewHeight:(D)V
     225: aload         13
     227: invokestatic  #165                // Method com/sun/javafx/scene/NodeHelper.updatePeer:(Ljavafx/scene/Node;)V
     230: aload         16
     232: aload         13
     234: invokevirtual #166                // Method javafx/scene/Camera.getPeer:()Lcom/sun/javafx/sg/prism/NGNode;
     237: checkcast     #167                // class com/sun/javafx/sg/prism/NGCamera
     240: putfield      #263                // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.camera:Lcom/sun/javafx/sg/prism/NGCamera;
     243: goto          252
     246: aload         16
     248: aconst_null
     249: putfield      #263                // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.camera:Lcom/sun/javafx/sg/prism/NGCamera;
     252: aload         16
     254: aconst_null
     255: putfield      #264                // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.lights:[Lcom/sun/javafx/sg/prism/NGLightBase;
     258: aload_0
     259: ifnull        342
     262: aload_0
     263: getfield      #96                 // Field lights:Ljava/util/List;
     266: invokeinterface #265,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     271: ifne          342
     274: aload         16
     276: aload_0
     277: getfield      #96                 // Field lights:Ljava/util/List;
     280: invokeinterface #266,  1          // InterfaceMethod java/util/List.size:()I
     285: anewarray     #267                // class com/sun/javafx/sg/prism/NGLightBase
     288: putfield      #264                // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.lights:[Lcom/sun/javafx/sg/prism/NGLightBase;
     291: iconst_0
     292: istore        27
     294: iload         27
     296: aload_0
     297: getfield      #96                 // Field lights:Ljava/util/List;
     300: invokeinterface #266,  1          // InterfaceMethod java/util/List.size:()I
     305: if_icmpge     342
     308: aload         16
     310: getfield      #264                // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.lights:[Lcom/sun/javafx/sg/prism/NGLightBase;
     313: iload         27
     315: aload_0
     316: getfield      #96                 // Field lights:Ljava/util/List;
     319: iload         27
     321: invokeinterface #268,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     326: checkcast     #269                // class javafx/scene/LightBase
     329: invokevirtual #270                // Method javafx/scene/LightBase.getPeer:()Lcom/sun/javafx/sg/prism/NGNode;
     332: checkcast     #267                // class com/sun/javafx/sg/prism/NGLightBase
     335: aastore
     336: iinc          27, 1
     339: goto          294
     342: invokestatic  #271                // Method com/sun/javafx/tk/Toolkit.getWritableImageAccessor:()Lcom/sun/javafx/tk/Toolkit$WritableImageAccessor;
     345: astore        27
     347: aload         16
     349: aload         27
     351: aload         14
     353: invokeinterface #272,  2          // InterfaceMethod com/sun/javafx/tk/Toolkit$WritableImageAccessor.getTkImageLoader:(Ljavafx/scene/image/WritableImage;)Ljava/lang/Object;
     358: putfield      #273                // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.platformImage:Ljava/lang/Object;
     361: iconst_0
     362: invokestatic  #147                // Method setAllowPGAccess:(Z)V
     365: aload         15
     367: aload         16
     369: invokevirtual #274                // Method com/sun/javafx/tk/Toolkit.renderToImage:(Lcom/sun/javafx/tk/Toolkit$ImageRenderingContext;)Ljava/lang/Object;
     372: astore        28
     374: aload         27
     376: aload         14
     378: aload         28
     380: invokeinterface #275,  3          // InterfaceMethod com/sun/javafx/tk/Toolkit$WritableImageAccessor.loadTkImage:(Ljavafx/scene/image/WritableImage;Ljava/lang/Object;)V
     385: aload         13
     387: ifnull        417
     390: iconst_1
     391: invokestatic  #147                // Method setAllowPGAccess:(Z)V
     394: aload         13
     396: dload         23
     398: invokevirtual #219                // Method javafx/scene/Camera.setViewWidth:(D)V
     401: aload         13
     403: dload         25
     405: invokevirtual #221                // Method javafx/scene/Camera.setViewHeight:(D)V
     408: aload         13
     410: invokestatic  #165                // Method com/sun/javafx/scene/NodeHelper.updatePeer:(Ljavafx/scene/Node;)V
     413: iconst_0
     414: invokestatic  #147                // Method setAllowPGAccess:(Z)V
     417: aload_0
     418: ifnull        432
     421: aload_0
     422: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
     425: ifnull        432
     428: aload_0
     429: invokevirtual #223                // Method setNeedsRepaint:()V
     432: aload         14
     434: areturn

  private javafx.scene.image.WritableImage doSnapshot(javafx.scene.image.WritableImage);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #118                // Method getRoot:()Ljavafx/scene/Parent;
       5: invokevirtual #276                // Method doCSSLayoutSyncForSnapshot:(Ljavafx/scene/Node;)V
       8: aload_0
       9: invokevirtual #218                // Method getWidth:()D
      12: dstore_2
      13: aload_0
      14: invokevirtual #220                // Method getHeight:()D
      17: dstore        4
      19: getstatic     #277                // Field com/sun/javafx/geom/transform/BaseTransform.IDENTITY_TRANSFORM:Lcom/sun/javafx/geom/transform/BaseTransform;
      22: astore        6
      24: aload_0
      25: dconst_0
      26: dconst_0
      27: dload_2
      28: dload         4
      30: aload_0
      31: invokevirtual #118                // Method getRoot:()Ljavafx/scene/Parent;
      34: aload         6
      36: aload_0
      37: invokevirtual #148                // Method isDepthBufferInternal:()Z
      40: aload_0
      41: invokevirtual #161                // Method getFill:()Ljavafx/scene/paint/Paint;
      44: aload_0
      45: invokevirtual #164                // Method getEffectiveCamera:()Ljavafx/scene/Camera;
      48: aload_1
      49: invokestatic  #278                // Method doSnapshot:(Ljavafx/scene/Scene;DDDDLjavafx/scene/Node;Lcom/sun/javafx/geom/transform/BaseTransform;ZLjavafx/scene/paint/Paint;Ljavafx/scene/Camera;Ljavafx/scene/image/WritableImage;)Ljavafx/scene/image/WritableImage;
      52: areturn

  static void addSnapshotRunnable(java.lang.Runnable);
    Code:
       0: invokestatic  #58                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: invokevirtual #125                // Method com/sun/javafx/tk/Toolkit.checkFxUserThread:()V
       6: getstatic     #279                // Field snapshotPulseListener:Lcom/sun/javafx/tk/TKPulseListener;
       9: ifnonnull     55
      12: new           #94                 // class java/util/ArrayList
      15: dup
      16: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      19: putstatic     #280                // Field snapshotRunnableListA:Ljava/util/List;
      22: new           #94                 // class java/util/ArrayList
      25: dup
      26: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
      29: putstatic     #281                // Field snapshotRunnableListB:Ljava/util/List;
      32: getstatic     #280                // Field snapshotRunnableListA:Ljava/util/List;
      35: putstatic     #282                // Field snapshotRunnableList:Ljava/util/List;
      38: invokedynamic #283,  0            // InvokeDynamic #0:pulse:()Lcom/sun/javafx/tk/TKPulseListener;
      43: putstatic     #279                // Field snapshotPulseListener:Lcom/sun/javafx/tk/TKPulseListener;
      46: invokestatic  #58                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      49: getstatic     #279                // Field snapshotPulseListener:Lcom/sun/javafx/tk/TKPulseListener;
      52: invokevirtual #284                // Method com/sun/javafx/tk/Toolkit.addPostSceneTkPulseListener:(Lcom/sun/javafx/tk/TKPulseListener;)V
      55: invokestatic  #68                 // Method java/security/AccessController.getContext:()Ljava/security/AccessControlContext;
      58: astore_1
      59: getstatic     #282                // Field snapshotRunnableList:Ljava/util/List;
      62: aload_0
      63: aload_1
      64: invokedynamic #285,  0            // InvokeDynamic #1:run:(Ljava/lang/Runnable;Ljava/security/AccessControlContext;)Ljava/lang/Runnable;
      69: invokeinterface #129,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      74: pop
      75: invokestatic  #58                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      78: invokevirtual #115                // Method com/sun/javafx/tk/Toolkit.requestNextPulse:()V
      81: return

  public javafx.scene.image.WritableImage snapshot(javafx.scene.image.WritableImage);
    Code:
       0: invokestatic  #58                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: invokevirtual #125                // Method com/sun/javafx/tk/Toolkit.checkFxUserThread:()V
       6: aload_0
       7: aload_1
       8: invokespecial #286                // Method doSnapshot:(Ljavafx/scene/image/WritableImage;)Ljavafx/scene/image/WritableImage;
      11: areturn

  public void snapshot(javafx.util.Callback<javafx.scene.SnapshotResult, java.lang.Void>, javafx.scene.image.WritableImage);
    Code:
       0: invokestatic  #58                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: invokevirtual #125                // Method com/sun/javafx/tk/Toolkit.checkFxUserThread:()V
       6: aload_1
       7: ifnonnull     21
      10: new           #99                 // class java/lang/NullPointerException
      13: dup
      14: ldc_w         #287                // String The callback must not be null
      17: invokespecial #101                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_1
      22: astore_3
      23: aload_2
      24: astore        4
      26: aload_0
      27: aload         4
      29: aload_3
      30: invokedynamic #288,  0            // InvokeDynamic #2:run:(Ljavafx/scene/Scene;Ljavafx/scene/image/WritableImage;Ljavafx/util/Callback;)Ljava/lang/Runnable;
      35: astore        5
      37: aload         5
      39: invokestatic  #289                // Method addSnapshotRunnable:(Ljava/lang/Runnable;)V
      42: return

  public final void setCursor(javafx.scene.Cursor);
    Code:
       0: aload_0
       1: invokevirtual #290                // Method cursorProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.scene.Cursor getCursor();
    Code:
       0: aload_0
       1: getfield      #291                // Field cursor:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #291                // Field cursor:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #292                // class javafx/scene/Cursor
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.scene.Cursor> cursorProperty();
    Code:
       0: aload_0
       1: getfield      #291                // Field cursor:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #293                // class javafx/scene/Scene$9
      11: dup
      12: aload_0
      13: invokespecial #294                // Method javafx/scene/Scene$9."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #291                // Field cursor:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #291                // Field cursor:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public javafx.scene.Node lookup(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #118                // Method getRoot:()Ljavafx/scene/Parent;
       4: aload_1
       5: invokevirtual #295                // Method javafx/scene/Parent.lookup:(Ljava/lang/String;)Ljavafx/scene/Node;
       8: areturn

  public final javafx.collections.ObservableList<java.lang.String> getStylesheets();
    Code:
       0: aload_0
       1: getfield      #78                 // Field stylesheets:Ljavafx/collections/ObservableList;
       4: areturn

  public final javafx.beans.property.ObjectProperty<java.lang.String> userAgentStylesheetProperty();
    Code:
       0: aload_0
       1: getfield      #79                 // Field userAgentStylesheet:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     24
       7: aload_0
       8: new           #296                // class javafx/scene/Scene$11
      11: dup
      12: aload_0
      13: aload_0
      14: ldc_w         #297                // String userAgentStylesheet
      17: aconst_null
      18: invokespecial #298                // Method javafx/scene/Scene$11."<init>":(Ljavafx/scene/Scene;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V
      21: putfield      #79                 // Field userAgentStylesheet:Ljavafx/beans/property/ObjectProperty;
      24: aload_0
      25: getfield      #79                 // Field userAgentStylesheet:Ljavafx/beans/property/ObjectProperty;
      28: areturn

  public final java.lang.String getUserAgentStylesheet();
    Code:
       0: aload_0
       1: getfield      #79                 // Field userAgentStylesheet:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #79                 // Field userAgentStylesheet:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #299                // class java/lang/String
      21: areturn

  public final void setUserAgentStylesheet(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #300                // Method userAgentStylesheetProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final boolean isDepthBuffer();
    Code:
       0: aload_0
       1: getfield      #97                 // Field depthBuffer:Z
       4: ireturn

  boolean isDepthBufferInternal();
    Code:
       0: getstatic     #102                // Field javafx/application/ConditionalFeature.SCENE3D:Ljavafx/application/ConditionalFeature;
       3: invokestatic  #103                // Method javafx/application/Platform.isSupported:(Ljavafx/application/ConditionalFeature;)Z
       6: ifne          11
       9: iconst_0
      10: ireturn
      11: aload_0
      12: getfield      #97                 // Field depthBuffer:Z
      15: ireturn

  private void init(double, double);
    Code:
       0: dload_1
       1: dconst_0
       2: dcmpl
       3: iflt          18
       6: aload_0
       7: dload_1
       8: putfield      #65                 // Field widthSetByUser:D
      11: aload_0
      12: dload_1
      13: d2f
      14: f2d
      15: invokespecial #26                 // Method setWidth:(D)V
      18: dload_3
      19: dconst_0
      20: dcmpl
      21: iflt          36
      24: aload_0
      25: dload_3
      26: putfield      #66                 // Field heightSetByUser:D
      29: aload_0
      30: dload_3
      31: d2f
      32: f2d
      33: invokespecial #25                 // Method setHeight:(D)V
      36: aload_0
      37: aload_0
      38: getfield      #65                 // Field widthSetByUser:D
      41: dconst_0
      42: dcmpl
      43: iflt          59
      46: aload_0
      47: getfield      #66                 // Field heightSetByUser:D
      50: dconst_0
      51: dcmpl
      52: iflt          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: putfield      #67                 // Field sizeInitialized:Z
      63: return

  private void init();
    Code:
       0: invokestatic  #301                // Method com/sun/javafx/perf/PerformanceTracker.isLoggingEnabled:()Z
       3: ifeq          15
       6: aload_0
       7: invokedynamic #302,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljavafx/scene/Scene;)Ljava/lang/String;
      12: invokestatic  #146                // Method com/sun/javafx/perf/PerformanceTracker.logEvent:(Ljava/lang/String;)V
      15: aload_0
      16: new           #303                // class javafx/scene/Scene$MouseHandler
      19: dup
      20: aload_0
      21: invokespecial #304                // Method javafx/scene/Scene$MouseHandler."<init>":(Ljavafx/scene/Scene;)V
      24: putfield      #38                 // Field mouseHandler:Ljavafx/scene/Scene$MouseHandler;
      27: aload_0
      28: new           #305                // class javafx/scene/Scene$ClickGenerator
      31: dup
      32: invokespecial #306                // Method javafx/scene/Scene$ClickGenerator."<init>":()V
      35: putfield      #4                  // Field clickGenerator:Ljavafx/scene/Scene$ClickGenerator;
      38: invokestatic  #301                // Method com/sun/javafx/perf/PerformanceTracker.isLoggingEnabled:()Z
      41: ifeq          53
      44: aload_0
      45: invokedynamic #307,  0            // InvokeDynamic #4:makeConcatWithConstants:(Ljavafx/scene/Scene;)Ljava/lang/String;
      50: invokestatic  #146                // Method com/sun/javafx/perf/PerformanceTracker.logEvent:(Ljava/lang/String;)V
      53: return

  void preferredSize();
    Code:
       0: aload_0
       1: invokevirtual #118                // Method getRoot:()Ljavafx/scene/Parent;
       4: astore_1
       5: aload_0
       6: invokespecial #32                 // Method doCSSPass:()V
       9: aload_0
      10: aload_1
      11: invokevirtual #308                // Method resizeRootToPreferredSize:(Ljavafx/scene/Parent;)V
      14: aload_0
      15: invokevirtual #237                // Method doLayoutPass:()V
      18: aload_0
      19: getfield      #65                 // Field widthSetByUser:D
      22: dconst_0
      23: dcmpg
      24: ifge          68
      27: aload_0
      28: aload_1
      29: invokevirtual #309                // Method javafx/scene/Parent.isResizable:()Z
      32: ifeq          55
      35: aload_1
      36: invokevirtual #310                // Method javafx/scene/Parent.getLayoutX:()D
      39: aload_1
      40: invokevirtual #311                // Method javafx/scene/Parent.getTranslateX:()D
      43: dadd
      44: aload_1
      45: invokevirtual #312                // Method javafx/scene/Parent.getLayoutBounds:()Ljavafx/geometry/Bounds;
      48: invokevirtual #313                // Method javafx/geometry/Bounds.getWidth:()D
      51: dadd
      52: goto          62
      55: aload_1
      56: invokevirtual #314                // Method javafx/scene/Parent.getBoundsInParent:()Ljavafx/geometry/Bounds;
      59: invokevirtual #315                // Method javafx/geometry/Bounds.getMaxX:()D
      62: invokespecial #26                 // Method setWidth:(D)V
      65: goto          76
      68: aload_0
      69: aload_0
      70: getfield      #65                 // Field widthSetByUser:D
      73: invokespecial #26                 // Method setWidth:(D)V
      76: aload_0
      77: getfield      #66                 // Field heightSetByUser:D
      80: dconst_0
      81: dcmpg
      82: ifge          126
      85: aload_0
      86: aload_1
      87: invokevirtual #309                // Method javafx/scene/Parent.isResizable:()Z
      90: ifeq          113
      93: aload_1
      94: invokevirtual #316                // Method javafx/scene/Parent.getLayoutY:()D
      97: aload_1
      98: invokevirtual #317                // Method javafx/scene/Parent.getTranslateY:()D
     101: dadd
     102: aload_1
     103: invokevirtual #312                // Method javafx/scene/Parent.getLayoutBounds:()Ljavafx/geometry/Bounds;
     106: invokevirtual #318                // Method javafx/geometry/Bounds.getHeight:()D
     109: dadd
     110: goto          120
     113: aload_1
     114: invokevirtual #314                // Method javafx/scene/Parent.getBoundsInParent:()Ljavafx/geometry/Bounds;
     117: invokevirtual #319                // Method javafx/geometry/Bounds.getMaxY:()D
     120: invokespecial #25                 // Method setHeight:(D)V
     123: goto          134
     126: aload_0
     127: aload_0
     128: getfield      #66                 // Field heightSetByUser:D
     131: invokespecial #25                 // Method setHeight:(D)V
     134: aload_0
     135: aload_0
     136: invokevirtual #218                // Method getWidth:()D
     139: dconst_0
     140: dcmpl
     141: ifle          157
     144: aload_0
     145: invokevirtual #220                // Method getHeight:()D
     148: dconst_0
     149: dcmpl
     150: ifle          157
     153: iconst_1
     154: goto          158
     157: iconst_0
     158: putfield      #67                 // Field sizeInitialized:Z
     161: ldc_w         #320                // String Scene preferred bounds computation complete
     164: invokestatic  #146                // Method com/sun/javafx/perf/PerformanceTracker.logEvent:(Ljava/lang/String;)V
     167: return

  final void resizeRootToPreferredSize(javafx.scene.Parent);
    Code:
       0: aload_1
       1: invokevirtual #321                // Method javafx/scene/Parent.getContentBias:()Ljavafx/geometry/Orientation;
       4: astore        6
       6: aload         6
       8: ifnonnull     39
      11: aload_1
      12: aload_0
      13: getfield      #65                 // Field widthSetByUser:D
      16: ldc2_w        #53                 // double -1.0d
      19: invokestatic  #322                // Method getPreferredWidth:(Ljavafx/scene/Parent;DD)D
      22: dstore_2
      23: aload_1
      24: aload_0
      25: getfield      #66                 // Field heightSetByUser:D
      28: ldc2_w        #53                 // double -1.0d
      31: invokestatic  #323                // Method getPreferredHeight:(Ljavafx/scene/Parent;DD)D
      34: dstore        4
      36: goto          97
      39: aload         6
      41: getstatic     #324                // Field javafx/geometry/Orientation.HORIZONTAL:Ljavafx/geometry/Orientation;
      44: if_acmpne     73
      47: aload_1
      48: aload_0
      49: getfield      #65                 // Field widthSetByUser:D
      52: ldc2_w        #53                 // double -1.0d
      55: invokestatic  #322                // Method getPreferredWidth:(Ljavafx/scene/Parent;DD)D
      58: dstore_2
      59: aload_1
      60: aload_0
      61: getfield      #66                 // Field heightSetByUser:D
      64: dload_2
      65: invokestatic  #323                // Method getPreferredHeight:(Ljavafx/scene/Parent;DD)D
      68: dstore        4
      70: goto          97
      73: aload_1
      74: aload_0
      75: getfield      #66                 // Field heightSetByUser:D
      78: ldc2_w        #53                 // double -1.0d
      81: invokestatic  #323                // Method getPreferredHeight:(Ljavafx/scene/Parent;DD)D
      84: dstore        4
      86: aload_1
      87: aload_0
      88: getfield      #65                 // Field widthSetByUser:D
      91: dload         4
      93: invokestatic  #322                // Method getPreferredWidth:(Ljavafx/scene/Parent;DD)D
      96: dstore_2
      97: aload_1
      98: dload_2
      99: dload         4
     101: invokevirtual #204                // Method javafx/scene/Parent.resize:(DD)V
     104: return

  private static double getPreferredWidth(javafx.scene.Parent, double, double);
    Code:
       0: dload_1
       1: dconst_0
       2: dcmpl
       3: iflt          8
       6: dload_1
       7: dreturn
       8: dload_3
       9: dconst_0
      10: dcmpl
      11: iflt          18
      14: dload_3
      15: goto          21
      18: ldc2_w        #53                 // double -1.0d
      21: dstore        5
      23: aload_0
      24: aload_0
      25: dload         5
      27: invokevirtual #325                // Method javafx/scene/Parent.prefWidth:(D)D
      30: aload_0
      31: dload         5
      33: invokevirtual #326                // Method javafx/scene/Parent.minWidth:(D)D
      36: aload_0
      37: dload         5
      39: invokevirtual #327                // Method javafx/scene/Parent.maxWidth:(D)D
      42: invokevirtual #328                // Method javafx/scene/Parent.boundedSize:(DDD)D
      45: dreturn

  private static double getPreferredHeight(javafx.scene.Parent, double, double);
    Code:
       0: dload_1
       1: dconst_0
       2: dcmpl
       3: iflt          8
       6: dload_1
       7: dreturn
       8: dload_3
       9: dconst_0
      10: dcmpl
      11: iflt          18
      14: dload_3
      15: goto          21
      18: ldc2_w        #53                 // double -1.0d
      21: dstore        5
      23: aload_0
      24: aload_0
      25: dload         5
      27: invokevirtual #329                // Method javafx/scene/Parent.prefHeight:(D)D
      30: aload_0
      31: dload         5
      33: invokevirtual #330                // Method javafx/scene/Parent.minHeight:(D)D
      36: aload_0
      37: dload         5
      39: invokevirtual #331                // Method javafx/scene/Parent.maxHeight:(D)D
      42: invokevirtual #328                // Method javafx/scene/Parent.boundedSize:(DDD)D
      45: dreturn

  void processMouseEvent(javafx.scene.input.MouseEvent);
    Code:
       0: aload_0
       1: getfield      #38                 // Field mouseHandler:Ljavafx/scene/Scene$MouseHandler;
       4: aload_1
       5: iconst_0
       6: invokestatic  #332                // Method javafx/scene/Scene$MouseHandler.access$1200:(Ljavafx/scene/Scene$MouseHandler;Ljavafx/scene/input/MouseEvent;Z)V
       9: return

  private void processMenuEvent(double, double, double, double, boolean);
    Code:
       0: aconst_null
       1: astore        10
       3: iconst_1
       4: putstatic     #19                 // Field inMousePick:Z
       7: iload         9
       9: ifeq          119
      12: aload_0
      13: invokevirtual #333                // Method getFocusOwner:()Ljavafx/scene/Node;
      16: astore        11
      18: dload         5
      20: dload_1
      21: dsub
      22: dstore        12
      24: dload         7
      26: dload_3
      27: dsub
      28: dstore        14
      30: aload         11
      32: ifnull        86
      35: aload         11
      37: aload         11
      39: invokevirtual #334                // Method javafx/scene/Node.getBoundsInLocal:()Ljavafx/geometry/Bounds;
      42: invokevirtual #335                // Method javafx/scene/Node.localToScene:(Ljavafx/geometry/Bounds;)Ljavafx/geometry/Bounds;
      45: astore        16
      47: aload         16
      49: invokevirtual #336                // Method javafx/geometry/Bounds.getMinX:()D
      52: aload         16
      54: invokevirtual #313                // Method javafx/geometry/Bounds.getWidth:()D
      57: ldc2_w        #337                // double 4.0d
      60: ddiv
      61: dadd
      62: dstore_1
      63: aload         16
      65: invokevirtual #339                // Method javafx/geometry/Bounds.getMinY:()D
      68: aload         16
      70: invokevirtual #318                // Method javafx/geometry/Bounds.getHeight:()D
      73: ldc2_w        #340                // double 2.0d
      76: ddiv
      77: dadd
      78: dstore_3
      79: aload         11
      81: astore        10
      83: goto          107
      86: aload_0
      87: invokevirtual #218                // Method getWidth:()D
      90: ldc2_w        #337                // double 4.0d
      93: ddiv
      94: dstore_1
      95: aload_0
      96: invokevirtual #218                // Method getWidth:()D
      99: ldc2_w        #340                // double 2.0d
     102: ddiv
     103: dstore_3
     104: aload_0
     105: astore        10
     107: dload_1
     108: dload         12
     110: dadd
     111: dstore        5
     113: dload_3
     114: dload         14
     116: dadd
     117: dstore        7
     119: aload_0
     120: dload_1
     121: dload_3
     122: invokespecial #18                 // Method pick:(DD)Ljavafx/scene/input/PickResult;
     125: astore        11
     127: iload         9
     129: ifne          147
     132: aload         11
     134: invokevirtual #342                // Method javafx/scene/input/PickResult.getIntersectedNode:()Ljavafx/scene/Node;
     137: astore        10
     139: aload         10
     141: ifnonnull     147
     144: aload_0
     145: astore        10
     147: aload         10
     149: ifnull        181
     152: new           #343                // class javafx/scene/input/ContextMenuEvent
     155: dup
     156: getstatic     #344                // Field javafx/scene/input/ContextMenuEvent.CONTEXT_MENU_REQUESTED:Ljavafx/event/EventType;
     159: dload_1
     160: dload_3
     161: dload         5
     163: dload         7
     165: iload         9
     167: aload         11
     169: invokespecial #345                // Method javafx/scene/input/ContextMenuEvent."<init>":(Ljavafx/event/EventType;DDDDZLjavafx/scene/input/PickResult;)V
     172: astore        12
     174: aload         10
     176: aload         12
     178: invokestatic  #346                // Method javafx/event/Event.fireEvent:(Ljavafx/event/EventTarget;Ljavafx/event/Event;)V
     181: iconst_0
     182: putstatic     #19                 // Field inMousePick:Z
     185: return

  private void processGestureEvent(javafx.scene.input.GestureEvent, javafx.scene.Scene$TouchGesture);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_1
       3: invokevirtual #347                // Method javafx/scene/input/GestureEvent.getEventType:()Ljavafx/event/EventType;
       6: getstatic     #348                // Field javafx/scene/input/ZoomEvent.ZOOM_STARTED:Ljavafx/event/EventType;
       9: if_acmpeq     32
      12: aload_1
      13: invokevirtual #347                // Method javafx/scene/input/GestureEvent.getEventType:()Ljavafx/event/EventType;
      16: getstatic     #349                // Field javafx/scene/input/RotateEvent.ROTATION_STARTED:Ljavafx/event/EventType;
      19: if_acmpeq     32
      22: aload_1
      23: invokevirtual #347                // Method javafx/scene/input/GestureEvent.getEventType:()Ljavafx/event/EventType;
      26: getstatic     #350                // Field javafx/scene/input/ScrollEvent.SCROLL_STARTED:Ljavafx/event/EventType;
      29: if_acmpne     42
      32: aload_2
      33: aconst_null
      34: putfield      #351                // Field javafx/scene/Scene$TouchGesture.target:Ljava/lang/ref/WeakReference;
      37: aload_2
      38: iconst_0
      39: putfield      #352                // Field javafx/scene/Scene$TouchGesture.finished:Z
      42: aload_2
      43: getfield      #351                // Field javafx/scene/Scene$TouchGesture.target:Ljava/lang/ref/WeakReference;
      46: ifnull        77
      49: aload_2
      50: getfield      #352                // Field javafx/scene/Scene$TouchGesture.finished:Z
      53: ifeq          63
      56: aload_1
      57: invokevirtual #353                // Method javafx/scene/input/GestureEvent.isInertia:()Z
      60: ifeq          77
      63: aload_2
      64: getfield      #351                // Field javafx/scene/Scene$TouchGesture.target:Ljava/lang/ref/WeakReference;
      67: invokevirtual #354                // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      70: checkcast     #355                // class javafx/event/EventTarget
      73: astore_3
      74: goto          91
      77: aload_1
      78: invokevirtual #356                // Method javafx/scene/input/GestureEvent.getPickResult:()Ljavafx/scene/input/PickResult;
      81: invokevirtual #342                // Method javafx/scene/input/PickResult.getIntersectedNode:()Ljavafx/scene/Node;
      84: astore_3
      85: aload_3
      86: ifnonnull     91
      89: aload_0
      90: astore_3
      91: aload_1
      92: invokevirtual #347                // Method javafx/scene/input/GestureEvent.getEventType:()Ljavafx/event/EventType;
      95: getstatic     #348                // Field javafx/scene/input/ZoomEvent.ZOOM_STARTED:Ljavafx/event/EventType;
      98: if_acmpeq     121
     101: aload_1
     102: invokevirtual #347                // Method javafx/scene/input/GestureEvent.getEventType:()Ljavafx/event/EventType;
     105: getstatic     #349                // Field javafx/scene/input/RotateEvent.ROTATION_STARTED:Ljavafx/event/EventType;
     108: if_acmpeq     121
     111: aload_1
     112: invokevirtual #347                // Method javafx/scene/input/GestureEvent.getEventType:()Ljavafx/event/EventType;
     115: getstatic     #350                // Field javafx/scene/input/ScrollEvent.SCROLL_STARTED:Ljavafx/event/EventType;
     118: if_acmpne     133
     121: aload_2
     122: new           #357                // class java/lang/ref/WeakReference
     125: dup
     126: aload_3
     127: invokespecial #358                // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
     130: putfield      #351                // Field javafx/scene/Scene$TouchGesture.target:Ljava/lang/ref/WeakReference;
     133: aload_1
     134: invokevirtual #347                // Method javafx/scene/input/GestureEvent.getEventType:()Ljavafx/event/EventType;
     137: getstatic     #359                // Field javafx/scene/input/ZoomEvent.ZOOM_FINISHED:Ljavafx/event/EventType;
     140: if_acmpeq     208
     143: aload_1
     144: invokevirtual #347                // Method javafx/scene/input/GestureEvent.getEventType:()Ljavafx/event/EventType;
     147: getstatic     #360                // Field javafx/scene/input/RotateEvent.ROTATION_FINISHED:Ljavafx/event/EventType;
     150: if_acmpeq     208
     153: aload_1
     154: invokevirtual #347                // Method javafx/scene/input/GestureEvent.getEventType:()Ljavafx/event/EventType;
     157: getstatic     #361                // Field javafx/scene/input/ScrollEvent.SCROLL_FINISHED:Ljavafx/event/EventType;
     160: if_acmpeq     208
     163: aload_1
     164: invokevirtual #353                // Method javafx/scene/input/GestureEvent.isInertia:()Z
     167: ifne          208
     170: aload_2
     171: new           #362                // class javafx/geometry/Point2D
     174: dup
     175: aload_1
     176: invokevirtual #363                // Method javafx/scene/input/GestureEvent.getSceneX:()D
     179: aload_1
     180: invokevirtual #364                // Method javafx/scene/input/GestureEvent.getSceneY:()D
     183: invokespecial #365                // Method javafx/geometry/Point2D."<init>":(DD)V
     186: putfield      #366                // Field javafx/scene/Scene$TouchGesture.sceneCoords:Ljavafx/geometry/Point2D;
     189: aload_2
     190: new           #362                // class javafx/geometry/Point2D
     193: dup
     194: aload_1
     195: invokevirtual #367                // Method javafx/scene/input/GestureEvent.getScreenX:()D
     198: aload_1
     199: invokevirtual #368                // Method javafx/scene/input/GestureEvent.getScreenY:()D
     202: invokespecial #365                // Method javafx/geometry/Point2D."<init>":(DD)V
     205: putfield      #369                // Field javafx/scene/Scene$TouchGesture.screenCoords:Ljavafx/geometry/Point2D;
     208: aload_3
     209: ifnull        217
     212: aload_3
     213: aload_1
     214: invokestatic  #346                // Method javafx/event/Event.fireEvent:(Ljavafx/event/EventTarget;Ljavafx/event/Event;)V
     217: aload_1
     218: invokevirtual #347                // Method javafx/scene/input/GestureEvent.getEventType:()Ljavafx/event/EventType;
     221: getstatic     #359                // Field javafx/scene/input/ZoomEvent.ZOOM_FINISHED:Ljavafx/event/EventType;
     224: if_acmpeq     247
     227: aload_1
     228: invokevirtual #347                // Method javafx/scene/input/GestureEvent.getEventType:()Ljavafx/event/EventType;
     231: getstatic     #360                // Field javafx/scene/input/RotateEvent.ROTATION_FINISHED:Ljavafx/event/EventType;
     234: if_acmpeq     247
     237: aload_1
     238: invokevirtual #347                // Method javafx/scene/input/GestureEvent.getEventType:()Ljavafx/event/EventType;
     241: getstatic     #361                // Field javafx/scene/input/ScrollEvent.SCROLL_FINISHED:Ljavafx/event/EventType;
     244: if_acmpne     252
     247: aload_2
     248: iconst_1
     249: putfield      #352                // Field javafx/scene/Scene$TouchGesture.finished:Z
     252: return

  private void processTouchEvent(javafx.scene.input.TouchEvent, javafx.scene.input.TouchPoint[]);
    Code:
       0: iconst_1
       1: putstatic     #19                 // Field inMousePick:Z
       4: aload_0
       5: dup
       6: getfield      #7                  // Field touchEventSetId:I
       9: iconst_1
      10: iadd
      11: putfield      #7                  // Field touchEventSetId:I
      14: aload_2
      15: invokestatic  #370                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      18: astore_3
      19: aload_2
      20: astore        4
      22: aload         4
      24: arraylength
      25: istore        5
      27: iconst_0
      28: istore        6
      30: iload         6
      32: iload         5
      34: if_icmpge     211
      37: aload         4
      39: iload         6
      41: aaload
      42: astore        7
      44: aload         7
      46: invokevirtual #371                // Method javafx/scene/input/TouchPoint.getTarget:()Ljavafx/event/EventTarget;
      49: ifnull        205
      52: aconst_null
      53: astore        8
      55: getstatic     #372                // Field javafx/scene/Scene$54.$SwitchMap$javafx$scene$input$TouchPoint$State:[I
      58: aload         7
      60: invokevirtual #373                // Method javafx/scene/input/TouchPoint.getState:()Ljavafx/scene/input/TouchPoint$State;
      63: invokevirtual #374                // Method javafx/scene/input/TouchPoint$State.ordinal:()I
      66: iaload
      67: tableswitch   { // 1 to 4
                     1: 96
                     2: 104
                     3: 112
                     4: 120
               default: 125
          }
      96: getstatic     #375                // Field javafx/scene/input/TouchEvent.TOUCH_MOVED:Ljavafx/event/EventType;
      99: astore        8
     101: goto          125
     104: getstatic     #376                // Field javafx/scene/input/TouchEvent.TOUCH_PRESSED:Ljavafx/event/EventType;
     107: astore        8
     109: goto          125
     112: getstatic     #377                // Field javafx/scene/input/TouchEvent.TOUCH_RELEASED:Ljavafx/event/EventType;
     115: astore        8
     117: goto          125
     120: getstatic     #378                // Field javafx/scene/input/TouchEvent.TOUCH_STATIONARY:Ljavafx/event/EventType;
     123: astore        8
     125: aload_2
     126: astore        9
     128: aload         9
     130: arraylength
     131: istore        10
     133: iconst_0
     134: istore        11
     136: iload         11
     138: iload         10
     140: if_icmpge     161
     143: aload         9
     145: iload         11
     147: aaload
     148: astore        12
     150: aload         12
     152: invokestatic  #379                // Method com/sun/javafx/scene/input/TouchPointHelper.reset:(Ljavafx/scene/input/TouchPoint;)V
     155: iinc          11, 1
     158: goto          136
     161: new           #380                // class javafx/scene/input/TouchEvent
     164: dup
     165: aload         8
     167: aload         7
     169: aload_3
     170: aload_0
     171: getfield      #7                  // Field touchEventSetId:I
     174: aload_1
     175: invokevirtual #381                // Method javafx/scene/input/TouchEvent.isShiftDown:()Z
     178: aload_1
     179: invokevirtual #382                // Method javafx/scene/input/TouchEvent.isControlDown:()Z
     182: aload_1
     183: invokevirtual #383                // Method javafx/scene/input/TouchEvent.isAltDown:()Z
     186: aload_1
     187: invokevirtual #384                // Method javafx/scene/input/TouchEvent.isMetaDown:()Z
     190: invokespecial #385                // Method javafx/scene/input/TouchEvent."<init>":(Ljavafx/event/EventType;Ljavafx/scene/input/TouchPoint;Ljava/util/List;IZZZZ)V
     193: astore        9
     195: aload         7
     197: invokevirtual #371                // Method javafx/scene/input/TouchPoint.getTarget:()Ljavafx/event/EventTarget;
     200: aload         9
     202: invokestatic  #346                // Method javafx/event/Event.fireEvent:(Ljavafx/event/EventTarget;Ljavafx/event/Event;)V
     205: iinc          6, 1
     208: goto          30
     211: aload_2
     212: astore        4
     214: aload         4
     216: arraylength
     217: istore        5
     219: iconst_0
     220: istore        6
     222: iload         6
     224: iload         5
     226: if_icmpge     308
     229: aload         4
     231: iload         6
     233: aaload
     234: astore        7
     236: aload         7
     238: invokevirtual #386                // Method javafx/scene/input/TouchPoint.getGrabbed:()Ljavafx/event/EventTarget;
     241: astore        8
     243: aload         8
     245: ifnull        268
     248: aload_0
     249: getfield      #9                  // Field touchTargets:Ljava/util/Map;
     252: aload         7
     254: invokevirtual #387                // Method javafx/scene/input/TouchPoint.getId:()I
     257: invokestatic  #388                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     260: aload         8
     262: invokeinterface #389,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     267: pop
     268: aload         8
     270: ifnull        284
     273: aload         7
     275: invokevirtual #373                // Method javafx/scene/input/TouchPoint.getState:()Ljavafx/scene/input/TouchPoint$State;
     278: getstatic     #390                // Field javafx/scene/input/TouchPoint$State.RELEASED:Ljavafx/scene/input/TouchPoint$State;
     281: if_acmpne     302
     284: aload_0
     285: getfield      #9                  // Field touchTargets:Ljava/util/Map;
     288: aload         7
     290: invokevirtual #387                // Method javafx/scene/input/TouchPoint.getId:()I
     293: invokestatic  #388                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     296: invokeinterface #391,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     301: pop
     302: iinc          6, 1
     305: goto          222
     308: iconst_0
     309: putstatic     #19                 // Field inMousePick:Z
     312: return

  javafx.scene.Node test_pick(double, double);
    Code:
       0: iconst_1
       1: putstatic     #19                 // Field inMousePick:Z
       4: aload_0
       5: getfield      #38                 // Field mouseHandler:Ljavafx/scene/Scene$MouseHandler;
       8: new           #392                // class com/sun/javafx/geom/PickRay
      11: dup
      12: dload_1
      13: dload_3
      14: dconst_1
      15: ldc2_w        #394                // double -Infinityd
      18: ldc2_w        #396                // double Infinityd
      21: invokespecial #398                // Method com/sun/javafx/geom/PickRay."<init>":(DDDDD)V
      24: invokestatic  #399                // Method javafx/scene/Scene$MouseHandler.access$1300:(Ljavafx/scene/Scene$MouseHandler;Lcom/sun/javafx/geom/PickRay;)Ljavafx/scene/input/PickResult;
      27: astore        5
      29: iconst_0
      30: putstatic     #19                 // Field inMousePick:Z
      33: aload         5
      35: ifnull        44
      38: aload         5
      40: invokevirtual #342                // Method javafx/scene/input/PickResult.getIntersectedNode:()Ljavafx/scene/Node;
      43: areturn
      44: aconst_null
      45: areturn

  private javafx.scene.input.PickResult pick(double, double);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field tmpTargetWrapper:Ljavafx/scene/Scene$TargetWrapper;
       5: dload_1
       6: dload_3
       7: invokespecial #5                  // Method pick:(Ljavafx/scene/Scene$TargetWrapper;DD)V
      10: aload_0
      11: getfield      #6                  // Field tmpTargetWrapper:Ljavafx/scene/Scene$TargetWrapper;
      14: invokevirtual #400                // Method javafx/scene/Scene$TargetWrapper.getResult:()Ljavafx/scene/input/PickResult;
      17: areturn

  private boolean isInScene(double, double);
    Code:
       0: dload_1
       1: dconst_0
       2: dcmpg
       3: iflt          30
       6: dload_3
       7: dconst_0
       8: dcmpg
       9: iflt          30
      12: dload_1
      13: aload_0
      14: invokevirtual #218                // Method getWidth:()D
      17: dcmpl
      18: ifgt          30
      21: dload_3
      22: aload_0
      23: invokevirtual #220                // Method getHeight:()D
      26: dcmpl
      27: ifle          32
      30: iconst_0
      31: ireturn
      32: aload_0
      33: invokevirtual #141                // Method getWindow:()Ljavafx/stage/Window;
      36: astore        5
      38: aload         5
      40: instanceof    #401                // class javafx/stage/Stage
      43: ifeq          69
      46: aload         5
      48: checkcast     #401                // class javafx/stage/Stage
      51: invokevirtual #402                // Method javafx/stage/Stage.getStyle:()Ljavafx/stage/StageStyle;
      54: getstatic     #403                // Field javafx/stage/StageStyle.TRANSPARENT:Ljavafx/stage/StageStyle;
      57: if_acmpne     69
      60: aload_0
      61: invokevirtual #161                // Method getFill:()Ljavafx/scene/paint/Paint;
      64: ifnonnull     69
      67: iconst_0
      68: ireturn
      69: iconst_1
      70: ireturn

  private void pick(javafx.scene.Scene$TargetWrapper, double, double);
    Code:
       0: aload_0
       1: invokevirtual #164                // Method getEffectiveCamera:()Ljavafx/scene/Camera;
       4: dload_2
       5: dload         4
       7: aconst_null
       8: invokevirtual #404                // Method javafx/scene/Camera.computePickRay:(DDLcom/sun/javafx/geom/PickRay;)Lcom/sun/javafx/geom/PickRay;
      11: astore        6
      13: aload         6
      15: invokevirtual #405                // Method com/sun/javafx/geom/PickRay.getDirectionNoClone:()Lcom/sun/javafx/geom/Vec3d;
      18: invokevirtual #406                // Method com/sun/javafx/geom/Vec3d.length:()D
      21: dstore        7
      23: aload         6
      25: invokevirtual #405                // Method com/sun/javafx/geom/PickRay.getDirectionNoClone:()Lcom/sun/javafx/geom/Vec3d;
      28: invokevirtual #407                // Method com/sun/javafx/geom/Vec3d.normalize:()V
      31: aload_0
      32: getfield      #38                 // Field mouseHandler:Ljavafx/scene/Scene$MouseHandler;
      35: aload         6
      37: invokestatic  #399                // Method javafx/scene/Scene$MouseHandler.access$1300:(Ljavafx/scene/Scene$MouseHandler;Lcom/sun/javafx/geom/PickRay;)Ljavafx/scene/input/PickResult;
      40: astore        9
      42: aload         9
      44: ifnull        56
      47: aload_1
      48: aload         9
      50: invokevirtual #408                // Method javafx/scene/Scene$TargetWrapper.setNodeResult:(Ljavafx/scene/input/PickResult;)V
      53: goto          148
      56: aload         6
      58: invokevirtual #409                // Method com/sun/javafx/geom/PickRay.getOriginNoClone:()Lcom/sun/javafx/geom/Vec3d;
      61: astore        10
      63: aload         6
      65: invokevirtual #405                // Method com/sun/javafx/geom/PickRay.getDirectionNoClone:()Lcom/sun/javafx/geom/Vec3d;
      68: astore        11
      70: aload_1
      71: new           #410                // class javafx/scene/input/PickResult
      74: dup
      75: aconst_null
      76: new           #411                // class javafx/geometry/Point3D
      79: dup
      80: aload         10
      82: getfield      #412                // Field com/sun/javafx/geom/Vec3d.x:D
      85: dload         7
      87: aload         11
      89: getfield      #412                // Field com/sun/javafx/geom/Vec3d.x:D
      92: dmul
      93: dadd
      94: aload         10
      96: getfield      #413                // Field com/sun/javafx/geom/Vec3d.y:D
      99: dload         7
     101: aload         11
     103: getfield      #413                // Field com/sun/javafx/geom/Vec3d.y:D
     106: dmul
     107: dadd
     108: aload         10
     110: getfield      #414                // Field com/sun/javafx/geom/Vec3d.z:D
     113: dload         7
     115: aload         11
     117: getfield      #414                // Field com/sun/javafx/geom/Vec3d.z:D
     120: dmul
     121: dadd
     122: invokespecial #415                // Method javafx/geometry/Point3D."<init>":(DDD)V
     125: dload         7
     127: invokespecial #416                // Method javafx/scene/input/PickResult."<init>":(Ljavafx/scene/Node;Ljavafx/geometry/Point3D;D)V
     130: aload_0
     131: dload_2
     132: dload         4
     134: invokespecial #417                // Method isInScene:(DD)Z
     137: ifeq          144
     140: aload_0
     141: goto          145
     144: aconst_null
     145: invokevirtual #418                // Method javafx/scene/Scene$TargetWrapper.setSceneResult:(Ljavafx/scene/input/PickResult;Ljavafx/scene/Scene;)V
     148: return

  private javafx.scene.Scene$KeyHandler getKeyHandler();
    Code:
       0: aload_0
       1: getfield      #45                 // Field keyHandler:Ljavafx/scene/Scene$KeyHandler;
       4: ifnonnull     19
       7: aload_0
       8: new           #419                // class javafx/scene/Scene$KeyHandler
      11: dup
      12: aload_0
      13: invokespecial #420                // Method javafx/scene/Scene$KeyHandler."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #45                 // Field keyHandler:Ljavafx/scene/Scene$KeyHandler;
      19: aload_0
      20: getfield      #45                 // Field keyHandler:Ljavafx/scene/Scene$KeyHandler;
      23: areturn

  final void setFocusDirty(boolean);
    Code:
       0: aload_0
       1: getfield      #86                 // Field focusDirty:Z
       4: ifne          13
       7: invokestatic  #58                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      10: invokevirtual #115                // Method com/sun/javafx/tk/Toolkit.requestNextPulse:()V
      13: aload_0
      14: iload_1
      15: putfield      #86                 // Field focusDirty:Z
      18: return

  final boolean isFocusDirty();
    Code:
       0: aload_0
       1: getfield      #86                 // Field focusDirty:Z
       4: ireturn

  boolean traverse(javafx.scene.Node, com.sun.javafx.scene.traversal.Direction);
    Code:
       0: aload_1
       1: invokevirtual #421                // Method javafx/scene/Node.getSubScene:()Ljavafx/scene/SubScene;
       4: ifnull        17
       7: aload_1
       8: invokevirtual #421                // Method javafx/scene/Node.getSubScene:()Ljavafx/scene/SubScene;
      11: aload_1
      12: aload_2
      13: invokevirtual #422                // Method javafx/scene/SubScene.traverse:(Ljavafx/scene/Node;Lcom/sun/javafx/scene/traversal/Direction;)Z
      16: ireturn
      17: aload_0
      18: getfield      #89                 // Field traversalEngine:Lcom/sun/javafx/scene/traversal/TopMostTraversalEngine;
      21: aload_1
      22: aload_2
      23: invokevirtual #423                // Method com/sun/javafx/scene/traversal/TopMostTraversalEngine.trav:(Ljavafx/scene/Node;Lcom/sun/javafx/scene/traversal/Direction;)Ljavafx/scene/Node;
      26: ifnull        33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  private void focusInitial();
    Code:
       0: aload_0
       1: getfield      #89                 // Field traversalEngine:Lcom/sun/javafx/scene/traversal/TopMostTraversalEngine;
       4: invokevirtual #424                // Method com/sun/javafx/scene/traversal/TopMostTraversalEngine.traverseToFirst:()Ljavafx/scene/Node;
       7: pop
       8: return

  private void focusIneligible(javafx.scene.Node);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #425                // Field com/sun/javafx/scene/traversal/Direction.NEXT:Lcom/sun/javafx/scene/traversal/Direction;
       5: invokevirtual #426                // Method traverse:(Ljavafx/scene/Node;Lcom/sun/javafx/scene/traversal/Direction;)Z
       8: pop
       9: return

  public void processKeyEvent(javafx.scene.input.KeyEvent);
    Code:
       0: aload_0
       1: getfield      #73                 // Field dndGesture:Ljavafx/scene/Scene$DnDGesture;
       4: ifnull        23
       7: aload_0
       8: getfield      #73                 // Field dndGesture:Ljavafx/scene/Scene$DnDGesture;
      11: aload_1
      12: invokestatic  #427                // Method javafx/scene/Scene$DnDGesture.access$1400:(Ljavafx/scene/Scene$DnDGesture;Ljavafx/scene/input/KeyEvent;)Z
      15: ifne          23
      18: aload_0
      19: aconst_null
      20: putfield      #73                 // Field dndGesture:Ljavafx/scene/Scene$DnDGesture;
      23: aload_0
      24: invokespecial #48                 // Method getKeyHandler:()Ljavafx/scene/Scene$KeyHandler;
      27: aload_1
      28: invokestatic  #428                // Method javafx/scene/Scene$KeyHandler.access$1500:(Ljavafx/scene/Scene$KeyHandler;Ljavafx/scene/input/KeyEvent;)V
      31: return

  void requestFocus(javafx.scene.Node);
    Code:
       0: aload_0
       1: invokespecial #48                 // Method getKeyHandler:()Ljavafx/scene/Scene$KeyHandler;
       4: aload_1
       5: invokestatic  #429                // Method javafx/scene/Scene$KeyHandler.access$1600:(Ljavafx/scene/Scene$KeyHandler;Ljavafx/scene/Node;)V
       8: return

  public final javafx.scene.Node getFocusOwner();
    Code:
       0: aload_0
       1: getfield      #3                  // Field focusOwner:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #134                // Method javafx/beans/property/ReadOnlyObjectWrapper.get:()Ljava/lang/Object;
       7: checkcast     #116                // class javafx/scene/Node
      10: areturn

  public final javafx.beans.property.ReadOnlyObjectProperty<javafx.scene.Node> focusOwnerProperty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field focusOwner:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #136                // Method javafx/beans/property/ReadOnlyObjectWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       7: areturn

  void focusCleanup();
    Code:
       0: aload_0
       1: getfield      #72                 // Field scenePulseListener:Ljavafx/scene/Scene$ScenePulseListener;
       4: invokestatic  #430                // Method javafx/scene/Scene$ScenePulseListener.access$2100:(Ljavafx/scene/Scene$ScenePulseListener;)V
       7: return

  private void processInputMethodEvent(javafx.scene.input.InputMethodEvent);
    Code:
       0: aload_0
       1: invokevirtual #333                // Method getFocusOwner:()Ljavafx/scene/Node;
       4: astore_2
       5: aload_2
       6: ifnull        14
       9: aload_2
      10: aload_1
      11: invokevirtual #431                // Method javafx/scene/Node.fireEvent:(Ljavafx/event/Event;)V
      14: return

  public void enableInputMethodEvents(boolean);
    Code:
       0: aload_0
       1: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
       4: ifnull        17
       7: aload_0
       8: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
      11: iload_1
      12: invokeinterface #432,  2          // InterfaceMethod com/sun/javafx/tk/TKScene.enableInputMethodEvents:(Z)V
      17: return

  boolean isQuiescent();
    Code:
       0: aload_0
       1: invokevirtual #118                // Method getRoot:()Ljavafx/scene/Parent;
       4: astore_1
       5: aload_0
       6: invokevirtual #433                // Method isFocusDirty:()Z
       9: ifne          40
      12: aload_1
      13: ifnull        36
      16: aload_1
      17: getfield      #119                // Field javafx/scene/Parent.cssFlag:Lcom/sun/javafx/scene/CssFlags;
      20: getstatic     #120                // Field com/sun/javafx/scene/CssFlags.CLEAN:Lcom/sun/javafx/scene/CssFlags;
      23: if_acmpne     40
      26: aload_1
      27: getfield      #434                // Field javafx/scene/Parent.layoutFlag:Lcom/sun/javafx/scene/LayoutFlags;
      30: getstatic     #435                // Field com/sun/javafx/scene/LayoutFlags.CLEAN:Lcom/sun/javafx/scene/LayoutFlags;
      33: if_acmpne     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  private void markDirty(javafx.scene.Scene$DirtyBits);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #436                // Method setDirty:(Ljavafx/scene/Scene$DirtyBits;)V
       5: aload_0
       6: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
       9: ifnull        18
      12: invokestatic  #58                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      15: invokevirtual #115                // Method com/sun/javafx/tk/Toolkit.requestNextPulse:()V
      18: return

  private void setDirty(javafx.scene.Scene$DirtyBits);
    Code:
       0: aload_0
       1: dup
       2: getfield      #437                // Field dirtyBits:I
       5: aload_1
       6: invokevirtual #438                // Method javafx/scene/Scene$DirtyBits.getMask:()I
       9: ior
      10: putfield      #437                // Field dirtyBits:I
      13: return

  private boolean isDirty(javafx.scene.Scene$DirtyBits);
    Code:
       0: aload_0
       1: getfield      #437                // Field dirtyBits:I
       4: aload_1
       5: invokevirtual #438                // Method javafx/scene/Scene$DirtyBits.getMask:()I
       8: iand
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private boolean isDirtyEmpty();
    Code:
       0: aload_0
       1: getfield      #437                // Field dirtyBits:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private void clearDirty();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #437                // Field dirtyBits:I
       5: return

  final void addLight(javafx.scene.LightBase);
    Code:
       0: aload_0
       1: getfield      #96                 // Field lights:Ljava/util/List;
       4: aload_1
       5: invokeinterface #439,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      10: ifne          31
      13: aload_0
      14: getfield      #96                 // Field lights:Ljava/util/List;
      17: aload_1
      18: invokeinterface #129,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: aload_0
      25: getstatic     #440                // Field javafx/scene/Scene$DirtyBits.LIGHTS_DIRTY:Ljavafx/scene/Scene$DirtyBits;
      28: invokespecial #47                 // Method markDirty:(Ljavafx/scene/Scene$DirtyBits;)V
      31: return

  final void removeLight(javafx.scene.LightBase);
    Code:
       0: aload_0
       1: getfield      #96                 // Field lights:Ljava/util/List;
       4: aload_1
       5: invokeinterface #130,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: ifeq          20
      13: aload_0
      14: getstatic     #440                // Field javafx/scene/Scene$DirtyBits.LIGHTS_DIRTY:Ljavafx/scene/Scene$DirtyBits;
      17: invokespecial #47                 // Method markDirty:(Ljavafx/scene/Scene$DirtyBits;)V
      20: return

  private void syncLights();
    Code:
       0: aload_0
       1: getstatic     #440                // Field javafx/scene/Scene$DirtyBits.LIGHTS_DIRTY:Ljavafx/scene/Scene$DirtyBits;
       4: invokespecial #40                 // Method isDirty:(Ljavafx/scene/Scene$DirtyBits;)Z
       7: ifne          11
      10: return
      11: iconst_1
      12: putstatic     #43                 // Field inSynchronizer:Z
      15: aload_0
      16: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
      19: invokeinterface #441,  1          // InterfaceMethod com/sun/javafx/tk/TKScene.getLights:()[Lcom/sun/javafx/sg/prism/NGLightBase;
      24: astore_1
      25: aload_0
      26: getfield      #96                 // Field lights:Ljava/util/List;
      29: invokeinterface #265,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      34: ifeq          41
      37: aload_1
      38: ifnull        172
      41: aload_0
      42: getfield      #96                 // Field lights:Ljava/util/List;
      45: invokeinterface #265,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      50: ifeq          66
      53: aload_0
      54: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
      57: aconst_null
      58: invokeinterface #442,  2          // InterfaceMethod com/sun/javafx/tk/TKScene.setLights:([Lcom/sun/javafx/sg/prism/NGLightBase;)V
      63: goto          172
      66: aload_1
      67: ifnull        84
      70: aload_1
      71: arraylength
      72: aload_0
      73: getfield      #96                 // Field lights:Ljava/util/List;
      76: invokeinterface #266,  1          // InterfaceMethod java/util/List.size:()I
      81: if_icmpge     97
      84: aload_0
      85: getfield      #96                 // Field lights:Ljava/util/List;
      88: invokeinterface #266,  1          // InterfaceMethod java/util/List.size:()I
      93: anewarray     #267                // class com/sun/javafx/sg/prism/NGLightBase
      96: astore_1
      97: iconst_0
      98: istore_2
      99: iload_2
     100: aload_0
     101: getfield      #96                 // Field lights:Ljava/util/List;
     104: invokeinterface #266,  1          // InterfaceMethod java/util/List.size:()I
     109: if_icmpge     140
     112: aload_1
     113: iload_2
     114: aload_0
     115: getfield      #96                 // Field lights:Ljava/util/List;
     118: iload_2
     119: invokeinterface #268,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     124: checkcast     #269                // class javafx/scene/LightBase
     127: invokevirtual #270                // Method javafx/scene/LightBase.getPeer:()Lcom/sun/javafx/sg/prism/NGNode;
     130: checkcast     #267                // class com/sun/javafx/sg/prism/NGLightBase
     133: aastore
     134: iinc          2, 1
     137: goto          99
     140: iload_2
     141: aload_1
     142: arraylength
     143: if_icmpge     162
     146: aload_1
     147: iload_2
     148: aaload
     149: ifnull        162
     152: aload_1
     153: iload_2
     154: iinc          2, 1
     157: aconst_null
     158: aastore
     159: goto          140
     162: aload_0
     163: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
     166: aload_1
     167: invokeinterface #442,  2          // InterfaceMethod com/sun/javafx/tk/TKScene.setLights:([Lcom/sun/javafx/sg/prism/NGLightBase;)V
     172: iconst_0
     173: putstatic     #43                 // Field inSynchronizer:Z
     176: return

  void generateMouseExited(javafx.scene.Node);
    Code:
       0: aload_0
       1: getfield      #38                 // Field mouseHandler:Ljavafx/scene/Scene$MouseHandler;
       4: aload_1
       5: invokestatic  #443                // Method javafx/scene/Scene$MouseHandler.access$7700:(Ljavafx/scene/Scene$MouseHandler;Ljavafx/scene/Node;)V
       8: return

  public final void setEventDispatcher(javafx.event.EventDispatcher);
    Code:
       0: aload_0
       1: invokevirtual #444                // Method eventDispatcherProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventDispatcher getEventDispatcher();
    Code:
       0: aload_0
       1: invokevirtual #444                // Method eventDispatcherProperty:()Ljavafx/beans/property/ObjectProperty;
       4: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
       7: checkcast     #445                // class javafx/event/EventDispatcher
      10: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventDispatcher> eventDispatcherProperty();
    Code:
       0: aload_0
       1: invokevirtual #446                // Method initializeInternalEventDispatcher:()V
       4: aload_0
       5: getfield      #447                // Field eventDispatcher:Ljavafx/beans/property/ObjectProperty;
       8: areturn

  public final <T extends javafx.event.Event> void addEventHandler(javafx.event.EventType<T>, javafx.event.EventHandler<? super T>);
    Code:
       0: aload_0
       1: invokespecial #448                // Method getInternalEventDispatcher:()Lcom/sun/javafx/scene/SceneEventDispatcher;
       4: invokevirtual #449                // Method com/sun/javafx/scene/SceneEventDispatcher.getEventHandlerManager:()Lcom/sun/javafx/event/EventHandlerManager;
       7: aload_1
       8: aload_2
       9: invokevirtual #450                // Method com/sun/javafx/event/EventHandlerManager.addEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      12: return

  public final <T extends javafx.event.Event> void removeEventHandler(javafx.event.EventType<T>, javafx.event.EventHandler<? super T>);
    Code:
       0: aload_0
       1: invokespecial #448                // Method getInternalEventDispatcher:()Lcom/sun/javafx/scene/SceneEventDispatcher;
       4: invokevirtual #449                // Method com/sun/javafx/scene/SceneEventDispatcher.getEventHandlerManager:()Lcom/sun/javafx/event/EventHandlerManager;
       7: aload_1
       8: aload_2
       9: invokevirtual #451                // Method com/sun/javafx/event/EventHandlerManager.removeEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      12: return

  public final <T extends javafx.event.Event> void addEventFilter(javafx.event.EventType<T>, javafx.event.EventHandler<? super T>);
    Code:
       0: aload_0
       1: invokespecial #448                // Method getInternalEventDispatcher:()Lcom/sun/javafx/scene/SceneEventDispatcher;
       4: invokevirtual #449                // Method com/sun/javafx/scene/SceneEventDispatcher.getEventHandlerManager:()Lcom/sun/javafx/event/EventHandlerManager;
       7: aload_1
       8: aload_2
       9: invokevirtual #452                // Method com/sun/javafx/event/EventHandlerManager.addEventFilter:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      12: return

  public final <T extends javafx.event.Event> void removeEventFilter(javafx.event.EventType<T>, javafx.event.EventHandler<? super T>);
    Code:
       0: aload_0
       1: invokespecial #448                // Method getInternalEventDispatcher:()Lcom/sun/javafx/scene/SceneEventDispatcher;
       4: invokevirtual #449                // Method com/sun/javafx/scene/SceneEventDispatcher.getEventHandlerManager:()Lcom/sun/javafx/event/EventHandlerManager;
       7: aload_1
       8: aload_2
       9: invokevirtual #453                // Method com/sun/javafx/event/EventHandlerManager.removeEventFilter:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      12: return

  protected final <T extends javafx.event.Event> void setEventHandler(javafx.event.EventType<T>, javafx.event.EventHandler<? super T>);
    Code:
       0: aload_0
       1: invokespecial #448                // Method getInternalEventDispatcher:()Lcom/sun/javafx/scene/SceneEventDispatcher;
       4: invokevirtual #449                // Method com/sun/javafx/scene/SceneEventDispatcher.getEventHandlerManager:()Lcom/sun/javafx/event/EventHandlerManager;
       7: aload_1
       8: aload_2
       9: invokevirtual #454                // Method com/sun/javafx/event/EventHandlerManager.setEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      12: return

  private com.sun.javafx.scene.SceneEventDispatcher getInternalEventDispatcher();
    Code:
       0: aload_0
       1: invokevirtual #446                // Method initializeInternalEventDispatcher:()V
       4: aload_0
       5: getfield      #455                // Field internalEventDispatcher:Lcom/sun/javafx/scene/SceneEventDispatcher;
       8: areturn

  final void initializeInternalEventDispatcher();
    Code:
       0: aload_0
       1: getfield      #455                // Field internalEventDispatcher:Lcom/sun/javafx/scene/SceneEventDispatcher;
       4: ifnonnull     34
       7: aload_0
       8: aload_0
       9: invokespecial #456                // Method createInternalEventDispatcher:()Lcom/sun/javafx/scene/SceneEventDispatcher;
      12: putfield      #455                // Field internalEventDispatcher:Lcom/sun/javafx/scene/SceneEventDispatcher;
      15: aload_0
      16: new           #457                // class javafx/beans/property/SimpleObjectProperty
      19: dup
      20: aload_0
      21: ldc_w         #458                // String eventDispatcher
      24: aload_0
      25: getfield      #455                // Field internalEventDispatcher:Lcom/sun/javafx/scene/SceneEventDispatcher;
      28: invokespecial #459                // Method javafx/beans/property/SimpleObjectProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      31: putfield      #447                // Field eventDispatcher:Ljavafx/beans/property/ObjectProperty;
      34: return

  private com.sun.javafx.scene.SceneEventDispatcher createInternalEventDispatcher();
    Code:
       0: new           #460                // class com/sun/javafx/scene/SceneEventDispatcher
       3: dup
       4: aload_0
       5: invokespecial #461                // Method com/sun/javafx/scene/SceneEventDispatcher."<init>":(Ljava/lang/Object;)V
       8: areturn

  public void addMnemonic(javafx.scene.input.Mnemonic);
    Code:
       0: aload_0
       1: invokespecial #448                // Method getInternalEventDispatcher:()Lcom/sun/javafx/scene/SceneEventDispatcher;
       4: invokevirtual #462                // Method com/sun/javafx/scene/SceneEventDispatcher.getKeyboardShortcutsHandler:()Lcom/sun/javafx/scene/KeyboardShortcutsHandler;
       7: aload_1
       8: invokevirtual #463                // Method com/sun/javafx/scene/KeyboardShortcutsHandler.addMnemonic:(Ljavafx/scene/input/Mnemonic;)V
      11: return

  public void removeMnemonic(javafx.scene.input.Mnemonic);
    Code:
       0: aload_0
       1: invokespecial #448                // Method getInternalEventDispatcher:()Lcom/sun/javafx/scene/SceneEventDispatcher;
       4: invokevirtual #462                // Method com/sun/javafx/scene/SceneEventDispatcher.getKeyboardShortcutsHandler:()Lcom/sun/javafx/scene/KeyboardShortcutsHandler;
       7: aload_1
       8: invokevirtual #464                // Method com/sun/javafx/scene/KeyboardShortcutsHandler.removeMnemonic:(Ljavafx/scene/input/Mnemonic;)V
      11: return

  final void clearNodeMnemonics(javafx.scene.Node);
    Code:
       0: aload_0
       1: invokespecial #448                // Method getInternalEventDispatcher:()Lcom/sun/javafx/scene/SceneEventDispatcher;
       4: invokevirtual #462                // Method com/sun/javafx/scene/SceneEventDispatcher.getKeyboardShortcutsHandler:()Lcom/sun/javafx/scene/KeyboardShortcutsHandler;
       7: aload_1
       8: invokevirtual #465                // Method com/sun/javafx/scene/KeyboardShortcutsHandler.clearNodeMnemonics:(Ljavafx/scene/Node;)V
      11: return

  public javafx.collections.ObservableMap<javafx.scene.input.KeyCombination, javafx.collections.ObservableList<javafx.scene.input.Mnemonic>> getMnemonics();
    Code:
       0: aload_0
       1: invokespecial #448                // Method getInternalEventDispatcher:()Lcom/sun/javafx/scene/SceneEventDispatcher;
       4: invokevirtual #462                // Method com/sun/javafx/scene/SceneEventDispatcher.getKeyboardShortcutsHandler:()Lcom/sun/javafx/scene/KeyboardShortcutsHandler;
       7: invokevirtual #466                // Method com/sun/javafx/scene/KeyboardShortcutsHandler.getMnemonics:()Ljavafx/collections/ObservableMap;
      10: areturn

  public javafx.collections.ObservableMap<javafx.scene.input.KeyCombination, java.lang.Runnable> getAccelerators();
    Code:
       0: aload_0
       1: invokespecial #448                // Method getInternalEventDispatcher:()Lcom/sun/javafx/scene/SceneEventDispatcher;
       4: invokevirtual #462                // Method com/sun/javafx/scene/SceneEventDispatcher.getKeyboardShortcutsHandler:()Lcom/sun/javafx/scene/KeyboardShortcutsHandler;
       7: invokevirtual #467                // Method com/sun/javafx/scene/KeyboardShortcutsHandler.getAccelerators:()Ljavafx/collections/ObservableMap;
      10: areturn

  public javafx.event.EventDispatchChain buildEventDispatchChain(javafx.event.EventDispatchChain);
    Code:
       0: aload_0
       1: getfield      #447                // Field eventDispatcher:Ljavafx/beans/property/ObjectProperty;
       4: ifnull        30
       7: aload_0
       8: getfield      #447                // Field eventDispatcher:Ljavafx/beans/property/ObjectProperty;
      11: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      14: checkcast     #445                // class javafx/event/EventDispatcher
      17: astore_2
      18: aload_2
      19: ifnull        30
      22: aload_1
      23: aload_2
      24: invokeinterface #468,  2          // InterfaceMethod javafx/event/EventDispatchChain.prepend:(Ljavafx/event/EventDispatcher;)Ljavafx/event/EventDispatchChain;
      29: astore_1
      30: aload_0
      31: invokevirtual #141                // Method getWindow:()Ljavafx/stage/Window;
      34: ifnull        46
      37: aload_0
      38: invokevirtual #141                // Method getWindow:()Ljavafx/stage/Window;
      41: aload_1
      42: invokevirtual #469                // Method javafx/stage/Window.buildEventDispatchChain:(Ljavafx/event/EventDispatchChain;)Ljavafx/event/EventDispatchChain;
      45: astore_1
      46: aload_1
      47: areturn

  public final void setOnContextMenuRequested(javafx.event.EventHandler<? super javafx.scene.input.ContextMenuEvent>);
    Code:
       0: aload_0
       1: invokevirtual #470                // Method onContextMenuRequestedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.ContextMenuEvent> getOnContextMenuRequested();
    Code:
       0: aload_0
       1: getfield      #471                // Field onContextMenuRequested:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #471                // Field onContextMenuRequested:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.ContextMenuEvent>> onContextMenuRequestedProperty();
    Code:
       0: aload_0
       1: getfield      #471                // Field onContextMenuRequested:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #473                // class javafx/scene/Scene$13
      11: dup
      12: aload_0
      13: invokespecial #474                // Method javafx/scene/Scene$13."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #471                // Field onContextMenuRequested:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #471                // Field onContextMenuRequested:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnMouseClicked(javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>);
    Code:
       0: aload_0
       1: invokevirtual #475                // Method onMouseClickedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.MouseEvent> getOnMouseClicked();
    Code:
       0: aload_0
       1: getfield      #476                // Field onMouseClicked:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #476                // Field onMouseClicked:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>> onMouseClickedProperty();
    Code:
       0: aload_0
       1: getfield      #476                // Field onMouseClicked:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #477                // class javafx/scene/Scene$14
      11: dup
      12: aload_0
      13: invokespecial #478                // Method javafx/scene/Scene$14."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #476                // Field onMouseClicked:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #476                // Field onMouseClicked:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnMouseDragged(javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>);
    Code:
       0: aload_0
       1: invokevirtual #479                // Method onMouseDraggedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.MouseEvent> getOnMouseDragged();
    Code:
       0: aload_0
       1: getfield      #480                // Field onMouseDragged:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #480                // Field onMouseDragged:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>> onMouseDraggedProperty();
    Code:
       0: aload_0
       1: getfield      #480                // Field onMouseDragged:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #481                // class javafx/scene/Scene$15
      11: dup
      12: aload_0
      13: invokespecial #482                // Method javafx/scene/Scene$15."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #480                // Field onMouseDragged:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #480                // Field onMouseDragged:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnMouseEntered(javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>);
    Code:
       0: aload_0
       1: invokevirtual #483                // Method onMouseEnteredProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.MouseEvent> getOnMouseEntered();
    Code:
       0: aload_0
       1: getfield      #484                // Field onMouseEntered:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #484                // Field onMouseEntered:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>> onMouseEnteredProperty();
    Code:
       0: aload_0
       1: getfield      #484                // Field onMouseEntered:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #485                // class javafx/scene/Scene$16
      11: dup
      12: aload_0
      13: invokespecial #486                // Method javafx/scene/Scene$16."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #484                // Field onMouseEntered:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #484                // Field onMouseEntered:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnMouseExited(javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>);
    Code:
       0: aload_0
       1: invokevirtual #487                // Method onMouseExitedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.MouseEvent> getOnMouseExited();
    Code:
       0: aload_0
       1: getfield      #488                // Field onMouseExited:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #488                // Field onMouseExited:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>> onMouseExitedProperty();
    Code:
       0: aload_0
       1: getfield      #488                // Field onMouseExited:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #489                // class javafx/scene/Scene$17
      11: dup
      12: aload_0
      13: invokespecial #490                // Method javafx/scene/Scene$17."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #488                // Field onMouseExited:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #488                // Field onMouseExited:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnMouseMoved(javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>);
    Code:
       0: aload_0
       1: invokevirtual #491                // Method onMouseMovedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.MouseEvent> getOnMouseMoved();
    Code:
       0: aload_0
       1: getfield      #492                // Field onMouseMoved:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #492                // Field onMouseMoved:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>> onMouseMovedProperty();
    Code:
       0: aload_0
       1: getfield      #492                // Field onMouseMoved:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #493                // class javafx/scene/Scene$18
      11: dup
      12: aload_0
      13: invokespecial #494                // Method javafx/scene/Scene$18."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #492                // Field onMouseMoved:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #492                // Field onMouseMoved:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnMousePressed(javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>);
    Code:
       0: aload_0
       1: invokevirtual #495                // Method onMousePressedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.MouseEvent> getOnMousePressed();
    Code:
       0: aload_0
       1: getfield      #496                // Field onMousePressed:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #496                // Field onMousePressed:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>> onMousePressedProperty();
    Code:
       0: aload_0
       1: getfield      #496                // Field onMousePressed:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #497                // class javafx/scene/Scene$19
      11: dup
      12: aload_0
      13: invokespecial #498                // Method javafx/scene/Scene$19."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #496                // Field onMousePressed:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #496                // Field onMousePressed:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnMouseReleased(javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>);
    Code:
       0: aload_0
       1: invokevirtual #499                // Method onMouseReleasedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.MouseEvent> getOnMouseReleased();
    Code:
       0: aload_0
       1: getfield      #500                // Field onMouseReleased:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #500                // Field onMouseReleased:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>> onMouseReleasedProperty();
    Code:
       0: aload_0
       1: getfield      #500                // Field onMouseReleased:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #501                // class javafx/scene/Scene$20
      11: dup
      12: aload_0
      13: invokespecial #502                // Method javafx/scene/Scene$20."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #500                // Field onMouseReleased:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #500                // Field onMouseReleased:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnDragDetected(javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>);
    Code:
       0: aload_0
       1: invokevirtual #503                // Method onDragDetectedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.MouseEvent> getOnDragDetected();
    Code:
       0: aload_0
       1: getfield      #504                // Field onDragDetected:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #504                // Field onDragDetected:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseEvent>> onDragDetectedProperty();
    Code:
       0: aload_0
       1: getfield      #504                // Field onDragDetected:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #505                // class javafx/scene/Scene$21
      11: dup
      12: aload_0
      13: invokespecial #506                // Method javafx/scene/Scene$21."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #504                // Field onDragDetected:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #504                // Field onDragDetected:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnMouseDragOver(javafx.event.EventHandler<? super javafx.scene.input.MouseDragEvent>);
    Code:
       0: aload_0
       1: invokevirtual #507                // Method onMouseDragOverProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.MouseDragEvent> getOnMouseDragOver();
    Code:
       0: aload_0
       1: getfield      #508                // Field onMouseDragOver:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #508                // Field onMouseDragOver:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseDragEvent>> onMouseDragOverProperty();
    Code:
       0: aload_0
       1: getfield      #508                // Field onMouseDragOver:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #509                // class javafx/scene/Scene$22
      11: dup
      12: aload_0
      13: invokespecial #510                // Method javafx/scene/Scene$22."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #508                // Field onMouseDragOver:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #508                // Field onMouseDragOver:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnMouseDragReleased(javafx.event.EventHandler<? super javafx.scene.input.MouseDragEvent>);
    Code:
       0: aload_0
       1: invokevirtual #511                // Method onMouseDragReleasedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.MouseDragEvent> getOnMouseDragReleased();
    Code:
       0: aload_0
       1: getfield      #512                // Field onMouseDragReleased:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #512                // Field onMouseDragReleased:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseDragEvent>> onMouseDragReleasedProperty();
    Code:
       0: aload_0
       1: getfield      #512                // Field onMouseDragReleased:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #513                // class javafx/scene/Scene$23
      11: dup
      12: aload_0
      13: invokespecial #514                // Method javafx/scene/Scene$23."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #512                // Field onMouseDragReleased:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #512                // Field onMouseDragReleased:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnMouseDragEntered(javafx.event.EventHandler<? super javafx.scene.input.MouseDragEvent>);
    Code:
       0: aload_0
       1: invokevirtual #515                // Method onMouseDragEnteredProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.MouseDragEvent> getOnMouseDragEntered();
    Code:
       0: aload_0
       1: getfield      #516                // Field onMouseDragEntered:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #516                // Field onMouseDragEntered:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseDragEvent>> onMouseDragEnteredProperty();
    Code:
       0: aload_0
       1: getfield      #516                // Field onMouseDragEntered:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #517                // class javafx/scene/Scene$24
      11: dup
      12: aload_0
      13: invokespecial #518                // Method javafx/scene/Scene$24."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #516                // Field onMouseDragEntered:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #516                // Field onMouseDragEntered:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnMouseDragExited(javafx.event.EventHandler<? super javafx.scene.input.MouseDragEvent>);
    Code:
       0: aload_0
       1: invokevirtual #519                // Method onMouseDragExitedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.MouseDragEvent> getOnMouseDragExited();
    Code:
       0: aload_0
       1: getfield      #520                // Field onMouseDragExited:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #520                // Field onMouseDragExited:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.MouseDragEvent>> onMouseDragExitedProperty();
    Code:
       0: aload_0
       1: getfield      #520                // Field onMouseDragExited:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #521                // class javafx/scene/Scene$25
      11: dup
      12: aload_0
      13: invokespecial #522                // Method javafx/scene/Scene$25."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #520                // Field onMouseDragExited:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #520                // Field onMouseDragExited:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnScrollStarted(javafx.event.EventHandler<? super javafx.scene.input.ScrollEvent>);
    Code:
       0: aload_0
       1: invokevirtual #523                // Method onScrollStartedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.ScrollEvent> getOnScrollStarted();
    Code:
       0: aload_0
       1: getfield      #524                // Field onScrollStarted:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #524                // Field onScrollStarted:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.ScrollEvent>> onScrollStartedProperty();
    Code:
       0: aload_0
       1: getfield      #524                // Field onScrollStarted:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #525                // class javafx/scene/Scene$26
      11: dup
      12: aload_0
      13: invokespecial #526                // Method javafx/scene/Scene$26."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #524                // Field onScrollStarted:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #524                // Field onScrollStarted:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnScroll(javafx.event.EventHandler<? super javafx.scene.input.ScrollEvent>);
    Code:
       0: aload_0
       1: invokevirtual #527                // Method onScrollProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.ScrollEvent> getOnScroll();
    Code:
       0: aload_0
       1: getfield      #528                // Field onScroll:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #528                // Field onScroll:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.ScrollEvent>> onScrollProperty();
    Code:
       0: aload_0
       1: getfield      #528                // Field onScroll:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #529                // class javafx/scene/Scene$27
      11: dup
      12: aload_0
      13: invokespecial #530                // Method javafx/scene/Scene$27."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #528                // Field onScroll:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #528                // Field onScroll:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnScrollFinished(javafx.event.EventHandler<? super javafx.scene.input.ScrollEvent>);
    Code:
       0: aload_0
       1: invokevirtual #531                // Method onScrollFinishedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.ScrollEvent> getOnScrollFinished();
    Code:
       0: aload_0
       1: getfield      #532                // Field onScrollFinished:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #532                // Field onScrollFinished:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.ScrollEvent>> onScrollFinishedProperty();
    Code:
       0: aload_0
       1: getfield      #532                // Field onScrollFinished:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #533                // class javafx/scene/Scene$28
      11: dup
      12: aload_0
      13: invokespecial #534                // Method javafx/scene/Scene$28."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #532                // Field onScrollFinished:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #532                // Field onScrollFinished:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnRotationStarted(javafx.event.EventHandler<? super javafx.scene.input.RotateEvent>);
    Code:
       0: aload_0
       1: invokevirtual #535                // Method onRotationStartedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.RotateEvent> getOnRotationStarted();
    Code:
       0: aload_0
       1: getfield      #536                // Field onRotationStarted:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #536                // Field onRotationStarted:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.RotateEvent>> onRotationStartedProperty();
    Code:
       0: aload_0
       1: getfield      #536                // Field onRotationStarted:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #537                // class javafx/scene/Scene$29
      11: dup
      12: aload_0
      13: invokespecial #538                // Method javafx/scene/Scene$29."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #536                // Field onRotationStarted:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #536                // Field onRotationStarted:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnRotate(javafx.event.EventHandler<? super javafx.scene.input.RotateEvent>);
    Code:
       0: aload_0
       1: invokevirtual #539                // Method onRotateProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.RotateEvent> getOnRotate();
    Code:
       0: aload_0
       1: getfield      #540                // Field onRotate:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #540                // Field onRotate:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.RotateEvent>> onRotateProperty();
    Code:
       0: aload_0
       1: getfield      #540                // Field onRotate:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #541                // class javafx/scene/Scene$30
      11: dup
      12: aload_0
      13: invokespecial #542                // Method javafx/scene/Scene$30."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #540                // Field onRotate:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #540                // Field onRotate:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnRotationFinished(javafx.event.EventHandler<? super javafx.scene.input.RotateEvent>);
    Code:
       0: aload_0
       1: invokevirtual #543                // Method onRotationFinishedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.RotateEvent> getOnRotationFinished();
    Code:
       0: aload_0
       1: getfield      #544                // Field onRotationFinished:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #544                // Field onRotationFinished:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.RotateEvent>> onRotationFinishedProperty();
    Code:
       0: aload_0
       1: getfield      #544                // Field onRotationFinished:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #545                // class javafx/scene/Scene$31
      11: dup
      12: aload_0
      13: invokespecial #546                // Method javafx/scene/Scene$31."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #544                // Field onRotationFinished:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #544                // Field onRotationFinished:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnZoomStarted(javafx.event.EventHandler<? super javafx.scene.input.ZoomEvent>);
    Code:
       0: aload_0
       1: invokevirtual #547                // Method onZoomStartedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.ZoomEvent> getOnZoomStarted();
    Code:
       0: aload_0
       1: getfield      #548                // Field onZoomStarted:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #548                // Field onZoomStarted:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.ZoomEvent>> onZoomStartedProperty();
    Code:
       0: aload_0
       1: getfield      #548                // Field onZoomStarted:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #549                // class javafx/scene/Scene$32
      11: dup
      12: aload_0
      13: invokespecial #550                // Method javafx/scene/Scene$32."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #548                // Field onZoomStarted:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #548                // Field onZoomStarted:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnZoom(javafx.event.EventHandler<? super javafx.scene.input.ZoomEvent>);
    Code:
       0: aload_0
       1: invokevirtual #551                // Method onZoomProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.ZoomEvent> getOnZoom();
    Code:
       0: aload_0
       1: getfield      #552                // Field onZoom:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #552                // Field onZoom:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.ZoomEvent>> onZoomProperty();
    Code:
       0: aload_0
       1: getfield      #552                // Field onZoom:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #553                // class javafx/scene/Scene$33
      11: dup
      12: aload_0
      13: invokespecial #554                // Method javafx/scene/Scene$33."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #552                // Field onZoom:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #552                // Field onZoom:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnZoomFinished(javafx.event.EventHandler<? super javafx.scene.input.ZoomEvent>);
    Code:
       0: aload_0
       1: invokevirtual #555                // Method onZoomFinishedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.ZoomEvent> getOnZoomFinished();
    Code:
       0: aload_0
       1: getfield      #556                // Field onZoomFinished:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #556                // Field onZoomFinished:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.ZoomEvent>> onZoomFinishedProperty();
    Code:
       0: aload_0
       1: getfield      #556                // Field onZoomFinished:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #557                // class javafx/scene/Scene$34
      11: dup
      12: aload_0
      13: invokespecial #558                // Method javafx/scene/Scene$34."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #556                // Field onZoomFinished:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #556                // Field onZoomFinished:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnSwipeUp(javafx.event.EventHandler<? super javafx.scene.input.SwipeEvent>);
    Code:
       0: aload_0
       1: invokevirtual #559                // Method onSwipeUpProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.SwipeEvent> getOnSwipeUp();
    Code:
       0: aload_0
       1: getfield      #560                // Field onSwipeUp:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #560                // Field onSwipeUp:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.SwipeEvent>> onSwipeUpProperty();
    Code:
       0: aload_0
       1: getfield      #560                // Field onSwipeUp:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #561                // class javafx/scene/Scene$35
      11: dup
      12: aload_0
      13: invokespecial #562                // Method javafx/scene/Scene$35."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #560                // Field onSwipeUp:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #560                // Field onSwipeUp:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnSwipeDown(javafx.event.EventHandler<? super javafx.scene.input.SwipeEvent>);
    Code:
       0: aload_0
       1: invokevirtual #563                // Method onSwipeDownProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.SwipeEvent> getOnSwipeDown();
    Code:
       0: aload_0
       1: getfield      #564                // Field onSwipeDown:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #564                // Field onSwipeDown:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.SwipeEvent>> onSwipeDownProperty();
    Code:
       0: aload_0
       1: getfield      #564                // Field onSwipeDown:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #565                // class javafx/scene/Scene$36
      11: dup
      12: aload_0
      13: invokespecial #566                // Method javafx/scene/Scene$36."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #564                // Field onSwipeDown:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #564                // Field onSwipeDown:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnSwipeLeft(javafx.event.EventHandler<? super javafx.scene.input.SwipeEvent>);
    Code:
       0: aload_0
       1: invokevirtual #567                // Method onSwipeLeftProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.SwipeEvent> getOnSwipeLeft();
    Code:
       0: aload_0
       1: getfield      #568                // Field onSwipeLeft:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #568                // Field onSwipeLeft:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.SwipeEvent>> onSwipeLeftProperty();
    Code:
       0: aload_0
       1: getfield      #568                // Field onSwipeLeft:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #569                // class javafx/scene/Scene$37
      11: dup
      12: aload_0
      13: invokespecial #570                // Method javafx/scene/Scene$37."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #568                // Field onSwipeLeft:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #568                // Field onSwipeLeft:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnSwipeRight(javafx.event.EventHandler<? super javafx.scene.input.SwipeEvent>);
    Code:
       0: aload_0
       1: invokevirtual #571                // Method onSwipeRightProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.SwipeEvent> getOnSwipeRight();
    Code:
       0: aload_0
       1: getfield      #572                // Field onSwipeRight:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #572                // Field onSwipeRight:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.SwipeEvent>> onSwipeRightProperty();
    Code:
       0: aload_0
       1: getfield      #572                // Field onSwipeRight:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #573                // class javafx/scene/Scene$38
      11: dup
      12: aload_0
      13: invokespecial #574                // Method javafx/scene/Scene$38."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #572                // Field onSwipeRight:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #572                // Field onSwipeRight:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnTouchPressed(javafx.event.EventHandler<? super javafx.scene.input.TouchEvent>);
    Code:
       0: aload_0
       1: invokevirtual #575                // Method onTouchPressedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.TouchEvent> getOnTouchPressed();
    Code:
       0: aload_0
       1: getfield      #576                // Field onTouchPressed:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #576                // Field onTouchPressed:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.TouchEvent>> onTouchPressedProperty();
    Code:
       0: aload_0
       1: getfield      #576                // Field onTouchPressed:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #577                // class javafx/scene/Scene$39
      11: dup
      12: aload_0
      13: invokespecial #578                // Method javafx/scene/Scene$39."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #576                // Field onTouchPressed:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #576                // Field onTouchPressed:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnTouchMoved(javafx.event.EventHandler<? super javafx.scene.input.TouchEvent>);
    Code:
       0: aload_0
       1: invokevirtual #579                // Method onTouchMovedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.TouchEvent> getOnTouchMoved();
    Code:
       0: aload_0
       1: getfield      #580                // Field onTouchMoved:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #580                // Field onTouchMoved:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.TouchEvent>> onTouchMovedProperty();
    Code:
       0: aload_0
       1: getfield      #580                // Field onTouchMoved:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #581                // class javafx/scene/Scene$40
      11: dup
      12: aload_0
      13: invokespecial #582                // Method javafx/scene/Scene$40."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #580                // Field onTouchMoved:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #580                // Field onTouchMoved:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnTouchReleased(javafx.event.EventHandler<? super javafx.scene.input.TouchEvent>);
    Code:
       0: aload_0
       1: invokevirtual #583                // Method onTouchReleasedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.TouchEvent> getOnTouchReleased();
    Code:
       0: aload_0
       1: getfield      #584                // Field onTouchReleased:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #584                // Field onTouchReleased:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.TouchEvent>> onTouchReleasedProperty();
    Code:
       0: aload_0
       1: getfield      #584                // Field onTouchReleased:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #585                // class javafx/scene/Scene$41
      11: dup
      12: aload_0
      13: invokespecial #586                // Method javafx/scene/Scene$41."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #584                // Field onTouchReleased:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #584                // Field onTouchReleased:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnTouchStationary(javafx.event.EventHandler<? super javafx.scene.input.TouchEvent>);
    Code:
       0: aload_0
       1: invokevirtual #587                // Method onTouchStationaryProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.TouchEvent> getOnTouchStationary();
    Code:
       0: aload_0
       1: getfield      #588                // Field onTouchStationary:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #588                // Field onTouchStationary:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.TouchEvent>> onTouchStationaryProperty();
    Code:
       0: aload_0
       1: getfield      #588                // Field onTouchStationary:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #589                // class javafx/scene/Scene$42
      11: dup
      12: aload_0
      13: invokespecial #590                // Method javafx/scene/Scene$42."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #588                // Field onTouchStationary:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #588                // Field onTouchStationary:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnDragEntered(javafx.event.EventHandler<? super javafx.scene.input.DragEvent>);
    Code:
       0: aload_0
       1: invokevirtual #591                // Method onDragEnteredProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.DragEvent> getOnDragEntered();
    Code:
       0: aload_0
       1: getfield      #592                // Field onDragEntered:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #592                // Field onDragEntered:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.DragEvent>> onDragEnteredProperty();
    Code:
       0: aload_0
       1: getfield      #592                // Field onDragEntered:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #593                // class javafx/scene/Scene$43
      11: dup
      12: aload_0
      13: invokespecial #594                // Method javafx/scene/Scene$43."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #592                // Field onDragEntered:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #592                // Field onDragEntered:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnDragExited(javafx.event.EventHandler<? super javafx.scene.input.DragEvent>);
    Code:
       0: aload_0
       1: invokevirtual #595                // Method onDragExitedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.DragEvent> getOnDragExited();
    Code:
       0: aload_0
       1: getfield      #596                // Field onDragExited:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #596                // Field onDragExited:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.DragEvent>> onDragExitedProperty();
    Code:
       0: aload_0
       1: getfield      #596                // Field onDragExited:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #597                // class javafx/scene/Scene$44
      11: dup
      12: aload_0
      13: invokespecial #598                // Method javafx/scene/Scene$44."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #596                // Field onDragExited:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #596                // Field onDragExited:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnDragOver(javafx.event.EventHandler<? super javafx.scene.input.DragEvent>);
    Code:
       0: aload_0
       1: invokevirtual #599                // Method onDragOverProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.DragEvent> getOnDragOver();
    Code:
       0: aload_0
       1: getfield      #600                // Field onDragOver:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #600                // Field onDragOver:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.DragEvent>> onDragOverProperty();
    Code:
       0: aload_0
       1: getfield      #600                // Field onDragOver:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #601                // class javafx/scene/Scene$45
      11: dup
      12: aload_0
      13: invokespecial #602                // Method javafx/scene/Scene$45."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #600                // Field onDragOver:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #600                // Field onDragOver:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnDragDropped(javafx.event.EventHandler<? super javafx.scene.input.DragEvent>);
    Code:
       0: aload_0
       1: invokevirtual #603                // Method onDragDroppedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.DragEvent> getOnDragDropped();
    Code:
       0: aload_0
       1: getfield      #604                // Field onDragDropped:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #604                // Field onDragDropped:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.DragEvent>> onDragDroppedProperty();
    Code:
       0: aload_0
       1: getfield      #604                // Field onDragDropped:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #605                // class javafx/scene/Scene$46
      11: dup
      12: aload_0
      13: invokespecial #606                // Method javafx/scene/Scene$46."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #604                // Field onDragDropped:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #604                // Field onDragDropped:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnDragDone(javafx.event.EventHandler<? super javafx.scene.input.DragEvent>);
    Code:
       0: aload_0
       1: invokevirtual #607                // Method onDragDoneProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.DragEvent> getOnDragDone();
    Code:
       0: aload_0
       1: getfield      #608                // Field onDragDone:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #608                // Field onDragDone:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.DragEvent>> onDragDoneProperty();
    Code:
       0: aload_0
       1: getfield      #608                // Field onDragDone:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #609                // class javafx/scene/Scene$47
      11: dup
      12: aload_0
      13: invokespecial #610                // Method javafx/scene/Scene$47."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #608                // Field onDragDone:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #608                // Field onDragDone:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public javafx.scene.input.Dragboard startDragAndDrop(javafx.scene.input.TransferMode...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #611                // Method startDragAndDrop:(Ljavafx/event/EventTarget;[Ljavafx/scene/input/TransferMode;)Ljavafx/scene/input/Dragboard;
       6: areturn

  public void startFullDrag();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #612                // Method startFullDrag:(Ljavafx/event/EventTarget;)V
       5: return

  javafx.scene.input.Dragboard startDragAndDrop(javafx.event.EventTarget, javafx.scene.input.TransferMode...);
    Code:
       0: invokestatic  #58                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: invokevirtual #125                // Method com/sun/javafx/tk/Toolkit.checkFxUserThread:()V
       6: aload_0
       7: getfield      #73                 // Field dndGesture:Ljavafx/scene/Scene$DnDGesture;
      10: ifnull        26
      13: aload_0
      14: getfield      #73                 // Field dndGesture:Ljavafx/scene/Scene$DnDGesture;
      17: invokestatic  #613                // Method javafx/scene/Scene$DnDGesture.access$8500:(Ljavafx/scene/Scene$DnDGesture;)Ljavafx/scene/Scene$DragDetectedState;
      20: getstatic     #614                // Field javafx/scene/Scene$DragDetectedState.PROCESSING:Ljavafx/scene/Scene$DragDetectedState;
      23: if_acmpeq     37
      26: new           #615                // class java/lang/IllegalStateException
      29: dup
      30: ldc_w         #616                // String Cannot start drag and drop outside of DRAG_DETECTED event handler
      33: invokespecial #617                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: ldc_w         #618                // class javafx/scene/input/TransferMode
      40: invokestatic  #619                // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
      43: astore_3
      44: aload_2
      45: invokestatic  #620                // Method com/sun/javafx/scene/input/InputEventUtils.safeTransferModes:([Ljavafx/scene/input/TransferMode;)Ljava/util/List;
      48: invokeinterface #621,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      53: astore        4
      55: aload         4
      57: invokeinterface #622,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      62: ifeq          89
      65: aload         4
      67: invokeinterface #623,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      72: checkcast     #618                // class javafx/scene/input/TransferMode
      75: astore        5
      77: aload_3
      78: aload         5
      80: invokeinterface #624,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      85: pop
      86: goto          55
      89: aload_0
      90: getfield      #73                 // Field dndGesture:Ljavafx/scene/Scene$DnDGesture;
      93: aload_1
      94: aload_3
      95: invokestatic  #625                // Method javafx/scene/Scene$DnDGesture.access$8600:(Ljavafx/scene/Scene$DnDGesture;Ljavafx/event/EventTarget;Ljava/util/Set;)Ljavafx/scene/input/Dragboard;
      98: areturn

  void startFullDrag(javafx.event.EventTarget);
    Code:
       0: invokestatic  #58                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: invokevirtual #125                // Method com/sun/javafx/tk/Toolkit.checkFxUserThread:()V
       6: aload_0
       7: getfield      #73                 // Field dndGesture:Ljavafx/scene/Scene$DnDGesture;
      10: invokestatic  #613                // Method javafx/scene/Scene$DnDGesture.access$8500:(Ljavafx/scene/Scene$DnDGesture;)Ljavafx/scene/Scene$DragDetectedState;
      13: getstatic     #614                // Field javafx/scene/Scene$DragDetectedState.PROCESSING:Ljavafx/scene/Scene$DragDetectedState;
      16: if_acmpeq     30
      19: new           #615                // class java/lang/IllegalStateException
      22: dup
      23: ldc_w         #626                // String Cannot start full drag outside of DRAG_DETECTED event handler
      26: invokespecial #617                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_0
      31: getfield      #73                 // Field dndGesture:Ljavafx/scene/Scene$DnDGesture;
      34: ifnull        46
      37: aload_0
      38: getfield      #73                 // Field dndGesture:Ljavafx/scene/Scene$DnDGesture;
      41: aload_1
      42: invokestatic  #627                // Method javafx/scene/Scene$DnDGesture.access$8700:(Ljavafx/scene/Scene$DnDGesture;Ljavafx/event/EventTarget;)V
      45: return
      46: new           #615                // class java/lang/IllegalStateException
      49: dup
      50: ldc_w         #628                // String Cannot start full drag when mouse button is not pressed
      53: invokespecial #617                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      56: athrow

  public final void setOnKeyPressed(javafx.event.EventHandler<? super javafx.scene.input.KeyEvent>);
    Code:
       0: aload_0
       1: invokevirtual #629                // Method onKeyPressedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.KeyEvent> getOnKeyPressed();
    Code:
       0: aload_0
       1: getfield      #630                // Field onKeyPressed:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #630                // Field onKeyPressed:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.KeyEvent>> onKeyPressedProperty();
    Code:
       0: aload_0
       1: getfield      #630                // Field onKeyPressed:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #631                // class javafx/scene/Scene$48
      11: dup
      12: aload_0
      13: invokespecial #632                // Method javafx/scene/Scene$48."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #630                // Field onKeyPressed:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #630                // Field onKeyPressed:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnKeyReleased(javafx.event.EventHandler<? super javafx.scene.input.KeyEvent>);
    Code:
       0: aload_0
       1: invokevirtual #633                // Method onKeyReleasedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.KeyEvent> getOnKeyReleased();
    Code:
       0: aload_0
       1: getfield      #634                // Field onKeyReleased:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #634                // Field onKeyReleased:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.KeyEvent>> onKeyReleasedProperty();
    Code:
       0: aload_0
       1: getfield      #634                // Field onKeyReleased:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #635                // class javafx/scene/Scene$49
      11: dup
      12: aload_0
      13: invokespecial #636                // Method javafx/scene/Scene$49."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #634                // Field onKeyReleased:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #634                // Field onKeyReleased:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnKeyTyped(javafx.event.EventHandler<? super javafx.scene.input.KeyEvent>);
    Code:
       0: aload_0
       1: invokevirtual #637                // Method onKeyTypedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.KeyEvent> getOnKeyTyped();
    Code:
       0: aload_0
       1: getfield      #638                // Field onKeyTyped:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #638                // Field onKeyTyped:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.KeyEvent>> onKeyTypedProperty();
    Code:
       0: aload_0
       1: getfield      #638                // Field onKeyTyped:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #639                // class javafx/scene/Scene$50
      11: dup
      12: aload_0
      13: invokespecial #640                // Method javafx/scene/Scene$50."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #638                // Field onKeyTyped:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #638                // Field onKeyTyped:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnInputMethodTextChanged(javafx.event.EventHandler<? super javafx.scene.input.InputMethodEvent>);
    Code:
       0: aload_0
       1: invokevirtual #641                // Method onInputMethodTextChangedProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<? super javafx.scene.input.InputMethodEvent> getOnInputMethodTextChanged();
    Code:
       0: aload_0
       1: getfield      #642                // Field onInputMethodTextChanged:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #642                // Field onInputMethodTextChanged:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #472                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<? super javafx.scene.input.InputMethodEvent>> onInputMethodTextChangedProperty();
    Code:
       0: aload_0
       1: getfield      #642                // Field onInputMethodTextChanged:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #643                // class javafx/scene/Scene$51
      11: dup
      12: aload_0
      13: invokespecial #644                // Method javafx/scene/Scene$51."<init>":(Ljavafx/scene/Scene;)V
      16: putfield      #642                // Field onInputMethodTextChanged:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #642                // Field onInputMethodTextChanged:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final javafx.collections.ObservableMap<java.lang.Object, java.lang.Object> getProperties();
    Code:
       0: aload_0
       1: getfield      #645                // Field properties:Ljavafx/collections/ObservableMap;
       4: ifnonnull     21
       7: aload_0
       8: new           #84                 // class java/util/HashMap
      11: dup
      12: invokespecial #85                 // Method java/util/HashMap."<init>":()V
      15: invokestatic  #646                // Method javafx/collections/FXCollections.observableMap:(Ljava/util/Map;)Ljavafx/collections/ObservableMap;
      18: putfield      #645                // Field properties:Ljavafx/collections/ObservableMap;
      21: aload_0
      22: getfield      #645                // Field properties:Ljavafx/collections/ObservableMap;
      25: areturn

  public boolean hasProperties();
    Code:
       0: aload_0
       1: getfield      #645                // Field properties:Ljavafx/collections/ObservableMap;
       4: ifnull        23
       7: aload_0
       8: getfield      #645                // Field properties:Ljavafx/collections/ObservableMap;
      11: invokeinterface #647,  1          // InterfaceMethod javafx/collections/ObservableMap.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public void setUserData(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #648                // Method getProperties:()Ljavafx/collections/ObservableMap;
       4: getstatic     #649                // Field USER_DATA_KEY:Ljava/lang/Object;
       7: aload_1
       8: invokeinterface #650,  3          // InterfaceMethod javafx/collections/ObservableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: return

  public java.lang.Object getUserData();
    Code:
       0: aload_0
       1: invokevirtual #648                // Method getProperties:()Ljavafx/collections/ObservableMap;
       4: getstatic     #649                // Field USER_DATA_KEY:Ljava/lang/Object;
       7: invokeinterface #651,  2          // InterfaceMethod javafx/collections/ObservableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  public final void setNodeOrientation(javafx.geometry.NodeOrientation);
    Code:
       0: aload_0
       1: invokevirtual #652                // Method nodeOrientationProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #206                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.geometry.NodeOrientation getNodeOrientation();
    Code:
       0: aload_0
       1: getfield      #653                // Field nodeOrientation:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     13
       7: getstatic     #654                // Field defaultNodeOrientation:Ljavafx/geometry/NodeOrientation;
      10: goto          23
      13: aload_0
      14: getfield      #653                // Field nodeOrientation:Ljavafx/beans/property/ObjectProperty;
      17: invokevirtual #208                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      20: checkcast     #655                // class javafx/geometry/NodeOrientation
      23: areturn

  public final javafx.beans.property.ObjectProperty<javafx.geometry.NodeOrientation> nodeOrientationProperty();
    Code:
       0: aload_0
       1: getfield      #653                // Field nodeOrientation:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     22
       7: aload_0
       8: new           #656                // class javafx/scene/Scene$52
      11: dup
      12: aload_0
      13: getstatic     #654                // Field defaultNodeOrientation:Ljavafx/geometry/NodeOrientation;
      16: invokespecial #657                // Method javafx/scene/Scene$52."<init>":(Ljavafx/scene/Scene;Ljavafx/geometry/NodeOrientation;)V
      19: putfield      #653                // Field nodeOrientation:Ljavafx/beans/property/ObjectProperty;
      22: aload_0
      23: getfield      #653                // Field nodeOrientation:Ljavafx/beans/property/ObjectProperty;
      26: areturn

  public final javafx.geometry.NodeOrientation getEffectiveNodeOrientation();
    Code:
       0: aload_0
       1: getfield      #658                // Field effectiveNodeOrientation:Ljavafx/geometry/NodeOrientation;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokespecial #659                // Method calcEffectiveNodeOrientation:()Ljavafx/geometry/NodeOrientation;
      12: putfield      #658                // Field effectiveNodeOrientation:Ljavafx/geometry/NodeOrientation;
      15: aload_0
      16: getfield      #658                // Field effectiveNodeOrientation:Ljavafx/geometry/NodeOrientation;
      19: areturn

  public final javafx.beans.property.ReadOnlyObjectProperty<javafx.geometry.NodeOrientation> effectiveNodeOrientationProperty();
    Code:
       0: aload_0
       1: getfield      #660                // Field effectiveNodeOrientationProperty:Ljavafx/scene/Scene$EffectiveOrientationProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #661                // class javafx/scene/Scene$EffectiveOrientationProperty
      11: dup
      12: aload_0
      13: aconst_null
      14: invokespecial #662                // Method javafx/scene/Scene$EffectiveOrientationProperty."<init>":(Ljavafx/scene/Scene;Ljavafx/scene/Scene$1;)V
      17: putfield      #660                // Field effectiveNodeOrientationProperty:Ljavafx/scene/Scene$EffectiveOrientationProperty;
      20: aload_0
      21: getfield      #660                // Field effectiveNodeOrientationProperty:Ljavafx/scene/Scene$EffectiveOrientationProperty;
      24: areturn

  private void parentEffectiveOrientationInvalidated();
    Code:
       0: aload_0
       1: invokevirtual #663                // Method getNodeOrientation:()Ljavafx/geometry/NodeOrientation;
       4: getstatic     #664                // Field javafx/geometry/NodeOrientation.INHERIT:Ljavafx/geometry/NodeOrientation;
       7: if_acmpne     14
      10: aload_0
      11: invokespecial #2                  // Method sceneEffectiveOrientationInvalidated:()V
      14: return

  private void sceneEffectiveOrientationInvalidated();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #658                // Field effectiveNodeOrientation:Ljavafx/geometry/NodeOrientation;
       5: aload_0
       6: getfield      #660                // Field effectiveNodeOrientationProperty:Ljavafx/scene/Scene$EffectiveOrientationProperty;
       9: ifnull        19
      12: aload_0
      13: getfield      #660                // Field effectiveNodeOrientationProperty:Ljavafx/scene/Scene$EffectiveOrientationProperty;
      16: invokevirtual #665                // Method javafx/scene/Scene$EffectiveOrientationProperty.invalidate:()V
      19: aload_0
      20: invokevirtual #118                // Method getRoot:()Ljavafx/scene/Parent;
      23: invokevirtual #666                // Method javafx/scene/Parent.parentResolvedOrientationInvalidated:()V
      26: return

  private javafx.geometry.NodeOrientation calcEffectiveNodeOrientation();
    Code:
       0: aload_0
       1: invokevirtual #663                // Method getNodeOrientation:()Ljavafx/geometry/NodeOrientation;
       4: astore_1
       5: aload_1
       6: getstatic     #664                // Field javafx/geometry/NodeOrientation.INHERIT:Ljavafx/geometry/NodeOrientation;
       9: if_acmpne     81
      12: aload_0
      13: invokevirtual #141                // Method getWindow:()Ljavafx/stage/Window;
      16: astore_2
      17: aload_2
      18: ifnull        77
      21: aconst_null
      22: astore_3
      23: aload_2
      24: instanceof    #401                // class javafx/stage/Stage
      27: ifeq          41
      30: aload_2
      31: checkcast     #401                // class javafx/stage/Stage
      34: invokevirtual #667                // Method javafx/stage/Stage.getOwner:()Ljavafx/stage/Window;
      37: astore_3
      38: goto          56
      41: aload_2
      42: instanceof    #668                // class javafx/stage/PopupWindow
      45: ifeq          56
      48: aload_2
      49: checkcast     #668                // class javafx/stage/PopupWindow
      52: invokevirtual #669                // Method javafx/stage/PopupWindow.getOwnerWindow:()Ljavafx/stage/Window;
      55: astore_3
      56: aload_3
      57: ifnull        77
      60: aload_3
      61: invokevirtual #670                // Method javafx/stage/Window.getScene:()Ljavafx/scene/Scene;
      64: astore        4
      66: aload         4
      68: ifnull        77
      71: aload         4
      73: invokevirtual #671                // Method getEffectiveNodeOrientation:()Ljavafx/geometry/NodeOrientation;
      76: areturn
      77: getstatic     #672                // Field javafx/geometry/NodeOrientation.LEFT_TO_RIGHT:Ljavafx/geometry/NodeOrientation;
      80: areturn
      81: aload_1
      82: areturn

  com.sun.glass.ui.Accessible removeAccessible(javafx.scene.Node);
    Code:
       0: aload_0
       1: getfield      #673                // Field accMap:Ljava/util/Map;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #673                // Field accMap:Ljava/util/Map;
      13: aload_1
      14: invokeinterface #391,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #674                // class com/sun/glass/ui/Accessible
      22: areturn

  void addAccessible(javafx.scene.Node, com.sun.glass.ui.Accessible);
    Code:
       0: aload_0
       1: getfield      #673                // Field accMap:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #84                 // class java/util/HashMap
      11: dup
      12: invokespecial #85                 // Method java/util/HashMap."<init>":()V
      15: putfield      #673                // Field accMap:Ljava/util/Map;
      18: aload_0
      19: getfield      #673                // Field accMap:Ljava/util/Map;
      22: aload_1
      23: aload_2
      24: invokeinterface #389,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: return

  private void disposeAccessibles();
    Code:
       0: aload_0
       1: getfield      #673                // Field accMap:Ljava/util/Map;
       4: ifnull        146
       7: aload_0
       8: getfield      #673                // Field accMap:Ljava/util/Map;
      11: invokeinterface #675,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      16: invokeinterface #676,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      21: astore_1
      22: aload_1
      23: invokeinterface #622,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          137
      31: aload_1
      32: invokeinterface #623,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #677                // class java/util/Map$Entry
      40: astore_2
      41: aload_2
      42: invokeinterface #678,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      47: checkcast     #116                // class javafx/scene/Node
      50: astore_3
      51: aload_2
      52: invokeinterface #679,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      57: checkcast     #674                // class com/sun/glass/ui/Accessible
      60: astore        4
      62: aload_3
      63: getfield      #680                // Field javafx/scene/Node.accessible:Lcom/sun/glass/ui/Accessible;
      66: ifnull        112
      69: aload_3
      70: getfield      #680                // Field javafx/scene/Node.accessible:Lcom/sun/glass/ui/Accessible;
      73: aload         4
      75: if_acmpne     87
      78: getstatic     #681                // Field java/lang/System.err:Ljava/io/PrintStream;
      81: ldc_w         #682                // String [A11y] \'node.accessible == acc\' should never happen.
      84: invokevirtual #683                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      87: aload_3
      88: invokevirtual #684                // Method javafx/scene/Node.getScene:()Ljavafx/scene/Scene;
      91: aload_0
      92: if_acmpne     104
      95: getstatic     #681                // Field java/lang/System.err:Ljava/io/PrintStream;
      98: ldc_w         #685                // String [A11y] \'node.getScene() == this\' should never happen.
     101: invokevirtual #683                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     104: aload         4
     106: invokevirtual #182                // Method com/sun/glass/ui/Accessible.dispose:()V
     109: goto          134
     112: aload_3
     113: invokevirtual #684                // Method javafx/scene/Node.getScene:()Ljavafx/scene/Scene;
     116: aload_0
     117: if_acmpne     129
     120: aload_3
     121: aload         4
     123: putfield      #680                // Field javafx/scene/Node.accessible:Lcom/sun/glass/ui/Accessible;
     126: goto          134
     129: aload         4
     131: invokevirtual #182                // Method com/sun/glass/ui/Accessible.dispose:()V
     134: goto          22
     137: aload_0
     138: getfield      #673                // Field accMap:Ljava/util/Map;
     141: invokeinterface #686,  1          // InterfaceMethod java/util/Map.clear:()V
     146: return

  com.sun.glass.ui.Accessible getAccessible();
    Code:
       0: aload_0
       1: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #44                 // Field accessible:Lcom/sun/glass/ui/Accessible;
      13: ifnonnull     48
      16: aload_0
      17: invokestatic  #687                // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
      20: invokevirtual #688                // Method com/sun/glass/ui/Application.createAccessible:()Lcom/sun/glass/ui/Accessible;
      23: putfield      #44                 // Field accessible:Lcom/sun/glass/ui/Accessible;
      26: aload_0
      27: getfield      #44                 // Field accessible:Lcom/sun/glass/ui/Accessible;
      30: new           #689                // class javafx/scene/Scene$53
      33: dup
      34: aload_0
      35: invokespecial #690                // Method javafx/scene/Scene$53."<init>":(Ljavafx/scene/Scene;)V
      38: invokevirtual #691                // Method com/sun/glass/ui/Accessible.setEventHandler:(Lcom/sun/glass/ui/Accessible$EventHandler;)V
      41: invokestatic  #692                // Method com/sun/javafx/application/PlatformImpl.accessibilityActiveProperty:()Ljavafx/beans/property/BooleanProperty;
      44: iconst_1
      45: invokevirtual #693                // Method javafx/beans/property/BooleanProperty.set:(Z)V
      48: aload_0
      49: getfield      #44                 // Field accessible:Lcom/sun/glass/ui/Accessible;
      52: areturn

  private static java.lang.Boolean lambda$static$4();
    Code:
       0: ldc_w         #694                // String javafx.scene.nodeOrientation.RTL
       3: invokestatic  #695                // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
       6: invokestatic  #696                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       9: areturn

  private void lambda$snapshot$3(javafx.scene.image.WritableImage, javafx.util.Callback);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #286                // Method doSnapshot:(Ljavafx/scene/image/WritableImage;)Ljavafx/scene/image/WritableImage;
       5: astore_3
       6: new           #697                // class javafx/scene/SnapshotResult
       9: dup
      10: aload_3
      11: aload_0
      12: aconst_null
      13: invokespecial #698                // Method javafx/scene/SnapshotResult."<init>":(Ljavafx/scene/image/WritableImage;Ljava/lang/Object;Ljavafx/scene/SnapshotParameters;)V
      16: astore        4
      18: aload_2
      19: aload         4
      21: invokeinterface #699,  2          // InterfaceMethod javafx/util/Callback.call:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #700                // class java/lang/Void
      29: astore        5
      31: goto          53
      34: astore        5
      36: getstatic     #681                // Field java/lang/System.err:Ljava/io/PrintStream;
      39: ldc_w         #702                // String Exception in snapshot callback
      42: invokevirtual #683                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      45: aload         5
      47: getstatic     #681                // Field java/lang/System.err:Ljava/io/PrintStream;
      50: invokevirtual #703                // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintStream;)V
      53: return
    Exception table:
       from    to  target type
          18    31    34   Class java/lang/Throwable

  private static void lambda$addSnapshotRunnable$2(java.lang.Runnable, java.security.AccessControlContext);
    Code:
       0: aload_0
       1: invokedynamic #704,  0            // InvokeDynamic #5:run:(Ljava/lang/Runnable;)Ljava/security/PrivilegedAction;
       6: aload_1
       7: invokestatic  #705                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
      10: pop
      11: return

  private static java.lang.Void lambda$addSnapshotRunnable$1(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokeinterface #706,  1          // InterfaceMethod java/lang/Runnable.run:()V
       6: aconst_null
       7: areturn

  private static void lambda$addSnapshotRunnable$0();
    Code:
       0: getstatic     #282                // Field snapshotRunnableList:Ljava/util/List;
       3: invokeinterface #266,  1          // InterfaceMethod java/util/List.size:()I
       8: ifle          100
      11: getstatic     #282                // Field snapshotRunnableList:Ljava/util/List;
      14: astore_0
      15: getstatic     #282                // Field snapshotRunnableList:Ljava/util/List;
      18: getstatic     #280                // Field snapshotRunnableListA:Ljava/util/List;
      21: if_acmpne     33
      24: getstatic     #281                // Field snapshotRunnableListB:Ljava/util/List;
      27: putstatic     #282                // Field snapshotRunnableList:Ljava/util/List;
      30: goto          39
      33: getstatic     #280                // Field snapshotRunnableListA:Ljava/util/List;
      36: putstatic     #282                // Field snapshotRunnableList:Ljava/util/List;
      39: aload_0
      40: invokeinterface #621,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      45: astore_1
      46: aload_1
      47: invokeinterface #622,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          94
      55: aload_1
      56: invokeinterface #623,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #707                // class java/lang/Runnable
      64: astore_2
      65: aload_2
      66: invokeinterface #706,  1          // InterfaceMethod java/lang/Runnable.run:()V
      71: goto          91
      74: astore_3
      75: getstatic     #681                // Field java/lang/System.err:Ljava/io/PrintStream;
      78: ldc_w         #708                // String Exception in snapshot runnable
      81: invokevirtual #683                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      84: aload_3
      85: getstatic     #681                // Field java/lang/System.err:Ljava/io/PrintStream;
      88: invokevirtual #703                // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintStream;)V
      91: goto          46
      94: aload_0
      95: invokeinterface #709,  1          // InterfaceMethod java/util/List.clear:()V
     100: return
    Exception table:
       from    to  target type
          65    71    74   Class java/lang/Throwable

  static java.lang.Object access$000();
    Code:
       0: getstatic     #52                 // Field trackerMonitor:Ljava/lang/Object;
       3: areturn

  static com.sun.javafx.perf.PerformanceTracker access$102(javafx.scene.Scene, com.sun.javafx.perf.PerformanceTracker);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #51                 // Field tracker:Lcom/sun/javafx/perf/PerformanceTracker;
       6: areturn

  static com.sun.javafx.perf.PerformanceTracker access$100(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #51                 // Field tracker:Lcom/sun/javafx/perf/PerformanceTracker;
       4: areturn

  static void access$200(javafx.scene.Scene);
    Code:
       0: aload_0
       1: invokespecial #50                 // Method parentEffectiveOrientationInvalidated:()V
       4: return

  static javafx.scene.Node access$302(javafx.scene.Scene, javafx.scene.Node);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #49                 // Field transientFocusContainer:Ljavafx/scene/Node;
       6: areturn

  static javafx.scene.Scene$KeyHandler access$400(javafx.scene.Scene);
    Code:
       0: aload_0
       1: invokespecial #48                 // Method getKeyHandler:()Ljavafx/scene/Scene$KeyHandler;
       4: areturn

  static void access$800(javafx.scene.Scene, javafx.scene.Scene$DirtyBits);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #47                 // Method markDirty:(Ljavafx/scene/Scene$DirtyBits;)V
       5: return

  static javafx.scene.Node access$1700(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #46                 // Field oldFocusOwner:Ljavafx/scene/Node;
       4: areturn

  static javafx.scene.Scene$KeyHandler access$1800(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #45                 // Field keyHandler:Ljavafx/scene/Scene$KeyHandler;
       4: areturn

  static javafx.scene.Node access$1702(javafx.scene.Scene, javafx.scene.Node);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #46                 // Field oldFocusOwner:Ljavafx/scene/Node;
       6: areturn

  static com.sun.glass.ui.Accessible access$2000(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #44                 // Field accessible:Lcom/sun/glass/ui/Accessible;
       4: areturn

  static boolean access$2202(boolean);
    Code:
       0: iload_0
       1: dup
       2: putstatic     #43                 // Field inSynchronizer:Z
       5: ireturn

  static javafx.scene.Node[] access$2300(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #42                 // Field dirtyNodes:[Ljavafx/scene/Node;
       4: areturn

  static javafx.scene.Node[] access$2302(javafx.scene.Scene, javafx.scene.Node[]);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #42                 // Field dirtyNodes:[Ljavafx/scene/Node;
       6: areturn

  static int access$2400(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #41                 // Field dirtyNodesSize:I
       4: ireturn

  static int access$2402(javafx.scene.Scene, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #41                 // Field dirtyNodesSize:I
       6: ireturn

  static boolean access$2500(javafx.scene.Scene, javafx.scene.Scene$DirtyBits);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #40                 // Method isDirty:(Ljavafx/scene/Scene$DirtyBits;)Z
       5: ireturn

  static com.sun.javafx.tk.TKScene access$2600(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #39                 // Field peer:Lcom/sun/javafx/tk/TKScene;
       4: areturn

  static javafx.scene.Scene$MouseHandler access$2700(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #38                 // Field mouseHandler:Ljavafx/scene/Scene$MouseHandler;
       4: areturn

  static void access$2900(javafx.scene.Scene);
    Code:
       0: aload_0
       1: invokespecial #37                 // Method clearDirty:()V
       4: return

  static void access$3000(javafx.scene.Scene);
    Code:
       0: aload_0
       1: invokespecial #36                 // Method focusInitial:()V
       4: return

  static void access$3100(javafx.scene.Scene, javafx.scene.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #35                 // Method focusIneligible:(Ljavafx/scene/Node;)V
       5: return

  static void access$3200(javafx.scene.Scene);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method disposeAccessibles:()V
       4: return

  static java.util.List access$3300(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #33                 // Field preLayoutPulseListeners:Ljava/util/List;
       4: areturn

  static void access$3400(javafx.scene.Scene);
    Code:
       0: aload_0
       1: invokespecial #32                 // Method doCSSPass:()V
       4: return

  static java.util.List access$3500(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #31                 // Field postLayoutPulseListeners:Ljava/util/List;
       4: areturn

  static boolean access$3600(javafx.scene.Scene);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method isDirtyEmpty:()Z
       4: ireturn

  static void access$3700(javafx.scene.Scene);
    Code:
       0: aload_0
       1: invokespecial #29                 // Method syncLights:()V
       4: return

  static void access$3900(javafx.scene.Scene, double);
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #28                 // Method setX:(D)V
       5: return

  static void access$4000(javafx.scene.Scene, double);
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #27                 // Method setY:(D)V
       5: return

  static void access$4100(javafx.scene.Scene, double);
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #26                 // Method setWidth:(D)V
       5: return

  static void access$4200(javafx.scene.Scene, double);
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #25                 // Method setHeight:(D)V
       5: return

  static void access$4300(javafx.scene.Scene, javafx.scene.input.InputMethodEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #24                 // Method processInputMethodEvent:(Ljavafx/scene/input/InputMethodEvent;)V
       5: return

  static void access$4400(javafx.scene.Scene, double, double, double, double, boolean);
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: dload         5
       5: dload         7
       7: iload         9
       9: invokespecial #23                 // Method processMenuEvent:(DDDDZ)V
      12: return

  static javafx.scene.Scene$TouchGesture access$4500(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #22                 // Field scrollGesture:Ljavafx/scene/Scene$TouchGesture;
       4: areturn

  static javafx.geometry.Point2D access$4600(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #21                 // Field cursorScenePos:Ljavafx/geometry/Point2D;
       4: areturn

  static javafx.geometry.Point2D access$4700(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #20                 // Field cursorScreenPos:Ljavafx/geometry/Point2D;
       4: areturn

  static boolean access$4802(boolean);
    Code:
       0: iload_0
       1: dup
       2: putstatic     #19                 // Field inMousePick:Z
       5: ireturn

  static javafx.scene.input.PickResult access$4900(javafx.scene.Scene, double, double);
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: invokespecial #18                 // Method pick:(DD)Ljavafx/scene/input/PickResult;
       6: areturn

  static void access$5000(javafx.scene.Scene, javafx.scene.input.GestureEvent, javafx.scene.Scene$TouchGesture);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #17                 // Method processGestureEvent:(Ljavafx/scene/input/GestureEvent;Ljavafx/scene/Scene$TouchGesture;)V
       6: return

  static javafx.scene.Scene$TouchGesture access$5100(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #16                 // Field zoomGesture:Ljavafx/scene/Scene$TouchGesture;
       4: areturn

  static javafx.scene.Scene$TouchGesture access$5200(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #15                 // Field rotateGesture:Ljavafx/scene/Scene$TouchGesture;
       4: areturn

  static javafx.scene.Scene$TouchGesture access$5300(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #14                 // Field swipeGesture:Ljavafx/scene/Scene$TouchGesture;
       4: areturn

  static javafx.scene.input.TouchEvent access$5402(javafx.scene.Scene, javafx.scene.input.TouchEvent);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #13                 // Field nextTouchEvent:Ljavafx/scene/input/TouchEvent;
       6: areturn

  static javafx.scene.input.TouchPoint[] access$5500(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #12                 // Field touchPoints:[Ljavafx/scene/input/TouchPoint;
       4: areturn

  static javafx.scene.input.TouchPoint[] access$5502(javafx.scene.Scene, javafx.scene.input.TouchPoint[]);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #12                 // Field touchPoints:[Ljavafx/scene/input/TouchPoint;
       6: areturn

  static int access$5602(javafx.scene.Scene, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #11                 // Field touchPointIndex:I
       6: ireturn

  static javafx.scene.input.TouchEvent access$5400(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #13                 // Field nextTouchEvent:Ljavafx/scene/input/TouchEvent;
       4: areturn

  static int access$5608(javafx.scene.Scene);
    Code:
       0: aload_0
       1: dup
       2: getfield      #11                 // Field touchPointIndex:I
       5: dup_x1
       6: iconst_1
       7: iadd
       8: putfield      #11                 // Field touchPointIndex:I
      11: ireturn

  static javafx.scene.Scene$TouchMap access$5700(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #10                 // Field touchMap:Ljavafx/scene/Scene$TouchMap;
       4: areturn

  static java.util.Map access$5800(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #9                  // Field touchTargets:Ljava/util/Map;
       4: areturn

  static int access$5600(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #11                 // Field touchPointIndex:I
       4: ireturn

  static void access$5900(javafx.scene.Scene, javafx.scene.input.TouchEvent, javafx.scene.input.TouchPoint[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #8                  // Method processTouchEvent:(Ljavafx/scene/input/TouchEvent;[Ljavafx/scene/input/TouchPoint;)V
       6: return

  static int access$6002(javafx.scene.Scene, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #7                  // Field touchEventSetId:I
       6: ireturn

  static javafx.scene.Scene$TargetWrapper access$6700(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #6                  // Field tmpTargetWrapper:Ljavafx/scene/Scene$TargetWrapper;
       4: areturn

  static void access$6800(javafx.scene.Scene, javafx.scene.Scene$TargetWrapper, double, double);
    Code:
       0: aload_0
       1: aload_1
       2: dload_2
       3: dload         4
       5: invokespecial #5                  // Method pick:(Ljavafx/scene/Scene$TargetWrapper;DD)V
       8: return

  static javafx.geometry.Point2D access$4702(javafx.scene.Scene, javafx.geometry.Point2D);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #20                 // Field cursorScreenPos:Ljavafx/geometry/Point2D;
       6: areturn

  static javafx.geometry.Point2D access$4602(javafx.scene.Scene, javafx.geometry.Point2D);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #21                 // Field cursorScenePos:Ljavafx/geometry/Point2D;
       6: areturn

  static javafx.scene.Scene$ClickGenerator access$7900(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #4                  // Field clickGenerator:Ljavafx/scene/Scene$ClickGenerator;
       4: areturn

  static javafx.beans.property.ReadOnlyObjectWrapper access$8400(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #3                  // Field focusOwner:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: areturn

  static void access$8800(javafx.scene.Scene);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method sceneEffectiveOrientationInvalidated:()V
       4: return

  static javafx.scene.Node access$300(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #49                 // Field transientFocusContainer:Ljavafx/scene/Node;
       4: areturn

  static {};
    Code:
       0: ldc           #1                  // class javafx/scene/Scene
       2: invokevirtual #710                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #139                // Field $assertionsDisabled:Z
      16: new           #711                // class javafx/scene/Scene$1
      19: dup
      20: invokespecial #712                // Method javafx/scene/Scene$1."<init>":()V
      23: invokestatic  #713                // Method com/sun/javafx/perf/PerformanceTracker.setSceneAccessor:(Lcom/sun/javafx/perf/PerformanceTracker$SceneAccessor;)V
      26: new           #714                // class javafx/scene/Scene$2
      29: dup
      30: invokespecial #715                // Method javafx/scene/Scene$2."<init>":()V
      33: invokestatic  #716                // Method com/sun/javafx/scene/SceneHelper.setSceneAccessor:(Lcom/sun/javafx/scene/SceneHelper$SceneAccessor;)V
      36: iconst_0
      37: putstatic     #43                 // Field inSynchronizer:Z
      40: iconst_0
      41: putstatic     #19                 // Field inMousePick:Z
      44: iconst_0
      45: putstatic     #109                // Field allowPGAccess:Z
      48: iconst_0
      49: putstatic     #111                // Field pgAccessCount:I
      52: aconst_null
      53: putstatic     #279                // Field snapshotPulseListener:Lcom/sun/javafx/tk/TKPulseListener;
      56: new           #717                // class java/lang/Object
      59: dup
      60: invokespecial #64                 // Method java/lang/Object."<init>":()V
      63: putstatic     #52                 // Field trackerMonitor:Ljava/lang/Object;
      66: new           #717                // class java/lang/Object
      69: dup
      70: invokespecial #64                 // Method java/lang/Object."<init>":()V
      73: putstatic     #649                // Field USER_DATA_KEY:Ljava/lang/Object;
      76: invokedynamic #718,  0            // InvokeDynamic #6:run:()Ljava/security/PrivilegedAction;
      81: invokestatic  #719                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      84: checkcast     #720                // class java/lang/Boolean
      87: invokevirtual #721                // Method java/lang/Boolean.booleanValue:()Z
      90: ifeq          99
      93: getstatic     #722                // Field javafx/geometry/NodeOrientation.RIGHT_TO_LEFT:Ljavafx/geometry/NodeOrientation;
      96: goto          102
      99: getstatic     #664                // Field javafx/geometry/NodeOrientation.INHERIT:Ljavafx/geometry/NodeOrientation;
     102: putstatic     #654                // Field defaultNodeOrientation:Ljavafx/geometry/NodeOrientation;
     105: return
}
