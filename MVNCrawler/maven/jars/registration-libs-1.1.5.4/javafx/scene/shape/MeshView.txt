Compiled from "MeshView.java"
public class javafx.scene.shape.MeshView extends javafx.scene.shape.Shape3D {
  private javafx.beans.property.ObjectProperty<javafx.scene.shape.Mesh> mesh;

  public javafx.scene.shape.MeshView();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method javafx/scene/shape/Shape3D."<init>":()V
       4: aload_0
       5: invokestatic  #7                  // Method com/sun/javafx/scene/shape/MeshViewHelper.initHelper:(Ljavafx/scene/shape/MeshView;)V
       8: return

  public javafx.scene.shape.MeshView(javafx.scene.shape.Mesh);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method javafx/scene/shape/Shape3D."<init>":()V
       4: aload_0
       5: invokestatic  #7                  // Method com/sun/javafx/scene/shape/MeshViewHelper.initHelper:(Ljavafx/scene/shape/MeshView;)V
       8: aload_0
       9: aload_1
      10: invokevirtual #8                  // Method setMesh:(Ljavafx/scene/shape/Mesh;)V
      13: return

  public final void setMesh(javafx.scene.shape.Mesh);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method meshProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #10                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.scene.shape.Mesh getMesh();
    Code:
       0: aload_0
       1: getfield      #11                 // Field mesh:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #11                 // Field mesh:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #12                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #13                 // class javafx/scene/shape/Mesh
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.scene.shape.Mesh> meshProperty();
    Code:
       0: aload_0
       1: getfield      #11                 // Field mesh:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     22
       7: aload_0
       8: new           #14                 // class javafx/scene/shape/MeshView$2
      11: dup
      12: aload_0
      13: aload_0
      14: ldc           #15                 // String mesh
      16: invokespecial #16                 // Method javafx/scene/shape/MeshView$2."<init>":(Ljavafx/scene/shape/MeshView;Ljava/lang/Object;Ljava/lang/String;)V
      19: putfield      #11                 // Field mesh:Ljavafx/beans/property/ObjectProperty;
      22: aload_0
      23: getfield      #11                 // Field mesh:Ljavafx/beans/property/ObjectProperty;
      26: areturn

  private void doUpdatePeer();
    Code:
       0: aload_0
       1: invokestatic  #17                 // Method com/sun/javafx/scene/NodeHelper.getPeer:(Ljavafx/scene/Node;)Lcom/sun/javafx/sg/prism/NGNode;
       4: checkcast     #18                 // class com/sun/javafx/sg/prism/NGMeshView
       7: astore_1
       8: aload_0
       9: getstatic     #19                 // Field com/sun/javafx/scene/DirtyBits.MESH_GEOM:Lcom/sun/javafx/scene/DirtyBits;
      12: invokestatic  #20                 // Method com/sun/javafx/scene/NodeHelper.isDirty:(Ljavafx/scene/Node;Lcom/sun/javafx/scene/DirtyBits;)Z
      15: ifeq          32
      18: aload_0
      19: invokevirtual #21                 // Method getMesh:()Ljavafx/scene/shape/Mesh;
      22: ifnull        32
      25: aload_0
      26: invokevirtual #21                 // Method getMesh:()Ljavafx/scene/shape/Mesh;
      29: invokevirtual #22                 // Method javafx/scene/shape/Mesh.updatePG:()V
      32: aload_0
      33: getstatic     #23                 // Field com/sun/javafx/scene/DirtyBits.MESH:Lcom/sun/javafx/scene/DirtyBits;
      36: invokestatic  #20                 // Method com/sun/javafx/scene/NodeHelper.isDirty:(Ljavafx/scene/Node;Lcom/sun/javafx/scene/DirtyBits;)Z
      39: ifeq          64
      42: aload_1
      43: aload_0
      44: invokevirtual #21                 // Method getMesh:()Ljavafx/scene/shape/Mesh;
      47: ifnonnull     54
      50: aconst_null
      51: goto          61
      54: aload_0
      55: invokevirtual #21                 // Method getMesh:()Ljavafx/scene/shape/Mesh;
      58: invokevirtual #24                 // Method javafx/scene/shape/Mesh.getPGMesh:()Lcom/sun/javafx/sg/prism/NGTriangleMesh;
      61: invokevirtual #25                 // Method com/sun/javafx/sg/prism/NGMeshView.setMesh:(Lcom/sun/javafx/sg/prism/NGTriangleMesh;)V
      64: return

  private com.sun.javafx.sg.prism.NGNode doCreatePeer();
    Code:
       0: new           #18                 // class com/sun/javafx/sg/prism/NGMeshView
       3: dup
       4: invokespecial #26                 // Method com/sun/javafx/sg/prism/NGMeshView."<init>":()V
       7: areturn

  private com.sun.javafx.geom.BaseBounds doComputeGeomBounds(com.sun.javafx.geom.BaseBounds, com.sun.javafx.geom.transform.BaseTransform);
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getMesh:()Ljavafx/scene/shape/Mesh;
       4: ifnull        26
       7: aload_0
       8: invokevirtual #21                 // Method getMesh:()Ljavafx/scene/shape/Mesh;
      11: aload_1
      12: invokevirtual #27                 // Method javafx/scene/shape/Mesh.computeBounds:(Lcom/sun/javafx/geom/BaseBounds;)Lcom/sun/javafx/geom/BaseBounds;
      15: astore_1
      16: aload_2
      17: aload_1
      18: aload_1
      19: invokevirtual #28                 // Method com/sun/javafx/geom/transform/BaseTransform.transform:(Lcom/sun/javafx/geom/BaseBounds;Lcom/sun/javafx/geom/BaseBounds;)Lcom/sun/javafx/geom/BaseBounds;
      22: astore_1
      23: goto          31
      26: aload_1
      27: invokevirtual #29                 // Method com/sun/javafx/geom/BaseBounds.makeEmpty:()Lcom/sun/javafx/geom/BaseBounds;
      30: pop
      31: aload_1
      32: areturn

  private boolean doComputeContains(double, double);
    Code:
       0: new           #30                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #31                 // String Not supported yet.
       6: invokespecial #32                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  private boolean doComputeIntersects(com.sun.javafx.geom.PickRay, com.sun.javafx.scene.input.PickResultChooser);
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getMesh:()Ljavafx/scene/shape/Mesh;
       4: aload_1
       5: aload_2
       6: aload_0
       7: aload_0
       8: invokevirtual #33                 // Method getCullFace:()Ljavafx/scene/shape/CullFace;
      11: iconst_1
      12: invokestatic  #34                 // Method com/sun/javafx/scene/shape/MeshHelper.computeIntersects:(Ljavafx/scene/shape/Mesh;Lcom/sun/javafx/geom/PickRay;Lcom/sun/javafx/scene/input/PickResultChooser;Ljavafx/scene/Node;Ljavafx/scene/shape/CullFace;Z)Z
      15: ireturn

  static com.sun.javafx.sg.prism.NGNode access$000(javafx.scene.shape.MeshView);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method doCreatePeer:()Lcom/sun/javafx/sg/prism/NGNode;
       4: areturn

  static void access$100(javafx.scene.shape.MeshView);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method doUpdatePeer:()V
       4: return

  static com.sun.javafx.geom.BaseBounds access$200(javafx.scene.shape.MeshView, com.sun.javafx.geom.BaseBounds, com.sun.javafx.geom.transform.BaseTransform);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #3                  // Method doComputeGeomBounds:(Lcom/sun/javafx/geom/BaseBounds;Lcom/sun/javafx/geom/transform/BaseTransform;)Lcom/sun/javafx/geom/BaseBounds;
       6: areturn

  static boolean access$300(javafx.scene.shape.MeshView, double, double);
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: invokespecial #2                  // Method doComputeContains:(DD)Z
       6: ireturn

  static boolean access$400(javafx.scene.shape.MeshView, com.sun.javafx.geom.PickRay, com.sun.javafx.scene.input.PickResultChooser);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method doComputeIntersects:(Lcom/sun/javafx/geom/PickRay;Lcom/sun/javafx/scene/input/PickResultChooser;)Z
       6: ireturn

  static {};
    Code:
       0: new           #35                 // class javafx/scene/shape/MeshView$1
       3: dup
       4: invokespecial #36                 // Method javafx/scene/shape/MeshView$1."<init>":()V
       7: invokestatic  #37                 // Method com/sun/javafx/scene/shape/MeshViewHelper.setMeshViewAccessor:(Lcom/sun/javafx/scene/shape/MeshViewHelper$MeshViewAccessor;)V
      10: return
}
