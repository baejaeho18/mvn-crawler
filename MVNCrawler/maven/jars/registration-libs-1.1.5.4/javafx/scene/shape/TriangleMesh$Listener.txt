Compiled from "TriangleMesh.java"
class javafx.scene.shape.TriangleMesh$Listener<T extends javafx.collections.ObservableArray<T>> implements javafx.collections.ArrayChangeListener<T>, com.sun.javafx.collections.FloatArraySyncer, com.sun.javafx.collections.IntegerArraySyncer {
  protected final T array;

  protected boolean dirty;

  protected boolean dirtyInFull;

  protected int dirtyRangeFrom;

  protected int dirtyRangeLength;

  static final boolean $assertionsDisabled;

  final javafx.scene.shape.TriangleMesh this$0;

  public javafx.scene.shape.TriangleMesh$Listener(T);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Ljavafx/scene/shape/TriangleMesh;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field dirty:Z
      14: aload_0
      15: iconst_1
      16: putfield      #4                  // Field dirtyInFull:Z
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field array:Ljavafx/collections/ObservableArray;
      24: aload_2
      25: aload_0
      26: invokeinterface #6,  2            // InterfaceMethod javafx/collections/ObservableArray.addListener:(Ljavafx/collections/ArrayChangeListener;)V
      31: return

  protected final void addDirtyRange(int, int);
    Code:
       0: iload_2
       1: ifle          74
       4: aload_0
       5: getfield      #4                  // Field dirtyInFull:Z
       8: ifne          74
      11: aload_0
      12: invokevirtual #7                  // Method markDirty:()V
      15: aload_0
      16: getfield      #8                  // Field dirtyRangeLength:I
      19: ifne          35
      22: aload_0
      23: iload_1
      24: putfield      #9                  // Field dirtyRangeFrom:I
      27: aload_0
      28: iload_2
      29: putfield      #8                  // Field dirtyRangeLength:I
      32: goto          74
      35: aload_0
      36: getfield      #9                  // Field dirtyRangeFrom:I
      39: iload_1
      40: invokestatic  #10                 // Method java/lang/Math.min:(II)I
      43: istore_3
      44: aload_0
      45: getfield      #9                  // Field dirtyRangeFrom:I
      48: aload_0
      49: getfield      #8                  // Field dirtyRangeLength:I
      52: iadd
      53: iload_1
      54: iload_2
      55: iadd
      56: invokestatic  #11                 // Method java/lang/Math.max:(II)I
      59: istore        4
      61: aload_0
      62: iload_3
      63: putfield      #9                  // Field dirtyRangeFrom:I
      66: aload_0
      67: iload         4
      69: iload_3
      70: isub
      71: putfield      #8                  // Field dirtyRangeLength:I
      74: return

  protected void markDirty();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field dirty:Z
       5: aload_0
       6: getfield      #1                  // Field this$0:Ljavafx/scene/shape/TriangleMesh;
       9: iconst_1
      10: invokevirtual #12                 // Method javafx/scene/shape/TriangleMesh.setDirty:(Z)V
      13: return

  public void onChanged(T, boolean, int, int);
    Code:
       0: iload_2
       1: ifeq          12
       4: aload_0
       5: iconst_1
       6: invokevirtual #13                 // Method setDirty:(Z)V
       9: goto          21
      12: aload_0
      13: iload_3
      14: iload         4
      16: iload_3
      17: isub
      18: invokevirtual #14                 // Method addDirtyRange:(II)V
      21: aload_0
      22: getfield      #1                  // Field this$0:Ljavafx/scene/shape/TriangleMesh;
      25: iconst_1
      26: invokestatic  #15                 // Method javafx/scene/shape/TriangleMesh.access$302:(Ljavafx/scene/shape/TriangleMesh;Z)Z
      29: pop
      30: return

  public final void setDirty(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field dirtyInFull:Z
       5: iload_1
       6: ifeq          34
       9: aload_0
      10: invokevirtual #7                  // Method markDirty:()V
      13: aload_0
      14: iconst_0
      15: putfield      #9                  // Field dirtyRangeFrom:I
      18: aload_0
      19: aload_0
      20: getfield      #5                  // Field array:Ljavafx/collections/ObservableArray;
      23: invokeinterface #16,  1           // InterfaceMethod javafx/collections/ObservableArray.size:()I
      28: putfield      #8                  // Field dirtyRangeLength:I
      31: goto          49
      34: aload_0
      35: iconst_0
      36: putfield      #3                  // Field dirty:Z
      39: aload_0
      40: aload_0
      41: iconst_0
      42: dup_x1
      43: putfield      #8                  // Field dirtyRangeLength:I
      46: putfield      #9                  // Field dirtyRangeFrom:I
      49: return

  public float[] syncTo(float[], int[]);
    Code:
       0: getstatic     #17                 // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_2
       7: ifnull        16
      10: aload_2
      11: arraylength
      12: iconst_2
      13: if_icmpeq     24
      16: new           #18                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #5                  // Field array:Ljavafx/collections/ObservableArray;
      28: checkcast     #20                 // class javafx/collections/ObservableFloatArray
      31: astore_3
      32: aload_0
      33: getfield      #4                  // Field dirtyInFull:Z
      36: ifne          54
      39: aload_1
      40: ifnull        54
      43: aload_1
      44: arraylength
      45: aload_3
      46: invokeinterface #21,  1           // InterfaceMethod javafx/collections/ObservableFloatArray.size:()I
      51: if_icmpeq     75
      54: aload_2
      55: iconst_0
      56: iconst_0
      57: iastore
      58: aload_2
      59: iconst_1
      60: aload_3
      61: invokeinterface #21,  1           // InterfaceMethod javafx/collections/ObservableFloatArray.size:()I
      66: iastore
      67: aload_3
      68: aconst_null
      69: invokeinterface #22,  2           // InterfaceMethod javafx/collections/ObservableFloatArray.toArray:([F)[F
      74: areturn
      75: aload_2
      76: iconst_0
      77: aload_0
      78: getfield      #9                  // Field dirtyRangeFrom:I
      81: iastore
      82: aload_2
      83: iconst_1
      84: aload_0
      85: getfield      #8                  // Field dirtyRangeLength:I
      88: iastore
      89: aload_3
      90: aload_0
      91: getfield      #9                  // Field dirtyRangeFrom:I
      94: aload_1
      95: aload_0
      96: getfield      #9                  // Field dirtyRangeFrom:I
      99: aload_0
     100: getfield      #8                  // Field dirtyRangeLength:I
     103: invokeinterface #23,  5           // InterfaceMethod javafx/collections/ObservableFloatArray.copyTo:(I[FII)V
     108: aload_1
     109: areturn

  public int[] syncTo(int[], int[]);
    Code:
       0: getstatic     #17                 // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_2
       7: ifnull        16
      10: aload_2
      11: arraylength
      12: iconst_2
      13: if_icmpeq     24
      16: new           #18                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #5                  // Field array:Ljavafx/collections/ObservableArray;
      28: checkcast     #24                 // class javafx/collections/ObservableIntegerArray
      31: astore_3
      32: aload_0
      33: getfield      #4                  // Field dirtyInFull:Z
      36: ifne          54
      39: aload_1
      40: ifnull        54
      43: aload_1
      44: arraylength
      45: aload_3
      46: invokeinterface #25,  1           // InterfaceMethod javafx/collections/ObservableIntegerArray.size:()I
      51: if_icmpeq     75
      54: aload_2
      55: iconst_0
      56: iconst_0
      57: iastore
      58: aload_2
      59: iconst_1
      60: aload_3
      61: invokeinterface #25,  1           // InterfaceMethod javafx/collections/ObservableIntegerArray.size:()I
      66: iastore
      67: aload_3
      68: aconst_null
      69: invokeinterface #26,  2           // InterfaceMethod javafx/collections/ObservableIntegerArray.toArray:([I)[I
      74: areturn
      75: aload_2
      76: iconst_0
      77: aload_0
      78: getfield      #9                  // Field dirtyRangeFrom:I
      81: iastore
      82: aload_2
      83: iconst_1
      84: aload_0
      85: getfield      #8                  // Field dirtyRangeLength:I
      88: iastore
      89: aload_3
      90: aload_0
      91: getfield      #9                  // Field dirtyRangeFrom:I
      94: aload_1
      95: aload_0
      96: getfield      #9                  // Field dirtyRangeFrom:I
      99: aload_0
     100: getfield      #8                  // Field dirtyRangeLength:I
     103: invokeinterface #27,  5           // InterfaceMethod javafx/collections/ObservableIntegerArray.copyTo:(I[III)V
     108: aload_1
     109: areturn

  static {};
    Code:
       0: ldc           #28                 // class javafx/scene/shape/TriangleMesh
       2: invokevirtual #29                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #17                 // Field $assertionsDisabled:Z
      16: return
}
