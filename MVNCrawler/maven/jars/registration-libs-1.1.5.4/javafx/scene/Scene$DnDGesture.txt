Compiled from "Scene.java"
class javafx.scene.Scene$DnDGesture {
  private final double hysteresisSizeX;

  private final double hysteresisSizeY;

  private javafx.event.EventTarget source;

  private java.util.Set<javafx.scene.input.TransferMode> sourceTransferModes;

  private javafx.scene.input.TransferMode acceptedTransferMode;

  private javafx.scene.input.Dragboard dragboard;

  private javafx.event.EventTarget potentialTarget;

  private javafx.event.EventTarget target;

  private javafx.scene.Scene$DragDetectedState dragDetected;

  private double pressedX;

  private double pressedY;

  private java.util.List<javafx.event.EventTarget> currentTargets;

  private java.util.List<javafx.event.EventTarget> newTargets;

  private javafx.event.EventTarget fullPDRSource;

  final javafx.scene.Scene this$0;

  javafx.scene.Scene$DnDGesture(javafx.scene.Scene);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field this$0:Ljavafx/scene/Scene;
       5: aload_0
       6: invokespecial #16                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #17                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      13: invokevirtual #18                 // Method com/sun/javafx/tk/Toolkit.getMultiClickMaxX:()I
      16: i2d
      17: putfield      #19                 // Field hysteresisSizeX:D
      20: aload_0
      21: invokestatic  #17                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      24: invokevirtual #20                 // Method com/sun/javafx/tk/Toolkit.getMultiClickMaxY:()I
      27: i2d
      28: putfield      #21                 // Field hysteresisSizeY:D
      31: aload_0
      32: aconst_null
      33: putfield      #10                 // Field source:Ljavafx/event/EventTarget;
      36: aload_0
      37: aconst_null
      38: putfield      #22                 // Field sourceTransferModes:Ljava/util/Set;
      41: aload_0
      42: aconst_null
      43: putfield      #23                 // Field acceptedTransferMode:Ljavafx/scene/input/TransferMode;
      46: aload_0
      47: aconst_null
      48: putfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      51: aload_0
      52: aconst_null
      53: putfield      #24                 // Field potentialTarget:Ljavafx/event/EventTarget;
      56: aload_0
      57: aconst_null
      58: putfield      #25                 // Field target:Ljavafx/event/EventTarget;
      61: aload_0
      62: getstatic     #26                 // Field javafx/scene/Scene$DragDetectedState.NOT_YET:Ljavafx/scene/Scene$DragDetectedState;
      65: putfield      #4                  // Field dragDetected:Ljavafx/scene/Scene$DragDetectedState;
      68: aload_0
      69: new           #27                 // class java/util/ArrayList
      72: dup
      73: invokespecial #28                 // Method java/util/ArrayList."<init>":()V
      76: putfield      #29                 // Field currentTargets:Ljava/util/List;
      79: aload_0
      80: new           #27                 // class java/util/ArrayList
      83: dup
      84: invokespecial #28                 // Method java/util/ArrayList."<init>":()V
      87: putfield      #30                 // Field newTargets:Ljava/util/List;
      90: aload_0
      91: aconst_null
      92: putfield      #31                 // Field fullPDRSource:Ljavafx/event/EventTarget;
      95: return

  private void fireEvent(javafx.event.EventTarget, javafx.event.Event);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_1
       5: aload_2
       6: invokestatic  #32                 // Method javafx/event/Event.fireEvent:(Ljavafx/event/EventTarget;Ljavafx/event/Event;)V
       9: return

  private void processingDragDetected();
    Code:
       0: aload_0
       1: getstatic     #33                 // Field javafx/scene/Scene$DragDetectedState.PROCESSING:Ljavafx/scene/Scene$DragDetectedState;
       4: putfield      #4                  // Field dragDetected:Ljavafx/scene/Scene$DragDetectedState;
       7: return

  private void dragDetectedProcessed();
    Code:
       0: aload_0
       1: getstatic     #34                 // Field javafx/scene/Scene$DragDetectedState.DONE:Ljavafx/scene/Scene$DragDetectedState;
       4: putfield      #4                  // Field dragDetected:Ljavafx/scene/Scene$DragDetectedState;
       7: aload_0
       8: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      11: ifnull        28
      14: aload_0
      15: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      18: invokestatic  #35                 // Method com/sun/javafx/scene/input/ClipboardHelper.contentPut:(Ljavafx/scene/input/Clipboard;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: istore_1
      30: iload_1
      31: ifeq          69
      34: invokestatic  #17                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      37: aload_0
      38: getfield      #15                 // Field this$0:Ljavafx/scene/Scene;
      41: invokestatic  #36                 // Method javafx/scene/Scene.access$2600:(Ljavafx/scene/Scene;)Lcom/sun/javafx/tk/TKScene;
      44: aload_0
      45: getfield      #22                 // Field sourceTransferModes:Ljava/util/Set;
      48: new           #37                 // class javafx/scene/Scene$DragSourceListener
      51: dup
      52: aload_0
      53: getfield      #15                 // Field this$0:Ljavafx/scene/Scene;
      56: invokespecial #38                 // Method javafx/scene/Scene$DragSourceListener."<init>":(Ljavafx/scene/Scene;)V
      59: aload_0
      60: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      63: invokevirtual #39                 // Method com/sun/javafx/tk/Toolkit.startDrag:(Lcom/sun/javafx/tk/TKScene;Ljava/util/Set;Lcom/sun/javafx/tk/TKDragSourceListener;Ljavafx/scene/input/Dragboard;)V
      66: goto          90
      69: aload_0
      70: getfield      #31                 // Field fullPDRSource:Ljavafx/event/EventTarget;
      73: ifnull        90
      76: aload_0
      77: getfield      #15                 // Field this$0:Ljavafx/scene/Scene;
      80: invokestatic  #40                 // Method javafx/scene/Scene.access$2700:(Ljavafx/scene/Scene;)Ljavafx/scene/Scene$MouseHandler;
      83: aload_0
      84: getfield      #31                 // Field fullPDRSource:Ljavafx/event/EventTarget;
      87: invokevirtual #41                 // Method javafx/scene/Scene$MouseHandler.enterFullPDR:(Ljavafx/event/EventTarget;)V
      90: aload_0
      91: aconst_null
      92: putfield      #31                 // Field fullPDRSource:Ljavafx/event/EventTarget;
      95: return

  private void processDragDetection(javafx.scene.input.MouseEvent);
    Code:
       0: aload_0
       1: getfield      #4                  // Field dragDetected:Ljavafx/scene/Scene$DragDetectedState;
       4: getstatic     #26                 // Field javafx/scene/Scene$DragDetectedState.NOT_YET:Ljavafx/scene/Scene$DragDetectedState;
       7: if_acmpeq     16
      10: aload_1
      11: iconst_0
      12: invokevirtual #42                 // Method javafx/scene/input/MouseEvent.setDragDetect:(Z)V
      15: return
      16: aload_1
      17: invokevirtual #43                 // Method javafx/scene/input/MouseEvent.getEventType:()Ljavafx/event/EventType;
      20: getstatic     #44                 // Field javafx/scene/input/MouseEvent.MOUSE_PRESSED:Ljavafx/event/EventType;
      23: if_acmpne     50
      26: aload_0
      27: aload_1
      28: invokevirtual #45                 // Method javafx/scene/input/MouseEvent.getSceneX:()D
      31: putfield      #46                 // Field pressedX:D
      34: aload_0
      35: aload_1
      36: invokevirtual #47                 // Method javafx/scene/input/MouseEvent.getSceneY:()D
      39: putfield      #48                 // Field pressedY:D
      42: aload_1
      43: iconst_0
      44: invokevirtual #42                 // Method javafx/scene/input/MouseEvent.setDragDetect:(Z)V
      47: goto          115
      50: aload_1
      51: invokevirtual #43                 // Method javafx/scene/input/MouseEvent.getEventType:()Ljavafx/event/EventType;
      54: getstatic     #49                 // Field javafx/scene/input/MouseEvent.MOUSE_DRAGGED:Ljavafx/event/EventType;
      57: if_acmpne     115
      60: aload_1
      61: invokevirtual #45                 // Method javafx/scene/input/MouseEvent.getSceneX:()D
      64: aload_0
      65: getfield      #46                 // Field pressedX:D
      68: dsub
      69: invokestatic  #50                 // Method java/lang/Math.abs:(D)D
      72: dstore_2
      73: aload_1
      74: invokevirtual #47                 // Method javafx/scene/input/MouseEvent.getSceneY:()D
      77: aload_0
      78: getfield      #48                 // Field pressedY:D
      81: dsub
      82: invokestatic  #50                 // Method java/lang/Math.abs:(D)D
      85: dstore        4
      87: aload_1
      88: dload_2
      89: aload_0
      90: getfield      #19                 // Field hysteresisSizeX:D
      93: dcmpl
      94: ifgt          107
      97: dload         4
      99: aload_0
     100: getfield      #21                 // Field hysteresisSizeY:D
     103: dcmpl
     104: ifle          111
     107: iconst_1
     108: goto          112
     111: iconst_0
     112: invokevirtual #42                 // Method javafx/scene/input/MouseEvent.setDragDetect:(Z)V
     115: return

  private boolean process(javafx.scene.input.MouseEvent, javafx.event.EventTarget);
    Code:
       0: iconst_1
       1: istore_3
       2: aload_0
       3: getfield      #4                  // Field dragDetected:Ljavafx/scene/Scene$DragDetectedState;
       6: getstatic     #34                 // Field javafx/scene/Scene$DragDetectedState.DONE:Ljavafx/scene/Scene$DragDetectedState;
       9: if_acmpeq     110
      12: aload_1
      13: invokevirtual #43                 // Method javafx/scene/input/MouseEvent.getEventType:()Ljavafx/event/EventType;
      16: getstatic     #44                 // Field javafx/scene/input/MouseEvent.MOUSE_PRESSED:Ljavafx/event/EventType;
      19: if_acmpeq     32
      22: aload_1
      23: invokevirtual #43                 // Method javafx/scene/input/MouseEvent.getEventType:()Ljavafx/event/EventType;
      26: getstatic     #49                 // Field javafx/scene/input/MouseEvent.MOUSE_DRAGGED:Ljavafx/event/EventType;
      29: if_acmpne     110
      32: aload_1
      33: invokevirtual #51                 // Method javafx/scene/input/MouseEvent.isDragDetect:()Z
      36: ifeq          110
      39: aload_0
      40: invokespecial #52                 // Method processingDragDetected:()V
      43: aload_2
      44: ifnull        106
      47: aload_1
      48: aload_1
      49: invokevirtual #53                 // Method javafx/scene/input/MouseEvent.getSource:()Ljava/lang/Object;
      52: aload_2
      53: getstatic     #54                 // Field javafx/scene/input/MouseEvent.DRAG_DETECTED:Ljavafx/event/EventType;
      56: invokevirtual #55                 // Method javafx/scene/input/MouseEvent.copyFor:(Ljava/lang/Object;Ljavafx/event/EventTarget;Ljavafx/event/EventType;)Ljavafx/scene/input/MouseEvent;
      59: astore        4
      61: aload_0
      62: aload_2
      63: aload         4
      65: invokespecial #56                 // Method fireEvent:(Ljavafx/event/EventTarget;Ljavafx/event/Event;)V
      68: aload_0
      69: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      72: ifnull        106
      75: aload_0
      76: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      79: iconst_1
      80: invokestatic  #57                 // Method com/sun/javafx/scene/input/DragboardHelper.setDataAccessRestriction:(Ljavafx/scene/input/Dragboard;Z)V
      83: goto          106
      86: astore        5
      88: aload_0
      89: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      92: ifnull        103
      95: aload_0
      96: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      99: iconst_1
     100: invokestatic  #57                 // Method com/sun/javafx/scene/input/DragboardHelper.setDataAccessRestriction:(Ljavafx/scene/input/Dragboard;Z)V
     103: aload         5
     105: athrow
     106: aload_0
     107: invokespecial #58                 // Method dragDetectedProcessed:()V
     110: aload_1
     111: invokevirtual #43                 // Method javafx/scene/input/MouseEvent.getEventType:()Ljavafx/event/EventType;
     114: getstatic     #59                 // Field javafx/scene/input/MouseEvent.MOUSE_RELEASED:Ljavafx/event/EventType;
     117: if_acmpne     122
     120: iconst_0
     121: istore_3
     122: iload_3
     123: ireturn
    Exception table:
       from    to  target type
          61    68    86   any
          86    88    86   any

  private boolean processRecognized(javafx.scene.input.DragEvent);
    Code:
       0: new           #60                 // class javafx/scene/input/MouseEvent
       3: dup
       4: getstatic     #54                 // Field javafx/scene/input/MouseEvent.DRAG_DETECTED:Ljavafx/event/EventType;
       7: aload_1
       8: invokevirtual #61                 // Method javafx/scene/input/DragEvent.getX:()D
      11: aload_1
      12: invokevirtual #62                 // Method javafx/scene/input/DragEvent.getY:()D
      15: aload_1
      16: invokevirtual #63                 // Method javafx/scene/input/DragEvent.getSceneX:()D
      19: aload_1
      20: invokevirtual #64                 // Method javafx/scene/input/DragEvent.getScreenY:()D
      23: getstatic     #65                 // Field javafx/scene/input/MouseButton.PRIMARY:Ljavafx/scene/input/MouseButton;
      26: iconst_1
      27: iconst_0
      28: iconst_0
      29: iconst_0
      30: iconst_0
      31: iconst_0
      32: iconst_1
      33: iconst_0
      34: iconst_0
      35: iconst_0
      36: iconst_0
      37: aload_1
      38: invokevirtual #66                 // Method javafx/scene/input/DragEvent.getPickResult:()Ljavafx/scene/input/PickResult;
      41: invokespecial #67                 // Method javafx/scene/input/MouseEvent."<init>":(Ljavafx/event/EventType;DDDDLjavafx/scene/input/MouseButton;IZZZZZZZZZZLjavafx/scene/input/PickResult;)V
      44: astore_2
      45: aload_0
      46: invokespecial #52                 // Method processingDragDetected:()V
      49: aload_1
      50: invokevirtual #66                 // Method javafx/scene/input/DragEvent.getPickResult:()Ljavafx/scene/input/PickResult;
      53: invokevirtual #68                 // Method javafx/scene/input/PickResult.getIntersectedNode:()Ljavafx/scene/Node;
      56: astore_3
      57: aload_0
      58: aload_3
      59: ifnull        66
      62: aload_3
      63: goto          70
      66: aload_0
      67: getfield      #15                 // Field this$0:Ljavafx/scene/Scene;
      70: aload_2
      71: invokespecial #56                 // Method fireEvent:(Ljavafx/event/EventTarget;Ljavafx/event/Event;)V
      74: aload_0
      75: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      78: ifnull        112
      81: aload_0
      82: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      85: iconst_1
      86: invokestatic  #57                 // Method com/sun/javafx/scene/input/DragboardHelper.setDataAccessRestriction:(Ljavafx/scene/input/Dragboard;Z)V
      89: goto          112
      92: astore        4
      94: aload_0
      95: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      98: ifnull        109
     101: aload_0
     102: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
     105: iconst_1
     106: invokestatic  #57                 // Method com/sun/javafx/scene/input/DragboardHelper.setDataAccessRestriction:(Ljavafx/scene/input/Dragboard;Z)V
     109: aload         4
     111: athrow
     112: aload_0
     113: invokespecial #58                 // Method dragDetectedProcessed:()V
     116: aload_0
     117: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
     120: ifnull        142
     123: aload_0
     124: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
     127: invokevirtual #69                 // Method javafx/scene/input/Dragboard.getContentTypes:()Ljava/util/Set;
     130: invokeinterface #70,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     135: ifne          142
     138: iconst_1
     139: goto          143
     142: iconst_0
     143: istore        4
     145: iload         4
     147: ireturn
    Exception table:
       from    to  target type
          57    74    92   any
          92    94    92   any

  private void processDropEnd(javafx.scene.input.DragEvent);
    Code:
       0: aload_0
       1: getfield      #10                 // Field source:Ljavafx/event/EventTarget;
       4: ifnonnull     16
       7: getstatic     #71                 // Field java/lang/System.out:Ljava/io/PrintStream;
      10: ldc           #72                 // String Scene.DnDGesture.processDropEnd() - UNEXPECTD - source is NULL
      12: invokevirtual #73                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      15: return
      16: new           #74                 // class javafx/scene/input/DragEvent
      19: dup
      20: aload_1
      21: invokevirtual #75                 // Method javafx/scene/input/DragEvent.getSource:()Ljava/lang/Object;
      24: aload_0
      25: getfield      #10                 // Field source:Ljavafx/event/EventTarget;
      28: getstatic     #76                 // Field javafx/scene/input/DragEvent.DRAG_DONE:Ljavafx/event/EventType;
      31: aload_1
      32: invokevirtual #77                 // Method javafx/scene/input/DragEvent.getDragboard:()Ljavafx/scene/input/Dragboard;
      35: aload_1
      36: invokevirtual #63                 // Method javafx/scene/input/DragEvent.getSceneX:()D
      39: aload_1
      40: invokevirtual #78                 // Method javafx/scene/input/DragEvent.getSceneY:()D
      43: aload_1
      44: invokevirtual #79                 // Method javafx/scene/input/DragEvent.getScreenX:()D
      47: aload_1
      48: invokevirtual #64                 // Method javafx/scene/input/DragEvent.getScreenY:()D
      51: aload_1
      52: invokevirtual #80                 // Method javafx/scene/input/DragEvent.getTransferMode:()Ljavafx/scene/input/TransferMode;
      55: aload_0
      56: getfield      #10                 // Field source:Ljavafx/event/EventTarget;
      59: aload_0
      60: getfield      #25                 // Field target:Ljavafx/event/EventTarget;
      63: aload_1
      64: invokevirtual #66                 // Method javafx/scene/input/DragEvent.getPickResult:()Ljavafx/scene/input/PickResult;
      67: invokespecial #81                 // Method javafx/scene/input/DragEvent."<init>":(Ljava/lang/Object;Ljavafx/event/EventTarget;Ljavafx/event/EventType;Ljavafx/scene/input/Dragboard;DDDDLjavafx/scene/input/TransferMode;Ljava/lang/Object;Ljava/lang/Object;Ljavafx/scene/input/PickResult;)V
      70: astore_1
      71: aload_0
      72: getfield      #10                 // Field source:Ljavafx/event/EventTarget;
      75: aload_1
      76: invokestatic  #32                 // Method javafx/event/Event.fireEvent:(Ljavafx/event/EventTarget;Ljavafx/event/Event;)V
      79: aload_0
      80: getfield      #15                 // Field this$0:Ljavafx/scene/Scene;
      83: invokestatic  #82                 // Method javafx/scene/Scene.access$6700:(Ljavafx/scene/Scene;)Ljavafx/scene/Scene$TargetWrapper;
      86: invokevirtual #83                 // Method javafx/scene/Scene$TargetWrapper.clear:()V
      89: aload_0
      90: aload_1
      91: aload_0
      92: getfield      #15                 // Field this$0:Ljavafx/scene/Scene;
      95: invokestatic  #82                 // Method javafx/scene/Scene.access$6700:(Ljavafx/scene/Scene;)Ljavafx/scene/Scene$TargetWrapper;
      98: invokespecial #84                 // Method handleExitEnter:(Ljavafx/scene/input/DragEvent;Ljavafx/scene/Scene$TargetWrapper;)V
     101: invokestatic  #17                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
     104: aload_0
     105: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
     108: invokevirtual #85                 // Method com/sun/javafx/tk/Toolkit.stopDrag:(Ljavafx/scene/input/Dragboard;)V
     111: return

  private javafx.scene.input.TransferMode processTargetEnterOver(javafx.scene.input.DragEvent);
    Code:
       0: aload_0
       1: getfield      #15                 // Field this$0:Ljavafx/scene/Scene;
       4: aload_0
       5: getfield      #15                 // Field this$0:Ljavafx/scene/Scene;
       8: invokestatic  #82                 // Method javafx/scene/Scene.access$6700:(Ljavafx/scene/Scene;)Ljavafx/scene/Scene$TargetWrapper;
      11: aload_1
      12: invokevirtual #63                 // Method javafx/scene/input/DragEvent.getSceneX:()D
      15: aload_1
      16: invokevirtual #78                 // Method javafx/scene/input/DragEvent.getSceneY:()D
      19: invokestatic  #86                 // Method javafx/scene/Scene.access$6800:(Ljavafx/scene/Scene;Ljavafx/scene/Scene$TargetWrapper;DD)V
      22: aload_0
      23: getfield      #15                 // Field this$0:Ljavafx/scene/Scene;
      26: invokestatic  #82                 // Method javafx/scene/Scene.access$6700:(Ljavafx/scene/Scene;)Ljavafx/scene/Scene$TargetWrapper;
      29: invokevirtual #87                 // Method javafx/scene/Scene$TargetWrapper.getEventTarget:()Ljavafx/event/EventTarget;
      32: astore_2
      33: aload_0
      34: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      37: ifnonnull     50
      40: aload_0
      41: aload_0
      42: aload_1
      43: iconst_0
      44: invokespecial #88                 // Method createDragboard:(Ljavafx/scene/input/DragEvent;Z)Ljavafx/scene/input/Dragboard;
      47: putfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      50: new           #74                 // class javafx/scene/input/DragEvent
      53: dup
      54: aload_1
      55: invokevirtual #75                 // Method javafx/scene/input/DragEvent.getSource:()Ljava/lang/Object;
      58: aload_2
      59: aload_1
      60: invokevirtual #89                 // Method javafx/scene/input/DragEvent.getEventType:()Ljavafx/event/EventType;
      63: aload_0
      64: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      67: aload_1
      68: invokevirtual #63                 // Method javafx/scene/input/DragEvent.getSceneX:()D
      71: aload_1
      72: invokevirtual #78                 // Method javafx/scene/input/DragEvent.getSceneY:()D
      75: aload_1
      76: invokevirtual #79                 // Method javafx/scene/input/DragEvent.getScreenX:()D
      79: aload_1
      80: invokevirtual #64                 // Method javafx/scene/input/DragEvent.getScreenY:()D
      83: aload_1
      84: invokevirtual #80                 // Method javafx/scene/input/DragEvent.getTransferMode:()Ljavafx/scene/input/TransferMode;
      87: aload_0
      88: getfield      #10                 // Field source:Ljavafx/event/EventTarget;
      91: aload_0
      92: getfield      #24                 // Field potentialTarget:Ljavafx/event/EventTarget;
      95: aload_1
      96: invokevirtual #66                 // Method javafx/scene/input/DragEvent.getPickResult:()Ljavafx/scene/input/PickResult;
      99: invokespecial #81                 // Method javafx/scene/input/DragEvent."<init>":(Ljava/lang/Object;Ljavafx/event/EventTarget;Ljavafx/event/EventType;Ljavafx/scene/input/Dragboard;DDDDLjavafx/scene/input/TransferMode;Ljava/lang/Object;Ljava/lang/Object;Ljavafx/scene/input/PickResult;)V
     102: astore_1
     103: aload_0
     104: aload_1
     105: aload_0
     106: getfield      #15                 // Field this$0:Ljavafx/scene/Scene;
     109: invokestatic  #82                 // Method javafx/scene/Scene.access$6700:(Ljavafx/scene/Scene;)Ljavafx/scene/Scene$TargetWrapper;
     112: invokespecial #84                 // Method handleExitEnter:(Ljavafx/scene/input/DragEvent;Ljavafx/scene/Scene$TargetWrapper;)V
     115: new           #74                 // class javafx/scene/input/DragEvent
     118: dup
     119: aload_1
     120: invokevirtual #75                 // Method javafx/scene/input/DragEvent.getSource:()Ljava/lang/Object;
     123: aload_2
     124: getstatic     #90                 // Field javafx/scene/input/DragEvent.DRAG_OVER:Ljavafx/event/EventType;
     127: aload_1
     128: invokevirtual #77                 // Method javafx/scene/input/DragEvent.getDragboard:()Ljavafx/scene/input/Dragboard;
     131: aload_1
     132: invokevirtual #63                 // Method javafx/scene/input/DragEvent.getSceneX:()D
     135: aload_1
     136: invokevirtual #78                 // Method javafx/scene/input/DragEvent.getSceneY:()D
     139: aload_1
     140: invokevirtual #79                 // Method javafx/scene/input/DragEvent.getScreenX:()D
     143: aload_1
     144: invokevirtual #64                 // Method javafx/scene/input/DragEvent.getScreenY:()D
     147: aload_1
     148: invokevirtual #80                 // Method javafx/scene/input/DragEvent.getTransferMode:()Ljavafx/scene/input/TransferMode;
     151: aload_0
     152: getfield      #10                 // Field source:Ljavafx/event/EventTarget;
     155: aload_0
     156: getfield      #24                 // Field potentialTarget:Ljavafx/event/EventTarget;
     159: aload_1
     160: invokevirtual #66                 // Method javafx/scene/input/DragEvent.getPickResult:()Ljavafx/scene/input/PickResult;
     163: invokespecial #81                 // Method javafx/scene/input/DragEvent."<init>":(Ljava/lang/Object;Ljavafx/event/EventTarget;Ljavafx/event/EventType;Ljavafx/scene/input/Dragboard;DDDDLjavafx/scene/input/TransferMode;Ljava/lang/Object;Ljava/lang/Object;Ljavafx/scene/input/PickResult;)V
     166: astore_1
     167: aload_0
     168: aload_2
     169: aload_1
     170: invokespecial #56                 // Method fireEvent:(Ljavafx/event/EventTarget;Ljavafx/event/Event;)V
     173: aload_1
     174: invokevirtual #91                 // Method javafx/scene/input/DragEvent.getAcceptingObject:()Ljava/lang/Object;
     177: astore_3
     178: aload_0
     179: aload_3
     180: instanceof    #92                 // class javafx/event/EventTarget
     183: ifeq          193
     186: aload_3
     187: checkcast     #92                 // class javafx/event/EventTarget
     190: goto          194
     193: aconst_null
     194: putfield      #24                 // Field potentialTarget:Ljavafx/event/EventTarget;
     197: aload_0
     198: aload_1
     199: invokevirtual #93                 // Method javafx/scene/input/DragEvent.getAcceptedTransferMode:()Ljavafx/scene/input/TransferMode;
     202: putfield      #23                 // Field acceptedTransferMode:Ljavafx/scene/input/TransferMode;
     205: aload_0
     206: getfield      #23                 // Field acceptedTransferMode:Ljavafx/scene/input/TransferMode;
     209: areturn

  private void processTargetActionChanged(javafx.scene.input.DragEvent);
    Code:
       0: return

  private void processTargetExit(javafx.scene.input.DragEvent);
    Code:
       0: aload_0
       1: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
       4: ifnonnull     17
       7: new           #94                 // class java/lang/NullPointerException
      10: dup
      11: ldc           #95                 // String dragboard is null in processTargetExit()
      13: invokespecial #96                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #29                 // Field currentTargets:Ljava/util/List;
      21: invokeinterface #97,  1           // InterfaceMethod java/util/List.size:()I
      26: ifle          56
      29: aload_0
      30: aconst_null
      31: putfield      #24                 // Field potentialTarget:Ljavafx/event/EventTarget;
      34: aload_0
      35: getfield      #15                 // Field this$0:Ljavafx/scene/Scene;
      38: invokestatic  #82                 // Method javafx/scene/Scene.access$6700:(Ljavafx/scene/Scene;)Ljavafx/scene/Scene$TargetWrapper;
      41: invokevirtual #83                 // Method javafx/scene/Scene$TargetWrapper.clear:()V
      44: aload_0
      45: aload_1
      46: aload_0
      47: getfield      #15                 // Field this$0:Ljavafx/scene/Scene;
      50: invokestatic  #82                 // Method javafx/scene/Scene.access$6700:(Ljavafx/scene/Scene;)Ljavafx/scene/Scene$TargetWrapper;
      53: invokespecial #84                 // Method handleExitEnter:(Ljavafx/scene/input/DragEvent;Ljavafx/scene/Scene$TargetWrapper;)V
      56: return

  private javafx.scene.input.TransferMode processTargetDrop(javafx.scene.input.DragEvent);
    Code:
       0: aload_0
       1: getfield      #15                 // Field this$0:Ljavafx/scene/Scene;
       4: aload_0
       5: getfield      #15                 // Field this$0:Ljavafx/scene/Scene;
       8: invokestatic  #82                 // Method javafx/scene/Scene.access$6700:(Ljavafx/scene/Scene;)Ljavafx/scene/Scene$TargetWrapper;
      11: aload_1
      12: invokevirtual #63                 // Method javafx/scene/input/DragEvent.getSceneX:()D
      15: aload_1
      16: invokevirtual #78                 // Method javafx/scene/input/DragEvent.getSceneY:()D
      19: invokestatic  #86                 // Method javafx/scene/Scene.access$6800:(Ljavafx/scene/Scene;Ljavafx/scene/Scene$TargetWrapper;DD)V
      22: aload_0
      23: getfield      #15                 // Field this$0:Ljavafx/scene/Scene;
      26: invokestatic  #82                 // Method javafx/scene/Scene.access$6700:(Ljavafx/scene/Scene;)Ljavafx/scene/Scene$TargetWrapper;
      29: invokevirtual #87                 // Method javafx/scene/Scene$TargetWrapper.getEventTarget:()Ljavafx/event/EventTarget;
      32: astore_2
      33: new           #74                 // class javafx/scene/input/DragEvent
      36: dup
      37: aload_1
      38: invokevirtual #75                 // Method javafx/scene/input/DragEvent.getSource:()Ljava/lang/Object;
      41: aload_2
      42: getstatic     #98                 // Field javafx/scene/input/DragEvent.DRAG_DROPPED:Ljavafx/event/EventType;
      45: aload_1
      46: invokevirtual #77                 // Method javafx/scene/input/DragEvent.getDragboard:()Ljavafx/scene/input/Dragboard;
      49: aload_1
      50: invokevirtual #63                 // Method javafx/scene/input/DragEvent.getSceneX:()D
      53: aload_1
      54: invokevirtual #78                 // Method javafx/scene/input/DragEvent.getSceneY:()D
      57: aload_1
      58: invokevirtual #79                 // Method javafx/scene/input/DragEvent.getScreenX:()D
      61: aload_1
      62: invokevirtual #64                 // Method javafx/scene/input/DragEvent.getScreenY:()D
      65: aload_0
      66: getfield      #23                 // Field acceptedTransferMode:Ljavafx/scene/input/TransferMode;
      69: aload_0
      70: getfield      #10                 // Field source:Ljavafx/event/EventTarget;
      73: aload_0
      74: getfield      #24                 // Field potentialTarget:Ljavafx/event/EventTarget;
      77: aload_1
      78: invokevirtual #66                 // Method javafx/scene/input/DragEvent.getPickResult:()Ljavafx/scene/input/PickResult;
      81: invokespecial #81                 // Method javafx/scene/input/DragEvent."<init>":(Ljava/lang/Object;Ljavafx/event/EventTarget;Ljavafx/event/EventType;Ljavafx/scene/input/Dragboard;DDDDLjavafx/scene/input/TransferMode;Ljava/lang/Object;Ljava/lang/Object;Ljavafx/scene/input/PickResult;)V
      84: astore_1
      85: aload_0
      86: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      89: ifnonnull     102
      92: new           #94                 // class java/lang/NullPointerException
      95: dup
      96: ldc           #99                 // String dragboard is null in processTargetDrop()
      98: invokespecial #96                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     101: athrow
     102: aload_0
     103: aload_1
     104: aload_0
     105: getfield      #15                 // Field this$0:Ljavafx/scene/Scene;
     108: invokestatic  #82                 // Method javafx/scene/Scene.access$6700:(Ljavafx/scene/Scene;)Ljavafx/scene/Scene$TargetWrapper;
     111: invokespecial #84                 // Method handleExitEnter:(Ljavafx/scene/input/DragEvent;Ljavafx/scene/Scene$TargetWrapper;)V
     114: aload_0
     115: aload_2
     116: aload_1
     117: invokespecial #56                 // Method fireEvent:(Ljavafx/event/EventTarget;Ljavafx/event/Event;)V
     120: aload_1
     121: invokevirtual #91                 // Method javafx/scene/input/DragEvent.getAcceptingObject:()Ljava/lang/Object;
     124: astore_3
     125: aload_0
     126: aload_3
     127: instanceof    #92                 // class javafx/event/EventTarget
     130: ifeq          140
     133: aload_3
     134: checkcast     #92                 // class javafx/event/EventTarget
     137: goto          141
     140: aconst_null
     141: putfield      #24                 // Field potentialTarget:Ljavafx/event/EventTarget;
     144: aload_0
     145: aload_0
     146: getfield      #24                 // Field potentialTarget:Ljavafx/event/EventTarget;
     149: putfield      #25                 // Field target:Ljavafx/event/EventTarget;
     152: aload_1
     153: invokevirtual #100                // Method javafx/scene/input/DragEvent.isDropCompleted:()Z
     156: ifeq          166
     159: aload_1
     160: invokevirtual #93                 // Method javafx/scene/input/DragEvent.getAcceptedTransferMode:()Ljavafx/scene/input/TransferMode;
     163: goto          167
     166: aconst_null
     167: astore        4
     169: aload_0
     170: getfield      #15                 // Field this$0:Ljavafx/scene/Scene;
     173: invokestatic  #82                 // Method javafx/scene/Scene.access$6700:(Ljavafx/scene/Scene;)Ljavafx/scene/Scene$TargetWrapper;
     176: invokevirtual #83                 // Method javafx/scene/Scene$TargetWrapper.clear:()V
     179: aload_0
     180: aload_1
     181: aload_0
     182: getfield      #15                 // Field this$0:Ljavafx/scene/Scene;
     185: invokestatic  #82                 // Method javafx/scene/Scene.access$6700:(Ljavafx/scene/Scene;)Ljavafx/scene/Scene$TargetWrapper;
     188: invokespecial #84                 // Method handleExitEnter:(Ljavafx/scene/input/DragEvent;Ljavafx/scene/Scene$TargetWrapper;)V
     191: aload         4
     193: areturn

  private void handleExitEnter(javafx.scene.input.DragEvent, javafx.scene.Scene$TargetWrapper);
    Code:
       0: aload_0
       1: getfield      #29                 // Field currentTargets:Ljava/util/List;
       4: invokeinterface #97,  1           // InterfaceMethod java/util/List.size:()I
       9: ifle          28
      12: aload_0
      13: getfield      #29                 // Field currentTargets:Ljava/util/List;
      16: iconst_0
      17: invokeinterface #101,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      22: checkcast     #92                 // class javafx/event/EventTarget
      25: goto          29
      28: aconst_null
      29: astore_3
      30: aload_2
      31: invokevirtual #87                 // Method javafx/scene/Scene$TargetWrapper.getEventTarget:()Ljavafx/event/EventTarget;
      34: aload_3
      35: if_acmpeq     300
      38: aload_2
      39: aload_0
      40: getfield      #30                 // Field newTargets:Ljava/util/List;
      43: invokevirtual #102                // Method javafx/scene/Scene$TargetWrapper.fillHierarchy:(Ljava/util/List;)V
      46: aload_0
      47: getfield      #29                 // Field currentTargets:Ljava/util/List;
      50: invokeinterface #97,  1           // InterfaceMethod java/util/List.size:()I
      55: iconst_1
      56: isub
      57: istore        4
      59: aload_0
      60: getfield      #30                 // Field newTargets:Ljava/util/List;
      63: invokeinterface #97,  1           // InterfaceMethod java/util/List.size:()I
      68: iconst_1
      69: isub
      70: istore        5
      72: iload         4
      74: iflt          116
      77: iload         5
      79: iflt          116
      82: aload_0
      83: getfield      #29                 // Field currentTargets:Ljava/util/List;
      86: iload         4
      88: invokeinterface #101,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      93: aload_0
      94: getfield      #30                 // Field newTargets:Ljava/util/List;
      97: iload         5
      99: invokeinterface #101,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     104: if_acmpne     116
     107: iinc          4, -1
     110: iinc          5, -1
     113: goto          72
     116: iload         4
     118: iflt          185
     121: aload_0
     122: getfield      #29                 // Field currentTargets:Ljava/util/List;
     125: iload         4
     127: invokeinterface #101,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     132: checkcast     #92                 // class javafx/event/EventTarget
     135: astore        6
     137: aload_0
     138: getfield      #24                 // Field potentialTarget:Ljavafx/event/EventTarget;
     141: aload         6
     143: if_acmpne     151
     146: aload_0
     147: aconst_null
     148: putfield      #24                 // Field potentialTarget:Ljavafx/event/EventTarget;
     151: aload_1
     152: aload_1
     153: invokevirtual #75                 // Method javafx/scene/input/DragEvent.getSource:()Ljava/lang/Object;
     156: aload         6
     158: aload_0
     159: getfield      #10                 // Field source:Ljavafx/event/EventTarget;
     162: aload_0
     163: getfield      #24                 // Field potentialTarget:Ljavafx/event/EventTarget;
     166: getstatic     #103                // Field javafx/scene/input/DragEvent.DRAG_EXITED_TARGET:Ljavafx/event/EventType;
     169: invokevirtual #104                // Method javafx/scene/input/DragEvent.copyFor:(Ljava/lang/Object;Ljavafx/event/EventTarget;Ljava/lang/Object;Ljava/lang/Object;Ljavafx/event/EventType;)Ljavafx/scene/input/DragEvent;
     172: astore_1
     173: aload         6
     175: aload_1
     176: invokestatic  #32                 // Method javafx/event/Event.fireEvent:(Ljavafx/event/EventTarget;Ljavafx/event/Event;)V
     179: iinc          4, -1
     182: goto          116
     185: aload_0
     186: aconst_null
     187: putfield      #24                 // Field potentialTarget:Ljavafx/event/EventTarget;
     190: iload         5
     192: iflt          268
     195: aload_0
     196: getfield      #30                 // Field newTargets:Ljava/util/List;
     199: iload         5
     201: invokeinterface #101,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     206: checkcast     #92                 // class javafx/event/EventTarget
     209: astore        6
     211: aload_1
     212: aload_1
     213: invokevirtual #75                 // Method javafx/scene/input/DragEvent.getSource:()Ljava/lang/Object;
     216: aload         6
     218: aload_0
     219: getfield      #10                 // Field source:Ljavafx/event/EventTarget;
     222: aload_0
     223: getfield      #24                 // Field potentialTarget:Ljavafx/event/EventTarget;
     226: getstatic     #105                // Field javafx/scene/input/DragEvent.DRAG_ENTERED_TARGET:Ljavafx/event/EventType;
     229: invokevirtual #104                // Method javafx/scene/input/DragEvent.copyFor:(Ljava/lang/Object;Ljavafx/event/EventTarget;Ljava/lang/Object;Ljava/lang/Object;Ljavafx/event/EventType;)Ljavafx/scene/input/DragEvent;
     232: astore_1
     233: aload_1
     234: invokevirtual #91                 // Method javafx/scene/input/DragEvent.getAcceptingObject:()Ljava/lang/Object;
     237: astore        7
     239: aload         7
     241: instanceof    #92                 // class javafx/event/EventTarget
     244: ifeq          256
     247: aload_0
     248: aload         7
     250: checkcast     #92                 // class javafx/event/EventTarget
     253: putfield      #24                 // Field potentialTarget:Ljavafx/event/EventTarget;
     256: aload         6
     258: aload_1
     259: invokestatic  #32                 // Method javafx/event/Event.fireEvent:(Ljavafx/event/EventTarget;Ljavafx/event/Event;)V
     262: iinc          5, -1
     265: goto          190
     268: aload_0
     269: getfield      #29                 // Field currentTargets:Ljava/util/List;
     272: invokeinterface #106,  1          // InterfaceMethod java/util/List.clear:()V
     277: aload_0
     278: getfield      #29                 // Field currentTargets:Ljava/util/List;
     281: aload_0
     282: getfield      #30                 // Field newTargets:Ljava/util/List;
     285: invokeinterface #107,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     290: pop
     291: aload_0
     292: getfield      #30                 // Field newTargets:Ljava/util/List;
     295: invokeinterface #106,  1          // InterfaceMethod java/util/List.clear:()V
     300: return

  private boolean processKey(javafx.scene.input.KeyEvent);
    Code:
       0: aload_1
       1: invokevirtual #108                // Method javafx/scene/input/KeyEvent.getEventType:()Ljavafx/event/EventType;
       4: getstatic     #109                // Field javafx/scene/input/KeyEvent.KEY_PRESSED:Ljavafx/event/EventType;
       7: if_acmpne     93
      10: aload_1
      11: invokevirtual #110                // Method javafx/scene/input/KeyEvent.getCode:()Ljavafx/scene/input/KeyCode;
      14: getstatic     #111                // Field javafx/scene/input/KeyCode.ESCAPE:Ljavafx/scene/input/KeyCode;
      17: if_acmpne     93
      20: new           #74                 // class javafx/scene/input/DragEvent
      23: dup
      24: aload_0
      25: getfield      #10                 // Field source:Ljavafx/event/EventTarget;
      28: aload_0
      29: getfield      #10                 // Field source:Ljavafx/event/EventTarget;
      32: getstatic     #76                 // Field javafx/scene/input/DragEvent.DRAG_DONE:Ljavafx/event/EventType;
      35: aload_0
      36: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      39: dconst_0
      40: dconst_0
      41: dconst_0
      42: dconst_0
      43: aconst_null
      44: aload_0
      45: getfield      #10                 // Field source:Ljavafx/event/EventTarget;
      48: aconst_null
      49: aconst_null
      50: invokespecial #81                 // Method javafx/scene/input/DragEvent."<init>":(Ljava/lang/Object;Ljavafx/event/EventTarget;Ljavafx/event/EventType;Ljavafx/scene/input/Dragboard;DDDDLjavafx/scene/input/TransferMode;Ljava/lang/Object;Ljava/lang/Object;Ljavafx/scene/input/PickResult;)V
      53: astore_2
      54: aload_0
      55: getfield      #10                 // Field source:Ljavafx/event/EventTarget;
      58: ifnull        69
      61: aload_0
      62: getfield      #10                 // Field source:Ljavafx/event/EventTarget;
      65: aload_2
      66: invokestatic  #32                 // Method javafx/event/Event.fireEvent:(Ljavafx/event/EventTarget;Ljavafx/event/Event;)V
      69: aload_0
      70: getfield      #15                 // Field this$0:Ljavafx/scene/Scene;
      73: invokestatic  #82                 // Method javafx/scene/Scene.access$6700:(Ljavafx/scene/Scene;)Ljavafx/scene/Scene$TargetWrapper;
      76: invokevirtual #83                 // Method javafx/scene/Scene$TargetWrapper.clear:()V
      79: aload_0
      80: aload_2
      81: aload_0
      82: getfield      #15                 // Field this$0:Ljavafx/scene/Scene;
      85: invokestatic  #82                 // Method javafx/scene/Scene.access$6700:(Ljavafx/scene/Scene;)Ljavafx/scene/Scene$TargetWrapper;
      88: invokespecial #84                 // Method handleExitEnter:(Ljavafx/scene/input/DragEvent;Ljavafx/scene/Scene$TargetWrapper;)V
      91: iconst_0
      92: ireturn
      93: iconst_1
      94: ireturn

  private javafx.scene.input.Dragboard startDrag(javafx.event.EventTarget, java.util.Set<javafx.scene.input.TransferMode>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field dragDetected:Ljavafx/scene/Scene$DragDetectedState;
       4: getstatic     #33                 // Field javafx/scene/Scene$DragDetectedState.PROCESSING:Ljavafx/scene/Scene$DragDetectedState;
       7: if_acmpeq     20
      10: new           #112                // class java/lang/IllegalStateException
      13: dup
      14: ldc           #113                // String Cannot start drag and drop outside of DRAG_DETECTED event handler
      16: invokespecial #114                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_2
      21: invokeinterface #70,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      26: ifeq          37
      29: aload_0
      30: aconst_null
      31: putfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      34: goto          54
      37: aload_0
      38: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      41: ifnonnull     54
      44: aload_0
      45: aload_0
      46: aconst_null
      47: iconst_1
      48: invokespecial #88                 // Method createDragboard:(Ljavafx/scene/input/DragEvent;Z)Ljavafx/scene/input/Dragboard;
      51: putfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      54: aload_0
      55: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      58: iconst_0
      59: invokestatic  #57                 // Method com/sun/javafx/scene/input/DragboardHelper.setDataAccessRestriction:(Ljavafx/scene/input/Dragboard;Z)V
      62: aload_0
      63: aload_1
      64: putfield      #10                 // Field source:Ljavafx/event/EventTarget;
      67: aload_0
      68: aload_1
      69: putfield      #24                 // Field potentialTarget:Ljavafx/event/EventTarget;
      72: aload_0
      73: aload_2
      74: putfield      #22                 // Field sourceTransferModes:Ljava/util/Set;
      77: aload_0
      78: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
      81: areturn

  private void startFullPDR(javafx.event.EventTarget);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field fullPDRSource:Ljavafx/event/EventTarget;
       5: return

  private javafx.scene.input.Dragboard createDragboard(javafx.scene.input.DragEvent, boolean);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_1
       3: ifnull        17
       6: aload_1
       7: invokevirtual #77                 // Method javafx/scene/input/DragEvent.getDragboard:()Ljavafx/scene/input/Dragboard;
      10: astore_3
      11: aload_3
      12: ifnull        17
      15: aload_3
      16: areturn
      17: aload_0
      18: getfield      #15                 // Field this$0:Ljavafx/scene/Scene;
      21: invokestatic  #36                 // Method javafx/scene/Scene.access$2600:(Ljavafx/scene/Scene;)Lcom/sun/javafx/tk/TKScene;
      24: iload_2
      25: invokeinterface #115,  2          // InterfaceMethod com/sun/javafx/tk/TKScene.createDragboard:(Z)Lcom/sun/javafx/tk/TKClipboard;
      30: astore        4
      32: aload         4
      34: invokestatic  #116                // Method com/sun/javafx/scene/input/DragboardHelper.createDragboard:(Lcom/sun/javafx/tk/TKClipboard;)Ljavafx/scene/input/Dragboard;
      37: areturn

  static boolean access$1400(javafx.scene.Scene$DnDGesture, javafx.scene.input.KeyEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method processKey:(Ljavafx/scene/input/KeyEvent;)Z
       5: ireturn

  static javafx.scene.input.Dragboard access$6102(javafx.scene.Scene$DnDGesture, javafx.scene.input.Dragboard);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
       6: areturn

  static javafx.scene.input.Dragboard access$6100(javafx.scene.Scene$DnDGesture);
    Code:
       0: aload_0
       1: getfield      #13                 // Field dragboard:Ljavafx/scene/input/Dragboard;
       4: areturn

  static javafx.scene.input.TransferMode access$6200(javafx.scene.Scene$DnDGesture, javafx.scene.input.DragEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method processTargetEnterOver:(Ljavafx/scene/input/DragEvent;)Ljavafx/scene/input/TransferMode;
       5: areturn

  static void access$6300(javafx.scene.Scene$DnDGesture, javafx.scene.input.DragEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method processTargetExit:(Ljavafx/scene/input/DragEvent;)V
       5: return

  static javafx.event.EventTarget access$6400(javafx.scene.Scene$DnDGesture);
    Code:
       0: aload_0
       1: getfield      #10                 // Field source:Ljavafx/event/EventTarget;
       4: areturn

  static javafx.scene.input.TransferMode access$6500(javafx.scene.Scene$DnDGesture, javafx.scene.input.DragEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method processTargetDrop:(Ljavafx/scene/input/DragEvent;)Ljavafx/scene/input/TransferMode;
       5: areturn

  static boolean access$6600(javafx.scene.Scene$DnDGesture, javafx.scene.input.DragEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method processRecognized:(Ljavafx/scene/input/DragEvent;)Z
       5: ireturn

  static void access$6900(javafx.scene.Scene$DnDGesture, javafx.scene.input.DragEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method processDropEnd:(Ljavafx/scene/input/DragEvent;)V
       5: return

  static void access$8100(javafx.scene.Scene$DnDGesture, javafx.scene.input.MouseEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method processDragDetection:(Ljavafx/scene/input/MouseEvent;)V
       5: return

  static boolean access$8300(javafx.scene.Scene$DnDGesture, javafx.scene.input.MouseEvent, javafx.event.EventTarget);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #5                  // Method process:(Ljavafx/scene/input/MouseEvent;Ljavafx/event/EventTarget;)Z
       6: ireturn

  static javafx.scene.Scene$DragDetectedState access$8500(javafx.scene.Scene$DnDGesture);
    Code:
       0: aload_0
       1: getfield      #4                  // Field dragDetected:Ljavafx/scene/Scene$DragDetectedState;
       4: areturn

  static javafx.scene.input.Dragboard access$8600(javafx.scene.Scene$DnDGesture, javafx.event.EventTarget, java.util.Set);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #3                  // Method startDrag:(Ljavafx/event/EventTarget;Ljava/util/Set;)Ljavafx/scene/input/Dragboard;
       6: areturn

  static void access$8700(javafx.scene.Scene$DnDGesture, javafx.event.EventTarget);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method startFullPDR:(Ljavafx/event/EventTarget;)V
       5: return
}
