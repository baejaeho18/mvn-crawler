Compiled from "Node.java"
final class javafx.scene.Node$NodeTransformation {
  private javafx.beans.property.DoubleProperty translateX;

  private javafx.beans.property.DoubleProperty translateY;

  private javafx.beans.property.DoubleProperty translateZ;

  private javafx.beans.property.DoubleProperty scaleX;

  private javafx.beans.property.DoubleProperty scaleY;

  private javafx.beans.property.DoubleProperty scaleZ;

  private javafx.beans.property.DoubleProperty rotate;

  private javafx.beans.property.ObjectProperty<javafx.geometry.Point3D> rotationAxis;

  private javafx.collections.ObservableList<javafx.scene.transform.Transform> transforms;

  private javafx.scene.Node$LazyTransformProperty localToParentTransform;

  private javafx.scene.Node$LazyTransformProperty localToSceneTransform;

  private int listenerReasons;

  private javafx.beans.InvalidationListener localToSceneInvLstnr;

  final javafx.scene.Node this$0;

  private javafx.scene.Node$NodeTransformation(javafx.scene.Node);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field this$0:Ljavafx/scene/Node;
       5: aload_0
       6: invokespecial #14                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iconst_0
      11: putfield      #12                 // Field listenerReasons:I
      14: return

  private javafx.beans.InvalidationListener getLocalToSceneInvalidationListener();
    Code:
       0: aload_0
       1: getfield      #15                 // Field localToSceneInvLstnr:Ljavafx/beans/InvalidationListener;
       4: ifnonnull     17
       7: aload_0
       8: aload_0
       9: invokedynamic #16,  0             // InvokeDynamic #0:invalidated:(Ljavafx/scene/Node$NodeTransformation;)Ljavafx/beans/InvalidationListener;
      14: putfield      #15                 // Field localToSceneInvLstnr:Ljavafx/beans/InvalidationListener;
      17: aload_0
      18: getfield      #15                 // Field localToSceneInvLstnr:Ljavafx/beans/InvalidationListener;
      21: areturn

  public void incListenerReasons();
    Code:
       0: aload_0
       1: getfield      #12                 // Field listenerReasons:I
       4: ifne          30
       7: aload_0
       8: getfield      #13                 // Field this$0:Ljavafx/scene/Node;
      11: invokevirtual #17                 // Method javafx/scene/Node.getParent:()Ljavafx/scene/Parent;
      14: astore_1
      15: aload_1
      16: ifnull        30
      19: aload_1
      20: invokevirtual #18                 // Method javafx/scene/Node.localToSceneTransformProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
      23: aload_0
      24: invokespecial #11                 // Method getLocalToSceneInvalidationListener:()Ljavafx/beans/InvalidationListener;
      27: invokevirtual #19                 // Method javafx/beans/property/ReadOnlyObjectProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
      30: aload_0
      31: dup
      32: getfield      #12                 // Field listenerReasons:I
      35: iconst_1
      36: iadd
      37: putfield      #12                 // Field listenerReasons:I
      40: return

  public void decListenerReasons();
    Code:
       0: aload_0
       1: dup
       2: getfield      #12                 // Field listenerReasons:I
       5: iconst_1
       6: isub
       7: putfield      #12                 // Field listenerReasons:I
      10: aload_0
      11: getfield      #12                 // Field listenerReasons:I
      14: ifne          54
      17: aload_0
      18: getfield      #13                 // Field this$0:Ljavafx/scene/Node;
      21: invokevirtual #17                 // Method javafx/scene/Node.getParent:()Ljavafx/scene/Parent;
      24: astore_1
      25: aload_1
      26: ifnull        40
      29: aload_1
      30: invokevirtual #18                 // Method javafx/scene/Node.localToSceneTransformProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
      33: aload_0
      34: invokespecial #11                 // Method getLocalToSceneInvalidationListener:()Ljavafx/beans/InvalidationListener;
      37: invokevirtual #20                 // Method javafx/beans/property/ReadOnlyObjectProperty.removeListener:(Ljavafx/beans/InvalidationListener;)V
      40: aload_0
      41: getfield      #9                  // Field localToSceneTransform:Ljavafx/scene/Node$LazyTransformProperty;
      44: ifnull        54
      47: aload_0
      48: getfield      #9                  // Field localToSceneTransform:Ljavafx/scene/Node$LazyTransformProperty;
      51: invokevirtual #21                 // Method javafx/scene/Node$LazyTransformProperty.validityUnknown:()V
      54: return

  public final javafx.scene.transform.Transform getLocalToParentTransform();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method localToParentTransformProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       4: invokevirtual #23                 // Method javafx/beans/property/ReadOnlyObjectProperty.get:()Ljava/lang/Object;
       7: checkcast     #24                 // class javafx/scene/transform/Transform
      10: areturn

  public final javafx.beans.property.ReadOnlyObjectProperty<javafx.scene.transform.Transform> localToParentTransformProperty();
    Code:
       0: aload_0
       1: getfield      #25                 // Field localToParentTransform:Ljavafx/scene/Node$LazyTransformProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #26                 // class javafx/scene/Node$NodeTransformation$1
      11: dup
      12: aload_0
      13: invokespecial #27                 // Method javafx/scene/Node$NodeTransformation$1."<init>":(Ljavafx/scene/Node$NodeTransformation;)V
      16: putfield      #25                 // Field localToParentTransform:Ljavafx/scene/Node$LazyTransformProperty;
      19: aload_0
      20: getfield      #25                 // Field localToParentTransform:Ljavafx/scene/Node$LazyTransformProperty;
      23: areturn

  public void invalidateLocalToParentTransform();
    Code:
       0: aload_0
       1: getfield      #25                 // Field localToParentTransform:Ljavafx/scene/Node$LazyTransformProperty;
       4: ifnull        14
       7: aload_0
       8: getfield      #25                 // Field localToParentTransform:Ljavafx/scene/Node$LazyTransformProperty;
      11: invokevirtual #28                 // Method javafx/scene/Node$LazyTransformProperty.invalidate:()V
      14: return

  public final javafx.scene.transform.Transform getLocalToSceneTransform();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method localToSceneTransformProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       4: invokevirtual #23                 // Method javafx/beans/property/ReadOnlyObjectProperty.get:()Ljava/lang/Object;
       7: checkcast     #24                 // class javafx/scene/transform/Transform
      10: areturn

  public final javafx.beans.property.ReadOnlyObjectProperty<javafx.scene.transform.Transform> localToSceneTransformProperty();
    Code:
       0: aload_0
       1: getfield      #9                  // Field localToSceneTransform:Ljavafx/scene/Node$LazyTransformProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #30                 // class javafx/scene/Node$NodeTransformation$LocalToSceneTransformProperty
      11: dup
      12: aload_0
      13: invokespecial #31                 // Method javafx/scene/Node$NodeTransformation$LocalToSceneTransformProperty."<init>":(Ljavafx/scene/Node$NodeTransformation;)V
      16: putfield      #9                  // Field localToSceneTransform:Ljavafx/scene/Node$LazyTransformProperty;
      19: aload_0
      20: getfield      #9                  // Field localToSceneTransform:Ljavafx/scene/Node$LazyTransformProperty;
      23: areturn

  public void invalidateLocalToSceneTransform();
    Code:
       0: aload_0
       1: getfield      #9                  // Field localToSceneTransform:Ljavafx/scene/Node$LazyTransformProperty;
       4: ifnull        14
       7: aload_0
       8: getfield      #9                  // Field localToSceneTransform:Ljavafx/scene/Node$LazyTransformProperty;
      11: invokevirtual #28                 // Method javafx/scene/Node$LazyTransformProperty.invalidate:()V
      14: return

  public double getTranslateX();
    Code:
       0: aload_0
       1: getfield      #4                  // Field translateX:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     11
       7: dconst_0
       8: goto          18
      11: aload_0
      12: getfield      #4                  // Field translateX:Ljavafx/beans/property/DoubleProperty;
      15: invokevirtual #32                 // Method javafx/beans/property/DoubleProperty.get:()D
      18: dreturn

  public final javafx.beans.property.DoubleProperty translateXProperty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field translateX:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #33                 // class javafx/scene/Node$NodeTransformation$2
      11: dup
      12: aload_0
      13: dconst_0
      14: invokespecial #34                 // Method javafx/scene/Node$NodeTransformation$2."<init>":(Ljavafx/scene/Node$NodeTransformation;D)V
      17: putfield      #4                  // Field translateX:Ljavafx/beans/property/DoubleProperty;
      20: aload_0
      21: getfield      #4                  // Field translateX:Ljavafx/beans/property/DoubleProperty;
      24: areturn

  public double getTranslateY();
    Code:
       0: aload_0
       1: getfield      #3                  // Field translateY:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     11
       7: dconst_0
       8: goto          18
      11: aload_0
      12: getfield      #3                  // Field translateY:Ljavafx/beans/property/DoubleProperty;
      15: invokevirtual #32                 // Method javafx/beans/property/DoubleProperty.get:()D
      18: dreturn

  public final javafx.beans.property.DoubleProperty translateYProperty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field translateY:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #35                 // class javafx/scene/Node$NodeTransformation$3
      11: dup
      12: aload_0
      13: dconst_0
      14: invokespecial #36                 // Method javafx/scene/Node$NodeTransformation$3."<init>":(Ljavafx/scene/Node$NodeTransformation;D)V
      17: putfield      #3                  // Field translateY:Ljavafx/beans/property/DoubleProperty;
      20: aload_0
      21: getfield      #3                  // Field translateY:Ljavafx/beans/property/DoubleProperty;
      24: areturn

  public double getTranslateZ();
    Code:
       0: aload_0
       1: getfield      #2                  // Field translateZ:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     11
       7: dconst_0
       8: goto          18
      11: aload_0
      12: getfield      #2                  // Field translateZ:Ljavafx/beans/property/DoubleProperty;
      15: invokevirtual #32                 // Method javafx/beans/property/DoubleProperty.get:()D
      18: dreturn

  public final javafx.beans.property.DoubleProperty translateZProperty();
    Code:
       0: aload_0
       1: getfield      #2                  // Field translateZ:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #37                 // class javafx/scene/Node$NodeTransformation$4
      11: dup
      12: aload_0
      13: dconst_0
      14: invokespecial #38                 // Method javafx/scene/Node$NodeTransformation$4."<init>":(Ljavafx/scene/Node$NodeTransformation;D)V
      17: putfield      #2                  // Field translateZ:Ljavafx/beans/property/DoubleProperty;
      20: aload_0
      21: getfield      #2                  // Field translateZ:Ljavafx/beans/property/DoubleProperty;
      24: areturn

  public double getScaleX();
    Code:
       0: aload_0
       1: getfield      #7                  // Field scaleX:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     11
       7: dconst_1
       8: goto          18
      11: aload_0
      12: getfield      #7                  // Field scaleX:Ljavafx/beans/property/DoubleProperty;
      15: invokevirtual #32                 // Method javafx/beans/property/DoubleProperty.get:()D
      18: dreturn

  public final javafx.beans.property.DoubleProperty scaleXProperty();
    Code:
       0: aload_0
       1: getfield      #7                  // Field scaleX:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #39                 // class javafx/scene/Node$NodeTransformation$5
      11: dup
      12: aload_0
      13: dconst_1
      14: invokespecial #40                 // Method javafx/scene/Node$NodeTransformation$5."<init>":(Ljavafx/scene/Node$NodeTransformation;D)V
      17: putfield      #7                  // Field scaleX:Ljavafx/beans/property/DoubleProperty;
      20: aload_0
      21: getfield      #7                  // Field scaleX:Ljavafx/beans/property/DoubleProperty;
      24: areturn

  public double getScaleY();
    Code:
       0: aload_0
       1: getfield      #6                  // Field scaleY:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     11
       7: dconst_1
       8: goto          18
      11: aload_0
      12: getfield      #6                  // Field scaleY:Ljavafx/beans/property/DoubleProperty;
      15: invokevirtual #32                 // Method javafx/beans/property/DoubleProperty.get:()D
      18: dreturn

  public final javafx.beans.property.DoubleProperty scaleYProperty();
    Code:
       0: aload_0
       1: getfield      #6                  // Field scaleY:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #41                 // class javafx/scene/Node$NodeTransformation$6
      11: dup
      12: aload_0
      13: dconst_1
      14: invokespecial #42                 // Method javafx/scene/Node$NodeTransformation$6."<init>":(Ljavafx/scene/Node$NodeTransformation;D)V
      17: putfield      #6                  // Field scaleY:Ljavafx/beans/property/DoubleProperty;
      20: aload_0
      21: getfield      #6                  // Field scaleY:Ljavafx/beans/property/DoubleProperty;
      24: areturn

  public double getScaleZ();
    Code:
       0: aload_0
       1: getfield      #5                  // Field scaleZ:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     11
       7: dconst_1
       8: goto          18
      11: aload_0
      12: getfield      #5                  // Field scaleZ:Ljavafx/beans/property/DoubleProperty;
      15: invokevirtual #32                 // Method javafx/beans/property/DoubleProperty.get:()D
      18: dreturn

  public final javafx.beans.property.DoubleProperty scaleZProperty();
    Code:
       0: aload_0
       1: getfield      #5                  // Field scaleZ:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #43                 // class javafx/scene/Node$NodeTransformation$7
      11: dup
      12: aload_0
      13: dconst_1
      14: invokespecial #44                 // Method javafx/scene/Node$NodeTransformation$7."<init>":(Ljavafx/scene/Node$NodeTransformation;D)V
      17: putfield      #5                  // Field scaleZ:Ljavafx/beans/property/DoubleProperty;
      20: aload_0
      21: getfield      #5                  // Field scaleZ:Ljavafx/beans/property/DoubleProperty;
      24: areturn

  public double getRotate();
    Code:
       0: aload_0
       1: getfield      #8                  // Field rotate:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     11
       7: dconst_0
       8: goto          18
      11: aload_0
      12: getfield      #8                  // Field rotate:Ljavafx/beans/property/DoubleProperty;
      15: invokevirtual #32                 // Method javafx/beans/property/DoubleProperty.get:()D
      18: dreturn

  public final javafx.beans.property.DoubleProperty rotateProperty();
    Code:
       0: aload_0
       1: getfield      #8                  // Field rotate:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #45                 // class javafx/scene/Node$NodeTransformation$8
      11: dup
      12: aload_0
      13: dconst_0
      14: invokespecial #46                 // Method javafx/scene/Node$NodeTransformation$8."<init>":(Ljavafx/scene/Node$NodeTransformation;D)V
      17: putfield      #8                  // Field rotate:Ljavafx/beans/property/DoubleProperty;
      20: aload_0
      21: getfield      #8                  // Field rotate:Ljavafx/beans/property/DoubleProperty;
      24: areturn

  public javafx.geometry.Point3D getRotationAxis();
    Code:
       0: aload_0
       1: getfield      #47                 // Field rotationAxis:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     13
       7: invokestatic  #48                 // Method javafx/scene/Node.access$4100:()Ljavafx/geometry/Point3D;
      10: goto          23
      13: aload_0
      14: getfield      #47                 // Field rotationAxis:Ljavafx/beans/property/ObjectProperty;
      17: invokevirtual #49                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      20: checkcast     #50                 // class javafx/geometry/Point3D
      23: areturn

  public final javafx.beans.property.ObjectProperty<javafx.geometry.Point3D> rotationAxisProperty();
    Code:
       0: aload_0
       1: getfield      #47                 // Field rotationAxis:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     22
       7: aload_0
       8: new           #51                 // class javafx/scene/Node$NodeTransformation$9
      11: dup
      12: aload_0
      13: invokestatic  #48                 // Method javafx/scene/Node.access$4100:()Ljavafx/geometry/Point3D;
      16: invokespecial #52                 // Method javafx/scene/Node$NodeTransformation$9."<init>":(Ljavafx/scene/Node$NodeTransformation;Ljavafx/geometry/Point3D;)V
      19: putfield      #47                 // Field rotationAxis:Ljavafx/beans/property/ObjectProperty;
      22: aload_0
      23: getfield      #47                 // Field rotationAxis:Ljavafx/beans/property/ObjectProperty;
      26: areturn

  public javafx.collections.ObservableList<javafx.scene.transform.Transform> getTransforms();
    Code:
       0: aload_0
       1: getfield      #53                 // Field transforms:Ljavafx/collections/ObservableList;
       4: ifnonnull     19
       7: aload_0
       8: new           #54                 // class javafx/scene/Node$NodeTransformation$10
      11: dup
      12: aload_0
      13: invokespecial #55                 // Method javafx/scene/Node$NodeTransformation$10."<init>":(Ljavafx/scene/Node$NodeTransformation;)V
      16: putfield      #53                 // Field transforms:Ljavafx/collections/ObservableList;
      19: aload_0
      20: getfield      #53                 // Field transforms:Ljavafx/collections/ObservableList;
      23: areturn

  public boolean canSetTranslateX();
    Code:
       0: aload_0
       1: getfield      #4                  // Field translateX:Ljavafx/beans/property/DoubleProperty;
       4: ifnull        17
       7: aload_0
       8: getfield      #4                  // Field translateX:Ljavafx/beans/property/DoubleProperty;
      11: invokevirtual #56                 // Method javafx/beans/property/DoubleProperty.isBound:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean canSetTranslateY();
    Code:
       0: aload_0
       1: getfield      #3                  // Field translateY:Ljavafx/beans/property/DoubleProperty;
       4: ifnull        17
       7: aload_0
       8: getfield      #3                  // Field translateY:Ljavafx/beans/property/DoubleProperty;
      11: invokevirtual #56                 // Method javafx/beans/property/DoubleProperty.isBound:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean canSetTranslateZ();
    Code:
       0: aload_0
       1: getfield      #2                  // Field translateZ:Ljavafx/beans/property/DoubleProperty;
       4: ifnull        17
       7: aload_0
       8: getfield      #2                  // Field translateZ:Ljavafx/beans/property/DoubleProperty;
      11: invokevirtual #56                 // Method javafx/beans/property/DoubleProperty.isBound:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean canSetScaleX();
    Code:
       0: aload_0
       1: getfield      #7                  // Field scaleX:Ljavafx/beans/property/DoubleProperty;
       4: ifnull        17
       7: aload_0
       8: getfield      #7                  // Field scaleX:Ljavafx/beans/property/DoubleProperty;
      11: invokevirtual #56                 // Method javafx/beans/property/DoubleProperty.isBound:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean canSetScaleY();
    Code:
       0: aload_0
       1: getfield      #6                  // Field scaleY:Ljavafx/beans/property/DoubleProperty;
       4: ifnull        17
       7: aload_0
       8: getfield      #6                  // Field scaleY:Ljavafx/beans/property/DoubleProperty;
      11: invokevirtual #56                 // Method javafx/beans/property/DoubleProperty.isBound:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean canSetScaleZ();
    Code:
       0: aload_0
       1: getfield      #5                  // Field scaleZ:Ljavafx/beans/property/DoubleProperty;
       4: ifnull        17
       7: aload_0
       8: getfield      #5                  // Field scaleZ:Ljavafx/beans/property/DoubleProperty;
      11: invokevirtual #56                 // Method javafx/beans/property/DoubleProperty.isBound:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean canSetRotate();
    Code:
       0: aload_0
       1: getfield      #8                  // Field rotate:Ljavafx/beans/property/DoubleProperty;
       4: ifnull        17
       7: aload_0
       8: getfield      #8                  // Field rotate:Ljavafx/beans/property/DoubleProperty;
      11: invokevirtual #56                 // Method javafx/beans/property/DoubleProperty.isBound:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean hasTransforms();
    Code:
       0: aload_0
       1: getfield      #53                 // Field transforms:Ljavafx/collections/ObservableList;
       4: ifnull        23
       7: aload_0
       8: getfield      #53                 // Field transforms:Ljavafx/collections/ObservableList;
      11: invokeinterface #57,  1           // InterfaceMethod javafx/collections/ObservableList.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public boolean hasScaleOrRotate();
    Code:
       0: aload_0
       1: getfield      #7                  // Field scaleX:Ljavafx/beans/property/DoubleProperty;
       4: ifnull        21
       7: aload_0
       8: getfield      #7                  // Field scaleX:Ljavafx/beans/property/DoubleProperty;
      11: invokevirtual #32                 // Method javafx/beans/property/DoubleProperty.get:()D
      14: dconst_1
      15: dcmpl
      16: ifeq          21
      19: iconst_1
      20: ireturn
      21: aload_0
      22: getfield      #6                  // Field scaleY:Ljavafx/beans/property/DoubleProperty;
      25: ifnull        42
      28: aload_0
      29: getfield      #6                  // Field scaleY:Ljavafx/beans/property/DoubleProperty;
      32: invokevirtual #32                 // Method javafx/beans/property/DoubleProperty.get:()D
      35: dconst_1
      36: dcmpl
      37: ifeq          42
      40: iconst_1
      41: ireturn
      42: aload_0
      43: getfield      #5                  // Field scaleZ:Ljavafx/beans/property/DoubleProperty;
      46: ifnull        63
      49: aload_0
      50: getfield      #5                  // Field scaleZ:Ljavafx/beans/property/DoubleProperty;
      53: invokevirtual #32                 // Method javafx/beans/property/DoubleProperty.get:()D
      56: dconst_1
      57: dcmpl
      58: ifeq          63
      61: iconst_1
      62: ireturn
      63: aload_0
      64: getfield      #8                  // Field rotate:Ljavafx/beans/property/DoubleProperty;
      67: ifnull        84
      70: aload_0
      71: getfield      #8                  // Field rotate:Ljavafx/beans/property/DoubleProperty;
      74: invokevirtual #32                 // Method javafx/beans/property/DoubleProperty.get:()D
      77: dconst_0
      78: dcmpl
      79: ifeq          84
      82: iconst_1
      83: ireturn
      84: iconst_0
      85: ireturn

  private void lambda$getLocalToSceneInvalidationListener$0(javafx.beans.Observable);
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method invalidateLocalToSceneTransform:()V
       4: return

  static int access$1500(javafx.scene.Node$NodeTransformation);
    Code:
       0: aload_0
       1: getfield      #12                 // Field listenerReasons:I
       4: ireturn

  static javafx.beans.InvalidationListener access$1600(javafx.scene.Node$NodeTransformation);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method getLocalToSceneInvalidationListener:()Ljavafx/beans/InvalidationListener;
       4: areturn

  javafx.scene.Node$NodeTransformation(javafx.scene.Node, javafx.scene.Node$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method "<init>":(Ljavafx/scene/Node;)V
       5: return

  static javafx.scene.Node$LazyTransformProperty access$3000(javafx.scene.Node$NodeTransformation);
    Code:
       0: aload_0
       1: getfield      #9                  // Field localToSceneTransform:Ljavafx/scene/Node$LazyTransformProperty;
       4: areturn

  static javafx.beans.property.DoubleProperty access$6800(javafx.scene.Node$NodeTransformation);
    Code:
       0: aload_0
       1: getfield      #8                  // Field rotate:Ljavafx/beans/property/DoubleProperty;
       4: areturn

  static javafx.beans.property.DoubleProperty access$6900(javafx.scene.Node$NodeTransformation);
    Code:
       0: aload_0
       1: getfield      #7                  // Field scaleX:Ljavafx/beans/property/DoubleProperty;
       4: areturn

  static javafx.beans.property.DoubleProperty access$7000(javafx.scene.Node$NodeTransformation);
    Code:
       0: aload_0
       1: getfield      #6                  // Field scaleY:Ljavafx/beans/property/DoubleProperty;
       4: areturn

  static javafx.beans.property.DoubleProperty access$7100(javafx.scene.Node$NodeTransformation);
    Code:
       0: aload_0
       1: getfield      #5                  // Field scaleZ:Ljavafx/beans/property/DoubleProperty;
       4: areturn

  static javafx.beans.property.DoubleProperty access$7200(javafx.scene.Node$NodeTransformation);
    Code:
       0: aload_0
       1: getfield      #4                  // Field translateX:Ljavafx/beans/property/DoubleProperty;
       4: areturn

  static javafx.beans.property.DoubleProperty access$7300(javafx.scene.Node$NodeTransformation);
    Code:
       0: aload_0
       1: getfield      #3                  // Field translateY:Ljavafx/beans/property/DoubleProperty;
       4: areturn

  static javafx.beans.property.DoubleProperty access$7400(javafx.scene.Node$NodeTransformation);
    Code:
       0: aload_0
       1: getfield      #2                  // Field translateZ:Ljavafx/beans/property/DoubleProperty;
       4: areturn
}
