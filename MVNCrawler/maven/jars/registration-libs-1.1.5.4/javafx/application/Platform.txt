Compiled from "Platform.java"
public final class javafx.application.Platform {
  private static javafx.beans.property.ReadOnlyBooleanWrapper accessibilityActiveProperty;

  private javafx.application.Platform();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void startup(java.lang.Runnable);
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #2                  // Method com/sun/javafx/application/PlatformImpl.startup:(Ljava/lang/Runnable;Z)V
       5: return

  public static void runLater(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/sun/javafx/application/PlatformImpl.runLater:(Ljava/lang/Runnable;)V
       4: return

  public static void requestNextPulse();
    Code:
       0: invokestatic  #4                  // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: invokevirtual #5                  // Method com/sun/javafx/tk/Toolkit.requestNextPulse:()V
       6: return

  public static boolean isFxApplicationThread();
    Code:
       0: invokestatic  #6                  // Method com/sun/javafx/application/PlatformImpl.isFxApplicationThread:()Z
       3: ireturn

  public static void exit();
    Code:
       0: invokestatic  #7                  // Method com/sun/javafx/application/PlatformImpl.exit:()V
       3: return

  public static void setImplicitExit(boolean);
    Code:
       0: iload_0
       1: invokestatic  #8                  // Method com/sun/javafx/application/PlatformImpl.setImplicitExit:(Z)V
       4: return

  public static boolean isImplicitExit();
    Code:
       0: invokestatic  #9                  // Method com/sun/javafx/application/PlatformImpl.isImplicitExit:()Z
       3: ireturn

  public static boolean isSupported(javafx.application.ConditionalFeature);
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method com/sun/javafx/application/PlatformImpl.isSupported:(Ljavafx/application/ConditionalFeature;)Z
       4: ireturn

  public static java.lang.Object enterNestedEventLoop(java.lang.Object);
    Code:
       0: invokestatic  #4                  // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: aload_0
       4: invokevirtual #11                 // Method com/sun/javafx/tk/Toolkit.enterNestedEventLoop:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static void exitNestedEventLoop(java.lang.Object, java.lang.Object);
    Code:
       0: invokestatic  #4                  // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: aload_0
       4: aload_1
       5: invokevirtual #12                 // Method com/sun/javafx/tk/Toolkit.exitNestedEventLoop:(Ljava/lang/Object;Ljava/lang/Object;)V
       8: return

  public static boolean isNestedLoopRunning();
    Code:
       0: invokestatic  #4                  // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: invokevirtual #13                 // Method com/sun/javafx/tk/Toolkit.isNestedLoopRunning:()Z
       6: ireturn

  public static boolean isAccessibilityActive();
    Code:
       0: getstatic     #14                 // Field accessibilityActiveProperty:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       3: ifnonnull     10
       6: iconst_0
       7: goto          16
      10: getstatic     #14                 // Field accessibilityActiveProperty:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      13: invokevirtual #15                 // Method javafx/beans/property/ReadOnlyBooleanWrapper.get:()Z
      16: ireturn

  public static javafx.beans.property.ReadOnlyBooleanProperty accessibilityActiveProperty();
    Code:
       0: getstatic     #14                 // Field accessibilityActiveProperty:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       3: ifnonnull     29
       6: new           #16                 // class javafx/beans/property/ReadOnlyBooleanWrapper
       9: dup
      10: ldc           #17                 // class javafx/application/Platform
      12: ldc           #18                 // String accessibilityActive
      14: invokespecial #19                 // Method javafx/beans/property/ReadOnlyBooleanWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      17: putstatic     #14                 // Field accessibilityActiveProperty:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      20: getstatic     #14                 // Field accessibilityActiveProperty:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      23: invokestatic  #20                 // Method com/sun/javafx/application/PlatformImpl.accessibilityActiveProperty:()Ljavafx/beans/property/BooleanProperty;
      26: invokevirtual #21                 // Method javafx/beans/property/ReadOnlyBooleanWrapper.bind:(Ljavafx/beans/value/ObservableValue;)V
      29: getstatic     #14                 // Field accessibilityActiveProperty:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      32: invokevirtual #22                 // Method javafx/beans/property/ReadOnlyBooleanWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyBooleanProperty;
      35: areturn
}
