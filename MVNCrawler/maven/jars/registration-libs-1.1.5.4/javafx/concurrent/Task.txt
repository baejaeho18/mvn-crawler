Compiled from "Task.java"
public abstract class javafx.concurrent.Task<V> extends java.util.concurrent.FutureTask<V> implements javafx.concurrent.Worker<V>, javafx.event.EventTarget {
  private java.util.concurrent.atomic.AtomicReference<javafx.concurrent.Task$ProgressUpdate> progressUpdate;

  private java.util.concurrent.atomic.AtomicReference<java.lang.String> messageUpdate;

  private java.util.concurrent.atomic.AtomicReference<java.lang.String> titleUpdate;

  private java.util.concurrent.atomic.AtomicReference<V> valueUpdate;

  private volatile boolean started;

  private javafx.beans.property.ObjectProperty<javafx.concurrent.Worker$State> state;

  private final javafx.beans.property.ObjectProperty<V> value;

  private final javafx.beans.property.ObjectProperty<java.lang.Throwable> exception;

  private final javafx.beans.property.DoubleProperty workDone;

  private final javafx.beans.property.DoubleProperty totalWork;

  private final javafx.beans.property.DoubleProperty progress;

  private final javafx.beans.property.BooleanProperty running;

  private final javafx.beans.property.StringProperty message;

  private final javafx.beans.property.StringProperty title;

  private static final java.security.Permission modifyThreadPerm;

  private javafx.concurrent.EventHelper eventHelper;

  public javafx.concurrent.Task();
    Code:
       0: aload_0
       1: new           #7                  // class javafx/concurrent/Task$TaskCallable
       4: dup
       5: aconst_null
       6: invokespecial #8                  // Method javafx/concurrent/Task$TaskCallable."<init>":(Ljavafx/concurrent/Task$1;)V
       9: invokespecial #9                  // Method "<init>":(Ljavafx/concurrent/Task$TaskCallable;)V
      12: return

  private javafx.concurrent.Task(javafx.concurrent.Task$TaskCallable<V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method java/util/concurrent/FutureTask."<init>":(Ljava/util/concurrent/Callable;)V
       5: aload_0
       6: new           #11                 // class java/util/concurrent/atomic/AtomicReference
       9: dup
      10: invokespecial #12                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      13: putfield      #13                 // Field progressUpdate:Ljava/util/concurrent/atomic/AtomicReference;
      16: aload_0
      17: new           #11                 // class java/util/concurrent/atomic/AtomicReference
      20: dup
      21: invokespecial #12                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      24: putfield      #6                  // Field messageUpdate:Ljava/util/concurrent/atomic/AtomicReference;
      27: aload_0
      28: new           #11                 // class java/util/concurrent/atomic/AtomicReference
      31: dup
      32: invokespecial #12                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      35: putfield      #4                  // Field titleUpdate:Ljava/util/concurrent/atomic/AtomicReference;
      38: aload_0
      39: new           #11                 // class java/util/concurrent/atomic/AtomicReference
      42: dup
      43: invokespecial #12                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      46: putfield      #14                 // Field valueUpdate:Ljava/util/concurrent/atomic/AtomicReference;
      49: aload_0
      50: iconst_0
      51: putfield      #2                  // Field started:Z
      54: aload_0
      55: new           #15                 // class javafx/beans/property/SimpleObjectProperty
      58: dup
      59: aload_0
      60: ldc           #16                 // String state
      62: getstatic     #17                 // Field javafx/concurrent/Worker$State.READY:Ljavafx/concurrent/Worker$State;
      65: invokespecial #18                 // Method javafx/beans/property/SimpleObjectProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      68: putfield      #19                 // Field state:Ljavafx/beans/property/ObjectProperty;
      71: aload_0
      72: new           #15                 // class javafx/beans/property/SimpleObjectProperty
      75: dup
      76: aload_0
      77: ldc           #20                 // String value
      79: invokespecial #21                 // Method javafx/beans/property/SimpleObjectProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      82: putfield      #22                 // Field value:Ljavafx/beans/property/ObjectProperty;
      85: aload_0
      86: new           #15                 // class javafx/beans/property/SimpleObjectProperty
      89: dup
      90: aload_0
      91: ldc           #23                 // String exception
      93: invokespecial #21                 // Method javafx/beans/property/SimpleObjectProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      96: putfield      #24                 // Field exception:Ljavafx/beans/property/ObjectProperty;
      99: aload_0
     100: new           #25                 // class javafx/beans/property/SimpleDoubleProperty
     103: dup
     104: aload_0
     105: ldc           #26                 // String workDone
     107: ldc2_w        #27                 // double -1.0d
     110: invokespecial #29                 // Method javafx/beans/property/SimpleDoubleProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;D)V
     113: putfield      #30                 // Field workDone:Ljavafx/beans/property/DoubleProperty;
     116: aload_0
     117: new           #25                 // class javafx/beans/property/SimpleDoubleProperty
     120: dup
     121: aload_0
     122: ldc           #31                 // String totalWork
     124: ldc2_w        #27                 // double -1.0d
     127: invokespecial #29                 // Method javafx/beans/property/SimpleDoubleProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;D)V
     130: putfield      #32                 // Field totalWork:Ljavafx/beans/property/DoubleProperty;
     133: aload_0
     134: new           #25                 // class javafx/beans/property/SimpleDoubleProperty
     137: dup
     138: aload_0
     139: ldc           #33                 // String progress
     141: ldc2_w        #27                 // double -1.0d
     144: invokespecial #29                 // Method javafx/beans/property/SimpleDoubleProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;D)V
     147: putfield      #34                 // Field progress:Ljavafx/beans/property/DoubleProperty;
     150: aload_0
     151: new           #35                 // class javafx/beans/property/SimpleBooleanProperty
     154: dup
     155: aload_0
     156: ldc           #36                 // String running
     158: iconst_0
     159: invokespecial #37                 // Method javafx/beans/property/SimpleBooleanProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;Z)V
     162: putfield      #38                 // Field running:Ljavafx/beans/property/BooleanProperty;
     165: aload_0
     166: new           #39                 // class javafx/beans/property/SimpleStringProperty
     169: dup
     170: aload_0
     171: ldc           #40                 // String message
     173: ldc           #41                 // String
     175: invokespecial #42                 // Method javafx/beans/property/SimpleStringProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V
     178: putfield      #5                  // Field message:Ljavafx/beans/property/StringProperty;
     181: aload_0
     182: new           #39                 // class javafx/beans/property/SimpleStringProperty
     185: dup
     186: aload_0
     187: ldc           #43                 // String title
     189: ldc           #41                 // String
     191: invokespecial #42                 // Method javafx/beans/property/SimpleStringProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V
     194: putfield      #3                  // Field title:Ljavafx/beans/property/StringProperty;
     197: aload_0
     198: aconst_null
     199: putfield      #44                 // Field eventHelper:Ljavafx/concurrent/EventHelper;
     202: aload_1
     203: aload_0
     204: invokestatic  #45                 // Method javafx/concurrent/Task$TaskCallable.access$102:(Ljavafx/concurrent/Task$TaskCallable;Ljavafx/concurrent/Task;)Ljavafx/concurrent/Task;
     207: pop
     208: return

  protected abstract V call() throws java.lang.Exception;

  final void setState(javafx.concurrent.Worker$State);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: invokevirtual #47                 // Method getState:()Ljavafx/concurrent/Worker$State;
       8: astore_2
       9: aload_2
      10: getstatic     #48                 // Field javafx/concurrent/Worker$State.CANCELLED:Ljavafx/concurrent/Worker$State;
      13: if_acmpeq     227
      16: aload_0
      17: getfield      #19                 // Field state:Ljavafx/beans/property/ObjectProperty;
      20: aload_1
      21: invokevirtual #49                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
      24: aload_0
      25: aload_1
      26: getstatic     #50                 // Field javafx/concurrent/Worker$State.SCHEDULED:Ljavafx/concurrent/Worker$State;
      29: if_acmpeq     39
      32: aload_1
      33: getstatic     #51                 // Field javafx/concurrent/Worker$State.RUNNING:Ljavafx/concurrent/Worker$State;
      36: if_acmpne     43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: invokespecial #52                 // Method setRunning:(Z)V
      47: getstatic     #53                 // Field javafx/concurrent/Task$3.$SwitchMap$javafx$concurrent$Worker$State:[I
      50: aload_0
      51: getfield      #19                 // Field state:Ljavafx/beans/property/ObjectProperty;
      54: invokevirtual #54                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      57: checkcast     #55                 // class javafx/concurrent/Worker$State
      60: invokevirtual #56                 // Method javafx/concurrent/Worker$State.ordinal:()I
      63: iaload
      64: tableswitch   { // 1 to 6
                     1: 104
                     2: 126
                     3: 148
                     4: 151
                     5: 173
                     6: 195
               default: 217
          }
     104: aload_0
     105: new           #57                 // class javafx/concurrent/WorkerStateEvent
     108: dup
     109: aload_0
     110: getstatic     #58                 // Field javafx/concurrent/WorkerStateEvent.WORKER_STATE_CANCELLED:Ljavafx/event/EventType;
     113: invokespecial #59                 // Method javafx/concurrent/WorkerStateEvent."<init>":(Ljavafx/concurrent/Worker;Ljavafx/event/EventType;)V
     116: invokevirtual #60                 // Method fireEvent:(Ljavafx/event/Event;)V
     119: aload_0
     120: invokevirtual #61                 // Method cancelled:()V
     123: goto          227
     126: aload_0
     127: new           #57                 // class javafx/concurrent/WorkerStateEvent
     130: dup
     131: aload_0
     132: getstatic     #62                 // Field javafx/concurrent/WorkerStateEvent.WORKER_STATE_FAILED:Ljavafx/event/EventType;
     135: invokespecial #59                 // Method javafx/concurrent/WorkerStateEvent."<init>":(Ljavafx/concurrent/Worker;Ljavafx/event/EventType;)V
     138: invokevirtual #60                 // Method fireEvent:(Ljavafx/event/Event;)V
     141: aload_0
     142: invokevirtual #63                 // Method failed:()V
     145: goto          227
     148: goto          227
     151: aload_0
     152: new           #57                 // class javafx/concurrent/WorkerStateEvent
     155: dup
     156: aload_0
     157: getstatic     #64                 // Field javafx/concurrent/WorkerStateEvent.WORKER_STATE_RUNNING:Ljavafx/event/EventType;
     160: invokespecial #59                 // Method javafx/concurrent/WorkerStateEvent."<init>":(Ljavafx/concurrent/Worker;Ljavafx/event/EventType;)V
     163: invokevirtual #60                 // Method fireEvent:(Ljavafx/event/Event;)V
     166: aload_0
     167: invokevirtual #65                 // Method running:()V
     170: goto          227
     173: aload_0
     174: new           #57                 // class javafx/concurrent/WorkerStateEvent
     177: dup
     178: aload_0
     179: getstatic     #66                 // Field javafx/concurrent/WorkerStateEvent.WORKER_STATE_SCHEDULED:Ljavafx/event/EventType;
     182: invokespecial #59                 // Method javafx/concurrent/WorkerStateEvent."<init>":(Ljavafx/concurrent/Worker;Ljavafx/event/EventType;)V
     185: invokevirtual #60                 // Method fireEvent:(Ljavafx/event/Event;)V
     188: aload_0
     189: invokevirtual #67                 // Method scheduled:()V
     192: goto          227
     195: aload_0
     196: new           #57                 // class javafx/concurrent/WorkerStateEvent
     199: dup
     200: aload_0
     201: getstatic     #68                 // Field javafx/concurrent/WorkerStateEvent.WORKER_STATE_SUCCEEDED:Ljavafx/event/EventType;
     204: invokespecial #59                 // Method javafx/concurrent/WorkerStateEvent."<init>":(Ljavafx/concurrent/Worker;Ljavafx/event/EventType;)V
     207: invokevirtual #60                 // Method fireEvent:(Ljavafx/event/Event;)V
     210: aload_0
     211: invokevirtual #69                 // Method succeeded:()V
     214: goto          227
     217: new           #70                 // class java/lang/AssertionError
     220: dup
     221: ldc           #71                 // String Should be unreachable
     223: invokespecial #72                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     226: athrow
     227: return

  public final javafx.concurrent.Worker$State getState();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #19                 // Field state:Ljavafx/beans/property/ObjectProperty;
       8: invokevirtual #54                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      11: checkcast     #55                 // class javafx/concurrent/Worker$State
      14: areturn

  public final javafx.beans.property.ReadOnlyObjectProperty<javafx.concurrent.Worker$State> stateProperty();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #19                 // Field state:Ljavafx/beans/property/ObjectProperty;
       8: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<javafx.concurrent.WorkerStateEvent>> onScheduledProperty();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: invokespecial #73                 // Method getEventHelper:()Ljavafx/concurrent/EventHelper;
       8: invokevirtual #74                 // Method javafx/concurrent/EventHelper.onScheduledProperty:()Ljavafx/beans/property/ObjectProperty;
      11: areturn

  public final javafx.event.EventHandler<javafx.concurrent.WorkerStateEvent> getOnScheduled();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #44                 // Field eventHelper:Ljavafx/concurrent/EventHelper;
       8: ifnonnull     15
      11: aconst_null
      12: goto          22
      15: aload_0
      16: getfield      #44                 // Field eventHelper:Ljavafx/concurrent/EventHelper;
      19: invokevirtual #75                 // Method javafx/concurrent/EventHelper.getOnScheduled:()Ljavafx/event/EventHandler;
      22: areturn

  public final void setOnScheduled(javafx.event.EventHandler<javafx.concurrent.WorkerStateEvent>);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: invokespecial #73                 // Method getEventHelper:()Ljavafx/concurrent/EventHelper;
       8: aload_1
       9: invokevirtual #76                 // Method javafx/concurrent/EventHelper.setOnScheduled:(Ljavafx/event/EventHandler;)V
      12: return

  protected void scheduled();
    Code:
       0: return

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<javafx.concurrent.WorkerStateEvent>> onRunningProperty();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: invokespecial #73                 // Method getEventHelper:()Ljavafx/concurrent/EventHelper;
       8: invokevirtual #77                 // Method javafx/concurrent/EventHelper.onRunningProperty:()Ljavafx/beans/property/ObjectProperty;
      11: areturn

  public final javafx.event.EventHandler<javafx.concurrent.WorkerStateEvent> getOnRunning();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #44                 // Field eventHelper:Ljavafx/concurrent/EventHelper;
       8: ifnonnull     15
      11: aconst_null
      12: goto          22
      15: aload_0
      16: getfield      #44                 // Field eventHelper:Ljavafx/concurrent/EventHelper;
      19: invokevirtual #78                 // Method javafx/concurrent/EventHelper.getOnRunning:()Ljavafx/event/EventHandler;
      22: areturn

  public final void setOnRunning(javafx.event.EventHandler<javafx.concurrent.WorkerStateEvent>);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: invokespecial #73                 // Method getEventHelper:()Ljavafx/concurrent/EventHelper;
       8: aload_1
       9: invokevirtual #79                 // Method javafx/concurrent/EventHelper.setOnRunning:(Ljavafx/event/EventHandler;)V
      12: return

  protected void running();
    Code:
       0: return

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<javafx.concurrent.WorkerStateEvent>> onSucceededProperty();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: invokespecial #73                 // Method getEventHelper:()Ljavafx/concurrent/EventHelper;
       8: invokevirtual #80                 // Method javafx/concurrent/EventHelper.onSucceededProperty:()Ljavafx/beans/property/ObjectProperty;
      11: areturn

  public final javafx.event.EventHandler<javafx.concurrent.WorkerStateEvent> getOnSucceeded();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #44                 // Field eventHelper:Ljavafx/concurrent/EventHelper;
       8: ifnonnull     15
      11: aconst_null
      12: goto          22
      15: aload_0
      16: getfield      #44                 // Field eventHelper:Ljavafx/concurrent/EventHelper;
      19: invokevirtual #81                 // Method javafx/concurrent/EventHelper.getOnSucceeded:()Ljavafx/event/EventHandler;
      22: areturn

  public final void setOnSucceeded(javafx.event.EventHandler<javafx.concurrent.WorkerStateEvent>);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: invokespecial #73                 // Method getEventHelper:()Ljavafx/concurrent/EventHelper;
       8: aload_1
       9: invokevirtual #82                 // Method javafx/concurrent/EventHelper.setOnSucceeded:(Ljavafx/event/EventHandler;)V
      12: return

  protected void succeeded();
    Code:
       0: return

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<javafx.concurrent.WorkerStateEvent>> onCancelledProperty();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: invokespecial #73                 // Method getEventHelper:()Ljavafx/concurrent/EventHelper;
       8: invokevirtual #83                 // Method javafx/concurrent/EventHelper.onCancelledProperty:()Ljavafx/beans/property/ObjectProperty;
      11: areturn

  public final javafx.event.EventHandler<javafx.concurrent.WorkerStateEvent> getOnCancelled();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #44                 // Field eventHelper:Ljavafx/concurrent/EventHelper;
       8: ifnonnull     15
      11: aconst_null
      12: goto          22
      15: aload_0
      16: getfield      #44                 // Field eventHelper:Ljavafx/concurrent/EventHelper;
      19: invokevirtual #84                 // Method javafx/concurrent/EventHelper.getOnCancelled:()Ljavafx/event/EventHandler;
      22: areturn

  public final void setOnCancelled(javafx.event.EventHandler<javafx.concurrent.WorkerStateEvent>);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: invokespecial #73                 // Method getEventHelper:()Ljavafx/concurrent/EventHelper;
       8: aload_1
       9: invokevirtual #85                 // Method javafx/concurrent/EventHelper.setOnCancelled:(Ljavafx/event/EventHandler;)V
      12: return

  protected void cancelled();
    Code:
       0: return

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<javafx.concurrent.WorkerStateEvent>> onFailedProperty();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: invokespecial #73                 // Method getEventHelper:()Ljavafx/concurrent/EventHelper;
       8: invokevirtual #86                 // Method javafx/concurrent/EventHelper.onFailedProperty:()Ljavafx/beans/property/ObjectProperty;
      11: areturn

  public final javafx.event.EventHandler<javafx.concurrent.WorkerStateEvent> getOnFailed();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #44                 // Field eventHelper:Ljavafx/concurrent/EventHelper;
       8: ifnonnull     15
      11: aconst_null
      12: goto          22
      15: aload_0
      16: getfield      #44                 // Field eventHelper:Ljavafx/concurrent/EventHelper;
      19: invokevirtual #87                 // Method javafx/concurrent/EventHelper.getOnFailed:()Ljavafx/event/EventHandler;
      22: areturn

  public final void setOnFailed(javafx.event.EventHandler<javafx.concurrent.WorkerStateEvent>);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: invokespecial #73                 // Method getEventHelper:()Ljavafx/concurrent/EventHelper;
       8: aload_1
       9: invokevirtual #88                 // Method javafx/concurrent/EventHelper.setOnFailed:(Ljavafx/event/EventHandler;)V
      12: return

  protected void failed();
    Code:
       0: return

  private void setValue(V);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #22                 // Field value:Ljavafx/beans/property/ObjectProperty;
       8: aload_1
       9: invokevirtual #49                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
      12: return

  public final V getValue();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #22                 // Field value:Ljavafx/beans/property/ObjectProperty;
       8: invokevirtual #54                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      11: areturn

  public final javafx.beans.property.ReadOnlyObjectProperty<V> valueProperty();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #22                 // Field value:Ljavafx/beans/property/ObjectProperty;
       8: areturn

  private void _setException(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #24                 // Field exception:Ljavafx/beans/property/ObjectProperty;
       8: aload_1
       9: invokevirtual #49                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
      12: return

  public final java.lang.Throwable getException();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #24                 // Field exception:Ljavafx/beans/property/ObjectProperty;
       8: invokevirtual #54                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      11: checkcast     #89                 // class java/lang/Throwable
      14: areturn

  public final javafx.beans.property.ReadOnlyObjectProperty<java.lang.Throwable> exceptionProperty();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #24                 // Field exception:Ljavafx/beans/property/ObjectProperty;
       8: areturn

  private void setWorkDone(double);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #30                 // Field workDone:Ljavafx/beans/property/DoubleProperty;
       8: dload_1
       9: invokevirtual #90                 // Method javafx/beans/property/DoubleProperty.set:(D)V
      12: return

  public final double getWorkDone();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #30                 // Field workDone:Ljavafx/beans/property/DoubleProperty;
       8: invokevirtual #91                 // Method javafx/beans/property/DoubleProperty.get:()D
      11: dreturn

  public final javafx.beans.property.ReadOnlyDoubleProperty workDoneProperty();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #30                 // Field workDone:Ljavafx/beans/property/DoubleProperty;
       8: areturn

  private void setTotalWork(double);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #32                 // Field totalWork:Ljavafx/beans/property/DoubleProperty;
       8: dload_1
       9: invokevirtual #90                 // Method javafx/beans/property/DoubleProperty.set:(D)V
      12: return

  public final double getTotalWork();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #32                 // Field totalWork:Ljavafx/beans/property/DoubleProperty;
       8: invokevirtual #91                 // Method javafx/beans/property/DoubleProperty.get:()D
      11: dreturn

  public final javafx.beans.property.ReadOnlyDoubleProperty totalWorkProperty();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #32                 // Field totalWork:Ljavafx/beans/property/DoubleProperty;
       8: areturn

  private void setProgress(double);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #34                 // Field progress:Ljavafx/beans/property/DoubleProperty;
       8: dload_1
       9: invokevirtual #90                 // Method javafx/beans/property/DoubleProperty.set:(D)V
      12: return

  public final double getProgress();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #34                 // Field progress:Ljavafx/beans/property/DoubleProperty;
       8: invokevirtual #91                 // Method javafx/beans/property/DoubleProperty.get:()D
      11: dreturn

  public final javafx.beans.property.ReadOnlyDoubleProperty progressProperty();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #34                 // Field progress:Ljavafx/beans/property/DoubleProperty;
       8: areturn

  private void setRunning(boolean);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #38                 // Field running:Ljavafx/beans/property/BooleanProperty;
       8: iload_1
       9: invokevirtual #92                 // Method javafx/beans/property/BooleanProperty.set:(Z)V
      12: return

  public final boolean isRunning();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #38                 // Field running:Ljavafx/beans/property/BooleanProperty;
       8: invokevirtual #93                 // Method javafx/beans/property/BooleanProperty.get:()Z
      11: ireturn

  public final javafx.beans.property.ReadOnlyBooleanProperty runningProperty();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #38                 // Field running:Ljavafx/beans/property/BooleanProperty;
       8: areturn

  public final java.lang.String getMessage();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #5                  // Field message:Ljavafx/beans/property/StringProperty;
       8: invokevirtual #94                 // Method javafx/beans/property/StringProperty.get:()Ljava/lang/Object;
      11: checkcast     #95                 // class java/lang/String
      14: areturn

  public final javafx.beans.property.ReadOnlyStringProperty messageProperty();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #5                  // Field message:Ljavafx/beans/property/StringProperty;
       8: areturn

  public final java.lang.String getTitle();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #3                  // Field title:Ljavafx/beans/property/StringProperty;
       8: invokevirtual #94                 // Method javafx/beans/property/StringProperty.get:()Ljava/lang/Object;
      11: checkcast     #95                 // class java/lang/String
      14: areturn

  public final javafx.beans.property.ReadOnlyStringProperty titleProperty();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: getfield      #3                  // Field title:Ljavafx/beans/property/StringProperty;
       8: areturn

  public final boolean cancel();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #96                 // Method cancel:(Z)Z
       5: ireturn

  public boolean cancel(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokedynamic #97,  0             // InvokeDynamic #0:run:(Ljavafx/concurrent/Task;Z)Ljava/security/PrivilegedAction;
       7: aconst_null
       8: iconst_1
       9: anewarray     #98                 // class java/security/Permission
      12: dup
      13: iconst_0
      14: getstatic     #99                 // Field modifyThreadPerm:Ljava/security/Permission;
      17: aastore
      18: invokestatic  #100                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;[Ljava/security/Permission;)Ljava/lang/Object;
      21: checkcast     #101                // class java/lang/Boolean
      24: invokevirtual #102                // Method java/lang/Boolean.booleanValue:()Z
      27: istore_2
      28: iload_2
      29: ifeq          59
      32: aload_0
      33: invokevirtual #103                // Method isFxApplicationThread:()Z
      36: ifeq          49
      39: aload_0
      40: getstatic     #48                 // Field javafx/concurrent/Worker$State.CANCELLED:Ljavafx/concurrent/Worker$State;
      43: invokevirtual #104                // Method setState:(Ljavafx/concurrent/Worker$State;)V
      46: goto          59
      49: aload_0
      50: aload_0
      51: invokedynamic #105,  0            // InvokeDynamic #1:run:(Ljavafx/concurrent/Task;)Ljava/lang/Runnable;
      56: invokevirtual #106                // Method runLater:(Ljava/lang/Runnable;)V
      59: iload_2
      60: ireturn

  protected void updateProgress(long, long);
    Code:
       0: aload_0
       1: lload_1
       2: l2d
       3: lload_3
       4: l2d
       5: invokevirtual #107                // Method updateProgress:(DD)V
       8: return

  protected void updateProgress(double, double);
    Code:
       0: dload_1
       1: invokestatic  #108                // Method java/lang/Double.isInfinite:(D)Z
       4: ifne          14
       7: dload_1
       8: invokestatic  #109                // Method java/lang/Double.isNaN:(D)Z
      11: ifeq          18
      14: ldc2_w        #27                 // double -1.0d
      17: dstore_1
      18: dload_3
      19: invokestatic  #108                // Method java/lang/Double.isInfinite:(D)Z
      22: ifne          32
      25: dload_3
      26: invokestatic  #109                // Method java/lang/Double.isNaN:(D)Z
      29: ifeq          36
      32: ldc2_w        #27                 // double -1.0d
      35: dstore_3
      36: dload_1
      37: dconst_0
      38: dcmpg
      39: ifge          46
      42: ldc2_w        #27                 // double -1.0d
      45: dstore_1
      46: dload_3
      47: dconst_0
      48: dcmpg
      49: ifge          56
      52: ldc2_w        #27                 // double -1.0d
      55: dstore_3
      56: dload_1
      57: dload_3
      58: dcmpl
      59: ifle          64
      62: dload_3
      63: dstore_1
      64: aload_0
      65: invokevirtual #103                // Method isFxApplicationThread:()Z
      68: ifeq          80
      71: aload_0
      72: dload_1
      73: dload_3
      74: invokespecial #110                // Method _updateProgress:(DD)V
      77: goto          110
      80: aload_0
      81: getfield      #13                 // Field progressUpdate:Ljava/util/concurrent/atomic/AtomicReference;
      84: new           #111                // class javafx/concurrent/Task$ProgressUpdate
      87: dup
      88: dload_1
      89: dload_3
      90: aconst_null
      91: invokespecial #112                // Method javafx/concurrent/Task$ProgressUpdate."<init>":(DDLjavafx/concurrent/Task$1;)V
      94: invokevirtual #113                // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      97: ifnonnull     110
     100: aload_0
     101: aload_0
     102: invokedynamic #114,  0            // InvokeDynamic #2:run:(Ljavafx/concurrent/Task;)Ljava/lang/Runnable;
     107: invokevirtual #106                // Method runLater:(Ljava/lang/Runnable;)V
     110: return

  private void _updateProgress(double, double);
    Code:
       0: aload_0
       1: dload_3
       2: invokespecial #115                // Method setTotalWork:(D)V
       5: aload_0
       6: dload_1
       7: invokespecial #116                // Method setWorkDone:(D)V
      10: dload_1
      11: ldc2_w        #27                 // double -1.0d
      14: dcmpl
      15: ifne          28
      18: aload_0
      19: ldc2_w        #27                 // double -1.0d
      22: invokespecial #117                // Method setProgress:(D)V
      25: goto          35
      28: aload_0
      29: dload_1
      30: dload_3
      31: ddiv
      32: invokespecial #117                // Method setProgress:(D)V
      35: return

  protected void updateMessage(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #103                // Method isFxApplicationThread:()Z
       4: ifeq          18
       7: aload_0
       8: getfield      #5                  // Field message:Ljavafx/beans/property/StringProperty;
      11: aload_1
      12: invokevirtual #118                // Method javafx/beans/property/StringProperty.set:(Ljava/lang/Object;)V
      15: goto          41
      18: aload_0
      19: getfield      #6                  // Field messageUpdate:Ljava/util/concurrent/atomic/AtomicReference;
      22: aload_1
      23: invokevirtual #113                // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      26: ifnonnull     41
      29: aload_0
      30: new           #119                // class javafx/concurrent/Task$1
      33: dup
      34: aload_0
      35: invokespecial #120                // Method javafx/concurrent/Task$1."<init>":(Ljavafx/concurrent/Task;)V
      38: invokevirtual #106                // Method runLater:(Ljava/lang/Runnable;)V
      41: return

  protected void updateTitle(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #103                // Method isFxApplicationThread:()Z
       4: ifeq          18
       7: aload_0
       8: getfield      #3                  // Field title:Ljavafx/beans/property/StringProperty;
      11: aload_1
      12: invokevirtual #118                // Method javafx/beans/property/StringProperty.set:(Ljava/lang/Object;)V
      15: goto          41
      18: aload_0
      19: getfield      #4                  // Field titleUpdate:Ljava/util/concurrent/atomic/AtomicReference;
      22: aload_1
      23: invokevirtual #113                // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      26: ifnonnull     41
      29: aload_0
      30: new           #121                // class javafx/concurrent/Task$2
      33: dup
      34: aload_0
      35: invokespecial #122                // Method javafx/concurrent/Task$2."<init>":(Ljavafx/concurrent/Task;)V
      38: invokevirtual #106                // Method runLater:(Ljava/lang/Runnable;)V
      41: return

  protected void updateValue(V);
    Code:
       0: aload_0
       1: invokevirtual #103                // Method isFxApplicationThread:()Z
       4: ifeq          18
       7: aload_0
       8: getfield      #22                 // Field value:Ljavafx/beans/property/ObjectProperty;
      11: aload_1
      12: invokevirtual #49                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
      15: goto          39
      18: aload_0
      19: getfield      #14                 // Field valueUpdate:Ljava/util/concurrent/atomic/AtomicReference;
      22: aload_1
      23: invokevirtual #113                // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      26: ifnonnull     39
      29: aload_0
      30: aload_0
      31: invokedynamic #123,  0            // InvokeDynamic #3:run:(Ljavafx/concurrent/Task;)Ljava/lang/Runnable;
      36: invokevirtual #106                // Method runLater:(Ljava/lang/Runnable;)V
      39: return

  private void checkThread();
    Code:
       0: aload_0
       1: getfield      #2                  // Field started:Z
       4: ifeq          24
       7: aload_0
       8: invokevirtual #103                // Method isFxApplicationThread:()Z
      11: ifne          24
      14: new           #124                // class java/lang/IllegalStateException
      17: dup
      18: ldc           #125                // String Task must only be used from the FX Application Thread
      20: invokespecial #126                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: return

  void runLater(java.lang.Runnable);
    Code:
       0: aload_1
       1: invokestatic  #127                // Method javafx/application/Platform.runLater:(Ljava/lang/Runnable;)V
       4: return

  boolean isFxApplicationThread();
    Code:
       0: invokestatic  #128                // Method javafx/application/Platform.isFxApplicationThread:()Z
       3: ireturn

  private javafx.concurrent.EventHelper getEventHelper();
    Code:
       0: aload_0
       1: getfield      #44                 // Field eventHelper:Ljavafx/concurrent/EventHelper;
       4: ifnonnull     19
       7: aload_0
       8: new           #129                // class javafx/concurrent/EventHelper
      11: dup
      12: aload_0
      13: invokespecial #130                // Method javafx/concurrent/EventHelper."<init>":(Ljavafx/event/EventTarget;)V
      16: putfield      #44                 // Field eventHelper:Ljavafx/concurrent/EventHelper;
      19: aload_0
      20: getfield      #44                 // Field eventHelper:Ljavafx/concurrent/EventHelper;
      23: areturn

  public final <T extends javafx.event.Event> void addEventHandler(javafx.event.EventType<T>, javafx.event.EventHandler<? super T>);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: invokespecial #73                 // Method getEventHelper:()Ljavafx/concurrent/EventHelper;
       8: aload_1
       9: aload_2
      10: invokevirtual #131                // Method javafx/concurrent/EventHelper.addEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      13: return

  public final <T extends javafx.event.Event> void removeEventHandler(javafx.event.EventType<T>, javafx.event.EventHandler<? super T>);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: invokespecial #73                 // Method getEventHelper:()Ljavafx/concurrent/EventHelper;
       8: aload_1
       9: aload_2
      10: invokevirtual #132                // Method javafx/concurrent/EventHelper.removeEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      13: return

  public final <T extends javafx.event.Event> void addEventFilter(javafx.event.EventType<T>, javafx.event.EventHandler<? super T>);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: invokespecial #73                 // Method getEventHelper:()Ljavafx/concurrent/EventHelper;
       8: aload_1
       9: aload_2
      10: invokevirtual #133                // Method javafx/concurrent/EventHelper.addEventFilter:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      13: return

  public final <T extends javafx.event.Event> void removeEventFilter(javafx.event.EventType<T>, javafx.event.EventHandler<? super T>);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: invokespecial #73                 // Method getEventHelper:()Ljavafx/concurrent/EventHelper;
       8: aload_1
       9: aload_2
      10: invokevirtual #134                // Method javafx/concurrent/EventHelper.removeEventFilter:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      13: return

  protected final <T extends javafx.event.Event> void setEventHandler(javafx.event.EventType<T>, javafx.event.EventHandler<? super T>);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: invokespecial #73                 // Method getEventHelper:()Ljavafx/concurrent/EventHelper;
       8: aload_1
       9: aload_2
      10: invokevirtual #135                // Method javafx/concurrent/EventHelper.setEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      13: return

  public final void fireEvent(javafx.event.Event);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: invokespecial #73                 // Method getEventHelper:()Ljavafx/concurrent/EventHelper;
       8: aload_1
       9: invokevirtual #136                // Method javafx/concurrent/EventHelper.fireEvent:(Ljavafx/event/Event;)V
      12: return

  public javafx.event.EventDispatchChain buildEventDispatchChain(javafx.event.EventDispatchChain);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkThread:()V
       4: aload_0
       5: invokespecial #73                 // Method getEventHelper:()Ljavafx/concurrent/EventHelper;
       8: aload_1
       9: invokevirtual #137                // Method javafx/concurrent/EventHelper.buildEventDispatchChain:(Ljavafx/event/EventDispatchChain;)Ljavafx/event/EventDispatchChain;
      12: areturn

  private void lambda$updateValue$3();
    Code:
       0: aload_0
       1: getfield      #22                 // Field value:Ljavafx/beans/property/ObjectProperty;
       4: aload_0
       5: getfield      #14                 // Field valueUpdate:Ljava/util/concurrent/atomic/AtomicReference;
       8: aconst_null
       9: invokevirtual #113                // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      12: invokevirtual #49                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
      15: return

  private void lambda$updateProgress$2();
    Code:
       0: aload_0
       1: getfield      #13                 // Field progressUpdate:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: invokevirtual #113                // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #111                // class javafx/concurrent/Task$ProgressUpdate
      11: astore_1
      12: aload_0
      13: aload_1
      14: invokestatic  #138                // Method javafx/concurrent/Task$ProgressUpdate.access$900:(Ljavafx/concurrent/Task$ProgressUpdate;)D
      17: aload_1
      18: invokestatic  #139                // Method javafx/concurrent/Task$ProgressUpdate.access$1000:(Ljavafx/concurrent/Task$ProgressUpdate;)D
      21: invokespecial #110                // Method _updateProgress:(DD)V
      24: return

  private void lambda$cancel$1();
    Code:
       0: aload_0
       1: getstatic     #48                 // Field javafx/concurrent/Worker$State.CANCELLED:Ljavafx/concurrent/Worker$State;
       4: invokevirtual #104                // Method setState:(Ljavafx/concurrent/Worker$State;)V
       7: return

  private java.lang.Boolean lambda$cancel$0(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #140                // Method java/util/concurrent/FutureTask.cancel:(Z)Z
       5: invokestatic  #141                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       8: areturn

  static java.util.concurrent.atomic.AtomicReference access$300(javafx.concurrent.Task);
    Code:
       0: aload_0
       1: getfield      #6                  // Field messageUpdate:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn

  static javafx.beans.property.StringProperty access$400(javafx.concurrent.Task);
    Code:
       0: aload_0
       1: getfield      #5                  // Field message:Ljavafx/beans/property/StringProperty;
       4: areturn

  static java.util.concurrent.atomic.AtomicReference access$500(javafx.concurrent.Task);
    Code:
       0: aload_0
       1: getfield      #4                  // Field titleUpdate:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn

  static javafx.beans.property.StringProperty access$600(javafx.concurrent.Task);
    Code:
       0: aload_0
       1: getfield      #3                  // Field title:Ljavafx/beans/property/StringProperty;
       4: areturn

  static boolean access$702(javafx.concurrent.Task, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #2                  // Field started:Z
       6: ireturn

  static void access$800(javafx.concurrent.Task, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method _setException:(Ljava/lang/Throwable;)V
       5: return

  static {};
    Code:
       0: new           #142                // class java/lang/RuntimePermission
       3: dup
       4: ldc           #143                // String modifyThread
       6: invokespecial #144                // Method java/lang/RuntimePermission."<init>":(Ljava/lang/String;)V
       9: putstatic     #99                 // Field modifyThreadPerm:Ljava/security/Permission;
      12: return
}
