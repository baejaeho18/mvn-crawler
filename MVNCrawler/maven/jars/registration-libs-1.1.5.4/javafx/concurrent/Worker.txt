Compiled from "Worker.java"
public interface javafx.concurrent.Worker<V> {
  public abstract javafx.concurrent.Worker$State getState();

  public abstract javafx.beans.property.ReadOnlyObjectProperty<javafx.concurrent.Worker$State> stateProperty();

  public abstract V getValue();

  public abstract javafx.beans.property.ReadOnlyObjectProperty<V> valueProperty();

  public abstract java.lang.Throwable getException();

  public abstract javafx.beans.property.ReadOnlyObjectProperty<java.lang.Throwable> exceptionProperty();

  public abstract double getWorkDone();

  public abstract javafx.beans.property.ReadOnlyDoubleProperty workDoneProperty();

  public abstract double getTotalWork();

  public abstract javafx.beans.property.ReadOnlyDoubleProperty totalWorkProperty();

  public abstract double getProgress();

  public abstract javafx.beans.property.ReadOnlyDoubleProperty progressProperty();

  public abstract boolean isRunning();

  public abstract javafx.beans.property.ReadOnlyBooleanProperty runningProperty();

  public abstract java.lang.String getMessage();

  public abstract javafx.beans.property.ReadOnlyStringProperty messageProperty();

  public abstract java.lang.String getTitle();

  public abstract javafx.beans.property.ReadOnlyStringProperty titleProperty();

  public abstract boolean cancel();
}
