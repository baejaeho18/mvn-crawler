Compiled from "ScheduledService.java"
public abstract class javafx.concurrent.ScheduledService<V> extends javafx.concurrent.Service<V> {
  public static final javafx.util.Callback<javafx.concurrent.ScheduledService<?>, javafx.util.Duration> EXPONENTIAL_BACKOFF_STRATEGY;

  public static final javafx.util.Callback<javafx.concurrent.ScheduledService<?>, javafx.util.Duration> LOGARITHMIC_BACKOFF_STRATEGY;

  public static final javafx.util.Callback<javafx.concurrent.ScheduledService<?>, javafx.util.Duration> LINEAR_BACKOFF_STRATEGY;

  private static final java.util.Timer DELAY_TIMER;

  private javafx.beans.property.ObjectProperty<javafx.util.Duration> delay;

  private javafx.beans.property.ObjectProperty<javafx.util.Duration> period;

  private javafx.beans.property.ObjectProperty<javafx.util.Callback<javafx.concurrent.ScheduledService<?>, javafx.util.Duration>> backoffStrategy;

  private javafx.beans.property.BooleanProperty restartOnFailure;

  private javafx.beans.property.IntegerProperty maximumFailureCount;

  private javafx.beans.property.ReadOnlyIntegerWrapper currentFailureCount;

  private javafx.beans.property.ReadOnlyObjectWrapper<javafx.util.Duration> cumulativePeriod;

  private javafx.beans.property.ObjectProperty<javafx.util.Duration> maximumCumulativePeriod;

  private javafx.beans.property.ReadOnlyObjectWrapper<V> lastValue;

  private long lastRunTime;

  private boolean freshStart;

  private java.util.TimerTask delayTask;

  private boolean stop;

  static final boolean $assertionsDisabled;

  public javafx.concurrent.ScheduledService();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method javafx/concurrent/Service."<init>":()V
       4: aload_0
       5: new           #4                  // class javafx/beans/property/SimpleObjectProperty
       8: dup
       9: aload_0
      10: ldc           #5                  // String delay
      12: getstatic     #6                  // Field javafx/util/Duration.ZERO:Ljavafx/util/Duration;
      15: invokespecial #7                  // Method javafx/beans/property/SimpleObjectProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      18: putfield      #8                  // Field delay:Ljavafx/beans/property/ObjectProperty;
      21: aload_0
      22: new           #4                  // class javafx/beans/property/SimpleObjectProperty
      25: dup
      26: aload_0
      27: ldc           #9                  // String period
      29: getstatic     #6                  // Field javafx/util/Duration.ZERO:Ljavafx/util/Duration;
      32: invokespecial #7                  // Method javafx/beans/property/SimpleObjectProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      35: putfield      #10                 // Field period:Ljavafx/beans/property/ObjectProperty;
      38: aload_0
      39: new           #4                  // class javafx/beans/property/SimpleObjectProperty
      42: dup
      43: aload_0
      44: ldc           #11                 // String backoffStrategy
      46: getstatic     #12                 // Field LOGARITHMIC_BACKOFF_STRATEGY:Ljavafx/util/Callback;
      49: invokespecial #7                  // Method javafx/beans/property/SimpleObjectProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      52: putfield      #13                 // Field backoffStrategy:Ljavafx/beans/property/ObjectProperty;
      55: aload_0
      56: new           #14                 // class javafx/beans/property/SimpleBooleanProperty
      59: dup
      60: aload_0
      61: ldc           #15                 // String restartOnFailure
      63: iconst_1
      64: invokespecial #16                 // Method javafx/beans/property/SimpleBooleanProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;Z)V
      67: putfield      #17                 // Field restartOnFailure:Ljavafx/beans/property/BooleanProperty;
      70: aload_0
      71: new           #18                 // class javafx/beans/property/SimpleIntegerProperty
      74: dup
      75: aload_0
      76: ldc           #19                 // String maximumFailureCount
      78: ldc           #21                 // int 2147483647
      80: invokespecial #22                 // Method javafx/beans/property/SimpleIntegerProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;I)V
      83: putfield      #23                 // Field maximumFailureCount:Ljavafx/beans/property/IntegerProperty;
      86: aload_0
      87: new           #24                 // class javafx/beans/property/ReadOnlyIntegerWrapper
      90: dup
      91: aload_0
      92: ldc           #25                 // String currentFailureCount
      94: iconst_0
      95: invokespecial #26                 // Method javafx/beans/property/ReadOnlyIntegerWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;I)V
      98: putfield      #27                 // Field currentFailureCount:Ljavafx/beans/property/ReadOnlyIntegerWrapper;
     101: aload_0
     102: new           #28                 // class javafx/beans/property/ReadOnlyObjectWrapper
     105: dup
     106: aload_0
     107: ldc           #29                 // String cumulativePeriod
     109: getstatic     #6                  // Field javafx/util/Duration.ZERO:Ljavafx/util/Duration;
     112: invokespecial #30                 // Method javafx/beans/property/ReadOnlyObjectWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
     115: putfield      #31                 // Field cumulativePeriod:Ljavafx/beans/property/ReadOnlyObjectWrapper;
     118: aload_0
     119: new           #4                  // class javafx/beans/property/SimpleObjectProperty
     122: dup
     123: aload_0
     124: ldc           #32                 // String maximumCumulativePeriod
     126: getstatic     #33                 // Field javafx/util/Duration.INDEFINITE:Ljavafx/util/Duration;
     129: invokespecial #7                  // Method javafx/beans/property/SimpleObjectProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
     132: putfield      #34                 // Field maximumCumulativePeriod:Ljavafx/beans/property/ObjectProperty;
     135: aload_0
     136: new           #28                 // class javafx/beans/property/ReadOnlyObjectWrapper
     139: dup
     140: aload_0
     141: ldc           #35                 // String lastValue
     143: aconst_null
     144: invokespecial #30                 // Method javafx/beans/property/ReadOnlyObjectWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
     147: putfield      #36                 // Field lastValue:Ljavafx/beans/property/ReadOnlyObjectWrapper;
     150: aload_0
     151: lconst_0
     152: putfield      #37                 // Field lastRunTime:J
     155: aload_0
     156: iconst_1
     157: putfield      #38                 // Field freshStart:Z
     160: aload_0
     161: aconst_null
     162: putfield      #1                  // Field delayTask:Ljava/util/TimerTask;
     165: aload_0
     166: iconst_0
     167: putfield      #39                 // Field stop:Z
     170: return

  public final javafx.util.Duration getDelay();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delay:Ljavafx/beans/property/ObjectProperty;
       4: invokevirtual #40                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
       7: checkcast     #41                 // class javafx/util/Duration
      10: areturn

  public final void setDelay(javafx.util.Duration);
    Code:
       0: aload_0
       1: getfield      #8                  // Field delay:Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #42                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.beans.property.ObjectProperty<javafx.util.Duration> delayProperty();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delay:Ljavafx/beans/property/ObjectProperty;
       4: areturn

  public final javafx.util.Duration getPeriod();
    Code:
       0: aload_0
       1: getfield      #10                 // Field period:Ljavafx/beans/property/ObjectProperty;
       4: invokevirtual #40                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
       7: checkcast     #41                 // class javafx/util/Duration
      10: areturn

  public final void setPeriod(javafx.util.Duration);
    Code:
       0: aload_0
       1: getfield      #10                 // Field period:Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #42                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.beans.property.ObjectProperty<javafx.util.Duration> periodProperty();
    Code:
       0: aload_0
       1: getfield      #10                 // Field period:Ljavafx/beans/property/ObjectProperty;
       4: areturn

  public final javafx.util.Callback<javafx.concurrent.ScheduledService<?>, javafx.util.Duration> getBackoffStrategy();
    Code:
       0: aload_0
       1: getfield      #13                 // Field backoffStrategy:Ljavafx/beans/property/ObjectProperty;
       4: invokevirtual #40                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
       7: checkcast     #43                 // class javafx/util/Callback
      10: areturn

  public final void setBackoffStrategy(javafx.util.Callback<javafx.concurrent.ScheduledService<?>, javafx.util.Duration>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field backoffStrategy:Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #42                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.beans.property.ObjectProperty<javafx.util.Callback<javafx.concurrent.ScheduledService<?>, javafx.util.Duration>> backoffStrategyProperty();
    Code:
       0: aload_0
       1: getfield      #13                 // Field backoffStrategy:Ljavafx/beans/property/ObjectProperty;
       4: areturn

  public final boolean getRestartOnFailure();
    Code:
       0: aload_0
       1: getfield      #17                 // Field restartOnFailure:Ljavafx/beans/property/BooleanProperty;
       4: invokevirtual #44                 // Method javafx/beans/property/BooleanProperty.get:()Z
       7: ireturn

  public final void setRestartOnFailure(boolean);
    Code:
       0: aload_0
       1: getfield      #17                 // Field restartOnFailure:Ljavafx/beans/property/BooleanProperty;
       4: iload_1
       5: invokevirtual #45                 // Method javafx/beans/property/BooleanProperty.set:(Z)V
       8: return

  public final javafx.beans.property.BooleanProperty restartOnFailureProperty();
    Code:
       0: aload_0
       1: getfield      #17                 // Field restartOnFailure:Ljavafx/beans/property/BooleanProperty;
       4: areturn

  public final int getMaximumFailureCount();
    Code:
       0: aload_0
       1: getfield      #23                 // Field maximumFailureCount:Ljavafx/beans/property/IntegerProperty;
       4: invokevirtual #46                 // Method javafx/beans/property/IntegerProperty.get:()I
       7: ireturn

  public final void setMaximumFailureCount(int);
    Code:
       0: aload_0
       1: getfield      #23                 // Field maximumFailureCount:Ljavafx/beans/property/IntegerProperty;
       4: iload_1
       5: invokevirtual #47                 // Method javafx/beans/property/IntegerProperty.set:(I)V
       8: return

  public final javafx.beans.property.IntegerProperty maximumFailureCountProperty();
    Code:
       0: aload_0
       1: getfield      #23                 // Field maximumFailureCount:Ljavafx/beans/property/IntegerProperty;
       4: areturn

  public final int getCurrentFailureCount();
    Code:
       0: aload_0
       1: getfield      #27                 // Field currentFailureCount:Ljavafx/beans/property/ReadOnlyIntegerWrapper;
       4: invokevirtual #48                 // Method javafx/beans/property/ReadOnlyIntegerWrapper.get:()I
       7: ireturn

  public final javafx.beans.property.ReadOnlyIntegerProperty currentFailureCountProperty();
    Code:
       0: aload_0
       1: getfield      #27                 // Field currentFailureCount:Ljavafx/beans/property/ReadOnlyIntegerWrapper;
       4: invokevirtual #49                 // Method javafx/beans/property/ReadOnlyIntegerWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyIntegerProperty;
       7: areturn

  private void setCurrentFailureCount(int);
    Code:
       0: aload_0
       1: getfield      #27                 // Field currentFailureCount:Ljavafx/beans/property/ReadOnlyIntegerWrapper;
       4: iload_1
       5: invokevirtual #50                 // Method javafx/beans/property/ReadOnlyIntegerWrapper.set:(I)V
       8: return

  public final javafx.util.Duration getCumulativePeriod();
    Code:
       0: aload_0
       1: getfield      #31                 // Field cumulativePeriod:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #51                 // Method javafx/beans/property/ReadOnlyObjectWrapper.get:()Ljava/lang/Object;
       7: checkcast     #41                 // class javafx/util/Duration
      10: areturn

  public final javafx.beans.property.ReadOnlyObjectProperty<javafx.util.Duration> cumulativePeriodProperty();
    Code:
       0: aload_0
       1: getfield      #31                 // Field cumulativePeriod:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #52                 // Method javafx/beans/property/ReadOnlyObjectWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       7: areturn

  void setCumulativePeriod(javafx.util.Duration);
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_1
       5: invokevirtual #53                 // Method javafx/util/Duration.toMillis:()D
       8: dconst_0
       9: dcmpg
      10: ifge          19
      13: getstatic     #6                  // Field javafx/util/Duration.ZERO:Ljavafx/util/Duration;
      16: goto          20
      19: aload_1
      20: astore_2
      21: aload_0
      22: getfield      #34                 // Field maximumCumulativePeriod:Ljavafx/beans/property/ObjectProperty;
      25: invokevirtual #40                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      28: checkcast     #41                 // class javafx/util/Duration
      31: astore_3
      32: aload_3
      33: ifnull        83
      36: aload_3
      37: invokevirtual #54                 // Method javafx/util/Duration.isUnknown:()Z
      40: ifne          83
      43: aload_2
      44: invokevirtual #54                 // Method javafx/util/Duration.isUnknown:()Z
      47: ifne          83
      50: aload_3
      51: invokevirtual #53                 // Method javafx/util/Duration.toMillis:()D
      54: dconst_0
      55: dcmpg
      56: ifge          66
      59: getstatic     #6                  // Field javafx/util/Duration.ZERO:Ljavafx/util/Duration;
      62: astore_2
      63: goto          83
      66: aload_3
      67: invokevirtual #55                 // Method javafx/util/Duration.isIndefinite:()Z
      70: ifne          83
      73: aload_2
      74: aload_3
      75: invokevirtual #56                 // Method javafx/util/Duration.greaterThan:(Ljavafx/util/Duration;)Z
      78: ifeq          83
      81: aload_3
      82: astore_2
      83: aload_0
      84: getfield      #31                 // Field cumulativePeriod:Ljavafx/beans/property/ReadOnlyObjectWrapper;
      87: aload_2
      88: invokevirtual #57                 // Method javafx/beans/property/ReadOnlyObjectWrapper.set:(Ljava/lang/Object;)V
      91: return

  public final javafx.util.Duration getMaximumCumulativePeriod();
    Code:
       0: aload_0
       1: getfield      #34                 // Field maximumCumulativePeriod:Ljavafx/beans/property/ObjectProperty;
       4: invokevirtual #40                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
       7: checkcast     #41                 // class javafx/util/Duration
      10: areturn

  public final void setMaximumCumulativePeriod(javafx.util.Duration);
    Code:
       0: aload_0
       1: getfield      #34                 // Field maximumCumulativePeriod:Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #42                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.beans.property.ObjectProperty<javafx.util.Duration> maximumCumulativePeriodProperty();
    Code:
       0: aload_0
       1: getfield      #34                 // Field maximumCumulativePeriod:Ljavafx/beans/property/ObjectProperty;
       4: areturn

  public final V getLastValue();
    Code:
       0: aload_0
       1: getfield      #36                 // Field lastValue:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #51                 // Method javafx/beans/property/ReadOnlyObjectWrapper.get:()Ljava/lang/Object;
       7: areturn

  public final javafx.beans.property.ReadOnlyObjectProperty<V> lastValueProperty();
    Code:
       0: aload_0
       1: getfield      #36                 // Field lastValue:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #52                 // Method javafx/beans/property/ReadOnlyObjectWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       7: areturn

  protected void executeTask(javafx.concurrent.Task<V>);
    Code:
       0: getstatic     #58                 // Field $assertionsDisabled:Z
       3: ifne          18
       6: aload_1
       7: ifnonnull     18
      10: new           #59                 // class java/lang/AssertionError
      13: dup
      14: invokespecial #60                 // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: aload_0
      19: invokevirtual #61                 // Method checkThread:()V
      22: aload_0
      23: getfield      #38                 // Field freshStart:Z
      26: ifeq          99
      29: getstatic     #58                 // Field $assertionsDisabled:Z
      32: ifne          50
      35: aload_0
      36: getfield      #1                  // Field delayTask:Ljava/util/TimerTask;
      39: ifnull        50
      42: new           #59                 // class java/lang/AssertionError
      45: dup
      46: invokespecial #60                 // Method java/lang/AssertionError."<init>":()V
      49: athrow
      50: aload_0
      51: aload_0
      52: invokevirtual #62                 // Method getPeriod:()Ljavafx/util/Duration;
      55: invokevirtual #63                 // Method setCumulativePeriod:(Ljavafx/util/Duration;)V
      58: aload_0
      59: invokevirtual #64                 // Method getDelay:()Ljavafx/util/Duration;
      62: invokestatic  #65                 // Method normalize:(Ljavafx/util/Duration;)D
      65: d2l
      66: lstore_2
      67: lload_2
      68: lconst_0
      69: lcmp
      70: ifne          81
      73: aload_0
      74: aload_1
      75: invokespecial #2                  // Method executeTaskNow:(Ljavafx/concurrent/Task;)V
      78: goto          96
      81: aload_0
      82: aload_0
      83: aload_0
      84: aload_1
      85: invokespecial #66                 // Method createTimerTask:(Ljavafx/concurrent/Task;)Ljava/util/TimerTask;
      88: dup_x1
      89: putfield      #1                  // Field delayTask:Ljava/util/TimerTask;
      92: lload_2
      93: invokevirtual #67                 // Method schedule:(Ljava/util/TimerTask;J)V
      96: goto          174
      99: aload_0
     100: invokevirtual #68                 // Method getCumulativePeriod:()Ljavafx/util/Duration;
     103: invokestatic  #65                 // Method normalize:(Ljavafx/util/Duration;)D
     106: dstore_2
     107: aload_0
     108: invokevirtual #69                 // Method clock:()J
     111: aload_0
     112: getfield      #37                 // Field lastRunTime:J
     115: lsub
     116: l2d
     117: dstore        4
     119: dload         4
     121: dload_2
     122: dcmpg
     123: ifge          169
     126: getstatic     #58                 // Field $assertionsDisabled:Z
     129: ifne          147
     132: aload_0
     133: getfield      #1                  // Field delayTask:Ljava/util/TimerTask;
     136: ifnull        147
     139: new           #59                 // class java/lang/AssertionError
     142: dup
     143: invokespecial #60                 // Method java/lang/AssertionError."<init>":()V
     146: athrow
     147: aload_0
     148: aload_0
     149: aload_0
     150: aload_1
     151: invokespecial #66                 // Method createTimerTask:(Ljavafx/concurrent/Task;)Ljava/util/TimerTask;
     154: dup_x1
     155: putfield      #1                  // Field delayTask:Ljava/util/TimerTask;
     158: dload_2
     159: dload         4
     161: dsub
     162: d2l
     163: invokevirtual #67                 // Method schedule:(Ljava/util/TimerTask;J)V
     166: goto          174
     169: aload_0
     170: aload_1
     171: invokespecial #2                  // Method executeTaskNow:(Ljavafx/concurrent/Task;)V
     174: return

  protected void succeeded();
    Code:
       0: aload_0
       1: invokespecial #70                 // Method javafx/concurrent/Service.succeeded:()V
       4: aload_0
       5: getfield      #36                 // Field lastValue:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       8: aload_0
       9: invokevirtual #71                 // Method getValue:()Ljava/lang/Object;
      12: invokevirtual #57                 // Method javafx/beans/property/ReadOnlyObjectWrapper.set:(Ljava/lang/Object;)V
      15: aload_0
      16: invokevirtual #62                 // Method getPeriod:()Ljavafx/util/Duration;
      19: astore_1
      20: aload_0
      21: aload_1
      22: invokevirtual #63                 // Method setCumulativePeriod:(Ljavafx/util/Duration;)V
      25: aload_0
      26: getfield      #39                 // Field stop:Z
      29: istore_2
      30: aload_0
      31: invokespecial #72                 // Method superReset:()V
      34: getstatic     #58                 // Field $assertionsDisabled:Z
      37: ifne          55
      40: aload_0
      41: getfield      #38                 // Field freshStart:Z
      44: ifeq          55
      47: new           #59                 // class java/lang/AssertionError
      50: dup
      51: invokespecial #60                 // Method java/lang/AssertionError."<init>":()V
      54: athrow
      55: iload_2
      56: ifeq          66
      59: aload_0
      60: invokevirtual #73                 // Method cancelFromReadyState:()V
      63: goto          70
      66: aload_0
      67: invokevirtual #74                 // Method start:()V
      70: return

  protected void failed();
    Code:
       0: aload_0
       1: invokespecial #75                 // Method javafx/concurrent/Service.failed:()V
       4: getstatic     #58                 // Field $assertionsDisabled:Z
       7: ifne          25
      10: aload_0
      11: getfield      #1                  // Field delayTask:Ljava/util/TimerTask;
      14: ifnull        25
      17: new           #59                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #60                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: aload_0
      27: invokevirtual #76                 // Method getCurrentFailureCount:()I
      30: iconst_1
      31: iadd
      32: invokespecial #77                 // Method setCurrentFailureCount:(I)V
      35: aload_0
      36: invokevirtual #78                 // Method getRestartOnFailure:()Z
      39: ifeq          107
      42: aload_0
      43: invokevirtual #79                 // Method getMaximumFailureCount:()I
      46: aload_0
      47: invokevirtual #76                 // Method getCurrentFailureCount:()I
      50: if_icmple     107
      53: aload_0
      54: invokevirtual #80                 // Method getBackoffStrategy:()Ljavafx/util/Callback;
      57: astore_1
      58: aload_1
      59: ifnull        78
      62: aload_1
      63: aload_0
      64: invokeinterface #81,  2           // InterfaceMethod javafx/util/Callback.call:(Ljava/lang/Object;)Ljava/lang/Object;
      69: checkcast     #41                 // class javafx/util/Duration
      72: astore_2
      73: aload_0
      74: aload_2
      75: invokevirtual #63                 // Method setCumulativePeriod:(Ljavafx/util/Duration;)V
      78: aload_0
      79: invokespecial #72                 // Method superReset:()V
      82: getstatic     #58                 // Field $assertionsDisabled:Z
      85: ifne          103
      88: aload_0
      89: getfield      #38                 // Field freshStart:Z
      92: ifeq          103
      95: new           #59                 // class java/lang/AssertionError
      98: dup
      99: invokespecial #60                 // Method java/lang/AssertionError."<init>":()V
     102: athrow
     103: aload_0
     104: invokevirtual #74                 // Method start:()V
     107: return

  public void reset();
    Code:
       0: aload_0
       1: invokespecial #82                 // Method javafx/concurrent/Service.reset:()V
       4: aload_0
       5: iconst_0
       6: putfield      #39                 // Field stop:Z
       9: aload_0
      10: aload_0
      11: invokevirtual #62                 // Method getPeriod:()Ljavafx/util/Duration;
      14: invokevirtual #63                 // Method setCumulativePeriod:(Ljavafx/util/Duration;)V
      17: aload_0
      18: getfield      #36                 // Field lastValue:Ljavafx/beans/property/ReadOnlyObjectWrapper;
      21: aconst_null
      22: invokevirtual #57                 // Method javafx/beans/property/ReadOnlyObjectWrapper.set:(Ljava/lang/Object;)V
      25: aload_0
      26: iconst_0
      27: invokespecial #77                 // Method setCurrentFailureCount:(I)V
      30: aload_0
      31: lconst_0
      32: putfield      #37                 // Field lastRunTime:J
      35: aload_0
      36: iconst_1
      37: putfield      #38                 // Field freshStart:Z
      40: return

  public boolean cancel();
    Code:
       0: aload_0
       1: invokespecial #83                 // Method javafx/concurrent/Service.cancel:()Z
       4: istore_1
       5: aload_0
       6: iconst_1
       7: putfield      #39                 // Field stop:Z
      10: aload_0
      11: getfield      #1                  // Field delayTask:Ljava/util/TimerTask;
      14: ifnull        30
      17: aload_0
      18: getfield      #1                  // Field delayTask:Ljava/util/TimerTask;
      21: invokevirtual #84                 // Method java/util/TimerTask.cancel:()Z
      24: pop
      25: aload_0
      26: aconst_null
      27: putfield      #1                  // Field delayTask:Ljava/util/TimerTask;
      30: iload_1
      31: ireturn

  void schedule(java.util.TimerTask, long);
    Code:
       0: getstatic     #85                 // Field DELAY_TIMER:Ljava/util/Timer;
       3: aload_1
       4: lload_2
       5: invokevirtual #86                 // Method java/util/Timer.schedule:(Ljava/util/TimerTask;J)V
       8: return

  boolean isFreshStart();
    Code:
       0: aload_0
       1: getfield      #38                 // Field freshStart:Z
       4: ireturn

  long clock();
    Code:
       0: invokestatic  #87                 // Method java/lang/System.currentTimeMillis:()J
       3: lreturn

  private void superReset();
    Code:
       0: aload_0
       1: invokespecial #82                 // Method javafx/concurrent/Service.reset:()V
       4: return

  private java.util.TimerTask createTimerTask(javafx.concurrent.Task<V>);
    Code:
       0: getstatic     #58                 // Field $assertionsDisabled:Z
       3: ifne          18
       6: aload_1
       7: ifnonnull     18
      10: new           #59                 // class java/lang/AssertionError
      13: dup
      14: invokespecial #60                 // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: new           #88                 // class javafx/concurrent/ScheduledService$4
      21: dup
      22: aload_0
      23: aload_1
      24: invokespecial #89                 // Method javafx/concurrent/ScheduledService$4."<init>":(Ljavafx/concurrent/ScheduledService;Ljavafx/concurrent/Task;)V
      27: areturn

  private void executeTaskNow(javafx.concurrent.Task<V>);
    Code:
       0: getstatic     #58                 // Field $assertionsDisabled:Z
       3: ifne          18
       6: aload_1
       7: ifnonnull     18
      10: new           #59                 // class java/lang/AssertionError
      13: dup
      14: invokespecial #60                 // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: aload_0
      19: aload_0
      20: invokevirtual #69                 // Method clock:()J
      23: putfield      #37                 // Field lastRunTime:J
      26: aload_0
      27: iconst_0
      28: putfield      #38                 // Field freshStart:Z
      31: aload_0
      32: aload_1
      33: invokespecial #90                 // Method javafx/concurrent/Service.executeTask:(Ljavafx/concurrent/Task;)V
      36: return

  private static double normalize(javafx.util.Duration);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #54                 // Method javafx/util/Duration.isUnknown:()Z
       8: ifeq          13
      11: dconst_0
      12: dreturn
      13: aload_0
      14: invokevirtual #55                 // Method javafx/util/Duration.isIndefinite:()Z
      17: ifeq          24
      20: ldc2_w        #92                 // double 1.7976931348623157E308d
      23: dreturn
      24: aload_0
      25: invokevirtual #53                 // Method javafx/util/Duration.toMillis:()D
      28: dreturn

  static void access$000(javafx.concurrent.ScheduledService, javafx.concurrent.Task);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method executeTaskNow:(Ljavafx/concurrent/Task;)V
       5: return

  static java.util.TimerTask access$102(javafx.concurrent.ScheduledService, java.util.TimerTask);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field delayTask:Ljava/util/TimerTask;
       6: areturn

  static {};
    Code:
       0: ldc           #94                 // class javafx/concurrent/ScheduledService
       2: invokevirtual #95                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #58                 // Field $assertionsDisabled:Z
      16: new           #96                 // class javafx/concurrent/ScheduledService$1
      19: dup
      20: invokespecial #97                 // Method javafx/concurrent/ScheduledService$1."<init>":()V
      23: putstatic     #98                 // Field EXPONENTIAL_BACKOFF_STRATEGY:Ljavafx/util/Callback;
      26: new           #99                 // class javafx/concurrent/ScheduledService$2
      29: dup
      30: invokespecial #100                // Method javafx/concurrent/ScheduledService$2."<init>":()V
      33: putstatic     #12                 // Field LOGARITHMIC_BACKOFF_STRATEGY:Ljavafx/util/Callback;
      36: new           #101                // class javafx/concurrent/ScheduledService$3
      39: dup
      40: invokespecial #102                // Method javafx/concurrent/ScheduledService$3."<init>":()V
      43: putstatic     #103                // Field LINEAR_BACKOFF_STRATEGY:Ljavafx/util/Callback;
      46: new           #104                // class java/util/Timer
      49: dup
      50: ldc           #105                // String ScheduledService Delay Timer
      52: iconst_1
      53: invokespecial #106                // Method java/util/Timer."<init>":(Ljava/lang/String;Z)V
      56: putstatic     #85                 // Field DELAY_TIMER:Ljava/util/Timer;
      59: return
}
