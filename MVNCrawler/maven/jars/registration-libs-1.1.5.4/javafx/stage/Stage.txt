Compiled from "Stage.java"
public class javafx.stage.Stage extends javafx.stage.Window {
  private boolean inNestedEventLoop;

  private static final com.sun.javafx.stage.StagePeerListener$StageAccessor STAGE_ACCESSOR;

  private boolean primary;

  private boolean securityDialog;

  private boolean important;

  private javafx.stage.StageStyle style;

  private javafx.stage.Modality modality;

  private javafx.stage.Window owner;

  private javafx.beans.property.ReadOnlyBooleanWrapper fullScreen;

  private javafx.collections.ObservableList<javafx.scene.image.Image> icons;

  private javafx.beans.property.StringProperty title;

  private javafx.beans.property.ReadOnlyBooleanWrapper iconified;

  private javafx.beans.property.ReadOnlyBooleanWrapper maximized;

  private javafx.beans.property.ReadOnlyBooleanWrapper alwaysOnTop;

  private javafx.beans.property.BooleanProperty resizable;

  private javafx.beans.property.DoubleProperty minWidth;

  private javafx.beans.property.DoubleProperty minHeight;

  private javafx.beans.property.DoubleProperty maxWidth;

  private javafx.beans.property.DoubleProperty maxHeight;

  private final javafx.beans.property.ObjectProperty<javafx.scene.input.KeyCombination> fullScreenExitCombination;

  private final javafx.beans.property.ObjectProperty<java.lang.String> fullScreenExitHint;

  static final boolean $assertionsDisabled;

  public javafx.stage.Stage();
    Code:
       0: aload_0
       1: getstatic     #8                  // Field javafx/stage/StageStyle.DECORATED:Ljavafx/stage/StageStyle;
       4: invokespecial #9                  // Method "<init>":(Ljavafx/stage/StageStyle;)V
       7: return

  public javafx.stage.Stage(javafx.stage.StageStyle);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method javafx/stage/Window."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #11                 // Field inNestedEventLoop:Z
       9: aload_0
      10: iconst_0
      11: putfield      #12                 // Field primary:Z
      14: aload_0
      15: iconst_0
      16: putfield      #13                 // Field securityDialog:Z
      19: aload_0
      20: iconst_1
      21: putfield      #14                 // Field important:Z
      24: aload_0
      25: getstatic     #15                 // Field javafx/stage/Modality.NONE:Ljavafx/stage/Modality;
      28: putfield      #16                 // Field modality:Ljavafx/stage/Modality;
      31: aload_0
      32: aconst_null
      33: putfield      #17                 // Field owner:Ljavafx/stage/Window;
      36: aload_0
      37: new           #18                 // class javafx/stage/Stage$4
      40: dup
      41: aload_0
      42: new           #19                 // class javafx/stage/Stage$3
      45: dup
      46: aload_0
      47: invokespecial #20                 // Method javafx/stage/Stage$3."<init>":(Ljavafx/stage/Stage;)V
      50: invokespecial #21                 // Method javafx/stage/Stage$4."<init>":(Ljavafx/stage/Stage;Ljavafx/collections/ObservableList;)V
      53: putfield      #1                  // Field icons:Ljavafx/collections/ObservableList;
      56: aload_0
      57: new           #22                 // class javafx/beans/property/SimpleObjectProperty
      60: dup
      61: aload_0
      62: ldc           #23                 // String fullScreenExitCombination
      64: aconst_null
      65: invokespecial #24                 // Method javafx/beans/property/SimpleObjectProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      68: putfield      #25                 // Field fullScreenExitCombination:Ljavafx/beans/property/ObjectProperty;
      71: aload_0
      72: new           #22                 // class javafx/beans/property/SimpleObjectProperty
      75: dup
      76: aload_0
      77: ldc           #26                 // String fullScreenExitHint
      79: aconst_null
      80: invokespecial #24                 // Method javafx/beans/property/SimpleObjectProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      83: putfield      #27                 // Field fullScreenExitHint:Ljavafx/beans/property/ObjectProperty;
      86: invokestatic  #28                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      89: invokevirtual #29                 // Method com/sun/javafx/tk/Toolkit.checkFxUserThread:()V
      92: aload_0
      93: aload_1
      94: invokevirtual #30                 // Method initStyle:(Ljavafx/stage/StageStyle;)V
      97: aload_0
      98: invokestatic  #31                 // Method com/sun/javafx/stage/StageHelper.initHelper:(Ljavafx/stage/Stage;)V
     101: return

  public final void setScene(javafx.scene.Scene);
    Code:
       0: invokestatic  #28                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: invokevirtual #29                 // Method com/sun/javafx/tk/Toolkit.checkFxUserThread:()V
       6: aload_0
       7: aload_1
       8: invokespecial #32                 // Method javafx/stage/Window.setScene:(Ljavafx/scene/Scene;)V
      11: return

  public final void show();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method javafx/stage/Window.show:()V
       4: return

  final void initSecurityDialog(boolean);
    Code:
       0: aload_0
       1: getfield      #34                 // Field hasBeenVisible:Z
       4: ifeq          17
       7: new           #35                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #36                 // String Cannot set securityDialog once stage has been set visible
      13: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iload_1
      19: putfield      #13                 // Field securityDialog:Z
      22: return

  final boolean isSecurityDialog();
    Code:
       0: aload_0
       1: getfield      #13                 // Field securityDialog:Z
       4: ireturn

  void setPrimary(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field primary:Z
       5: return

  boolean isPrimary();
    Code:
       0: aload_0
       1: getfield      #12                 // Field primary:Z
       4: ireturn

  void setImportant(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field important:Z
       5: return

  private boolean isImportant();
    Code:
       0: aload_0
       1: getfield      #14                 // Field important:Z
       4: ireturn

  public void showAndWait();
    Code:
       0: invokestatic  #28                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: invokevirtual #29                 // Method com/sun/javafx/tk/Toolkit.checkFxUserThread:()V
       6: aload_0
       7: invokevirtual #38                 // Method isPrimary:()Z
      10: ifeq          23
      13: new           #35                 // class java/lang/IllegalStateException
      16: dup
      17: ldc           #39                 // String Cannot call this method on primary stage
      19: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: invokevirtual #40                 // Method isShowing:()Z
      27: ifeq          40
      30: new           #35                 // class java/lang/IllegalStateException
      33: dup
      34: ldc           #41                 // String Stage already visible
      36: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: invokestatic  #28                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      43: invokevirtual #42                 // Method com/sun/javafx/tk/Toolkit.canStartNestedEventLoop:()Z
      46: ifne          59
      49: new           #35                 // class java/lang/IllegalStateException
      52: dup
      53: ldc           #43                 // String showAndWait is not allowed during animation or layout processing
      55: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: getstatic     #44                 // Field $assertionsDisabled:Z
      62: ifne          80
      65: aload_0
      66: getfield      #11                 // Field inNestedEventLoop:Z
      69: ifeq          80
      72: new           #45                 // class java/lang/AssertionError
      75: dup
      76: invokespecial #46                 // Method java/lang/AssertionError."<init>":()V
      79: athrow
      80: aload_0
      81: invokevirtual #47                 // Method show:()V
      84: aload_0
      85: iconst_1
      86: putfield      #11                 // Field inNestedEventLoop:Z
      89: invokestatic  #28                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      92: aload_0
      93: invokevirtual #48                 // Method com/sun/javafx/tk/Toolkit.enterNestedEventLoop:(Ljava/lang/Object;)Ljava/lang/Object;
      96: pop
      97: return

  public final void initStyle(javafx.stage.StageStyle);
    Code:
       0: aload_0
       1: getfield      #34                 // Field hasBeenVisible:Z
       4: ifeq          17
       7: new           #35                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #49                 // String Cannot set style once stage has been set visible
      13: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #50                 // Field style:Ljavafx/stage/StageStyle;
      22: return

  public final javafx.stage.StageStyle getStyle();
    Code:
       0: aload_0
       1: getfield      #50                 // Field style:Ljavafx/stage/StageStyle;
       4: areturn

  public final void initModality(javafx.stage.Modality);
    Code:
       0: aload_0
       1: getfield      #34                 // Field hasBeenVisible:Z
       4: ifeq          17
       7: new           #35                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #51                 // String Cannot set modality once stage has been set visible
      13: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #38                 // Method isPrimary:()Z
      21: ifeq          34
      24: new           #35                 // class java/lang/IllegalStateException
      27: dup
      28: ldc           #52                 // String Cannot set modality for the primary stage
      30: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: aload_1
      36: putfield      #16                 // Field modality:Ljavafx/stage/Modality;
      39: return

  public final javafx.stage.Modality getModality();
    Code:
       0: aload_0
       1: getfield      #16                 // Field modality:Ljavafx/stage/Modality;
       4: areturn

  public final void initOwner(javafx.stage.Window);
    Code:
       0: aload_0
       1: getfield      #34                 // Field hasBeenVisible:Z
       4: ifeq          17
       7: new           #35                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #53                 // String Cannot set owner once stage has been set visible
      13: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #38                 // Method isPrimary:()Z
      21: ifeq          34
      24: new           #35                 // class java/lang/IllegalStateException
      27: dup
      28: ldc           #54                 // String Cannot set owner for the primary stage
      30: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: aload_1
      36: putfield      #17                 // Field owner:Ljavafx/stage/Window;
      39: aload_0
      40: invokevirtual #55                 // Method getScene:()Ljavafx/scene/Scene;
      43: astore_2
      44: aload_2
      45: ifnull        52
      48: aload_2
      49: invokestatic  #56                 // Method com/sun/javafx/scene/SceneHelper.parentEffectiveOrientationInvalidated:(Ljavafx/scene/Scene;)V
      52: return

  public final javafx.stage.Window getOwner();
    Code:
       0: aload_0
       1: getfield      #17                 // Field owner:Ljavafx/stage/Window;
       4: areturn

  public final void setFullScreen(boolean);
    Code:
       0: invokestatic  #28                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: invokevirtual #29                 // Method com/sun/javafx/tk/Toolkit.checkFxUserThread:()V
       6: aload_0
       7: invokespecial #3                  // Method fullScreenPropertyImpl:()Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      10: iload_1
      11: invokevirtual #57                 // Method javafx/beans/property/ReadOnlyBooleanWrapper.set:(Z)V
      14: aload_0
      15: invokevirtual #58                 // Method getPeer:()Lcom/sun/javafx/tk/TKStage;
      18: ifnull        31
      21: aload_0
      22: invokevirtual #58                 // Method getPeer:()Lcom/sun/javafx/tk/TKStage;
      25: iload_1
      26: invokeinterface #59,  2           // InterfaceMethod com/sun/javafx/tk/TKStage.setFullScreen:(Z)V
      31: return

  public final boolean isFullScreen();
    Code:
       0: aload_0
       1: getfield      #60                 // Field fullScreen:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: ifnonnull     11
       7: iconst_0
       8: goto          18
      11: aload_0
      12: getfield      #60                 // Field fullScreen:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      15: invokevirtual #61                 // Method javafx/beans/property/ReadOnlyBooleanWrapper.get:()Z
      18: ireturn

  public final javafx.beans.property.ReadOnlyBooleanProperty fullScreenProperty();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method fullScreenPropertyImpl:()Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: invokevirtual #62                 // Method javafx/beans/property/ReadOnlyBooleanWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyBooleanProperty;
       7: areturn

  private javafx.beans.property.ReadOnlyBooleanWrapper fullScreenPropertyImpl();
    Code:
       0: aload_0
       1: getfield      #60                 // Field fullScreen:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: ifnonnull     21
       7: aload_0
       8: new           #63                 // class javafx/beans/property/ReadOnlyBooleanWrapper
      11: dup
      12: aload_0
      13: ldc           #64                 // String fullScreen
      15: invokespecial #65                 // Method javafx/beans/property/ReadOnlyBooleanWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      18: putfield      #60                 // Field fullScreen:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      21: aload_0
      22: getfield      #60                 // Field fullScreen:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      25: areturn

  public final javafx.collections.ObservableList<javafx.scene.image.Image> getIcons();
    Code:
       0: aload_0
       1: getfield      #1                  // Field icons:Ljavafx/collections/ObservableList;
       4: areturn

  public final void setTitle(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method titleProperty:()Ljavafx/beans/property/StringProperty;
       4: aload_1
       5: invokevirtual #67                 // Method javafx/beans/property/StringProperty.set:(Ljava/lang/Object;)V
       8: return

  public final java.lang.String getTitle();
    Code:
       0: aload_0
       1: getfield      #68                 // Field title:Ljavafx/beans/property/StringProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #68                 // Field title:Ljavafx/beans/property/StringProperty;
      15: invokevirtual #69                 // Method javafx/beans/property/StringProperty.get:()Ljava/lang/Object;
      18: checkcast     #70                 // class java/lang/String
      21: areturn

  public final javafx.beans.property.StringProperty titleProperty();
    Code:
       0: aload_0
       1: getfield      #68                 // Field title:Ljavafx/beans/property/StringProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #71                 // class javafx/stage/Stage$5
      11: dup
      12: aload_0
      13: invokespecial #72                 // Method javafx/stage/Stage$5."<init>":(Ljavafx/stage/Stage;)V
      16: putfield      #68                 // Field title:Ljavafx/beans/property/StringProperty;
      19: aload_0
      20: getfield      #68                 // Field title:Ljavafx/beans/property/StringProperty;
      23: areturn

  public final void setIconified(boolean);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method iconifiedPropertyImpl:()Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: iload_1
       5: invokevirtual #57                 // Method javafx/beans/property/ReadOnlyBooleanWrapper.set:(Z)V
       8: aload_0
       9: invokevirtual #58                 // Method getPeer:()Lcom/sun/javafx/tk/TKStage;
      12: ifnull        25
      15: aload_0
      16: invokevirtual #58                 // Method getPeer:()Lcom/sun/javafx/tk/TKStage;
      19: iload_1
      20: invokeinterface #73,  2           // InterfaceMethod com/sun/javafx/tk/TKStage.setIconified:(Z)V
      25: return

  public final boolean isIconified();
    Code:
       0: aload_0
       1: getfield      #74                 // Field iconified:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: ifnonnull     11
       7: iconst_0
       8: goto          18
      11: aload_0
      12: getfield      #74                 // Field iconified:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      15: invokevirtual #61                 // Method javafx/beans/property/ReadOnlyBooleanWrapper.get:()Z
      18: ireturn

  public final javafx.beans.property.ReadOnlyBooleanProperty iconifiedProperty();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method iconifiedPropertyImpl:()Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: invokevirtual #62                 // Method javafx/beans/property/ReadOnlyBooleanWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyBooleanProperty;
       7: areturn

  private final javafx.beans.property.ReadOnlyBooleanWrapper iconifiedPropertyImpl();
    Code:
       0: aload_0
       1: getfield      #74                 // Field iconified:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: ifnonnull     21
       7: aload_0
       8: new           #63                 // class javafx/beans/property/ReadOnlyBooleanWrapper
      11: dup
      12: aload_0
      13: ldc           #75                 // String iconified
      15: invokespecial #65                 // Method javafx/beans/property/ReadOnlyBooleanWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      18: putfield      #74                 // Field iconified:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      21: aload_0
      22: getfield      #74                 // Field iconified:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      25: areturn

  public final void setMaximized(boolean);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method maximizedPropertyImpl:()Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: iload_1
       5: invokevirtual #57                 // Method javafx/beans/property/ReadOnlyBooleanWrapper.set:(Z)V
       8: aload_0
       9: invokevirtual #58                 // Method getPeer:()Lcom/sun/javafx/tk/TKStage;
      12: ifnull        25
      15: aload_0
      16: invokevirtual #58                 // Method getPeer:()Lcom/sun/javafx/tk/TKStage;
      19: iload_1
      20: invokeinterface #76,  2           // InterfaceMethod com/sun/javafx/tk/TKStage.setMaximized:(Z)V
      25: return

  public final boolean isMaximized();
    Code:
       0: aload_0
       1: getfield      #77                 // Field maximized:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: ifnonnull     11
       7: iconst_0
       8: goto          18
      11: aload_0
      12: getfield      #77                 // Field maximized:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      15: invokevirtual #61                 // Method javafx/beans/property/ReadOnlyBooleanWrapper.get:()Z
      18: ireturn

  public final javafx.beans.property.ReadOnlyBooleanProperty maximizedProperty();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method maximizedPropertyImpl:()Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: invokevirtual #62                 // Method javafx/beans/property/ReadOnlyBooleanWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyBooleanProperty;
       7: areturn

  private final javafx.beans.property.ReadOnlyBooleanWrapper maximizedPropertyImpl();
    Code:
       0: aload_0
       1: getfield      #77                 // Field maximized:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: ifnonnull     21
       7: aload_0
       8: new           #63                 // class javafx/beans/property/ReadOnlyBooleanWrapper
      11: dup
      12: aload_0
      13: ldc           #78                 // String maximized
      15: invokespecial #65                 // Method javafx/beans/property/ReadOnlyBooleanWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      18: putfield      #77                 // Field maximized:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      21: aload_0
      22: getfield      #77                 // Field maximized:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      25: areturn

  public final void setAlwaysOnTop(boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method alwaysOnTopPropertyImpl:()Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: iload_1
       5: invokevirtual #57                 // Method javafx/beans/property/ReadOnlyBooleanWrapper.set:(Z)V
       8: aload_0
       9: invokevirtual #58                 // Method getPeer:()Lcom/sun/javafx/tk/TKStage;
      12: ifnull        25
      15: aload_0
      16: invokevirtual #58                 // Method getPeer:()Lcom/sun/javafx/tk/TKStage;
      19: iload_1
      20: invokeinterface #79,  2           // InterfaceMethod com/sun/javafx/tk/TKStage.setAlwaysOnTop:(Z)V
      25: return

  public final boolean isAlwaysOnTop();
    Code:
       0: aload_0
       1: getfield      #80                 // Field alwaysOnTop:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: ifnonnull     11
       7: iconst_0
       8: goto          18
      11: aload_0
      12: getfield      #80                 // Field alwaysOnTop:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      15: invokevirtual #61                 // Method javafx/beans/property/ReadOnlyBooleanWrapper.get:()Z
      18: ireturn

  public final javafx.beans.property.ReadOnlyBooleanProperty alwaysOnTopProperty();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method alwaysOnTopPropertyImpl:()Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: invokevirtual #62                 // Method javafx/beans/property/ReadOnlyBooleanWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyBooleanProperty;
       7: areturn

  private javafx.beans.property.ReadOnlyBooleanWrapper alwaysOnTopPropertyImpl();
    Code:
       0: aload_0
       1: getfield      #80                 // Field alwaysOnTop:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: ifnonnull     21
       7: aload_0
       8: new           #63                 // class javafx/beans/property/ReadOnlyBooleanWrapper
      11: dup
      12: aload_0
      13: ldc           #81                 // String alwaysOnTop
      15: invokespecial #65                 // Method javafx/beans/property/ReadOnlyBooleanWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      18: putfield      #80                 // Field alwaysOnTop:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      21: aload_0
      22: getfield      #80                 // Field alwaysOnTop:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      25: areturn

  public final void setResizable(boolean);
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method resizableProperty:()Ljavafx/beans/property/BooleanProperty;
       4: iload_1
       5: invokevirtual #83                 // Method javafx/beans/property/BooleanProperty.set:(Z)V
       8: return

  public final boolean isResizable();
    Code:
       0: aload_0
       1: getfield      #84                 // Field resizable:Ljavafx/beans/property/BooleanProperty;
       4: ifnonnull     11
       7: iconst_1
       8: goto          18
      11: aload_0
      12: getfield      #84                 // Field resizable:Ljavafx/beans/property/BooleanProperty;
      15: invokevirtual #85                 // Method javafx/beans/property/BooleanProperty.get:()Z
      18: ireturn

  public final javafx.beans.property.BooleanProperty resizableProperty();
    Code:
       0: aload_0
       1: getfield      #84                 // Field resizable:Ljavafx/beans/property/BooleanProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #86                 // class javafx/stage/Stage$ResizableProperty
      11: dup
      12: aload_0
      13: invokespecial #87                 // Method javafx/stage/Stage$ResizableProperty."<init>":(Ljavafx/stage/Stage;)V
      16: putfield      #84                 // Field resizable:Ljavafx/beans/property/BooleanProperty;
      19: aload_0
      20: getfield      #84                 // Field resizable:Ljavafx/beans/property/BooleanProperty;
      23: areturn

  public final void setMinWidth(double);
    Code:
       0: aload_0
       1: invokevirtual #88                 // Method minWidthProperty:()Ljavafx/beans/property/DoubleProperty;
       4: dload_1
       5: invokevirtual #89                 // Method javafx/beans/property/DoubleProperty.set:(D)V
       8: return

  public final double getMinWidth();
    Code:
       0: aload_0
       1: getfield      #90                 // Field minWidth:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     11
       7: dconst_0
       8: goto          18
      11: aload_0
      12: getfield      #90                 // Field minWidth:Ljavafx/beans/property/DoubleProperty;
      15: invokevirtual #91                 // Method javafx/beans/property/DoubleProperty.get:()D
      18: dreturn

  public final javafx.beans.property.DoubleProperty minWidthProperty();
    Code:
       0: aload_0
       1: getfield      #90                 // Field minWidth:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #92                 // class javafx/stage/Stage$6
      11: dup
      12: aload_0
      13: dconst_0
      14: invokespecial #93                 // Method javafx/stage/Stage$6."<init>":(Ljavafx/stage/Stage;D)V
      17: putfield      #90                 // Field minWidth:Ljavafx/beans/property/DoubleProperty;
      20: aload_0
      21: getfield      #90                 // Field minWidth:Ljavafx/beans/property/DoubleProperty;
      24: areturn

  public final void setMinHeight(double);
    Code:
       0: aload_0
       1: invokevirtual #94                 // Method minHeightProperty:()Ljavafx/beans/property/DoubleProperty;
       4: dload_1
       5: invokevirtual #89                 // Method javafx/beans/property/DoubleProperty.set:(D)V
       8: return

  public final double getMinHeight();
    Code:
       0: aload_0
       1: getfield      #95                 // Field minHeight:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     11
       7: dconst_0
       8: goto          18
      11: aload_0
      12: getfield      #95                 // Field minHeight:Ljavafx/beans/property/DoubleProperty;
      15: invokevirtual #91                 // Method javafx/beans/property/DoubleProperty.get:()D
      18: dreturn

  public final javafx.beans.property.DoubleProperty minHeightProperty();
    Code:
       0: aload_0
       1: getfield      #95                 // Field minHeight:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #96                 // class javafx/stage/Stage$7
      11: dup
      12: aload_0
      13: dconst_0
      14: invokespecial #97                 // Method javafx/stage/Stage$7."<init>":(Ljavafx/stage/Stage;D)V
      17: putfield      #95                 // Field minHeight:Ljavafx/beans/property/DoubleProperty;
      20: aload_0
      21: getfield      #95                 // Field minHeight:Ljavafx/beans/property/DoubleProperty;
      24: areturn

  public final void setMaxWidth(double);
    Code:
       0: aload_0
       1: invokevirtual #98                 // Method maxWidthProperty:()Ljavafx/beans/property/DoubleProperty;
       4: dload_1
       5: invokevirtual #89                 // Method javafx/beans/property/DoubleProperty.set:(D)V
       8: return

  public final double getMaxWidth();
    Code:
       0: aload_0
       1: getfield      #99                 // Field maxWidth:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     13
       7: ldc2_w        #101                // double 1.7976931348623157E308d
      10: goto          20
      13: aload_0
      14: getfield      #99                 // Field maxWidth:Ljavafx/beans/property/DoubleProperty;
      17: invokevirtual #91                 // Method javafx/beans/property/DoubleProperty.get:()D
      20: dreturn

  public final javafx.beans.property.DoubleProperty maxWidthProperty();
    Code:
       0: aload_0
       1: getfield      #99                 // Field maxWidth:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     22
       7: aload_0
       8: new           #103                // class javafx/stage/Stage$8
      11: dup
      12: aload_0
      13: ldc2_w        #101                // double 1.7976931348623157E308d
      16: invokespecial #104                // Method javafx/stage/Stage$8."<init>":(Ljavafx/stage/Stage;D)V
      19: putfield      #99                 // Field maxWidth:Ljavafx/beans/property/DoubleProperty;
      22: aload_0
      23: getfield      #99                 // Field maxWidth:Ljavafx/beans/property/DoubleProperty;
      26: areturn

  public final void setMaxHeight(double);
    Code:
       0: aload_0
       1: invokevirtual #105                // Method maxHeightProperty:()Ljavafx/beans/property/DoubleProperty;
       4: dload_1
       5: invokevirtual #89                 // Method javafx/beans/property/DoubleProperty.set:(D)V
       8: return

  public final double getMaxHeight();
    Code:
       0: aload_0
       1: getfield      #106                // Field maxHeight:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     13
       7: ldc2_w        #101                // double 1.7976931348623157E308d
      10: goto          20
      13: aload_0
      14: getfield      #106                // Field maxHeight:Ljavafx/beans/property/DoubleProperty;
      17: invokevirtual #91                 // Method javafx/beans/property/DoubleProperty.get:()D
      20: dreturn

  public final javafx.beans.property.DoubleProperty maxHeightProperty();
    Code:
       0: aload_0
       1: getfield      #106                // Field maxHeight:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     22
       7: aload_0
       8: new           #107                // class javafx/stage/Stage$9
      11: dup
      12: aload_0
      13: ldc2_w        #101                // double 1.7976931348623157E308d
      16: invokespecial #108                // Method javafx/stage/Stage$9."<init>":(Ljavafx/stage/Stage;D)V
      19: putfield      #106                // Field maxHeight:Ljavafx/beans/property/DoubleProperty;
      22: aload_0
      23: getfield      #106                // Field maxHeight:Ljavafx/beans/property/DoubleProperty;
      26: areturn

  private void doVisibleChanging(boolean);
    Code:
       0: invokestatic  #28                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: astore_2
       4: iload_1
       5: ifeq          201
       8: aload_0
       9: invokevirtual #58                 // Method getPeer:()Lcom/sun/javafx/tk/TKStage;
      12: ifnonnull     201
      15: aload_0
      16: invokevirtual #109                // Method getOwner:()Ljavafx/stage/Window;
      19: astore_3
      20: aload_3
      21: ifnonnull     28
      24: aconst_null
      25: goto          32
      28: aload_3
      29: invokevirtual #110                // Method javafx/stage/Window.getPeer:()Lcom/sun/javafx/tk/TKStage;
      32: astore        4
      34: aload_0
      35: invokevirtual #55                 // Method getScene:()Ljavafx/scene/Scene;
      38: astore        5
      40: aload         5
      42: ifnull        60
      45: aload         5
      47: invokevirtual #111                // Method javafx/scene/Scene.getEffectiveNodeOrientation:()Ljavafx/geometry/NodeOrientation;
      50: getstatic     #112                // Field javafx/geometry/NodeOrientation.RIGHT_TO_LEFT:Ljavafx/geometry/NodeOrientation;
      53: if_acmpne     60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: istore        6
      63: aload_0
      64: invokevirtual #113                // Method getStyle:()Ljavafx/stage/StageStyle;
      67: astore        7
      69: aload         7
      71: getstatic     #114                // Field javafx/stage/StageStyle.TRANSPARENT:Ljavafx/stage/StageStyle;
      74: if_acmpne     105
      77: invokestatic  #115                // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
      80: astore        8
      82: aload         8
      84: ifnull        105
      87: aload         8
      89: getstatic     #116                // Field com/sun/javafx/FXPermissions.CREATE_TRANSPARENT_WINDOW_PERMISSION:Ljavafx/util/FXPermission;
      92: invokevirtual #117                // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      95: goto          105
      98: astore        9
     100: getstatic     #119                // Field javafx/stage/StageStyle.UNDECORATED:Ljavafx/stage/StageStyle;
     103: astore        7
     105: aload_0
     106: aload_2
     107: aload_0
     108: aload_0
     109: invokevirtual #120                // Method isSecurityDialog:()Z
     112: aload         7
     114: aload_0
     115: invokevirtual #38                 // Method isPrimary:()Z
     118: aload_0
     119: invokevirtual #121                // Method getModality:()Ljavafx/stage/Modality;
     122: aload         4
     124: iload         6
     126: aload_0
     127: getfield      #122                // Field acc:Ljava/security/AccessControlContext;
     130: invokevirtual #123                // Method com/sun/javafx/tk/Toolkit.createTKStage:(Ljavafx/stage/Window;ZLjavafx/stage/StageStyle;ZLjavafx/stage/Modality;Lcom/sun/javafx/tk/TKStage;ZLjava/security/AccessControlContext;)Lcom/sun/javafx/tk/TKStage;
     133: invokevirtual #124                // Method setPeer:(Lcom/sun/javafx/tk/TKStage;)V
     136: aload_0
     137: invokevirtual #58                 // Method getPeer:()Lcom/sun/javafx/tk/TKStage;
     140: aload_0
     141: invokevirtual #125                // Method getMinWidth:()D
     144: invokestatic  #126                // Method java/lang/Math.ceil:(D)D
     147: d2i
     148: aload_0
     149: invokevirtual #127                // Method getMinHeight:()D
     152: invokestatic  #126                // Method java/lang/Math.ceil:(D)D
     155: d2i
     156: invokeinterface #128,  3          // InterfaceMethod com/sun/javafx/tk/TKStage.setMinimumSize:(II)V
     161: aload_0
     162: invokevirtual #58                 // Method getPeer:()Lcom/sun/javafx/tk/TKStage;
     165: aload_0
     166: invokevirtual #129                // Method getMaxWidth:()D
     169: invokestatic  #130                // Method java/lang/Math.floor:(D)D
     172: d2i
     173: aload_0
     174: invokevirtual #131                // Method getMaxHeight:()D
     177: invokestatic  #130                // Method java/lang/Math.floor:(D)D
     180: d2i
     181: invokeinterface #132,  3          // InterfaceMethod com/sun/javafx/tk/TKStage.setMaximumSize:(II)V
     186: aload_0
     187: new           #133                // class com/sun/javafx/stage/StagePeerListener
     190: dup
     191: aload_0
     192: getstatic     #134                // Field STAGE_ACCESSOR:Lcom/sun/javafx/stage/StagePeerListener$StageAccessor;
     195: invokespecial #135                // Method com/sun/javafx/stage/StagePeerListener."<init>":(Ljavafx/stage/Stage;Lcom/sun/javafx/stage/StagePeerListener$StageAccessor;)V
     198: invokevirtual #136                // Method setPeerListener:(Lcom/sun/javafx/stage/WindowPeerListener;)V
     201: return
    Exception table:
       from    to  target type
          87    95    98   Class java/lang/SecurityException

  private void doVisibleChanged(boolean);
    Code:
       0: iload_1
       1: ifeq          151
       4: aload_0
       5: invokevirtual #58                 // Method getPeer:()Lcom/sun/javafx/tk/TKStage;
       8: astore_2
       9: aload_2
      10: aload_0
      11: invokespecial #137                // Method isImportant:()Z
      14: invokeinterface #138,  2          // InterfaceMethod com/sun/javafx/tk/TKStage.setImportant:(Z)V
      19: aload_2
      20: aload_0
      21: invokevirtual #139                // Method isResizable:()Z
      24: invokeinterface #140,  2          // InterfaceMethod com/sun/javafx/tk/TKStage.setResizable:(Z)V
      29: aload_2
      30: aload_0
      31: invokevirtual #141                // Method isFullScreen:()Z
      34: invokeinterface #59,  2           // InterfaceMethod com/sun/javafx/tk/TKStage.setFullScreen:(Z)V
      39: aload_2
      40: aload_0
      41: invokevirtual #142                // Method isAlwaysOnTop:()Z
      44: invokeinterface #79,  2           // InterfaceMethod com/sun/javafx/tk/TKStage.setAlwaysOnTop:(Z)V
      49: aload_2
      50: aload_0
      51: invokevirtual #143                // Method isIconified:()Z
      54: invokeinterface #73,  2           // InterfaceMethod com/sun/javafx/tk/TKStage.setIconified:(Z)V
      59: aload_2
      60: aload_0
      61: invokevirtual #144                // Method isMaximized:()Z
      64: invokeinterface #76,  2           // InterfaceMethod com/sun/javafx/tk/TKStage.setMaximized:(Z)V
      69: aload_2
      70: aload_0
      71: invokevirtual #145                // Method getTitle:()Ljava/lang/String;
      74: invokeinterface #146,  2          // InterfaceMethod com/sun/javafx/tk/TKStage.setTitle:(Ljava/lang/String;)V
      79: new           #147                // class java/util/ArrayList
      82: dup
      83: invokespecial #148                // Method java/util/ArrayList."<init>":()V
      86: astore_3
      87: aload_0
      88: getfield      #1                  // Field icons:Ljavafx/collections/ObservableList;
      91: invokeinterface #149,  1          // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
      96: astore        4
      98: aload         4
     100: invokeinterface #150,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     105: ifeq          140
     108: aload         4
     110: invokeinterface #151,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     115: checkcast     #152                // class javafx/scene/image/Image
     118: astore        5
     120: aload_3
     121: invokestatic  #153                // Method com/sun/javafx/tk/Toolkit.getImageAccessor:()Lcom/sun/javafx/tk/Toolkit$ImageAccessor;
     124: aload         5
     126: invokeinterface #154,  2          // InterfaceMethod com/sun/javafx/tk/Toolkit$ImageAccessor.getPlatformImage:(Ljavafx/scene/image/Image;)Ljava/lang/Object;
     131: invokeinterface #155,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     136: pop
     137: goto          98
     140: aload_2
     141: ifnull        151
     144: aload_2
     145: aload_3
     146: invokeinterface #156,  2          // InterfaceMethod com/sun/javafx/tk/TKStage.setIcons:(Ljava/util/List;)V
     151: iload_1
     152: ifne          175
     155: aload_0
     156: getfield      #11                 // Field inNestedEventLoop:Z
     159: ifeq          175
     162: aload_0
     163: iconst_0
     164: putfield      #11                 // Field inNestedEventLoop:Z
     167: invokestatic  #28                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
     170: aload_0
     171: aconst_null
     172: invokevirtual #157                // Method com/sun/javafx/tk/Toolkit.exitNestedEventLoop:(Ljava/lang/Object;Ljava/lang/Object;)V
     175: return

  public void toFront();
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method getPeer:()Lcom/sun/javafx/tk/TKStage;
       4: ifnull        16
       7: aload_0
       8: invokevirtual #58                 // Method getPeer:()Lcom/sun/javafx/tk/TKStage;
      11: invokeinterface #158,  1          // InterfaceMethod com/sun/javafx/tk/TKStage.toFront:()V
      16: return

  public void toBack();
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method getPeer:()Lcom/sun/javafx/tk/TKStage;
       4: ifnull        16
       7: aload_0
       8: invokevirtual #58                 // Method getPeer:()Lcom/sun/javafx/tk/TKStage;
      11: invokeinterface #159,  1          // InterfaceMethod com/sun/javafx/tk/TKStage.toBack:()V
      16: return

  public void close();
    Code:
       0: aload_0
       1: invokevirtual #160                // Method hide:()V
       4: return

  javafx.stage.Window getWindowOwner();
    Code:
       0: aload_0
       1: invokevirtual #109                // Method getOwner:()Ljavafx/stage/Window;
       4: areturn

  public final void setFullScreenExitKeyCombination(javafx.scene.input.KeyCombination);
    Code:
       0: aload_0
       1: getfield      #25                 // Field fullScreenExitCombination:Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #161                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.scene.input.KeyCombination getFullScreenExitKeyCombination();
    Code:
       0: aload_0
       1: getfield      #25                 // Field fullScreenExitCombination:Ljavafx/beans/property/ObjectProperty;
       4: invokevirtual #162                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
       7: checkcast     #163                // class javafx/scene/input/KeyCombination
      10: areturn

  public final javafx.beans.property.ObjectProperty<javafx.scene.input.KeyCombination> fullScreenExitKeyProperty();
    Code:
       0: aload_0
       1: getfield      #25                 // Field fullScreenExitCombination:Ljavafx/beans/property/ObjectProperty;
       4: areturn

  public final void setFullScreenExitHint(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #27                 // Field fullScreenExitHint:Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #161                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final java.lang.String getFullScreenExitHint();
    Code:
       0: aload_0
       1: getfield      #27                 // Field fullScreenExitHint:Ljavafx/beans/property/ObjectProperty;
       4: invokevirtual #162                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
       7: checkcast     #70                 // class java/lang/String
      10: areturn

  public final javafx.beans.property.ObjectProperty<java.lang.String> fullScreenExitHintProperty();
    Code:
       0: aload_0
       1: getfield      #27                 // Field fullScreenExitHint:Ljavafx/beans/property/ObjectProperty;
       4: areturn

  static void access$000(javafx.stage.Stage, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #7                  // Method doVisibleChanging:(Z)V
       5: return

  static void access$100(javafx.stage.Stage, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #6                  // Method doVisibleChanged:(Z)V
       5: return

  static javafx.beans.property.ReadOnlyBooleanWrapper access$200(javafx.stage.Stage);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method iconifiedPropertyImpl:()Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: areturn

  static javafx.beans.property.ReadOnlyBooleanWrapper access$300(javafx.stage.Stage);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method maximizedPropertyImpl:()Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: areturn

  static javafx.beans.property.ReadOnlyBooleanWrapper access$400(javafx.stage.Stage);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method fullScreenPropertyImpl:()Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: areturn

  static javafx.beans.property.ReadOnlyBooleanWrapper access$500(javafx.stage.Stage);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method alwaysOnTopPropertyImpl:()Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: areturn

  static javafx.collections.ObservableList access$600(javafx.stage.Stage);
    Code:
       0: aload_0
       1: getfield      #1                  // Field icons:Ljavafx/collections/ObservableList;
       4: areturn

  static {};
    Code:
       0: ldc           #164                // class javafx/stage/Stage
       2: invokevirtual #165                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #44                 // Field $assertionsDisabled:Z
      16: new           #166                // class javafx/stage/Stage$1
      19: dup
      20: invokespecial #167                // Method javafx/stage/Stage$1."<init>":()V
      23: invokestatic  #168                // Method com/sun/javafx/stage/StageHelper.setStageAccessor:(Lcom/sun/javafx/stage/StageHelper$StageAccessor;)V
      26: new           #169                // class javafx/stage/Stage$2
      29: dup
      30: invokespecial #170                // Method javafx/stage/Stage$2."<init>":()V
      33: putstatic     #134                // Field STAGE_ACCESSOR:Lcom/sun/javafx/stage/StagePeerListener$StageAccessor;
      36: return
}
