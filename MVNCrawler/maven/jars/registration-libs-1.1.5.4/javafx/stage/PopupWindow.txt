Compiled from "PopupWindow.java"
public abstract class javafx.stage.PopupWindow extends javafx.stage.Window {
  private final java.util.List<javafx.stage.PopupWindow> children;

  private final javafx.beans.InvalidationListener popupWindowUpdater;

  private javafx.beans.value.ChangeListener<java.lang.Boolean> changeListener;

  private javafx.beans.value.WeakChangeListener<java.lang.Boolean> weakOwnerNodeListener;

  private javafx.beans.property.ReadOnlyObjectWrapper<javafx.stage.Window> ownerWindow;

  private javafx.beans.property.ReadOnlyObjectWrapper<javafx.scene.Node> ownerNode;

  private javafx.beans.property.BooleanProperty autoFix;

  private javafx.beans.property.BooleanProperty autoHide;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<javafx.event.Event>> onAutoHide;

  private javafx.beans.property.BooleanProperty hideOnEscape;

  private javafx.beans.property.BooleanProperty consumeAutoHidingEvents;

  private javafx.stage.Window rootWindow;

  private final javafx.beans.property.ReadOnlyDoubleWrapper anchorX;

  private final javafx.beans.property.ReadOnlyDoubleWrapper anchorY;

  private final javafx.beans.property.ObjectProperty<javafx.stage.PopupWindow$AnchorLocation> anchorLocation;

  private javafx.geometry.Bounds cachedExtendedBounds;

  private javafx.geometry.Bounds cachedAnchorBounds;

  private javafx.beans.value.ChangeListener<java.lang.Boolean> ownerFocusedListener;

  private boolean autofixActive;

  private boolean autohideActive;

  public javafx.stage.PopupWindow();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method javafx/stage/Window."<init>":()V
       4: aload_0
       5: new           #12                 // class java/util/ArrayList
       8: dup
       9: invokespecial #13                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #14                 // Field children:Ljava/util/List;
      15: aload_0
      16: new           #15                 // class javafx/stage/PopupWindow$2
      19: dup
      20: aload_0
      21: invokespecial #16                 // Method javafx/stage/PopupWindow$2."<init>":(Ljavafx/stage/PopupWindow;)V
      24: putfield      #5                  // Field popupWindowUpdater:Ljavafx/beans/InvalidationListener;
      27: aload_0
      28: aload_0
      29: invokedynamic #17,  0             // InvokeDynamic #0:changed:(Ljavafx/stage/PopupWindow;)Ljavafx/beans/value/ChangeListener;
      34: putfield      #18                 // Field changeListener:Ljavafx/beans/value/ChangeListener;
      37: aload_0
      38: new           #19                 // class javafx/beans/value/WeakChangeListener
      41: dup
      42: aload_0
      43: getfield      #18                 // Field changeListener:Ljavafx/beans/value/ChangeListener;
      46: invokespecial #20                 // Method javafx/beans/value/WeakChangeListener."<init>":(Ljavafx/beans/value/ChangeListener;)V
      49: putfield      #21                 // Field weakOwnerNodeListener:Ljavafx/beans/value/WeakChangeListener;
      52: aload_0
      53: new           #22                 // class javafx/beans/property/ReadOnlyObjectWrapper
      56: dup
      57: aload_0
      58: ldc           #23                 // String ownerWindow
      60: invokespecial #24                 // Method javafx/beans/property/ReadOnlyObjectWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      63: putfield      #25                 // Field ownerWindow:Ljavafx/beans/property/ReadOnlyObjectWrapper;
      66: aload_0
      67: new           #22                 // class javafx/beans/property/ReadOnlyObjectWrapper
      70: dup
      71: aload_0
      72: ldc           #26                 // String ownerNode
      74: invokespecial #24                 // Method javafx/beans/property/ReadOnlyObjectWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      77: putfield      #27                 // Field ownerNode:Ljavafx/beans/property/ReadOnlyObjectWrapper;
      80: aload_0
      81: new           #28                 // class javafx/stage/PopupWindow$4
      84: dup
      85: aload_0
      86: iconst_1
      87: invokespecial #29                 // Method javafx/stage/PopupWindow$4."<init>":(Ljavafx/stage/PopupWindow;Z)V
      90: putfield      #30                 // Field autoFix:Ljavafx/beans/property/BooleanProperty;
      93: aload_0
      94: new           #31                 // class javafx/stage/PopupWindow$5
      97: dup
      98: aload_0
      99: invokespecial #32                 // Method javafx/stage/PopupWindow$5."<init>":(Ljavafx/stage/PopupWindow;)V
     102: putfield      #33                 // Field autoHide:Ljavafx/beans/property/BooleanProperty;
     105: aload_0
     106: new           #34                 // class javafx/beans/property/SimpleObjectProperty
     109: dup
     110: aload_0
     111: ldc           #35                 // String onAutoHide
     113: invokespecial #36                 // Method javafx/beans/property/SimpleObjectProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
     116: putfield      #37                 // Field onAutoHide:Ljavafx/beans/property/ObjectProperty;
     119: aload_0
     120: new           #38                 // class javafx/beans/property/SimpleBooleanProperty
     123: dup
     124: aload_0
     125: ldc           #39                 // String hideOnEscape
     127: iconst_1
     128: invokespecial #40                 // Method javafx/beans/property/SimpleBooleanProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;Z)V
     131: putfield      #41                 // Field hideOnEscape:Ljavafx/beans/property/BooleanProperty;
     134: aload_0
     135: new           #38                 // class javafx/beans/property/SimpleBooleanProperty
     138: dup
     139: aload_0
     140: ldc           #42                 // String consumeAutoHidingEvents
     142: iconst_1
     143: invokespecial #40                 // Method javafx/beans/property/SimpleBooleanProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;Z)V
     146: putfield      #43                 // Field consumeAutoHidingEvents:Ljavafx/beans/property/BooleanProperty;
     149: aload_0
     150: new           #44                 // class javafx/beans/property/ReadOnlyDoubleWrapper
     153: dup
     154: aload_0
     155: ldc           #45                 // String anchorX
     157: ldc2_w        #47                 // double NaNd
     160: invokespecial #49                 // Method javafx/beans/property/ReadOnlyDoubleWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;D)V
     163: putfield      #50                 // Field anchorX:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
     166: aload_0
     167: new           #44                 // class javafx/beans/property/ReadOnlyDoubleWrapper
     170: dup
     171: aload_0
     172: ldc           #51                 // String anchorY
     174: ldc2_w        #47                 // double NaNd
     177: invokespecial #49                 // Method javafx/beans/property/ReadOnlyDoubleWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;D)V
     180: putfield      #52                 // Field anchorY:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
     183: aload_0
     184: new           #53                 // class javafx/stage/PopupWindow$6
     187: dup
     188: aload_0
     189: getstatic     #54                 // Field javafx/stage/PopupWindow$AnchorLocation.WINDOW_TOP_LEFT:Ljavafx/stage/PopupWindow$AnchorLocation;
     192: invokespecial #55                 // Method javafx/stage/PopupWindow$6."<init>":(Ljavafx/stage/PopupWindow;Ljavafx/stage/PopupWindow$AnchorLocation;)V
     195: putfield      #56                 // Field anchorLocation:Ljavafx/beans/property/ObjectProperty;
     198: new           #57                 // class javafx/scene/layout/Pane
     201: dup
     202: invokespecial #58                 // Method javafx/scene/layout/Pane."<init>":()V
     205: astore_1
     206: aload_1
     207: getstatic     #59                 // Field javafx/scene/layout/Background.EMPTY:Ljavafx/scene/layout/Background;
     210: invokevirtual #60                 // Method javafx/scene/layout/Pane.setBackground:(Ljavafx/scene/layout/Background;)V
     213: aload_1
     214: invokevirtual #61                 // Method javafx/scene/layout/Pane.getStyleClass:()Ljavafx/collections/ObservableList;
     217: ldc           #62                 // String popup
     219: invokeinterface #63,  2           // InterfaceMethod javafx/collections/ObservableList.add:(Ljava/lang/Object;)Z
     224: pop
     225: aload_1
     226: invokestatic  #64                 // Method com/sun/javafx/scene/SceneHelper.createPopupScene:(Ljavafx/scene/Parent;)Ljavafx/scene/Scene;
     229: astore_2
     230: aload_2
     231: aconst_null
     232: invokevirtual #65                 // Method javafx/scene/Scene.setFill:(Ljavafx/scene/paint/Paint;)V
     235: aload_0
     236: aload_2
     237: invokespecial #66                 // Method javafx/stage/Window.setScene:(Ljavafx/scene/Scene;)V
     240: aload_1
     241: invokevirtual #67                 // Method javafx/scene/layout/Pane.layoutBoundsProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
     244: aload_0
     245: getfield      #5                  // Field popupWindowUpdater:Ljavafx/beans/InvalidationListener;
     248: invokevirtual #68                 // Method javafx/beans/property/ReadOnlyObjectProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
     251: aload_1
     252: invokevirtual #69                 // Method javafx/scene/layout/Pane.boundsInLocalProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
     255: aload_0
     256: getfield      #5                  // Field popupWindowUpdater:Ljavafx/beans/InvalidationListener;
     259: invokevirtual #68                 // Method javafx/beans/property/ReadOnlyObjectProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
     262: aload_2
     263: invokevirtual #70                 // Method javafx/scene/Scene.rootProperty:()Ljavafx/beans/property/ObjectProperty;
     266: new           #71                 // class javafx/stage/PopupWindow$3
     269: dup
     270: aload_0
     271: aload_2
     272: invokespecial #72                 // Method javafx/stage/PopupWindow$3."<init>":(Ljavafx/stage/PopupWindow;Ljavafx/scene/Scene;)V
     275: invokevirtual #73                 // Method javafx/beans/property/ObjectProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
     278: aload_0
     279: invokestatic  #74                 // Method com/sun/javafx/stage/PopupWindowHelper.initHelper:(Ljavafx/stage/PopupWindow;)V
     282: return

  javafx.collections.ObservableList<javafx.scene.Node> getContent();
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method getScene:()Ljavafx/scene/Scene;
       4: invokevirtual #76                 // Method javafx/scene/Scene.getRoot:()Ljavafx/scene/Parent;
       7: astore_1
       8: aload_1
       9: instanceof    #77                 // class javafx/scene/Group
      12: ifeq          23
      15: aload_1
      16: checkcast     #77                 // class javafx/scene/Group
      19: invokevirtual #78                 // Method javafx/scene/Group.getChildren:()Ljavafx/collections/ObservableList;
      22: areturn
      23: aload_1
      24: instanceof    #57                 // class javafx/scene/layout/Pane
      27: ifeq          38
      30: aload_1
      31: checkcast     #57                 // class javafx/scene/layout/Pane
      34: invokevirtual #79                 // Method javafx/scene/layout/Pane.getChildren:()Ljavafx/collections/ObservableList;
      37: areturn
      38: new           #80                 // class java/lang/IllegalStateException
      41: dup
      42: ldc           #81                 // String The content of the Popup can\'t be accessed
      44: invokespecial #82                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      47: athrow

  public final javafx.stage.Window getOwnerWindow();
    Code:
       0: aload_0
       1: getfield      #25                 // Field ownerWindow:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #83                 // Method javafx/beans/property/ReadOnlyObjectWrapper.get:()Ljava/lang/Object;
       7: checkcast     #84                 // class javafx/stage/Window
      10: areturn

  public final javafx.beans.property.ReadOnlyObjectProperty<javafx.stage.Window> ownerWindowProperty();
    Code:
       0: aload_0
       1: getfield      #25                 // Field ownerWindow:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #85                 // Method javafx/beans/property/ReadOnlyObjectWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       7: areturn

  public final javafx.scene.Node getOwnerNode();
    Code:
       0: aload_0
       1: getfield      #27                 // Field ownerNode:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #83                 // Method javafx/beans/property/ReadOnlyObjectWrapper.get:()Ljava/lang/Object;
       7: checkcast     #86                 // class javafx/scene/Node
      10: areturn

  public final javafx.beans.property.ReadOnlyObjectProperty<javafx.scene.Node> ownerNodeProperty();
    Code:
       0: aload_0
       1: getfield      #27                 // Field ownerNode:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #85                 // Method javafx/beans/property/ReadOnlyObjectWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       7: areturn

  protected final void setScene(javafx.scene.Scene);
    Code:
       0: new           #87                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #88                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final void setAutoFix(boolean);
    Code:
       0: aload_0
       1: getfield      #30                 // Field autoFix:Ljavafx/beans/property/BooleanProperty;
       4: iload_1
       5: invokevirtual #89                 // Method javafx/beans/property/BooleanProperty.set:(Z)V
       8: return

  public final boolean isAutoFix();
    Code:
       0: aload_0
       1: getfield      #30                 // Field autoFix:Ljavafx/beans/property/BooleanProperty;
       4: invokevirtual #90                 // Method javafx/beans/property/BooleanProperty.get:()Z
       7: ireturn

  public final javafx.beans.property.BooleanProperty autoFixProperty();
    Code:
       0: aload_0
       1: getfield      #30                 // Field autoFix:Ljavafx/beans/property/BooleanProperty;
       4: areturn

  public final void setAutoHide(boolean);
    Code:
       0: aload_0
       1: getfield      #33                 // Field autoHide:Ljavafx/beans/property/BooleanProperty;
       4: iload_1
       5: invokevirtual #89                 // Method javafx/beans/property/BooleanProperty.set:(Z)V
       8: return

  public final boolean isAutoHide();
    Code:
       0: aload_0
       1: getfield      #33                 // Field autoHide:Ljavafx/beans/property/BooleanProperty;
       4: invokevirtual #90                 // Method javafx/beans/property/BooleanProperty.get:()Z
       7: ireturn

  public final javafx.beans.property.BooleanProperty autoHideProperty();
    Code:
       0: aload_0
       1: getfield      #33                 // Field autoHide:Ljavafx/beans/property/BooleanProperty;
       4: areturn

  public final void setOnAutoHide(javafx.event.EventHandler<javafx.event.Event>);
    Code:
       0: aload_0
       1: getfield      #37                 // Field onAutoHide:Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #91                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<javafx.event.Event> getOnAutoHide();
    Code:
       0: aload_0
       1: getfield      #37                 // Field onAutoHide:Ljavafx/beans/property/ObjectProperty;
       4: invokevirtual #92                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
       7: checkcast     #93                 // class javafx/event/EventHandler
      10: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<javafx.event.Event>> onAutoHideProperty();
    Code:
       0: aload_0
       1: getfield      #37                 // Field onAutoHide:Ljavafx/beans/property/ObjectProperty;
       4: areturn

  public final void setHideOnEscape(boolean);
    Code:
       0: aload_0
       1: getfield      #41                 // Field hideOnEscape:Ljavafx/beans/property/BooleanProperty;
       4: iload_1
       5: invokevirtual #89                 // Method javafx/beans/property/BooleanProperty.set:(Z)V
       8: return

  public final boolean isHideOnEscape();
    Code:
       0: aload_0
       1: getfield      #41                 // Field hideOnEscape:Ljavafx/beans/property/BooleanProperty;
       4: invokevirtual #90                 // Method javafx/beans/property/BooleanProperty.get:()Z
       7: ireturn

  public final javafx.beans.property.BooleanProperty hideOnEscapeProperty();
    Code:
       0: aload_0
       1: getfield      #41                 // Field hideOnEscape:Ljavafx/beans/property/BooleanProperty;
       4: areturn

  public final void setConsumeAutoHidingEvents(boolean);
    Code:
       0: aload_0
       1: getfield      #43                 // Field consumeAutoHidingEvents:Ljavafx/beans/property/BooleanProperty;
       4: iload_1
       5: invokevirtual #89                 // Method javafx/beans/property/BooleanProperty.set:(Z)V
       8: return

  public final boolean getConsumeAutoHidingEvents();
    Code:
       0: aload_0
       1: getfield      #43                 // Field consumeAutoHidingEvents:Ljavafx/beans/property/BooleanProperty;
       4: invokevirtual #90                 // Method javafx/beans/property/BooleanProperty.get:()Z
       7: ireturn

  public final javafx.beans.property.BooleanProperty consumeAutoHidingEventsProperty();
    Code:
       0: aload_0
       1: getfield      #43                 // Field consumeAutoHidingEvents:Ljavafx/beans/property/BooleanProperty;
       4: areturn

  public void show(javafx.stage.Window);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #94                 // Method validateOwnerWindow:(Ljavafx/stage/Window;)V
       5: aload_0
       6: aload_1
       7: invokespecial #95                 // Method showImpl:(Ljavafx/stage/Window;)V
      10: return

  public void show(javafx.scene.Node, double, double);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #96                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #97                 // String The owner node must not be null
      10: invokespecial #98                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: invokevirtual #99                 // Method javafx/scene/Node.getScene:()Ljavafx/scene/Scene;
      18: astore        6
      20: aload         6
      22: ifnull        33
      25: aload         6
      27: invokevirtual #100                // Method javafx/scene/Scene.getWindow:()Ljavafx/stage/Window;
      30: ifnonnull     43
      33: new           #101                // class java/lang/IllegalArgumentException
      36: dup
      37: ldc           #102                // String The owner node needs to be associated with a window
      39: invokespecial #103                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload         6
      45: invokevirtual #100                // Method javafx/scene/Scene.getWindow:()Ljavafx/stage/Window;
      48: astore        7
      50: aload_0
      51: aload         7
      53: invokespecial #94                 // Method validateOwnerWindow:(Ljavafx/stage/Window;)V
      56: aload_0
      57: getfield      #27                 // Field ownerNode:Ljavafx/beans/property/ReadOnlyObjectWrapper;
      60: aload_1
      61: invokevirtual #104                // Method javafx/beans/property/ReadOnlyObjectWrapper.set:(Ljava/lang/Object;)V
      64: aload_1
      65: ifnull        79
      68: aload_1
      69: invokestatic  #105                // Method com/sun/javafx/scene/NodeHelper.treeShowingProperty:(Ljavafx/scene/Node;)Ljavafx/beans/binding/BooleanExpression;
      72: aload_0
      73: getfield      #21                 // Field weakOwnerNodeListener:Ljavafx/beans/value/WeakChangeListener;
      76: invokevirtual #106                // Method javafx/beans/binding/BooleanExpression.addListener:(Ljavafx/beans/value/ChangeListener;)V
      79: aload_0
      80: dload_2
      81: dload         4
      83: invokespecial #6                  // Method updateWindow:(DD)V
      86: aload_0
      87: aload         7
      89: invokespecial #95                 // Method showImpl:(Ljavafx/stage/Window;)V
      92: return

  public void show(javafx.stage.Window, double, double);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #94                 // Method validateOwnerWindow:(Ljavafx/stage/Window;)V
       5: aload_0
       6: dload_2
       7: dload         4
       9: invokespecial #6                  // Method updateWindow:(DD)V
      12: aload_0
      13: aload_1
      14: invokespecial #95                 // Method showImpl:(Ljavafx/stage/Window;)V
      17: return

  private void showImpl(javafx.stage.Window);
    Code:
       0: aload_0
       1: getfield      #25                 // Field ownerWindow:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: aload_1
       5: invokevirtual #104                // Method javafx/beans/property/ReadOnlyObjectWrapper.set:(Ljava/lang/Object;)V
       8: aload_1
       9: instanceof    #107                // class javafx/stage/PopupWindow
      12: ifeq          29
      15: aload_1
      16: checkcast     #107                // class javafx/stage/PopupWindow
      19: getfield      #14                 // Field children:Ljava/util/List;
      22: aload_0
      23: invokeinterface #108,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: aload_1
      30: ifnull        44
      33: aload_1
      34: invokevirtual #109                // Method javafx/stage/Window.showingProperty:()Ljavafx/beans/property/ReadOnlyBooleanProperty;
      37: aload_0
      38: getfield      #21                 // Field weakOwnerNodeListener:Ljavafx/beans/value/WeakChangeListener;
      41: invokevirtual #110                // Method javafx/beans/property/ReadOnlyBooleanProperty.addListener:(Ljavafx/beans/value/ChangeListener;)V
      44: aload_0
      45: invokevirtual #75                 // Method getScene:()Ljavafx/scene/Scene;
      48: astore_2
      49: aload_2
      50: invokestatic  #111                // Method com/sun/javafx/scene/SceneHelper.parentEffectiveOrientationInvalidated:(Ljavafx/scene/Scene;)V
      53: aload_1
      54: invokestatic  #112                // Method getRootWindow:(Ljavafx/stage/Window;)Ljavafx/stage/Window;
      57: invokevirtual #113                // Method javafx/stage/Window.getScene:()Ljavafx/scene/Scene;
      60: astore_3
      61: aload_3
      62: ifnull        109
      65: aload_3
      66: invokevirtual #114                // Method javafx/scene/Scene.getUserAgentStylesheet:()Ljava/lang/String;
      69: ifnull        80
      72: aload_2
      73: aload_3
      74: invokevirtual #114                // Method javafx/scene/Scene.getUserAgentStylesheet:()Ljava/lang/String;
      77: invokevirtual #115                // Method javafx/scene/Scene.setUserAgentStylesheet:(Ljava/lang/String;)V
      80: aload_2
      81: invokevirtual #116                // Method javafx/scene/Scene.getStylesheets:()Ljavafx/collections/ObservableList;
      84: aload_3
      85: invokevirtual #116                // Method javafx/scene/Scene.getStylesheets:()Ljavafx/collections/ObservableList;
      88: invokeinterface #117,  2          // InterfaceMethod javafx/collections/ObservableList.setAll:(Ljava/util/Collection;)Z
      93: pop
      94: aload_2
      95: invokevirtual #118                // Method javafx/scene/Scene.getCursor:()Ljavafx/scene/Cursor;
      98: ifnonnull     109
     101: aload_2
     102: aload_3
     103: invokevirtual #118                // Method javafx/scene/Scene.getCursor:()Ljavafx/scene/Cursor;
     106: invokevirtual #119                // Method javafx/scene/Scene.setCursor:(Ljavafx/scene/Cursor;)V
     109: aload_1
     110: invokestatic  #112                // Method getRootWindow:(Ljavafx/stage/Window;)Ljavafx/stage/Window;
     113: invokevirtual #120                // Method javafx/stage/Window.isShowing:()Z
     116: ifeq          123
     119: aload_0
     120: invokevirtual #121                // Method show:()V
     123: return

  public void hide();
    Code:
       0: aload_0
       1: getfield      #14                 // Field children:Ljava/util/List;
       4: invokeinterface #122,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #123,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          43
      19: aload_1
      20: invokeinterface #124,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #107                // class javafx/stage/PopupWindow
      28: astore_2
      29: aload_2
      30: invokevirtual #125                // Method isShowing:()Z
      33: ifeq          40
      36: aload_2
      37: invokevirtual #126                // Method hide:()V
      40: goto          10
      43: aload_0
      44: getfield      #14                 // Field children:Ljava/util/List;
      47: invokeinterface #127,  1          // InterfaceMethod java/util/List.clear:()V
      52: aload_0
      53: invokespecial #128                // Method javafx/stage/Window.hide:()V
      56: aload_0
      57: invokevirtual #129                // Method getOwnerWindow:()Ljavafx/stage/Window;
      60: ifnull        77
      63: aload_0
      64: invokevirtual #129                // Method getOwnerWindow:()Ljavafx/stage/Window;
      67: invokevirtual #109                // Method javafx/stage/Window.showingProperty:()Ljavafx/beans/property/ReadOnlyBooleanProperty;
      70: aload_0
      71: getfield      #21                 // Field weakOwnerNodeListener:Ljavafx/beans/value/WeakChangeListener;
      74: invokevirtual #130                // Method javafx/beans/property/ReadOnlyBooleanProperty.removeListener:(Ljavafx/beans/value/ChangeListener;)V
      77: aload_0
      78: invokevirtual #131                // Method getOwnerNode:()Ljavafx/scene/Node;
      81: ifnull        98
      84: aload_0
      85: invokevirtual #131                // Method getOwnerNode:()Ljavafx/scene/Node;
      88: invokestatic  #105                // Method com/sun/javafx/scene/NodeHelper.treeShowingProperty:(Ljavafx/scene/Node;)Ljavafx/beans/binding/BooleanExpression;
      91: aload_0
      92: getfield      #21                 // Field weakOwnerNodeListener:Ljavafx/beans/value/WeakChangeListener;
      95: invokevirtual #132                // Method javafx/beans/binding/BooleanExpression.removeListener:(Ljavafx/beans/value/ChangeListener;)V
      98: return

  private void doVisibleChanging(boolean);
    Code:
       0: ldc           #133                // String PopupWindow.storeVisible for [PopupWindow]
       2: invokestatic  #134                // Method com/sun/javafx/perf/PerformanceTracker.logEvent:(Ljava/lang/String;)V
       5: invokestatic  #135                // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       8: astore_2
       9: iload_1
      10: ifeq          84
      13: aload_0
      14: invokevirtual #136                // Method getPeer:()Lcom/sun/javafx/tk/TKStage;
      17: ifnonnull     84
      20: invokestatic  #137                // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
      23: astore        4
      25: aload         4
      27: ifnull        38
      30: aload         4
      32: getstatic     #138                // Field com/sun/javafx/FXPermissions.CREATE_TRANSPARENT_WINDOW_PERMISSION:Ljavafx/util/FXPermission;
      35: invokevirtual #139                // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      38: getstatic     #140                // Field javafx/stage/StageStyle.TRANSPARENT:Ljavafx/stage/StageStyle;
      41: astore_3
      42: goto          51
      45: astore        4
      47: getstatic     #142                // Field javafx/stage/StageStyle.UNDECORATED:Ljavafx/stage/StageStyle;
      50: astore_3
      51: aload_0
      52: aload_2
      53: aload_0
      54: aload_3
      55: aload_0
      56: invokevirtual #129                // Method getOwnerWindow:()Ljavafx/stage/Window;
      59: invokevirtual #143                // Method javafx/stage/Window.getPeer:()Lcom/sun/javafx/tk/TKStage;
      62: aload_0
      63: getfield      #144                // Field acc:Ljava/security/AccessControlContext;
      66: invokevirtual #145                // Method com/sun/javafx/tk/Toolkit.createTKPopupStage:(Ljavafx/stage/Window;Ljavafx/stage/StageStyle;Lcom/sun/javafx/tk/TKStage;Ljava/security/AccessControlContext;)Lcom/sun/javafx/tk/TKStage;
      69: invokevirtual #146                // Method setPeer:(Lcom/sun/javafx/tk/TKStage;)V
      72: aload_0
      73: new           #147                // class com/sun/javafx/stage/PopupWindowPeerListener
      76: dup
      77: aload_0
      78: invokespecial #148                // Method com/sun/javafx/stage/PopupWindowPeerListener."<init>":(Ljavafx/stage/PopupWindow;)V
      81: invokevirtual #149                // Method setPeerListener:(Lcom/sun/javafx/stage/WindowPeerListener;)V
      84: return
    Exception table:
       from    to  target type
          20    42    45   Class java/lang/SecurityException

  private void doVisibleChanged(boolean);
    Code:
       0: aload_0
       1: invokevirtual #129                // Method getOwnerWindow:()Ljavafx/stage/Window;
       4: astore_2
       5: iload_1
       6: ifeq          56
       9: aload_0
      10: aload_2
      11: invokestatic  #112                // Method getRootWindow:(Ljavafx/stage/Window;)Ljavafx/stage/Window;
      14: putfield      #150                // Field rootWindow:Ljavafx/stage/Window;
      17: aload_0
      18: aload_2
      19: invokespecial #151                // Method startMonitorOwnerEvents:(Ljavafx/stage/Window;)V
      22: aload_0
      23: aload_2
      24: invokespecial #152                // Method bindOwnerFocusedProperty:(Ljavafx/stage/Window;)V
      27: aload_0
      28: aload_2
      29: invokevirtual #153                // Method javafx/stage/Window.isFocused:()Z
      32: invokestatic  #154                // Method com/sun/javafx/stage/WindowHelper.setFocused:(Ljavafx/stage/Window;Z)V
      35: aload_0
      36: iconst_1
      37: aload_0
      38: invokevirtual #155                // Method isAutoFix:()Z
      41: invokespecial #4                  // Method handleAutofixActivation:(ZZ)V
      44: aload_0
      45: iconst_1
      46: aload_0
      47: invokevirtual #156                // Method isAutoHide:()Z
      50: invokespecial #3                  // Method handleAutohideActivation:(ZZ)V
      53: goto          94
      56: aload_0
      57: aload_2
      58: invokespecial #157                // Method stopMonitorOwnerEvents:(Ljavafx/stage/Window;)V
      61: aload_0
      62: aload_2
      63: invokespecial #158                // Method unbindOwnerFocusedProperty:(Ljavafx/stage/Window;)V
      66: aload_0
      67: iconst_0
      68: invokestatic  #154                // Method com/sun/javafx/stage/WindowHelper.setFocused:(Ljavafx/stage/Window;Z)V
      71: aload_0
      72: iconst_0
      73: aload_0
      74: invokevirtual #155                // Method isAutoFix:()Z
      77: invokespecial #4                  // Method handleAutofixActivation:(ZZ)V
      80: aload_0
      81: iconst_0
      82: aload_0
      83: invokevirtual #156                // Method isAutoHide:()Z
      86: invokespecial #3                  // Method handleAutohideActivation:(ZZ)V
      89: aload_0
      90: aconst_null
      91: putfield      #150                // Field rootWindow:Ljavafx/stage/Window;
      94: ldc           #159                // String PopupWindow.storeVisible for [PopupWindow] finished
      96: invokestatic  #134                // Method com/sun/javafx/perf/PerformanceTracker.logEvent:(Ljava/lang/String;)V
      99: return

  public final void setAnchorX(double);
    Code:
       0: aload_0
       1: dload_1
       2: aload_0
       3: invokevirtual #160                // Method getAnchorY:()D
       6: invokespecial #6                  // Method updateWindow:(DD)V
       9: return

  public final double getAnchorX();
    Code:
       0: aload_0
       1: getfield      #50                 // Field anchorX:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: invokevirtual #161                // Method javafx/beans/property/ReadOnlyDoubleWrapper.get:()D
       7: dreturn

  public final javafx.beans.property.ReadOnlyDoubleProperty anchorXProperty();
    Code:
       0: aload_0
       1: getfield      #50                 // Field anchorX:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: invokevirtual #162                // Method javafx/beans/property/ReadOnlyDoubleWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
       7: areturn

  public final void setAnchorY(double);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #163                // Method getAnchorX:()D
       5: dload_1
       6: invokespecial #6                  // Method updateWindow:(DD)V
       9: return

  public final double getAnchorY();
    Code:
       0: aload_0
       1: getfield      #52                 // Field anchorY:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: invokevirtual #161                // Method javafx/beans/property/ReadOnlyDoubleWrapper.get:()D
       7: dreturn

  public final javafx.beans.property.ReadOnlyDoubleProperty anchorYProperty();
    Code:
       0: aload_0
       1: getfield      #52                 // Field anchorY:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: invokevirtual #162                // Method javafx/beans/property/ReadOnlyDoubleWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
       7: areturn

  public final void setAnchorLocation(javafx.stage.PopupWindow$AnchorLocation);
    Code:
       0: aload_0
       1: getfield      #56                 // Field anchorLocation:Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #91                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.stage.PopupWindow$AnchorLocation getAnchorLocation();
    Code:
       0: aload_0
       1: getfield      #56                 // Field anchorLocation:Ljavafx/beans/property/ObjectProperty;
       4: invokevirtual #92                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
       7: checkcast     #164                // class javafx/stage/PopupWindow$AnchorLocation
      10: areturn

  public final javafx.beans.property.ObjectProperty<javafx.stage.PopupWindow$AnchorLocation> anchorLocationProperty();
    Code:
       0: aload_0
       1: getfield      #56                 // Field anchorLocation:Ljavafx/beans/property/ObjectProperty;
       4: areturn

  void setXInternal(double);
    Code:
       0: aload_0
       1: aload_0
       2: dload_1
       3: invokespecial #2                  // Method windowToAnchorX:(D)D
       6: aload_0
       7: invokevirtual #160                // Method getAnchorY:()D
      10: invokespecial #6                  // Method updateWindow:(DD)V
      13: return

  void setYInternal(double);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #163                // Method getAnchorX:()D
       5: aload_0
       6: dload_1
       7: invokespecial #1                  // Method windowToAnchorY:(D)D
      10: invokespecial #6                  // Method updateWindow:(DD)V
      13: return

  void notifyLocationChanged(double, double);
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: invokespecial #165                // Method javafx/stage/Window.notifyLocationChanged:(DD)V
       6: aload_0
       7: getfield      #50                 // Field anchorX:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      10: aload_0
      11: dload_1
      12: invokespecial #2                  // Method windowToAnchorX:(D)D
      15: invokevirtual #166                // Method javafx/beans/property/ReadOnlyDoubleWrapper.set:(D)V
      18: aload_0
      19: getfield      #52                 // Field anchorY:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      22: aload_0
      23: dload_3
      24: invokespecial #1                  // Method windowToAnchorY:(D)D
      27: invokevirtual #166                // Method javafx/beans/property/ReadOnlyDoubleWrapper.set:(D)V
      30: return

  private javafx.geometry.Bounds getExtendedBounds();
    Code:
       0: aload_0
       1: getfield      #8                  // Field cachedExtendedBounds:Ljavafx/geometry/Bounds;
       4: ifnonnull     31
       7: aload_0
       8: invokevirtual #75                 // Method getScene:()Ljavafx/scene/Scene;
      11: invokevirtual #76                 // Method javafx/scene/Scene.getRoot:()Ljavafx/scene/Parent;
      14: astore_1
      15: aload_0
      16: aload_0
      17: aload_1
      18: invokevirtual #167                // Method javafx/scene/Parent.getLayoutBounds:()Ljavafx/geometry/Bounds;
      21: aload_1
      22: invokevirtual #168                // Method javafx/scene/Parent.getBoundsInLocal:()Ljavafx/geometry/Bounds;
      25: invokespecial #169                // Method union:(Ljavafx/geometry/Bounds;Ljavafx/geometry/Bounds;)Ljavafx/geometry/Bounds;
      28: putfield      #8                  // Field cachedExtendedBounds:Ljavafx/geometry/Bounds;
      31: aload_0
      32: getfield      #8                  // Field cachedExtendedBounds:Ljavafx/geometry/Bounds;
      35: areturn

  private javafx.geometry.Bounds getAnchorBounds();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cachedAnchorBounds:Ljavafx/geometry/Bounds;
       4: ifnonnull     38
       7: aload_0
       8: aload_0
       9: invokevirtual #170                // Method getAnchorLocation:()Ljavafx/stage/PopupWindow$AnchorLocation;
      12: invokevirtual #171                // Method javafx/stage/PopupWindow$AnchorLocation.isContentLocation:()Z
      15: ifeq          31
      18: aload_0
      19: invokevirtual #75                 // Method getScene:()Ljavafx/scene/Scene;
      22: invokevirtual #76                 // Method javafx/scene/Scene.getRoot:()Ljavafx/scene/Parent;
      25: invokevirtual #167                // Method javafx/scene/Parent.getLayoutBounds:()Ljavafx/geometry/Bounds;
      28: goto          35
      31: aload_0
      32: invokespecial #172                // Method getExtendedBounds:()Ljavafx/geometry/Bounds;
      35: putfield      #7                  // Field cachedAnchorBounds:Ljavafx/geometry/Bounds;
      38: aload_0
      39: getfield      #7                  // Field cachedAnchorBounds:Ljavafx/geometry/Bounds;
      42: areturn

  private void updateWindow(double, double);
    Code:
       0: aload_0
       1: invokevirtual #170                // Method getAnchorLocation:()Ljavafx/stage/PopupWindow$AnchorLocation;
       4: astore        5
       6: aload_0
       7: invokevirtual #75                 // Method getScene:()Ljavafx/scene/Scene;
      10: invokevirtual #76                 // Method javafx/scene/Scene.getRoot:()Ljavafx/scene/Parent;
      13: astore        6
      15: aload_0
      16: invokespecial #172                // Method getExtendedBounds:()Ljavafx/geometry/Bounds;
      19: astore        7
      21: aload_0
      22: invokespecial #173                // Method getAnchorBounds:()Ljavafx/geometry/Bounds;
      25: astore        8
      27: aload         5
      29: invokevirtual #174                // Method javafx/stage/PopupWindow$AnchorLocation.getXCoef:()D
      32: dstore        9
      34: aload         5
      36: invokevirtual #175                // Method javafx/stage/PopupWindow$AnchorLocation.getYCoef:()D
      39: dstore        11
      41: dload         9
      43: aload         8
      45: invokevirtual #176                // Method javafx/geometry/Bounds.getWidth:()D
      48: dmul
      49: dstore        13
      51: dload         11
      53: aload         8
      55: invokevirtual #177                // Method javafx/geometry/Bounds.getHeight:()D
      58: dmul
      59: dstore        15
      61: dload_1
      62: dload         13
      64: dsub
      65: dstore        17
      67: dload_3
      68: dload         15
      70: dsub
      71: dstore        19
      73: aload_0
      74: getfield      #178                // Field autofixActive:Z
      77: ifeq          254
      80: dload_1
      81: dload_3
      82: invokestatic  #179                // Method com/sun/javafx/util/Utils.getScreenForPoint:(DD)Ljavafx/stage/Screen;
      85: astore        21
      87: aload         21
      89: invokestatic  #180                // Method com/sun/javafx/util/Utils.hasFullScreenStage:(Ljavafx/stage/Screen;)Z
      92: ifeq          103
      95: aload         21
      97: invokevirtual #181                // Method javafx/stage/Screen.getBounds:()Ljavafx/geometry/Rectangle2D;
     100: goto          108
     103: aload         21
     105: invokevirtual #182                // Method javafx/stage/Screen.getVisualBounds:()Ljavafx/geometry/Rectangle2D;
     108: astore        22
     110: dload         9
     112: ldc2_w        #183                // double 0.5d
     115: dcmpg
     116: ifgt          152
     119: dload         17
     121: aload         22
     123: invokevirtual #185                // Method javafx/geometry/Rectangle2D.getMaxX:()D
     126: aload         8
     128: invokevirtual #176                // Method javafx/geometry/Bounds.getWidth:()D
     131: dsub
     132: invokestatic  #186                // Method java/lang/Math.min:(DD)D
     135: dstore        17
     137: dload         17
     139: aload         22
     141: invokevirtual #187                // Method javafx/geometry/Rectangle2D.getMinX:()D
     144: invokestatic  #188                // Method java/lang/Math.max:(DD)D
     147: dstore        17
     149: goto          182
     152: dload         17
     154: aload         22
     156: invokevirtual #187                // Method javafx/geometry/Rectangle2D.getMinX:()D
     159: invokestatic  #188                // Method java/lang/Math.max:(DD)D
     162: dstore        17
     164: dload         17
     166: aload         22
     168: invokevirtual #185                // Method javafx/geometry/Rectangle2D.getMaxX:()D
     171: aload         8
     173: invokevirtual #176                // Method javafx/geometry/Bounds.getWidth:()D
     176: dsub
     177: invokestatic  #186                // Method java/lang/Math.min:(DD)D
     180: dstore        17
     182: dload         11
     184: ldc2_w        #183                // double 0.5d
     187: dcmpg
     188: ifgt          224
     191: dload         19
     193: aload         22
     195: invokevirtual #189                // Method javafx/geometry/Rectangle2D.getMaxY:()D
     198: aload         8
     200: invokevirtual #177                // Method javafx/geometry/Bounds.getHeight:()D
     203: dsub
     204: invokestatic  #186                // Method java/lang/Math.min:(DD)D
     207: dstore        19
     209: dload         19
     211: aload         22
     213: invokevirtual #190                // Method javafx/geometry/Rectangle2D.getMinY:()D
     216: invokestatic  #188                // Method java/lang/Math.max:(DD)D
     219: dstore        19
     221: goto          254
     224: dload         19
     226: aload         22
     228: invokevirtual #190                // Method javafx/geometry/Rectangle2D.getMinY:()D
     231: invokestatic  #188                // Method java/lang/Math.max:(DD)D
     234: dstore        19
     236: dload         19
     238: aload         22
     240: invokevirtual #189                // Method javafx/geometry/Rectangle2D.getMaxY:()D
     243: aload         8
     245: invokevirtual #177                // Method javafx/geometry/Bounds.getHeight:()D
     248: dsub
     249: invokestatic  #186                // Method java/lang/Math.min:(DD)D
     252: dstore        19
     254: dload         17
     256: aload         8
     258: invokevirtual #191                // Method javafx/geometry/Bounds.getMinX:()D
     261: dsub
     262: aload         7
     264: invokevirtual #191                // Method javafx/geometry/Bounds.getMinX:()D
     267: dadd
     268: dstore        21
     270: dload         19
     272: aload         8
     274: invokevirtual #192                // Method javafx/geometry/Bounds.getMinY:()D
     277: dsub
     278: aload         7
     280: invokevirtual #192                // Method javafx/geometry/Bounds.getMinY:()D
     283: dadd
     284: dstore        23
     286: aload_0
     287: aload         7
     289: invokevirtual #176                // Method javafx/geometry/Bounds.getWidth:()D
     292: invokevirtual #193                // Method setWidth:(D)V
     295: aload_0
     296: aload         7
     298: invokevirtual #177                // Method javafx/geometry/Bounds.getHeight:()D
     301: invokevirtual #194                // Method setHeight:(D)V
     304: aload         6
     306: aload         7
     308: invokevirtual #191                // Method javafx/geometry/Bounds.getMinX:()D
     311: dneg
     312: invokevirtual #195                // Method javafx/scene/Parent.setTranslateX:(D)V
     315: aload         6
     317: aload         7
     319: invokevirtual #192                // Method javafx/geometry/Bounds.getMinY:()D
     322: dneg
     323: invokevirtual #196                // Method javafx/scene/Parent.setTranslateY:(D)V
     326: dload         21
     328: invokestatic  #197                // Method java/lang/Double.isNaN:(D)Z
     331: ifne          340
     334: aload_0
     335: dload         21
     337: invokespecial #198                // Method javafx/stage/Window.setXInternal:(D)V
     340: dload         23
     342: invokestatic  #197                // Method java/lang/Double.isNaN:(D)Z
     345: ifne          354
     348: aload_0
     349: dload         23
     351: invokespecial #199                // Method javafx/stage/Window.setYInternal:(D)V
     354: aload_0
     355: getfield      #50                 // Field anchorX:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
     358: dload         17
     360: dload         13
     362: dadd
     363: invokevirtual #166                // Method javafx/beans/property/ReadOnlyDoubleWrapper.set:(D)V
     366: aload_0
     367: getfield      #52                 // Field anchorY:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
     370: dload         19
     372: dload         15
     374: dadd
     375: invokevirtual #166                // Method javafx/beans/property/ReadOnlyDoubleWrapper.set:(D)V
     378: return

  private javafx.geometry.Bounds union(javafx.geometry.Bounds, javafx.geometry.Bounds);
    Code:
       0: aload_1
       1: invokevirtual #191                // Method javafx/geometry/Bounds.getMinX:()D
       4: aload_2
       5: invokevirtual #191                // Method javafx/geometry/Bounds.getMinX:()D
       8: invokestatic  #186                // Method java/lang/Math.min:(DD)D
      11: dstore_3
      12: aload_1
      13: invokevirtual #192                // Method javafx/geometry/Bounds.getMinY:()D
      16: aload_2
      17: invokevirtual #192                // Method javafx/geometry/Bounds.getMinY:()D
      20: invokestatic  #186                // Method java/lang/Math.min:(DD)D
      23: dstore        5
      25: aload_1
      26: invokevirtual #200                // Method javafx/geometry/Bounds.getMaxX:()D
      29: aload_2
      30: invokevirtual #200                // Method javafx/geometry/Bounds.getMaxX:()D
      33: invokestatic  #188                // Method java/lang/Math.max:(DD)D
      36: dstore        7
      38: aload_1
      39: invokevirtual #201                // Method javafx/geometry/Bounds.getMaxY:()D
      42: aload_2
      43: invokevirtual #201                // Method javafx/geometry/Bounds.getMaxY:()D
      46: invokestatic  #188                // Method java/lang/Math.max:(DD)D
      49: dstore        9
      51: new           #202                // class javafx/geometry/BoundingBox
      54: dup
      55: dload_3
      56: dload         5
      58: dload         7
      60: dload_3
      61: dsub
      62: dload         9
      64: dload         5
      66: dsub
      67: invokespecial #203                // Method javafx/geometry/BoundingBox."<init>":(DDDD)V
      70: areturn

  private double windowToAnchorX(double);
    Code:
       0: aload_0
       1: invokespecial #173                // Method getAnchorBounds:()Ljavafx/geometry/Bounds;
       4: astore_3
       5: dload_1
       6: aload_0
       7: invokespecial #172                // Method getExtendedBounds:()Ljavafx/geometry/Bounds;
      10: invokevirtual #191                // Method javafx/geometry/Bounds.getMinX:()D
      13: dsub
      14: aload_3
      15: invokevirtual #191                // Method javafx/geometry/Bounds.getMinX:()D
      18: dadd
      19: aload_0
      20: invokevirtual #170                // Method getAnchorLocation:()Ljavafx/stage/PopupWindow$AnchorLocation;
      23: invokevirtual #174                // Method javafx/stage/PopupWindow$AnchorLocation.getXCoef:()D
      26: aload_3
      27: invokevirtual #176                // Method javafx/geometry/Bounds.getWidth:()D
      30: dmul
      31: dadd
      32: dreturn

  private double windowToAnchorY(double);
    Code:
       0: aload_0
       1: invokespecial #173                // Method getAnchorBounds:()Ljavafx/geometry/Bounds;
       4: astore_3
       5: dload_1
       6: aload_0
       7: invokespecial #172                // Method getExtendedBounds:()Ljavafx/geometry/Bounds;
      10: invokevirtual #192                // Method javafx/geometry/Bounds.getMinY:()D
      13: dsub
      14: aload_3
      15: invokevirtual #192                // Method javafx/geometry/Bounds.getMinY:()D
      18: dadd
      19: aload_0
      20: invokevirtual #170                // Method getAnchorLocation:()Ljavafx/stage/PopupWindow$AnchorLocation;
      23: invokevirtual #175                // Method javafx/stage/PopupWindow$AnchorLocation.getYCoef:()D
      26: aload_3
      27: invokevirtual #177                // Method javafx/geometry/Bounds.getHeight:()D
      30: dmul
      31: dadd
      32: dreturn

  private static javafx.stage.Window getRootWindow(javafx.stage.Window);
    Code:
       0: aload_0
       1: instanceof    #107                // class javafx/stage/PopupWindow
       4: ifeq          18
       7: aload_0
       8: checkcast     #107                // class javafx/stage/PopupWindow
      11: invokevirtual #129                // Method getOwnerWindow:()Ljavafx/stage/Window;
      14: astore_0
      15: goto          0
      18: aload_0
      19: areturn

  void doAutoHide();
    Code:
       0: aload_0
       1: invokevirtual #126                // Method hide:()V
       4: aload_0
       5: invokevirtual #204                // Method getOnAutoHide:()Ljavafx/event/EventHandler;
       8: ifnull        32
      11: aload_0
      12: invokevirtual #204                // Method getOnAutoHide:()Ljavafx/event/EventHandler;
      15: new           #205                // class javafx/event/Event
      18: dup
      19: aload_0
      20: aload_0
      21: getstatic     #206                // Field javafx/event/Event.ANY:Ljavafx/event/EventType;
      24: invokespecial #207                // Method javafx/event/Event."<init>":(Ljava/lang/Object;Ljavafx/event/EventTarget;Ljavafx/event/EventType;)V
      27: invokeinterface #208,  2          // InterfaceMethod javafx/event/EventHandler.handle:(Ljavafx/event/Event;)V
      32: return

  com.sun.javafx.stage.WindowEventDispatcher createInternalEventDispatcher();
    Code:
       0: new           #209                // class com/sun/javafx/stage/WindowEventDispatcher
       3: dup
       4: new           #210                // class javafx/stage/PopupWindow$PopupEventRedirector
       7: dup
       8: aload_0
       9: invokespecial #211                // Method javafx/stage/PopupWindow$PopupEventRedirector."<init>":(Ljavafx/stage/PopupWindow;)V
      12: new           #212                // class com/sun/javafx/stage/WindowCloseRequestHandler
      15: dup
      16: aload_0
      17: invokespecial #213                // Method com/sun/javafx/stage/WindowCloseRequestHandler."<init>":(Ljavafx/stage/Window;)V
      20: new           #214                // class com/sun/javafx/event/EventHandlerManager
      23: dup
      24: aload_0
      25: invokespecial #215                // Method com/sun/javafx/event/EventHandlerManager."<init>":(Ljava/lang/Object;)V
      28: invokespecial #216                // Method com/sun/javafx/stage/WindowEventDispatcher."<init>":(Lcom/sun/javafx/event/EventRedirector;Lcom/sun/javafx/stage/WindowCloseRequestHandler;Lcom/sun/javafx/event/EventHandlerManager;)V
      31: areturn

  javafx.stage.Window getWindowOwner();
    Code:
       0: aload_0
       1: invokevirtual #129                // Method getOwnerWindow:()Ljavafx/stage/Window;
       4: areturn

  private void startMonitorOwnerEvents(javafx.stage.Window);
    Code:
       0: aload_1
       1: invokevirtual #217                // Method javafx/stage/Window.getInternalEventDispatcher:()Lcom/sun/javafx/stage/WindowEventDispatcher;
       4: invokevirtual #218                // Method com/sun/javafx/stage/WindowEventDispatcher.getEventRedirector:()Lcom/sun/javafx/event/EventRedirector;
       7: astore_2
       8: aload_2
       9: aload_0
      10: invokevirtual #219                // Method getEventDispatcher:()Ljavafx/event/EventDispatcher;
      13: invokevirtual #220                // Method com/sun/javafx/event/EventRedirector.addEventDispatcher:(Ljavafx/event/EventDispatcher;)V
      16: return

  private void stopMonitorOwnerEvents(javafx.stage.Window);
    Code:
       0: aload_1
       1: invokevirtual #217                // Method javafx/stage/Window.getInternalEventDispatcher:()Lcom/sun/javafx/stage/WindowEventDispatcher;
       4: invokevirtual #218                // Method com/sun/javafx/stage/WindowEventDispatcher.getEventRedirector:()Lcom/sun/javafx/event/EventRedirector;
       7: astore_2
       8: aload_2
       9: aload_0
      10: invokevirtual #219                // Method getEventDispatcher:()Ljavafx/event/EventDispatcher;
      13: invokevirtual #221                // Method com/sun/javafx/event/EventRedirector.removeEventDispatcher:(Ljavafx/event/EventDispatcher;)V
      16: return

  private void bindOwnerFocusedProperty(javafx.stage.Window);
    Code:
       0: aload_0
       1: aload_0
       2: invokedynamic #222,  0            // InvokeDynamic #1:changed:(Ljavafx/stage/PopupWindow;)Ljavafx/beans/value/ChangeListener;
       7: putfield      #223                // Field ownerFocusedListener:Ljavafx/beans/value/ChangeListener;
      10: aload_1
      11: invokevirtual #224                // Method javafx/stage/Window.focusedProperty:()Ljavafx/beans/property/ReadOnlyBooleanProperty;
      14: aload_0
      15: getfield      #223                // Field ownerFocusedListener:Ljavafx/beans/value/ChangeListener;
      18: invokevirtual #110                // Method javafx/beans/property/ReadOnlyBooleanProperty.addListener:(Ljavafx/beans/value/ChangeListener;)V
      21: return

  private void unbindOwnerFocusedProperty(javafx.stage.Window);
    Code:
       0: aload_1
       1: invokevirtual #224                // Method javafx/stage/Window.focusedProperty:()Ljavafx/beans/property/ReadOnlyBooleanProperty;
       4: aload_0
       5: getfield      #223                // Field ownerFocusedListener:Ljavafx/beans/value/ChangeListener;
       8: invokevirtual #130                // Method javafx/beans/property/ReadOnlyBooleanProperty.removeListener:(Ljavafx/beans/value/ChangeListener;)V
      11: aload_0
      12: aconst_null
      13: putfield      #223                // Field ownerFocusedListener:Ljavafx/beans/value/ChangeListener;
      16: return

  private void handleAutofixActivation(boolean, boolean);
    Code:
       0: iload_1
       1: ifeq          12
       4: iload_2
       5: ifeq          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: istore_3
      14: aload_0
      15: getfield      #178                // Field autofixActive:Z
      18: iload_3
      19: if_icmpeq     70
      22: aload_0
      23: iload_3
      24: putfield      #178                // Field autofixActive:Z
      27: iload_3
      28: ifeq          58
      31: invokestatic  #225                // Method javafx/stage/Screen.getScreens:()Ljavafx/collections/ObservableList;
      34: aload_0
      35: getfield      #5                  // Field popupWindowUpdater:Ljavafx/beans/InvalidationListener;
      38: invokeinterface #226,  2          // InterfaceMethod javafx/collections/ObservableList.addListener:(Ljavafx/beans/InvalidationListener;)V
      43: aload_0
      44: aload_0
      45: invokevirtual #163                // Method getAnchorX:()D
      48: aload_0
      49: invokevirtual #160                // Method getAnchorY:()D
      52: invokespecial #6                  // Method updateWindow:(DD)V
      55: goto          70
      58: invokestatic  #225                // Method javafx/stage/Screen.getScreens:()Ljavafx/collections/ObservableList;
      61: aload_0
      62: getfield      #5                  // Field popupWindowUpdater:Ljavafx/beans/InvalidationListener;
      65: invokeinterface #227,  2          // InterfaceMethod javafx/collections/ObservableList.removeListener:(Ljavafx/beans/InvalidationListener;)V
      70: return

  private void handleAutohideActivation(boolean, boolean);
    Code:
       0: iload_1
       1: ifeq          12
       4: iload_2
       5: ifeq          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: istore_3
      14: aload_0
      15: getfield      #228                // Field autohideActive:Z
      18: iload_3
      19: if_icmpeq     48
      22: aload_0
      23: iload_3
      24: putfield      #228                // Field autohideActive:Z
      27: iload_3
      28: ifeq          41
      31: aload_0
      32: getfield      #150                // Field rootWindow:Ljavafx/stage/Window;
      35: invokevirtual #229                // Method javafx/stage/Window.increaseFocusGrabCounter:()V
      38: goto          48
      41: aload_0
      42: getfield      #150                // Field rootWindow:Ljavafx/stage/Window;
      45: invokevirtual #230                // Method javafx/stage/Window.decreaseFocusGrabCounter:()V
      48: return

  private void validateOwnerWindow(javafx.stage.Window);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #96                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #231                // String Owner window must not be null
      10: invokespecial #98                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: aload_0
      16: invokestatic  #232                // Method wouldCreateCycle:(Ljavafx/stage/Window;Ljavafx/stage/Window;)Z
      19: ifeq          32
      22: new           #101                // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #233                // String Specified owner window would create cycle in the window hierarchy
      28: invokespecial #103                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_0
      33: invokevirtual #125                // Method isShowing:()Z
      36: ifeq          57
      39: aload_0
      40: invokevirtual #129                // Method getOwnerWindow:()Ljavafx/stage/Window;
      43: aload_1
      44: if_acmpeq     57
      47: new           #80                 // class java/lang/IllegalStateException
      50: dup
      51: ldc           #234                // String Popup is already shown with different owner window
      53: invokespecial #82                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: return

  private static boolean wouldCreateCycle(javafx.stage.Window, javafx.stage.Window);
    Code:
       0: aload_0
       1: ifnull        19
       4: aload_0
       5: aload_1
       6: if_acmpne     11
       9: iconst_1
      10: ireturn
      11: aload_0
      12: invokevirtual #235                // Method javafx/stage/Window.getWindowOwner:()Ljavafx/stage/Window;
      15: astore_0
      16: goto          0
      19: iconst_0
      20: ireturn

  private void lambda$bindOwnerFocusedProperty$1(javafx.beans.value.ObservableValue, java.lang.Boolean, java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_3
       2: invokevirtual #236                // Method java/lang/Boolean.booleanValue:()Z
       5: invokestatic  #154                // Method com/sun/javafx/stage/WindowHelper.setFocused:(Ljavafx/stage/Window;Z)V
       8: return

  private void lambda$new$0(javafx.beans.value.ObservableValue, java.lang.Boolean, java.lang.Boolean);
    Code:
       0: aload_2
       1: invokevirtual #236                // Method java/lang/Boolean.booleanValue:()Z
       4: ifeq          18
       7: aload_3
       8: invokevirtual #236                // Method java/lang/Boolean.booleanValue:()Z
      11: ifne          18
      14: aload_0
      15: invokevirtual #126                // Method hide:()V
      18: return

  static void access$000(javafx.stage.PopupWindow, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #10                 // Method doVisibleChanging:(Z)V
       5: return

  static void access$100(javafx.stage.PopupWindow, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #9                  // Method doVisibleChanged:(Z)V
       5: return

  static javafx.geometry.Bounds access$202(javafx.stage.PopupWindow, javafx.geometry.Bounds);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #8                  // Field cachedExtendedBounds:Ljavafx/geometry/Bounds;
       6: areturn

  static javafx.geometry.Bounds access$302(javafx.stage.PopupWindow, javafx.geometry.Bounds);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #7                  // Field cachedAnchorBounds:Ljavafx/geometry/Bounds;
       6: areturn

  static void access$400(javafx.stage.PopupWindow, double, double);
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: invokespecial #6                  // Method updateWindow:(DD)V
       6: return

  static javafx.beans.InvalidationListener access$500(javafx.stage.PopupWindow);
    Code:
       0: aload_0
       1: getfield      #5                  // Field popupWindowUpdater:Ljavafx/beans/InvalidationListener;
       4: areturn

  static void access$600(javafx.stage.PopupWindow, boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #4                  // Method handleAutofixActivation:(ZZ)V
       6: return

  static void access$700(javafx.stage.PopupWindow, boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #3                  // Method handleAutohideActivation:(ZZ)V
       6: return

  static double access$800(javafx.stage.PopupWindow, double);
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #2                  // Method windowToAnchorX:(D)D
       5: dreturn

  static double access$900(javafx.stage.PopupWindow, double);
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #1                  // Method windowToAnchorY:(D)D
       5: dreturn

  static {};
    Code:
       0: new           #237                // class javafx/stage/PopupWindow$1
       3: dup
       4: invokespecial #238                // Method javafx/stage/PopupWindow$1."<init>":()V
       7: invokestatic  #239                // Method com/sun/javafx/stage/PopupWindowHelper.setPopupWindowAccessor:(Lcom/sun/javafx/stage/PopupWindowHelper$PopupWindowAccessor;)V
      10: return
}
