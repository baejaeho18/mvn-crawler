Compiled from "Window.java"
final class javafx.stage.Window$SceneModel extends javafx.beans.property.ReadOnlyObjectWrapper<javafx.scene.Scene> {
  private javafx.scene.Scene oldScene;

  final javafx.stage.Window this$0;

  private javafx.stage.Window$SceneModel(javafx.stage.Window);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Ljavafx/stage/Window;
       5: aload_0
       6: invokespecial #3                  // Method javafx/beans/property/ReadOnlyObjectWrapper."<init>":()V
       9: return

  protected void invalidated();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method get:()Ljava/lang/Object;
       4: checkcast     #5                  // class javafx/scene/Scene
       7: astore_1
       8: aload_0
       9: getfield      #6                  // Field oldScene:Ljavafx/scene/Scene;
      12: aload_1
      13: if_acmpne     17
      16: return
      17: aload_0
      18: getfield      #2                  // Field this$0:Ljavafx/stage/Window;
      21: invokestatic  #7                  // Method javafx/stage/Window.access$900:(Ljavafx/stage/Window;)Lcom/sun/javafx/tk/TKStage;
      24: ifnull        33
      27: invokestatic  #8                  // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      30: invokevirtual #9                  // Method com/sun/javafx/tk/Toolkit.checkFxUserThread:()V
      33: aload_0
      34: aconst_null
      35: invokespecial #10                 // Method updatePeerScene:(Lcom/sun/javafx/tk/TKScene;)V
      38: aload_0
      39: getfield      #6                  // Field oldScene:Ljavafx/scene/Scene;
      42: ifnull        63
      45: aload_0
      46: getfield      #6                  // Field oldScene:Ljavafx/scene/Scene;
      49: aconst_null
      50: invokestatic  #11                 // Method com/sun/javafx/scene/SceneHelper.setWindow:(Ljavafx/scene/Scene;Ljavafx/stage/Window;)V
      53: invokestatic  #12                 // Method com/sun/javafx/css/StyleManager.getInstance:()Lcom/sun/javafx/css/StyleManager;
      56: aload_0
      57: getfield      #6                  // Field oldScene:Ljavafx/scene/Scene;
      60: invokevirtual #13                 // Method com/sun/javafx/css/StyleManager.forget:(Ljavafx/scene/Scene;)V
      63: aload_1
      64: ifnull        152
      67: aload_1
      68: invokevirtual #14                 // Method javafx/scene/Scene.getWindow:()Ljavafx/stage/Window;
      71: astore_2
      72: aload_2
      73: ifnull        81
      76: aload_2
      77: aconst_null
      78: invokevirtual #15                 // Method javafx/stage/Window.setScene:(Ljavafx/scene/Scene;)V
      81: aload_1
      82: aload_0
      83: getfield      #2                  // Field this$0:Ljavafx/stage/Window;
      86: invokestatic  #11                 // Method com/sun/javafx/scene/SceneHelper.setWindow:(Ljavafx/scene/Scene;Ljavafx/stage/Window;)V
      89: aload_0
      90: aload_1
      91: invokestatic  #16                 // Method com/sun/javafx/scene/SceneHelper.getPeer:(Ljavafx/scene/Scene;)Lcom/sun/javafx/tk/TKScene;
      94: invokespecial #10                 // Method updatePeerScene:(Lcom/sun/javafx/tk/TKScene;)V
      97: aload_0
      98: getfield      #2                  // Field this$0:Ljavafx/stage/Window;
     101: invokevirtual #17                 // Method javafx/stage/Window.isShowing:()Z
     104: ifeq          152
     107: aload_1
     108: invokevirtual #18                 // Method javafx/scene/Scene.getRoot:()Ljavafx/scene/Parent;
     111: invokestatic  #19                 // Method com/sun/javafx/scene/NodeHelper.reapplyCSS:(Ljavafx/scene/Node;)V
     114: aload_0
     115: getfield      #2                  // Field this$0:Ljavafx/stage/Window;
     118: invokestatic  #20                 // Method javafx/stage/Window.access$1000:(Ljavafx/stage/Window;)Z
     121: ifeq          134
     124: aload_0
     125: getfield      #2                  // Field this$0:Ljavafx/stage/Window;
     128: invokestatic  #21                 // Method javafx/stage/Window.access$1100:(Ljavafx/stage/Window;)Z
     131: ifne          152
     134: aload_0
     135: getfield      #2                  // Field this$0:Ljavafx/stage/Window;
     138: invokevirtual #22                 // Method javafx/stage/Window.getScene:()Ljavafx/scene/Scene;
     141: invokestatic  #23                 // Method com/sun/javafx/scene/SceneHelper.preferredSize:(Ljavafx/scene/Scene;)V
     144: aload_0
     145: getfield      #2                  // Field this$0:Ljavafx/stage/Window;
     148: iconst_1
     149: invokestatic  #24                 // Method javafx/stage/Window.access$1200:(Ljavafx/stage/Window;Z)V
     152: aload_0
     153: aload_1
     154: putfield      #6                  // Field oldScene:Ljavafx/scene/Scene;
     157: return

  public java.lang.Object getBean();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Ljavafx/stage/Window;
       4: areturn

  public java.lang.String getName();
    Code:
       0: ldc           #25                 // String scene
       2: areturn

  private void updatePeerScene(com.sun.javafx.tk.TKScene);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Ljavafx/stage/Window;
       4: invokestatic  #7                  // Method javafx/stage/Window.access$900:(Ljavafx/stage/Window;)Lcom/sun/javafx/tk/TKStage;
       7: ifnull        23
      10: aload_0
      11: getfield      #2                  // Field this$0:Ljavafx/stage/Window;
      14: invokestatic  #7                  // Method javafx/stage/Window.access$900:(Ljavafx/stage/Window;)Lcom/sun/javafx/tk/TKStage;
      17: aload_1
      18: invokeinterface #26,  2           // InterfaceMethod com/sun/javafx/tk/TKStage.setScene:(Lcom/sun/javafx/tk/TKScene;)V
      23: return

  javafx.stage.Window$SceneModel(javafx.stage.Window, javafx.stage.Window$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Ljavafx/stage/Window;)V
       5: return
}
