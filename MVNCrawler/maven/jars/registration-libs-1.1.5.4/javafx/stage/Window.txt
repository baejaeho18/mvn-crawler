Compiled from "Window.java"
public class javafx.stage.Window implements javafx.event.EventTarget {
  private static javafx.collections.ObservableList<javafx.stage.Window> windows;

  private static javafx.collections.ObservableList<javafx.stage.Window> unmodifiableWindows;

  private com.sun.javafx.stage.WindowHelper windowHelper;

  final java.security.AccessControlContext acc;

  private com.sun.javafx.stage.WindowPeerListener peerListener;

  private com.sun.javafx.tk.TKStage peer;

  private javafx.stage.Window$TKBoundsConfigurator peerBoundsConfigurator;

  private boolean sizeToScene;

  private static final float CENTER_ON_SCREEN_X_FRACTION;

  private static final float CENTER_ON_SCREEN_Y_FRACTION;

  private javafx.beans.property.ReadOnlyDoubleWrapper outputScaleX;

  private javafx.beans.property.ReadOnlyDoubleWrapper outputScaleY;

  private javafx.beans.property.BooleanProperty forceIntegerRenderScale;

  private javafx.beans.property.DoubleProperty renderScaleX;

  private javafx.beans.property.DoubleProperty renderScaleY;

  private boolean xExplicit;

  private javafx.beans.property.ReadOnlyDoubleWrapper x;

  private boolean yExplicit;

  private javafx.beans.property.ReadOnlyDoubleWrapper y;

  private boolean widthExplicit;

  private javafx.beans.property.ReadOnlyDoubleWrapper width;

  private boolean heightExplicit;

  private javafx.beans.property.ReadOnlyDoubleWrapper height;

  private javafx.beans.property.ReadOnlyBooleanWrapper focused;

  private static final java.lang.Object USER_DATA_KEY;

  private javafx.collections.ObservableMap<java.lang.Object, java.lang.Object> properties;

  private javafx.stage.Window$SceneModel scene;

  private javafx.beans.property.DoubleProperty opacity;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<javafx.stage.WindowEvent>> onCloseRequest;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<javafx.stage.WindowEvent>> onShowing;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<javafx.stage.WindowEvent>> onShown;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<javafx.stage.WindowEvent>> onHiding;

  private javafx.beans.property.ObjectProperty<javafx.event.EventHandler<javafx.stage.WindowEvent>> onHidden;

  private javafx.beans.property.ReadOnlyBooleanWrapper showing;

  boolean hasBeenVisible;

  private javafx.beans.property.ObjectProperty<javafx.event.EventDispatcher> eventDispatcher;

  private com.sun.javafx.stage.WindowEventDispatcher internalEventDispatcher;

  private int focusGrabCounter;

  private final javafx.beans.property.ReadOnlyObjectWrapper<javafx.stage.Screen> screen;

  static final boolean $assertionsDisabled;

  public static javafx.collections.ObservableList<javafx.stage.Window> getWindows();
    Code:
       0: invokestatic  #18                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_0
       4: aload_0
       5: ifnull        15
       8: aload_0
       9: getstatic     #19                 // Field com/sun/javafx/FXPermissions.ACCESS_WINDOW_LIST_PERMISSION:Ljavafx/util/FXPermission;
      12: invokevirtual #20                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      15: getstatic     #21                 // Field unmodifiableWindows:Ljavafx/collections/ObservableList;
      18: areturn

  protected javafx.stage.Window();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #17                 // Field windowHelper:Lcom/sun/javafx/stage/WindowHelper;
       9: aload_0
      10: invokestatic  #23                 // Method java/security/AccessController.getContext:()Ljava/security/AccessControlContext;
      13: putfield      #24                 // Field acc:Ljava/security/AccessControlContext;
      16: aload_0
      17: new           #25                 // class javafx/stage/Window$TKBoundsConfigurator
      20: dup
      21: aload_0
      22: invokespecial #26                 // Method javafx/stage/Window$TKBoundsConfigurator."<init>":(Ljavafx/stage/Window;)V
      25: putfield      #11                 // Field peerBoundsConfigurator:Ljavafx/stage/Window$TKBoundsConfigurator;
      28: aload_0
      29: iconst_0
      30: putfield      #1                  // Field sizeToScene:Z
      33: aload_0
      34: new           #27                 // class javafx/beans/property/ReadOnlyDoubleWrapper
      37: dup
      38: aload_0
      39: ldc           #28                 // String outputScaleX
      41: dconst_1
      42: invokespecial #29                 // Method javafx/beans/property/ReadOnlyDoubleWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;D)V
      45: putfield      #30                 // Field outputScaleX:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      48: aload_0
      49: new           #27                 // class javafx/beans/property/ReadOnlyDoubleWrapper
      52: dup
      53: aload_0
      54: ldc           #31                 // String outputScaleY
      56: dconst_1
      57: invokespecial #29                 // Method javafx/beans/property/ReadOnlyDoubleWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;D)V
      60: putfield      #32                 // Field outputScaleY:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      63: aload_0
      64: new           #33                 // class javafx/stage/Window$2
      67: dup
      68: aload_0
      69: aload_0
      70: ldc           #34                 // String forceIntegerRenderScale
      72: iconst_0
      73: invokespecial #35                 // Method javafx/stage/Window$2."<init>":(Ljavafx/stage/Window;Ljava/lang/Object;Ljava/lang/String;Z)V
      76: putfield      #36                 // Field forceIntegerRenderScale:Ljavafx/beans/property/BooleanProperty;
      79: aload_0
      80: new           #37                 // class javafx/stage/Window$3
      83: dup
      84: aload_0
      85: aload_0
      86: ldc           #38                 // String renderScaleX
      88: dconst_1
      89: invokespecial #39                 // Method javafx/stage/Window$3."<init>":(Ljavafx/stage/Window;Ljava/lang/Object;Ljava/lang/String;D)V
      92: putfield      #40                 // Field renderScaleX:Ljavafx/beans/property/DoubleProperty;
      95: aload_0
      96: new           #41                 // class javafx/stage/Window$4
      99: dup
     100: aload_0
     101: aload_0
     102: ldc           #42                 // String renderScaleY
     104: dconst_1
     105: invokespecial #43                 // Method javafx/stage/Window$4."<init>":(Ljavafx/stage/Window;Ljava/lang/Object;Ljava/lang/String;D)V
     108: putfield      #44                 // Field renderScaleY:Ljavafx/beans/property/DoubleProperty;
     111: aload_0
     112: iconst_0
     113: putfield      #3                  // Field xExplicit:Z
     116: aload_0
     117: new           #27                 // class javafx/beans/property/ReadOnlyDoubleWrapper
     120: dup
     121: aload_0
     122: ldc           #45                 // String x
     124: ldc2_w        #47                 // double NaNd
     127: invokespecial #29                 // Method javafx/beans/property/ReadOnlyDoubleWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;D)V
     130: putfield      #49                 // Field x:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
     133: aload_0
     134: iconst_0
     135: putfield      #2                  // Field yExplicit:Z
     138: aload_0
     139: new           #27                 // class javafx/beans/property/ReadOnlyDoubleWrapper
     142: dup
     143: aload_0
     144: ldc           #50                 // String y
     146: ldc2_w        #47                 // double NaNd
     149: invokespecial #29                 // Method javafx/beans/property/ReadOnlyDoubleWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;D)V
     152: putfield      #51                 // Field y:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
     155: aload_0
     156: iconst_0
     157: putfield      #8                  // Field widthExplicit:Z
     160: aload_0
     161: new           #27                 // class javafx/beans/property/ReadOnlyDoubleWrapper
     164: dup
     165: aload_0
     166: ldc           #52                 // String width
     168: ldc2_w        #47                 // double NaNd
     171: invokespecial #29                 // Method javafx/beans/property/ReadOnlyDoubleWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;D)V
     174: putfield      #53                 // Field width:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
     177: aload_0
     178: iconst_0
     179: putfield      #7                  // Field heightExplicit:Z
     182: aload_0
     183: new           #27                 // class javafx/beans/property/ReadOnlyDoubleWrapper
     186: dup
     187: aload_0
     188: ldc           #54                 // String height
     190: ldc2_w        #47                 // double NaNd
     193: invokespecial #29                 // Method javafx/beans/property/ReadOnlyDoubleWrapper."<init>":(Ljava/lang/Object;Ljava/lang/String;D)V
     196: putfield      #55                 // Field height:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
     199: aload_0
     200: new           #56                 // class javafx/stage/Window$5
     203: dup
     204: aload_0
     205: invokespecial #57                 // Method javafx/stage/Window$5."<init>":(Ljavafx/stage/Window;)V
     208: putfield      #58                 // Field focused:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
     211: aload_0
     212: new           #59                 // class javafx/stage/Window$SceneModel
     215: dup
     216: aload_0
     217: aconst_null
     218: invokespecial #60                 // Method javafx/stage/Window$SceneModel."<init>":(Ljavafx/stage/Window;Ljavafx/stage/Window$1;)V
     221: putfield      #61                 // Field scene:Ljavafx/stage/Window$SceneModel;
     224: aload_0
     225: new           #62                 // class javafx/stage/Window$12
     228: dup
     229: aload_0
     230: invokespecial #63                 // Method javafx/stage/Window$12."<init>":(Ljavafx/stage/Window;)V
     233: putfield      #64                 // Field showing:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
     236: aload_0
     237: iconst_0
     238: putfield      #65                 // Field hasBeenVisible:Z
     241: aload_0
     242: new           #66                 // class javafx/beans/property/ReadOnlyObjectWrapper
     245: dup
     246: invokestatic  #67                 // Method javafx/stage/Screen.getPrimary:()Ljavafx/stage/Screen;
     249: invokespecial #68                 // Method javafx/beans/property/ReadOnlyObjectWrapper."<init>":(Ljava/lang/Object;)V
     252: putfield      #69                 // Field screen:Ljavafx/beans/property/ReadOnlyObjectWrapper;
     255: aload_0
     256: invokespecial #70                 // Method initializeInternalEventDispatcher:()V
     259: aload_0
     260: invokestatic  #71                 // Method com/sun/javafx/stage/WindowHelper.initHelper:(Ljavafx/stage/Window;)V
     263: return

  com.sun.javafx.stage.WindowPeerListener getPeerListener();
    Code:
       0: aload_0
       1: getfield      #4                  // Field peerListener:Lcom/sun/javafx/stage/WindowPeerListener;
       4: areturn

  void setPeerListener(com.sun.javafx.stage.WindowPeerListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field peerListener:Lcom/sun/javafx/stage/WindowPeerListener;
       5: return

  com.sun.javafx.tk.TKStage getPeer();
    Code:
       0: aload_0
       1: getfield      #9                  // Field peer:Lcom/sun/javafx/tk/TKStage;
       4: areturn

  void setPeer(com.sun.javafx.tk.TKStage);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field peer:Lcom/sun/javafx/tk/TKStage;
       5: return

  public void sizeToScene();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method getScene:()Ljavafx/scene/Scene;
       4: ifnull        29
       7: aload_0
       8: getfield      #9                  // Field peer:Lcom/sun/javafx/tk/TKStage;
      11: ifnull        29
      14: aload_0
      15: invokevirtual #72                 // Method getScene:()Ljavafx/scene/Scene;
      18: invokestatic  #73                 // Method com/sun/javafx/scene/SceneHelper.preferredSize:(Ljavafx/scene/Scene;)V
      21: aload_0
      22: iconst_0
      23: invokespecial #6                  // Method adjustSize:(Z)V
      26: goto          34
      29: aload_0
      30: iconst_1
      31: putfield      #1                  // Field sizeToScene:Z
      34: return

  private void adjustSize(boolean);
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method getScene:()Ljavafx/scene/Scene;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #9                  // Field peer:Lcom/sun/javafx/tk/TKStage;
      12: ifnull        201
      15: aload_0
      16: invokevirtual #72                 // Method getScene:()Ljavafx/scene/Scene;
      19: invokevirtual #74                 // Method javafx/scene/Scene.getWidth:()D
      22: dstore_2
      23: dload_2
      24: dconst_0
      25: dcmpl
      26: ifle          33
      29: dload_2
      30: goto          36
      33: ldc2_w        #75                 // double -1.0d
      36: dstore        4
      38: ldc2_w        #75                 // double -1.0d
      41: dstore        6
      43: iload_1
      44: ifeq          63
      47: aload_0
      48: getfield      #8                  // Field widthExplicit:Z
      51: ifeq          63
      54: aload_0
      55: invokevirtual #77                 // Method getWidth:()D
      58: dstore        6
      60: goto          97
      63: dload         4
      65: dconst_0
      66: dcmpg
      67: ifgt          92
      70: aload_0
      71: getfield      #8                  // Field widthExplicit:Z
      74: ifeq          84
      77: aload_0
      78: invokevirtual #77                 // Method getWidth:()D
      81: goto          87
      84: ldc2_w        #75                 // double -1.0d
      87: dstore        6
      89: goto          97
      92: aload_0
      93: iconst_0
      94: putfield      #8                  // Field widthExplicit:Z
      97: aload_0
      98: invokevirtual #72                 // Method getScene:()Ljavafx/scene/Scene;
     101: invokevirtual #78                 // Method javafx/scene/Scene.getHeight:()D
     104: dstore        8
     106: dload         8
     108: dconst_0
     109: dcmpl
     110: ifle          118
     113: dload         8
     115: goto          121
     118: ldc2_w        #75                 // double -1.0d
     121: dstore        10
     123: ldc2_w        #75                 // double -1.0d
     126: dstore        12
     128: iload_1
     129: ifeq          148
     132: aload_0
     133: getfield      #7                  // Field heightExplicit:Z
     136: ifeq          148
     139: aload_0
     140: invokevirtual #79                 // Method getHeight:()D
     143: dstore        12
     145: goto          182
     148: dload         10
     150: dconst_0
     151: dcmpg
     152: ifgt          177
     155: aload_0
     156: getfield      #7                  // Field heightExplicit:Z
     159: ifeq          169
     162: aload_0
     163: invokevirtual #79                 // Method getHeight:()D
     166: goto          172
     169: ldc2_w        #75                 // double -1.0d
     172: dstore        12
     174: goto          182
     177: aload_0
     178: iconst_0
     179: putfield      #7                  // Field heightExplicit:Z
     182: aload_0
     183: getfield      #11                 // Field peerBoundsConfigurator:Ljavafx/stage/Window$TKBoundsConfigurator;
     186: dload         6
     188: dload         12
     190: dload         4
     192: dload         10
     194: invokevirtual #80                 // Method javafx/stage/Window$TKBoundsConfigurator.setSize:(DDDD)V
     197: aload_0
     198: invokevirtual #81                 // Method applyBounds:()V
     201: return

  public void centerOnScreen();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #3                  // Field xExplicit:Z
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field yExplicit:Z
      10: aload_0
      11: getfield      #9                  // Field peer:Lcom/sun/javafx/tk/TKStage;
      14: ifnull        99
      17: aload_0
      18: invokespecial #82                 // Method getWindowScreen:()Ljavafx/stage/Screen;
      21: invokevirtual #83                 // Method javafx/stage/Screen.getVisualBounds:()Ljavafx/geometry/Rectangle2D;
      24: astore_1
      25: aload_1
      26: invokevirtual #84                 // Method javafx/geometry/Rectangle2D.getMinX:()D
      29: aload_1
      30: invokevirtual #85                 // Method javafx/geometry/Rectangle2D.getWidth:()D
      33: aload_0
      34: invokevirtual #77                 // Method getWidth:()D
      37: dsub
      38: ldc2_w        #87                 // double 0.5d
      41: dmul
      42: dadd
      43: dstore_2
      44: aload_1
      45: invokevirtual #89                 // Method javafx/geometry/Rectangle2D.getMinY:()D
      48: aload_1
      49: invokevirtual #90                 // Method javafx/geometry/Rectangle2D.getHeight:()D
      52: aload_0
      53: invokevirtual #79                 // Method getHeight:()D
      56: dsub
      57: ldc2_w        #91                 // double 0.3333333432674408d
      60: dmul
      61: dadd
      62: dstore        4
      64: aload_0
      65: getfield      #49                 // Field x:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      68: dload_2
      69: invokevirtual #93                 // Method javafx/beans/property/ReadOnlyDoubleWrapper.set:(D)V
      72: aload_0
      73: getfield      #51                 // Field y:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      76: dload         4
      78: invokevirtual #93                 // Method javafx/beans/property/ReadOnlyDoubleWrapper.set:(D)V
      81: aload_0
      82: getfield      #11                 // Field peerBoundsConfigurator:Ljavafx/stage/Window$TKBoundsConfigurator;
      85: dload_2
      86: dload         4
      88: ldc           #94                 // float 0.5f
      90: ldc           #95                 // float 0.33333334f
      92: invokevirtual #96                 // Method javafx/stage/Window$TKBoundsConfigurator.setLocation:(DDFF)V
      95: aload_0
      96: invokevirtual #81                 // Method applyBounds:()V
      99: return

  private void updateOutputScales(double, double);
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: invokevirtual #97                 // Method updateRenderScales:(DD)V
       6: aload_0
       7: getfield      #30                 // Field outputScaleX:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      10: dload_1
      11: invokevirtual #93                 // Method javafx/beans/property/ReadOnlyDoubleWrapper.set:(D)V
      14: aload_0
      15: getfield      #32                 // Field outputScaleY:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      18: dload_3
      19: invokevirtual #93                 // Method javafx/beans/property/ReadOnlyDoubleWrapper.set:(D)V
      22: return

  void updateRenderScales(double, double);
    Code:
       0: aload_0
       1: getfield      #36                 // Field forceIntegerRenderScale:Ljavafx/beans/property/BooleanProperty;
       4: invokevirtual #98                 // Method javafx/beans/property/BooleanProperty.get:()Z
       7: istore        5
       9: aload_0
      10: getfield      #40                 // Field renderScaleX:Ljavafx/beans/property/DoubleProperty;
      13: invokevirtual #99                 // Method javafx/beans/property/DoubleProperty.isBound:()Z
      16: ifne          39
      19: aload_0
      20: getfield      #40                 // Field renderScaleX:Ljavafx/beans/property/DoubleProperty;
      23: iload         5
      25: ifeq          35
      28: dload_1
      29: invokestatic  #100                // Method java/lang/Math.ceil:(D)D
      32: goto          36
      35: dload_1
      36: invokevirtual #101                // Method javafx/beans/property/DoubleProperty.set:(D)V
      39: aload_0
      40: getfield      #44                 // Field renderScaleY:Ljavafx/beans/property/DoubleProperty;
      43: invokevirtual #99                 // Method javafx/beans/property/DoubleProperty.isBound:()Z
      46: ifne          69
      49: aload_0
      50: getfield      #44                 // Field renderScaleY:Ljavafx/beans/property/DoubleProperty;
      53: iload         5
      55: ifeq          65
      58: dload_3
      59: invokestatic  #100                // Method java/lang/Math.ceil:(D)D
      62: goto          66
      65: dload_3
      66: invokevirtual #101                // Method javafx/beans/property/DoubleProperty.set:(D)V
      69: return

  public final double getOutputScaleX();
    Code:
       0: aload_0
       1: getfield      #30                 // Field outputScaleX:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: invokevirtual #102                // Method javafx/beans/property/ReadOnlyDoubleWrapper.get:()D
       7: dreturn

  public final javafx.beans.property.ReadOnlyDoubleProperty outputScaleXProperty();
    Code:
       0: aload_0
       1: getfield      #30                 // Field outputScaleX:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: invokevirtual #103                // Method javafx/beans/property/ReadOnlyDoubleWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
       7: areturn

  public final double getOutputScaleY();
    Code:
       0: aload_0
       1: getfield      #32                 // Field outputScaleY:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: invokevirtual #102                // Method javafx/beans/property/ReadOnlyDoubleWrapper.get:()D
       7: dreturn

  public final javafx.beans.property.ReadOnlyDoubleProperty outputScaleYProperty();
    Code:
       0: aload_0
       1: getfield      #32                 // Field outputScaleY:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: invokevirtual #103                // Method javafx/beans/property/ReadOnlyDoubleWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
       7: areturn

  public final void setForceIntegerRenderScale(boolean);
    Code:
       0: aload_0
       1: getfield      #36                 // Field forceIntegerRenderScale:Ljavafx/beans/property/BooleanProperty;
       4: iload_1
       5: invokevirtual #104                // Method javafx/beans/property/BooleanProperty.set:(Z)V
       8: return

  public final boolean isForceIntegerRenderScale();
    Code:
       0: aload_0
       1: getfield      #36                 // Field forceIntegerRenderScale:Ljavafx/beans/property/BooleanProperty;
       4: invokevirtual #98                 // Method javafx/beans/property/BooleanProperty.get:()Z
       7: ireturn

  public final javafx.beans.property.BooleanProperty forceIntegerRenderScaleProperty();
    Code:
       0: aload_0
       1: getfield      #36                 // Field forceIntegerRenderScale:Ljavafx/beans/property/BooleanProperty;
       4: areturn

  public final void setRenderScaleX(double);
    Code:
       0: aload_0
       1: getfield      #40                 // Field renderScaleX:Ljavafx/beans/property/DoubleProperty;
       4: dload_1
       5: invokevirtual #101                // Method javafx/beans/property/DoubleProperty.set:(D)V
       8: return

  public final double getRenderScaleX();
    Code:
       0: aload_0
       1: getfield      #40                 // Field renderScaleX:Ljavafx/beans/property/DoubleProperty;
       4: invokevirtual #105                // Method javafx/beans/property/DoubleProperty.get:()D
       7: dreturn

  public final javafx.beans.property.DoubleProperty renderScaleXProperty();
    Code:
       0: aload_0
       1: getfield      #40                 // Field renderScaleX:Ljavafx/beans/property/DoubleProperty;
       4: areturn

  public final void setRenderScaleY(double);
    Code:
       0: aload_0
       1: getfield      #44                 // Field renderScaleY:Ljavafx/beans/property/DoubleProperty;
       4: dload_1
       5: invokevirtual #101                // Method javafx/beans/property/DoubleProperty.set:(D)V
       8: return

  public final double getRenderScaleY();
    Code:
       0: aload_0
       1: getfield      #44                 // Field renderScaleY:Ljavafx/beans/property/DoubleProperty;
       4: invokevirtual #105                // Method javafx/beans/property/DoubleProperty.get:()D
       7: dreturn

  public final javafx.beans.property.DoubleProperty renderScaleYProperty();
    Code:
       0: aload_0
       1: getfield      #44                 // Field renderScaleY:Ljavafx/beans/property/DoubleProperty;
       4: areturn

  public final void setX(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #106                // Method setXInternal:(D)V
       5: return

  public final double getX();
    Code:
       0: aload_0
       1: getfield      #49                 // Field x:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: invokevirtual #102                // Method javafx/beans/property/ReadOnlyDoubleWrapper.get:()D
       7: dreturn

  public final javafx.beans.property.ReadOnlyDoubleProperty xProperty();
    Code:
       0: aload_0
       1: getfield      #49                 // Field x:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: invokevirtual #103                // Method javafx/beans/property/ReadOnlyDoubleWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
       7: areturn

  void setXInternal(double);
    Code:
       0: aload_0
       1: getfield      #49                 // Field x:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: dload_1
       5: invokevirtual #93                 // Method javafx/beans/property/ReadOnlyDoubleWrapper.set:(D)V
       8: aload_0
       9: getfield      #11                 // Field peerBoundsConfigurator:Ljavafx/stage/Window$TKBoundsConfigurator;
      12: dload_1
      13: fconst_0
      14: invokevirtual #107                // Method javafx/stage/Window$TKBoundsConfigurator.setX:(DF)V
      17: aload_0
      18: iconst_1
      19: putfield      #3                  // Field xExplicit:Z
      22: return

  public final void setY(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #108                // Method setYInternal:(D)V
       5: return

  public final double getY();
    Code:
       0: aload_0
       1: getfield      #51                 // Field y:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: invokevirtual #102                // Method javafx/beans/property/ReadOnlyDoubleWrapper.get:()D
       7: dreturn

  public final javafx.beans.property.ReadOnlyDoubleProperty yProperty();
    Code:
       0: aload_0
       1: getfield      #51                 // Field y:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: invokevirtual #103                // Method javafx/beans/property/ReadOnlyDoubleWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
       7: areturn

  void setYInternal(double);
    Code:
       0: aload_0
       1: getfield      #51                 // Field y:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: dload_1
       5: invokevirtual #93                 // Method javafx/beans/property/ReadOnlyDoubleWrapper.set:(D)V
       8: aload_0
       9: getfield      #11                 // Field peerBoundsConfigurator:Ljavafx/stage/Window$TKBoundsConfigurator;
      12: dload_1
      13: fconst_0
      14: invokevirtual #109                // Method javafx/stage/Window$TKBoundsConfigurator.setY:(DF)V
      17: aload_0
      18: iconst_1
      19: putfield      #2                  // Field yExplicit:Z
      22: return

  void notifyLocationChanged(double, double);
    Code:
       0: aload_0
       1: getfield      #49                 // Field x:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: dload_1
       5: invokevirtual #93                 // Method javafx/beans/property/ReadOnlyDoubleWrapper.set:(D)V
       8: aload_0
       9: getfield      #51                 // Field y:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      12: dload_3
      13: invokevirtual #93                 // Method javafx/beans/property/ReadOnlyDoubleWrapper.set:(D)V
      16: return

  public final void setWidth(double);
    Code:
       0: aload_0
       1: getfield      #53                 // Field width:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: dload_1
       5: invokevirtual #93                 // Method javafx/beans/property/ReadOnlyDoubleWrapper.set:(D)V
       8: aload_0
       9: getfield      #11                 // Field peerBoundsConfigurator:Ljavafx/stage/Window$TKBoundsConfigurator;
      12: dload_1
      13: invokevirtual #110                // Method javafx/stage/Window$TKBoundsConfigurator.setWindowWidth:(D)V
      16: aload_0
      17: iconst_1
      18: putfield      #8                  // Field widthExplicit:Z
      21: return

  public final double getWidth();
    Code:
       0: aload_0
       1: getfield      #53                 // Field width:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: invokevirtual #102                // Method javafx/beans/property/ReadOnlyDoubleWrapper.get:()D
       7: dreturn

  public final javafx.beans.property.ReadOnlyDoubleProperty widthProperty();
    Code:
       0: aload_0
       1: getfield      #53                 // Field width:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: invokevirtual #103                // Method javafx/beans/property/ReadOnlyDoubleWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
       7: areturn

  public final void setHeight(double);
    Code:
       0: aload_0
       1: getfield      #55                 // Field height:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: dload_1
       5: invokevirtual #93                 // Method javafx/beans/property/ReadOnlyDoubleWrapper.set:(D)V
       8: aload_0
       9: getfield      #11                 // Field peerBoundsConfigurator:Ljavafx/stage/Window$TKBoundsConfigurator;
      12: dload_1
      13: invokevirtual #111                // Method javafx/stage/Window$TKBoundsConfigurator.setWindowHeight:(D)V
      16: aload_0
      17: iconst_1
      18: putfield      #7                  // Field heightExplicit:Z
      21: return

  public final double getHeight();
    Code:
       0: aload_0
       1: getfield      #55                 // Field height:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: invokevirtual #102                // Method javafx/beans/property/ReadOnlyDoubleWrapper.get:()D
       7: dreturn

  public final javafx.beans.property.ReadOnlyDoubleProperty heightProperty();
    Code:
       0: aload_0
       1: getfield      #55                 // Field height:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: invokevirtual #103                // Method javafx/beans/property/ReadOnlyDoubleWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyDoubleProperty;
       7: areturn

  void notifySizeChanged(double, double);
    Code:
       0: aload_0
       1: getfield      #53                 // Field width:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
       4: dload_1
       5: invokevirtual #93                 // Method javafx/beans/property/ReadOnlyDoubleWrapper.set:(D)V
       8: aload_0
       9: getfield      #55                 // Field height:Ljavafx/beans/property/ReadOnlyDoubleWrapper;
      12: dload_3
      13: invokevirtual #93                 // Method javafx/beans/property/ReadOnlyDoubleWrapper.set:(D)V
      16: return

  final void setFocused(boolean);
    Code:
       0: aload_0
       1: getfield      #58                 // Field focused:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: iload_1
       5: invokevirtual #112                // Method javafx/beans/property/ReadOnlyBooleanWrapper.set:(Z)V
       8: return

  public final void requestFocus();
    Code:
       0: aload_0
       1: getfield      #9                  // Field peer:Lcom/sun/javafx/tk/TKStage;
       4: ifnull        16
       7: aload_0
       8: getfield      #9                  // Field peer:Lcom/sun/javafx/tk/TKStage;
      11: invokeinterface #113,  1          // InterfaceMethod com/sun/javafx/tk/TKStage.requestFocus:()V
      16: return

  public final boolean isFocused();
    Code:
       0: aload_0
       1: getfield      #58                 // Field focused:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: invokevirtual #114                // Method javafx/beans/property/ReadOnlyBooleanWrapper.get:()Z
       7: ireturn

  public final javafx.beans.property.ReadOnlyBooleanProperty focusedProperty();
    Code:
       0: aload_0
       1: getfield      #58                 // Field focused:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: invokevirtual #115                // Method javafx/beans/property/ReadOnlyBooleanWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyBooleanProperty;
       7: areturn

  public final javafx.collections.ObservableMap<java.lang.Object, java.lang.Object> getProperties();
    Code:
       0: aload_0
       1: getfield      #116                // Field properties:Ljavafx/collections/ObservableMap;
       4: ifnonnull     21
       7: aload_0
       8: new           #117                // class java/util/HashMap
      11: dup
      12: invokespecial #118                // Method java/util/HashMap."<init>":()V
      15: invokestatic  #119                // Method javafx/collections/FXCollections.observableMap:(Ljava/util/Map;)Ljavafx/collections/ObservableMap;
      18: putfield      #116                // Field properties:Ljavafx/collections/ObservableMap;
      21: aload_0
      22: getfield      #116                // Field properties:Ljavafx/collections/ObservableMap;
      25: areturn

  public boolean hasProperties();
    Code:
       0: aload_0
       1: getfield      #116                // Field properties:Ljavafx/collections/ObservableMap;
       4: ifnull        23
       7: aload_0
       8: getfield      #116                // Field properties:Ljavafx/collections/ObservableMap;
      11: invokeinterface #120,  1          // InterfaceMethod javafx/collections/ObservableMap.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public void setUserData(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #121                // Method getProperties:()Ljavafx/collections/ObservableMap;
       4: getstatic     #122                // Field USER_DATA_KEY:Ljava/lang/Object;
       7: aload_1
       8: invokeinterface #123,  3          // InterfaceMethod javafx/collections/ObservableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: return

  public java.lang.Object getUserData();
    Code:
       0: aload_0
       1: invokevirtual #121                // Method getProperties:()Ljavafx/collections/ObservableMap;
       4: getstatic     #122                // Field USER_DATA_KEY:Ljava/lang/Object;
       7: invokeinterface #124,  2          // InterfaceMethod javafx/collections/ObservableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  protected void setScene(javafx.scene.Scene);
    Code:
       0: aload_0
       1: getfield      #61                 // Field scene:Ljavafx/stage/Window$SceneModel;
       4: aload_1
       5: invokevirtual #125                // Method javafx/stage/Window$SceneModel.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.scene.Scene getScene();
    Code:
       0: aload_0
       1: getfield      #61                 // Field scene:Ljavafx/stage/Window$SceneModel;
       4: invokevirtual #126                // Method javafx/stage/Window$SceneModel.get:()Ljava/lang/Object;
       7: checkcast     #127                // class javafx/scene/Scene
      10: areturn

  public final javafx.beans.property.ReadOnlyObjectProperty<javafx.scene.Scene> sceneProperty();
    Code:
       0: aload_0
       1: getfield      #61                 // Field scene:Ljavafx/stage/Window$SceneModel;
       4: invokevirtual #128                // Method javafx/stage/Window$SceneModel.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       7: areturn

  public final void setOpacity(double);
    Code:
       0: aload_0
       1: invokevirtual #129                // Method opacityProperty:()Ljavafx/beans/property/DoubleProperty;
       4: dload_1
       5: invokevirtual #101                // Method javafx/beans/property/DoubleProperty.set:(D)V
       8: return

  public final double getOpacity();
    Code:
       0: aload_0
       1: getfield      #130                // Field opacity:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     11
       7: dconst_1
       8: goto          18
      11: aload_0
      12: getfield      #130                // Field opacity:Ljavafx/beans/property/DoubleProperty;
      15: invokevirtual #105                // Method javafx/beans/property/DoubleProperty.get:()D
      18: dreturn

  public final javafx.beans.property.DoubleProperty opacityProperty();
    Code:
       0: aload_0
       1: getfield      #130                // Field opacity:Ljavafx/beans/property/DoubleProperty;
       4: ifnonnull     20
       7: aload_0
       8: new           #131                // class javafx/stage/Window$6
      11: dup
      12: aload_0
      13: dconst_1
      14: invokespecial #132                // Method javafx/stage/Window$6."<init>":(Ljavafx/stage/Window;D)V
      17: putfield      #130                // Field opacity:Ljavafx/beans/property/DoubleProperty;
      20: aload_0
      21: getfield      #130                // Field opacity:Ljavafx/beans/property/DoubleProperty;
      24: areturn

  public final void setOnCloseRequest(javafx.event.EventHandler<javafx.stage.WindowEvent>);
    Code:
       0: aload_0
       1: invokevirtual #133                // Method onCloseRequestProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #134                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<javafx.stage.WindowEvent> getOnCloseRequest();
    Code:
       0: aload_0
       1: getfield      #135                // Field onCloseRequest:Ljavafx/beans/property/ObjectProperty;
       4: ifnull        20
       7: aload_0
       8: getfield      #135                // Field onCloseRequest:Ljavafx/beans/property/ObjectProperty;
      11: invokevirtual #136                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      14: checkcast     #137                // class javafx/event/EventHandler
      17: goto          21
      20: aconst_null
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<javafx.stage.WindowEvent>> onCloseRequestProperty();
    Code:
       0: aload_0
       1: getfield      #135                // Field onCloseRequest:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #138                // class javafx/stage/Window$7
      11: dup
      12: aload_0
      13: invokespecial #139                // Method javafx/stage/Window$7."<init>":(Ljavafx/stage/Window;)V
      16: putfield      #135                // Field onCloseRequest:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #135                // Field onCloseRequest:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnShowing(javafx.event.EventHandler<javafx.stage.WindowEvent>);
    Code:
       0: aload_0
       1: invokevirtual #140                // Method onShowingProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #134                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<javafx.stage.WindowEvent> getOnShowing();
    Code:
       0: aload_0
       1: getfield      #141                // Field onShowing:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #141                // Field onShowing:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #136                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #137                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<javafx.stage.WindowEvent>> onShowingProperty();
    Code:
       0: aload_0
       1: getfield      #141                // Field onShowing:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #142                // class javafx/stage/Window$8
      11: dup
      12: aload_0
      13: invokespecial #143                // Method javafx/stage/Window$8."<init>":(Ljavafx/stage/Window;)V
      16: putfield      #141                // Field onShowing:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #141                // Field onShowing:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnShown(javafx.event.EventHandler<javafx.stage.WindowEvent>);
    Code:
       0: aload_0
       1: invokevirtual #144                // Method onShownProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #134                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<javafx.stage.WindowEvent> getOnShown();
    Code:
       0: aload_0
       1: getfield      #145                // Field onShown:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #145                // Field onShown:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #136                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #137                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<javafx.stage.WindowEvent>> onShownProperty();
    Code:
       0: aload_0
       1: getfield      #145                // Field onShown:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #146                // class javafx/stage/Window$9
      11: dup
      12: aload_0
      13: invokespecial #147                // Method javafx/stage/Window$9."<init>":(Ljavafx/stage/Window;)V
      16: putfield      #145                // Field onShown:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #145                // Field onShown:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnHiding(javafx.event.EventHandler<javafx.stage.WindowEvent>);
    Code:
       0: aload_0
       1: invokevirtual #148                // Method onHidingProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #134                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<javafx.stage.WindowEvent> getOnHiding();
    Code:
       0: aload_0
       1: getfield      #149                // Field onHiding:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #149                // Field onHiding:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #136                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #137                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<javafx.stage.WindowEvent>> onHidingProperty();
    Code:
       0: aload_0
       1: getfield      #149                // Field onHiding:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #150                // class javafx/stage/Window$10
      11: dup
      12: aload_0
      13: invokespecial #151                // Method javafx/stage/Window$10."<init>":(Ljavafx/stage/Window;)V
      16: putfield      #149                // Field onHiding:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #149                // Field onHiding:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  public final void setOnHidden(javafx.event.EventHandler<javafx.stage.WindowEvent>);
    Code:
       0: aload_0
       1: invokevirtual #152                // Method onHiddenProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #134                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventHandler<javafx.stage.WindowEvent> getOnHidden();
    Code:
       0: aload_0
       1: getfield      #153                // Field onHidden:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #153                // Field onHidden:Ljavafx/beans/property/ObjectProperty;
      15: invokevirtual #136                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      18: checkcast     #137                // class javafx/event/EventHandler
      21: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventHandler<javafx.stage.WindowEvent>> onHiddenProperty();
    Code:
       0: aload_0
       1: getfield      #153                // Field onHidden:Ljavafx/beans/property/ObjectProperty;
       4: ifnonnull     19
       7: aload_0
       8: new           #154                // class javafx/stage/Window$11
      11: dup
      12: aload_0
      13: invokespecial #155                // Method javafx/stage/Window$11."<init>":(Ljavafx/stage/Window;)V
      16: putfield      #153                // Field onHidden:Ljavafx/beans/property/ObjectProperty;
      19: aload_0
      20: getfield      #153                // Field onHidden:Ljavafx/beans/property/ObjectProperty;
      23: areturn

  private void setShowing(boolean);
    Code:
       0: invokestatic  #156                // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: invokevirtual #157                // Method com/sun/javafx/tk/Toolkit.checkFxUserThread:()V
       6: aload_0
       7: getfield      #64                 // Field showing:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
      10: iload_1
      11: invokevirtual #112                // Method javafx/beans/property/ReadOnlyBooleanWrapper.set:(Z)V
      14: return

  public final boolean isShowing();
    Code:
       0: aload_0
       1: getfield      #64                 // Field showing:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: invokevirtual #114                // Method javafx/beans/property/ReadOnlyBooleanWrapper.get:()Z
       7: ireturn

  public final javafx.beans.property.ReadOnlyBooleanProperty showingProperty();
    Code:
       0: aload_0
       1: getfield      #64                 // Field showing:Ljavafx/beans/property/ReadOnlyBooleanWrapper;
       4: invokevirtual #115                // Method javafx/beans/property/ReadOnlyBooleanWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyBooleanProperty;
       7: areturn

  protected void show();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #158                // Method setShowing:(Z)V
       5: return

  public void hide();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #158                // Method setShowing:(Z)V
       5: return

  private void doVisibleChanging(boolean);
    Code:
       0: iload_1
       1: ifeq          21
       4: aload_0
       5: invokevirtual #72                 // Method getScene:()Ljavafx/scene/Scene;
       8: ifnull        21
      11: aload_0
      12: invokevirtual #72                 // Method getScene:()Ljavafx/scene/Scene;
      15: invokevirtual #159                // Method javafx/scene/Scene.getRoot:()Ljavafx/scene/Parent;
      18: invokestatic  #160                // Method com/sun/javafx/scene/NodeHelper.reapplyCSS:(Ljavafx/scene/Node;)V
      21: return

  private void doVisibleChanged(boolean);
    Code:
       0: getstatic     #161                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #9                  // Field peer:Lcom/sun/javafx/tk/TKStage;
      10: ifnonnull     21
      13: new           #162                // class java/lang/AssertionError
      16: dup
      17: invokespecial #163                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: iload_1
      22: ifne          35
      25: aload_0
      26: aconst_null
      27: putfield      #4                  // Field peerListener:Lcom/sun/javafx/stage/WindowPeerListener;
      30: aload_0
      31: aconst_null
      32: putfield      #9                  // Field peer:Lcom/sun/javafx/tk/TKStage;
      35: return

  public final void setEventDispatcher(javafx.event.EventDispatcher);
    Code:
       0: aload_0
       1: invokevirtual #164                // Method eventDispatcherProperty:()Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #134                // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.event.EventDispatcher getEventDispatcher();
    Code:
       0: aload_0
       1: invokevirtual #164                // Method eventDispatcherProperty:()Ljavafx/beans/property/ObjectProperty;
       4: invokevirtual #136                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
       7: checkcast     #165                // class javafx/event/EventDispatcher
      10: areturn

  public final javafx.beans.property.ObjectProperty<javafx.event.EventDispatcher> eventDispatcherProperty();
    Code:
       0: aload_0
       1: invokespecial #70                 // Method initializeInternalEventDispatcher:()V
       4: aload_0
       5: getfield      #166                // Field eventDispatcher:Ljavafx/beans/property/ObjectProperty;
       8: areturn

  public final <T extends javafx.event.Event> void addEventHandler(javafx.event.EventType<T>, javafx.event.EventHandler<? super T>);
    Code:
       0: aload_0
       1: invokevirtual #167                // Method getInternalEventDispatcher:()Lcom/sun/javafx/stage/WindowEventDispatcher;
       4: invokevirtual #168                // Method com/sun/javafx/stage/WindowEventDispatcher.getEventHandlerManager:()Lcom/sun/javafx/event/EventHandlerManager;
       7: aload_1
       8: aload_2
       9: invokevirtual #169                // Method com/sun/javafx/event/EventHandlerManager.addEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      12: return

  public final <T extends javafx.event.Event> void removeEventHandler(javafx.event.EventType<T>, javafx.event.EventHandler<? super T>);
    Code:
       0: aload_0
       1: invokevirtual #167                // Method getInternalEventDispatcher:()Lcom/sun/javafx/stage/WindowEventDispatcher;
       4: invokevirtual #168                // Method com/sun/javafx/stage/WindowEventDispatcher.getEventHandlerManager:()Lcom/sun/javafx/event/EventHandlerManager;
       7: aload_1
       8: aload_2
       9: invokevirtual #170                // Method com/sun/javafx/event/EventHandlerManager.removeEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      12: return

  public final <T extends javafx.event.Event> void addEventFilter(javafx.event.EventType<T>, javafx.event.EventHandler<? super T>);
    Code:
       0: aload_0
       1: invokevirtual #167                // Method getInternalEventDispatcher:()Lcom/sun/javafx/stage/WindowEventDispatcher;
       4: invokevirtual #168                // Method com/sun/javafx/stage/WindowEventDispatcher.getEventHandlerManager:()Lcom/sun/javafx/event/EventHandlerManager;
       7: aload_1
       8: aload_2
       9: invokevirtual #171                // Method com/sun/javafx/event/EventHandlerManager.addEventFilter:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      12: return

  public final <T extends javafx.event.Event> void removeEventFilter(javafx.event.EventType<T>, javafx.event.EventHandler<? super T>);
    Code:
       0: aload_0
       1: invokevirtual #167                // Method getInternalEventDispatcher:()Lcom/sun/javafx/stage/WindowEventDispatcher;
       4: invokevirtual #168                // Method com/sun/javafx/stage/WindowEventDispatcher.getEventHandlerManager:()Lcom/sun/javafx/event/EventHandlerManager;
       7: aload_1
       8: aload_2
       9: invokevirtual #172                // Method com/sun/javafx/event/EventHandlerManager.removeEventFilter:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      12: return

  protected final <T extends javafx.event.Event> void setEventHandler(javafx.event.EventType<T>, javafx.event.EventHandler<? super T>);
    Code:
       0: aload_0
       1: invokevirtual #167                // Method getInternalEventDispatcher:()Lcom/sun/javafx/stage/WindowEventDispatcher;
       4: invokevirtual #168                // Method com/sun/javafx/stage/WindowEventDispatcher.getEventHandlerManager:()Lcom/sun/javafx/event/EventHandlerManager;
       7: aload_1
       8: aload_2
       9: invokevirtual #173                // Method com/sun/javafx/event/EventHandlerManager.setEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      12: return

  com.sun.javafx.stage.WindowEventDispatcher getInternalEventDispatcher();
    Code:
       0: aload_0
       1: invokespecial #70                 // Method initializeInternalEventDispatcher:()V
       4: aload_0
       5: getfield      #174                // Field internalEventDispatcher:Lcom/sun/javafx/stage/WindowEventDispatcher;
       8: areturn

  private void initializeInternalEventDispatcher();
    Code:
       0: aload_0
       1: getfield      #174                // Field internalEventDispatcher:Lcom/sun/javafx/stage/WindowEventDispatcher;
       4: ifnonnull     33
       7: aload_0
       8: aload_0
       9: invokevirtual #175                // Method createInternalEventDispatcher:()Lcom/sun/javafx/stage/WindowEventDispatcher;
      12: putfield      #174                // Field internalEventDispatcher:Lcom/sun/javafx/stage/WindowEventDispatcher;
      15: aload_0
      16: new           #176                // class javafx/beans/property/SimpleObjectProperty
      19: dup
      20: aload_0
      21: ldc           #177                // String eventDispatcher
      23: aload_0
      24: getfield      #174                // Field internalEventDispatcher:Lcom/sun/javafx/stage/WindowEventDispatcher;
      27: invokespecial #178                // Method javafx/beans/property/SimpleObjectProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      30: putfield      #166                // Field eventDispatcher:Ljavafx/beans/property/ObjectProperty;
      33: return

  com.sun.javafx.stage.WindowEventDispatcher createInternalEventDispatcher();
    Code:
       0: new           #179                // class com/sun/javafx/stage/WindowEventDispatcher
       3: dup
       4: aload_0
       5: invokespecial #180                // Method com/sun/javafx/stage/WindowEventDispatcher."<init>":(Ljavafx/stage/Window;)V
       8: areturn

  public final void fireEvent(javafx.event.Event);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #181                // Method javafx/event/Event.fireEvent:(Ljavafx/event/EventTarget;Ljavafx/event/Event;)V
       5: return

  public javafx.event.EventDispatchChain buildEventDispatchChain(javafx.event.EventDispatchChain);
    Code:
       0: aload_0
       1: getfield      #166                // Field eventDispatcher:Ljavafx/beans/property/ObjectProperty;
       4: ifnull        30
       7: aload_0
       8: getfield      #166                // Field eventDispatcher:Ljavafx/beans/property/ObjectProperty;
      11: invokevirtual #136                // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
      14: checkcast     #165                // class javafx/event/EventDispatcher
      17: astore_2
      18: aload_2
      19: ifnull        30
      22: aload_1
      23: aload_2
      24: invokeinterface #182,  2          // InterfaceMethod javafx/event/EventDispatchChain.prepend:(Ljavafx/event/EventDispatcher;)Ljavafx/event/EventDispatchChain;
      29: astore_1
      30: aload_1
      31: areturn

  void increaseFocusGrabCounter();
    Code:
       0: aload_0
       1: dup
       2: getfield      #183                // Field focusGrabCounter:I
       5: iconst_1
       6: iadd
       7: dup_x1
       8: putfield      #183                // Field focusGrabCounter:I
      11: iconst_1
      12: if_icmpne     39
      15: aload_0
      16: getfield      #9                  // Field peer:Lcom/sun/javafx/tk/TKStage;
      19: ifnull        39
      22: aload_0
      23: invokevirtual #184                // Method isFocused:()Z
      26: ifeq          39
      29: aload_0
      30: getfield      #9                  // Field peer:Lcom/sun/javafx/tk/TKStage;
      33: invokeinterface #185,  1          // InterfaceMethod com/sun/javafx/tk/TKStage.grabFocus:()Z
      38: pop
      39: return

  void decreaseFocusGrabCounter();
    Code:
       0: aload_0
       1: dup
       2: getfield      #183                // Field focusGrabCounter:I
       5: iconst_1
       6: isub
       7: dup_x1
       8: putfield      #183                // Field focusGrabCounter:I
      11: ifne          30
      14: aload_0
      15: getfield      #9                  // Field peer:Lcom/sun/javafx/tk/TKStage;
      18: ifnull        30
      21: aload_0
      22: getfield      #9                  // Field peer:Lcom/sun/javafx/tk/TKStage;
      25: invokeinterface #186,  1          // InterfaceMethod com/sun/javafx/tk/TKStage.ungrabFocus:()V
      30: return

  private void focusChanged(boolean);
    Code:
       0: aload_0
       1: getfield      #183                // Field focusGrabCounter:I
       4: ifle          28
       7: aload_0
       8: getfield      #9                  // Field peer:Lcom/sun/javafx/tk/TKStage;
      11: ifnull        28
      14: iload_1
      15: ifeq          28
      18: aload_0
      19: getfield      #9                  // Field peer:Lcom/sun/javafx/tk/TKStage;
      22: invokeinterface #185,  1          // InterfaceMethod com/sun/javafx/tk/TKStage.grabFocus:()Z
      27: pop
      28: return

  final void applyBounds();
    Code:
       0: aload_0
       1: getfield      #11                 // Field peerBoundsConfigurator:Ljavafx/stage/Window$TKBoundsConfigurator;
       4: invokevirtual #187                // Method javafx/stage/Window$TKBoundsConfigurator.apply:()V
       7: return

  javafx.stage.Window getWindowOwner();
    Code:
       0: aconst_null
       1: areturn

  private javafx.stage.Screen getWindowScreen();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: invokevirtual #188                // Method getX:()D
       6: invokestatic  #189                // Method java/lang/Double.isNaN:(D)Z
       9: ifne          69
      12: aload_1
      13: invokevirtual #190                // Method getY:()D
      16: invokestatic  #189                // Method java/lang/Double.isNaN:(D)Z
      19: ifne          69
      22: aload_1
      23: invokevirtual #77                 // Method getWidth:()D
      26: invokestatic  #189                // Method java/lang/Double.isNaN:(D)Z
      29: ifne          69
      32: aload_1
      33: invokevirtual #79                 // Method getHeight:()D
      36: invokestatic  #189                // Method java/lang/Double.isNaN:(D)Z
      39: ifne          69
      42: new           #191                // class javafx/geometry/Rectangle2D
      45: dup
      46: aload_1
      47: invokevirtual #188                // Method getX:()D
      50: aload_1
      51: invokevirtual #190                // Method getY:()D
      54: aload_1
      55: invokevirtual #77                 // Method getWidth:()D
      58: aload_1
      59: invokevirtual #79                 // Method getHeight:()D
      62: invokespecial #192                // Method javafx/geometry/Rectangle2D."<init>":(DDDD)V
      65: invokestatic  #193                // Method com/sun/javafx/util/Utils.getScreenForRectangle:(Ljavafx/geometry/Rectangle2D;)Ljavafx/stage/Screen;
      68: areturn
      69: aload_1
      70: invokevirtual #194                // Method getWindowOwner:()Ljavafx/stage/Window;
      73: astore_1
      74: aload_1
      75: ifnonnull     2
      78: invokestatic  #67                 // Method javafx/stage/Screen.getPrimary:()Ljavafx/stage/Screen;
      81: areturn

  private javafx.beans.property.ReadOnlyObjectProperty<javafx.stage.Screen> screenProperty();
    Code:
       0: aload_0
       1: getfield      #69                 // Field screen:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #195                // Method javafx/beans/property/ReadOnlyObjectWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       7: areturn

  private void notifyScreenChanged(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #69                 // Field screen:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: aload_2
       5: invokestatic  #196                // Method javafx/stage/Screen.getScreenForNative:(Ljava/lang/Object;)Ljavafx/stage/Screen;
       8: invokevirtual #197                // Method javafx/beans/property/ReadOnlyObjectWrapper.set:(Ljava/lang/Object;)V
      11: return

  static com.sun.javafx.stage.WindowHelper access$000(javafx.stage.Window);
    Code:
       0: aload_0
       1: getfield      #17                 // Field windowHelper:Lcom/sun/javafx/stage/WindowHelper;
       4: areturn

  static com.sun.javafx.stage.WindowHelper access$002(javafx.stage.Window, com.sun.javafx.stage.WindowHelper);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #17                 // Field windowHelper:Lcom/sun/javafx/stage/WindowHelper;
       6: areturn

  static void access$100(javafx.stage.Window, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #16                 // Method doVisibleChanging:(Z)V
       5: return

  static void access$200(javafx.stage.Window, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #15                 // Method doVisibleChanged:(Z)V
       5: return

  static void access$300(javafx.stage.Window, double, double);
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: invokespecial #14                 // Method updateOutputScales:(DD)V
       6: return

  static void access$400(javafx.stage.Window, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #13                 // Method notifyScreenChanged:(Ljava/lang/Object;Ljava/lang/Object;)V
       6: return

  static javafx.beans.property.ReadOnlyObjectProperty access$500(javafx.stage.Window);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method screenProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       4: areturn

  static javafx.stage.Window$TKBoundsConfigurator access$600(javafx.stage.Window);
    Code:
       0: aload_0
       1: getfield      #11                 // Field peerBoundsConfigurator:Ljavafx/stage/Window$TKBoundsConfigurator;
       4: areturn

  static void access$700(javafx.stage.Window, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #10                 // Method focusChanged:(Z)V
       5: return

  static com.sun.javafx.tk.TKStage access$900(javafx.stage.Window);
    Code:
       0: aload_0
       1: getfield      #9                  // Field peer:Lcom/sun/javafx/tk/TKStage;
       4: areturn

  static boolean access$1000(javafx.stage.Window);
    Code:
       0: aload_0
       1: getfield      #8                  // Field widthExplicit:Z
       4: ireturn

  static boolean access$1100(javafx.stage.Window);
    Code:
       0: aload_0
       1: getfield      #7                  // Field heightExplicit:Z
       4: ireturn

  static void access$1200(javafx.stage.Window, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #6                  // Method adjustSize:(Z)V
       5: return

  static javafx.collections.ObservableList access$1300();
    Code:
       0: getstatic     #5                  // Field windows:Ljavafx/collections/ObservableList;
       3: areturn

  static com.sun.javafx.stage.WindowPeerListener access$1400(javafx.stage.Window);
    Code:
       0: aload_0
       1: getfield      #4                  // Field peerListener:Lcom/sun/javafx/stage/WindowPeerListener;
       4: areturn

  static com.sun.javafx.stage.WindowPeerListener access$1402(javafx.stage.Window, com.sun.javafx.stage.WindowPeerListener);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field peerListener:Lcom/sun/javafx/stage/WindowPeerListener;
       6: areturn

  static boolean access$1500(javafx.stage.Window);
    Code:
       0: aload_0
       1: getfield      #3                  // Field xExplicit:Z
       4: ireturn

  static boolean access$1600(javafx.stage.Window);
    Code:
       0: aload_0
       1: getfield      #2                  // Field yExplicit:Z
       4: ireturn

  static boolean access$1700(javafx.stage.Window);
    Code:
       0: aload_0
       1: getfield      #1                  // Field sizeToScene:Z
       4: ireturn

  static boolean access$1702(javafx.stage.Window, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #1                  // Field sizeToScene:Z
       6: ireturn

  static {};
    Code:
       0: ldc           #86                 // class javafx/stage/Window
       2: invokevirtual #198                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #161                // Field $assertionsDisabled:Z
      16: invokestatic  #199                // Method javafx/collections/FXCollections.observableArrayList:()Ljavafx/collections/ObservableList;
      19: putstatic     #5                  // Field windows:Ljavafx/collections/ObservableList;
      22: getstatic     #5                  // Field windows:Ljavafx/collections/ObservableList;
      25: invokestatic  #200                // Method javafx/collections/FXCollections.unmodifiableObservableList:(Ljavafx/collections/ObservableList;)Ljavafx/collections/ObservableList;
      28: putstatic     #21                 // Field unmodifiableWindows:Ljavafx/collections/ObservableList;
      31: new           #201                // class javafx/stage/Window$1
      34: dup
      35: invokespecial #202                // Method javafx/stage/Window$1."<init>":()V
      38: invokestatic  #203                // Method com/sun/javafx/stage/WindowHelper.setWindowAccessor:(Lcom/sun/javafx/stage/WindowHelper$WindowAccessor;)V
      41: new           #204                // class java/lang/Object
      44: dup
      45: invokespecial #22                 // Method java/lang/Object."<init>":()V
      48: putstatic     #122                // Field USER_DATA_KEY:Ljava/lang/Object;
      51: return
}
