Compiled from "PopupWindow.java"
class javafx.stage.PopupWindow$PopupEventRedirector extends com.sun.javafx.event.EventRedirector {
  private static final javafx.scene.input.KeyCombination ESCAPE_KEY_COMBINATION;

  private final javafx.stage.PopupWindow popupWindow;

  public javafx.stage.PopupWindow$PopupEventRedirector(javafx.stage.PopupWindow);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method com/sun/javafx/event/EventRedirector."<init>":(Ljava/lang/Object;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field popupWindow:Ljavafx/stage/PopupWindow;
      10: return

  protected void handleRedirectedEvent(java.lang.Object, javafx.event.Event);
    Code:
       0: aload_2
       1: instanceof    #3                  // class javafx/scene/input/KeyEvent
       4: ifeq          16
       7: aload_0
       8: aload_2
       9: checkcast     #3                  // class javafx/scene/input/KeyEvent
      12: invokespecial #4                  // Method handleKeyEvent:(Ljavafx/scene/input/KeyEvent;)V
      15: return
      16: aload_2
      17: invokevirtual #5                  // Method javafx/event/Event.getEventType:()Ljavafx/event/EventType;
      20: astore_3
      21: aload_3
      22: getstatic     #6                  // Field javafx/scene/input/MouseEvent.MOUSE_PRESSED:Ljavafx/event/EventType;
      25: if_acmpeq     35
      28: aload_3
      29: getstatic     #7                  // Field javafx/scene/input/ScrollEvent.SCROLL:Ljavafx/event/EventType;
      32: if_acmpne     42
      35: aload_0
      36: aload_1
      37: aload_2
      38: invokespecial #8                  // Method handleAutoHidingEvents:(Ljava/lang/Object;Ljavafx/event/Event;)V
      41: return
      42: aload_3
      43: getstatic     #9                  // Field com/sun/javafx/stage/FocusUngrabEvent.FOCUS_UNGRAB:Ljavafx/event/EventType;
      46: if_acmpne     54
      49: aload_0
      50: invokespecial #10                 // Method handleFocusUngrabEvent:()V
      53: return
      54: return

  private void handleKeyEvent(javafx.scene.input.KeyEvent);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method javafx/scene/input/KeyEvent.isConsumed:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #2                  // Field popupWindow:Ljavafx/stage/PopupWindow;
      12: invokevirtual #12                 // Method javafx/stage/PopupWindow.getScene:()Ljavafx/scene/Scene;
      15: astore_2
      16: aload_2
      17: ifnull        66
      20: aload_2
      21: invokevirtual #13                 // Method javafx/scene/Scene.getFocusOwner:()Ljavafx/scene/Node;
      24: astore_3
      25: aload_3
      26: ifnull        33
      29: aload_3
      30: goto          34
      33: aload_2
      34: astore        4
      36: aload         4
      38: new           #14                 // class com/sun/javafx/event/DirectEvent
      41: dup
      42: aload_1
      43: aload_0
      44: getfield      #2                  // Field popupWindow:Ljavafx/stage/PopupWindow;
      47: aload         4
      49: invokevirtual #15                 // Method javafx/scene/input/KeyEvent.copyFor:(Ljava/lang/Object;Ljavafx/event/EventTarget;)Ljavafx/scene/input/KeyEvent;
      52: invokespecial #16                 // Method com/sun/javafx/event/DirectEvent."<init>":(Ljavafx/event/Event;)V
      55: invokestatic  #17                 // Method com/sun/javafx/event/EventUtil.fireEvent:(Ljavafx/event/EventTarget;Ljavafx/event/Event;)Ljavafx/event/Event;
      58: ifnonnull     66
      61: aload_1
      62: invokevirtual #18                 // Method javafx/scene/input/KeyEvent.consume:()V
      65: return
      66: aload_1
      67: invokevirtual #19                 // Method javafx/scene/input/KeyEvent.getEventType:()Ljavafx/event/EventType;
      70: getstatic     #20                 // Field javafx/scene/input/KeyEvent.KEY_PRESSED:Ljavafx/event/EventType;
      73: if_acmpne     91
      76: getstatic     #21                 // Field ESCAPE_KEY_COMBINATION:Ljavafx/scene/input/KeyCombination;
      79: aload_1
      80: invokevirtual #22                 // Method javafx/scene/input/KeyCombination.match:(Ljavafx/scene/input/KeyEvent;)Z
      83: ifeq          91
      86: aload_0
      87: aload_1
      88: invokespecial #23                 // Method handleEscapeKeyPressedEvent:(Ljavafx/event/Event;)V
      91: return

  private void handleEscapeKeyPressedEvent(javafx.event.Event);
    Code:
       0: aload_0
       1: getfield      #2                  // Field popupWindow:Ljavafx/stage/PopupWindow;
       4: invokevirtual #24                 // Method javafx/stage/PopupWindow.isHideOnEscape:()Z
       7: ifeq          31
      10: aload_0
      11: getfield      #2                  // Field popupWindow:Ljavafx/stage/PopupWindow;
      14: invokevirtual #25                 // Method javafx/stage/PopupWindow.doAutoHide:()V
      17: aload_0
      18: getfield      #2                  // Field popupWindow:Ljavafx/stage/PopupWindow;
      21: invokevirtual #26                 // Method javafx/stage/PopupWindow.getConsumeAutoHidingEvents:()Z
      24: ifeq          31
      27: aload_1
      28: invokevirtual #27                 // Method javafx/event/Event.consume:()V
      31: return

  private void handleAutoHidingEvents(java.lang.Object, javafx.event.Event);
    Code:
       0: aload_0
       1: getfield      #2                  // Field popupWindow:Ljavafx/stage/PopupWindow;
       4: invokevirtual #28                 // Method javafx/stage/PopupWindow.getOwnerWindow:()Ljavafx/stage/Window;
       7: aload_1
       8: if_acmpeq     12
      11: return
      12: aload_0
      13: getfield      #2                  // Field popupWindow:Ljavafx/stage/PopupWindow;
      16: invokevirtual #29                 // Method javafx/stage/PopupWindow.isAutoHide:()Z
      19: ifeq          65
      22: aload_0
      23: aload_2
      24: invokespecial #30                 // Method isOwnerNodeEvent:(Ljavafx/event/Event;)Z
      27: ifne          65
      30: aload_0
      31: getfield      #2                  // Field popupWindow:Ljavafx/stage/PopupWindow;
      34: new           #31                 // class com/sun/javafx/stage/FocusUngrabEvent
      37: dup
      38: invokespecial #32                 // Method com/sun/javafx/stage/FocusUngrabEvent."<init>":()V
      41: invokestatic  #33                 // Method javafx/event/Event.fireEvent:(Ljavafx/event/EventTarget;Ljavafx/event/Event;)V
      44: aload_0
      45: getfield      #2                  // Field popupWindow:Ljavafx/stage/PopupWindow;
      48: invokevirtual #25                 // Method javafx/stage/PopupWindow.doAutoHide:()V
      51: aload_0
      52: getfield      #2                  // Field popupWindow:Ljavafx/stage/PopupWindow;
      55: invokevirtual #26                 // Method javafx/stage/PopupWindow.getConsumeAutoHidingEvents:()Z
      58: ifeq          65
      61: aload_2
      62: invokevirtual #27                 // Method javafx/event/Event.consume:()V
      65: return

  private void handleFocusUngrabEvent();
    Code:
       0: aload_0
       1: getfield      #2                  // Field popupWindow:Ljavafx/stage/PopupWindow;
       4: invokevirtual #29                 // Method javafx/stage/PopupWindow.isAutoHide:()Z
       7: ifeq          17
      10: aload_0
      11: getfield      #2                  // Field popupWindow:Ljavafx/stage/PopupWindow;
      14: invokevirtual #25                 // Method javafx/stage/PopupWindow.doAutoHide:()V
      17: return

  private boolean isOwnerNodeEvent(javafx.event.Event);
    Code:
       0: aload_0
       1: getfield      #2                  // Field popupWindow:Ljavafx/stage/PopupWindow;
       4: invokevirtual #34                 // Method javafx/stage/PopupWindow.getOwnerNode:()Ljavafx/scene/Node;
       7: astore_2
       8: aload_2
       9: ifnonnull     14
      12: iconst_0
      13: ireturn
      14: aload_1
      15: invokevirtual #35                 // Method javafx/event/Event.getTarget:()Ljavafx/event/EventTarget;
      18: astore_3
      19: aload_3
      20: instanceof    #36                 // class javafx/scene/Node
      23: ifne          28
      26: iconst_0
      27: ireturn
      28: aload_3
      29: checkcast     #36                 // class javafx/scene/Node
      32: astore        4
      34: aload         4
      36: aload_2
      37: if_acmpne     42
      40: iconst_1
      41: ireturn
      42: aload         4
      44: invokevirtual #37                 // Method javafx/scene/Node.getParent:()Ljavafx/scene/Parent;
      47: astore        4
      49: aload         4
      51: ifnonnull     34
      54: iconst_0
      55: ireturn

  static {};
    Code:
       0: ldc           #38                 // String Esc
       2: invokestatic  #39                 // Method javafx/scene/input/KeyCombination.keyCombination:(Ljava/lang/String;)Ljavafx/scene/input/KeyCombination;
       5: putstatic     #21                 // Field ESCAPE_KEY_COMBINATION:Ljavafx/scene/input/KeyCombination;
       8: return
}
