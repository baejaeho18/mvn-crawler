Compiled from "Proto3ZipkinFields.java"
class zipkin2.internal.Proto3ZipkinFields$AnnotationField extends zipkin2.internal.Proto3ZipkinFields$SpanBuilderField<zipkin2.Annotation> {
  static final int TIMESTAMP_KEY;

  static final int VALUE_KEY;

  static final zipkin2.internal.Proto3Fields$Fixed64Field TIMESTAMP;

  static final zipkin2.internal.Proto3Fields$Utf8Field VALUE;

  zipkin2.internal.Proto3ZipkinFields$AnnotationField(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #36                 // Method zipkin2/internal/Proto3ZipkinFields$SpanBuilderField."<init>":(I)V
       5: return

  int sizeOfValue(zipkin2.Annotation);
    Code:
       0: getstatic     #43                 // Field TIMESTAMP:Lzipkin2/internal/Proto3Fields$Fixed64Field;
       3: aload_1
       4: invokevirtual #49                 // Method zipkin2/Annotation.timestamp:()J
       7: invokevirtual #53                 // Method zipkin2/internal/Proto3Fields$Fixed64Field.sizeInBytes:(J)I
      10: getstatic     #55                 // Field VALUE:Lzipkin2/internal/Proto3Fields$Utf8Field;
      13: aload_1
      14: invokevirtual #59                 // Method zipkin2/Annotation.value:()Ljava/lang/String;
      17: invokevirtual #62                 // Method zipkin2/internal/Proto3Fields$Utf8Field.sizeInBytes:(Ljava/lang/Object;)I
      20: iadd
      21: ireturn

  void writeValue(zipkin2.internal.Buffer, zipkin2.Annotation);
    Code:
       0: getstatic     #43                 // Field TIMESTAMP:Lzipkin2/internal/Proto3Fields$Fixed64Field;
       3: aload_1
       4: aload_2
       5: invokevirtual #49                 // Method zipkin2/Annotation.timestamp:()J
       8: invokevirtual #69                 // Method zipkin2/internal/Proto3Fields$Fixed64Field.write:(Lzipkin2/internal/Buffer;J)V
      11: getstatic     #55                 // Field VALUE:Lzipkin2/internal/Proto3Fields$Utf8Field;
      14: aload_1
      15: aload_2
      16: invokevirtual #59                 // Method zipkin2/Annotation.value:()Ljava/lang/String;
      19: invokevirtual #72                 // Method zipkin2/internal/Proto3Fields$Utf8Field.write:(Lzipkin2/internal/Buffer;Ljava/lang/Object;)V
      22: return

  boolean readLengthPrefixAndValue(zipkin2.internal.Buffer, zipkin2.Span$Builder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #80                 // Method readLengthPrefix:(Lzipkin2/internal/Buffer;)I
       5: istore_3
       6: iload_3
       7: ifne          12
      10: iconst_0
      11: ireturn
      12: aload_1
      13: getfield      #85                 // Field zipkin2/internal/Buffer.pos:I
      16: iload_3
      17: iadd
      18: istore        4
      20: lconst_0
      21: lstore        5
      23: aconst_null
      24: astore        7
      26: aload_1
      27: getfield      #85                 // Field zipkin2/internal/Buffer.pos:I
      30: iload         4
      32: if_icmpge     104
      35: aload_1
      36: invokevirtual #91                 // Method zipkin2/internal/Buffer.readVarint32:()I
      39: istore        8
      41: iload         8
      43: lookupswitch  { // 2
                     9: 68
                    18: 80
               default: 95
          }
      68: getstatic     #43                 // Field TIMESTAMP:Lzipkin2/internal/Proto3Fields$Fixed64Field;
      71: aload_1
      72: invokevirtual #95                 // Method zipkin2/internal/Proto3Fields$Fixed64Field.readValue:(Lzipkin2/internal/Buffer;)J
      75: lstore        5
      77: goto          101
      80: getstatic     #55                 // Field VALUE:Lzipkin2/internal/Proto3Fields$Utf8Field;
      83: aload_1
      84: invokevirtual #98                 // Method zipkin2/internal/Proto3Fields$Utf8Field.readLengthPrefixAndValue:(Lzipkin2/internal/Buffer;)Ljava/lang/Object;
      87: checkcast     #87                 // class java/lang/String
      90: astore        7
      92: goto          101
      95: aload_1
      96: iload         8
      98: invokestatic  #102                // Method zipkin2/internal/Proto3ZipkinFields.logAndSkip:(Lzipkin2/internal/Buffer;I)V
     101: goto          26
     104: lload         5
     106: lconst_0
     107: lcmp
     108: ifeq          116
     111: aload         7
     113: ifnonnull     118
     116: iconst_0
     117: ireturn
     118: aload_2
     119: lload         5
     121: aload         7
     123: invokevirtual #106                // Method zipkin2/Span$Builder.addAnnotation:(JLjava/lang/String;)Lzipkin2/Span$Builder;
     126: pop
     127: iconst_1
     128: ireturn

  void writeValue(zipkin2.internal.Buffer, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #45                 // class zipkin2/Annotation
       6: invokevirtual #115                // Method writeValue:(Lzipkin2/internal/Buffer;Lzipkin2/Annotation;)V
       9: return

  int sizeOfValue(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #45                 // class zipkin2/Annotation
       5: invokevirtual #117                // Method sizeOfValue:(Lzipkin2/Annotation;)I
       8: ireturn

  static {};
    Code:
       0: new           #8                  // class zipkin2/internal/Proto3Fields$Fixed64Field
       3: dup
       4: bipush        9
       6: invokespecial #120                // Method zipkin2/internal/Proto3Fields$Fixed64Field."<init>":(I)V
       9: putstatic     #43                 // Field TIMESTAMP:Lzipkin2/internal/Proto3Fields$Fixed64Field;
      12: new           #13                 // class zipkin2/internal/Proto3Fields$Utf8Field
      15: dup
      16: bipush        18
      18: invokespecial #121                // Method zipkin2/internal/Proto3Fields$Utf8Field."<init>":(I)V
      21: putstatic     #55                 // Field VALUE:Lzipkin2/internal/Proto3Fields$Utf8Field;
      24: return
}
