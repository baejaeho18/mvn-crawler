Compiled from "SpanNode.java"
public final class zipkin2.internal.SpanNode$Builder {
  final java.util.logging.Logger logger;

  zipkin2.internal.SpanNode rootSpan;

  java.util.Map<java.lang.Object, zipkin2.internal.SpanNode> keyToNode;

  java.util.Map<java.lang.Object, java.lang.Object> spanToParent;

  zipkin2.internal.SpanNode$Builder(java.util.logging.Logger);
    Code:
       0: aload_0
       1: invokespecial #27                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #29                 // Field rootSpan:Lzipkin2/internal/SpanNode;
       9: aload_0
      10: new           #31                 // class java/util/LinkedHashMap
      13: dup
      14: invokespecial #32                 // Method java/util/LinkedHashMap."<init>":()V
      17: putfield      #34                 // Field keyToNode:Ljava/util/Map;
      20: aload_0
      21: new           #31                 // class java/util/LinkedHashMap
      24: dup
      25: invokespecial #32                 // Method java/util/LinkedHashMap."<init>":()V
      28: putfield      #36                 // Field spanToParent:Ljava/util/Map;
      31: aload_0
      32: aload_1
      33: putfield      #38                 // Field logger:Ljava/util/logging/Logger;
      36: return

  void clear();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #29                 // Field rootSpan:Lzipkin2/internal/SpanNode;
       5: aload_0
       6: getfield      #34                 // Field keyToNode:Ljava/util/Map;
       9: invokeinterface #43,  1           // InterfaceMethod java/util/Map.clear:()V
      14: aload_0
      15: getfield      #36                 // Field spanToParent:Ljava/util/Map;
      18: invokeinterface #43,  1           // InterfaceMethod java/util/Map.clear:()V
      23: return

  public zipkin2.internal.SpanNode build(java.util.List<zipkin2.Span>);
    Code:
       0: aload_1
       1: invokeinterface #52,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       6: ifeq          19
       9: new           #54                 // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #56                 // String spans were empty
      15: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: invokevirtual #60                 // Method clear:()V
      23: aload_1
      24: invokestatic  #66                 // Method zipkin2/internal/Trace.merge:(Ljava/util/List;)Ljava/util/List;
      27: astore_2
      28: aload_2
      29: invokeinterface #70,  1           // InterfaceMethod java/util/List.size:()I
      34: istore_3
      35: aload_2
      36: iconst_0
      37: invokeinterface #74,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      42: checkcast     #76                 // class zipkin2/Span
      45: invokevirtual #80                 // Method zipkin2/Span.traceId:()Ljava/lang/String;
      48: astore        4
      50: aload_0
      51: getfield      #38                 // Field logger:Ljava/util/logging/Logger;
      54: getstatic     #86                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      57: invokevirtual #92                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      60: ifeq          90
      63: aload_0
      64: getfield      #38                 // Field logger:Ljava/util/logging/Logger;
      67: new           #94                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #95                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #97                 // String building trace tree: traceId=
      76: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload         4
      81: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: invokevirtual #107                // Method java/util/logging/Logger.fine:(Ljava/lang/String;)V
      90: iconst_0
      91: istore        5
      93: iload         5
      95: iload_3
      96: if_icmpge     120
      99: aload_0
     100: aload_2
     101: iload         5
     103: invokeinterface #74,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     108: checkcast     #76                 // class zipkin2/Span
     111: invokevirtual #113                // Method index:(Lzipkin2/Span;)V
     114: iinc          5, 1
     117: goto          93
     120: iconst_0
     121: istore        5
     123: iload         5
     125: iload_3
     126: if_icmpge     150
     129: aload_0
     130: aload_2
     131: iload         5
     133: invokeinterface #74,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     138: checkcast     #76                 // class zipkin2/Span
     141: invokevirtual #116                // Method process:(Lzipkin2/Span;)V
     144: iinc          5, 1
     147: goto          123
     150: aload_0
     151: getfield      #29                 // Field rootSpan:Lzipkin2/internal/SpanNode;
     154: ifnonnull     209
     157: aload_0
     158: getfield      #38                 // Field logger:Ljava/util/logging/Logger;
     161: getstatic     #86                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     164: invokevirtual #92                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
     167: ifeq          197
     170: aload_0
     171: getfield      #38                 // Field logger:Ljava/util/logging/Logger;
     174: new           #94                 // class java/lang/StringBuilder
     177: dup
     178: invokespecial #95                 // Method java/lang/StringBuilder."<init>":()V
     181: ldc           #118                // String substituting dummy node for missing root span: traceId=
     183: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     186: aload         4
     188: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     194: invokevirtual #107                // Method java/util/logging/Logger.fine:(Ljava/lang/String;)V
     197: aload_0
     198: new           #7                  // class zipkin2/internal/SpanNode
     201: dup
     202: aconst_null
     203: invokespecial #120                // Method zipkin2/internal/SpanNode."<init>":(Lzipkin2/Span;)V
     206: putfield      #29                 // Field rootSpan:Lzipkin2/internal/SpanNode;
     209: aload_0
     210: getfield      #36                 // Field spanToParent:Ljava/util/Map;
     213: invokeinterface #124,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     218: invokeinterface #130,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     223: astore        5
     225: aload         5
     227: invokeinterface #135,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     232: ifeq          318
     235: aload         5
     237: invokeinterface #139,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     242: checkcast     #10                 // class java/util/Map$Entry
     245: astore        6
     247: aload_0
     248: getfield      #34                 // Field keyToNode:Ljava/util/Map;
     251: aload         6
     253: invokeinterface #142,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     258: invokeinterface #145,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     263: checkcast     #7                  // class zipkin2/internal/SpanNode
     266: astore        7
     268: aload_0
     269: getfield      #34                 // Field keyToNode:Ljava/util/Map;
     272: aload         6
     274: invokeinterface #148,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     279: invokeinterface #145,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     284: checkcast     #7                  // class zipkin2/internal/SpanNode
     287: astore        8
     289: aload         8
     291: ifnonnull     307
     294: aload_0
     295: getfield      #29                 // Field rootSpan:Lzipkin2/internal/SpanNode;
     298: aload         7
     300: invokevirtual #152                // Method zipkin2/internal/SpanNode.addChild:(Lzipkin2/internal/SpanNode;)Lzipkin2/internal/SpanNode;
     303: pop
     304: goto          315
     307: aload         8
     309: aload         7
     311: invokevirtual #152                // Method zipkin2/internal/SpanNode.addChild:(Lzipkin2/internal/SpanNode;)Lzipkin2/internal/SpanNode;
     314: pop
     315: goto          225
     318: aload_0
     319: getfield      #29                 // Field rootSpan:Lzipkin2/internal/SpanNode;
     322: areturn

  void index(zipkin2.Span);
    Code:
       0: getstatic     #171                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       3: aload_1
       4: invokevirtual #175                // Method zipkin2/Span.shared:()Ljava/lang/Boolean;
       7: invokevirtual #179                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      10: ifeq          34
      13: aload_1
      14: invokevirtual #182                // Method zipkin2/Span.id:()Ljava/lang/String;
      17: iconst_1
      18: aload_1
      19: invokevirtual #186                // Method zipkin2/Span.localEndpoint:()Lzipkin2/Endpoint;
      22: invokestatic  #190                // Method zipkin2/internal/SpanNode.createKey:(Ljava/lang/String;ZLzipkin2/Endpoint;)Ljava/lang/Object;
      25: astore_2
      26: aload_1
      27: invokevirtual #182                // Method zipkin2/Span.id:()Ljava/lang/String;
      30: astore_3
      31: goto          44
      34: aload_1
      35: invokevirtual #182                // Method zipkin2/Span.id:()Ljava/lang/String;
      38: astore_2
      39: aload_1
      40: invokevirtual #193                // Method zipkin2/Span.parentId:()Ljava/lang/String;
      43: astore_3
      44: aload_0
      45: getfield      #36                 // Field spanToParent:Ljava/util/Map;
      48: aload_2
      49: aload_3
      50: invokeinterface #197,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: return

  void process(zipkin2.Span);
    Code:
       0: aload_1
       1: invokevirtual #186                // Method zipkin2/Span.localEndpoint:()Lzipkin2/Endpoint;
       4: astore_2
       5: getstatic     #171                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       8: aload_1
       9: invokevirtual #175                // Method zipkin2/Span.shared:()Ljava/lang/Boolean;
      12: invokevirtual #179                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      15: istore_3
      16: aload_1
      17: invokevirtual #182                // Method zipkin2/Span.id:()Ljava/lang/String;
      20: iload_3
      21: aload_1
      22: invokevirtual #186                // Method zipkin2/Span.localEndpoint:()Lzipkin2/Endpoint;
      25: invokestatic  #190                // Method zipkin2/internal/SpanNode.createKey:(Ljava/lang/String;ZLzipkin2/Endpoint;)Ljava/lang/Object;
      28: astore        4
      30: aload_2
      31: ifnull        46
      34: aload_1
      35: invokevirtual #182                // Method zipkin2/Span.id:()Ljava/lang/String;
      38: iload_3
      39: aconst_null
      40: invokestatic  #190                // Method zipkin2/internal/SpanNode.createKey:(Ljava/lang/String;ZLzipkin2/Endpoint;)Ljava/lang/Object;
      43: goto          48
      46: aload         4
      48: astore        5
      50: aconst_null
      51: astore        6
      53: iload_3
      54: ifeq          66
      57: aload_1
      58: invokevirtual #182                // Method zipkin2/Span.id:()Ljava/lang/String;
      61: astore        6
      63: goto          187
      66: aload_1
      67: invokevirtual #193                // Method zipkin2/Span.parentId:()Ljava/lang/String;
      70: ifnull        124
      73: aload_1
      74: invokevirtual #193                // Method zipkin2/Span.parentId:()Ljava/lang/String;
      77: iconst_1
      78: aload_2
      79: invokestatic  #190                // Method zipkin2/internal/SpanNode.createKey:(Ljava/lang/String;ZLzipkin2/Endpoint;)Ljava/lang/Object;
      82: astore        6
      84: aload_0
      85: getfield      #36                 // Field spanToParent:Ljava/util/Map;
      88: aload         6
      90: invokeinterface #207,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      95: ifeq          115
      98: aload_0
      99: getfield      #36                 // Field spanToParent:Ljava/util/Map;
     102: aload         5
     104: aload         6
     106: invokeinterface #197,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     111: pop
     112: goto          187
     115: aload_1
     116: invokevirtual #193                // Method zipkin2/Span.parentId:()Ljava/lang/String;
     119: astore        6
     121: goto          187
     124: aload_0
     125: getfield      #29                 // Field rootSpan:Lzipkin2/internal/SpanNode;
     128: ifnull        187
     131: aload_0
     132: getfield      #38                 // Field logger:Ljava/util/logging/Logger;
     135: getstatic     #86                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     138: invokevirtual #92                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
     141: ifeq          187
     144: aload_0
     145: getfield      #38                 // Field logger:Ljava/util/logging/Logger;
     148: ldc           #209                // String attributing span missing parent to root: traceId=%s, rootSpanId=%s, spanId=%s
     150: iconst_3
     151: anewarray     #4                  // class java/lang/Object
     154: dup
     155: iconst_0
     156: aload_1
     157: invokevirtual #80                 // Method zipkin2/Span.traceId:()Ljava/lang/String;
     160: aastore
     161: dup
     162: iconst_1
     163: aload_0
     164: getfield      #29                 // Field rootSpan:Lzipkin2/internal/SpanNode;
     167: invokevirtual #212                // Method zipkin2/internal/SpanNode.span:()Lzipkin2/Span;
     170: invokevirtual #182                // Method zipkin2/Span.id:()Ljava/lang/String;
     173: aastore
     174: dup
     175: iconst_2
     176: aload_1
     177: invokevirtual #182                // Method zipkin2/Span.id:()Ljava/lang/String;
     180: aastore
     181: invokestatic  #216                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     184: invokevirtual #107                // Method java/util/logging/Logger.fine:(Ljava/lang/String;)V
     187: new           #7                  // class zipkin2/internal/SpanNode
     190: dup
     191: aload_1
     192: invokespecial #120                // Method zipkin2/internal/SpanNode."<init>":(Lzipkin2/Span;)V
     195: astore        7
     197: aload         6
     199: ifnonnull     230
     202: aload_0
     203: getfield      #29                 // Field rootSpan:Lzipkin2/internal/SpanNode;
     206: ifnonnull     230
     209: aload_0
     210: aload         7
     212: putfield      #29                 // Field rootSpan:Lzipkin2/internal/SpanNode;
     215: aload_0
     216: getfield      #36                 // Field spanToParent:Ljava/util/Map;
     219: aload         5
     221: invokeinterface #219,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     226: pop
     227: goto          279
     230: iload_3
     231: ifeq          265
     234: aload_0
     235: getfield      #34                 // Field keyToNode:Ljava/util/Map;
     238: aload         4
     240: aload         7
     242: invokeinterface #197,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     247: pop
     248: aload_0
     249: getfield      #34                 // Field keyToNode:Ljava/util/Map;
     252: aload         5
     254: aload         7
     256: invokeinterface #197,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     261: pop
     262: goto          279
     265: aload_0
     266: getfield      #34                 // Field keyToNode:Ljava/util/Map;
     269: aload         5
     271: aload         7
     273: invokeinterface #197,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     278: pop
     279: return
}
