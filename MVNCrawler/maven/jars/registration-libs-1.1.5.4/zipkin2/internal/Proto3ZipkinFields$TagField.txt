Compiled from "Proto3ZipkinFields.java"
final class zipkin2.internal.Proto3ZipkinFields$TagField extends zipkin2.internal.Proto3ZipkinFields$SpanBuilderField<java.util.Map$Entry<java.lang.String, java.lang.String>> {
  static final int KEY_KEY;

  static final int VALUE_KEY;

  static final zipkin2.internal.Proto3Fields$Utf8Field KEY;

  static final zipkin2.internal.Proto3Fields$Utf8Field VALUE;

  zipkin2.internal.Proto3ZipkinFields$TagField(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #37                 // Method zipkin2/internal/Proto3ZipkinFields$SpanBuilderField."<init>":(I)V
       5: return

  int sizeOfValue(java.util.Map$Entry<java.lang.String, java.lang.String>);
    Code:
       0: getstatic     #45                 // Field KEY:Lzipkin2/internal/Proto3Fields$Utf8Field;
       3: aload_1
       4: invokeinterface #49,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
       9: checkcast     #51                 // class java/lang/String
      12: invokevirtual #55                 // Method zipkin2/internal/Proto3Fields$Utf8Field.sizeInBytes:(Ljava/lang/Object;)I
      15: getstatic     #57                 // Field VALUE:Lzipkin2/internal/Proto3Fields$Utf8Field;
      18: aload_1
      19: invokeinterface #60,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      24: checkcast     #51                 // class java/lang/String
      27: invokevirtual #55                 // Method zipkin2/internal/Proto3Fields$Utf8Field.sizeInBytes:(Ljava/lang/Object;)I
      30: iadd
      31: ireturn

  void writeValue(zipkin2.internal.Buffer, java.util.Map$Entry<java.lang.String, java.lang.String>);
    Code:
       0: getstatic     #45                 // Field KEY:Lzipkin2/internal/Proto3Fields$Utf8Field;
       3: aload_1
       4: aload_2
       5: invokeinterface #49,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      10: checkcast     #51                 // class java/lang/String
      13: invokevirtual #70                 // Method zipkin2/internal/Proto3Fields$Utf8Field.write:(Lzipkin2/internal/Buffer;Ljava/lang/Object;)V
      16: getstatic     #57                 // Field VALUE:Lzipkin2/internal/Proto3Fields$Utf8Field;
      19: aload_1
      20: aload_2
      21: invokeinterface #60,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      26: checkcast     #51                 // class java/lang/String
      29: invokevirtual #70                 // Method zipkin2/internal/Proto3Fields$Utf8Field.write:(Lzipkin2/internal/Buffer;Ljava/lang/Object;)V
      32: return

  boolean readLengthPrefixAndValue(zipkin2.internal.Buffer, zipkin2.Span$Builder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #78                 // Method readLengthPrefix:(Lzipkin2/internal/Buffer;)I
       5: istore_3
       6: iload_3
       7: ifne          12
      10: iconst_0
      11: ireturn
      12: aload_1
      13: getfield      #83                 // Field zipkin2/internal/Buffer.pos:I
      16: iload_3
      17: iadd
      18: istore        4
      20: aconst_null
      21: astore        5
      23: ldc           #85                 // String
      25: astore        6
      27: aload_1
      28: getfield      #83                 // Field zipkin2/internal/Buffer.pos:I
      31: iload         4
      33: if_icmpge     120
      36: aload_1
      37: invokevirtual #89                 // Method zipkin2/internal/Buffer.readVarint32:()I
      40: istore        7
      42: iload         7
      44: lookupswitch  { // 2
                    10: 72
                    18: 87
               default: 111
          }
      72: getstatic     #45                 // Field KEY:Lzipkin2/internal/Proto3Fields$Utf8Field;
      75: aload_1
      76: invokevirtual #92                 // Method zipkin2/internal/Proto3Fields$Utf8Field.readLengthPrefixAndValue:(Lzipkin2/internal/Buffer;)Ljava/lang/Object;
      79: checkcast     #51                 // class java/lang/String
      82: astore        5
      84: goto          117
      87: getstatic     #57                 // Field VALUE:Lzipkin2/internal/Proto3Fields$Utf8Field;
      90: aload_1
      91: invokevirtual #92                 // Method zipkin2/internal/Proto3Fields$Utf8Field.readLengthPrefixAndValue:(Lzipkin2/internal/Buffer;)Ljava/lang/Object;
      94: checkcast     #51                 // class java/lang/String
      97: astore        8
      99: aload         8
     101: ifnull        117
     104: aload         8
     106: astore        6
     108: goto          117
     111: aload_1
     112: iload         7
     114: invokestatic  #96                 // Method zipkin2/internal/Proto3ZipkinFields.logAndSkip:(Lzipkin2/internal/Buffer;I)V
     117: goto          27
     120: aload         5
     122: ifnonnull     127
     125: iconst_0
     126: ireturn
     127: aload_2
     128: aload         5
     130: aload         6
     132: invokevirtual #100                // Method zipkin2/Span$Builder.putTag:(Ljava/lang/String;Ljava/lang/String;)Lzipkin2/Span$Builder;
     135: pop
     136: iconst_1
     137: ireturn

  void writeValue(zipkin2.internal.Buffer, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #16                 // class java/util/Map$Entry
       6: invokevirtual #109                // Method writeValue:(Lzipkin2/internal/Buffer;Ljava/util/Map$Entry;)V
       9: return

  int sizeOfValue(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #16                 // class java/util/Map$Entry
       5: invokevirtual #111                // Method sizeOfValue:(Ljava/util/Map$Entry;)I
       8: ireturn

  static {};
    Code:
       0: new           #8                  // class zipkin2/internal/Proto3Fields$Utf8Field
       3: dup
       4: bipush        10
       6: invokespecial #114                // Method zipkin2/internal/Proto3Fields$Utf8Field."<init>":(I)V
       9: putstatic     #45                 // Field KEY:Lzipkin2/internal/Proto3Fields$Utf8Field;
      12: new           #8                  // class zipkin2/internal/Proto3Fields$Utf8Field
      15: dup
      16: bipush        18
      18: invokespecial #114                // Method zipkin2/internal/Proto3Fields$Utf8Field."<init>":(I)V
      21: putstatic     #57                 // Field VALUE:Lzipkin2/internal/Proto3Fields$Utf8Field;
      24: return
}
