Compiled from "JsonReader.java"
public class zipkin2.internal.gson.stream.JsonReader implements java.io.Closeable {
  private static final char[] NON_EXECUTE_PREFIX;

  private static final long MIN_INCOMPLETE_INTEGER;

  private static final int PEEKED_NONE;

  private static final int PEEKED_BEGIN_OBJECT;

  private static final int PEEKED_END_OBJECT;

  private static final int PEEKED_BEGIN_ARRAY;

  private static final int PEEKED_END_ARRAY;

  private static final int PEEKED_TRUE;

  private static final int PEEKED_FALSE;

  private static final int PEEKED_NULL;

  private static final int PEEKED_SINGLE_QUOTED;

  private static final int PEEKED_DOUBLE_QUOTED;

  private static final int PEEKED_UNQUOTED;

  private static final int PEEKED_BUFFERED;

  private static final int PEEKED_SINGLE_QUOTED_NAME;

  private static final int PEEKED_DOUBLE_QUOTED_NAME;

  private static final int PEEKED_UNQUOTED_NAME;

  private static final int PEEKED_LONG;

  private static final int PEEKED_NUMBER;

  private static final int PEEKED_EOF;

  private static final int NUMBER_CHAR_NONE;

  private static final int NUMBER_CHAR_SIGN;

  private static final int NUMBER_CHAR_DIGIT;

  private static final int NUMBER_CHAR_DECIMAL;

  private static final int NUMBER_CHAR_FRACTION_DIGIT;

  private static final int NUMBER_CHAR_EXP_E;

  private static final int NUMBER_CHAR_EXP_SIGN;

  private static final int NUMBER_CHAR_EXP_DIGIT;

  private final java.io.Reader in;

  private boolean lenient;

  private final char[] buffer;

  private int pos;

  private int limit;

  private int lineNumber;

  private int lineStart;

  int peeked;

  private long peekedLong;

  private int peekedNumberLength;

  private java.lang.String peekedString;

  private int[] stack;

  private int stackSize;

  private java.lang.String[] pathNames;

  private int[] pathIndices;

  public zipkin2.internal.gson.stream.JsonReader(java.io.Reader);
    Code:
       0: aload_0
       1: invokespecial #85                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #87                 // Field lenient:Z
       9: aload_0
      10: sipush        1024
      13: newarray       char
      15: putfield      #89                 // Field buffer:[C
      18: aload_0
      19: iconst_0
      20: putfield      #91                 // Field pos:I
      23: aload_0
      24: iconst_0
      25: putfield      #93                 // Field limit:I
      28: aload_0
      29: iconst_0
      30: putfield      #95                 // Field lineNumber:I
      33: aload_0
      34: iconst_0
      35: putfield      #97                 // Field lineStart:I
      38: aload_0
      39: iconst_0
      40: putfield      #99                 // Field peeked:I
      43: aload_0
      44: bipush        32
      46: newarray       int
      48: putfield      #101                // Field stack:[I
      51: aload_0
      52: iconst_0
      53: putfield      #103                // Field stackSize:I
      56: aload_0
      57: getfield      #101                // Field stack:[I
      60: aload_0
      61: dup
      62: getfield      #103                // Field stackSize:I
      65: dup_x1
      66: iconst_1
      67: iadd
      68: putfield      #103                // Field stackSize:I
      71: bipush        6
      73: iastore
      74: aload_0
      75: bipush        32
      77: anewarray     #105                // class java/lang/String
      80: putfield      #107                // Field pathNames:[Ljava/lang/String;
      83: aload_0
      84: bipush        32
      86: newarray       int
      88: putfield      #109                // Field pathIndices:[I
      91: aload_1
      92: ifnonnull     105
      95: new           #111                // class java/lang/NullPointerException
      98: dup
      99: ldc           #113                // String in == null
     101: invokespecial #116                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload_0
     106: aload_1
     107: putfield      #120                // Field in:Ljava/io/Reader;
     110: return

  public final void setLenient(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #87                 // Field lenient:Z
       5: return

  public final boolean isLenient();
    Code:
       0: aload_0
       1: getfield      #87                 // Field lenient:Z
       4: ireturn

  public void beginArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #133                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_3
      16: if_icmpne     44
      19: aload_0
      20: iconst_1
      21: invokespecial #137                // Method push:(I)V
      24: aload_0
      25: getfield      #109                // Field pathIndices:[I
      28: aload_0
      29: getfield      #103                // Field stackSize:I
      32: iconst_1
      33: isub
      34: iconst_0
      35: iastore
      36: aload_0
      37: iconst_0
      38: putfield      #99                 // Field peeked:I
      41: goto          81
      44: new           #139                // class java/lang/IllegalStateException
      47: dup
      48: new           #141                // class java/lang/StringBuilder
      51: dup
      52: invokespecial #142                // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #144                // String Expected BEGIN_ARRAY but was
      57: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #152                // Method peek:()Lzipkin2/internal/gson/stream/JsonToken;
      64: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: aload_0
      68: invokevirtual #159                // Method locationString:()Ljava/lang/String;
      71: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokespecial #163                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: return

  public void endArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #133                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_4
      16: if_icmpne     52
      19: aload_0
      20: dup
      21: getfield      #103                // Field stackSize:I
      24: iconst_1
      25: isub
      26: putfield      #103                // Field stackSize:I
      29: aload_0
      30: getfield      #109                // Field pathIndices:[I
      33: aload_0
      34: getfield      #103                // Field stackSize:I
      37: iconst_1
      38: isub
      39: dup2
      40: iaload
      41: iconst_1
      42: iadd
      43: iastore
      44: aload_0
      45: iconst_0
      46: putfield      #99                 // Field peeked:I
      49: goto          89
      52: new           #139                // class java/lang/IllegalStateException
      55: dup
      56: new           #141                // class java/lang/StringBuilder
      59: dup
      60: invokespecial #142                // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #167                // String Expected END_ARRAY but was
      65: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_0
      69: invokevirtual #152                // Method peek:()Lzipkin2/internal/gson/stream/JsonToken;
      72: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      75: aload_0
      76: invokevirtual #159                // Method locationString:()Ljava/lang/String;
      79: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokespecial #163                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: return

  public void beginObject() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #133                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_1
      16: if_icmpne     32
      19: aload_0
      20: iconst_3
      21: invokespecial #137                // Method push:(I)V
      24: aload_0
      25: iconst_0
      26: putfield      #99                 // Field peeked:I
      29: goto          69
      32: new           #139                // class java/lang/IllegalStateException
      35: dup
      36: new           #141                // class java/lang/StringBuilder
      39: dup
      40: invokespecial #142                // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #170                // String Expected BEGIN_OBJECT but was
      45: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #152                // Method peek:()Lzipkin2/internal/gson/stream/JsonToken;
      52: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: aload_0
      56: invokevirtual #159                // Method locationString:()Ljava/lang/String;
      59: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #163                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: return

  public void endObject() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #133                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_2
      16: if_icmpne     62
      19: aload_0
      20: dup
      21: getfield      #103                // Field stackSize:I
      24: iconst_1
      25: isub
      26: putfield      #103                // Field stackSize:I
      29: aload_0
      30: getfield      #107                // Field pathNames:[Ljava/lang/String;
      33: aload_0
      34: getfield      #103                // Field stackSize:I
      37: aconst_null
      38: aastore
      39: aload_0
      40: getfield      #109                // Field pathIndices:[I
      43: aload_0
      44: getfield      #103                // Field stackSize:I
      47: iconst_1
      48: isub
      49: dup2
      50: iaload
      51: iconst_1
      52: iadd
      53: iastore
      54: aload_0
      55: iconst_0
      56: putfield      #99                 // Field peeked:I
      59: goto          99
      62: new           #139                // class java/lang/IllegalStateException
      65: dup
      66: new           #141                // class java/lang/StringBuilder
      69: dup
      70: invokespecial #142                // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #173                // String Expected END_OBJECT but was
      75: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_0
      79: invokevirtual #152                // Method peek:()Lzipkin2/internal/gson/stream/JsonToken;
      82: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      85: aload_0
      86: invokevirtual #159                // Method locationString:()Ljava/lang/String;
      89: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: invokespecial #163                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      98: athrow
      99: return

  public boolean hasNext() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #133                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_2
      16: if_icmpeq     28
      19: iload_1
      20: iconst_4
      21: if_icmpeq     28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public zipkin2.internal.gson.stream.JsonToken peek() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #133                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: tableswitch   { // 1 to 17
                     1: 96
                     2: 100
                     3: 104
                     4: 108
                     5: 116
                     6: 116
                     7: 120
                     8: 124
                     9: 124
                    10: 124
                    11: 124
                    12: 112
                    13: 112
                    14: 112
                    15: 128
                    16: 128
                    17: 132
               default: 136
          }
      96: getstatic     #180                // Field zipkin2/internal/gson/stream/JsonToken.BEGIN_OBJECT:Lzipkin2/internal/gson/stream/JsonToken;
      99: areturn
     100: getstatic     #183                // Field zipkin2/internal/gson/stream/JsonToken.END_OBJECT:Lzipkin2/internal/gson/stream/JsonToken;
     103: areturn
     104: getstatic     #186                // Field zipkin2/internal/gson/stream/JsonToken.BEGIN_ARRAY:Lzipkin2/internal/gson/stream/JsonToken;
     107: areturn
     108: getstatic     #189                // Field zipkin2/internal/gson/stream/JsonToken.END_ARRAY:Lzipkin2/internal/gson/stream/JsonToken;
     111: areturn
     112: getstatic     #192                // Field zipkin2/internal/gson/stream/JsonToken.NAME:Lzipkin2/internal/gson/stream/JsonToken;
     115: areturn
     116: getstatic     #195                // Field zipkin2/internal/gson/stream/JsonToken.BOOLEAN:Lzipkin2/internal/gson/stream/JsonToken;
     119: areturn
     120: getstatic     #198                // Field zipkin2/internal/gson/stream/JsonToken.NULL:Lzipkin2/internal/gson/stream/JsonToken;
     123: areturn
     124: getstatic     #201                // Field zipkin2/internal/gson/stream/JsonToken.STRING:Lzipkin2/internal/gson/stream/JsonToken;
     127: areturn
     128: getstatic     #204                // Field zipkin2/internal/gson/stream/JsonToken.NUMBER:Lzipkin2/internal/gson/stream/JsonToken;
     131: areturn
     132: getstatic     #207                // Field zipkin2/internal/gson/stream/JsonToken.END_DOCUMENT:Lzipkin2/internal/gson/stream/JsonToken;
     135: areturn
     136: new           #209                // class java/lang/AssertionError
     139: dup
     140: invokespecial #210                // Method java/lang/AssertionError."<init>":()V
     143: athrow

  int doPeek() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #101                // Field stack:[I
       4: aload_0
       5: getfield      #103                // Field stackSize:I
       8: iconst_1
       9: isub
      10: iaload
      11: istore_1
      12: iload_1
      13: iconst_1
      14: if_icmpne     32
      17: aload_0
      18: getfield      #101                // Field stack:[I
      21: aload_0
      22: getfield      #103                // Field stackSize:I
      25: iconst_1
      26: isub
      27: iconst_2
      28: iastore
      29: goto          518
      32: iload_1
      33: iconst_2
      34: if_icmpne     104
      37: aload_0
      38: iconst_1
      39: invokespecial #214                // Method nextNonWhitespace:(Z)I
      42: istore_2
      43: iload_2
      44: lookupswitch  { // 3
                    44: 91
                    59: 87
                    93: 80
               default: 94
          }
      80: aload_0
      81: iconst_4
      82: dup_x1
      83: putfield      #99                 // Field peeked:I
      86: ireturn
      87: aload_0
      88: invokespecial #217                // Method checkLenient:()V
      91: goto          101
      94: aload_0
      95: ldc           #219                // String Unterminated array
      97: invokespecial #223                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     100: athrow
     101: goto          518
     104: iload_1
     105: iconst_3
     106: if_icmpeq     114
     109: iload_1
     110: iconst_5
     111: if_icmpne     313
     114: aload_0
     115: getfield      #101                // Field stack:[I
     118: aload_0
     119: getfield      #103                // Field stackSize:I
     122: iconst_1
     123: isub
     124: iconst_4
     125: iastore
     126: iload_1
     127: iconst_5
     128: if_icmpne     193
     131: aload_0
     132: iconst_1
     133: invokespecial #214                // Method nextNonWhitespace:(Z)I
     136: istore_2
     137: iload_2
     138: lookupswitch  { // 3
                    44: 183
                    59: 179
                   125: 172
               default: 186
          }
     172: aload_0
     173: iconst_2
     174: dup_x1
     175: putfield      #99                 // Field peeked:I
     178: ireturn
     179: aload_0
     180: invokespecial #217                // Method checkLenient:()V
     183: goto          193
     186: aload_0
     187: ldc           #225                // String Unterminated object
     189: invokespecial #223                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     192: athrow
     193: aload_0
     194: iconst_1
     195: invokespecial #214                // Method nextNonWhitespace:(Z)I
     198: istore_2
     199: iload_2
     200: lookupswitch  { // 3
                    34: 236
                    39: 244
                   125: 256
               default: 275
          }
     236: aload_0
     237: bipush        13
     239: dup_x1
     240: putfield      #99                 // Field peeked:I
     243: ireturn
     244: aload_0
     245: invokespecial #217                // Method checkLenient:()V
     248: aload_0
     249: bipush        12
     251: dup_x1
     252: putfield      #99                 // Field peeked:I
     255: ireturn
     256: iload_1
     257: iconst_5
     258: if_icmpeq     268
     261: aload_0
     262: iconst_2
     263: dup_x1
     264: putfield      #99                 // Field peeked:I
     267: ireturn
     268: aload_0
     269: ldc           #227                // String Expected name
     271: invokespecial #223                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     274: athrow
     275: aload_0
     276: invokespecial #217                // Method checkLenient:()V
     279: aload_0
     280: dup
     281: getfield      #91                 // Field pos:I
     284: iconst_1
     285: isub
     286: putfield      #91                 // Field pos:I
     289: aload_0
     290: iload_2
     291: i2c
     292: invokespecial #231                // Method isLiteral:(C)Z
     295: ifeq          306
     298: aload_0
     299: bipush        14
     301: dup_x1
     302: putfield      #99                 // Field peeked:I
     305: ireturn
     306: aload_0
     307: ldc           #227                // String Expected name
     309: invokespecial #223                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     312: athrow
     313: iload_1
     314: iconst_4
     315: if_icmpne     427
     318: aload_0
     319: getfield      #101                // Field stack:[I
     322: aload_0
     323: getfield      #103                // Field stackSize:I
     326: iconst_1
     327: isub
     328: iconst_5
     329: iastore
     330: aload_0
     331: iconst_1
     332: invokespecial #214                // Method nextNonWhitespace:(Z)I
     335: istore_2
     336: iload_2
     337: lookupswitch  { // 2
                    58: 364
                    61: 367
               default: 417
          }
     364: goto          424
     367: aload_0
     368: invokespecial #217                // Method checkLenient:()V
     371: aload_0
     372: getfield      #91                 // Field pos:I
     375: aload_0
     376: getfield      #93                 // Field limit:I
     379: if_icmplt     390
     382: aload_0
     383: iconst_1
     384: invokespecial #235                // Method fillBuffer:(I)Z
     387: ifeq          424
     390: aload_0
     391: getfield      #89                 // Field buffer:[C
     394: aload_0
     395: getfield      #91                 // Field pos:I
     398: caload
     399: bipush        62
     401: if_icmpne     424
     404: aload_0
     405: dup
     406: getfield      #91                 // Field pos:I
     409: iconst_1
     410: iadd
     411: putfield      #91                 // Field pos:I
     414: goto          424
     417: aload_0
     418: ldc           #237                // String Expected \':\'
     420: invokespecial #223                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     423: athrow
     424: goto          518
     427: iload_1
     428: bipush        6
     430: if_icmpne     460
     433: aload_0
     434: getfield      #87                 // Field lenient:Z
     437: ifeq          444
     440: aload_0
     441: invokespecial #240                // Method consumeNonExecutePrefix:()V
     444: aload_0
     445: getfield      #101                // Field stack:[I
     448: aload_0
     449: getfield      #103                // Field stackSize:I
     452: iconst_1
     453: isub
     454: bipush        7
     456: iastore
     457: goto          518
     460: iload_1
     461: bipush        7
     463: if_icmpne     502
     466: aload_0
     467: iconst_0
     468: invokespecial #214                // Method nextNonWhitespace:(Z)I
     471: istore_2
     472: iload_2
     473: iconst_m1
     474: if_icmpne     485
     477: aload_0
     478: bipush        17
     480: dup_x1
     481: putfield      #99                 // Field peeked:I
     484: ireturn
     485: aload_0
     486: invokespecial #217                // Method checkLenient:()V
     489: aload_0
     490: dup
     491: getfield      #91                 // Field pos:I
     494: iconst_1
     495: isub
     496: putfield      #91                 // Field pos:I
     499: goto          518
     502: iload_1
     503: bipush        8
     505: if_icmpne     518
     508: new           #139                // class java/lang/IllegalStateException
     511: dup
     512: ldc           #242                // String JsonReader is closed
     514: invokespecial #163                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     517: athrow
     518: aload_0
     519: iconst_1
     520: invokespecial #214                // Method nextNonWhitespace:(Z)I
     523: istore_2
     524: iload_2
     525: lookupswitch  { // 7
                    34: 655
                    39: 643
                    44: 604
                    59: 604
                    91: 663
                    93: 592
                   123: 670
               default: 677
          }
     592: iload_1
     593: iconst_1
     594: if_icmpne     604
     597: aload_0
     598: iconst_4
     599: dup_x1
     600: putfield      #99                 // Field peeked:I
     603: ireturn
     604: iload_1
     605: iconst_1
     606: if_icmpeq     614
     609: iload_1
     610: iconst_2
     611: if_icmpne     636
     614: aload_0
     615: invokespecial #217                // Method checkLenient:()V
     618: aload_0
     619: dup
     620: getfield      #91                 // Field pos:I
     623: iconst_1
     624: isub
     625: putfield      #91                 // Field pos:I
     628: aload_0
     629: bipush        7
     631: dup_x1
     632: putfield      #99                 // Field peeked:I
     635: ireturn
     636: aload_0
     637: ldc           #244                // String Unexpected value
     639: invokespecial #223                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     642: athrow
     643: aload_0
     644: invokespecial #217                // Method checkLenient:()V
     647: aload_0
     648: bipush        8
     650: dup_x1
     651: putfield      #99                 // Field peeked:I
     654: ireturn
     655: aload_0
     656: bipush        9
     658: dup_x1
     659: putfield      #99                 // Field peeked:I
     662: ireturn
     663: aload_0
     664: iconst_3
     665: dup_x1
     666: putfield      #99                 // Field peeked:I
     669: ireturn
     670: aload_0
     671: iconst_1
     672: dup_x1
     673: putfield      #99                 // Field peeked:I
     676: ireturn
     677: aload_0
     678: dup
     679: getfield      #91                 // Field pos:I
     682: iconst_1
     683: isub
     684: putfield      #91                 // Field pos:I
     687: aload_0
     688: invokespecial #247                // Method peekKeyword:()I
     691: istore_3
     692: iload_3
     693: ifeq          698
     696: iload_3
     697: ireturn
     698: aload_0
     699: invokespecial #250                // Method peekNumber:()I
     702: istore_3
     703: iload_3
     704: ifeq          709
     707: iload_3
     708: ireturn
     709: aload_0
     710: aload_0
     711: getfield      #89                 // Field buffer:[C
     714: aload_0
     715: getfield      #91                 // Field pos:I
     718: caload
     719: invokespecial #231                // Method isLiteral:(C)Z
     722: ifne          732
     725: aload_0
     726: ldc           #252                // String Expected value
     728: invokespecial #223                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     731: athrow
     732: aload_0
     733: invokespecial #217                // Method checkLenient:()V
     736: aload_0
     737: bipush        10
     739: dup_x1
     740: putfield      #99                 // Field peeked:I
     743: ireturn

  private int peekKeyword() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #89                 // Field buffer:[C
       4: aload_0
       5: getfield      #91                 // Field pos:I
       8: caload
       9: istore_1
      10: iload_1
      11: bipush        116
      13: if_icmpeq     22
      16: iload_1
      17: bipush        84
      19: if_icmpne     36
      22: ldc_w         #257                // String true
      25: astore_2
      26: ldc_w         #259                // String TRUE
      29: astore_3
      30: iconst_5
      31: istore        4
      33: goto          92
      36: iload_1
      37: bipush        102
      39: if_icmpeq     48
      42: iload_1
      43: bipush        70
      45: if_icmpne     63
      48: ldc_w         #261                // String false
      51: astore_2
      52: ldc_w         #263                // String FALSE
      55: astore_3
      56: bipush        6
      58: istore        4
      60: goto          92
      63: iload_1
      64: bipush        110
      66: if_icmpeq     75
      69: iload_1
      70: bipush        78
      72: if_icmpne     90
      75: ldc_w         #265                // String null
      78: astore_2
      79: ldc_w         #266                // String NULL
      82: astore_3
      83: bipush        7
      85: istore        4
      87: goto          92
      90: iconst_0
      91: ireturn
      92: aload_2
      93: invokevirtual #269                // Method java/lang/String.length:()I
      96: istore        5
      98: iconst_1
      99: istore        6
     101: iload         6
     103: iload         5
     105: if_icmpge     176
     108: aload_0
     109: getfield      #91                 // Field pos:I
     112: iload         6
     114: iadd
     115: aload_0
     116: getfield      #93                 // Field limit:I
     119: if_icmplt     135
     122: aload_0
     123: iload         6
     125: iconst_1
     126: iadd
     127: invokespecial #235                // Method fillBuffer:(I)Z
     130: ifne          135
     133: iconst_0
     134: ireturn
     135: aload_0
     136: getfield      #89                 // Field buffer:[C
     139: aload_0
     140: getfield      #91                 // Field pos:I
     143: iload         6
     145: iadd
     146: caload
     147: istore_1
     148: iload_1
     149: aload_2
     150: iload         6
     152: invokevirtual #273                // Method java/lang/String.charAt:(I)C
     155: if_icmpeq     170
     158: iload_1
     159: aload_3
     160: iload         6
     162: invokevirtual #273                // Method java/lang/String.charAt:(I)C
     165: if_icmpeq     170
     168: iconst_0
     169: ireturn
     170: iinc          6, 1
     173: goto          101
     176: aload_0
     177: getfield      #91                 // Field pos:I
     180: iload         5
     182: iadd
     183: aload_0
     184: getfield      #93                 // Field limit:I
     187: if_icmplt     201
     190: aload_0
     191: iload         5
     193: iconst_1
     194: iadd
     195: invokespecial #235                // Method fillBuffer:(I)Z
     198: ifeq          222
     201: aload_0
     202: aload_0
     203: getfield      #89                 // Field buffer:[C
     206: aload_0
     207: getfield      #91                 // Field pos:I
     210: iload         5
     212: iadd
     213: caload
     214: invokespecial #231                // Method isLiteral:(C)Z
     217: ifeq          222
     220: iconst_0
     221: ireturn
     222: aload_0
     223: dup
     224: getfield      #91                 // Field pos:I
     227: iload         5
     229: iadd
     230: putfield      #91                 // Field pos:I
     233: aload_0
     234: iload         4
     236: dup_x1
     237: putfield      #99                 // Field peeked:I
     240: ireturn

  private int peekNumber() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #89                 // Field buffer:[C
       4: astore_1
       5: aload_0
       6: getfield      #91                 // Field pos:I
       9: istore_2
      10: aload_0
      11: getfield      #93                 // Field limit:I
      14: istore_3
      15: lconst_0
      16: lstore        4
      18: iconst_0
      19: istore        6
      21: iconst_1
      22: istore        7
      24: iconst_0
      25: istore        8
      27: iconst_0
      28: istore        9
      30: iload_2
      31: iload         9
      33: iadd
      34: iload_3
      35: if_icmpne     71
      38: iload         9
      40: aload_1
      41: arraylength
      42: if_icmpne     47
      45: iconst_0
      46: ireturn
      47: aload_0
      48: iload         9
      50: iconst_1
      51: iadd
      52: invokespecial #235                // Method fillBuffer:(I)Z
      55: ifne          61
      58: goto          372
      61: aload_0
      62: getfield      #91                 // Field pos:I
      65: istore_2
      66: aload_0
      67: getfield      #93                 // Field limit:I
      70: istore_3
      71: aload_1
      72: iload_2
      73: iload         9
      75: iadd
      76: caload
      77: istore        10
      79: iload         10
      81: lookupswitch  { // 5
                    43: 161
                    45: 132
                    46: 196
                    69: 176
                   101: 176
               default: 210
          }
     132: iload         8
     134: ifne          146
     137: iconst_1
     138: istore        6
     140: iconst_1
     141: istore        8
     143: goto          366
     146: iload         8
     148: iconst_5
     149: if_icmpne     159
     152: bipush        6
     154: istore        8
     156: goto          366
     159: iconst_0
     160: ireturn
     161: iload         8
     163: iconst_5
     164: if_icmpne     174
     167: bipush        6
     169: istore        8
     171: goto          366
     174: iconst_0
     175: ireturn
     176: iload         8
     178: iconst_2
     179: if_icmpeq     188
     182: iload         8
     184: iconst_4
     185: if_icmpne     194
     188: iconst_5
     189: istore        8
     191: goto          366
     194: iconst_0
     195: ireturn
     196: iload         8
     198: iconst_2
     199: if_icmpne     208
     202: iconst_3
     203: istore        8
     205: goto          366
     208: iconst_0
     209: ireturn
     210: iload         10
     212: bipush        48
     214: if_icmplt     224
     217: iload         10
     219: bipush        57
     221: if_icmple     238
     224: aload_0
     225: iload         10
     227: invokespecial #231                // Method isLiteral:(C)Z
     230: ifne          236
     233: goto          372
     236: iconst_0
     237: ireturn
     238: iload         8
     240: iconst_1
     241: if_icmpeq     249
     244: iload         8
     246: ifne          264
     249: iload         10
     251: bipush        48
     253: isub
     254: ineg
     255: i2l
     256: lstore        4
     258: iconst_2
     259: istore        8
     261: goto          366
     264: iload         8
     266: iconst_2
     267: if_icmpne     337
     270: lload         4
     272: lconst_0
     273: lcmp
     274: ifne          279
     277: iconst_0
     278: ireturn
     279: lload         4
     281: ldc2_w        #280                // long 10l
     284: lmul
     285: iload         10
     287: bipush        48
     289: isub
     290: i2l
     291: lsub
     292: lstore        11
     294: iload         7
     296: lload         4
     298: ldc2_w        #14                 // long -922337203685477580l
     301: lcmp
     302: ifgt          322
     305: lload         4
     307: ldc2_w        #14                 // long -922337203685477580l
     310: lcmp
     311: ifne          326
     314: lload         11
     316: lload         4
     318: lcmp
     319: ifge          326
     322: iconst_1
     323: goto          327
     326: iconst_0
     327: iand
     328: istore        7
     330: lload         11
     332: lstore        4
     334: goto          366
     337: iload         8
     339: iconst_3
     340: if_icmpne     349
     343: iconst_4
     344: istore        8
     346: goto          366
     349: iload         8
     351: iconst_5
     352: if_icmpeq     362
     355: iload         8
     357: bipush        6
     359: if_icmpne     366
     362: bipush        7
     364: istore        8
     366: iinc          9, 1
     369: goto          30
     372: iload         8
     374: iconst_2
     375: if_icmpne     446
     378: iload         7
     380: ifeq          446
     383: lload         4
     385: ldc2_w        #282                // long -9223372036854775808l
     388: lcmp
     389: ifne          397
     392: iload         6
     394: ifeq          446
     397: lload         4
     399: lconst_0
     400: lcmp
     401: ifne          410
     404: iconst_0
     405: iload         6
     407: if_icmpne     446
     410: aload_0
     411: iload         6
     413: ifeq          421
     416: lload         4
     418: goto          424
     421: lload         4
     423: lneg
     424: putfield      #285                // Field peekedLong:J
     427: aload_0
     428: dup
     429: getfield      #91                 // Field pos:I
     432: iload         9
     434: iadd
     435: putfield      #91                 // Field pos:I
     438: aload_0
     439: bipush        15
     441: dup_x1
     442: putfield      #99                 // Field peeked:I
     445: ireturn
     446: iload         8
     448: iconst_2
     449: if_icmpeq     465
     452: iload         8
     454: iconst_4
     455: if_icmpeq     465
     458: iload         8
     460: bipush        7
     462: if_icmpne     479
     465: aload_0
     466: iload         9
     468: putfield      #287                // Field peekedNumberLength:I
     471: aload_0
     472: bipush        16
     474: dup_x1
     475: putfield      #99                 // Field peeked:I
     478: ireturn
     479: iconst_0
     480: ireturn

  private boolean isLiteral(char) throws java.io.IOException;
    Code:
       0: iload_1
       1: lookupswitch  { // 16
                     9: 144
                    10: 144
                    12: 144
                    13: 144
                    32: 144
                    35: 140
                    44: 144
                    47: 140
                    58: 144
                    59: 140
                    61: 140
                    91: 144
                    92: 140
                    93: 144
                   123: 144
                   125: 144
               default: 146
          }
     140: aload_0
     141: invokespecial #217                // Method checkLenient:()V
     144: iconst_0
     145: ireturn
     146: iconst_1
     147: ireturn

  public java.lang.String nextName() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #133                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        14
      17: if_icmpne     28
      20: aload_0
      21: invokespecial #297                // Method nextUnquotedValue:()Ljava/lang/String;
      24: astore_2
      25: goto          98
      28: iload_1
      29: bipush        12
      31: if_icmpne     44
      34: aload_0
      35: bipush        39
      37: invokespecial #301                // Method nextQuotedValue:(C)Ljava/lang/String;
      40: astore_2
      41: goto          98
      44: iload_1
      45: bipush        13
      47: if_icmpne     60
      50: aload_0
      51: bipush        34
      53: invokespecial #301                // Method nextQuotedValue:(C)Ljava/lang/String;
      56: astore_2
      57: goto          98
      60: new           #139                // class java/lang/IllegalStateException
      63: dup
      64: new           #141                // class java/lang/StringBuilder
      67: dup
      68: invokespecial #142                // Method java/lang/StringBuilder."<init>":()V
      71: ldc_w         #303                // String Expected a name but was
      74: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_0
      78: invokevirtual #152                // Method peek:()Lzipkin2/internal/gson/stream/JsonToken;
      81: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokevirtual #159                // Method locationString:()Ljava/lang/String;
      88: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: invokespecial #163                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: aload_0
      99: iconst_0
     100: putfield      #99                 // Field peeked:I
     103: aload_0
     104: getfield      #107                // Field pathNames:[Ljava/lang/String;
     107: aload_0
     108: getfield      #103                // Field stackSize:I
     111: iconst_1
     112: isub
     113: aload_2
     114: aastore
     115: aload_2
     116: areturn

  public java.lang.String nextString() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #133                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        10
      17: if_icmpne     28
      20: aload_0
      21: invokespecial #297                // Method nextUnquotedValue:()Ljava/lang/String;
      24: astore_2
      25: goto          176
      28: iload_1
      29: bipush        8
      31: if_icmpne     44
      34: aload_0
      35: bipush        39
      37: invokespecial #301                // Method nextQuotedValue:(C)Ljava/lang/String;
      40: astore_2
      41: goto          176
      44: iload_1
      45: bipush        9
      47: if_icmpne     60
      50: aload_0
      51: bipush        34
      53: invokespecial #301                // Method nextQuotedValue:(C)Ljava/lang/String;
      56: astore_2
      57: goto          176
      60: iload_1
      61: bipush        11
      63: if_icmpne     79
      66: aload_0
      67: getfield      #306                // Field peekedString:Ljava/lang/String;
      70: astore_2
      71: aload_0
      72: aconst_null
      73: putfield      #306                // Field peekedString:Ljava/lang/String;
      76: goto          176
      79: iload_1
      80: bipush        15
      82: if_icmpne     96
      85: aload_0
      86: getfield      #285                // Field peekedLong:J
      89: invokestatic  #311                // Method java/lang/Long.toString:(J)Ljava/lang/String;
      92: astore_2
      93: goto          176
      96: iload_1
      97: bipush        16
      99: if_icmpne     138
     102: new           #105                // class java/lang/String
     105: dup
     106: aload_0
     107: getfield      #89                 // Field buffer:[C
     110: aload_0
     111: getfield      #91                 // Field pos:I
     114: aload_0
     115: getfield      #287                // Field peekedNumberLength:I
     118: invokespecial #314                // Method java/lang/String."<init>":([CII)V
     121: astore_2
     122: aload_0
     123: dup
     124: getfield      #91                 // Field pos:I
     127: aload_0
     128: getfield      #287                // Field peekedNumberLength:I
     131: iadd
     132: putfield      #91                 // Field pos:I
     135: goto          176
     138: new           #139                // class java/lang/IllegalStateException
     141: dup
     142: new           #141                // class java/lang/StringBuilder
     145: dup
     146: invokespecial #142                // Method java/lang/StringBuilder."<init>":()V
     149: ldc_w         #316                // String Expected a string but was
     152: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: aload_0
     156: invokevirtual #152                // Method peek:()Lzipkin2/internal/gson/stream/JsonToken;
     159: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     162: aload_0
     163: invokevirtual #159                // Method locationString:()Ljava/lang/String;
     166: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     172: invokespecial #163                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     175: athrow
     176: aload_0
     177: iconst_0
     178: putfield      #99                 // Field peeked:I
     181: aload_0
     182: getfield      #109                // Field pathIndices:[I
     185: aload_0
     186: getfield      #103                // Field stackSize:I
     189: iconst_1
     190: isub
     191: dup2
     192: iaload
     193: iconst_1
     194: iadd
     195: iastore
     196: aload_2
     197: areturn

  public boolean nextBoolean() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #133                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_5
      16: if_icmpne     41
      19: aload_0
      20: iconst_0
      21: putfield      #99                 // Field peeked:I
      24: aload_0
      25: getfield      #109                // Field pathIndices:[I
      28: aload_0
      29: getfield      #103                // Field stackSize:I
      32: iconst_1
      33: isub
      34: dup2
      35: iaload
      36: iconst_1
      37: iadd
      38: iastore
      39: iconst_1
      40: ireturn
      41: iload_1
      42: bipush        6
      44: if_icmpne     69
      47: aload_0
      48: iconst_0
      49: putfield      #99                 // Field peeked:I
      52: aload_0
      53: getfield      #109                // Field pathIndices:[I
      56: aload_0
      57: getfield      #103                // Field stackSize:I
      60: iconst_1
      61: isub
      62: dup2
      63: iaload
      64: iconst_1
      65: iadd
      66: iastore
      67: iconst_0
      68: ireturn
      69: new           #139                // class java/lang/IllegalStateException
      72: dup
      73: new           #141                // class java/lang/StringBuilder
      76: dup
      77: invokespecial #142                // Method java/lang/StringBuilder."<init>":()V
      80: ldc_w         #319                // String Expected a boolean but was
      83: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_0
      87: invokevirtual #152                // Method peek:()Lzipkin2/internal/gson/stream/JsonToken;
      90: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      93: aload_0
      94: invokevirtual #159                // Method locationString:()Ljava/lang/String;
      97: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokespecial #163                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     106: athrow

  public void nextNull() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #133                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        7
      17: if_icmpne     43
      20: aload_0
      21: iconst_0
      22: putfield      #99                 // Field peeked:I
      25: aload_0
      26: getfield      #109                // Field pathIndices:[I
      29: aload_0
      30: getfield      #103                // Field stackSize:I
      33: iconst_1
      34: isub
      35: dup2
      36: iaload
      37: iconst_1
      38: iadd
      39: iastore
      40: goto          81
      43: new           #139                // class java/lang/IllegalStateException
      46: dup
      47: new           #141                // class java/lang/StringBuilder
      50: dup
      51: invokespecial #142                // Method java/lang/StringBuilder."<init>":()V
      54: ldc_w         #322                // String Expected null but was
      57: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #152                // Method peek:()Lzipkin2/internal/gson/stream/JsonToken;
      64: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: aload_0
      68: invokevirtual #159                // Method locationString:()Ljava/lang/String;
      71: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokespecial #163                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: return

  public double nextDouble() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #133                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        15
      17: if_icmpne     46
      20: aload_0
      21: iconst_0
      22: putfield      #99                 // Field peeked:I
      25: aload_0
      26: getfield      #109                // Field pathIndices:[I
      29: aload_0
      30: getfield      #103                // Field stackSize:I
      33: iconst_1
      34: isub
      35: dup2
      36: iaload
      37: iconst_1
      38: iadd
      39: iastore
      40: aload_0
      41: getfield      #285                // Field peekedLong:J
      44: l2d
      45: dreturn
      46: iload_1
      47: bipush        16
      49: if_icmpne     91
      52: aload_0
      53: new           #105                // class java/lang/String
      56: dup
      57: aload_0
      58: getfield      #89                 // Field buffer:[C
      61: aload_0
      62: getfield      #91                 // Field pos:I
      65: aload_0
      66: getfield      #287                // Field peekedNumberLength:I
      69: invokespecial #314                // Method java/lang/String."<init>":([CII)V
      72: putfield      #306                // Field peekedString:Ljava/lang/String;
      75: aload_0
      76: dup
      77: getfield      #91                 // Field pos:I
      80: aload_0
      81: getfield      #287                // Field peekedNumberLength:I
      84: iadd
      85: putfield      #91                 // Field pos:I
      88: goto          188
      91: iload_1
      92: bipush        8
      94: if_icmpeq     103
      97: iload_1
      98: bipush        9
     100: if_icmpne     127
     103: aload_0
     104: aload_0
     105: iload_1
     106: bipush        8
     108: if_icmpne     116
     111: bipush        39
     113: goto          118
     116: bipush        34
     118: invokespecial #301                // Method nextQuotedValue:(C)Ljava/lang/String;
     121: putfield      #306                // Field peekedString:Ljava/lang/String;
     124: goto          188
     127: iload_1
     128: bipush        10
     130: if_icmpne     144
     133: aload_0
     134: aload_0
     135: invokespecial #297                // Method nextUnquotedValue:()Ljava/lang/String;
     138: putfield      #306                // Field peekedString:Ljava/lang/String;
     141: goto          188
     144: iload_1
     145: bipush        11
     147: if_icmpeq     188
     150: new           #139                // class java/lang/IllegalStateException
     153: dup
     154: new           #141                // class java/lang/StringBuilder
     157: dup
     158: invokespecial #142                // Method java/lang/StringBuilder."<init>":()V
     161: ldc_w         #326                // String Expected a double but was
     164: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: aload_0
     168: invokevirtual #152                // Method peek:()Lzipkin2/internal/gson/stream/JsonToken;
     171: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     174: aload_0
     175: invokevirtual #159                // Method locationString:()Ljava/lang/String;
     178: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     181: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     184: invokespecial #163                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     187: athrow
     188: aload_0
     189: bipush        11
     191: putfield      #99                 // Field peeked:I
     194: aload_0
     195: getfield      #306                // Field peekedString:Ljava/lang/String;
     198: invokestatic  #332                // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
     201: dstore_2
     202: aload_0
     203: getfield      #87                 // Field lenient:Z
     206: ifne          258
     209: dload_2
     210: invokestatic  #336                // Method java/lang/Double.isNaN:(D)Z
     213: ifne          223
     216: dload_2
     217: invokestatic  #339                // Method java/lang/Double.isInfinite:(D)Z
     220: ifeq          258
     223: new           #341                // class zipkin2/internal/gson/stream/MalformedJsonException
     226: dup
     227: new           #141                // class java/lang/StringBuilder
     230: dup
     231: invokespecial #142                // Method java/lang/StringBuilder."<init>":()V
     234: ldc_w         #343                // String JSON forbids NaN and infinities:
     237: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     240: dload_2
     241: invokevirtual #346                // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
     244: aload_0
     245: invokevirtual #159                // Method locationString:()Ljava/lang/String;
     248: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     251: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     254: invokespecial #347                // Method zipkin2/internal/gson/stream/MalformedJsonException."<init>":(Ljava/lang/String;)V
     257: athrow
     258: aload_0
     259: aconst_null
     260: putfield      #306                // Field peekedString:Ljava/lang/String;
     263: aload_0
     264: iconst_0
     265: putfield      #99                 // Field peeked:I
     268: aload_0
     269: getfield      #109                // Field pathIndices:[I
     272: aload_0
     273: getfield      #103                // Field stackSize:I
     276: iconst_1
     277: isub
     278: dup2
     279: iaload
     280: iconst_1
     281: iadd
     282: iastore
     283: dload_2
     284: dreturn

  public long nextLong() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #133                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        15
      17: if_icmpne     45
      20: aload_0
      21: iconst_0
      22: putfield      #99                 // Field peeked:I
      25: aload_0
      26: getfield      #109                // Field pathIndices:[I
      29: aload_0
      30: getfield      #103                // Field stackSize:I
      33: iconst_1
      34: isub
      35: dup2
      36: iaload
      37: iconst_1
      38: iadd
      39: iastore
      40: aload_0
      41: getfield      #285                // Field peekedLong:J
      44: lreturn
      45: iload_1
      46: bipush        16
      48: if_icmpne     90
      51: aload_0
      52: new           #105                // class java/lang/String
      55: dup
      56: aload_0
      57: getfield      #89                 // Field buffer:[C
      60: aload_0
      61: getfield      #91                 // Field pos:I
      64: aload_0
      65: getfield      #287                // Field peekedNumberLength:I
      68: invokespecial #314                // Method java/lang/String."<init>":([CII)V
      71: putfield      #306                // Field peekedString:Ljava/lang/String;
      74: aload_0
      75: dup
      76: getfield      #91                 // Field pos:I
      79: aload_0
      80: getfield      #287                // Field peekedNumberLength:I
      83: iadd
      84: putfield      #91                 // Field pos:I
      87: goto          218
      90: iload_1
      91: bipush        8
      93: if_icmpeq     108
      96: iload_1
      97: bipush        9
      99: if_icmpeq     108
     102: iload_1
     103: bipush        10
     105: if_icmpne     180
     108: iload_1
     109: bipush        10
     111: if_icmpne     125
     114: aload_0
     115: aload_0
     116: invokespecial #297                // Method nextUnquotedValue:()Ljava/lang/String;
     119: putfield      #306                // Field peekedString:Ljava/lang/String;
     122: goto          146
     125: aload_0
     126: aload_0
     127: iload_1
     128: bipush        8
     130: if_icmpne     138
     133: bipush        39
     135: goto          140
     138: bipush        34
     140: invokespecial #301                // Method nextQuotedValue:(C)Ljava/lang/String;
     143: putfield      #306                // Field peekedString:Ljava/lang/String;
     146: aload_0
     147: getfield      #306                // Field peekedString:Ljava/lang/String;
     150: invokestatic  #356                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     153: lstore_2
     154: aload_0
     155: iconst_0
     156: putfield      #99                 // Field peeked:I
     159: aload_0
     160: getfield      #109                // Field pathIndices:[I
     163: aload_0
     164: getfield      #103                // Field stackSize:I
     167: iconst_1
     168: isub
     169: dup2
     170: iaload
     171: iconst_1
     172: iadd
     173: iastore
     174: lload_2
     175: lreturn
     176: astore_2
     177: goto          218
     180: new           #139                // class java/lang/IllegalStateException
     183: dup
     184: new           #141                // class java/lang/StringBuilder
     187: dup
     188: invokespecial #142                // Method java/lang/StringBuilder."<init>":()V
     191: ldc_w         #358                // String Expected a long but was
     194: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: aload_0
     198: invokevirtual #152                // Method peek:()Lzipkin2/internal/gson/stream/JsonToken;
     201: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     204: aload_0
     205: invokevirtual #159                // Method locationString:()Ljava/lang/String;
     208: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     211: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     214: invokespecial #163                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     217: athrow
     218: aload_0
     219: bipush        11
     221: putfield      #99                 // Field peeked:I
     224: aload_0
     225: getfield      #306                // Field peekedString:Ljava/lang/String;
     228: invokestatic  #332                // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
     231: dstore_2
     232: dload_2
     233: d2l
     234: lstore        4
     236: lload         4
     238: l2d
     239: dload_2
     240: dcmpl
     241: ifeq          282
     244: new           #352                // class java/lang/NumberFormatException
     247: dup
     248: new           #141                // class java/lang/StringBuilder
     251: dup
     252: invokespecial #142                // Method java/lang/StringBuilder."<init>":()V
     255: ldc_w         #358                // String Expected a long but was
     258: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     261: aload_0
     262: getfield      #306                // Field peekedString:Ljava/lang/String;
     265: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     268: aload_0
     269: invokevirtual #159                // Method locationString:()Ljava/lang/String;
     272: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     275: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     278: invokespecial #359                // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     281: athrow
     282: aload_0
     283: aconst_null
     284: putfield      #306                // Field peekedString:Ljava/lang/String;
     287: aload_0
     288: iconst_0
     289: putfield      #99                 // Field peeked:I
     292: aload_0
     293: getfield      #109                // Field pathIndices:[I
     296: aload_0
     297: getfield      #103                // Field stackSize:I
     300: iconst_1
     301: isub
     302: dup2
     303: iaload
     304: iconst_1
     305: iadd
     306: iastore
     307: lload         4
     309: lreturn
    Exception table:
       from    to  target type
         146   175   176   Class java/lang/NumberFormatException

  private java.lang.String nextQuotedValue(char) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #89                 // Field buffer:[C
       4: astore_2
       5: aconst_null
       6: astore_3
       7: aload_0
       8: getfield      #91                 // Field pos:I
      11: istore        4
      13: aload_0
      14: getfield      #93                 // Field limit:I
      17: istore        5
      19: iload         4
      21: istore        6
      23: iload         4
      25: iload         5
      27: if_icmpge     205
      30: aload_2
      31: iload         4
      33: iinc          4, 1
      36: caload
      37: istore        7
      39: iload         7
      41: iload_1
      42: if_icmpne     92
      45: aload_0
      46: iload         4
      48: putfield      #91                 // Field pos:I
      51: iload         4
      53: iload         6
      55: isub
      56: iconst_1
      57: isub
      58: istore        8
      60: aload_3
      61: ifnonnull     77
      64: new           #105                // class java/lang/String
      67: dup
      68: aload_2
      69: iload         6
      71: iload         8
      73: invokespecial #314                // Method java/lang/String."<init>":([CII)V
      76: areturn
      77: aload_3
      78: aload_2
      79: iload         6
      81: iload         8
      83: invokevirtual #363                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
      86: pop
      87: aload_3
      88: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: areturn
      92: iload         7
      94: bipush        92
      96: if_icmpne     179
      99: aload_0
     100: iload         4
     102: putfield      #91                 // Field pos:I
     105: iload         4
     107: iload         6
     109: isub
     110: iconst_1
     111: isub
     112: istore        8
     114: aload_3
     115: ifnonnull     141
     118: iload         8
     120: iconst_1
     121: iadd
     122: iconst_2
     123: imul
     124: istore        9
     126: new           #141                // class java/lang/StringBuilder
     129: dup
     130: iload         9
     132: bipush        16
     134: invokestatic  #369                // Method java/lang/Math.max:(II)I
     137: invokespecial #371                // Method java/lang/StringBuilder."<init>":(I)V
     140: astore_3
     141: aload_3
     142: aload_2
     143: iload         6
     145: iload         8
     147: invokevirtual #363                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
     150: pop
     151: aload_3
     152: aload_0
     153: invokespecial #375                // Method readEscapeCharacter:()C
     156: invokevirtual #378                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     159: pop
     160: aload_0
     161: getfield      #91                 // Field pos:I
     164: istore        4
     166: aload_0
     167: getfield      #93                 // Field limit:I
     170: istore        5
     172: iload         4
     174: istore        6
     176: goto          202
     179: iload         7
     181: bipush        10
     183: if_icmpne     202
     186: aload_0
     187: dup
     188: getfield      #95                 // Field lineNumber:I
     191: iconst_1
     192: iadd
     193: putfield      #95                 // Field lineNumber:I
     196: aload_0
     197: iload         4
     199: putfield      #97                 // Field lineStart:I
     202: goto          23
     205: aload_3
     206: ifnonnull     233
     209: iload         4
     211: iload         6
     213: isub
     214: iconst_2
     215: imul
     216: istore        7
     218: new           #141                // class java/lang/StringBuilder
     221: dup
     222: iload         7
     224: bipush        16
     226: invokestatic  #369                // Method java/lang/Math.max:(II)I
     229: invokespecial #371                // Method java/lang/StringBuilder."<init>":(I)V
     232: astore_3
     233: aload_3
     234: aload_2
     235: iload         6
     237: iload         4
     239: iload         6
     241: isub
     242: invokevirtual #363                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
     245: pop
     246: aload_0
     247: iload         4
     249: putfield      #91                 // Field pos:I
     252: aload_0
     253: iconst_1
     254: invokespecial #235                // Method fillBuffer:(I)Z
     257: ifne          268
     260: aload_0
     261: ldc_w         #380                // String Unterminated string
     264: invokespecial #223                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     267: athrow
     268: goto          7

  private java.lang.String nextUnquotedValue() throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_1
       2: iconst_0
       3: istore_2
       4: aload_0
       5: getfield      #91                 // Field pos:I
       8: iload_2
       9: iadd
      10: aload_0
      11: getfield      #93                 // Field limit:I
      14: if_icmpge     181
      17: aload_0
      18: getfield      #89                 // Field buffer:[C
      21: aload_0
      22: getfield      #91                 // Field pos:I
      25: iload_2
      26: iadd
      27: caload
      28: lookupswitch  { // 16
                     9: 172
                    10: 172
                    12: 172
                    13: 172
                    32: 172
                    35: 168
                    44: 172
                    47: 168
                    58: 172
                    59: 168
                    61: 168
                    91: 172
                    92: 168
                    93: 172
                   123: 172
                   125: 172
               default: 175
          }
     168: aload_0
     169: invokespecial #217                // Method checkLenient:()V
     172: goto          258
     175: iinc          2, 1
     178: goto          4
     181: iload_2
     182: aload_0
     183: getfield      #89                 // Field buffer:[C
     186: arraylength
     187: if_icmpge     203
     190: aload_0
     191: iload_2
     192: iconst_1
     193: iadd
     194: invokespecial #235                // Method fillBuffer:(I)Z
     197: ifeq          258
     200: goto          4
     203: aload_1
     204: ifnonnull     221
     207: new           #141                // class java/lang/StringBuilder
     210: dup
     211: iload_2
     212: bipush        16
     214: invokestatic  #369                // Method java/lang/Math.max:(II)I
     217: invokespecial #371                // Method java/lang/StringBuilder."<init>":(I)V
     220: astore_1
     221: aload_1
     222: aload_0
     223: getfield      #89                 // Field buffer:[C
     226: aload_0
     227: getfield      #91                 // Field pos:I
     230: iload_2
     231: invokevirtual #363                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
     234: pop
     235: aload_0
     236: dup
     237: getfield      #91                 // Field pos:I
     240: iload_2
     241: iadd
     242: putfield      #91                 // Field pos:I
     245: iconst_0
     246: istore_2
     247: aload_0
     248: iconst_1
     249: invokespecial #235                // Method fillBuffer:(I)Z
     252: ifne          4
     255: goto          258
     258: aconst_null
     259: aload_1
     260: if_acmpne     282
     263: new           #105                // class java/lang/String
     266: dup
     267: aload_0
     268: getfield      #89                 // Field buffer:[C
     271: aload_0
     272: getfield      #91                 // Field pos:I
     275: iload_2
     276: invokespecial #314                // Method java/lang/String."<init>":([CII)V
     279: goto          298
     282: aload_1
     283: aload_0
     284: getfield      #89                 // Field buffer:[C
     287: aload_0
     288: getfield      #91                 // Field pos:I
     291: iload_2
     292: invokevirtual #363                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
     295: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     298: astore_3
     299: aload_0
     300: dup
     301: getfield      #91                 // Field pos:I
     304: iload_2
     305: iadd
     306: putfield      #91                 // Field pos:I
     309: aload_3
     310: areturn

  private void skipQuotedValue(char) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #89                 // Field buffer:[C
       4: astore_2
       5: aload_0
       6: getfield      #91                 // Field pos:I
       9: istore_3
      10: aload_0
      11: getfield      #93                 // Field limit:I
      14: istore        4
      16: iload_3
      17: iload         4
      19: if_icmpge     98
      22: aload_2
      23: iload_3
      24: iinc          3, 1
      27: caload
      28: istore        5
      30: iload         5
      32: iload_1
      33: if_icmpne     42
      36: aload_0
      37: iload_3
      38: putfield      #91                 // Field pos:I
      41: return
      42: iload         5
      44: bipush        92
      46: if_icmpne     73
      49: aload_0
      50: iload_3
      51: putfield      #91                 // Field pos:I
      54: aload_0
      55: invokespecial #375                // Method readEscapeCharacter:()C
      58: pop
      59: aload_0
      60: getfield      #91                 // Field pos:I
      63: istore_3
      64: aload_0
      65: getfield      #93                 // Field limit:I
      68: istore        4
      70: goto          95
      73: iload         5
      75: bipush        10
      77: if_icmpne     95
      80: aload_0
      81: dup
      82: getfield      #95                 // Field lineNumber:I
      85: iconst_1
      86: iadd
      87: putfield      #95                 // Field lineNumber:I
      90: aload_0
      91: iload_3
      92: putfield      #97                 // Field lineStart:I
      95: goto          16
      98: aload_0
      99: iload_3
     100: putfield      #91                 // Field pos:I
     103: aload_0
     104: iconst_1
     105: invokespecial #235                // Method fillBuffer:(I)Z
     108: ifne          5
     111: aload_0
     112: ldc_w         #380                // String Unterminated string
     115: invokespecial #223                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     118: athrow

  private void skipUnquotedValue() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #91                 // Field pos:I
       6: iload_1
       7: iadd
       8: aload_0
       9: getfield      #93                 // Field limit:I
      12: if_icmpge     185
      15: aload_0
      16: getfield      #89                 // Field buffer:[C
      19: aload_0
      20: getfield      #91                 // Field pos:I
      23: iload_1
      24: iadd
      25: caload
      26: lookupswitch  { // 16
                     9: 168
                    10: 168
                    12: 168
                    13: 168
                    32: 168
                    35: 164
                    44: 168
                    47: 164
                    58: 168
                    59: 164
                    61: 164
                    91: 168
                    92: 164
                    93: 168
                   123: 168
                   125: 168
               default: 179
          }
     164: aload_0
     165: invokespecial #217                // Method checkLenient:()V
     168: aload_0
     169: dup
     170: getfield      #91                 // Field pos:I
     173: iload_1
     174: iadd
     175: putfield      #91                 // Field pos:I
     178: return
     179: iinc          1, 1
     182: goto          2
     185: aload_0
     186: dup
     187: getfield      #91                 // Field pos:I
     190: iload_1
     191: iadd
     192: putfield      #91                 // Field pos:I
     195: aload_0
     196: iconst_1
     197: invokespecial #235                // Method fillBuffer:(I)Z
     200: ifne          0
     203: return

  public int nextInt() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #133                // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        15
      17: if_icmpne     96
      20: aload_0
      21: getfield      #285                // Field peekedLong:J
      24: l2i
      25: istore_2
      26: aload_0
      27: getfield      #285                // Field peekedLong:J
      30: iload_2
      31: i2l
      32: lcmp
      33: ifeq          74
      36: new           #352                // class java/lang/NumberFormatException
      39: dup
      40: new           #141                // class java/lang/StringBuilder
      43: dup
      44: invokespecial #142                // Method java/lang/StringBuilder."<init>":()V
      47: ldc_w         #392                // String Expected an int but was
      50: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: getfield      #285                // Field peekedLong:J
      57: invokevirtual #395                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #159                // Method locationString:()Ljava/lang/String;
      64: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #359                // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_0
      75: iconst_0
      76: putfield      #99                 // Field peeked:I
      79: aload_0
      80: getfield      #109                // Field pathIndices:[I
      83: aload_0
      84: getfield      #103                // Field stackSize:I
      87: iconst_1
      88: isub
      89: dup2
      90: iaload
      91: iconst_1
      92: iadd
      93: iastore
      94: iload_2
      95: ireturn
      96: iload_1
      97: bipush        16
      99: if_icmpne     141
     102: aload_0
     103: new           #105                // class java/lang/String
     106: dup
     107: aload_0
     108: getfield      #89                 // Field buffer:[C
     111: aload_0
     112: getfield      #91                 // Field pos:I
     115: aload_0
     116: getfield      #287                // Field peekedNumberLength:I
     119: invokespecial #314                // Method java/lang/String."<init>":([CII)V
     122: putfield      #306                // Field peekedString:Ljava/lang/String;
     125: aload_0
     126: dup
     127: getfield      #91                 // Field pos:I
     130: aload_0
     131: getfield      #287                // Field peekedNumberLength:I
     134: iadd
     135: putfield      #91                 // Field pos:I
     138: goto          269
     141: iload_1
     142: bipush        8
     144: if_icmpeq     159
     147: iload_1
     148: bipush        9
     150: if_icmpeq     159
     153: iload_1
     154: bipush        10
     156: if_icmpne     231
     159: iload_1
     160: bipush        10
     162: if_icmpne     176
     165: aload_0
     166: aload_0
     167: invokespecial #297                // Method nextUnquotedValue:()Ljava/lang/String;
     170: putfield      #306                // Field peekedString:Ljava/lang/String;
     173: goto          197
     176: aload_0
     177: aload_0
     178: iload_1
     179: bipush        8
     181: if_icmpne     189
     184: bipush        39
     186: goto          191
     189: bipush        34
     191: invokespecial #301                // Method nextQuotedValue:(C)Ljava/lang/String;
     194: putfield      #306                // Field peekedString:Ljava/lang/String;
     197: aload_0
     198: getfield      #306                // Field peekedString:Ljava/lang/String;
     201: invokestatic  #401                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     204: istore_2
     205: aload_0
     206: iconst_0
     207: putfield      #99                 // Field peeked:I
     210: aload_0
     211: getfield      #109                // Field pathIndices:[I
     214: aload_0
     215: getfield      #103                // Field stackSize:I
     218: iconst_1
     219: isub
     220: dup2
     221: iaload
     222: iconst_1
     223: iadd
     224: iastore
     225: iload_2
     226: ireturn
     227: astore_3
     228: goto          269
     231: new           #139                // class java/lang/IllegalStateException
     234: dup
     235: new           #141                // class java/lang/StringBuilder
     238: dup
     239: invokespecial #142                // Method java/lang/StringBuilder."<init>":()V
     242: ldc_w         #392                // String Expected an int but was
     245: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: aload_0
     249: invokevirtual #152                // Method peek:()Lzipkin2/internal/gson/stream/JsonToken;
     252: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     255: aload_0
     256: invokevirtual #159                // Method locationString:()Ljava/lang/String;
     259: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     262: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     265: invokespecial #163                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     268: athrow
     269: aload_0
     270: bipush        11
     272: putfield      #99                 // Field peeked:I
     275: aload_0
     276: getfield      #306                // Field peekedString:Ljava/lang/String;
     279: invokestatic  #332                // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
     282: dstore_3
     283: dload_3
     284: d2i
     285: istore_2
     286: iload_2
     287: i2d
     288: dload_3
     289: dcmpl
     290: ifeq          331
     293: new           #352                // class java/lang/NumberFormatException
     296: dup
     297: new           #141                // class java/lang/StringBuilder
     300: dup
     301: invokespecial #142                // Method java/lang/StringBuilder."<init>":()V
     304: ldc_w         #392                // String Expected an int but was
     307: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     310: aload_0
     311: getfield      #306                // Field peekedString:Ljava/lang/String;
     314: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     317: aload_0
     318: invokevirtual #159                // Method locationString:()Ljava/lang/String;
     321: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     324: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     327: invokespecial #359                // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     330: athrow
     331: aload_0
     332: aconst_null
     333: putfield      #306                // Field peekedString:Ljava/lang/String;
     336: aload_0
     337: iconst_0
     338: putfield      #99                 // Field peeked:I
     341: aload_0
     342: getfield      #109                // Field pathIndices:[I
     345: aload_0
     346: getfield      #103                // Field stackSize:I
     349: iconst_1
     350: isub
     351: dup2
     352: iaload
     353: iconst_1
     354: iadd
     355: iastore
     356: iload_2
     357: ireturn
    Exception table:
       from    to  target type
         197   226   227   Class java/lang/NumberFormatException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #99                 // Field peeked:I
       5: aload_0
       6: getfield      #101                // Field stack:[I
       9: iconst_0
      10: bipush        8
      12: iastore
      13: aload_0
      14: iconst_1
      15: putfield      #103                // Field stackSize:I
      18: aload_0
      19: getfield      #120                // Field in:Ljava/io/Reader;
      22: invokevirtual #404                // Method java/io/Reader.close:()V
      25: return

  public void skipValue() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #99                 // Field peeked:I
       6: istore_2
       7: iload_2
       8: ifne          16
      11: aload_0
      12: invokevirtual #133                // Method doPeek:()I
      15: istore_2
      16: iload_2
      17: iconst_3
      18: if_icmpne     32
      21: aload_0
      22: iconst_1
      23: invokespecial #137                // Method push:(I)V
      26: iinc          1, 1
      29: goto          170
      32: iload_2
      33: iconst_1
      34: if_icmpne     48
      37: aload_0
      38: iconst_3
      39: invokespecial #137                // Method push:(I)V
      42: iinc          1, 1
      45: goto          170
      48: iload_2
      49: iconst_4
      50: if_icmpne     69
      53: aload_0
      54: dup
      55: getfield      #103                // Field stackSize:I
      58: iconst_1
      59: isub
      60: putfield      #103                // Field stackSize:I
      63: iinc          1, -1
      66: goto          170
      69: iload_2
      70: iconst_2
      71: if_icmpne     90
      74: aload_0
      75: dup
      76: getfield      #103                // Field stackSize:I
      79: iconst_1
      80: isub
      81: putfield      #103                // Field stackSize:I
      84: iinc          1, -1
      87: goto          170
      90: iload_2
      91: bipush        14
      93: if_icmpeq     102
      96: iload_2
      97: bipush        10
      99: if_icmpne     109
     102: aload_0
     103: invokespecial #407                // Method skipUnquotedValue:()V
     106: goto          170
     109: iload_2
     110: bipush        8
     112: if_icmpeq     121
     115: iload_2
     116: bipush        12
     118: if_icmpne     130
     121: aload_0
     122: bipush        39
     124: invokespecial #409                // Method skipQuotedValue:(C)V
     127: goto          170
     130: iload_2
     131: bipush        9
     133: if_icmpeq     142
     136: iload_2
     137: bipush        13
     139: if_icmpne     151
     142: aload_0
     143: bipush        34
     145: invokespecial #409                // Method skipQuotedValue:(C)V
     148: goto          170
     151: iload_2
     152: bipush        16
     154: if_icmpne     170
     157: aload_0
     158: dup
     159: getfield      #91                 // Field pos:I
     162: aload_0
     163: getfield      #287                // Field peekedNumberLength:I
     166: iadd
     167: putfield      #91                 // Field pos:I
     170: aload_0
     171: iconst_0
     172: putfield      #99                 // Field peeked:I
     175: iload_1
     176: ifne          2
     179: aload_0
     180: getfield      #109                // Field pathIndices:[I
     183: aload_0
     184: getfield      #103                // Field stackSize:I
     187: iconst_1
     188: isub
     189: dup2
     190: iaload
     191: iconst_1
     192: iadd
     193: iastore
     194: aload_0
     195: getfield      #107                // Field pathNames:[Ljava/lang/String;
     198: aload_0
     199: getfield      #103                // Field stackSize:I
     202: iconst_1
     203: isub
     204: ldc_w         #265                // String null
     207: aastore
     208: return

  private void push(int);
    Code:
       0: aload_0
       1: getfield      #103                // Field stackSize:I
       4: aload_0
       5: getfield      #101                // Field stack:[I
       8: arraylength
       9: if_icmpne     100
      12: aload_0
      13: getfield      #103                // Field stackSize:I
      16: iconst_2
      17: imul
      18: newarray       int
      20: astore_2
      21: aload_0
      22: getfield      #103                // Field stackSize:I
      25: iconst_2
      26: imul
      27: newarray       int
      29: astore_3
      30: aload_0
      31: getfield      #103                // Field stackSize:I
      34: iconst_2
      35: imul
      36: anewarray     #105                // class java/lang/String
      39: astore        4
      41: aload_0
      42: getfield      #101                // Field stack:[I
      45: iconst_0
      46: aload_2
      47: iconst_0
      48: aload_0
      49: getfield      #103                // Field stackSize:I
      52: invokestatic  #416                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      55: aload_0
      56: getfield      #109                // Field pathIndices:[I
      59: iconst_0
      60: aload_3
      61: iconst_0
      62: aload_0
      63: getfield      #103                // Field stackSize:I
      66: invokestatic  #416                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      69: aload_0
      70: getfield      #107                // Field pathNames:[Ljava/lang/String;
      73: iconst_0
      74: aload         4
      76: iconst_0
      77: aload_0
      78: getfield      #103                // Field stackSize:I
      81: invokestatic  #416                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      84: aload_0
      85: aload_2
      86: putfield      #101                // Field stack:[I
      89: aload_0
      90: aload_3
      91: putfield      #109                // Field pathIndices:[I
      94: aload_0
      95: aload         4
      97: putfield      #107                // Field pathNames:[Ljava/lang/String;
     100: aload_0
     101: getfield      #101                // Field stack:[I
     104: aload_0
     105: dup
     106: getfield      #103                // Field stackSize:I
     109: dup_x1
     110: iconst_1
     111: iadd
     112: putfield      #103                // Field stackSize:I
     115: iload_1
     116: iastore
     117: return

  private boolean fillBuffer(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #89                 // Field buffer:[C
       4: astore_2
       5: aload_0
       6: dup
       7: getfield      #97                 // Field lineStart:I
      10: aload_0
      11: getfield      #91                 // Field pos:I
      14: isub
      15: putfield      #97                 // Field lineStart:I
      18: aload_0
      19: getfield      #93                 // Field limit:I
      22: aload_0
      23: getfield      #91                 // Field pos:I
      26: if_icmpeq     59
      29: aload_0
      30: dup
      31: getfield      #93                 // Field limit:I
      34: aload_0
      35: getfield      #91                 // Field pos:I
      38: isub
      39: putfield      #93                 // Field limit:I
      42: aload_2
      43: aload_0
      44: getfield      #91                 // Field pos:I
      47: aload_2
      48: iconst_0
      49: aload_0
      50: getfield      #93                 // Field limit:I
      53: invokestatic  #416                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      56: goto          64
      59: aload_0
      60: iconst_0
      61: putfield      #93                 // Field limit:I
      64: aload_0
      65: iconst_0
      66: putfield      #91                 // Field pos:I
      69: aload_0
      70: getfield      #120                // Field in:Ljava/io/Reader;
      73: aload_2
      74: aload_0
      75: getfield      #93                 // Field limit:I
      78: aload_2
      79: arraylength
      80: aload_0
      81: getfield      #93                 // Field limit:I
      84: isub
      85: invokevirtual #424                // Method java/io/Reader.read:([CII)I
      88: dup
      89: istore_3
      90: iconst_m1
      91: if_icmpeq     167
      94: aload_0
      95: dup
      96: getfield      #93                 // Field limit:I
      99: iload_3
     100: iadd
     101: putfield      #93                 // Field limit:I
     104: aload_0
     105: getfield      #95                 // Field lineNumber:I
     108: ifne          157
     111: aload_0
     112: getfield      #97                 // Field lineStart:I
     115: ifne          157
     118: aload_0
     119: getfield      #93                 // Field limit:I
     122: ifle          157
     125: aload_2
     126: iconst_0
     127: caload
     128: ldc_w         #425                // int 65279
     131: if_icmpne     157
     134: aload_0
     135: dup
     136: getfield      #91                 // Field pos:I
     139: iconst_1
     140: iadd
     141: putfield      #91                 // Field pos:I
     144: aload_0
     145: dup
     146: getfield      #97                 // Field lineStart:I
     149: iconst_1
     150: iadd
     151: putfield      #97                 // Field lineStart:I
     154: iinc          1, 1
     157: aload_0
     158: getfield      #93                 // Field limit:I
     161: iload_1
     162: if_icmplt     69
     165: iconst_1
     166: ireturn
     167: iconst_0
     168: ireturn

  private int nextNonWhitespace(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #89                 // Field buffer:[C
       4: astore_2
       5: aload_0
       6: getfield      #91                 // Field pos:I
       9: istore_3
      10: aload_0
      11: getfield      #93                 // Field limit:I
      14: istore        4
      16: iload_3
      17: iload         4
      19: if_icmpne     49
      22: aload_0
      23: iload_3
      24: putfield      #91                 // Field pos:I
      27: aload_0
      28: iconst_1
      29: invokespecial #235                // Method fillBuffer:(I)Z
      32: ifne          38
      35: goto          320
      38: aload_0
      39: getfield      #91                 // Field pos:I
      42: istore_3
      43: aload_0
      44: getfield      #93                 // Field limit:I
      47: istore        4
      49: aload_2
      50: iload_3
      51: iinc          3, 1
      54: caload
      55: istore        5
      57: iload         5
      59: bipush        10
      61: if_icmpne     82
      64: aload_0
      65: dup
      66: getfield      #95                 // Field lineNumber:I
      69: iconst_1
      70: iadd
      71: putfield      #95                 // Field lineNumber:I
      74: aload_0
      75: iload_3
      76: putfield      #97                 // Field lineStart:I
      79: goto          16
      82: iload         5
      84: bipush        32
      86: if_icmpeq     16
      89: iload         5
      91: bipush        13
      93: if_icmpeq     16
      96: iload         5
      98: bipush        9
     100: if_icmpne     106
     103: goto          16
     106: iload         5
     108: bipush        47
     110: if_icmpne     275
     113: aload_0
     114: iload_3
     115: putfield      #91                 // Field pos:I
     118: iload_3
     119: iload         4
     121: if_icmpne     159
     124: aload_0
     125: dup
     126: getfield      #91                 // Field pos:I
     129: iconst_1
     130: isub
     131: putfield      #91                 // Field pos:I
     134: aload_0
     135: iconst_2
     136: invokespecial #235                // Method fillBuffer:(I)Z
     139: istore        6
     141: aload_0
     142: dup
     143: getfield      #91                 // Field pos:I
     146: iconst_1
     147: iadd
     148: putfield      #91                 // Field pos:I
     151: iload         6
     153: ifne          159
     156: iload         5
     158: ireturn
     159: aload_0
     160: invokespecial #217                // Method checkLenient:()V
     163: aload_2
     164: aload_0
     165: getfield      #91                 // Field pos:I
     168: caload
     169: istore        6
     171: iload         6
     173: lookupswitch  { // 2
                    42: 200
                    47: 244
               default: 272
          }
     200: aload_0
     201: dup
     202: getfield      #91                 // Field pos:I
     205: iconst_1
     206: iadd
     207: putfield      #91                 // Field pos:I
     210: aload_0
     211: ldc_w         #429                // String */
     214: invokespecial #433                // Method skipTo:(Ljava/lang/String;)Z
     217: ifne          228
     220: aload_0
     221: ldc_w         #435                // String Unterminated comment
     224: invokespecial #223                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     227: athrow
     228: aload_0
     229: getfield      #91                 // Field pos:I
     232: iconst_2
     233: iadd
     234: istore_3
     235: aload_0
     236: getfield      #93                 // Field limit:I
     239: istore        4
     241: goto          16
     244: aload_0
     245: dup
     246: getfield      #91                 // Field pos:I
     249: iconst_1
     250: iadd
     251: putfield      #91                 // Field pos:I
     254: aload_0
     255: invokespecial #438                // Method skipToEndOfLine:()V
     258: aload_0
     259: getfield      #91                 // Field pos:I
     262: istore_3
     263: aload_0
     264: getfield      #93                 // Field limit:I
     267: istore        4
     269: goto          16
     272: iload         5
     274: ireturn
     275: iload         5
     277: bipush        35
     279: if_icmpne     309
     282: aload_0
     283: iload_3
     284: putfield      #91                 // Field pos:I
     287: aload_0
     288: invokespecial #217                // Method checkLenient:()V
     291: aload_0
     292: invokespecial #438                // Method skipToEndOfLine:()V
     295: aload_0
     296: getfield      #91                 // Field pos:I
     299: istore_3
     300: aload_0
     301: getfield      #93                 // Field limit:I
     304: istore        4
     306: goto          317
     309: aload_0
     310: iload_3
     311: putfield      #91                 // Field pos:I
     314: iload         5
     316: ireturn
     317: goto          16
     320: iload_1
     321: ifeq          355
     324: new           #440                // class java/io/EOFException
     327: dup
     328: new           #141                // class java/lang/StringBuilder
     331: dup
     332: invokespecial #142                // Method java/lang/StringBuilder."<init>":()V
     335: ldc_w         #442                // String End of input
     338: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     341: aload_0
     342: invokevirtual #159                // Method locationString:()Ljava/lang/String;
     345: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     348: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     351: invokespecial #443                // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
     354: athrow
     355: iconst_m1
     356: ireturn

  private void checkLenient() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #87                 // Field lenient:Z
       4: ifne          15
       7: aload_0
       8: ldc_w         #447                // String Use JsonReader.setLenient(true) to accept malformed JSON
      11: invokespecial #223                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
      14: athrow
      15: return

  private void skipToEndOfLine() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #91                 // Field pos:I
       4: aload_0
       5: getfield      #93                 // Field limit:I
       8: if_icmplt     19
      11: aload_0
      12: iconst_1
      13: invokespecial #235                // Method fillBuffer:(I)Z
      16: ifeq          75
      19: aload_0
      20: getfield      #89                 // Field buffer:[C
      23: aload_0
      24: dup
      25: getfield      #91                 // Field pos:I
      28: dup_x1
      29: iconst_1
      30: iadd
      31: putfield      #91                 // Field pos:I
      34: caload
      35: istore_1
      36: iload_1
      37: bipush        10
      39: if_icmpne     63
      42: aload_0
      43: dup
      44: getfield      #95                 // Field lineNumber:I
      47: iconst_1
      48: iadd
      49: putfield      #95                 // Field lineNumber:I
      52: aload_0
      53: aload_0
      54: getfield      #91                 // Field pos:I
      57: putfield      #97                 // Field lineStart:I
      60: goto          75
      63: iload_1
      64: bipush        13
      66: if_icmpne     72
      69: goto          75
      72: goto          0
      75: return

  private boolean skipTo(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #269                // Method java/lang/String.length:()I
       4: istore_2
       5: aload_0
       6: getfield      #91                 // Field pos:I
       9: iload_2
      10: iadd
      11: aload_0
      12: getfield      #93                 // Field limit:I
      15: if_icmple     26
      18: aload_0
      19: iload_2
      20: invokespecial #235                // Method fillBuffer:(I)Z
      23: ifeq          113
      26: aload_0
      27: getfield      #89                 // Field buffer:[C
      30: aload_0
      31: getfield      #91                 // Field pos:I
      34: caload
      35: bipush        10
      37: if_icmpne     63
      40: aload_0
      41: dup
      42: getfield      #95                 // Field lineNumber:I
      45: iconst_1
      46: iadd
      47: putfield      #95                 // Field lineNumber:I
      50: aload_0
      51: aload_0
      52: getfield      #91                 // Field pos:I
      55: iconst_1
      56: iadd
      57: putfield      #97                 // Field lineStart:I
      60: goto          100
      63: iconst_0
      64: istore_3
      65: iload_3
      66: iload_2
      67: if_icmpge     98
      70: aload_0
      71: getfield      #89                 // Field buffer:[C
      74: aload_0
      75: getfield      #91                 // Field pos:I
      78: iload_3
      79: iadd
      80: caload
      81: aload_1
      82: iload_3
      83: invokevirtual #273                // Method java/lang/String.charAt:(I)C
      86: if_icmpeq     92
      89: goto          100
      92: iinc          3, 1
      95: goto          65
      98: iconst_1
      99: ireturn
     100: aload_0
     101: dup
     102: getfield      #91                 // Field pos:I
     105: iconst_1
     106: iadd
     107: putfield      #91                 // Field pos:I
     110: goto          5
     113: iconst_0
     114: ireturn

  public java.lang.String toString();
    Code:
       0: new           #141                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #142                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #452                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #457                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      14: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: aload_0
      18: invokevirtual #159                // Method locationString:()Ljava/lang/String;
      21: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  java.lang.String locationString();
    Code:
       0: aload_0
       1: getfield      #95                 // Field lineNumber:I
       4: iconst_1
       5: iadd
       6: istore_1
       7: aload_0
       8: getfield      #91                 // Field pos:I
      11: aload_0
      12: getfield      #97                 // Field lineStart:I
      15: isub
      16: iconst_1
      17: iadd
      18: istore_2
      19: new           #141                // class java/lang/StringBuilder
      22: dup
      23: invokespecial #142                // Method java/lang/StringBuilder."<init>":()V
      26: ldc_w         #459                // String  at line
      29: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: iload_1
      33: invokevirtual #462                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: ldc_w         #464                // String  column
      39: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: iload_2
      43: invokevirtual #462                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: ldc_w         #466                // String  path
      49: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_0
      53: invokevirtual #469                // Method getPath:()Ljava/lang/String;
      56: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: areturn

  public java.lang.String getPath();
    Code:
       0: new           #141                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #142                // Method java/lang/StringBuilder."<init>":()V
       7: bipush        36
       9: invokevirtual #378                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      12: astore_1
      13: iconst_0
      14: istore_2
      15: aload_0
      16: getfield      #103                // Field stackSize:I
      19: istore_3
      20: iload_2
      21: iload_3
      22: if_icmpge     136
      25: aload_0
      26: getfield      #101                // Field stack:[I
      29: iload_2
      30: iaload
      31: tableswitch   { // 1 to 8
                     1: 76
                     2: 76
                     3: 100
                     4: 100
                     5: 100
                     6: 130
                     7: 130
                     8: 130
               default: 130
          }
      76: aload_1
      77: bipush        91
      79: invokevirtual #378                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      82: aload_0
      83: getfield      #109                // Field pathIndices:[I
      86: iload_2
      87: iaload
      88: invokevirtual #462                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      91: bipush        93
      93: invokevirtual #378                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      96: pop
      97: goto          130
     100: aload_1
     101: bipush        46
     103: invokevirtual #378                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     106: pop
     107: aload_0
     108: getfield      #107                // Field pathNames:[Ljava/lang/String;
     111: iload_2
     112: aaload
     113: ifnull        130
     116: aload_1
     117: aload_0
     118: getfield      #107                // Field pathNames:[Ljava/lang/String;
     121: iload_2
     122: aaload
     123: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: pop
     127: goto          130
     130: iinc          2, 1
     133: goto          20
     136: aload_1
     137: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: areturn

  private char readEscapeCharacter() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #91                 // Field pos:I
       4: aload_0
       5: getfield      #93                 // Field limit:I
       8: if_icmpne     27
      11: aload_0
      12: iconst_1
      13: invokespecial #235                // Method fillBuffer:(I)Z
      16: ifne          27
      19: aload_0
      20: ldc_w         #474                // String Unterminated escape sequence
      23: invokespecial #223                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
      26: athrow
      27: aload_0
      28: getfield      #89                 // Field buffer:[C
      31: aload_0
      32: dup
      33: getfield      #91                 // Field pos:I
      36: dup_x1
      37: iconst_1
      38: iadd
      39: putfield      #91                 // Field pos:I
      42: caload
      43: istore_1
      44: iload_1
      45: lookupswitch  { // 11
                    10: 364
                    34: 382
                    39: 382
                    47: 382
                    92: 382
                    98: 352
                   102: 361
                   110: 355
                   114: 358
                   116: 349
                   117: 144
               default: 384
          }
     144: aload_0
     145: getfield      #91                 // Field pos:I
     148: iconst_4
     149: iadd
     150: aload_0
     151: getfield      #93                 // Field limit:I
     154: if_icmple     173
     157: aload_0
     158: iconst_4
     159: invokespecial #235                // Method fillBuffer:(I)Z
     162: ifne          173
     165: aload_0
     166: ldc_w         #474                // String Unterminated escape sequence
     169: invokespecial #223                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     172: athrow
     173: iconst_0
     174: istore_2
     175: aload_0
     176: getfield      #91                 // Field pos:I
     179: istore_3
     180: iload_3
     181: iconst_4
     182: iadd
     183: istore        4
     185: iload_3
     186: iload         4
     188: if_icmpge     337
     191: aload_0
     192: getfield      #89                 // Field buffer:[C
     195: iload_3
     196: caload
     197: istore        5
     199: iload_2
     200: iconst_4
     201: ishl
     202: i2c
     203: istore_2
     204: iload         5
     206: bipush        48
     208: if_icmplt     230
     211: iload         5
     213: bipush        57
     215: if_icmpgt     230
     218: iload_2
     219: iload         5
     221: bipush        48
     223: isub
     224: iadd
     225: i2c
     226: istore_2
     227: goto          331
     230: iload         5
     232: bipush        97
     234: if_icmplt     259
     237: iload         5
     239: bipush        102
     241: if_icmpgt     259
     244: iload_2
     245: iload         5
     247: bipush        97
     249: isub
     250: bipush        10
     252: iadd
     253: iadd
     254: i2c
     255: istore_2
     256: goto          331
     259: iload         5
     261: bipush        65
     263: if_icmplt     288
     266: iload         5
     268: bipush        70
     270: if_icmpgt     288
     273: iload_2
     274: iload         5
     276: bipush        65
     278: isub
     279: bipush        10
     281: iadd
     282: iadd
     283: i2c
     284: istore_2
     285: goto          331
     288: new           #352                // class java/lang/NumberFormatException
     291: dup
     292: new           #141                // class java/lang/StringBuilder
     295: dup
     296: invokespecial #142                // Method java/lang/StringBuilder."<init>":()V
     299: ldc_w         #476                // String \\u
     302: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     305: new           #105                // class java/lang/String
     308: dup
     309: aload_0
     310: getfield      #89                 // Field buffer:[C
     313: aload_0
     314: getfield      #91                 // Field pos:I
     317: iconst_4
     318: invokespecial #314                // Method java/lang/String."<init>":([CII)V
     321: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     324: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     327: invokespecial #359                // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     330: athrow
     331: iinc          3, 1
     334: goto          185
     337: aload_0
     338: dup
     339: getfield      #91                 // Field pos:I
     342: iconst_4
     343: iadd
     344: putfield      #91                 // Field pos:I
     347: iload_2
     348: ireturn
     349: bipush        9
     351: ireturn
     352: bipush        8
     354: ireturn
     355: bipush        10
     357: ireturn
     358: bipush        13
     360: ireturn
     361: bipush        12
     363: ireturn
     364: aload_0
     365: dup
     366: getfield      #95                 // Field lineNumber:I
     369: iconst_1
     370: iadd
     371: putfield      #95                 // Field lineNumber:I
     374: aload_0
     375: aload_0
     376: getfield      #91                 // Field pos:I
     379: putfield      #97                 // Field lineStart:I
     382: iload_1
     383: ireturn
     384: aload_0
     385: ldc_w         #478                // String Invalid escape sequence
     388: invokespecial #223                // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     391: athrow

  private java.io.IOException syntaxError(java.lang.String) throws java.io.IOException;
    Code:
       0: new           #341                // class zipkin2/internal/gson/stream/MalformedJsonException
       3: dup
       4: new           #141                // class java/lang/StringBuilder
       7: dup
       8: invokespecial #142                // Method java/lang/StringBuilder."<init>":()V
      11: aload_1
      12: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_0
      16: invokevirtual #159                // Method locationString:()Ljava/lang/String;
      19: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: invokespecial #347                // Method zipkin2/internal/gson/stream/MalformedJsonException."<init>":(Ljava/lang/String;)V
      28: athrow

  private void consumeNonExecutePrefix() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #214                // Method nextNonWhitespace:(Z)I
       5: pop
       6: aload_0
       7: dup
       8: getfield      #91                 // Field pos:I
      11: iconst_1
      12: isub
      13: putfield      #91                 // Field pos:I
      16: aload_0
      17: getfield      #91                 // Field pos:I
      20: getstatic     #483                // Field NON_EXECUTE_PREFIX:[C
      23: arraylength
      24: iadd
      25: aload_0
      26: getfield      #93                 // Field limit:I
      29: if_icmple     44
      32: aload_0
      33: getstatic     #483                // Field NON_EXECUTE_PREFIX:[C
      36: arraylength
      37: invokespecial #235                // Method fillBuffer:(I)Z
      40: ifne          44
      43: return
      44: iconst_0
      45: istore_1
      46: iload_1
      47: getstatic     #483                // Field NON_EXECUTE_PREFIX:[C
      50: arraylength
      51: if_icmpge     80
      54: aload_0
      55: getfield      #89                 // Field buffer:[C
      58: aload_0
      59: getfield      #91                 // Field pos:I
      62: iload_1
      63: iadd
      64: caload
      65: getstatic     #483                // Field NON_EXECUTE_PREFIX:[C
      68: iload_1
      69: caload
      70: if_icmpeq     74
      73: return
      74: iinc          1, 1
      77: goto          46
      80: aload_0
      81: dup
      82: getfield      #91                 // Field pos:I
      85: getstatic     #483                // Field NON_EXECUTE_PREFIX:[C
      88: arraylength
      89: iadd
      90: putfield      #91                 // Field pos:I
      93: return

  static {};
    Code:
       0: ldc_w         #486                // String )]}\'\n
       3: invokevirtual #490                // Method java/lang/String.toCharArray:()[C
       6: putstatic     #483                // Field NON_EXECUTE_PREFIX:[C
       9: new           #9                  // class zipkin2/internal/gson/stream/JsonReader$1
      12: dup
      13: invokespecial #491                // Method zipkin2/internal/gson/stream/JsonReader$1."<init>":()V
      16: putstatic     #497                // Field zipkin2/internal/gson/internal/JsonReaderInternalAccess.INSTANCE:Lzipkin2/internal/gson/internal/JsonReaderInternalAccess;
      19: return
}
