Compiled from "Trace.java"
public class zipkin2.internal.Trace {
  static final java.util.Comparator<zipkin2.Span> CLEANUP_COMPARATOR;

  public static java.util.List<zipkin2.Span> merge(java.util.List<zipkin2.Span>);
    Code:
       0: aload_0
       1: invokeinterface #30,  1           // InterfaceMethod java/util/List.size:()I
       6: istore_1
       7: iload_1
       8: iconst_1
       9: if_icmpgt     14
      12: aload_0
      13: areturn
      14: new           #32                 // class java/util/ArrayList
      17: dup
      18: aload_0
      19: invokespecial #36                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      22: astore_2
      23: aload_2
      24: getstatic     #38                 // Field CLEANUP_COMPARATOR:Ljava/util/Comparator;
      27: invokestatic  #44                 // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      30: aload_2
      31: iconst_0
      32: invokeinterface #48,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      37: checkcast     #14                 // class zipkin2/Span
      40: invokevirtual #52                 // Method zipkin2/Span.traceId:()Ljava/lang/String;
      43: astore_3
      44: iconst_1
      45: istore        4
      47: iload         4
      49: iload_1
      50: if_icmpge     87
      53: aload_2
      54: iload         4
      56: invokeinterface #48,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      61: checkcast     #14                 // class zipkin2/Span
      64: invokevirtual #52                 // Method zipkin2/Span.traceId:()Ljava/lang/String;
      67: astore        5
      69: aload_3
      70: invokevirtual #57                 // Method java/lang/String.length:()I
      73: bipush        32
      75: if_icmpeq     81
      78: aload         5
      80: astore_3
      81: iinc          4, 1
      84: goto          47
      87: aconst_null
      88: astore        4
      90: iconst_0
      91: istore        5
      93: iload         5
      95: iload_1
      96: if_icmpge     445
      99: aload_2
     100: iload         5
     102: invokeinterface #48,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     107: checkcast     #14                 // class zipkin2/Span
     110: astore        6
     112: getstatic     #63                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     115: aload         6
     117: invokevirtual #67                 // Method zipkin2/Span.shared:()Ljava/lang/Boolean;
     120: invokevirtual #71                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     123: istore        7
     125: aconst_null
     126: astore        8
     128: aload         6
     130: invokevirtual #52                 // Method zipkin2/Span.traceId:()Ljava/lang/String;
     133: invokevirtual #57                 // Method java/lang/String.length:()I
     136: aload_3
     137: invokevirtual #57                 // Method java/lang/String.length:()I
     140: if_icmpeq     154
     143: aload         6
     145: invokevirtual #75                 // Method zipkin2/Span.toBuilder:()Lzipkin2/Span$Builder;
     148: aload_3
     149: invokevirtual #78                 // Method zipkin2/Span$Builder.traceId:(Ljava/lang/String;)Lzipkin2/Span$Builder;
     152: astore        8
     154: aconst_null
     155: astore        9
     157: iload         5
     159: iconst_1
     160: iadd
     161: iload_1
     162: if_icmpge     298
     165: aload_2
     166: iload         5
     168: iconst_1
     169: iadd
     170: invokeinterface #48,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     175: checkcast     #14                 // class zipkin2/Span
     178: astore        10
     180: aload         10
     182: invokevirtual #81                 // Method zipkin2/Span.id:()Ljava/lang/String;
     185: astore        11
     187: aload         11
     189: aload         6
     191: invokevirtual #81                 // Method zipkin2/Span.id:()Ljava/lang/String;
     194: invokevirtual #82                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     197: ifne          203
     200: goto          298
     203: aload         9
     205: ifnonnull     228
     208: new           #7                  // class zipkin2/internal/Trace$EndpointTracker
     211: dup
     212: invokespecial #85                 // Method zipkin2/internal/Trace$EndpointTracker."<init>":()V
     215: astore        9
     217: aload         9
     219: aload         6
     221: invokevirtual #89                 // Method zipkin2/Span.localEndpoint:()Lzipkin2/Endpoint;
     224: invokevirtual #93                 // Method zipkin2/internal/Trace$EndpointTracker.tryMerge:(Lzipkin2/Endpoint;)Z
     227: pop
     228: getstatic     #63                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     231: aload         10
     233: invokevirtual #67                 // Method zipkin2/Span.shared:()Ljava/lang/Boolean;
     236: invokevirtual #71                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     239: istore        12
     241: iload         7
     243: iload         12
     245: if_icmpne     298
     248: aload         9
     250: aload         10
     252: invokevirtual #89                 // Method zipkin2/Span.localEndpoint:()Lzipkin2/Endpoint;
     255: invokevirtual #93                 // Method zipkin2/internal/Trace$EndpointTracker.tryMerge:(Lzipkin2/Endpoint;)Z
     258: ifeq          298
     261: aload         8
     263: ifnonnull     273
     266: aload         6
     268: invokevirtual #75                 // Method zipkin2/Span.toBuilder:()Lzipkin2/Span$Builder;
     271: astore        8
     273: aload         8
     275: aload         10
     277: invokevirtual #96                 // Method zipkin2/Span$Builder.merge:(Lzipkin2/Span;)Lzipkin2/Span$Builder;
     280: pop
     281: iinc          1, -1
     284: aload_2
     285: iload         5
     287: iconst_1
     288: iadd
     289: invokeinterface #99,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     294: pop
     295: goto          157
     298: aload         4
     300: ifnull        412
     303: aload         4
     305: invokevirtual #81                 // Method zipkin2/Span.id:()Ljava/lang/String;
     308: aload         6
     310: invokevirtual #81                 // Method zipkin2/Span.id:()Ljava/lang/String;
     313: invokevirtual #82                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     316: ifeq          412
     319: aload         4
     321: invokevirtual #103                // Method zipkin2/Span.kind:()Lzipkin2/Span$Kind;
     324: getstatic     #107                // Field zipkin2/Span$Kind.CLIENT:Lzipkin2/Span$Kind;
     327: if_acmpne     368
     330: aload         6
     332: invokevirtual #103                // Method zipkin2/Span.kind:()Lzipkin2/Span$Kind;
     335: getstatic     #110                // Field zipkin2/Span$Kind.SERVER:Lzipkin2/Span$Kind;
     338: if_acmpne     368
     341: iload         7
     343: ifne          368
     346: iconst_1
     347: istore        7
     349: aload         8
     351: ifnonnull     361
     354: aload         6
     356: invokevirtual #75                 // Method zipkin2/Span.toBuilder:()Lzipkin2/Span$Builder;
     359: astore        8
     361: aload         8
     363: iconst_1
     364: invokevirtual #113                // Method zipkin2/Span$Builder.shared:(Z)Lzipkin2/Span$Builder;
     367: pop
     368: iload         7
     370: ifeq          412
     373: aload         6
     375: invokevirtual #116                // Method zipkin2/Span.parentId:()Ljava/lang/String;
     378: ifnonnull     412
     381: aload         4
     383: invokevirtual #116                // Method zipkin2/Span.parentId:()Ljava/lang/String;
     386: ifnull        412
     389: aload         8
     391: ifnonnull     401
     394: aload         6
     396: invokevirtual #75                 // Method zipkin2/Span.toBuilder:()Lzipkin2/Span$Builder;
     399: astore        8
     401: aload         8
     403: aload         4
     405: invokevirtual #116                // Method zipkin2/Span.parentId:()Ljava/lang/String;
     408: invokevirtual #118                // Method zipkin2/Span$Builder.parentId:(Ljava/lang/String;)Lzipkin2/Span$Builder;
     411: pop
     412: aload         8
     414: ifnull        435
     417: aload         8
     419: invokevirtual #122                // Method zipkin2/Span$Builder.build:()Lzipkin2/Span;
     422: astore        6
     424: aload_2
     425: iload         5
     427: aload         6
     429: invokeinterface #126,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     434: pop
     435: aload         6
     437: astore        4
     439: iinc          5, 1
     442: goto          93
     445: aload_2
     446: areturn

  static int compareShared(zipkin2.Span, zipkin2.Span);
    Code:
       0: getstatic     #63                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       3: aload_0
       4: invokevirtual #67                 // Method zipkin2/Span.shared:()Ljava/lang/Boolean;
       7: invokevirtual #71                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      10: istore_2
      11: getstatic     #63                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      14: aload_1
      15: invokevirtual #67                 // Method zipkin2/Span.shared:()Ljava/lang/Boolean;
      18: invokevirtual #71                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      21: istore_3
      22: iload_2
      23: ifeq          32
      26: iload_3
      27: ifeq          32
      30: iconst_0
      31: ireturn
      32: iload_2
      33: ifeq          38
      36: iconst_1
      37: ireturn
      38: iload_3
      39: ifeq          44
      42: iconst_m1
      43: ireturn
      44: getstatic     #107                // Field zipkin2/Span$Kind.CLIENT:Lzipkin2/Span$Kind;
      47: aload_0
      48: invokevirtual #103                // Method zipkin2/Span.kind:()Lzipkin2/Span$Kind;
      51: invokevirtual #148                // Method zipkin2/Span$Kind.equals:(Ljava/lang/Object;)Z
      54: istore        4
      56: getstatic     #107                // Field zipkin2/Span$Kind.CLIENT:Lzipkin2/Span$Kind;
      59: aload_1
      60: invokevirtual #103                // Method zipkin2/Span.kind:()Lzipkin2/Span$Kind;
      63: invokevirtual #148                // Method zipkin2/Span$Kind.equals:(Ljava/lang/Object;)Z
      66: istore        5
      68: iload         4
      70: ifeq          80
      73: iload         5
      75: ifeq          80
      78: iconst_0
      79: ireturn
      80: iload         4
      82: ifeq          87
      85: iconst_m1
      86: ireturn
      87: iload         5
      89: ifeq          94
      92: iconst_1
      93: ireturn
      94: iconst_0
      95: ireturn

  static int compareEndpoint(zipkin2.Endpoint, zipkin2.Endpoint);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: aload_1
       5: ifnonnull     12
       8: iconst_0
       9: goto          13
      12: iconst_m1
      13: ireturn
      14: aload_1
      15: ifnonnull     20
      18: iconst_1
      19: ireturn
      20: aload_0
      21: invokevirtual #161                // Method zipkin2/Endpoint.serviceName:()Ljava/lang/String;
      24: aload_1
      25: invokevirtual #161                // Method zipkin2/Endpoint.serviceName:()Ljava/lang/String;
      28: iconst_0
      29: invokestatic  #165                // Method nullSafeCompareTo:(Ljava/lang/Comparable;Ljava/lang/Comparable;Z)I
      32: istore_2
      33: iload_2
      34: ifeq          39
      37: iload_2
      38: ireturn
      39: aload_0
      40: invokevirtual #168                // Method zipkin2/Endpoint.ipv4:()Ljava/lang/String;
      43: aload_1
      44: invokevirtual #168                // Method zipkin2/Endpoint.ipv4:()Ljava/lang/String;
      47: iconst_0
      48: invokestatic  #165                // Method nullSafeCompareTo:(Ljava/lang/Comparable;Ljava/lang/Comparable;Z)I
      51: istore_3
      52: iload_3
      53: ifeq          58
      56: iload_3
      57: ireturn
      58: aload_0
      59: invokevirtual #171                // Method zipkin2/Endpoint.ipv6:()Ljava/lang/String;
      62: aload_1
      63: invokevirtual #171                // Method zipkin2/Endpoint.ipv6:()Ljava/lang/String;
      66: iconst_0
      67: invokestatic  #165                // Method nullSafeCompareTo:(Ljava/lang/Comparable;Ljava/lang/Comparable;Z)I
      70: ireturn

  static <T extends java.lang.Comparable<T>> int nullSafeCompareTo(T, T, boolean);
    Code:
       0: aload_0
       1: ifnonnull     22
       4: aload_1
       5: ifnonnull     12
       8: iconst_0
       9: goto          21
      12: iload_2
      13: ifeq          20
      16: iconst_m1
      17: goto          21
      20: iconst_1
      21: ireturn
      22: aload_1
      23: ifnonnull     36
      26: iload_2
      27: ifeq          34
      30: iconst_1
      31: goto          35
      34: iconst_m1
      35: ireturn
      36: aload_0
      37: aload_1
      38: invokeinterface #181,  2          // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
      43: ireturn

  zipkin2.internal.Trace();
    Code:
       0: aload_0
       1: invokespecial #185                // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: new           #10                 // class zipkin2/internal/Trace$1
       3: dup
       4: invokespecial #189                // Method zipkin2/internal/Trace$1."<init>":()V
       7: putstatic     #38                 // Field CLEANUP_COMPARATOR:Ljava/util/Comparator;
      10: return
}
