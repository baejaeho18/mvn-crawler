Compiled from "ThriftField.java"
final class zipkin2.internal.ThriftField {
  static final byte TYPE_STOP;

  static final byte TYPE_BOOL;

  static final byte TYPE_BYTE;

  static final byte TYPE_DOUBLE;

  static final byte TYPE_I16;

  static final byte TYPE_I32;

  static final byte TYPE_I64;

  static final byte TYPE_STRING;

  static final byte TYPE_STRUCT;

  static final byte TYPE_MAP;

  static final byte TYPE_SET;

  static final byte TYPE_LIST;

  final byte type;

  final int id;

  zipkin2.internal.ThriftField(byte, int);
    Code:
       0: aload_0
       1: invokespecial #38                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #40                 // Field type:B
       9: aload_0
      10: iload_2
      11: putfield      #42                 // Field id:I
      14: return

  void write(zipkin2.internal.Buffer);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #40                 // Field type:B
       5: invokevirtual #52                 // Method zipkin2/internal/Buffer.writeByte:(I)Lzipkin2/internal/Buffer;
       8: pop
       9: aload_1
      10: aload_0
      11: getfield      #42                 // Field id:I
      14: bipush        8
      16: iushr
      17: sipush        255
      20: iand
      21: invokevirtual #52                 // Method zipkin2/internal/Buffer.writeByte:(I)Lzipkin2/internal/Buffer;
      24: pop
      25: aload_1
      26: aload_0
      27: getfield      #42                 // Field id:I
      30: sipush        255
      33: iand
      34: invokevirtual #52                 // Method zipkin2/internal/Buffer.writeByte:(I)Lzipkin2/internal/Buffer;
      37: pop
      38: return

  static zipkin2.internal.ThriftField read(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method java/nio/ByteBuffer.get:()B
       4: istore_1
       5: new           #2                  // class zipkin2/internal/ThriftField
       8: dup
       9: iload_1
      10: iload_1
      11: ifne          18
      14: iconst_0
      15: goto          22
      18: aload_0
      19: invokevirtual #66                 // Method java/nio/ByteBuffer.getShort:()S
      22: invokespecial #68                 // Method "<init>":(BI)V
      25: areturn

  boolean isEqualTo(zipkin2.internal.ThriftField);
    Code:
       0: aload_0
       1: getfield      #40                 // Field type:B
       4: aload_1
       5: getfield      #40                 // Field type:B
       8: if_icmpne     26
      11: aload_0
      12: getfield      #42                 // Field id:I
      15: aload_1
      16: getfield      #42                 // Field id:I
      19: if_icmpne     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn
}
