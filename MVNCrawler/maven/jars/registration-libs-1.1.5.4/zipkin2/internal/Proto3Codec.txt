Compiled from "Proto3Codec.java"
public final class zipkin2.internal.Proto3Codec {
  final zipkin2.internal.Proto3SpanWriter writer;

  public zipkin2.internal.Proto3Codec();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #18                 // class zipkin2/internal/Proto3SpanWriter
       8: dup
       9: invokespecial #19                 // Method zipkin2/internal/Proto3SpanWriter."<init>":()V
      12: putfield      #21                 // Field writer:Lzipkin2/internal/Proto3SpanWriter;
      15: return

  public int sizeInBytes(zipkin2.Span);
    Code:
       0: aload_0
       1: getfield      #21                 // Field writer:Lzipkin2/internal/Proto3SpanWriter;
       4: aload_1
       5: invokevirtual #27                 // Method zipkin2/internal/Proto3SpanWriter.sizeInBytes:(Lzipkin2/Span;)I
       8: ireturn

  public byte[] write(zipkin2.Span);
    Code:
       0: aload_0
       1: getfield      #21                 // Field writer:Lzipkin2/internal/Proto3SpanWriter;
       4: aload_1
       5: invokevirtual #33                 // Method zipkin2/internal/Proto3SpanWriter.write:(Lzipkin2/Span;)[B
       8: areturn

  public byte[] writeList(java.util.List<zipkin2.Span>);
    Code:
       0: aload_0
       1: getfield      #21                 // Field writer:Lzipkin2/internal/Proto3SpanWriter;
       4: aload_1
       5: invokevirtual #39                 // Method zipkin2/internal/Proto3SpanWriter.writeList:(Ljava/util/List;)[B
       8: areturn

  public int writeList(java.util.List<zipkin2.Span>, byte[], int);
    Code:
       0: aload_0
       1: getfield      #21                 // Field writer:Lzipkin2/internal/Proto3SpanWriter;
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokevirtual #46                 // Method zipkin2/internal/Proto3SpanWriter.writeList:(Ljava/util/List;[BI)I
      10: ireturn

  public static boolean read(byte[], java.util.Collection<zipkin2.Span>);
    Code:
       0: aload_0
       1: arraylength
       2: ifne          7
       5: iconst_0
       6: ireturn
       7: new           #57                 // class zipkin2/internal/Buffer
      10: dup
      11: aload_0
      12: iconst_0
      13: invokespecial #60                 // Method zipkin2/internal/Buffer."<init>":([BI)V
      16: astore_2
      17: getstatic     #64                 // Field zipkin2/internal/Proto3ZipkinFields.SPAN:Lzipkin2/internal/Proto3ZipkinFields$SpanField;
      20: aload_2
      21: invokevirtual #67                 // Method zipkin2/internal/Proto3ZipkinFields$SpanField.read:(Lzipkin2/internal/Buffer;)Lzipkin2/Span;
      24: astore_3
      25: aload_3
      26: ifnonnull     31
      29: iconst_0
      30: ireturn
      31: aload_1
      32: aload_3
      33: invokeinterface #75,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      38: pop
      39: iconst_1
      40: ireturn
      41: astore_3
      42: ldc           #78                 // String Span
      44: aload_3
      45: invokestatic  #82                 // Method exceptionReading:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/IllegalArgumentException;
      48: athrow
    Exception table:
       from    to  target type
          17    30    41   Class java/lang/Exception
          31    40    41   Class java/lang/Exception

  public static zipkin2.Span readOne(byte[]);
    Code:
       0: getstatic     #64                 // Field zipkin2/internal/Proto3ZipkinFields.SPAN:Lzipkin2/internal/Proto3ZipkinFields$SpanField;
       3: new           #57                 // class zipkin2/internal/Buffer
       6: dup
       7: aload_0
       8: iconst_0
       9: invokespecial #60                 // Method zipkin2/internal/Buffer."<init>":([BI)V
      12: invokevirtual #67                 // Method zipkin2/internal/Proto3ZipkinFields$SpanField.read:(Lzipkin2/internal/Buffer;)Lzipkin2/Span;
      15: areturn

  public static boolean readList(byte[], java.util.Collection<zipkin2.Span>);
    Code:
       0: aload_0
       1: arraylength
       2: istore_2
       3: iload_2
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: new           #57                 // class zipkin2/internal/Buffer
      12: dup
      13: aload_0
      14: iconst_0
      15: invokespecial #60                 // Method zipkin2/internal/Buffer."<init>":([BI)V
      18: astore_3
      19: aload_3
      20: getfield      #95                 // Field zipkin2/internal/Buffer.pos:I
      23: iload_2
      24: if_icmpge     55
      27: getstatic     #64                 // Field zipkin2/internal/Proto3ZipkinFields.SPAN:Lzipkin2/internal/Proto3ZipkinFields$SpanField;
      30: aload_3
      31: invokevirtual #67                 // Method zipkin2/internal/Proto3ZipkinFields$SpanField.read:(Lzipkin2/internal/Buffer;)Lzipkin2/Span;
      34: astore        4
      36: aload         4
      38: ifnonnull     43
      41: iconst_0
      42: ireturn
      43: aload_1
      44: aload         4
      46: invokeinterface #75,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      51: pop
      52: goto          19
      55: goto          68
      58: astore        4
      60: ldc           #97                 // String List<Span>
      62: aload         4
      64: invokestatic  #82                 // Method exceptionReading:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/IllegalArgumentException;
      67: athrow
      68: iconst_1
      69: ireturn
    Exception table:
       from    to  target type
          19    42    58   Class java/lang/Exception
          43    55    58   Class java/lang/Exception

  static java.lang.IllegalArgumentException exceptionReading(java.lang.String, java.lang.Exception);
    Code:
       0: aload_1
       1: invokevirtual #102                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
       4: ifnonnull     12
       7: ldc           #104                // String Error
       9: goto          16
      12: aload_1
      13: invokevirtual #102                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      16: astore_2
      17: aload_2
      18: ldc           #108                // String Malformed
      20: invokevirtual #112                // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      23: iconst_m1
      24: if_icmpeq     30
      27: ldc           #108                // String Malformed
      29: astore_2
      30: ldc           #114                // String %s reading %s from proto3
      32: iconst_2
      33: anewarray     #4                  // class java/lang/Object
      36: dup
      37: iconst_0
      38: aload_2
      39: aastore
      40: dup
      41: iconst_1
      42: aload_0
      43: aastore
      44: invokestatic  #118                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      47: astore_3
      48: new           #120                // class java/lang/IllegalArgumentException
      51: dup
      52: aload_3
      53: aload_1
      54: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      57: athrow
}
