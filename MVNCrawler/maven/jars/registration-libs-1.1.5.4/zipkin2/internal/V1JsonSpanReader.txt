Compiled from "V1JsonSpanReader.java"
public final class zipkin2.internal.V1JsonSpanReader implements zipkin2.internal.JsonCodec$JsonReaderAdapter<zipkin2.v1.V1Span> {
  zipkin2.v1.V1Span$Builder builder;

  public zipkin2.internal.V1JsonSpanReader();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: return

  public boolean readList(byte[], java.util.Collection<zipkin2.Span>);
    Code:
       0: aload_1
       1: arraylength
       2: ifne          7
       5: iconst_0
       6: ireturn
       7: invokestatic  #38                 // Method zipkin2/v1/V1SpanConverter.create:()Lzipkin2/v1/V1SpanConverter;
      10: astore_3
      11: new           #15                 // class zipkin2/internal/JsonCodec$JsonReader
      14: dup
      15: aload_1
      16: invokespecial #41                 // Method zipkin2/internal/JsonCodec$JsonReader."<init>":([B)V
      19: astore        4
      21: aload         4
      23: invokevirtual #44                 // Method zipkin2/internal/JsonCodec$JsonReader.beginArray:()V
      26: aload         4
      28: invokevirtual #48                 // Method zipkin2/internal/JsonCodec$JsonReader.hasNext:()Z
      31: ifne          36
      34: iconst_0
      35: ireturn
      36: aload         4
      38: invokevirtual #48                 // Method zipkin2/internal/JsonCodec$JsonReader.hasNext:()Z
      41: ifeq          62
      44: aload_0
      45: aload         4
      47: invokevirtual #52                 // Method fromJson:(Lzipkin2/internal/JsonCodec$JsonReader;)Lzipkin2/v1/V1Span;
      50: astore        5
      52: aload_3
      53: aload         5
      55: aload_2
      56: invokevirtual #56                 // Method zipkin2/v1/V1SpanConverter.convert:(Lzipkin2/v1/V1Span;Ljava/util/Collection;)V
      59: goto          36
      62: aload         4
      64: invokevirtual #59                 // Method zipkin2/internal/JsonCodec$JsonReader.endArray:()V
      67: iconst_1
      68: ireturn
      69: astore        5
      71: ldc           #61                 // String List<Span>
      73: aload         5
      75: invokestatic  #65                 // Method zipkin2/internal/JsonCodec.exceptionReading:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/IllegalArgumentException;
      78: athrow
    Exception table:
       from    to  target type
          21    35    69   Class java/lang/Exception
          36    68    69   Class java/lang/Exception

  public zipkin2.v1.V1Span fromJson(zipkin2.internal.JsonCodec$JsonReader) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #82                 // Field builder:Lzipkin2/v1/V1Span$Builder;
       4: ifnonnull     17
       7: aload_0
       8: invokestatic  #86                 // Method zipkin2/v1/V1Span.newBuilder:()Lzipkin2/v1/V1Span$Builder;
      11: putfield      #82                 // Field builder:Lzipkin2/v1/V1Span$Builder;
      14: goto          25
      17: aload_0
      18: getfield      #82                 // Field builder:Lzipkin2/v1/V1Span$Builder;
      21: invokevirtual #89                 // Method zipkin2/v1/V1Span$Builder.clear:()Lzipkin2/v1/V1Span$Builder;
      24: pop
      25: aload_1
      26: invokevirtual #92                 // Method zipkin2/internal/JsonCodec$JsonReader.beginObject:()V
      29: aload_1
      30: invokevirtual #48                 // Method zipkin2/internal/JsonCodec$JsonReader.hasNext:()Z
      33: ifeq          307
      36: aload_1
      37: invokevirtual #96                 // Method zipkin2/internal/JsonCodec$JsonReader.nextName:()Ljava/lang/String;
      40: astore_2
      41: aload_2
      42: ldc           #98                 // String traceId
      44: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifeq          65
      50: aload_0
      51: getfield      #82                 // Field builder:Lzipkin2/v1/V1Span$Builder;
      54: aload_1
      55: invokevirtual #107                // Method zipkin2/internal/JsonCodec$JsonReader.nextString:()Ljava/lang/String;
      58: invokevirtual #110                // Method zipkin2/v1/V1Span$Builder.traceId:(Ljava/lang/String;)Lzipkin2/v1/V1Span$Builder;
      61: pop
      62: goto          29
      65: aload_2
      66: ldc           #112                // String id
      68: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      71: ifeq          89
      74: aload_0
      75: getfield      #82                 // Field builder:Lzipkin2/v1/V1Span$Builder;
      78: aload_1
      79: invokevirtual #107                // Method zipkin2/internal/JsonCodec$JsonReader.nextString:()Ljava/lang/String;
      82: invokevirtual #114                // Method zipkin2/v1/V1Span$Builder.id:(Ljava/lang/String;)Lzipkin2/v1/V1Span$Builder;
      85: pop
      86: goto          29
      89: aload_1
      90: invokevirtual #117                // Method zipkin2/internal/JsonCodec$JsonReader.peekNull:()Z
      93: ifeq          103
      96: aload_1
      97: invokevirtual #120                // Method zipkin2/internal/JsonCodec$JsonReader.skipValue:()V
     100: goto          29
     103: aload_2
     104: ldc           #122                // String name
     106: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     109: ifeq          127
     112: aload_0
     113: getfield      #82                 // Field builder:Lzipkin2/v1/V1Span$Builder;
     116: aload_1
     117: invokevirtual #107                // Method zipkin2/internal/JsonCodec$JsonReader.nextString:()Ljava/lang/String;
     120: invokevirtual #124                // Method zipkin2/v1/V1Span$Builder.name:(Ljava/lang/String;)Lzipkin2/v1/V1Span$Builder;
     123: pop
     124: goto          304
     127: aload_2
     128: ldc           #126                // String parentId
     130: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     133: ifeq          151
     136: aload_0
     137: getfield      #82                 // Field builder:Lzipkin2/v1/V1Span$Builder;
     140: aload_1
     141: invokevirtual #107                // Method zipkin2/internal/JsonCodec$JsonReader.nextString:()Ljava/lang/String;
     144: invokevirtual #128                // Method zipkin2/v1/V1Span$Builder.parentId:(Ljava/lang/String;)Lzipkin2/v1/V1Span$Builder;
     147: pop
     148: goto          304
     151: aload_2
     152: ldc           #130                // String timestamp
     154: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     157: ifeq          175
     160: aload_0
     161: getfield      #82                 // Field builder:Lzipkin2/v1/V1Span$Builder;
     164: aload_1
     165: invokevirtual #134                // Method zipkin2/internal/JsonCodec$JsonReader.nextLong:()J
     168: invokevirtual #137                // Method zipkin2/v1/V1Span$Builder.timestamp:(J)Lzipkin2/v1/V1Span$Builder;
     171: pop
     172: goto          304
     175: aload_2
     176: ldc           #139                // String duration
     178: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     181: ifeq          199
     184: aload_0
     185: getfield      #82                 // Field builder:Lzipkin2/v1/V1Span$Builder;
     188: aload_1
     189: invokevirtual #134                // Method zipkin2/internal/JsonCodec$JsonReader.nextLong:()J
     192: invokevirtual #141                // Method zipkin2/v1/V1Span$Builder.duration:(J)Lzipkin2/v1/V1Span$Builder;
     195: pop
     196: goto          304
     199: aload_2
     200: ldc           #143                // String annotations
     202: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     205: ifeq          234
     208: aload_1
     209: invokevirtual #44                 // Method zipkin2/internal/JsonCodec$JsonReader.beginArray:()V
     212: aload_1
     213: invokevirtual #48                 // Method zipkin2/internal/JsonCodec$JsonReader.hasNext:()Z
     216: ifeq          227
     219: aload_0
     220: aload_1
     221: invokevirtual #147                // Method readAnnotation:(Lzipkin2/internal/JsonCodec$JsonReader;)V
     224: goto          212
     227: aload_1
     228: invokevirtual #59                 // Method zipkin2/internal/JsonCodec$JsonReader.endArray:()V
     231: goto          304
     234: aload_2
     235: ldc           #149                // String binaryAnnotations
     237: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     240: ifeq          269
     243: aload_1
     244: invokevirtual #44                 // Method zipkin2/internal/JsonCodec$JsonReader.beginArray:()V
     247: aload_1
     248: invokevirtual #48                 // Method zipkin2/internal/JsonCodec$JsonReader.hasNext:()Z
     251: ifeq          262
     254: aload_0
     255: aload_1
     256: invokevirtual #152                // Method readBinaryAnnotation:(Lzipkin2/internal/JsonCodec$JsonReader;)V
     259: goto          247
     262: aload_1
     263: invokevirtual #59                 // Method zipkin2/internal/JsonCodec$JsonReader.endArray:()V
     266: goto          304
     269: aload_2
     270: ldc           #154                // String debug
     272: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     275: ifeq          300
     278: aload_1
     279: invokevirtual #157                // Method zipkin2/internal/JsonCodec$JsonReader.nextBoolean:()Z
     282: ifeq          304
     285: aload_0
     286: getfield      #82                 // Field builder:Lzipkin2/v1/V1Span$Builder;
     289: iconst_1
     290: invokestatic  #163                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     293: invokevirtual #166                // Method zipkin2/v1/V1Span$Builder.debug:(Ljava/lang/Boolean;)Lzipkin2/v1/V1Span$Builder;
     296: pop
     297: goto          304
     300: aload_1
     301: invokevirtual #120                // Method zipkin2/internal/JsonCodec$JsonReader.skipValue:()V
     304: goto          29
     307: aload_1
     308: invokevirtual #169                // Method zipkin2/internal/JsonCodec$JsonReader.endObject:()V
     311: aload_0
     312: getfield      #82                 // Field builder:Lzipkin2/v1/V1Span$Builder;
     315: invokevirtual #173                // Method zipkin2/v1/V1Span$Builder.build:()Lzipkin2/v1/V1Span;
     318: areturn

  void readAnnotation(zipkin2.internal.JsonCodec$JsonReader) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #92                 // Method zipkin2/internal/JsonCodec$JsonReader.beginObject:()V
       4: aconst_null
       5: astore_3
       6: aconst_null
       7: astore        4
       9: aconst_null
      10: astore        5
      12: aload_1
      13: invokevirtual #48                 // Method zipkin2/internal/JsonCodec$JsonReader.hasNext:()Z
      16: ifeq          102
      19: aload_1
      20: invokevirtual #96                 // Method zipkin2/internal/JsonCodec$JsonReader.nextName:()Ljava/lang/String;
      23: astore_2
      24: aload_2
      25: ldc           #130                // String timestamp
      27: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      30: ifeq          44
      33: aload_1
      34: invokevirtual #134                // Method zipkin2/internal/JsonCodec$JsonReader.nextLong:()J
      37: invokestatic  #181                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      40: astore_3
      41: goto          12
      44: aload_2
      45: ldc           #183                // String value
      47: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      50: ifeq          62
      53: aload_1
      54: invokevirtual #107                // Method zipkin2/internal/JsonCodec$JsonReader.nextString:()Ljava/lang/String;
      57: astore        4
      59: goto          12
      62: aload_2
      63: ldc           #185                // String endpoint
      65: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      68: ifeq          95
      71: aload_1
      72: invokevirtual #117                // Method zipkin2/internal/JsonCodec$JsonReader.peekNull:()Z
      75: ifne          95
      78: getstatic     #191                // Field zipkin2/internal/V2SpanReader.ENDPOINT_READER:Lzipkin2/internal/JsonCodec$JsonReaderAdapter;
      81: aload_1
      82: invokeinterface #194,  2          // InterfaceMethod zipkin2/internal/JsonCodec$JsonReaderAdapter.fromJson:(Lzipkin2/internal/JsonCodec$JsonReader;)Ljava/lang/Object;
      87: checkcast     #178                // class zipkin2/Endpoint
      90: astore        5
      92: goto          12
      95: aload_1
      96: invokevirtual #120                // Method zipkin2/internal/JsonCodec$JsonReader.skipValue:()V
      99: goto          12
     102: aload_3
     103: ifnull        111
     106: aload         4
     108: ifnonnull     141
     111: new           #196                // class java/lang/IllegalArgumentException
     114: dup
     115: new           #198                // class java/lang/StringBuilder
     118: dup
     119: invokespecial #199                // Method java/lang/StringBuilder."<init>":()V
     122: ldc           #201                // String Incomplete annotation at
     124: invokevirtual #205                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload_1
     128: invokevirtual #208                // Method zipkin2/internal/JsonCodec$JsonReader.getPath:()Ljava/lang/String;
     131: invokevirtual #205                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: invokevirtual #211                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     137: invokespecial #214                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     140: athrow
     141: aload_1
     142: invokevirtual #169                // Method zipkin2/internal/JsonCodec$JsonReader.endObject:()V
     145: aload_0
     146: getfield      #82                 // Field builder:Lzipkin2/v1/V1Span$Builder;
     149: aload_3
     150: invokevirtual #217                // Method java/lang/Long.longValue:()J
     153: aload         4
     155: aload         5
     157: invokevirtual #221                // Method zipkin2/v1/V1Span$Builder.addAnnotation:(JLjava/lang/String;Lzipkin2/Endpoint;)Lzipkin2/v1/V1Span$Builder;
     160: pop
     161: return

  public java.lang.String toString();
    Code:
       0: ldc           #225                // String Span
       2: areturn

  void readBinaryAnnotation(zipkin2.internal.JsonCodec$JsonReader) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: aconst_null
       3: astore_3
       4: aconst_null
       5: astore        4
       7: aconst_null
       8: astore        5
      10: aload_1
      11: invokevirtual #92                 // Method zipkin2/internal/JsonCodec$JsonReader.beginObject:()V
      14: aload_1
      15: invokevirtual #48                 // Method zipkin2/internal/JsonCodec$JsonReader.hasNext:()Z
      18: ifeq          144
      21: aload_1
      22: invokevirtual #96                 // Method zipkin2/internal/JsonCodec$JsonReader.nextName:()Ljava/lang/String;
      25: astore        6
      27: aload_1
      28: invokevirtual #117                // Method zipkin2/internal/JsonCodec$JsonReader.peekNull:()Z
      31: ifeq          41
      34: aload_1
      35: invokevirtual #120                // Method zipkin2/internal/JsonCodec$JsonReader.skipValue:()V
      38: goto          14
      41: aload         6
      43: ldc           #227                // String key
      45: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      48: ifeq          59
      51: aload_1
      52: invokevirtual #107                // Method zipkin2/internal/JsonCodec$JsonReader.nextString:()Ljava/lang/String;
      55: astore_2
      56: goto          141
      59: aload         6
      61: ldc           #183                // String value
      63: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      66: ifeq          111
      69: aload_1
      70: invokevirtual #230                // Method zipkin2/internal/JsonCodec$JsonReader.peekString:()Z
      73: ifeq          85
      76: aload_1
      77: invokevirtual #107                // Method zipkin2/internal/JsonCodec$JsonReader.nextString:()Ljava/lang/String;
      80: astore        5
      82: goto          141
      85: aload_1
      86: invokevirtual #233                // Method zipkin2/internal/JsonCodec$JsonReader.peekBoolean:()Z
      89: ifeq          104
      92: aload_1
      93: invokevirtual #157                // Method zipkin2/internal/JsonCodec$JsonReader.nextBoolean:()Z
      96: invokestatic  #163                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      99: astore        4
     101: goto          141
     104: aload_1
     105: invokevirtual #120                // Method zipkin2/internal/JsonCodec$JsonReader.skipValue:()V
     108: goto          141
     111: aload         6
     113: ldc           #185                // String endpoint
     115: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     118: ifeq          137
     121: getstatic     #191                // Field zipkin2/internal/V2SpanReader.ENDPOINT_READER:Lzipkin2/internal/JsonCodec$JsonReaderAdapter;
     124: aload_1
     125: invokeinterface #194,  2          // InterfaceMethod zipkin2/internal/JsonCodec$JsonReaderAdapter.fromJson:(Lzipkin2/internal/JsonCodec$JsonReader;)Ljava/lang/Object;
     130: checkcast     #178                // class zipkin2/Endpoint
     133: astore_3
     134: goto          141
     137: aload_1
     138: invokevirtual #120                // Method zipkin2/internal/JsonCodec$JsonReader.skipValue:()V
     141: goto          14
     144: aload_2
     145: ifnonnull     178
     148: new           #196                // class java/lang/IllegalArgumentException
     151: dup
     152: new           #198                // class java/lang/StringBuilder
     155: dup
     156: invokespecial #199                // Method java/lang/StringBuilder."<init>":()V
     159: ldc           #235                // String No key at
     161: invokevirtual #205                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: aload_1
     165: invokevirtual #208                // Method zipkin2/internal/JsonCodec$JsonReader.getPath:()Ljava/lang/String;
     168: invokevirtual #205                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: invokevirtual #211                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     174: invokespecial #214                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     177: athrow
     178: aload_1
     179: invokevirtual #169                // Method zipkin2/internal/JsonCodec$JsonReader.endObject:()V
     182: aload         5
     184: ifnull        202
     187: aload_0
     188: getfield      #82                 // Field builder:Lzipkin2/v1/V1Span$Builder;
     191: aload_2
     192: aload         5
     194: aload_3
     195: invokevirtual #239                // Method zipkin2/v1/V1Span$Builder.addBinaryAnnotation:(Ljava/lang/String;Ljava/lang/String;Lzipkin2/Endpoint;)Lzipkin2/v1/V1Span$Builder;
     198: pop
     199: goto          256
     202: aload         4
     204: ifnull        256
     207: aload         4
     209: invokevirtual #242                // Method java/lang/Boolean.booleanValue:()Z
     212: ifeq          256
     215: aload_3
     216: ifnull        256
     219: aload_2
     220: ldc           #244                // String sa
     222: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     225: ifne          246
     228: aload_2
     229: ldc           #246                // String ca
     231: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     234: ifne          246
     237: aload_2
     238: ldc           #248                // String ma
     240: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     243: ifeq          256
     246: aload_0
     247: getfield      #82                 // Field builder:Lzipkin2/v1/V1Span$Builder;
     250: aload_2
     251: aload_3
     252: invokevirtual #251                // Method zipkin2/v1/V1Span$Builder.addBinaryAnnotation:(Ljava/lang/String;Lzipkin2/Endpoint;)Lzipkin2/v1/V1Span$Builder;
     255: pop
     256: return

  public java.lang.Object fromJson(zipkin2.internal.JsonCodec$JsonReader) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #52                 // Method fromJson:(Lzipkin2/internal/JsonCodec$JsonReader;)Lzipkin2/v1/V1Span;
       5: areturn
}
