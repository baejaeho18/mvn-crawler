Compiled from "Proto3ZipkinFields.java"
class zipkin2.internal.Proto3ZipkinFields$SpanField extends zipkin2.internal.Proto3Fields$LengthDelimitedField<zipkin2.Span> {
  static final int TRACE_ID_KEY;

  static final int PARENT_ID_KEY;

  static final int ID_KEY;

  static final int KIND_KEY;

  static final int NAME_KEY;

  static final int TIMESTAMP_KEY;

  static final int DURATION_KEY;

  static final int LOCAL_ENDPOINT_KEY;

  static final int REMOTE_ENDPOINT_KEY;

  static final int ANNOTATION_KEY;

  static final int TAG_KEY;

  static final int DEBUG_KEY;

  static final int SHARED_KEY;

  static final zipkin2.internal.Proto3Fields$HexField TRACE_ID;

  static final zipkin2.internal.Proto3Fields$HexField PARENT_ID;

  static final zipkin2.internal.Proto3Fields$HexField ID;

  static final zipkin2.internal.Proto3Fields$VarintField KIND;

  static final zipkin2.internal.Proto3Fields$Utf8Field NAME;

  static final zipkin2.internal.Proto3Fields$Fixed64Field TIMESTAMP;

  static final zipkin2.internal.Proto3Fields$VarintField DURATION;

  static final zipkin2.internal.Proto3ZipkinFields$EndpointField LOCAL_ENDPOINT;

  static final zipkin2.internal.Proto3ZipkinFields$EndpointField REMOTE_ENDPOINT;

  static final zipkin2.internal.Proto3ZipkinFields$AnnotationField ANNOTATION;

  static final zipkin2.internal.Proto3ZipkinFields$TagField TAG;

  static final zipkin2.internal.Proto3Fields$BooleanField DEBUG;

  static final zipkin2.internal.Proto3Fields$BooleanField SHARED;

  zipkin2.internal.Proto3ZipkinFields$SpanField();
    Code:
       0: aload_0
       1: bipush        10
       3: invokespecial #102                // Method zipkin2/internal/Proto3Fields$LengthDelimitedField."<init>":(I)V
       6: return

  int sizeOfValue(zipkin2.Span);
    Code:
       0: getstatic     #108                // Field TRACE_ID:Lzipkin2/internal/Proto3Fields$HexField;
       3: aload_1
       4: invokevirtual #112                // Method zipkin2/Span.traceId:()Ljava/lang/String;
       7: invokevirtual #116                // Method zipkin2/internal/Proto3Fields$HexField.sizeInBytes:(Ljava/lang/Object;)I
      10: istore_2
      11: iload_2
      12: getstatic     #118                // Field PARENT_ID:Lzipkin2/internal/Proto3Fields$HexField;
      15: aload_1
      16: invokevirtual #121                // Method zipkin2/Span.parentId:()Ljava/lang/String;
      19: invokevirtual #116                // Method zipkin2/internal/Proto3Fields$HexField.sizeInBytes:(Ljava/lang/Object;)I
      22: iadd
      23: istore_2
      24: iload_2
      25: getstatic     #123                // Field ID:Lzipkin2/internal/Proto3Fields$HexField;
      28: aload_1
      29: invokevirtual #126                // Method zipkin2/Span.id:()Ljava/lang/String;
      32: invokevirtual #116                // Method zipkin2/internal/Proto3Fields$HexField.sizeInBytes:(Ljava/lang/Object;)I
      35: iadd
      36: istore_2
      37: iload_2
      38: getstatic     #128                // Field KIND:Lzipkin2/internal/Proto3Fields$VarintField;
      41: aload_1
      42: invokevirtual #132                // Method zipkin2/Span.kind:()Lzipkin2/Span$Kind;
      45: ifnull        52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: invokevirtual #135                // Method zipkin2/internal/Proto3Fields$VarintField.sizeInBytes:(I)I
      56: iadd
      57: istore_2
      58: iload_2
      59: getstatic     #137                // Field NAME:Lzipkin2/internal/Proto3Fields$Utf8Field;
      62: aload_1
      63: invokevirtual #140                // Method zipkin2/Span.name:()Ljava/lang/String;
      66: invokevirtual #141                // Method zipkin2/internal/Proto3Fields$Utf8Field.sizeInBytes:(Ljava/lang/Object;)I
      69: iadd
      70: istore_2
      71: iload_2
      72: getstatic     #143                // Field TIMESTAMP:Lzipkin2/internal/Proto3Fields$Fixed64Field;
      75: aload_1
      76: invokevirtual #147                // Method zipkin2/Span.timestampAsLong:()J
      79: invokevirtual #150                // Method zipkin2/internal/Proto3Fields$Fixed64Field.sizeInBytes:(J)I
      82: iadd
      83: istore_2
      84: iload_2
      85: getstatic     #152                // Field DURATION:Lzipkin2/internal/Proto3Fields$VarintField;
      88: aload_1
      89: invokevirtual #155                // Method zipkin2/Span.durationAsLong:()J
      92: invokevirtual #156                // Method zipkin2/internal/Proto3Fields$VarintField.sizeInBytes:(J)I
      95: iadd
      96: istore_2
      97: iload_2
      98: getstatic     #158                // Field LOCAL_ENDPOINT:Lzipkin2/internal/Proto3ZipkinFields$EndpointField;
     101: aload_1
     102: invokevirtual #162                // Method zipkin2/Span.localEndpoint:()Lzipkin2/Endpoint;
     105: invokevirtual #163                // Method zipkin2/internal/Proto3ZipkinFields$EndpointField.sizeInBytes:(Ljava/lang/Object;)I
     108: iadd
     109: istore_2
     110: iload_2
     111: getstatic     #165                // Field REMOTE_ENDPOINT:Lzipkin2/internal/Proto3ZipkinFields$EndpointField;
     114: aload_1
     115: invokevirtual #168                // Method zipkin2/Span.remoteEndpoint:()Lzipkin2/Endpoint;
     118: invokevirtual #163                // Method zipkin2/internal/Proto3ZipkinFields$EndpointField.sizeInBytes:(Ljava/lang/Object;)I
     121: iadd
     122: istore_2
     123: aload_1
     124: invokevirtual #172                // Method zipkin2/Span.annotations:()Ljava/util/List;
     127: astore_3
     128: aload_3
     129: invokeinterface #178,  1          // InterfaceMethod java/util/List.size:()I
     134: istore        4
     136: iconst_0
     137: istore        5
     139: iload         5
     141: iload         4
     143: if_icmpge     172
     146: iload_2
     147: getstatic     #180                // Field ANNOTATION:Lzipkin2/internal/Proto3ZipkinFields$AnnotationField;
     150: aload_3
     151: iload         5
     153: invokeinterface #184,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     158: checkcast     #186                // class zipkin2/Annotation
     161: invokevirtual #187                // Method zipkin2/internal/Proto3ZipkinFields$AnnotationField.sizeInBytes:(Ljava/lang/Object;)I
     164: iadd
     165: istore_2
     166: iinc          5, 1
     169: goto          139
     172: aload_1
     173: invokevirtual #191                // Method zipkin2/Span.tags:()Ljava/util/Map;
     176: astore        5
     178: aload         5
     180: invokeinterface #192,  1          // InterfaceMethod java/util/Map.size:()I
     185: istore        6
     187: iload         6
     189: ifle          242
     192: aload         5
     194: invokeinterface #196,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     199: invokeinterface #202,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     204: astore        7
     206: aload         7
     208: invokeinterface #208,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     213: ifeq          242
     216: aload         7
     218: invokeinterface #212,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     223: checkcast     #37                 // class java/util/Map$Entry
     226: astore        8
     228: iload_2
     229: getstatic     #214                // Field TAG:Lzipkin2/internal/Proto3ZipkinFields$TagField;
     232: aload         8
     234: invokevirtual #215                // Method zipkin2/internal/Proto3ZipkinFields$TagField.sizeInBytes:(Ljava/lang/Object;)I
     237: iadd
     238: istore_2
     239: goto          206
     242: iload_2
     243: getstatic     #217                // Field DEBUG:Lzipkin2/internal/Proto3Fields$BooleanField;
     246: getstatic     #223                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     249: aload_1
     250: invokevirtual #227                // Method zipkin2/Span.debug:()Ljava/lang/Boolean;
     253: invokevirtual #231                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     256: invokevirtual #234                // Method zipkin2/internal/Proto3Fields$BooleanField.sizeInBytes:(Z)I
     259: iadd
     260: istore_2
     261: iload_2
     262: getstatic     #236                // Field SHARED:Lzipkin2/internal/Proto3Fields$BooleanField;
     265: getstatic     #223                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     268: aload_1
     269: invokevirtual #239                // Method zipkin2/Span.shared:()Ljava/lang/Boolean;
     272: invokevirtual #231                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     275: invokevirtual #234                // Method zipkin2/internal/Proto3Fields$BooleanField.sizeInBytes:(Z)I
     278: iadd
     279: istore_2
     280: iload_2
     281: ireturn

  void writeValue(zipkin2.internal.Buffer, zipkin2.Span);
    Code:
       0: getstatic     #108                // Field TRACE_ID:Lzipkin2/internal/Proto3Fields$HexField;
       3: aload_1
       4: aload_2
       5: invokevirtual #112                // Method zipkin2/Span.traceId:()Ljava/lang/String;
       8: invokevirtual #258                // Method zipkin2/internal/Proto3Fields$HexField.write:(Lzipkin2/internal/Buffer;Ljava/lang/Object;)V
      11: getstatic     #118                // Field PARENT_ID:Lzipkin2/internal/Proto3Fields$HexField;
      14: aload_1
      15: aload_2
      16: invokevirtual #121                // Method zipkin2/Span.parentId:()Ljava/lang/String;
      19: invokevirtual #258                // Method zipkin2/internal/Proto3Fields$HexField.write:(Lzipkin2/internal/Buffer;Ljava/lang/Object;)V
      22: getstatic     #123                // Field ID:Lzipkin2/internal/Proto3Fields$HexField;
      25: aload_1
      26: aload_2
      27: invokevirtual #126                // Method zipkin2/Span.id:()Ljava/lang/String;
      30: invokevirtual #258                // Method zipkin2/internal/Proto3Fields$HexField.write:(Lzipkin2/internal/Buffer;Ljava/lang/Object;)V
      33: getstatic     #128                // Field KIND:Lzipkin2/internal/Proto3Fields$VarintField;
      36: aload_1
      37: aload_0
      38: aload_2
      39: invokevirtual #132                // Method zipkin2/Span.kind:()Lzipkin2/Span$Kind;
      42: invokevirtual #262                // Method toByte:(Lzipkin2/Span$Kind;)I
      45: invokevirtual #265                // Method zipkin2/internal/Proto3Fields$VarintField.write:(Lzipkin2/internal/Buffer;I)V
      48: getstatic     #137                // Field NAME:Lzipkin2/internal/Proto3Fields$Utf8Field;
      51: aload_1
      52: aload_2
      53: invokevirtual #140                // Method zipkin2/Span.name:()Ljava/lang/String;
      56: invokevirtual #266                // Method zipkin2/internal/Proto3Fields$Utf8Field.write:(Lzipkin2/internal/Buffer;Ljava/lang/Object;)V
      59: getstatic     #143                // Field TIMESTAMP:Lzipkin2/internal/Proto3Fields$Fixed64Field;
      62: aload_1
      63: aload_2
      64: invokevirtual #147                // Method zipkin2/Span.timestampAsLong:()J
      67: invokevirtual #269                // Method zipkin2/internal/Proto3Fields$Fixed64Field.write:(Lzipkin2/internal/Buffer;J)V
      70: getstatic     #152                // Field DURATION:Lzipkin2/internal/Proto3Fields$VarintField;
      73: aload_1
      74: aload_2
      75: invokevirtual #155                // Method zipkin2/Span.durationAsLong:()J
      78: invokevirtual #270                // Method zipkin2/internal/Proto3Fields$VarintField.write:(Lzipkin2/internal/Buffer;J)V
      81: getstatic     #158                // Field LOCAL_ENDPOINT:Lzipkin2/internal/Proto3ZipkinFields$EndpointField;
      84: aload_1
      85: aload_2
      86: invokevirtual #162                // Method zipkin2/Span.localEndpoint:()Lzipkin2/Endpoint;
      89: invokevirtual #271                // Method zipkin2/internal/Proto3ZipkinFields$EndpointField.write:(Lzipkin2/internal/Buffer;Ljava/lang/Object;)V
      92: getstatic     #165                // Field REMOTE_ENDPOINT:Lzipkin2/internal/Proto3ZipkinFields$EndpointField;
      95: aload_1
      96: aload_2
      97: invokevirtual #168                // Method zipkin2/Span.remoteEndpoint:()Lzipkin2/Endpoint;
     100: invokevirtual #271                // Method zipkin2/internal/Proto3ZipkinFields$EndpointField.write:(Lzipkin2/internal/Buffer;Ljava/lang/Object;)V
     103: aload_2
     104: invokevirtual #172                // Method zipkin2/Span.annotations:()Ljava/util/List;
     107: astore_3
     108: aload_3
     109: invokeinterface #178,  1          // InterfaceMethod java/util/List.size:()I
     114: istore        4
     116: iconst_0
     117: istore        5
     119: iload         5
     121: iload         4
     123: if_icmpge     150
     126: getstatic     #180                // Field ANNOTATION:Lzipkin2/internal/Proto3ZipkinFields$AnnotationField;
     129: aload_1
     130: aload_3
     131: iload         5
     133: invokeinterface #184,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     138: checkcast     #186                // class zipkin2/Annotation
     141: invokevirtual #272                // Method zipkin2/internal/Proto3ZipkinFields$AnnotationField.write:(Lzipkin2/internal/Buffer;Ljava/lang/Object;)V
     144: iinc          5, 1
     147: goto          119
     150: aload_2
     151: invokevirtual #191                // Method zipkin2/Span.tags:()Ljava/util/Map;
     154: astore        5
     156: aload         5
     158: invokeinterface #275,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
     163: ifne          214
     166: aload         5
     168: invokeinterface #196,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     173: invokeinterface #202,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     178: astore        6
     180: aload         6
     182: invokeinterface #208,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     187: ifeq          214
     190: aload         6
     192: invokeinterface #212,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     197: checkcast     #37                 // class java/util/Map$Entry
     200: astore        7
     202: getstatic     #214                // Field TAG:Lzipkin2/internal/Proto3ZipkinFields$TagField;
     205: aload_1
     206: aload         7
     208: invokevirtual #276                // Method zipkin2/internal/Proto3ZipkinFields$TagField.write:(Lzipkin2/internal/Buffer;Ljava/lang/Object;)V
     211: goto          180
     214: getstatic     #217                // Field DEBUG:Lzipkin2/internal/Proto3Fields$BooleanField;
     217: aload_1
     218: getstatic     #223                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     221: aload_2
     222: invokevirtual #227                // Method zipkin2/Span.debug:()Ljava/lang/Boolean;
     225: invokevirtual #231                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     228: invokevirtual #279                // Method zipkin2/internal/Proto3Fields$BooleanField.write:(Lzipkin2/internal/Buffer;Z)V
     231: getstatic     #236                // Field SHARED:Lzipkin2/internal/Proto3Fields$BooleanField;
     234: aload_1
     235: getstatic     #223                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     238: aload_2
     239: invokevirtual #239                // Method zipkin2/Span.shared:()Ljava/lang/Boolean;
     242: invokevirtual #231                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     245: invokevirtual #279                // Method zipkin2/internal/Proto3Fields$BooleanField.write:(Lzipkin2/internal/Buffer;Z)V
     248: return

  int toByte(zipkin2.Span$Kind);
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_1
       5: invokevirtual #286                // Method zipkin2/Span$Kind.ordinal:()I
       8: iconst_1
       9: iadd
      10: goto          14
      13: iconst_0
      14: ireturn

  public zipkin2.Span read(zipkin2.internal.Buffer);
    Code:
       0: aload_1
       1: invokevirtual #294                // Method zipkin2/internal/Buffer.readVarint32:()I
       4: pop
       5: aload_0
       6: aload_1
       7: invokevirtual #298                // Method readLengthPrefixAndValue:(Lzipkin2/internal/Buffer;)Ljava/lang/Object;
      10: checkcast     #44                 // class zipkin2/Span
      13: areturn

  zipkin2.Span readValue(zipkin2.internal.Buffer, int);
    Code:
       0: aload_1
       1: getfield      #304                // Field zipkin2/internal/Buffer.pos:I
       4: iload_2
       5: iadd
       6: istore_3
       7: invokestatic  #308                // Method zipkin2/Span.newBuilder:()Lzipkin2/Span$Builder;
      10: astore        4
      12: aload_1
      13: getfield      #304                // Field zipkin2/internal/Buffer.pos:I
      16: iload_3
      17: if_icmpge     405
      20: aload_1
      21: invokevirtual #294                // Method zipkin2/internal/Buffer.readVarint32:()I
      24: istore        5
      26: iload         5
      28: lookupswitch  { // 13
                    10: 144
                    18: 163
                    26: 182
                    32: 201
                    42: 244
                    49: 263
                    56: 279
                    66: 292
                    74: 311
                    82: 330
                    90: 343
                    96: 356
                   104: 376
               default: 396
          }
     144: aload         4
     146: getstatic     #108                // Field TRACE_ID:Lzipkin2/internal/Proto3Fields$HexField;
     149: aload_1
     150: invokevirtual #309                // Method zipkin2/internal/Proto3Fields$HexField.readLengthPrefixAndValue:(Lzipkin2/internal/Buffer;)Ljava/lang/Object;
     153: checkcast     #311                // class java/lang/String
     156: invokevirtual #314                // Method zipkin2/Span$Builder.traceId:(Ljava/lang/String;)Lzipkin2/Span$Builder;
     159: pop
     160: goto          402
     163: aload         4
     165: getstatic     #118                // Field PARENT_ID:Lzipkin2/internal/Proto3Fields$HexField;
     168: aload_1
     169: invokevirtual #309                // Method zipkin2/internal/Proto3Fields$HexField.readLengthPrefixAndValue:(Lzipkin2/internal/Buffer;)Ljava/lang/Object;
     172: checkcast     #311                // class java/lang/String
     175: invokevirtual #316                // Method zipkin2/Span$Builder.parentId:(Ljava/lang/String;)Lzipkin2/Span$Builder;
     178: pop
     179: goto          402
     182: aload         4
     184: getstatic     #123                // Field ID:Lzipkin2/internal/Proto3Fields$HexField;
     187: aload_1
     188: invokevirtual #309                // Method zipkin2/internal/Proto3Fields$HexField.readLengthPrefixAndValue:(Lzipkin2/internal/Buffer;)Ljava/lang/Object;
     191: checkcast     #311                // class java/lang/String
     194: invokevirtual #318                // Method zipkin2/Span$Builder.id:(Ljava/lang/String;)Lzipkin2/Span$Builder;
     197: pop
     198: goto          402
     201: aload_1
     202: invokevirtual #294                // Method zipkin2/internal/Buffer.readVarint32:()I
     205: istore        6
     207: iload         6
     209: ifne          215
     212: goto          402
     215: iload         6
     217: invokestatic  #322                // Method zipkin2/Span$Kind.values:()[Lzipkin2/Span$Kind;
     220: arraylength
     221: if_icmple     227
     224: goto          402
     227: aload         4
     229: invokestatic  #322                // Method zipkin2/Span$Kind.values:()[Lzipkin2/Span$Kind;
     232: iload         6
     234: iconst_1
     235: isub
     236: aaload
     237: invokevirtual #325                // Method zipkin2/Span$Builder.kind:(Lzipkin2/Span$Kind;)Lzipkin2/Span$Builder;
     240: pop
     241: goto          402
     244: aload         4
     246: getstatic     #137                // Field NAME:Lzipkin2/internal/Proto3Fields$Utf8Field;
     249: aload_1
     250: invokevirtual #326                // Method zipkin2/internal/Proto3Fields$Utf8Field.readLengthPrefixAndValue:(Lzipkin2/internal/Buffer;)Ljava/lang/Object;
     253: checkcast     #311                // class java/lang/String
     256: invokevirtual #328                // Method zipkin2/Span$Builder.name:(Ljava/lang/String;)Lzipkin2/Span$Builder;
     259: pop
     260: goto          402
     263: aload         4
     265: getstatic     #143                // Field TIMESTAMP:Lzipkin2/internal/Proto3Fields$Fixed64Field;
     268: aload_1
     269: invokevirtual #331                // Method zipkin2/internal/Proto3Fields$Fixed64Field.readValue:(Lzipkin2/internal/Buffer;)J
     272: invokevirtual #335                // Method zipkin2/Span$Builder.timestamp:(J)Lzipkin2/Span$Builder;
     275: pop
     276: goto          402
     279: aload         4
     281: aload_1
     282: invokevirtual #338                // Method zipkin2/internal/Buffer.readVarint64:()J
     285: invokevirtual #341                // Method zipkin2/Span$Builder.duration:(J)Lzipkin2/Span$Builder;
     288: pop
     289: goto          402
     292: aload         4
     294: getstatic     #158                // Field LOCAL_ENDPOINT:Lzipkin2/internal/Proto3ZipkinFields$EndpointField;
     297: aload_1
     298: invokevirtual #342                // Method zipkin2/internal/Proto3ZipkinFields$EndpointField.readLengthPrefixAndValue:(Lzipkin2/internal/Buffer;)Ljava/lang/Object;
     301: checkcast     #344                // class zipkin2/Endpoint
     304: invokevirtual #347                // Method zipkin2/Span$Builder.localEndpoint:(Lzipkin2/Endpoint;)Lzipkin2/Span$Builder;
     307: pop
     308: goto          402
     311: aload         4
     313: getstatic     #165                // Field REMOTE_ENDPOINT:Lzipkin2/internal/Proto3ZipkinFields$EndpointField;
     316: aload_1
     317: invokevirtual #342                // Method zipkin2/internal/Proto3ZipkinFields$EndpointField.readLengthPrefixAndValue:(Lzipkin2/internal/Buffer;)Ljava/lang/Object;
     320: checkcast     #344                // class zipkin2/Endpoint
     323: invokevirtual #349                // Method zipkin2/Span$Builder.remoteEndpoint:(Lzipkin2/Endpoint;)Lzipkin2/Span$Builder;
     326: pop
     327: goto          402
     330: getstatic     #180                // Field ANNOTATION:Lzipkin2/internal/Proto3ZipkinFields$AnnotationField;
     333: aload_1
     334: aload         4
     336: invokevirtual #352                // Method zipkin2/internal/Proto3ZipkinFields$AnnotationField.readLengthPrefixAndValue:(Lzipkin2/internal/Buffer;Lzipkin2/Span$Builder;)Z
     339: pop
     340: goto          402
     343: getstatic     #214                // Field TAG:Lzipkin2/internal/Proto3ZipkinFields$TagField;
     346: aload_1
     347: aload         4
     349: invokevirtual #353                // Method zipkin2/internal/Proto3ZipkinFields$TagField.readLengthPrefixAndValue:(Lzipkin2/internal/Buffer;Lzipkin2/Span$Builder;)Z
     352: pop
     353: goto          402
     356: getstatic     #217                // Field DEBUG:Lzipkin2/internal/Proto3Fields$BooleanField;
     359: aload_1
     360: invokevirtual #356                // Method zipkin2/internal/Proto3Fields$BooleanField.read:(Lzipkin2/internal/Buffer;)Z
     363: ifeq          402
     366: aload         4
     368: iconst_1
     369: invokevirtual #359                // Method zipkin2/Span$Builder.debug:(Z)Lzipkin2/Span$Builder;
     372: pop
     373: goto          402
     376: getstatic     #236                // Field SHARED:Lzipkin2/internal/Proto3Fields$BooleanField;
     379: aload_1
     380: invokevirtual #356                // Method zipkin2/internal/Proto3Fields$BooleanField.read:(Lzipkin2/internal/Buffer;)Z
     383: ifeq          402
     386: aload         4
     388: iconst_1
     389: invokevirtual #361                // Method zipkin2/Span$Builder.shared:(Z)Lzipkin2/Span$Builder;
     392: pop
     393: goto          402
     396: aload_1
     397: iload         5
     399: invokestatic  #364                // Method zipkin2/internal/Proto3ZipkinFields.logAndSkip:(Lzipkin2/internal/Buffer;I)V
     402: goto          12
     405: aload         4
     407: invokevirtual #368                // Method zipkin2/Span$Builder.build:()Lzipkin2/Span;
     410: areturn

  java.lang.Object readValue(zipkin2.internal.Buffer, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #376                // Method readValue:(Lzipkin2/internal/Buffer;I)Lzipkin2/Span;
       6: areturn

  void writeValue(zipkin2.internal.Buffer, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #44                 // class zipkin2/Span
       6: invokevirtual #378                // Method writeValue:(Lzipkin2/internal/Buffer;Lzipkin2/Span;)V
       9: return

  int sizeOfValue(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #44                 // class zipkin2/Span
       5: invokevirtual #380                // Method sizeOfValue:(Lzipkin2/Span;)I
       8: ireturn

  static {};
    Code:
       0: new           #8                  // class zipkin2/internal/Proto3Fields$HexField
       3: dup
       4: bipush        10
       6: invokespecial #382                // Method zipkin2/internal/Proto3Fields$HexField."<init>":(I)V
       9: putstatic     #108                // Field TRACE_ID:Lzipkin2/internal/Proto3Fields$HexField;
      12: new           #8                  // class zipkin2/internal/Proto3Fields$HexField
      15: dup
      16: bipush        18
      18: invokespecial #382                // Method zipkin2/internal/Proto3Fields$HexField."<init>":(I)V
      21: putstatic     #118                // Field PARENT_ID:Lzipkin2/internal/Proto3Fields$HexField;
      24: new           #8                  // class zipkin2/internal/Proto3Fields$HexField
      27: dup
      28: bipush        26
      30: invokespecial #382                // Method zipkin2/internal/Proto3Fields$HexField."<init>":(I)V
      33: putstatic     #123                // Field ID:Lzipkin2/internal/Proto3Fields$HexField;
      36: new           #13                 // class zipkin2/internal/Proto3Fields$VarintField
      39: dup
      40: bipush        32
      42: invokespecial #383                // Method zipkin2/internal/Proto3Fields$VarintField."<init>":(I)V
      45: putstatic     #128                // Field KIND:Lzipkin2/internal/Proto3Fields$VarintField;
      48: new           #16                 // class zipkin2/internal/Proto3Fields$Utf8Field
      51: dup
      52: bipush        42
      54: invokespecial #384                // Method zipkin2/internal/Proto3Fields$Utf8Field."<init>":(I)V
      57: putstatic     #137                // Field NAME:Lzipkin2/internal/Proto3Fields$Utf8Field;
      60: new           #19                 // class zipkin2/internal/Proto3Fields$Fixed64Field
      63: dup
      64: bipush        49
      66: invokespecial #385                // Method zipkin2/internal/Proto3Fields$Fixed64Field."<init>":(I)V
      69: putstatic     #143                // Field TIMESTAMP:Lzipkin2/internal/Proto3Fields$Fixed64Field;
      72: new           #13                 // class zipkin2/internal/Proto3Fields$VarintField
      75: dup
      76: bipush        56
      78: invokespecial #383                // Method zipkin2/internal/Proto3Fields$VarintField."<init>":(I)V
      81: putstatic     #152                // Field DURATION:Lzipkin2/internal/Proto3Fields$VarintField;
      84: new           #22                 // class zipkin2/internal/Proto3ZipkinFields$EndpointField
      87: dup
      88: bipush        66
      90: invokespecial #386                // Method zipkin2/internal/Proto3ZipkinFields$EndpointField."<init>":(I)V
      93: putstatic     #158                // Field LOCAL_ENDPOINT:Lzipkin2/internal/Proto3ZipkinFields$EndpointField;
      96: new           #22                 // class zipkin2/internal/Proto3ZipkinFields$EndpointField
      99: dup
     100: bipush        74
     102: invokespecial #386                // Method zipkin2/internal/Proto3ZipkinFields$EndpointField."<init>":(I)V
     105: putstatic     #165                // Field REMOTE_ENDPOINT:Lzipkin2/internal/Proto3ZipkinFields$EndpointField;
     108: new           #27                 // class zipkin2/internal/Proto3ZipkinFields$AnnotationField
     111: dup
     112: bipush        82
     114: invokespecial #387                // Method zipkin2/internal/Proto3ZipkinFields$AnnotationField."<init>":(I)V
     117: putstatic     #180                // Field ANNOTATION:Lzipkin2/internal/Proto3ZipkinFields$AnnotationField;
     120: new           #30                 // class zipkin2/internal/Proto3ZipkinFields$TagField
     123: dup
     124: bipush        90
     126: invokespecial #388                // Method zipkin2/internal/Proto3ZipkinFields$TagField."<init>":(I)V
     129: putstatic     #214                // Field TAG:Lzipkin2/internal/Proto3ZipkinFields$TagField;
     132: new           #33                 // class zipkin2/internal/Proto3Fields$BooleanField
     135: dup
     136: bipush        96
     138: invokespecial #389                // Method zipkin2/internal/Proto3Fields$BooleanField."<init>":(I)V
     141: putstatic     #217                // Field DEBUG:Lzipkin2/internal/Proto3Fields$BooleanField;
     144: new           #33                 // class zipkin2/internal/Proto3Fields$BooleanField
     147: dup
     148: bipush        104
     150: invokespecial #389                // Method zipkin2/internal/Proto3Fields$BooleanField."<init>":(I)V
     153: putstatic     #236                // Field SHARED:Lzipkin2/internal/Proto3Fields$BooleanField;
     156: return
}
