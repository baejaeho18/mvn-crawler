Compiled from "V2SpanReader.java"
public final class zipkin2.internal.V2SpanReader implements zipkin2.internal.JsonCodec$JsonReaderAdapter<zipkin2.Span> {
  zipkin2.Span$Builder builder;

  static final zipkin2.internal.JsonCodec$JsonReaderAdapter<zipkin2.Endpoint> ENDPOINT_READER;

  public zipkin2.internal.V2SpanReader();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method java/lang/Object."<init>":()V
       4: return

  public zipkin2.Span fromJson(zipkin2.internal.JsonCodec$JsonReader) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #41                 // Field builder:Lzipkin2/Span$Builder;
       4: ifnonnull     17
       7: aload_0
       8: invokestatic  #45                 // Method zipkin2/Span.newBuilder:()Lzipkin2/Span$Builder;
      11: putfield      #41                 // Field builder:Lzipkin2/Span$Builder;
      14: goto          25
      17: aload_0
      18: getfield      #41                 // Field builder:Lzipkin2/Span$Builder;
      21: invokevirtual #48                 // Method zipkin2/Span$Builder.clear:()Lzipkin2/Span$Builder;
      24: pop
      25: aload_1
      26: invokevirtual #51                 // Method zipkin2/internal/JsonCodec$JsonReader.beginObject:()V
      29: aload_1
      30: invokevirtual #55                 // Method zipkin2/internal/JsonCodec$JsonReader.hasNext:()Z
      33: ifeq          591
      36: aload_1
      37: invokevirtual #59                 // Method zipkin2/internal/JsonCodec$JsonReader.nextName:()Ljava/lang/String;
      40: astore_2
      41: aload_2
      42: ldc           #61                 // String traceId
      44: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifeq          65
      50: aload_0
      51: getfield      #41                 // Field builder:Lzipkin2/Span$Builder;
      54: aload_1
      55: invokevirtual #70                 // Method zipkin2/internal/JsonCodec$JsonReader.nextString:()Ljava/lang/String;
      58: invokevirtual #73                 // Method zipkin2/Span$Builder.traceId:(Ljava/lang/String;)Lzipkin2/Span$Builder;
      61: pop
      62: goto          29
      65: aload_2
      66: ldc           #75                 // String id
      68: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      71: ifeq          89
      74: aload_0
      75: getfield      #41                 // Field builder:Lzipkin2/Span$Builder;
      78: aload_1
      79: invokevirtual #70                 // Method zipkin2/internal/JsonCodec$JsonReader.nextString:()Ljava/lang/String;
      82: invokevirtual #77                 // Method zipkin2/Span$Builder.id:(Ljava/lang/String;)Lzipkin2/Span$Builder;
      85: pop
      86: goto          29
      89: aload_1
      90: invokevirtual #80                 // Method zipkin2/internal/JsonCodec$JsonReader.peekNull:()Z
      93: ifeq          103
      96: aload_1
      97: invokevirtual #83                 // Method zipkin2/internal/JsonCodec$JsonReader.skipValue:()V
     100: goto          29
     103: aload_2
     104: ldc           #85                 // String parentId
     106: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     109: ifeq          127
     112: aload_0
     113: getfield      #41                 // Field builder:Lzipkin2/Span$Builder;
     116: aload_1
     117: invokevirtual #70                 // Method zipkin2/internal/JsonCodec$JsonReader.nextString:()Ljava/lang/String;
     120: invokevirtual #87                 // Method zipkin2/Span$Builder.parentId:(Ljava/lang/String;)Lzipkin2/Span$Builder;
     123: pop
     124: goto          588
     127: aload_2
     128: ldc           #89                 // String kind
     130: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     133: ifeq          154
     136: aload_0
     137: getfield      #41                 // Field builder:Lzipkin2/Span$Builder;
     140: aload_1
     141: invokevirtual #70                 // Method zipkin2/internal/JsonCodec$JsonReader.nextString:()Ljava/lang/String;
     144: invokestatic  #93                 // Method zipkin2/Span$Kind.valueOf:(Ljava/lang/String;)Lzipkin2/Span$Kind;
     147: invokevirtual #96                 // Method zipkin2/Span$Builder.kind:(Lzipkin2/Span$Kind;)Lzipkin2/Span$Builder;
     150: pop
     151: goto          588
     154: aload_2
     155: ldc           #98                 // String name
     157: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     160: ifeq          178
     163: aload_0
     164: getfield      #41                 // Field builder:Lzipkin2/Span$Builder;
     167: aload_1
     168: invokevirtual #70                 // Method zipkin2/internal/JsonCodec$JsonReader.nextString:()Ljava/lang/String;
     171: invokevirtual #100                // Method zipkin2/Span$Builder.name:(Ljava/lang/String;)Lzipkin2/Span$Builder;
     174: pop
     175: goto          588
     178: aload_2
     179: ldc           #102                // String timestamp
     181: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     184: ifeq          202
     187: aload_0
     188: getfield      #41                 // Field builder:Lzipkin2/Span$Builder;
     191: aload_1
     192: invokevirtual #106                // Method zipkin2/internal/JsonCodec$JsonReader.nextLong:()J
     195: invokevirtual #109                // Method zipkin2/Span$Builder.timestamp:(J)Lzipkin2/Span$Builder;
     198: pop
     199: goto          588
     202: aload_2
     203: ldc           #111                // String duration
     205: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     208: ifeq          226
     211: aload_0
     212: getfield      #41                 // Field builder:Lzipkin2/Span$Builder;
     215: aload_1
     216: invokevirtual #106                // Method zipkin2/internal/JsonCodec$JsonReader.nextLong:()J
     219: invokevirtual #113                // Method zipkin2/Span$Builder.duration:(J)Lzipkin2/Span$Builder;
     222: pop
     223: goto          588
     226: aload_2
     227: ldc           #115                // String localEndpoint
     229: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     232: ifeq          258
     235: aload_0
     236: getfield      #41                 // Field builder:Lzipkin2/Span$Builder;
     239: getstatic     #117                // Field ENDPOINT_READER:Lzipkin2/internal/JsonCodec$JsonReaderAdapter;
     242: aload_1
     243: invokeinterface #120,  2          // InterfaceMethod zipkin2/internal/JsonCodec$JsonReaderAdapter.fromJson:(Lzipkin2/internal/JsonCodec$JsonReader;)Ljava/lang/Object;
     248: checkcast     #122                // class zipkin2/Endpoint
     251: invokevirtual #125                // Method zipkin2/Span$Builder.localEndpoint:(Lzipkin2/Endpoint;)Lzipkin2/Span$Builder;
     254: pop
     255: goto          588
     258: aload_2
     259: ldc           #127                // String remoteEndpoint
     261: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     264: ifeq          290
     267: aload_0
     268: getfield      #41                 // Field builder:Lzipkin2/Span$Builder;
     271: getstatic     #117                // Field ENDPOINT_READER:Lzipkin2/internal/JsonCodec$JsonReaderAdapter;
     274: aload_1
     275: invokeinterface #120,  2          // InterfaceMethod zipkin2/internal/JsonCodec$JsonReaderAdapter.fromJson:(Lzipkin2/internal/JsonCodec$JsonReader;)Ljava/lang/Object;
     280: checkcast     #122                // class zipkin2/Endpoint
     283: invokevirtual #129                // Method zipkin2/Span$Builder.remoteEndpoint:(Lzipkin2/Endpoint;)Lzipkin2/Span$Builder;
     286: pop
     287: goto          588
     290: aload_2
     291: ldc           #131                // String annotations
     293: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     296: ifeq          443
     299: aload_1
     300: invokevirtual #134                // Method zipkin2/internal/JsonCodec$JsonReader.beginArray:()V
     303: aload_1
     304: invokevirtual #55                 // Method zipkin2/internal/JsonCodec$JsonReader.hasNext:()Z
     307: ifeq          436
     310: aload_1
     311: invokevirtual #51                 // Method zipkin2/internal/JsonCodec$JsonReader.beginObject:()V
     314: aconst_null
     315: astore_3
     316: aconst_null
     317: astore        4
     319: aload_1
     320: invokevirtual #55                 // Method zipkin2/internal/JsonCodec$JsonReader.hasNext:()Z
     323: ifeq          376
     326: aload_1
     327: invokevirtual #59                 // Method zipkin2/internal/JsonCodec$JsonReader.nextName:()Ljava/lang/String;
     330: astore_2
     331: aload_2
     332: ldc           #102                // String timestamp
     334: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     337: ifeq          351
     340: aload_1
     341: invokevirtual #106                // Method zipkin2/internal/JsonCodec$JsonReader.nextLong:()J
     344: invokestatic  #139                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     347: astore_3
     348: goto          319
     351: aload_2
     352: ldc           #141                // String value
     354: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     357: ifeq          369
     360: aload_1
     361: invokevirtual #70                 // Method zipkin2/internal/JsonCodec$JsonReader.nextString:()Ljava/lang/String;
     364: astore        4
     366: goto          319
     369: aload_1
     370: invokevirtual #83                 // Method zipkin2/internal/JsonCodec$JsonReader.skipValue:()V
     373: goto          319
     376: aload_3
     377: ifnull        385
     380: aload         4
     382: ifnonnull     415
     385: new           #143                // class java/lang/IllegalArgumentException
     388: dup
     389: new           #145                // class java/lang/StringBuilder
     392: dup
     393: invokespecial #146                // Method java/lang/StringBuilder."<init>":()V
     396: ldc           #148                // String Incomplete annotation at
     398: invokevirtual #152                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     401: aload_1
     402: invokevirtual #155                // Method zipkin2/internal/JsonCodec$JsonReader.getPath:()Ljava/lang/String;
     405: invokevirtual #152                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     408: invokevirtual #158                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     411: invokespecial #161                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     414: athrow
     415: aload_1
     416: invokevirtual #164                // Method zipkin2/internal/JsonCodec$JsonReader.endObject:()V
     419: aload_0
     420: getfield      #41                 // Field builder:Lzipkin2/Span$Builder;
     423: aload_3
     424: invokevirtual #167                // Method java/lang/Long.longValue:()J
     427: aload         4
     429: invokevirtual #171                // Method zipkin2/Span$Builder.addAnnotation:(JLjava/lang/String;)Lzipkin2/Span$Builder;
     432: pop
     433: goto          303
     436: aload_1
     437: invokevirtual #174                // Method zipkin2/internal/JsonCodec$JsonReader.endArray:()V
     440: goto          588
     443: aload_2
     444: ldc           #176                // String tags
     446: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     449: ifeq          528
     452: aload_1
     453: invokevirtual #51                 // Method zipkin2/internal/JsonCodec$JsonReader.beginObject:()V
     456: aload_1
     457: invokevirtual #55                 // Method zipkin2/internal/JsonCodec$JsonReader.hasNext:()Z
     460: ifeq          521
     463: aload_1
     464: invokevirtual #59                 // Method zipkin2/internal/JsonCodec$JsonReader.nextName:()Ljava/lang/String;
     467: astore_3
     468: aload_1
     469: invokevirtual #80                 // Method zipkin2/internal/JsonCodec$JsonReader.peekNull:()Z
     472: ifeq          505
     475: new           #143                // class java/lang/IllegalArgumentException
     478: dup
     479: new           #145                // class java/lang/StringBuilder
     482: dup
     483: invokespecial #146                // Method java/lang/StringBuilder."<init>":()V
     486: ldc           #178                // String No value at
     488: invokevirtual #152                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     491: aload_1
     492: invokevirtual #155                // Method zipkin2/internal/JsonCodec$JsonReader.getPath:()Ljava/lang/String;
     495: invokevirtual #152                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     498: invokevirtual #158                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     501: invokespecial #161                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     504: athrow
     505: aload_0
     506: getfield      #41                 // Field builder:Lzipkin2/Span$Builder;
     509: aload_3
     510: aload_1
     511: invokevirtual #70                 // Method zipkin2/internal/JsonCodec$JsonReader.nextString:()Ljava/lang/String;
     514: invokevirtual #182                // Method zipkin2/Span$Builder.putTag:(Ljava/lang/String;Ljava/lang/String;)Lzipkin2/Span$Builder;
     517: pop
     518: goto          456
     521: aload_1
     522: invokevirtual #164                // Method zipkin2/internal/JsonCodec$JsonReader.endObject:()V
     525: goto          588
     528: aload_2
     529: ldc           #184                // String debug
     531: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     534: ifeq          556
     537: aload_1
     538: invokevirtual #187                // Method zipkin2/internal/JsonCodec$JsonReader.nextBoolean:()Z
     541: ifeq          588
     544: aload_0
     545: getfield      #41                 // Field builder:Lzipkin2/Span$Builder;
     548: iconst_1
     549: invokevirtual #190                // Method zipkin2/Span$Builder.debug:(Z)Lzipkin2/Span$Builder;
     552: pop
     553: goto          588
     556: aload_2
     557: ldc           #192                // String shared
     559: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     562: ifeq          584
     565: aload_1
     566: invokevirtual #187                // Method zipkin2/internal/JsonCodec$JsonReader.nextBoolean:()Z
     569: ifeq          588
     572: aload_0
     573: getfield      #41                 // Field builder:Lzipkin2/Span$Builder;
     576: iconst_1
     577: invokevirtual #194                // Method zipkin2/Span$Builder.shared:(Z)Lzipkin2/Span$Builder;
     580: pop
     581: goto          588
     584: aload_1
     585: invokevirtual #83                 // Method zipkin2/internal/JsonCodec$JsonReader.skipValue:()V
     588: goto          29
     591: aload_1
     592: invokevirtual #164                // Method zipkin2/internal/JsonCodec$JsonReader.endObject:()V
     595: aload_0
     596: getfield      #41                 // Field builder:Lzipkin2/Span$Builder;
     599: invokevirtual #198                // Method zipkin2/Span$Builder.build:()Lzipkin2/Span;
     602: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #205                // String Span
       2: areturn

  public java.lang.Object fromJson(zipkin2.internal.JsonCodec$JsonReader) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #207                // Method fromJson:(Lzipkin2/internal/JsonCodec$JsonReader;)Lzipkin2/Span;
       5: areturn

  static {};
    Code:
       0: new           #10                 // class zipkin2/internal/V2SpanReader$1
       3: dup
       4: invokespecial #209                // Method zipkin2/internal/V2SpanReader$1."<init>":()V
       7: putstatic     #117                // Field ENDPOINT_READER:Lzipkin2/internal/JsonCodec$JsonReaderAdapter;
      10: return
}
