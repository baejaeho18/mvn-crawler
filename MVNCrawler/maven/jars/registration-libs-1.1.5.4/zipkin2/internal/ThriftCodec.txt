Compiled from "ThriftCodec.java"
public final class zipkin2.internal.ThriftCodec {
  static final java.nio.charset.Charset UTF_8;

  static final int MAX_SKIP_DEPTH;

  final zipkin2.internal.V1ThriftSpanWriter writer;

  public zipkin2.internal.ThriftCodec();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #23                 // class zipkin2/internal/V1ThriftSpanWriter
       8: dup
       9: invokespecial #24                 // Method zipkin2/internal/V1ThriftSpanWriter."<init>":()V
      12: putfield      #26                 // Field writer:Lzipkin2/internal/V1ThriftSpanWriter;
      15: return

  public int sizeInBytes(zipkin2.Span);
    Code:
       0: aload_0
       1: getfield      #26                 // Field writer:Lzipkin2/internal/V1ThriftSpanWriter;
       4: aload_1
       5: invokevirtual #32                 // Method zipkin2/internal/V1ThriftSpanWriter.sizeInBytes:(Lzipkin2/Span;)I
       8: ireturn

  public byte[] write(zipkin2.Span);
    Code:
       0: aload_0
       1: getfield      #26                 // Field writer:Lzipkin2/internal/V1ThriftSpanWriter;
       4: aload_1
       5: invokevirtual #38                 // Method zipkin2/internal/V1ThriftSpanWriter.write:(Lzipkin2/Span;)[B
       8: areturn

  static <T> int listSizeInBytes(zipkin2.internal.Buffer$Writer<T>, java.util.List<T>);
    Code:
       0: iconst_5
       1: istore_2
       2: iconst_0
       3: istore_3
       4: aload_1
       5: invokeinterface #48,  1           // InterfaceMethod java/util/List.size:()I
      10: istore        4
      12: iload_3
      13: iload         4
      15: if_icmpge     40
      18: iload_2
      19: aload_0
      20: aload_1
      21: iload_3
      22: invokeinterface #52,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      27: invokeinterface #55,  2           // InterfaceMethod zipkin2/internal/Buffer$Writer.sizeInBytes:(Ljava/lang/Object;)I
      32: iadd
      33: istore_2
      34: iinc          3, 1
      37: goto          12
      40: iload_2
      41: ireturn

  public static boolean read(byte[], java.util.Collection<zipkin2.Span>);
    Code:
       0: aload_0
       1: arraylength
       2: ifne          7
       5: iconst_0
       6: ireturn
       7: aload_0
       8: invokestatic  #73                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      11: astore_2
      12: new           #75                 // class zipkin2/internal/V1ThriftSpanReader
      15: dup
      16: invokespecial #76                 // Method zipkin2/internal/V1ThriftSpanReader."<init>":()V
      19: aload_2
      20: invokevirtual #79                 // Method zipkin2/internal/V1ThriftSpanReader.read:(Ljava/nio/ByteBuffer;)Lzipkin2/v1/V1Span;
      23: astore_3
      24: invokestatic  #85                 // Method zipkin2/v1/V1SpanConverter.create:()Lzipkin2/v1/V1SpanConverter;
      27: aload_3
      28: aload_1
      29: invokevirtual #89                 // Method zipkin2/v1/V1SpanConverter.convert:(Lzipkin2/v1/V1Span;Ljava/util/Collection;)V
      32: iconst_1
      33: ireturn
      34: astore_3
      35: ldc           #95                 // String Span
      37: aload_3
      38: invokestatic  #99                 // Method exceptionReading:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/IllegalArgumentException;
      41: athrow
    Exception table:
       from    to  target type
          12    33    34   Class java/lang/Exception

  public static zipkin2.Span readOne(byte[]);
    Code:
       0: aload_0
       1: arraylength
       2: ifne          7
       5: aconst_null
       6: areturn
       7: aload_0
       8: invokestatic  #73                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      11: astore_1
      12: new           #75                 // class zipkin2/internal/V1ThriftSpanReader
      15: dup
      16: invokespecial #76                 // Method zipkin2/internal/V1ThriftSpanReader."<init>":()V
      19: aload_1
      20: invokevirtual #79                 // Method zipkin2/internal/V1ThriftSpanReader.read:(Ljava/nio/ByteBuffer;)Lzipkin2/v1/V1Span;
      23: astore_2
      24: new           #114                // class java/util/ArrayList
      27: dup
      28: iconst_1
      29: invokespecial #117                // Method java/util/ArrayList."<init>":(I)V
      32: astore_3
      33: invokestatic  #85                 // Method zipkin2/v1/V1SpanConverter.create:()Lzipkin2/v1/V1SpanConverter;
      36: aload_2
      37: aload_3
      38: invokevirtual #89                 // Method zipkin2/v1/V1SpanConverter.convert:(Lzipkin2/v1/V1Span;Ljava/util/Collection;)V
      41: aload_3
      42: iconst_0
      43: invokeinterface #52,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      48: checkcast     #119                // class zipkin2/Span
      51: areturn
      52: astore_2
      53: ldc           #95                 // String Span
      55: aload_2
      56: invokestatic  #99                 // Method exceptionReading:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/IllegalArgumentException;
      59: athrow
    Exception table:
       from    to  target type
          12    51    52   Class java/lang/Exception

  public static boolean readList(byte[], java.util.Collection<zipkin2.Span>);
    Code:
       0: aload_0
       1: arraylength
       2: istore_2
       3: iload_2
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokestatic  #73                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      13: astore_3
      14: aload_3
      15: invokestatic  #125                // Method readListLength:(Ljava/nio/ByteBuffer;)I
      18: istore        4
      20: iload         4
      22: ifne          27
      25: iconst_0
      26: ireturn
      27: new           #75                 // class zipkin2/internal/V1ThriftSpanReader
      30: dup
      31: invokespecial #76                 // Method zipkin2/internal/V1ThriftSpanReader."<init>":()V
      34: astore        5
      36: invokestatic  #85                 // Method zipkin2/v1/V1SpanConverter.create:()Lzipkin2/v1/V1SpanConverter;
      39: astore        6
      41: iconst_0
      42: istore        7
      44: iload         7
      46: iload         4
      48: if_icmpge     73
      51: aload         5
      53: aload_3
      54: invokevirtual #79                 // Method zipkin2/internal/V1ThriftSpanReader.read:(Ljava/nio/ByteBuffer;)Lzipkin2/v1/V1Span;
      57: astore        8
      59: aload         6
      61: aload         8
      63: aload_1
      64: invokevirtual #89                 // Method zipkin2/v1/V1SpanConverter.convert:(Lzipkin2/v1/V1Span;Ljava/util/Collection;)V
      67: iinc          7, 1
      70: goto          44
      73: goto          86
      76: astore        4
      78: ldc           #127                // String List<Span>
      80: aload         4
      82: invokestatic  #99                 // Method exceptionReading:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/IllegalArgumentException;
      85: athrow
      86: iconst_1
      87: ireturn
    Exception table:
       from    to  target type
          14    26    76   Class java/lang/Exception
          27    73    76   Class java/lang/Exception

  static int readListLength(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #135                // Method java/nio/ByteBuffer.get:()B
       4: istore_1
       5: aload_0
       6: invokestatic  #138                // Method guardLength:(Ljava/nio/ByteBuffer;)I
       9: ireturn

  static <T> void writeList(zipkin2.internal.Buffer$Writer<T>, java.util.List<T>, zipkin2.internal.Buffer);
    Code:
       0: aload_1
       1: invokeinterface #48,  1           // InterfaceMethod java/util/List.size:()I
       6: istore_3
       7: aload_2
       8: iload_3
       9: invokestatic  #147                // Method writeListBegin:(Lzipkin2/internal/Buffer;I)V
      12: iconst_0
      13: istore        4
      15: iload         4
      17: iload_3
      18: if_icmpge     42
      21: aload_0
      22: aload_1
      23: iload         4
      25: invokeinterface #52,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      30: aload_2
      31: invokeinterface #150,  3          // InterfaceMethod zipkin2/internal/Buffer$Writer.write:(Ljava/lang/Object;Lzipkin2/internal/Buffer;)V
      36: iinc          4, 1
      39: goto          15
      42: return

  static java.lang.IllegalArgumentException exceptionReading(java.lang.String, java.lang.Exception);
    Code:
       0: aload_1
       1: invokevirtual #156                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
       4: ifnonnull     12
       7: ldc           #158                // String Error
       9: goto          16
      12: aload_1
      13: invokevirtual #156                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      16: astore_2
      17: aload_1
      18: instanceof    #162                // class java/io/EOFException
      21: ifeq          27
      24: ldc           #164                // String EOF
      26: astore_2
      27: aload_1
      28: instanceof    #166                // class java/lang/IllegalStateException
      31: ifne          41
      34: aload_1
      35: instanceof    #168                // class java/nio/BufferUnderflowException
      38: ifeq          44
      41: ldc           #170                // String Malformed
      43: astore_2
      44: ldc           #172                // String %s reading %s from TBinary
      46: iconst_2
      47: anewarray     #4                  // class java/lang/Object
      50: dup
      51: iconst_0
      52: aload_2
      53: aastore
      54: dup
      55: iconst_1
      56: aload_0
      57: aastore
      58: invokestatic  #176                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      61: astore_3
      62: new           #178                // class java/lang/IllegalArgumentException
      65: dup
      66: aload_3
      67: aload_1
      68: invokespecial #181                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      71: athrow

  static void skip(java.nio.ByteBuffer, byte);
    Code:
       0: aload_0
       1: iload_1
       2: ldc           #15                 // int 2147483647
       4: invokestatic  #190                // Method skip:(Ljava/nio/ByteBuffer;BI)V
       7: return

  static void skip(java.nio.ByteBuffer, byte, int);
    Code:
       0: iload_2
       1: ifgt          14
       4: new           #166                // class java/lang/IllegalStateException
       7: dup
       8: ldc           #192                // String Maximum skip depth exceeded
      10: invokespecial #195                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_1
      15: tableswitch   { // 2 to 15
                     2: 84
                     3: 84
                     4: 108
                     5: 255
                     6: 92
                     7: 255
                     8: 100
                     9: 255
                    10: 108
                    11: 117
                    12: 130
                    13: 160
                    14: 215
                    15: 215
               default: 255
          }
      84: aload_0
      85: iconst_1
      86: invokestatic  #198                // Method skip:(Ljava/nio/ByteBuffer;I)V
      89: goto          255
      92: aload_0
      93: iconst_2
      94: invokestatic  #198                // Method skip:(Ljava/nio/ByteBuffer;I)V
      97: goto          255
     100: aload_0
     101: iconst_4
     102: invokestatic  #198                // Method skip:(Ljava/nio/ByteBuffer;I)V
     105: goto          255
     108: aload_0
     109: bipush        8
     111: invokestatic  #198                // Method skip:(Ljava/nio/ByteBuffer;I)V
     114: goto          255
     117: aload_0
     118: invokestatic  #138                // Method guardLength:(Ljava/nio/ByteBuffer;)I
     121: istore_3
     122: aload_0
     123: iload_3
     124: invokestatic  #198                // Method skip:(Ljava/nio/ByteBuffer;I)V
     127: goto          255
     130: aload_0
     131: invokestatic  #203                // Method zipkin2/internal/ThriftField.read:(Ljava/nio/ByteBuffer;)Lzipkin2/internal/ThriftField;
     134: astore        4
     136: aload         4
     138: getfield      #205                // Field zipkin2/internal/ThriftField.type:B
     141: ifne          145
     144: return
     145: aload_0
     146: aload         4
     148: getfield      #205                // Field zipkin2/internal/ThriftField.type:B
     151: iload_2
     152: iconst_1
     153: isub
     154: invokestatic  #190                // Method skip:(Ljava/nio/ByteBuffer;BI)V
     157: goto          130
     160: aload_0
     161: invokevirtual #135                // Method java/nio/ByteBuffer.get:()B
     164: istore        4
     166: aload_0
     167: invokevirtual #135                // Method java/nio/ByteBuffer.get:()B
     170: istore        5
     172: iconst_0
     173: istore        6
     175: aload_0
     176: invokestatic  #138                // Method guardLength:(Ljava/nio/ByteBuffer;)I
     179: istore        7
     181: iload         6
     183: iload         7
     185: if_icmpge     212
     188: aload_0
     189: iload         4
     191: iload_2
     192: iconst_1
     193: isub
     194: invokestatic  #190                // Method skip:(Ljava/nio/ByteBuffer;BI)V
     197: aload_0
     198: iload         5
     200: iload_2
     201: iconst_1
     202: isub
     203: invokestatic  #190                // Method skip:(Ljava/nio/ByteBuffer;BI)V
     206: iinc          6, 1
     209: goto          181
     212: goto          255
     215: aload_0
     216: invokevirtual #135                // Method java/nio/ByteBuffer.get:()B
     219: istore        6
     221: iconst_0
     222: istore        7
     224: aload_0
     225: invokestatic  #138                // Method guardLength:(Ljava/nio/ByteBuffer;)I
     228: istore        8
     230: iload         7
     232: iload         8
     234: if_icmpge     252
     237: aload_0
     238: iload         6
     240: iload_2
     241: iconst_1
     242: isub
     243: invokestatic  #190                // Method skip:(Ljava/nio/ByteBuffer;BI)V
     246: iinc          7, 1
     249: goto          230
     252: goto          255
     255: return

  static void skip(java.nio.ByteBuffer, int);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: iload_1
       4: if_icmpge     25
       7: aload_0
       8: invokevirtual #215                // Method java/nio/ByteBuffer.hasRemaining:()Z
      11: ifeq          25
      14: aload_0
      15: invokevirtual #135                // Method java/nio/ByteBuffer.get:()B
      18: pop
      19: iinc          2, 1
      22: goto          2
      25: return

  static byte[] readByteArray(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokestatic  #138                // Method guardLength:(Ljava/nio/ByteBuffer;)I
       4: newarray       byte
       6: astore_1
       7: aload_0
       8: aload_1
       9: invokevirtual #220                // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      12: pop
      13: aload_1
      14: areturn

  static java.lang.String readUtf8(java.nio.ByteBuffer);
    Code:
       0: new           #160                // class java/lang/String
       3: dup
       4: aload_0
       5: invokestatic  #225                // Method readByteArray:(Ljava/nio/ByteBuffer;)[B
       8: getstatic     #227                // Field UTF_8:Ljava/nio/charset/Charset;
      11: invokespecial #230                // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      14: areturn

  static int guardLength(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #233                // Method java/nio/ByteBuffer.getInt:()I
       4: istore_1
       5: iload_1
       6: aload_0
       7: invokevirtual #236                // Method java/nio/ByteBuffer.remaining:()I
      10: if_icmple     52
      13: new           #178                // class java/lang/IllegalArgumentException
      16: dup
      17: new           #238                // class java/lang/StringBuilder
      20: dup
      21: invokespecial #239                // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #241                // String Truncated: length
      26: invokevirtual #245                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: iload_1
      30: invokevirtual #248                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      33: ldc           #250                // String  > bytes remaining
      35: invokevirtual #245                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: invokevirtual #236                // Method java/nio/ByteBuffer.remaining:()I
      42: invokevirtual #248                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      45: invokevirtual #253                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #254                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: iload_1
      53: ireturn

  static void writeListBegin(zipkin2.internal.Buffer, int);
    Code:
       0: aload_0
       1: bipush        12
       3: invokevirtual #258                // Method zipkin2/internal/Buffer.writeByte:(I)Lzipkin2/internal/Buffer;
       6: pop
       7: aload_0
       8: iload_1
       9: invokestatic  #261                // Method writeInt:(Lzipkin2/internal/Buffer;I)V
      12: return

  static void writeLengthPrefixed(zipkin2.internal.Buffer, java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #267                // Method zipkin2/internal/Buffer.utf8SizeInBytes:(Ljava/lang/String;)I
       4: istore_2
       5: aload_0
       6: aload_1
       7: invokestatic  #267                // Method zipkin2/internal/Buffer.utf8SizeInBytes:(Ljava/lang/String;)I
      10: invokestatic  #261                // Method writeInt:(Lzipkin2/internal/Buffer;I)V
      13: aload_0
      14: aload_1
      15: invokevirtual #271                // Method zipkin2/internal/Buffer.writeUtf8:(Ljava/lang/String;)Lzipkin2/internal/Buffer;
      18: pop
      19: return

  static void writeInt(zipkin2.internal.Buffer, int);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        24
       4: iushr
       5: sipush        255
       8: iand
       9: i2b
      10: invokevirtual #258                // Method zipkin2/internal/Buffer.writeByte:(I)Lzipkin2/internal/Buffer;
      13: pop
      14: aload_0
      15: iload_1
      16: bipush        16
      18: iushr
      19: sipush        255
      22: iand
      23: i2b
      24: invokevirtual #258                // Method zipkin2/internal/Buffer.writeByte:(I)Lzipkin2/internal/Buffer;
      27: pop
      28: aload_0
      29: iload_1
      30: bipush        8
      32: iushr
      33: sipush        255
      36: iand
      37: i2b
      38: invokevirtual #258                // Method zipkin2/internal/Buffer.writeByte:(I)Lzipkin2/internal/Buffer;
      41: pop
      42: aload_0
      43: iload_1
      44: sipush        255
      47: iand
      48: i2b
      49: invokevirtual #258                // Method zipkin2/internal/Buffer.writeByte:(I)Lzipkin2/internal/Buffer;
      52: pop
      53: return

  static void writeLong(zipkin2.internal.Buffer, long);
    Code:
       0: aload_0
       1: lload_1
       2: bipush        56
       4: lushr
       5: ldc2_w        #278                // long 255l
       8: land
       9: l2i
      10: i2b
      11: invokevirtual #258                // Method zipkin2/internal/Buffer.writeByte:(I)Lzipkin2/internal/Buffer;
      14: pop
      15: aload_0
      16: lload_1
      17: bipush        48
      19: lushr
      20: ldc2_w        #278                // long 255l
      23: land
      24: l2i
      25: i2b
      26: invokevirtual #258                // Method zipkin2/internal/Buffer.writeByte:(I)Lzipkin2/internal/Buffer;
      29: pop
      30: aload_0
      31: lload_1
      32: bipush        40
      34: lushr
      35: ldc2_w        #278                // long 255l
      38: land
      39: l2i
      40: i2b
      41: invokevirtual #258                // Method zipkin2/internal/Buffer.writeByte:(I)Lzipkin2/internal/Buffer;
      44: pop
      45: aload_0
      46: lload_1
      47: bipush        32
      49: lushr
      50: ldc2_w        #278                // long 255l
      53: land
      54: l2i
      55: i2b
      56: invokevirtual #258                // Method zipkin2/internal/Buffer.writeByte:(I)Lzipkin2/internal/Buffer;
      59: pop
      60: aload_0
      61: lload_1
      62: bipush        24
      64: lushr
      65: ldc2_w        #278                // long 255l
      68: land
      69: l2i
      70: i2b
      71: invokevirtual #258                // Method zipkin2/internal/Buffer.writeByte:(I)Lzipkin2/internal/Buffer;
      74: pop
      75: aload_0
      76: lload_1
      77: bipush        16
      79: lushr
      80: ldc2_w        #278                // long 255l
      83: land
      84: l2i
      85: i2b
      86: invokevirtual #258                // Method zipkin2/internal/Buffer.writeByte:(I)Lzipkin2/internal/Buffer;
      89: pop
      90: aload_0
      91: lload_1
      92: bipush        8
      94: lushr
      95: ldc2_w        #278                // long 255l
      98: land
      99: l2i
     100: i2b
     101: invokevirtual #258                // Method zipkin2/internal/Buffer.writeByte:(I)Lzipkin2/internal/Buffer;
     104: pop
     105: aload_0
     106: lload_1
     107: ldc2_w        #278                // long 255l
     110: land
     111: l2i
     112: i2b
     113: invokevirtual #258                // Method zipkin2/internal/Buffer.writeByte:(I)Lzipkin2/internal/Buffer;
     116: pop
     117: return

  static {};
    Code:
       0: ldc_w         #283                // String UTF-8
       3: invokestatic  #289                // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       6: putstatic     #227                // Field UTF_8:Ljava/nio/charset/Charset;
       9: return
}
