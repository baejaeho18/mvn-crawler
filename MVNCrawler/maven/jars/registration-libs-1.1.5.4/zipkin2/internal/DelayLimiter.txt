Compiled from "DelayLimiter.java"
public final class zipkin2.internal.DelayLimiter<C> {
  final zipkin2.internal.DelayLimiter$Ticker ticker;

  final java.util.concurrent.ConcurrentHashMap<C, zipkin2.internal.DelayLimiter$Suppression<C>> cache;

  final java.util.concurrent.DelayQueue<zipkin2.internal.DelayLimiter$Suppression<C>> suppressions;

  final long ttlNanos;

  final long cardinality;

  public static <C> zipkin2.internal.DelayLimiter<C> create();
    Code:
       0: new           #14                 // class zipkin2/internal/DelayLimiter$Builder
       3: dup
       4: invokespecial #33                 // Method zipkin2/internal/DelayLimiter$Builder."<init>":()V
       7: invokevirtual #36                 // Method zipkin2/internal/DelayLimiter$Builder.build:()Lzipkin2/internal/DelayLimiter;
      10: areturn

  public static zipkin2.internal.DelayLimiter$Builder newBuilder();
    Code:
       0: new           #14                 // class zipkin2/internal/DelayLimiter$Builder
       3: dup
       4: invokespecial #33                 // Method zipkin2/internal/DelayLimiter$Builder."<init>":()V
       7: areturn

  zipkin2.internal.DelayLimiter(zipkin2.internal.DelayLimiter$Builder);
    Code:
       0: aload_0
       1: invokespecial #40                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #42                 // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #43                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #45                 // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
      15: aload_0
      16: new           #47                 // class java/util/concurrent/DelayQueue
      19: dup
      20: invokespecial #48                 // Method java/util/concurrent/DelayQueue."<init>":()V
      23: putfield      #50                 // Field suppressions:Ljava/util/concurrent/DelayQueue;
      26: aload_0
      27: aload_1
      28: getfield      #52                 // Field zipkin2/internal/DelayLimiter$Builder.ticker:Lzipkin2/internal/DelayLimiter$Ticker;
      31: putfield      #53                 // Field ticker:Lzipkin2/internal/DelayLimiter$Ticker;
      34: aload_0
      35: aload_1
      36: getfield      #55                 // Field zipkin2/internal/DelayLimiter$Builder.ttlNanos:J
      39: putfield      #56                 // Field ttlNanos:J
      42: aload_0
      43: aload_1
      44: getfield      #59                 // Field zipkin2/internal/DelayLimiter$Builder.cardinality:I
      47: i2l
      48: putfield      #61                 // Field cardinality:J
      51: return

  public boolean shouldInvoke(C);
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method cleanupExpiredSuppressions:()V
       4: aload_0
       5: getfield      #45                 // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
       8: aload_1
       9: invokevirtual #75                 // Method java/util/concurrent/ConcurrentHashMap.containsKey:(Ljava/lang/Object;)Z
      12: ifeq          17
      15: iconst_0
      16: ireturn
      17: new           #8                  // class zipkin2/internal/DelayLimiter$Suppression
      20: dup
      21: aload_0
      22: getfield      #53                 // Field ticker:Lzipkin2/internal/DelayLimiter$Ticker;
      25: aload_1
      26: aload_0
      27: getfield      #53                 // Field ticker:Lzipkin2/internal/DelayLimiter$Ticker;
      30: invokevirtual #79                 // Method zipkin2/internal/DelayLimiter$Ticker.read:()J
      33: aload_0
      34: getfield      #56                 // Field ttlNanos:J
      37: ladd
      38: invokespecial #82                 // Method zipkin2/internal/DelayLimiter$Suppression."<init>":(Lzipkin2/internal/DelayLimiter$Ticker;Ljava/lang/Object;J)V
      41: astore_2
      42: aload_0
      43: getfield      #45                 // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
      46: aload_1
      47: aload_2
      48: invokevirtual #86                 // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      51: ifnull        56
      54: iconst_0
      55: ireturn
      56: aload_0
      57: getfield      #50                 // Field suppressions:Ljava/util/concurrent/DelayQueue;
      60: aload_2
      61: invokevirtual #90                 // Method java/util/concurrent/DelayQueue.offer:(Ljava/util/concurrent/Delayed;)Z
      64: pop
      65: aload_0
      66: getfield      #50                 // Field suppressions:Ljava/util/concurrent/DelayQueue;
      69: invokevirtual #94                 // Method java/util/concurrent/DelayQueue.size:()I
      72: i2l
      73: aload_0
      74: getfield      #61                 // Field cardinality:J
      77: lcmp
      78: ifle          85
      81: aload_0
      82: invokevirtual #97                 // Method removeOneSuppression:()V
      85: iconst_1
      86: ireturn

  void removeOneSuppression();
    Code:
       0: aload_0
       1: getfield      #50                 // Field suppressions:Ljava/util/concurrent/DelayQueue;
       4: invokevirtual #107                // Method java/util/concurrent/DelayQueue.peek:()Ljava/util/concurrent/Delayed;
       7: checkcast     #8                  // class zipkin2/internal/DelayLimiter$Suppression
      10: dup
      11: astore_1
      12: ifnull        42
      15: aload_0
      16: getfield      #50                 // Field suppressions:Ljava/util/concurrent/DelayQueue;
      19: aload_1
      20: invokevirtual #110                // Method java/util/concurrent/DelayQueue.remove:(Ljava/lang/Object;)Z
      23: ifeq          0
      26: aload_0
      27: getfield      #45                 // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
      30: aload_1
      31: getfield      #112                // Field zipkin2/internal/DelayLimiter$Suppression.context:Ljava/lang/Object;
      34: aload_1
      35: invokevirtual #115                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      38: pop
      39: goto          42
      42: return

  public void invalidate(C);
    Code:
       0: aload_0
       1: getfield      #45                 // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #122                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #8                  // class zipkin2/internal/DelayLimiter$Suppression
      11: astore_2
      12: aload_2
      13: ifnull        25
      16: aload_0
      17: getfield      #50                 // Field suppressions:Ljava/util/concurrent/DelayQueue;
      20: aload_2
      21: invokevirtual #110                // Method java/util/concurrent/DelayQueue.remove:(Ljava/lang/Object;)Z
      24: pop
      25: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #45                 // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #125                // Method java/util/concurrent/ConcurrentHashMap.clear:()V
       7: aload_0
       8: getfield      #50                 // Field suppressions:Ljava/util/concurrent/DelayQueue;
      11: invokevirtual #126                // Method java/util/concurrent/DelayQueue.clear:()V
      14: return

  void cleanupExpiredSuppressions();
    Code:
       0: aload_0
       1: getfield      #50                 // Field suppressions:Ljava/util/concurrent/DelayQueue;
       4: invokevirtual #129                // Method java/util/concurrent/DelayQueue.poll:()Ljava/util/concurrent/Delayed;
       7: checkcast     #8                  // class zipkin2/internal/DelayLimiter$Suppression
      10: dup
      11: astore_1
      12: ifnull        31
      15: aload_0
      16: getfield      #45                 // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
      19: aload_1
      20: getfield      #112                // Field zipkin2/internal/DelayLimiter$Suppression.context:Ljava/lang/Object;
      23: aload_1
      24: invokevirtual #115                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      27: pop
      28: goto          0
      31: return
}
