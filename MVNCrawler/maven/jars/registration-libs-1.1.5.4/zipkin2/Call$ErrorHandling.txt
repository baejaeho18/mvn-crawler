Compiled from "Call.java"
final class zipkin2.Call$ErrorHandling<V> extends zipkin2.Call$Base<V> {
  static final java.lang.Object SENTINEL;

  final zipkin2.Call$ErrorHandler<V> errorHandler;

  final zipkin2.Call<V> delegate;

  zipkin2.Call$ErrorHandling(zipkin2.Call$ErrorHandler<V>, zipkin2.Call<V>);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method zipkin2/Call$Base."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #33                 // Field errorHandler:Lzipkin2/Call$ErrorHandler;
       9: aload_0
      10: aload_2
      11: putfield      #35                 // Field delegate:Lzipkin2/Call;
      14: return

  protected V doExecute() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Lzipkin2/Call;
       4: invokevirtual #50                 // Method zipkin2/Call.execute:()Ljava/lang/Object;
       7: areturn
       8: astore_1
       9: new           #54                 // class java/util/concurrent/atomic/AtomicReference
      12: dup
      13: getstatic     #56                 // Field SENTINEL:Ljava/lang/Object;
      16: invokespecial #59                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      19: astore_2
      20: aload_0
      21: getfield      #33                 // Field errorHandler:Lzipkin2/Call$ErrorHandler;
      24: aload_1
      25: new           #13                 // class zipkin2/Call$ErrorHandling$1
      28: dup
      29: aload_0
      30: aload_2
      31: invokespecial #62                 // Method zipkin2/Call$ErrorHandling$1."<init>":(Lzipkin2/Call$ErrorHandling;Ljava/util/concurrent/atomic/AtomicReference;)V
      34: invokeinterface #66,  3           // InterfaceMethod zipkin2/Call$ErrorHandler.onErrorReturn:(Ljava/lang/Throwable;Lzipkin2/Callback;)V
      39: aload_2
      40: invokevirtual #69                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      43: astore_3
      44: getstatic     #56                 // Field SENTINEL:Ljava/lang/Object;
      47: aload_3
      48: if_acmpne     53
      51: aload_1
      52: athrow
      53: aload_3
      54: areturn
    Exception table:
       from    to  target type
           0     7     8   Class java/io/IOException
           0     7     8   Class java/lang/RuntimeException
           0     7     8   Class java/lang/Error

  protected void doEnqueue(zipkin2.Callback<V>);
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Lzipkin2/Call;
       4: new           #11                 // class zipkin2/Call$ErrorHandling$2
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #82                 // Method zipkin2/Call$ErrorHandling$2."<init>":(Lzipkin2/Call$ErrorHandling;Lzipkin2/Callback;)V
      13: invokevirtual #85                 // Method zipkin2/Call.enqueue:(Lzipkin2/Callback;)V
      16: return

  protected void doCancel();
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Lzipkin2/Call;
       4: invokevirtual #92                 // Method zipkin2/Call.cancel:()V
       7: return

  public java.lang.String toString();
    Code:
       0: new           #96                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #97                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #99                 // String ErrorHandling{call=
       9: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #35                 // Field delegate:Lzipkin2/Call;
      16: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #108                // String , errorHandler=
      21: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #33                 // Field errorHandler:Lzipkin2/Call$ErrorHandler;
      28: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #110                // String }
      33: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #112                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public zipkin2.Call<V> clone();
    Code:
       0: new           #2                  // class zipkin2/Call$ErrorHandling
       3: dup
       4: aload_0
       5: getfield      #33                 // Field errorHandler:Lzipkin2/Call$ErrorHandler;
       8: aload_0
       9: getfield      #35                 // Field delegate:Lzipkin2/Call;
      12: invokevirtual #117                // Method zipkin2/Call.clone:()Lzipkin2/Call;
      15: invokespecial #119                // Method "<init>":(Lzipkin2/Call$ErrorHandler;Lzipkin2/Call;)V
      18: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #122                // Method clone:()Lzipkin2/Call;
       4: areturn

  static {};
    Code:
       0: new           #71                 // class java/lang/Object
       3: dup
       4: invokespecial #124                // Method java/lang/Object."<init>":()V
       7: putstatic     #56                 // Field SENTINEL:Ljava/lang/Object;
      10: return
}
