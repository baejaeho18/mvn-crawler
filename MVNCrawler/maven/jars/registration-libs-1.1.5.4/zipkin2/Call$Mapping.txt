Compiled from "Call.java"
final class zipkin2.Call$Mapping<R, V> extends zipkin2.Call$Base<R> {
  final zipkin2.Call$Mapper<V, R> mapper;

  final zipkin2.Call<V> delegate;

  zipkin2.Call$Mapping(zipkin2.Call$Mapper<V, R>, zipkin2.Call<V>);
    Code:
       0: aload_0
       1: invokespecial #27                 // Method zipkin2/Call$Base."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #29                 // Field mapper:Lzipkin2/Call$Mapper;
       9: aload_0
      10: aload_2
      11: putfield      #31                 // Field delegate:Lzipkin2/Call;
      14: return

  protected R doExecute() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field mapper:Lzipkin2/Call$Mapper;
       4: aload_0
       5: getfield      #31                 // Field delegate:Lzipkin2/Call;
       8: invokevirtual #42                 // Method zipkin2/Call.execute:()Ljava/lang/Object;
      11: invokeinterface #46,  2           // InterfaceMethod zipkin2/Call$Mapper.map:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn

  protected void doEnqueue(zipkin2.Callback<R>);
    Code:
       0: aload_0
       1: getfield      #31                 // Field delegate:Lzipkin2/Call;
       4: new           #11                 // class zipkin2/Call$Mapping$1
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #52                 // Method zipkin2/Call$Mapping$1."<init>":(Lzipkin2/Call$Mapping;Lzipkin2/Callback;)V
      13: invokevirtual #55                 // Method zipkin2/Call.enqueue:(Lzipkin2/Callback;)V
      16: return

  public java.lang.String toString();
    Code:
       0: new           #62                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #63                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #65                 // String Mapping{call=
       9: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #31                 // Field delegate:Lzipkin2/Call;
      16: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #74                 // String , mapper=
      21: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #29                 // Field mapper:Lzipkin2/Call$Mapper;
      28: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #76                 // String }
      33: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public zipkin2.Call<R> clone();
    Code:
       0: new           #2                  // class zipkin2/Call$Mapping
       3: dup
       4: aload_0
       5: getfield      #29                 // Field mapper:Lzipkin2/Call$Mapper;
       8: aload_0
       9: getfield      #31                 // Field delegate:Lzipkin2/Call;
      12: invokevirtual #83                 // Method zipkin2/Call.clone:()Lzipkin2/Call;
      15: invokespecial #85                 // Method "<init>":(Lzipkin2/Call$Mapper;Lzipkin2/Call;)V
      18: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #88                 // Method clone:()Lzipkin2/Call;
       4: areturn
}
