Compiled from "AsyncReporter.java"
final class zipkin2.reporter.AsyncReporter$BoundedAsyncReporter<S> extends zipkin2.reporter.AsyncReporter<S> {
  static final java.util.logging.Logger logger;

  final java.util.concurrent.atomic.AtomicBoolean closed;

  final zipkin2.codec.BytesEncoder<S> encoder;

  final zipkin2.reporter.ByteBoundedQueue<S> pending;

  final zipkin2.reporter.Sender sender;

  final int messageMaxBytes;

  final long messageTimeoutNanos;

  final long closeTimeoutNanos;

  final java.util.concurrent.CountDownLatch close;

  final zipkin2.reporter.ReporterMetrics metrics;

  zipkin2.reporter.AsyncReporter$BoundedAsyncReporter(zipkin2.reporter.AsyncReporter$Builder, zipkin2.codec.BytesEncoder<S>);
    Code:
       0: aload_0
       1: invokespecial #39                 // Method zipkin2/reporter/AsyncReporter."<init>":()V
       4: aload_0
       5: new           #41                 // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #44                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #46                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: new           #48                 // class zipkin2/reporter/ByteBoundedQueue
      20: dup
      21: aload_1
      22: getfield      #51                 // Field zipkin2/reporter/AsyncReporter$Builder.queuedMaxSpans:I
      25: aload_1
      26: getfield      #54                 // Field zipkin2/reporter/AsyncReporter$Builder.queuedMaxBytes:I
      29: invokespecial #57                 // Method zipkin2/reporter/ByteBoundedQueue."<init>":(II)V
      32: putfield      #59                 // Field pending:Lzipkin2/reporter/ByteBoundedQueue;
      35: aload_0
      36: aload_1
      37: getfield      #61                 // Field zipkin2/reporter/AsyncReporter$Builder.sender:Lzipkin2/reporter/Sender;
      40: putfield      #62                 // Field sender:Lzipkin2/reporter/Sender;
      43: aload_0
      44: aload_1
      45: getfield      #64                 // Field zipkin2/reporter/AsyncReporter$Builder.messageMaxBytes:I
      48: putfield      #65                 // Field messageMaxBytes:I
      51: aload_0
      52: aload_1
      53: getfield      #67                 // Field zipkin2/reporter/AsyncReporter$Builder.messageTimeoutNanos:J
      56: putfield      #68                 // Field messageTimeoutNanos:J
      59: aload_0
      60: aload_1
      61: getfield      #70                 // Field zipkin2/reporter/AsyncReporter$Builder.closeTimeoutNanos:J
      64: putfield      #71                 // Field closeTimeoutNanos:J
      67: aload_0
      68: new           #73                 // class java/util/concurrent/CountDownLatch
      71: dup
      72: aload_1
      73: getfield      #67                 // Field zipkin2/reporter/AsyncReporter$Builder.messageTimeoutNanos:J
      76: lconst_0
      77: lcmp
      78: ifle          85
      81: iconst_1
      82: goto          86
      85: iconst_0
      86: invokespecial #78                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      89: putfield      #80                 // Field close:Ljava/util/concurrent/CountDownLatch;
      92: aload_0
      93: aload_1
      94: getfield      #82                 // Field zipkin2/reporter/AsyncReporter$Builder.metrics:Lzipkin2/reporter/ReporterMetrics;
      97: putfield      #83                 // Field metrics:Lzipkin2/reporter/ReporterMetrics;
     100: aload_0
     101: aload_2
     102: putfield      #85                 // Field encoder:Lzipkin2/codec/BytesEncoder;
     105: return

  public void report(S);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #95                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #97                 // String span == null
      10: invokespecial #100                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #83                 // Field metrics:Lzipkin2/reporter/ReporterMetrics;
      18: iconst_1
      19: invokeinterface #105,  2          // InterfaceMethod zipkin2/reporter/ReporterMetrics.incrementSpans:(I)V
      24: aload_0
      25: getfield      #85                 // Field encoder:Lzipkin2/codec/BytesEncoder;
      28: aload_1
      29: invokeinterface #109,  2          // InterfaceMethod zipkin2/codec/BytesEncoder.sizeInBytes:(Ljava/lang/Object;)I
      34: istore_2
      35: aload_0
      36: getfield      #62                 // Field sender:Lzipkin2/reporter/Sender;
      39: iload_2
      40: invokevirtual #115                // Method zipkin2/reporter/Sender.messageSizeInBytes:(I)I
      43: istore_3
      44: aload_0
      45: getfield      #83                 // Field metrics:Lzipkin2/reporter/ReporterMetrics;
      48: iload_2
      49: invokeinterface #118,  2          // InterfaceMethod zipkin2/reporter/ReporterMetrics.incrementSpanBytes:(I)V
      54: aload_0
      55: getfield      #46                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      58: invokevirtual #122                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      61: ifne          84
      64: iload_3
      65: aload_0
      66: getfield      #65                 // Field messageMaxBytes:I
      69: if_icmpgt     84
      72: aload_0
      73: getfield      #59                 // Field pending:Lzipkin2/reporter/ByteBoundedQueue;
      76: aload_1
      77: iload_2
      78: invokevirtual #126                // Method zipkin2/reporter/ByteBoundedQueue.offer:(Ljava/lang/Object;I)Z
      81: ifne          94
      84: aload_0
      85: getfield      #83                 // Field metrics:Lzipkin2/reporter/ReporterMetrics;
      88: iconst_1
      89: invokeinterface #129,  2          // InterfaceMethod zipkin2/reporter/ReporterMetrics.incrementSpansDropped:(I)V
      94: return

  public final void flush();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #85                 // Field encoder:Lzipkin2/codec/BytesEncoder;
       5: invokeinterface #139,  1          // InterfaceMethod zipkin2/codec/BytesEncoder.encoding:()Lzipkin2/codec/Encoding;
      10: aload_0
      11: getfield      #65                 // Field messageMaxBytes:I
      14: lconst_0
      15: invokestatic  #145                // Method zipkin2/reporter/BufferNextMessage.create:(Lzipkin2/codec/Encoding;IJ)Lzipkin2/reporter/BufferNextMessage;
      18: invokevirtual #148                // Method flush:(Lzipkin2/reporter/BufferNextMessage;)V
      21: return

  void flush(zipkin2.reporter.BufferNextMessage<S>);
    Code:
       0: aload_0
       1: getfield      #46                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #122                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          20
      10: new           #157                // class java/lang/IllegalStateException
      13: dup
      14: ldc           #158                // String closed
      16: invokespecial #159                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #59                 // Field pending:Lzipkin2/reporter/ByteBoundedQueue;
      24: aload_1
      25: aload_1
      26: invokevirtual #163                // Method zipkin2/reporter/BufferNextMessage.remainingNanos:()J
      29: invokevirtual #167                // Method zipkin2/reporter/ByteBoundedQueue.drainTo:(Lzipkin2/reporter/SpanWithSizeConsumer;J)I
      32: pop
      33: aload_0
      34: getfield      #83                 // Field metrics:Lzipkin2/reporter/ReporterMetrics;
      37: aload_0
      38: getfield      #59                 // Field pending:Lzipkin2/reporter/ByteBoundedQueue;
      41: getfield      #170                // Field zipkin2/reporter/ByteBoundedQueue.count:I
      44: invokeinterface #173,  2          // InterfaceMethod zipkin2/reporter/ReporterMetrics.updateQueuedSpans:(I)V
      49: aload_0
      50: getfield      #83                 // Field metrics:Lzipkin2/reporter/ReporterMetrics;
      53: aload_0
      54: getfield      #59                 // Field pending:Lzipkin2/reporter/ByteBoundedQueue;
      57: getfield      #175                // Field zipkin2/reporter/ByteBoundedQueue.sizeInBytes:I
      60: invokeinterface #178,  2          // InterfaceMethod zipkin2/reporter/ReporterMetrics.updateQueuedBytes:(I)V
      65: aload_1
      66: invokevirtual #181                // Method zipkin2/reporter/BufferNextMessage.isReady:()Z
      69: ifne          83
      72: aload_0
      73: getfield      #46                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      76: invokevirtual #122                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      79: ifne          83
      82: return
      83: aload_0
      84: getfield      #83                 // Field metrics:Lzipkin2/reporter/ReporterMetrics;
      87: invokeinterface #184,  1          // InterfaceMethod zipkin2/reporter/ReporterMetrics.incrementMessages:()V
      92: aload_0
      93: getfield      #83                 // Field metrics:Lzipkin2/reporter/ReporterMetrics;
      96: aload_1
      97: invokevirtual #187                // Method zipkin2/reporter/BufferNextMessage.sizeInBytes:()I
     100: invokeinterface #190,  2          // InterfaceMethod zipkin2/reporter/ReporterMetrics.incrementMessageBytes:(I)V
     105: new           #192                // class java/util/ArrayList
     108: dup
     109: aload_1
     110: invokevirtual #194                // Method zipkin2/reporter/BufferNextMessage.count:()I
     113: invokespecial #195                // Method java/util/ArrayList."<init>":(I)V
     116: astore_2
     117: aload_1
     118: new           #9                  // class zipkin2/reporter/AsyncReporter$BoundedAsyncReporter$1
     121: dup
     122: aload_0
     123: aload_2
     124: invokespecial #198                // Method zipkin2/reporter/AsyncReporter$BoundedAsyncReporter$1."<init>":(Lzipkin2/reporter/AsyncReporter$BoundedAsyncReporter;Ljava/util/ArrayList;)V
     127: invokevirtual #202                // Method zipkin2/reporter/BufferNextMessage.drain:(Lzipkin2/reporter/SpanWithSizeConsumer;)V
     130: aload_0
     131: getfield      #62                 // Field sender:Lzipkin2/reporter/Sender;
     134: aload_2
     135: invokevirtual #206                // Method zipkin2/reporter/Sender.sendSpans:(Ljava/util/List;)Lzipkin2/Call;
     138: invokevirtual #212                // Method zipkin2/Call.execute:()Ljava/lang/Object;
     141: pop
     142: goto          258
     145: astore_3
     146: aload_2
     147: invokevirtual #217                // Method java/util/ArrayList.size:()I
     150: istore        4
     152: aload_3
     153: invokestatic  #221                // Method zipkin2/Call.propagateIfFatal:(Ljava/lang/Throwable;)V
     156: aload_0
     157: getfield      #83                 // Field metrics:Lzipkin2/reporter/ReporterMetrics;
     160: aload_3
     161: invokeinterface #224,  2          // InterfaceMethod zipkin2/reporter/ReporterMetrics.incrementMessagesDropped:(Ljava/lang/Throwable;)V
     166: aload_0
     167: getfield      #83                 // Field metrics:Lzipkin2/reporter/ReporterMetrics;
     170: iload         4
     172: invokeinterface #129,  2          // InterfaceMethod zipkin2/reporter/ReporterMetrics.incrementSpansDropped:(I)V
     177: getstatic     #226                // Field logger:Ljava/util/logging/Logger;
     180: getstatic     #232                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     183: invokevirtual #238                // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
     186: ifeq          246
     189: getstatic     #226                // Field logger:Ljava/util/logging/Logger;
     192: getstatic     #232                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     195: ldc           #240                // String Dropped %s spans due to %s(%s)
     197: iconst_3
     198: anewarray     #242                // class java/lang/Object
     201: dup
     202: iconst_0
     203: iload         4
     205: invokestatic  #248                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     208: aastore
     209: dup
     210: iconst_1
     211: aload_3
     212: invokevirtual #252                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     215: invokevirtual #258                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     218: aastore
     219: dup
     220: iconst_2
     221: aload_3
     222: invokevirtual #261                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     225: ifnonnull     234
     228: ldc_w         #263                // String
     231: goto          238
     234: aload_3
     235: invokevirtual #261                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     238: aastore
     239: invokestatic  #271                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     242: aload_3
     243: invokevirtual #275                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
     246: aload_3
     247: instanceof    #157                // class java/lang/IllegalStateException
     250: ifeq          258
     253: aload_3
     254: checkcast     #157                // class java/lang/IllegalStateException
     257: athrow
     258: return
    Exception table:
       from    to  target type
         130   142   145   Class java/io/IOException
         130   142   145   Class java/lang/RuntimeException
         130   142   145   Class java/lang/Error

  public zipkin2.CheckResult check();
    Code:
       0: aload_0
       1: getfield      #62                 // Field sender:Lzipkin2/reporter/Sender;
       4: invokevirtual #287                // Method zipkin2/reporter/Sender.check:()Lzipkin2/CheckResult;
       7: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #46                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #293                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifne          13
      12: return
      13: aload_0
      14: getfield      #80                 // Field close:Ljava/util/concurrent/CountDownLatch;
      17: aload_0
      18: getfield      #71                 // Field closeTimeoutNanos:J
      21: getstatic     #299                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      24: invokevirtual #303                // Method java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
      27: ifne          39
      30: getstatic     #226                // Field logger:Ljava/util/logging/Logger;
      33: ldc_w         #305                // String Timed out waiting for in-flight spans to send
      36: invokevirtual #308                // Method java/util/logging/Logger.warning:(Ljava/lang/String;)V
      39: goto          58
      42: astore_1
      43: getstatic     #226                // Field logger:Ljava/util/logging/Logger;
      46: ldc_w         #310                // String Interrupted waiting for in-flight spans to send
      49: invokevirtual #308                // Method java/util/logging/Logger.warning:(Ljava/lang/String;)V
      52: invokestatic  #316                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      55: invokevirtual #319                // Method java/lang/Thread.interrupt:()V
      58: aload_0
      59: getfield      #59                 // Field pending:Lzipkin2/reporter/ByteBoundedQueue;
      62: invokevirtual #322                // Method zipkin2/reporter/ByteBoundedQueue.clear:()I
      65: istore_1
      66: iload_1
      67: ifle          112
      70: aload_0
      71: getfield      #83                 // Field metrics:Lzipkin2/reporter/ReporterMetrics;
      74: iload_1
      75: invokeinterface #129,  2          // InterfaceMethod zipkin2/reporter/ReporterMetrics.incrementSpansDropped:(I)V
      80: getstatic     #226                // Field logger:Ljava/util/logging/Logger;
      83: new           #324                // class java/lang/StringBuilder
      86: dup
      87: invokespecial #325                // Method java/lang/StringBuilder."<init>":()V
      90: ldc_w         #327                // String Dropped
      93: invokevirtual #331                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: iload_1
      97: invokevirtual #334                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     100: ldc_w         #336                // String  spans due to AsyncReporter.close()
     103: invokevirtual #331                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: invokevirtual #339                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     109: invokevirtual #308                // Method java/util/logging/Logger.warning:(Ljava/lang/String;)V
     112: return
    Exception table:
       from    to  target type
          13    39    42   Class java/lang/InterruptedException

  public java.lang.String toString();
    Code:
       0: new           #324                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #325                // Method java/lang/StringBuilder."<init>":()V
       7: ldc_w         #343                // String AsyncReporter{
      10: invokevirtual #331                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_0
      14: getfield      #62                 // Field sender:Lzipkin2/reporter/Sender;
      17: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: ldc_w         #348                // String }
      23: invokevirtual #331                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #339                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  static {};
    Code:
       0: ldc           #2                  // class zipkin2/reporter/AsyncReporter$BoundedAsyncReporter
       2: invokevirtual #352                // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #356                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #226                // Field logger:Ljava/util/logging/Logger;
      11: return
}
