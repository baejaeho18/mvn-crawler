Compiled from "AsyncReporter.java"
class zipkin2.reporter.AsyncReporter$Builder$1 extends java.lang.Thread {
  final zipkin2.reporter.AsyncReporter$BoundedAsyncReporter val$result;

  final zipkin2.reporter.BufferNextMessage val$consumer;

  final zipkin2.reporter.AsyncReporter$Builder this$0;

  zipkin2.reporter.AsyncReporter$Builder$1(zipkin2.reporter.AsyncReporter$Builder, java.lang.String, zipkin2.reporter.AsyncReporter$BoundedAsyncReporter, zipkin2.reporter.BufferNextMessage);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field this$0:Lzipkin2/reporter/AsyncReporter$Builder;
       5: aload_0
       6: aload_3
       7: putfield      #28                 // Field val$result:Lzipkin2/reporter/AsyncReporter$BoundedAsyncReporter;
      10: aload_0
      11: aload         4
      13: putfield      #30                 // Field val$consumer:Lzipkin2/reporter/BufferNextMessage;
      16: aload_0
      17: aload_2
      18: invokespecial #33                 // Method java/lang/Thread."<init>":(Ljava/lang/String;)V
      21: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #28                 // Field val$result:Lzipkin2/reporter/AsyncReporter$BoundedAsyncReporter;
       4: getfield      #47                 // Field zipkin2/reporter/AsyncReporter$BoundedAsyncReporter.closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       7: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      10: ifne          27
      13: aload_0
      14: getfield      #28                 // Field val$result:Lzipkin2/reporter/AsyncReporter$BoundedAsyncReporter;
      17: aload_0
      18: getfield      #30                 // Field val$consumer:Lzipkin2/reporter/BufferNextMessage;
      21: invokevirtual #57                 // Method zipkin2/reporter/AsyncReporter$BoundedAsyncReporter.flush:(Lzipkin2/reporter/BufferNextMessage;)V
      24: goto          0
      27: aload_0
      28: getfield      #30                 // Field val$consumer:Lzipkin2/reporter/BufferNextMessage;
      31: invokevirtual #63                 // Method zipkin2/reporter/BufferNextMessage.count:()I
      34: istore_1
      35: iload_1
      36: ifle          82
      39: aload_0
      40: getfield      #26                 // Field this$0:Lzipkin2/reporter/AsyncReporter$Builder;
      43: getfield      #67                 // Field zipkin2/reporter/AsyncReporter$Builder.metrics:Lzipkin2/reporter/ReporterMetrics;
      46: iload_1
      47: invokeinterface #73,  2           // InterfaceMethod zipkin2/reporter/ReporterMetrics.incrementSpansDropped:(I)V
      52: getstatic     #77                 // Field zipkin2/reporter/AsyncReporter$BoundedAsyncReporter.logger:Ljava/util/logging/Logger;
      55: new           #79                 // class java/lang/StringBuilder
      58: dup
      59: invokespecial #81                 // Method java/lang/StringBuilder."<init>":()V
      62: ldc           #83                 // String Dropped
      64: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: iload_1
      68: invokevirtual #90                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      71: ldc           #92                 // String  spans due to AsyncReporter.close()
      73: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokevirtual #101                // Method java/util/logging/Logger.warning:(Ljava/lang/String;)V
      82: aload_0
      83: getfield      #28                 // Field val$result:Lzipkin2/reporter/AsyncReporter$BoundedAsyncReporter;
      86: getfield      #105                // Field zipkin2/reporter/AsyncReporter$BoundedAsyncReporter.close:Ljava/util/concurrent/CountDownLatch;
      89: invokevirtual #110                // Method java/util/concurrent/CountDownLatch.countDown:()V
      92: goto          178
      95: astore_1
      96: getstatic     #77                 // Field zipkin2/reporter/AsyncReporter$BoundedAsyncReporter.logger:Ljava/util/logging/Logger;
      99: getstatic     #118                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
     102: ldc           #120                // String Unexpected error flushing spans
     104: aload_1
     105: invokevirtual #124                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
     108: aload_1
     109: athrow
     110: astore_2
     111: aload_0
     112: getfield      #30                 // Field val$consumer:Lzipkin2/reporter/BufferNextMessage;
     115: invokevirtual #63                 // Method zipkin2/reporter/BufferNextMessage.count:()I
     118: istore_3
     119: iload_3
     120: ifle          166
     123: aload_0
     124: getfield      #26                 // Field this$0:Lzipkin2/reporter/AsyncReporter$Builder;
     127: getfield      #67                 // Field zipkin2/reporter/AsyncReporter$Builder.metrics:Lzipkin2/reporter/ReporterMetrics;
     130: iload_3
     131: invokeinterface #73,  2           // InterfaceMethod zipkin2/reporter/ReporterMetrics.incrementSpansDropped:(I)V
     136: getstatic     #77                 // Field zipkin2/reporter/AsyncReporter$BoundedAsyncReporter.logger:Ljava/util/logging/Logger;
     139: new           #79                 // class java/lang/StringBuilder
     142: dup
     143: invokespecial #81                 // Method java/lang/StringBuilder."<init>":()V
     146: ldc           #83                 // String Dropped
     148: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: iload_3
     152: invokevirtual #90                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     155: ldc           #92                 // String  spans due to AsyncReporter.close()
     157: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     163: invokevirtual #101                // Method java/util/logging/Logger.warning:(Ljava/lang/String;)V
     166: aload_0
     167: getfield      #28                 // Field val$result:Lzipkin2/reporter/AsyncReporter$BoundedAsyncReporter;
     170: getfield      #105                // Field zipkin2/reporter/AsyncReporter$BoundedAsyncReporter.close:Ljava/util/concurrent/CountDownLatch;
     173: invokevirtual #110                // Method java/util/concurrent/CountDownLatch.countDown:()V
     176: aload_2
     177: athrow
     178: return
    Exception table:
       from    to  target type
           0    27    95   Class java/lang/RuntimeException
           0    27    95   Class java/lang/Error
           0    27   110   any
          95   111   110   any
}
