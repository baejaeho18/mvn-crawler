Compiled from "BufferNextMessage.java"
final class zipkin2.reporter.BufferNextMessage$BufferNextJsonMessage<S> extends zipkin2.reporter.BufferNextMessage<S> {
  boolean hasAtLeastOneSpan;

  zipkin2.reporter.BufferNextMessage$BufferNextJsonMessage(int, long);
    Code:
       0: aload_0
       1: iload_1
       2: lload_2
       3: invokespecial #13                 // Method zipkin2/reporter/BufferNextMessage."<init>":(IJ)V
       6: aload_0
       7: iconst_2
       8: putfield      #17                 // Field messageSizeInBytes:I
      11: aload_0
      12: iconst_0
      13: putfield      #19                 // Field hasAtLeastOneSpan:Z
      16: return

  int messageSizeInBytes(int);
    Code:
       0: aload_0
       1: getfield      #17                 // Field messageSizeInBytes:I
       4: iload_1
       5: iadd
       6: aload_0
       7: getfield      #19                 // Field hasAtLeastOneSpan:Z
      10: ifeq          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: iadd
      19: ireturn

  void resetMessageSizeInBytes();
    Code:
       0: aload_0
       1: getfield      #33                 // Field sizes:Ljava/util/ArrayList;
       4: invokevirtual #39                 // Method java/util/ArrayList.size:()I
       7: istore_1
       8: aload_0
       9: iload_1
      10: ifle          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: putfield      #19                 // Field hasAtLeastOneSpan:Z
      21: iload_1
      22: iconst_2
      23: if_icmpge     64
      26: aload_0
      27: iconst_2
      28: putfield      #17                 // Field messageSizeInBytes:I
      31: aload_0
      32: getfield      #19                 // Field hasAtLeastOneSpan:Z
      35: ifeq          109
      38: aload_0
      39: dup
      40: getfield      #17                 // Field messageSizeInBytes:I
      43: aload_0
      44: getfield      #33                 // Field sizes:Ljava/util/ArrayList;
      47: iconst_0
      48: invokevirtual #43                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      51: checkcast     #45                 // class java/lang/Integer
      54: invokevirtual #48                 // Method java/lang/Integer.intValue:()I
      57: iadd
      58: putfield      #17                 // Field messageSizeInBytes:I
      61: goto          109
      64: aload_0
      65: iconst_2
      66: iload_1
      67: iadd
      68: iconst_1
      69: isub
      70: putfield      #17                 // Field messageSizeInBytes:I
      73: iconst_0
      74: istore_2
      75: iload_2
      76: iload_1
      77: if_icmpge     109
      80: aload_0
      81: dup
      82: getfield      #17                 // Field messageSizeInBytes:I
      85: aload_0
      86: getfield      #33                 // Field sizes:Ljava/util/ArrayList;
      89: iload_2
      90: invokevirtual #43                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      93: checkcast     #45                 // class java/lang/Integer
      96: invokevirtual #48                 // Method java/lang/Integer.intValue:()I
      99: iadd
     100: putfield      #17                 // Field messageSizeInBytes:I
     103: iinc          2, 1
     106: goto          75
     109: return

  void addSpanToBuffer(S, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #55                 // Method zipkin2/reporter/BufferNextMessage.addSpanToBuffer:(Ljava/lang/Object;I)V
       6: aload_0
       7: iconst_1
       8: putfield      #19                 // Field hasAtLeastOneSpan:Z
      11: return
}
