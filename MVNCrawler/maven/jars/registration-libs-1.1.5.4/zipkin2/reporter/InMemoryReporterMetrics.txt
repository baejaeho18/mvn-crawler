Compiled from "InMemoryReporterMetrics.java"
public final class zipkin2.reporter.InMemoryReporterMetrics implements zipkin2.reporter.ReporterMetrics {
  private final java.util.concurrent.ConcurrentHashMap<zipkin2.reporter.InMemoryReporterMetrics$MetricKey, java.util.concurrent.atomic.AtomicLong> metrics;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.Class<? extends java.lang.Throwable>, java.util.concurrent.atomic.AtomicLong> messagesDropped;

  public zipkin2.reporter.InMemoryReporterMetrics();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #26                 // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #27                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #29                 // Field metrics:Ljava/util/concurrent/ConcurrentHashMap;
      15: aload_0
      16: new           #26                 // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #27                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #31                 // Field messagesDropped:Ljava/util/concurrent/ConcurrentHashMap;
      26: return

  public void incrementMessages();
    Code:
       0: aload_0
       1: getstatic     #38                 // Field zipkin2/reporter/InMemoryReporterMetrics$MetricKey.messages:Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;
       4: iconst_1
       5: invokespecial #42                 // Method increment:(Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;I)V
       8: return

  public long messages();
    Code:
       0: aload_0
       1: getstatic     #38                 // Field zipkin2/reporter/InMemoryReporterMetrics$MetricKey.messages:Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;
       4: invokespecial #47                 // Method get:(Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;)J
       7: lreturn

  public void incrementMessagesDropped(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #31                 // Field messagesDropped:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #53                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: iconst_1
       9: invokestatic  #56                 // Method increment:(Ljava/util/concurrent/ConcurrentHashMap;Ljava/lang/Object;I)V
      12: return

  public java.util.Map<java.lang.Class<? extends java.lang.Throwable>, java.lang.Long> messagesDroppedByCause();
    Code:
       0: new           #63                 // class java/util/LinkedHashMap
       3: dup
       4: aload_0
       5: getfield      #31                 // Field messagesDropped:Ljava/util/concurrent/ConcurrentHashMap;
       8: invokevirtual #67                 // Method java/util/concurrent/ConcurrentHashMap.size:()I
      11: invokespecial #70                 // Method java/util/LinkedHashMap."<init>":(I)V
      14: astore_1
      15: aload_0
      16: getfield      #31                 // Field messagesDropped:Ljava/util/concurrent/ConcurrentHashMap;
      19: invokevirtual #74                 // Method java/util/concurrent/ConcurrentHashMap.entrySet:()Ljava/util/Set;
      22: invokeinterface #80,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      27: astore_2
      28: aload_2
      29: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          81
      37: aload_2
      38: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #12                 // class java/util/Map$Entry
      46: astore_3
      47: aload_1
      48: aload_3
      49: invokeinterface #93,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      54: checkcast     #95                 // class java/lang/Class
      57: aload_3
      58: invokeinterface #98,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      63: checkcast     #100                // class java/util/concurrent/atomic/AtomicLong
      66: invokevirtual #103                // Method java/util/concurrent/atomic/AtomicLong.longValue:()J
      69: invokestatic  #109                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      72: invokeinterface #113,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      77: pop
      78: goto          28
      81: aload_1
      82: areturn

  public long messagesDropped();
    Code:
       0: lconst_0
       1: lstore_1
       2: aload_0
       3: getfield      #31                 // Field messagesDropped:Ljava/util/concurrent/ConcurrentHashMap;
       6: invokevirtual #123                // Method java/util/concurrent/ConcurrentHashMap.values:()Ljava/util/Collection;
       9: invokeinterface #126,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          46
      24: aload_3
      25: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #100                // class java/util/concurrent/atomic/AtomicLong
      33: astore        4
      35: lload_1
      36: aload         4
      38: invokevirtual #103                // Method java/util/concurrent/atomic/AtomicLong.longValue:()J
      41: ladd
      42: lstore_1
      43: goto          15
      46: lload_1
      47: lreturn

  public void incrementMessageBytes(int);
    Code:
       0: aload_0
       1: getstatic     #133                // Field zipkin2/reporter/InMemoryReporterMetrics$MetricKey.messageBytes:Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;
       4: iload_1
       5: invokespecial #42                 // Method increment:(Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;I)V
       8: return

  public long messageBytes();
    Code:
       0: aload_0
       1: getstatic     #133                // Field zipkin2/reporter/InMemoryReporterMetrics$MetricKey.messageBytes:Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;
       4: invokespecial #47                 // Method get:(Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;)J
       7: lreturn

  public void incrementSpans(int);
    Code:
       0: aload_0
       1: getstatic     #139                // Field zipkin2/reporter/InMemoryReporterMetrics$MetricKey.spans:Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;
       4: iload_1
       5: invokespecial #42                 // Method increment:(Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;I)V
       8: return

  public long spans();
    Code:
       0: aload_0
       1: getstatic     #139                // Field zipkin2/reporter/InMemoryReporterMetrics$MetricKey.spans:Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;
       4: invokespecial #47                 // Method get:(Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;)J
       7: lreturn

  public void incrementSpanBytes(int);
    Code:
       0: aload_0
       1: getstatic     #143                // Field zipkin2/reporter/InMemoryReporterMetrics$MetricKey.spanBytes:Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;
       4: iload_1
       5: invokespecial #42                 // Method increment:(Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;I)V
       8: return

  public long spanBytes();
    Code:
       0: aload_0
       1: getstatic     #143                // Field zipkin2/reporter/InMemoryReporterMetrics$MetricKey.spanBytes:Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;
       4: invokespecial #47                 // Method get:(Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;)J
       7: lreturn

  public void incrementSpansDropped(int);
    Code:
       0: aload_0
       1: getstatic     #147                // Field zipkin2/reporter/InMemoryReporterMetrics$MetricKey.spansDropped:Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;
       4: iload_1
       5: invokespecial #42                 // Method increment:(Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;I)V
       8: return

  public long spansDropped();
    Code:
       0: aload_0
       1: getstatic     #147                // Field zipkin2/reporter/InMemoryReporterMetrics$MetricKey.spansDropped:Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;
       4: invokespecial #47                 // Method get:(Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;)J
       7: lreturn

  public void updateQueuedSpans(int);
    Code:
       0: aload_0
       1: getstatic     #151                // Field zipkin2/reporter/InMemoryReporterMetrics$MetricKey.spansPending:Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;
       4: iload_1
       5: invokespecial #154                // Method update:(Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;I)V
       8: return

  public long queuedSpans();
    Code:
       0: aload_0
       1: getstatic     #151                // Field zipkin2/reporter/InMemoryReporterMetrics$MetricKey.spansPending:Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;
       4: invokespecial #47                 // Method get:(Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;)J
       7: lreturn

  public void updateQueuedBytes(int);
    Code:
       0: aload_0
       1: getstatic     #159                // Field zipkin2/reporter/InMemoryReporterMetrics$MetricKey.spanBytesPending:Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;
       4: iload_1
       5: invokespecial #154                // Method update:(Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;I)V
       8: return

  public long queuedBytes();
    Code:
       0: aload_0
       1: getstatic     #159                // Field zipkin2/reporter/InMemoryReporterMetrics$MetricKey.spanBytesPending:Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;
       4: invokespecial #47                 // Method get:(Lzipkin2/reporter/InMemoryReporterMetrics$MetricKey;)J
       7: lreturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #29                 // Field metrics:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #163                // Method java/util/concurrent/ConcurrentHashMap.clear:()V
       7: return

  private long get(zipkin2.reporter.InMemoryReporterMetrics$MetricKey);
    Code:
       0: aload_0
       1: getfield      #29                 // Field metrics:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #166                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #100                // class java/util/concurrent/atomic/AtomicLong
      11: astore_2
      12: aload_2
      13: ifnonnull     20
      16: lconst_0
      17: goto          24
      20: aload_2
      21: invokevirtual #168                // Method java/util/concurrent/atomic/AtomicLong.get:()J
      24: lreturn

  private void increment(zipkin2.reporter.InMemoryReporterMetrics$MetricKey, int);
    Code:
       0: aload_0
       1: getfield      #29                 // Field metrics:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: iload_2
       6: invokestatic  #56                 // Method increment:(Ljava/util/concurrent/ConcurrentHashMap;Ljava/lang/Object;I)V
       9: return

  static <K> void increment(java.util.concurrent.ConcurrentHashMap<K, java.util.concurrent.atomic.AtomicLong>, K, int);
    Code:
       0: iload_2
       1: ifne          5
       4: return
       5: aload_0
       6: aload_1
       7: invokevirtual #166                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #100                // class java/util/concurrent/atomic/AtomicLong
      13: astore_3
      14: aload_3
      15: ifnonnull     41
      18: aload_0
      19: aload_1
      20: new           #100                // class java/util/concurrent/atomic/AtomicLong
      23: dup
      24: iload_2
      25: i2l
      26: invokespecial #174                // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      29: invokevirtual #177                // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #100                // class java/util/concurrent/atomic/AtomicLong
      35: astore_3
      36: aload_3
      37: ifnonnull     41
      40: return
      41: aload_3
      42: invokevirtual #168                // Method java/util/concurrent/atomic/AtomicLong.get:()J
      45: lstore        4
      47: lload         4
      49: iload_2
      50: i2l
      51: ladd
      52: lstore        6
      54: aload_3
      55: lload         4
      57: lload         6
      59: invokevirtual #181                // Method java/util/concurrent/atomic/AtomicLong.compareAndSet:(JJ)Z
      62: ifeq          66
      65: return
      66: goto          41

  private void update(zipkin2.reporter.InMemoryReporterMetrics$MetricKey, int);
    Code:
       0: aload_0
       1: getfield      #29                 // Field metrics:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #166                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #100                // class java/util/concurrent/atomic/AtomicLong
      11: astore_3
      12: aload_3
      13: ifnonnull     42
      16: aload_0
      17: getfield      #29                 // Field metrics:Ljava/util/concurrent/ConcurrentHashMap;
      20: aload_1
      21: new           #100                // class java/util/concurrent/atomic/AtomicLong
      24: dup
      25: iload_2
      26: i2l
      27: invokespecial #174                // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      30: invokevirtual #177                // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #100                // class java/util/concurrent/atomic/AtomicLong
      36: astore_3
      37: aload_3
      38: ifnonnull     42
      41: return
      42: aload_3
      43: iload_2
      44: i2l
      45: invokevirtual #189                // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      48: return
}
