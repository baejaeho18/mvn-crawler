Compiled from "Endpoint.java"
public final class zipkin2.Endpoint$Builder {
  java.lang.String serviceName;

  java.lang.String ipv4;

  java.lang.String ipv6;

  byte[] ipv4Bytes;

  byte[] ipv6Bytes;

  int port;

  zipkin2.Endpoint$Builder(zipkin2.Endpoint);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #27                 // Field zipkin2/Endpoint.serviceName:Ljava/lang/String;
       9: putfield      #28                 // Field serviceName:Ljava/lang/String;
      12: aload_0
      13: aload_1
      14: getfield      #30                 // Field zipkin2/Endpoint.ipv4:Ljava/lang/String;
      17: putfield      #31                 // Field ipv4:Ljava/lang/String;
      20: aload_0
      21: aload_1
      22: getfield      #33                 // Field zipkin2/Endpoint.ipv6:Ljava/lang/String;
      25: putfield      #34                 // Field ipv6:Ljava/lang/String;
      28: aload_0
      29: aload_1
      30: getfield      #36                 // Field zipkin2/Endpoint.ipv4Bytes:[B
      33: putfield      #37                 // Field ipv4Bytes:[B
      36: aload_0
      37: aload_1
      38: getfield      #39                 // Field zipkin2/Endpoint.ipv6Bytes:[B
      41: putfield      #40                 // Field ipv6Bytes:[B
      44: aload_0
      45: aload_1
      46: getfield      #42                 // Field zipkin2/Endpoint.port:I
      49: putfield      #43                 // Field port:I
      52: return

  zipkin2.Endpoint$Builder merge(zipkin2.Endpoint);
    Code:
       0: aload_0
       1: getfield      #28                 // Field serviceName:Ljava/lang/String;
       4: ifnonnull     15
       7: aload_0
       8: aload_1
       9: getfield      #27                 // Field zipkin2/Endpoint.serviceName:Ljava/lang/String;
      12: putfield      #28                 // Field serviceName:Ljava/lang/String;
      15: aload_0
      16: getfield      #31                 // Field ipv4:Ljava/lang/String;
      19: ifnonnull     30
      22: aload_0
      23: aload_1
      24: getfield      #30                 // Field zipkin2/Endpoint.ipv4:Ljava/lang/String;
      27: putfield      #31                 // Field ipv4:Ljava/lang/String;
      30: aload_0
      31: getfield      #34                 // Field ipv6:Ljava/lang/String;
      34: ifnonnull     45
      37: aload_0
      38: aload_1
      39: getfield      #33                 // Field zipkin2/Endpoint.ipv6:Ljava/lang/String;
      42: putfield      #34                 // Field ipv6:Ljava/lang/String;
      45: aload_0
      46: getfield      #37                 // Field ipv4Bytes:[B
      49: ifnonnull     60
      52: aload_0
      53: aload_1
      54: getfield      #36                 // Field zipkin2/Endpoint.ipv4Bytes:[B
      57: putfield      #37                 // Field ipv4Bytes:[B
      60: aload_0
      61: getfield      #40                 // Field ipv6Bytes:[B
      64: ifnonnull     75
      67: aload_0
      68: aload_1
      69: getfield      #39                 // Field zipkin2/Endpoint.ipv6Bytes:[B
      72: putfield      #40                 // Field ipv6Bytes:[B
      75: aload_0
      76: getfield      #43                 // Field port:I
      79: ifne          90
      82: aload_0
      83: aload_1
      84: getfield      #42                 // Field zipkin2/Endpoint.port:I
      87: putfield      #43                 // Field port:I
      90: aload_0
      91: areturn

  public zipkin2.Endpoint$Builder serviceName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        12
       5: aload_1
       6: invokevirtual #57                 // Method java/lang/String.isEmpty:()Z
       9: ifeq          16
      12: aconst_null
      13: goto          23
      16: aload_1
      17: getstatic     #63                 // Field java/util/Locale.ROOT:Ljava/util/Locale;
      20: invokevirtual #67                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      23: putfield      #28                 // Field serviceName:Ljava/lang/String;
      26: aload_0
      27: areturn

  public zipkin2.Endpoint$Builder ip(java.net.InetAddress);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #73                 // Method parseIp:(Ljava/net/InetAddress;)Z
       5: pop
       6: aload_0
       7: areturn

  public final boolean parseIp(java.net.InetAddress);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: instanceof    #77                 // class java/net/Inet4Address
      10: ifeq          32
      13: aload_0
      14: aload_1
      15: invokevirtual #83                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
      18: putfield      #31                 // Field ipv4:Ljava/lang/String;
      21: aload_0
      22: aload_1
      23: invokevirtual #87                 // Method java/net/InetAddress.getAddress:()[B
      26: putfield      #37                 // Field ipv4Bytes:[B
      29: goto          70
      32: aload_1
      33: instanceof    #89                 // class java/net/Inet6Address
      36: ifeq          68
      39: aload_1
      40: invokevirtual #87                 // Method java/net/InetAddress.getAddress:()[B
      43: astore_2
      44: aload_0
      45: aload_2
      46: invokevirtual #93                 // Method parseEmbeddedIPv4:([B)Z
      49: ifne          65
      52: aload_0
      53: aload_2
      54: invokestatic  #97                 // Method zipkin2/Endpoint.writeIpV6:([B)Ljava/lang/String;
      57: putfield      #34                 // Field ipv6:Ljava/lang/String;
      60: aload_0
      61: aload_2
      62: putfield      #40                 // Field ipv6Bytes:[B
      65: goto          70
      68: iconst_0
      69: ireturn
      70: iconst_1
      71: ireturn

  public final boolean parseIp(byte[]);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: arraylength
       8: iconst_4
       9: if_icmpne     92
      12: aload_0
      13: aload_1
      14: putfield      #37                 // Field ipv4Bytes:[B
      17: aload_0
      18: new           #100                // class java/lang/StringBuilder
      21: dup
      22: invokespecial #101                // Method java/lang/StringBuilder."<init>":()V
      25: aload_1
      26: iconst_0
      27: baload
      28: sipush        255
      31: iand
      32: invokestatic  #105                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      35: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: bipush        46
      40: invokevirtual #112                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      43: aload_1
      44: iconst_1
      45: baload
      46: sipush        255
      49: iand
      50: invokevirtual #115                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: bipush        46
      55: invokevirtual #112                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      58: aload_1
      59: iconst_2
      60: baload
      61: sipush        255
      64: iand
      65: invokevirtual #115                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      68: bipush        46
      70: invokevirtual #112                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      73: aload_1
      74: iconst_3
      75: baload
      76: sipush        255
      79: iand
      80: invokevirtual #115                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      83: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: putfield      #31                 // Field ipv4:Ljava/lang/String;
      89: goto          125
      92: aload_1
      93: arraylength
      94: bipush        16
      96: if_icmpne     123
      99: aload_0
     100: aload_1
     101: invokevirtual #93                 // Method parseEmbeddedIPv4:([B)Z
     104: ifne          125
     107: aload_0
     108: aload_1
     109: invokestatic  #97                 // Method zipkin2/Endpoint.writeIpV6:([B)Ljava/lang/String;
     112: putfield      #34                 // Field ipv6:Ljava/lang/String;
     115: aload_0
     116: aload_1
     117: putfield      #40                 // Field ipv6Bytes:[B
     120: goto          125
     123: iconst_0
     124: ireturn
     125: iconst_1
     126: ireturn

  public zipkin2.Endpoint$Builder ip(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #122                // Method parseIp:(Ljava/lang/String;)Z
       5: pop
       6: aload_0
       7: areturn

  public final boolean parseIp(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #57                 // Method java/lang/String.isEmpty:()Z
       8: ifeq          13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: invokestatic  #127                // Method zipkin2/Endpoint.detectFamily:(Ljava/lang/String;)Lzipkin2/Endpoint$IpFamily;
      17: astore_2
      18: aload_2
      19: getstatic     #131                // Field zipkin2/Endpoint$IpFamily.IPv4:Lzipkin2/Endpoint$IpFamily;
      22: if_acmpne     44
      25: aload_0
      26: aload_1
      27: putfield      #31                 // Field ipv4:Ljava/lang/String;
      30: aload_0
      31: aload_0
      32: getfield      #31                 // Field ipv4:Ljava/lang/String;
      35: invokestatic  #135                // Method zipkin2/Endpoint.getIpv4Bytes:(Ljava/lang/String;)[B
      38: putfield      #37                 // Field ipv4Bytes:[B
      41: goto          117
      44: aload_2
      45: getstatic     #138                // Field zipkin2/Endpoint$IpFamily.IPv4Embedded:Lzipkin2/Endpoint$IpFamily;
      48: if_acmpne     81
      51: aload_0
      52: aload_1
      53: aload_1
      54: bipush        58
      56: invokevirtual #142                // Method java/lang/String.lastIndexOf:(I)I
      59: iconst_1
      60: iadd
      61: invokevirtual #145                // Method java/lang/String.substring:(I)Ljava/lang/String;
      64: putfield      #31                 // Field ipv4:Ljava/lang/String;
      67: aload_0
      68: aload_0
      69: getfield      #31                 // Field ipv4:Ljava/lang/String;
      72: invokestatic  #135                // Method zipkin2/Endpoint.getIpv4Bytes:(Ljava/lang/String;)[B
      75: putfield      #37                 // Field ipv4Bytes:[B
      78: goto          117
      81: aload_2
      82: getstatic     #148                // Field zipkin2/Endpoint$IpFamily.IPv6:Lzipkin2/Endpoint$IpFamily;
      85: if_acmpne     115
      88: aload_1
      89: invokestatic  #151                // Method zipkin2/Endpoint.access$000:(Ljava/lang/String;)[B
      92: astore_3
      93: aload_3
      94: ifnonnull     99
      97: iconst_0
      98: ireturn
      99: aload_0
     100: aload_3
     101: invokestatic  #97                 // Method zipkin2/Endpoint.writeIpV6:([B)Ljava/lang/String;
     104: putfield      #34                 // Field ipv6:Ljava/lang/String;
     107: aload_0
     108: aload_3
     109: putfield      #40                 // Field ipv6Bytes:[B
     112: goto          117
     115: iconst_0
     116: ireturn
     117: iconst_1
     118: ireturn

  public zipkin2.Endpoint$Builder port(java.lang.Integer);
    Code:
       0: aload_1
       1: ifnull        52
       4: aload_1
       5: invokevirtual #160                // Method java/lang/Integer.intValue:()I
       8: ldc           #161                // int 65535
      10: if_icmple     40
      13: new           #163                // class java/lang/IllegalArgumentException
      16: dup
      17: new           #100                // class java/lang/StringBuilder
      20: dup
      21: invokespecial #101                // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #165                // String invalid port
      26: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokevirtual #168                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #171                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_1
      41: invokevirtual #160                // Method java/lang/Integer.intValue:()I
      44: ifgt          52
      47: iconst_0
      48: invokestatic  #174                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: astore_1
      52: aload_0
      53: aload_1
      54: ifnull        64
      57: aload_1
      58: invokevirtual #160                // Method java/lang/Integer.intValue:()I
      61: goto          65
      64: iconst_0
      65: putfield      #43                 // Field port:I
      68: aload_0
      69: areturn

  public zipkin2.Endpoint$Builder port(int);
    Code:
       0: iload_1
       1: ldc           #161                // int 65535
       3: if_icmple     33
       6: new           #163                // class java/lang/IllegalArgumentException
       9: dup
      10: new           #100                // class java/lang/StringBuilder
      13: dup
      14: invokespecial #101                // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #165                // String invalid port
      19: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: iload_1
      23: invokevirtual #115                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #171                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: iload_1
      34: ifge          39
      37: iconst_0
      38: istore_1
      39: aload_0
      40: iload_1
      41: putfield      #43                 // Field port:I
      44: aload_0
      45: areturn

  public zipkin2.Endpoint build();
    Code:
       0: new           #7                  // class zipkin2/Endpoint
       3: dup
       4: aload_0
       5: invokespecial #181                // Method zipkin2/Endpoint."<init>":(Lzipkin2/Endpoint$Builder;)V
       8: areturn

  zipkin2.Endpoint$Builder();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: return

  boolean parseEmbeddedIPv4(byte[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: bipush        10
       5: if_icmpge     22
       8: aload_1
       9: iload_2
      10: baload
      11: ifeq          16
      14: iconst_0
      15: ireturn
      16: iinc          2, 1
      19: goto          2
      22: aload_1
      23: bipush        10
      25: baload
      26: sipush        255
      29: iand
      30: bipush        8
      32: ishl
      33: aload_1
      34: bipush        11
      36: baload
      37: sipush        255
      40: iand
      41: ior
      42: istore_2
      43: iload_2
      44: ifeq          54
      47: iload_2
      48: iconst_m1
      49: if_icmpeq     54
      52: iconst_0
      53: ireturn
      54: aload_1
      55: bipush        12
      57: baload
      58: istore_3
      59: aload_1
      60: bipush        13
      62: baload
      63: istore        4
      65: aload_1
      66: bipush        14
      68: baload
      69: istore        5
      71: aload_1
      72: bipush        15
      74: baload
      75: istore        6
      77: iload_2
      78: ifne          103
      81: iload_3
      82: ifne          103
      85: iload         4
      87: ifne          103
      90: iload         5
      92: ifne          103
      95: iload         6
      97: iconst_1
      98: if_icmpne     103
     101: iconst_0
     102: ireturn
     103: aload_0
     104: new           #100                // class java/lang/StringBuilder
     107: dup
     108: invokespecial #101                // Method java/lang/StringBuilder."<init>":()V
     111: iload_3
     112: sipush        255
     115: iand
     116: invokestatic  #105                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
     119: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: bipush        46
     124: invokevirtual #112                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     127: iload         4
     129: sipush        255
     132: iand
     133: invokevirtual #115                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     136: bipush        46
     138: invokevirtual #112                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     141: iload         5
     143: sipush        255
     146: iand
     147: invokevirtual #115                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     150: bipush        46
     152: invokevirtual #112                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     155: iload         6
     157: sipush        255
     160: iand
     161: invokevirtual #115                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     164: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: putfield      #31                 // Field ipv4:Ljava/lang/String;
     170: aload_0
     171: iconst_4
     172: newarray       byte
     174: dup
     175: iconst_0
     176: iload_3
     177: bastore
     178: dup
     179: iconst_1
     180: iload         4
     182: bastore
     183: dup
     184: iconst_2
     185: iload         5
     187: bastore
     188: dup
     189: iconst_3
     190: iload         6
     192: bastore
     193: putfield      #37                 // Field ipv4Bytes:[B
     196: iconst_1
     197: ireturn
}
