Compiled from "SpanBytesDecoderDetector.java"
public final class zipkin2.SpanBytesDecoderDetector {
  static final byte[] ENDPOINT_FIELD_SUFFIX;

  static final byte[] TAGS_FIELD;

  public static zipkin2.codec.BytesDecoder<zipkin2.Span> decoderForMessage(byte[]);
    Code:
       0: aload_0
       1: invokestatic  #14                 // Method detectDecoder:([B)Lzipkin2/codec/BytesDecoder;
       4: astore_1
       5: aload_0
       6: iconst_0
       7: baload
       8: bipush        12
      10: if_icmpeq     21
      13: aload_0
      14: iconst_0
      15: baload
      16: bipush        91
      18: if_icmpne     31
      21: new           #18                 // class java/lang/IllegalArgumentException
      24: dup
      25: ldc           #20                 // String Expected json or thrift object, not list encoding
      27: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_1
      32: getstatic     #30                 // Field zipkin2/codec/SpanBytesDecoder.JSON_V2:Lzipkin2/codec/SpanBytesDecoder;
      35: if_acmpeq     45
      38: aload_1
      39: getstatic     #33                 // Field zipkin2/codec/SpanBytesDecoder.PROTO3:Lzipkin2/codec/SpanBytesDecoder;
      42: if_acmpne     55
      45: new           #35                 // class java/lang/UnsupportedOperationException
      48: dup
      49: ldc           #37                 // String v2 formats should only be used with list messages
      51: invokespecial #38                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_1
      56: areturn

  public static zipkin2.codec.BytesDecoder<zipkin2.Span> decoderForListMessage(byte[]);
    Code:
       0: aload_0
       1: invokestatic  #14                 // Method detectDecoder:([B)Lzipkin2/codec/BytesDecoder;
       4: astore_1
       5: aload_0
       6: iconst_0
       7: baload
       8: bipush        12
      10: if_icmpeq     38
      13: aload_0
      14: invokestatic  #47                 // Method protobuf3:([B)Z
      17: ifne          38
      20: aload_0
      21: iconst_0
      22: baload
      23: bipush        91
      25: if_icmpeq     38
      28: new           #18                 // class java/lang/IllegalArgumentException
      31: dup
      32: ldc           #49                 // String Expected json, proto3 or thrift list encoding
      34: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_1
      39: areturn

  static zipkin2.codec.BytesDecoder<zipkin2.Span> detectDecoder(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: baload
       3: bipush        16
       5: if_icmpgt     23
       8: aload_0
       9: invokestatic  #47                 // Method protobuf3:([B)Z
      12: ifeq          19
      15: getstatic     #33                 // Field zipkin2/codec/SpanBytesDecoder.PROTO3:Lzipkin2/codec/SpanBytesDecoder;
      18: areturn
      19: getstatic     #53                 // Field zipkin2/codec/SpanBytesDecoder.THRIFT:Lzipkin2/codec/SpanBytesDecoder;
      22: areturn
      23: aload_0
      24: iconst_0
      25: baload
      26: bipush        91
      28: if_icmpeq     49
      31: aload_0
      32: iconst_0
      33: baload
      34: bipush        123
      36: if_icmpeq     49
      39: new           #18                 // class java/lang/IllegalArgumentException
      42: dup
      43: ldc           #55                 // String Could not detect the span format
      45: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: getstatic     #57                 // Field ENDPOINT_FIELD_SUFFIX:[B
      53: invokestatic  #61                 // Method contains:([B[B)Z
      56: ifeq          63
      59: getstatic     #30                 // Field zipkin2/codec/SpanBytesDecoder.JSON_V2:Lzipkin2/codec/SpanBytesDecoder;
      62: areturn
      63: aload_0
      64: getstatic     #63                 // Field TAGS_FIELD:[B
      67: invokestatic  #61                 // Method contains:([B[B)Z
      70: ifeq          77
      73: getstatic     #30                 // Field zipkin2/codec/SpanBytesDecoder.JSON_V2:Lzipkin2/codec/SpanBytesDecoder;
      76: areturn
      77: getstatic     #66                 // Field zipkin2/codec/SpanBytesDecoder.JSON_V1:Lzipkin2/codec/SpanBytesDecoder;
      80: areturn

  static boolean contains(byte[], byte[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: arraylength
       5: aload_1
       6: arraylength
       7: isub
       8: iconst_1
       9: iadd
      10: if_icmpge     49
      13: iconst_0
      14: istore_3
      15: iload_3
      16: aload_1
      17: arraylength
      18: if_icmpge     41
      21: aload_0
      22: iload_2
      23: iload_3
      24: iadd
      25: baload
      26: aload_1
      27: iload_3
      28: baload
      29: if_icmpeq     35
      32: goto          43
      35: iinc          3, 1
      38: goto          15
      41: iconst_1
      42: ireturn
      43: iinc          2, 1
      46: goto          2
      49: iconst_0
      50: ireturn

  static boolean protobuf3(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: baload
       3: bipush        10
       5: if_icmpne     18
       8: aload_0
       9: iconst_1
      10: baload
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  zipkin2.SpanBytesDecoderDetector();
    Code:
       0: aload_0
       1: invokespecial #74                 // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: bipush        9
       2: newarray       byte
       4: dup
       5: iconst_0
       6: bipush        69
       8: bastore
       9: dup
      10: iconst_1
      11: bipush        110
      13: bastore
      14: dup
      15: iconst_2
      16: bipush        100
      18: bastore
      19: dup
      20: iconst_3
      21: bipush        112
      23: bastore
      24: dup
      25: iconst_4
      26: bipush        111
      28: bastore
      29: dup
      30: iconst_5
      31: bipush        105
      33: bastore
      34: dup
      35: bipush        6
      37: bipush        110
      39: bastore
      40: dup
      41: bipush        7
      43: bipush        116
      45: bastore
      46: dup
      47: bipush        8
      49: bipush        34
      51: bastore
      52: putstatic     #57                 // Field ENDPOINT_FIELD_SUFFIX:[B
      55: bipush        6
      57: newarray       byte
      59: dup
      60: iconst_0
      61: bipush        34
      63: bastore
      64: dup
      65: iconst_1
      66: bipush        116
      68: bastore
      69: dup
      70: iconst_2
      71: bipush        97
      73: bastore
      74: dup
      75: iconst_3
      76: bipush        103
      78: bastore
      79: dup
      80: iconst_4
      81: bipush        115
      83: bastore
      84: dup
      85: iconst_5
      86: bipush        34
      88: bastore
      89: putstatic     #63                 // Field TAGS_FIELD:[B
      92: return
}
