Compiled from "Call.java"
final class zipkin2.Call$FlatMapping<R, V> extends zipkin2.Call$Base<R> {
  final zipkin2.Call$FlatMapper<V, R> flatMapper;

  final zipkin2.Call<V> delegate;

  volatile zipkin2.Call<R> mapped;

  zipkin2.Call$FlatMapping(zipkin2.Call$FlatMapper<V, R>, zipkin2.Call<V>);
    Code:
       0: aload_0
       1: invokespecial #29                 // Method zipkin2/Call$Base."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #31                 // Field flatMapper:Lzipkin2/Call$FlatMapper;
       9: aload_0
      10: aload_2
      11: putfield      #33                 // Field delegate:Lzipkin2/Call;
      14: return

  protected R doExecute() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #31                 // Field flatMapper:Lzipkin2/Call$FlatMapper;
       5: aload_0
       6: getfield      #33                 // Field delegate:Lzipkin2/Call;
       9: invokevirtual #44                 // Method zipkin2/Call.execute:()Ljava/lang/Object;
      12: invokeinterface #48,  2           // InterfaceMethod zipkin2/Call$FlatMapper.map:(Ljava/lang/Object;)Lzipkin2/Call;
      17: dup_x1
      18: putfield      #50                 // Field mapped:Lzipkin2/Call;
      21: invokevirtual #44                 // Method zipkin2/Call.execute:()Ljava/lang/Object;
      24: areturn

  protected void doEnqueue(zipkin2.Callback<R>);
    Code:
       0: aload_0
       1: getfield      #33                 // Field delegate:Lzipkin2/Call;
       4: new           #11                 // class zipkin2/Call$FlatMapping$1
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #56                 // Method zipkin2/Call$FlatMapping$1."<init>":(Lzipkin2/Call$FlatMapping;Lzipkin2/Callback;)V
      13: invokevirtual #59                 // Method zipkin2/Call.enqueue:(Lzipkin2/Callback;)V
      16: return

  protected void doCancel();
    Code:
       0: aload_0
       1: getfield      #33                 // Field delegate:Lzipkin2/Call;
       4: invokevirtual #66                 // Method zipkin2/Call.cancel:()V
       7: aload_0
       8: getfield      #50                 // Field mapped:Lzipkin2/Call;
      11: ifnull        21
      14: aload_0
      15: getfield      #50                 // Field mapped:Lzipkin2/Call;
      18: invokevirtual #66                 // Method zipkin2/Call.cancel:()V
      21: return

  public java.lang.String toString();
    Code:
       0: new           #70                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #73                 // String FlatMapping{call=
       9: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #33                 // Field delegate:Lzipkin2/Call;
      16: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #82                 // String , flatMapper=
      21: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #31                 // Field flatMapper:Lzipkin2/Call$FlatMapper;
      28: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #84                 // String }
      33: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public zipkin2.Call<R> clone();
    Code:
       0: new           #2                  // class zipkin2/Call$FlatMapping
       3: dup
       4: aload_0
       5: getfield      #31                 // Field flatMapper:Lzipkin2/Call$FlatMapper;
       8: aload_0
       9: getfield      #33                 // Field delegate:Lzipkin2/Call;
      12: invokevirtual #91                 // Method zipkin2/Call.clone:()Lzipkin2/Call;
      15: invokespecial #93                 // Method "<init>":(Lzipkin2/Call$FlatMapper;Lzipkin2/Call;)V
      18: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method clone:()Lzipkin2/Call;
       4: areturn
}
