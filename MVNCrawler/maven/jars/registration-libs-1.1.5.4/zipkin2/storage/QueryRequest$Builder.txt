Compiled from "QueryRequest.java"
public final class zipkin2.storage.QueryRequest$Builder {
  java.lang.String serviceName;

  java.lang.String spanName;

  java.util.Map<java.lang.String, java.lang.String> annotationQuery;

  java.lang.Long minDuration;

  java.lang.Long maxDuration;

  long endTs;

  long lookback;

  int limit;

  zipkin2.storage.QueryRequest$Builder(zipkin2.storage.QueryRequest);
    Code:
       0: aload_0
       1: invokespecial #27                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #33                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       8: putfield      #35                 // Field annotationQuery:Ljava/util/Map;
      11: aload_0
      12: aload_1
      13: getfield      #37                 // Field zipkin2/storage/QueryRequest.serviceName:Ljava/lang/String;
      16: putfield      #38                 // Field serviceName:Ljava/lang/String;
      19: aload_0
      20: aload_1
      21: getfield      #40                 // Field zipkin2/storage/QueryRequest.spanName:Ljava/lang/String;
      24: putfield      #41                 // Field spanName:Ljava/lang/String;
      27: aload_0
      28: aload_1
      29: getfield      #42                 // Field zipkin2/storage/QueryRequest.annotationQuery:Ljava/util/Map;
      32: putfield      #35                 // Field annotationQuery:Ljava/util/Map;
      35: aload_0
      36: aload_1
      37: getfield      #44                 // Field zipkin2/storage/QueryRequest.minDuration:Ljava/lang/Long;
      40: putfield      #45                 // Field minDuration:Ljava/lang/Long;
      43: aload_0
      44: aload_1
      45: getfield      #47                 // Field zipkin2/storage/QueryRequest.maxDuration:Ljava/lang/Long;
      48: putfield      #48                 // Field maxDuration:Ljava/lang/Long;
      51: aload_0
      52: aload_1
      53: getfield      #50                 // Field zipkin2/storage/QueryRequest.endTs:J
      56: putfield      #51                 // Field endTs:J
      59: aload_0
      60: aload_1
      61: getfield      #53                 // Field zipkin2/storage/QueryRequest.lookback:J
      64: putfield      #54                 // Field lookback:J
      67: aload_0
      68: aload_1
      69: getfield      #56                 // Field zipkin2/storage/QueryRequest.limit:I
      72: putfield      #57                 // Field limit:I
      75: return

  public zipkin2.storage.QueryRequest$Builder serviceName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field serviceName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public zipkin2.storage.QueryRequest$Builder spanName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field spanName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public zipkin2.storage.QueryRequest$Builder parseAnnotationQuery(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #70                 // Method java/lang/String.isEmpty:()Z
       8: ifeq          13
      11: aload_0
      12: areturn
      13: new           #72                 // class java/util/LinkedHashMap
      16: dup
      17: invokespecial #73                 // Method java/util/LinkedHashMap."<init>":()V
      20: astore_2
      21: aload_1
      22: ldc           #75                 // String  and
      24: bipush        100
      26: invokevirtual #79                 // Method java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;
      29: astore_3
      30: aload_3
      31: arraylength
      32: istore        4
      34: iconst_0
      35: istore        5
      37: iload         5
      39: iload         4
      41: if_icmpge     131
      44: aload_3
      45: iload         5
      47: aaload
      48: astore        6
      50: aload         6
      52: bipush        61
      54: invokevirtual #87                 // Method java/lang/String.indexOf:(I)I
      57: istore        7
      59: iload         7
      61: iconst_m1
      62: if_icmpne     79
      65: aload_2
      66: aload         6
      68: ldc           #89                 // String
      70: invokeinterface #93,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: pop
      76: goto          125
      79: aload         6
      81: ldc           #95                 // String =
      83: iconst_2
      84: invokevirtual #79                 // Method java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;
      87: astore        8
      89: aload_2
      90: aload         6
      92: iconst_0
      93: iload         7
      95: invokevirtual #99                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      98: aload         8
     100: arraylength
     101: iconst_2
     102: if_icmpge     110
     105: ldc           #89                 // String
     107: goto          119
     110: aload         6
     112: iload         7
     114: iconst_1
     115: iadd
     116: invokevirtual #102                // Method java/lang/String.substring:(I)Ljava/lang/String;
     119: invokeinterface #93,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     124: pop
     125: iinc          5, 1
     128: goto          37
     131: aload_0
     132: aload_2
     133: invokevirtual #105                // Method annotationQuery:(Ljava/util/Map;)Lzipkin2/storage/QueryRequest$Builder;
     136: areturn

  public zipkin2.storage.QueryRequest$Builder annotationQuery(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #112                // class java/lang/NullPointerException
       7: dup
       8: ldc           #114                // String annotationQuery == null
      10: invokespecial #117                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #35                 // Field annotationQuery:Ljava/util/Map;
      19: aload_0
      20: areturn

  public zipkin2.storage.QueryRequest$Builder minDuration(java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #45                 // Field minDuration:Ljava/lang/Long;
       5: aload_0
       6: areturn

  public zipkin2.storage.QueryRequest$Builder maxDuration(java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #48                 // Field maxDuration:Ljava/lang/Long;
       5: aload_0
       6: areturn

  public zipkin2.storage.QueryRequest$Builder endTs(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #51                 // Field endTs:J
       5: aload_0
       6: areturn

  public zipkin2.storage.QueryRequest$Builder lookback(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #54                 // Field lookback:J
       5: aload_0
       6: areturn

  public zipkin2.storage.QueryRequest$Builder limit(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #57                 // Field limit:I
       5: aload_0
       6: areturn

  public final zipkin2.storage.QueryRequest build();
    Code:
       0: aload_0
       1: getfield      #38                 // Field serviceName:Ljava/lang/String;
       4: ifnull        21
       7: aload_0
       8: aload_0
       9: getfield      #38                 // Field serviceName:Ljava/lang/String;
      12: getstatic     #128                // Field java/util/Locale.ROOT:Ljava/util/Locale;
      15: invokevirtual #132                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      18: putfield      #38                 // Field serviceName:Ljava/lang/String;
      21: aload_0
      22: getfield      #41                 // Field spanName:Ljava/lang/String;
      25: ifnull        42
      28: aload_0
      29: aload_0
      30: getfield      #41                 // Field spanName:Ljava/lang/String;
      33: getstatic     #128                // Field java/util/Locale.ROOT:Ljava/util/Locale;
      36: invokevirtual #132                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      39: putfield      #41                 // Field spanName:Ljava/lang/String;
      42: aload_0
      43: getfield      #35                 // Field annotationQuery:Ljava/util/Map;
      46: ldc           #89                 // String
      48: invokeinterface #136,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: ldc           #89                 // String
      56: aload_0
      57: getfield      #38                 // Field serviceName:Ljava/lang/String;
      60: invokevirtual #140                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      63: ifeq          71
      66: aload_0
      67: aconst_null
      68: putfield      #38                 // Field serviceName:Ljava/lang/String;
      71: ldc           #89                 // String
      73: aload_0
      74: getfield      #41                 // Field spanName:Ljava/lang/String;
      77: invokevirtual #140                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      80: ifne          95
      83: ldc           #142                // String all
      85: aload_0
      86: getfield      #41                 // Field spanName:Ljava/lang/String;
      89: invokevirtual #140                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      92: ifeq          100
      95: aload_0
      96: aconst_null
      97: putfield      #41                 // Field spanName:Ljava/lang/String;
     100: aload_0
     101: getfield      #51                 // Field endTs:J
     104: lconst_0
     105: lcmp
     106: ifgt          119
     109: new           #144                // class java/lang/IllegalArgumentException
     112: dup
     113: ldc           #146                // String endTs <= 0
     115: invokespecial #147                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     118: athrow
     119: aload_0
     120: getfield      #57                 // Field limit:I
     123: ifgt          136
     126: new           #144                // class java/lang/IllegalArgumentException
     129: dup
     130: ldc           #149                // String limit <= 0
     132: invokespecial #147                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     135: athrow
     136: aload_0
     137: getfield      #54                 // Field lookback:J
     140: lconst_0
     141: lcmp
     142: ifgt          155
     145: new           #144                // class java/lang/IllegalArgumentException
     148: dup
     149: ldc           #151                // String lookback <= 0
     151: invokespecial #147                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     154: athrow
     155: aload_0
     156: getfield      #45                 // Field minDuration:Ljava/lang/Long;
     159: ifnull        219
     162: aload_0
     163: getfield      #45                 // Field minDuration:Ljava/lang/Long;
     166: invokevirtual #157                // Method java/lang/Long.longValue:()J
     169: lconst_0
     170: lcmp
     171: ifgt          184
     174: new           #144                // class java/lang/IllegalArgumentException
     177: dup
     178: ldc           #159                // String minDuration <= 0
     180: invokespecial #147                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     183: athrow
     184: aload_0
     185: getfield      #48                 // Field maxDuration:Ljava/lang/Long;
     188: ifnull        236
     191: aload_0
     192: getfield      #48                 // Field maxDuration:Ljava/lang/Long;
     195: invokevirtual #157                // Method java/lang/Long.longValue:()J
     198: aload_0
     199: getfield      #45                 // Field minDuration:Ljava/lang/Long;
     202: invokevirtual #157                // Method java/lang/Long.longValue:()J
     205: lcmp
     206: ifge          236
     209: new           #144                // class java/lang/IllegalArgumentException
     212: dup
     213: ldc           #161                // String maxDuration < minDuration
     215: invokespecial #147                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     218: athrow
     219: aload_0
     220: getfield      #48                 // Field maxDuration:Ljava/lang/Long;
     223: ifnull        236
     226: new           #144                // class java/lang/IllegalArgumentException
     229: dup
     230: ldc           #163                // String maxDuration is only valid with minDuration
     232: invokespecial #147                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     235: athrow
     236: new           #7                  // class zipkin2/storage/QueryRequest
     239: dup
     240: aload_0
     241: getfield      #38                 // Field serviceName:Ljava/lang/String;
     244: aload_0
     245: getfield      #41                 // Field spanName:Ljava/lang/String;
     248: aload_0
     249: getfield      #35                 // Field annotationQuery:Ljava/util/Map;
     252: aload_0
     253: getfield      #45                 // Field minDuration:Ljava/lang/Long;
     256: aload_0
     257: getfield      #48                 // Field maxDuration:Ljava/lang/Long;
     260: aload_0
     261: getfield      #51                 // Field endTs:J
     264: aload_0
     265: getfield      #54                 // Field lookback:J
     268: aload_0
     269: getfield      #57                 // Field limit:I
     272: invokespecial #166                // Method zipkin2/storage/QueryRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/lang/Long;Ljava/lang/Long;JJI)V
     275: areturn

  zipkin2.storage.QueryRequest$Builder();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #33                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       8: putfield      #35                 // Field annotationQuery:Ljava/util/Map;
      11: return
}
