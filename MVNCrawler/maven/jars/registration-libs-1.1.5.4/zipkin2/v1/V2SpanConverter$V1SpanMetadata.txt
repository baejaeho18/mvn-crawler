Compiled from "V2SpanConverter.java"
final class zipkin2.v1.V2SpanConverter$V1SpanMetadata {
  long startTs;

  long endTs;

  long msTs;

  long wsTs;

  long wrTs;

  long mrTs;

  java.lang.String begin;

  java.lang.String end;

  java.lang.String addr;

  zipkin2.v1.V2SpanConverter$V1SpanMetadata();
    Code:
       0: aload_0
       1: invokespecial #30                 // Method java/lang/Object."<init>":()V
       4: return

  void parse(zipkin2.Span);
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: aload_0
       4: aload_0
       5: aload_0
       6: lconst_0
       7: dup2_x1
       8: putfield      #36                 // Field mrTs:J
      11: dup2_x1
      12: putfield      #38                 // Field wrTs:J
      15: dup2_x1
      16: putfield      #40                 // Field wsTs:J
      19: dup2_x1
      20: putfield      #42                 // Field msTs:J
      23: dup2_x1
      24: putfield      #44                 // Field endTs:J
      27: putfield      #46                 // Field startTs:J
      30: aload_0
      31: aload_0
      32: aload_0
      33: aconst_null
      34: dup_x1
      35: putfield      #48                 // Field addr:Ljava/lang/String;
      38: dup_x1
      39: putfield      #50                 // Field end:Ljava/lang/String;
      42: putfield      #52                 // Field begin:Ljava/lang/String;
      45: aload_0
      46: aload_1
      47: invokevirtual #56                 // Method zipkin2/Span.timestampAsLong:()J
      50: putfield      #46                 // Field startTs:J
      53: aload_0
      54: aload_0
      55: getfield      #46                 // Field startTs:J
      58: lconst_0
      59: lcmp
      60: ifeq          84
      63: aload_1
      64: invokevirtual #59                 // Method zipkin2/Span.durationAsLong:()J
      67: lconst_0
      68: lcmp
      69: ifeq          84
      72: aload_0
      73: getfield      #46                 // Field startTs:J
      76: aload_1
      77: invokevirtual #59                 // Method zipkin2/Span.durationAsLong:()J
      80: ladd
      81: goto          85
      84: lconst_0
      85: putfield      #44                 // Field endTs:J
      88: aload_1
      89: invokevirtual #63                 // Method zipkin2/Span.kind:()Lzipkin2/Span$Kind;
      92: astore_2
      93: iconst_0
      94: istore_3
      95: aload_1
      96: invokevirtual #67                 // Method zipkin2/Span.annotations:()Ljava/util/List;
      99: invokeinterface #73,  1           // InterfaceMethod java/util/List.size:()I
     104: istore        4
     106: iload_3
     107: iload         4
     109: if_icmpge     401
     112: aload_1
     113: invokevirtual #67                 // Method zipkin2/Span.annotations:()Ljava/util/List;
     116: iload_3
     117: invokeinterface #77,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     122: checkcast     #79                 // class zipkin2/Annotation
     125: astore        5
     127: aload         5
     129: invokevirtual #83                 // Method zipkin2/Annotation.value:()Ljava/lang/String;
     132: astore        6
     134: aload         6
     136: invokevirtual #88                 // Method java/lang/String.length:()I
     139: iconst_2
     140: if_icmpeq     146
     143: goto          395
     146: aload         6
     148: ldc           #90                 // String cs
     150: invokevirtual #94                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     153: ifeq          185
     156: getstatic     #98                 // Field zipkin2/Span$Kind.CLIENT:Lzipkin2/Span$Kind;
     159: astore_2
     160: aload         5
     162: invokevirtual #101                // Method zipkin2/Annotation.timestamp:()J
     165: aload_0
     166: getfield      #46                 // Field startTs:J
     169: lcmp
     170: ifge          395
     173: aload_0
     174: aload         5
     176: invokevirtual #101                // Method zipkin2/Annotation.timestamp:()J
     179: putfield      #46                 // Field startTs:J
     182: goto          395
     185: aload         6
     187: ldc           #103                // String sr
     189: invokevirtual #94                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     192: ifeq          224
     195: getstatic     #106                // Field zipkin2/Span$Kind.SERVER:Lzipkin2/Span$Kind;
     198: astore_2
     199: aload         5
     201: invokevirtual #101                // Method zipkin2/Annotation.timestamp:()J
     204: aload_0
     205: getfield      #46                 // Field startTs:J
     208: lcmp
     209: ifge          395
     212: aload_0
     213: aload         5
     215: invokevirtual #101                // Method zipkin2/Annotation.timestamp:()J
     218: putfield      #46                 // Field startTs:J
     221: goto          395
     224: aload         6
     226: ldc           #108                // String ss
     228: invokevirtual #94                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     231: ifeq          263
     234: getstatic     #106                // Field zipkin2/Span$Kind.SERVER:Lzipkin2/Span$Kind;
     237: astore_2
     238: aload         5
     240: invokevirtual #101                // Method zipkin2/Annotation.timestamp:()J
     243: aload_0
     244: getfield      #44                 // Field endTs:J
     247: lcmp
     248: ifle          395
     251: aload_0
     252: aload         5
     254: invokevirtual #101                // Method zipkin2/Annotation.timestamp:()J
     257: putfield      #44                 // Field endTs:J
     260: goto          395
     263: aload         6
     265: ldc           #110                // String cr
     267: invokevirtual #94                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     270: ifeq          302
     273: getstatic     #98                 // Field zipkin2/Span$Kind.CLIENT:Lzipkin2/Span$Kind;
     276: astore_2
     277: aload         5
     279: invokevirtual #101                // Method zipkin2/Annotation.timestamp:()J
     282: aload_0
     283: getfield      #44                 // Field endTs:J
     286: lcmp
     287: ifle          395
     290: aload_0
     291: aload         5
     293: invokevirtual #101                // Method zipkin2/Annotation.timestamp:()J
     296: putfield      #44                 // Field endTs:J
     299: goto          395
     302: aload         6
     304: ldc           #112                // String ms
     306: invokevirtual #94                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     309: ifeq          328
     312: getstatic     #115                // Field zipkin2/Span$Kind.PRODUCER:Lzipkin2/Span$Kind;
     315: astore_2
     316: aload_0
     317: aload         5
     319: invokevirtual #101                // Method zipkin2/Annotation.timestamp:()J
     322: putfield      #42                 // Field msTs:J
     325: goto          395
     328: aload         6
     330: ldc           #117                // String mr
     332: invokevirtual #94                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     335: ifeq          354
     338: getstatic     #120                // Field zipkin2/Span$Kind.CONSUMER:Lzipkin2/Span$Kind;
     341: astore_2
     342: aload_0
     343: aload         5
     345: invokevirtual #101                // Method zipkin2/Annotation.timestamp:()J
     348: putfield      #36                 // Field mrTs:J
     351: goto          395
     354: aload         6
     356: ldc           #122                // String ws
     358: invokevirtual #94                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     361: ifeq          376
     364: aload_0
     365: aload         5
     367: invokevirtual #101                // Method zipkin2/Annotation.timestamp:()J
     370: putfield      #40                 // Field wsTs:J
     373: goto          395
     376: aload         6
     378: ldc           #124                // String wr
     380: invokevirtual #94                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     383: ifeq          395
     386: aload_0
     387: aload         5
     389: invokevirtual #101                // Method zipkin2/Annotation.timestamp:()J
     392: putfield      #38                 // Field wrTs:J
     395: iinc          3, 1
     398: goto          106
     401: aload_1
     402: invokevirtual #128                // Method zipkin2/Span.remoteEndpoint:()Lzipkin2/Endpoint;
     405: ifnull        414
     408: aload_0
     409: ldc           #130                // String sa
     411: putfield      #48                 // Field addr:Ljava/lang/String;
     414: aload_2
     415: ifnonnull     419
     418: return
     419: getstatic     #134                // Field zipkin2/v1/V2SpanConverter$1.$SwitchMap$zipkin2$Span$Kind:[I
     422: aload_2
     423: invokevirtual #137                // Method zipkin2/Span$Kind.ordinal:()I
     426: iaload
     427: tableswitch   { // 1 to 4
                     1: 456
                     2: 477
                     3: 498
                     4: 595
               default: 719
          }
     456: aload_0
     457: ldc           #130                // String sa
     459: putfield      #48                 // Field addr:Ljava/lang/String;
     462: aload_0
     463: ldc           #90                 // String cs
     465: putfield      #52                 // Field begin:Ljava/lang/String;
     468: aload_0
     469: ldc           #110                // String cr
     471: putfield      #50                 // Field end:Ljava/lang/String;
     474: goto          729
     477: aload_0
     478: ldc           #139                // String ca
     480: putfield      #48                 // Field addr:Ljava/lang/String;
     483: aload_0
     484: ldc           #103                // String sr
     486: putfield      #52                 // Field begin:Ljava/lang/String;
     489: aload_0
     490: ldc           #108                // String ss
     492: putfield      #50                 // Field end:Ljava/lang/String;
     495: goto          729
     498: aload_0
     499: ldc           #141                // String ma
     501: putfield      #48                 // Field addr:Ljava/lang/String;
     504: aload_0
     505: ldc           #112                // String ms
     507: putfield      #52                 // Field begin:Ljava/lang/String;
     510: aload_0
     511: ldc           #122                // String ws
     513: putfield      #50                 // Field end:Ljava/lang/String;
     516: aload_0
     517: getfield      #46                 // Field startTs:J
     520: lconst_0
     521: lcmp
     522: ifeq          546
     525: aload_0
     526: getfield      #42                 // Field msTs:J
     529: lconst_0
     530: lcmp
     531: ifeq          554
     534: aload_0
     535: getfield      #42                 // Field msTs:J
     538: aload_0
     539: getfield      #46                 // Field startTs:J
     542: lcmp
     543: ifge          554
     546: aload_0
     547: aload_0
     548: getfield      #42                 // Field msTs:J
     551: putfield      #46                 // Field startTs:J
     554: aload_0
     555: getfield      #44                 // Field endTs:J
     558: lconst_0
     559: lcmp
     560: ifeq          584
     563: aload_0
     564: getfield      #40                 // Field wsTs:J
     567: lconst_0
     568: lcmp
     569: ifeq          729
     572: aload_0
     573: getfield      #40                 // Field wsTs:J
     576: aload_0
     577: getfield      #44                 // Field endTs:J
     580: lcmp
     581: ifle          729
     584: aload_0
     585: aload_0
     586: getfield      #40                 // Field wsTs:J
     589: putfield      #44                 // Field endTs:J
     592: goto          729
     595: aload_0
     596: ldc           #141                // String ma
     598: putfield      #48                 // Field addr:Ljava/lang/String;
     601: aload_0
     602: getfield      #46                 // Field startTs:J
     605: lconst_0
     606: lcmp
     607: ifeq          631
     610: aload_0
     611: getfield      #38                 // Field wrTs:J
     614: lconst_0
     615: lcmp
     616: ifeq          639
     619: aload_0
     620: getfield      #38                 // Field wrTs:J
     623: aload_0
     624: getfield      #46                 // Field startTs:J
     627: lcmp
     628: ifge          639
     631: aload_0
     632: aload_0
     633: getfield      #38                 // Field wrTs:J
     636: putfield      #46                 // Field startTs:J
     639: aload_0
     640: getfield      #44                 // Field endTs:J
     643: lconst_0
     644: lcmp
     645: ifeq          669
     648: aload_0
     649: getfield      #36                 // Field mrTs:J
     652: lconst_0
     653: lcmp
     654: ifeq          677
     657: aload_0
     658: getfield      #36                 // Field mrTs:J
     661: aload_0
     662: getfield      #44                 // Field endTs:J
     665: lcmp
     666: ifle          677
     669: aload_0
     670: aload_0
     671: getfield      #36                 // Field mrTs:J
     674: putfield      #44                 // Field endTs:J
     677: aload_0
     678: getfield      #44                 // Field endTs:J
     681: lconst_0
     682: lcmp
     683: ifne          695
     686: aload_0
     687: getfield      #38                 // Field wrTs:J
     690: lconst_0
     691: lcmp
     692: ifeq          710
     695: aload_0
     696: ldc           #124                // String wr
     698: putfield      #52                 // Field begin:Ljava/lang/String;
     701: aload_0
     702: ldc           #117                // String mr
     704: putfield      #50                 // Field end:Ljava/lang/String;
     707: goto          729
     710: aload_0
     711: ldc           #117                // String mr
     713: putfield      #52                 // Field begin:Ljava/lang/String;
     716: goto          729
     719: new           #143                // class java/lang/AssertionError
     722: dup
     723: ldc           #145                // String update kind mapping
     725: invokespecial #148                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     728: athrow
     729: aload_1
     730: invokevirtual #128                // Method zipkin2/Span.remoteEndpoint:()Lzipkin2/Endpoint;
     733: ifnonnull     741
     736: aload_0
     737: aconst_null
     738: putfield      #48                 // Field addr:Ljava/lang/String;
     741: return
}
