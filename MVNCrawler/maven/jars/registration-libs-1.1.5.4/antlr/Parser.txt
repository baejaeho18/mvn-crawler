Compiled from "Parser.java"
public abstract class antlr.Parser {
  protected antlr.ParserSharedInputState inputState;

  protected java.lang.String[] tokenNames;

  protected antlr.collections.AST returnAST;

  protected antlr.ASTFactory astFactory;

  protected java.util.Hashtable tokenTypeToASTClassMap;

  private boolean ignoreInvalidDebugCalls;

  protected int traceDepth;

  public antlr.Parser();
    Code:
       0: aload_0
       1: new           #1                  // class antlr/ParserSharedInputState
       4: dup
       5: invokespecial #2                  // Method antlr/ParserSharedInputState."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Lantlr/ParserSharedInputState;)V
      11: return

  public antlr.Parser(antlr.ParserSharedInputState);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #5                  // Field astFactory:Lantlr/ASTFactory;
       9: aload_0
      10: aconst_null
      11: putfield      #6                  // Field tokenTypeToASTClassMap:Ljava/util/Hashtable;
      14: aload_0
      15: iconst_0
      16: putfield      #7                  // Field ignoreInvalidDebugCalls:Z
      19: aload_0
      20: iconst_0
      21: putfield      #8                  // Field traceDepth:I
      24: aload_0
      25: aload_1
      26: putfield      #9                  // Field inputState:Lantlr/ParserSharedInputState;
      29: return

  public java.util.Hashtable getTokenTypeToASTClassMap();
    Code:
       0: aload_0
       1: getfield      #6                  // Field tokenTypeToASTClassMap:Ljava/util/Hashtable;
       4: areturn

  public void addMessageListener(antlr.debug.MessageListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field ignoreInvalidDebugCalls:Z
       4: ifne          17
       7: new           #10                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #11                 // String addMessageListener() is only valid if parser built for debugging
      13: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void addParserListener(antlr.debug.ParserListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field ignoreInvalidDebugCalls:Z
       4: ifne          17
       7: new           #10                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #13                 // String addParserListener() is only valid if parser built for debugging
      13: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void addParserMatchListener(antlr.debug.ParserMatchListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field ignoreInvalidDebugCalls:Z
       4: ifne          17
       7: new           #10                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #14                 // String addParserMatchListener() is only valid if parser built for debugging
      13: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void addParserTokenListener(antlr.debug.ParserTokenListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field ignoreInvalidDebugCalls:Z
       4: ifne          17
       7: new           #10                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #15                 // String addParserTokenListener() is only valid if parser built for debugging
      13: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void addSemanticPredicateListener(antlr.debug.SemanticPredicateListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field ignoreInvalidDebugCalls:Z
       4: ifne          17
       7: new           #10                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #16                 // String addSemanticPredicateListener() is only valid if parser built for debugging
      13: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void addSyntacticPredicateListener(antlr.debug.SyntacticPredicateListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field ignoreInvalidDebugCalls:Z
       4: ifne          17
       7: new           #10                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #17                 // String addSyntacticPredicateListener() is only valid if parser built for debugging
      13: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void addTraceListener(antlr.debug.TraceListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field ignoreInvalidDebugCalls:Z
       4: ifne          17
       7: new           #10                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #18                 // String addTraceListener() is only valid if parser built for debugging
      13: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public abstract void consume() throws antlr.TokenStreamException;

  public void consumeUntil(int) throws antlr.TokenStreamException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #19                 // Method LA:(I)I
       5: iconst_1
       6: if_icmpeq     25
       9: aload_0
      10: iconst_1
      11: invokevirtual #19                 // Method LA:(I)I
      14: iload_1
      15: if_icmpeq     25
      18: aload_0
      19: invokevirtual #20                 // Method consume:()V
      22: goto          0
      25: return

  public void consumeUntil(antlr.collections.impl.BitSet) throws antlr.TokenStreamException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #19                 // Method LA:(I)I
       5: iconst_1
       6: if_icmpeq     28
       9: aload_1
      10: aload_0
      11: iconst_1
      12: invokevirtual #19                 // Method LA:(I)I
      15: invokevirtual #21                 // Method antlr/collections/impl/BitSet.member:(I)Z
      18: ifne          28
      21: aload_0
      22: invokevirtual #20                 // Method consume:()V
      25: goto          0
      28: return

  protected void defaultDebuggingSetup(antlr.TokenStream, antlr.TokenBuffer);
    Code:
       0: return

  public antlr.collections.AST getAST();
    Code:
       0: aload_0
       1: getfield      #22                 // Field returnAST:Lantlr/collections/AST;
       4: areturn

  public antlr.ASTFactory getASTFactory();
    Code:
       0: aload_0
       1: getfield      #5                  // Field astFactory:Lantlr/ASTFactory;
       4: areturn

  public java.lang.String getFilename();
    Code:
       0: aload_0
       1: getfield      #9                  // Field inputState:Lantlr/ParserSharedInputState;
       4: getfield      #23                 // Field antlr/ParserSharedInputState.filename:Ljava/lang/String;
       7: areturn

  public antlr.ParserSharedInputState getInputState();
    Code:
       0: aload_0
       1: getfield      #9                  // Field inputState:Lantlr/ParserSharedInputState;
       4: areturn

  public void setInputState(antlr.ParserSharedInputState);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field inputState:Lantlr/ParserSharedInputState;
       5: return

  public java.lang.String getTokenName(int);
    Code:
       0: aload_0
       1: getfield      #24                 // Field tokenNames:[Ljava/lang/String;
       4: iload_1
       5: aaload
       6: areturn

  public java.lang.String[] getTokenNames();
    Code:
       0: aload_0
       1: getfield      #24                 // Field tokenNames:[Ljava/lang/String;
       4: areturn

  public boolean isDebugMode();
    Code:
       0: iconst_0
       1: ireturn

  public abstract int LA(int) throws antlr.TokenStreamException;

  public abstract antlr.Token LT(int) throws antlr.TokenStreamException;

  public int mark();
    Code:
       0: aload_0
       1: getfield      #9                  // Field inputState:Lantlr/ParserSharedInputState;
       4: getfield      #25                 // Field antlr/ParserSharedInputState.input:Lantlr/TokenBuffer;
       7: invokevirtual #26                 // Method antlr/TokenBuffer.mark:()I
      10: ireturn

  public void match(int) throws antlr.MismatchedTokenException, antlr.TokenStreamException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #19                 // Method LA:(I)I
       5: iload_1
       6: if_icmpeq     32
       9: new           #27                 // class antlr/MismatchedTokenException
      12: dup
      13: aload_0
      14: getfield      #24                 // Field tokenNames:[Ljava/lang/String;
      17: aload_0
      18: iconst_1
      19: invokevirtual #28                 // Method LT:(I)Lantlr/Token;
      22: iload_1
      23: iconst_0
      24: aload_0
      25: invokevirtual #29                 // Method getFilename:()Ljava/lang/String;
      28: invokespecial #30                 // Method antlr/MismatchedTokenException."<init>":([Ljava/lang/String;Lantlr/Token;IZLjava/lang/String;)V
      31: athrow
      32: aload_0
      33: invokevirtual #20                 // Method consume:()V
      36: return

  public void match(antlr.collections.impl.BitSet) throws antlr.MismatchedTokenException, antlr.TokenStreamException;
    Code:
       0: aload_1
       1: aload_0
       2: iconst_1
       3: invokevirtual #19                 // Method LA:(I)I
       6: invokevirtual #21                 // Method antlr/collections/impl/BitSet.member:(I)Z
       9: ifne          35
      12: new           #27                 // class antlr/MismatchedTokenException
      15: dup
      16: aload_0
      17: getfield      #24                 // Field tokenNames:[Ljava/lang/String;
      20: aload_0
      21: iconst_1
      22: invokevirtual #28                 // Method LT:(I)Lantlr/Token;
      25: aload_1
      26: iconst_0
      27: aload_0
      28: invokevirtual #29                 // Method getFilename:()Ljava/lang/String;
      31: invokespecial #31                 // Method antlr/MismatchedTokenException."<init>":([Ljava/lang/String;Lantlr/Token;Lantlr/collections/impl/BitSet;ZLjava/lang/String;)V
      34: athrow
      35: aload_0
      36: invokevirtual #20                 // Method consume:()V
      39: return

  public void matchNot(int) throws antlr.MismatchedTokenException, antlr.TokenStreamException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #19                 // Method LA:(I)I
       5: iload_1
       6: if_icmpne     32
       9: new           #27                 // class antlr/MismatchedTokenException
      12: dup
      13: aload_0
      14: getfield      #24                 // Field tokenNames:[Ljava/lang/String;
      17: aload_0
      18: iconst_1
      19: invokevirtual #28                 // Method LT:(I)Lantlr/Token;
      22: iload_1
      23: iconst_1
      24: aload_0
      25: invokevirtual #29                 // Method getFilename:()Ljava/lang/String;
      28: invokespecial #30                 // Method antlr/MismatchedTokenException."<init>":([Ljava/lang/String;Lantlr/Token;IZLjava/lang/String;)V
      31: athrow
      32: aload_0
      33: invokevirtual #20                 // Method consume:()V
      36: return

  public static void panic();
    Code:
       0: getstatic     #32                 // Field java/lang/System.err:Ljava/io/PrintStream;
       3: ldc           #33                 // String Parser: panic
       5: invokevirtual #34                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       8: iconst_1
       9: invokestatic  #35                 // Method java/lang/System.exit:(I)V
      12: return

  public void removeMessageListener(antlr.debug.MessageListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field ignoreInvalidDebugCalls:Z
       4: ifne          17
       7: new           #36                 // class java/lang/RuntimeException
      10: dup
      11: ldc           #37                 // String removeMessageListener() is only valid if parser built for debugging
      13: invokespecial #38                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void removeParserListener(antlr.debug.ParserListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field ignoreInvalidDebugCalls:Z
       4: ifne          17
       7: new           #36                 // class java/lang/RuntimeException
      10: dup
      11: ldc           #39                 // String removeParserListener() is only valid if parser built for debugging
      13: invokespecial #38                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void removeParserMatchListener(antlr.debug.ParserMatchListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field ignoreInvalidDebugCalls:Z
       4: ifne          17
       7: new           #36                 // class java/lang/RuntimeException
      10: dup
      11: ldc           #40                 // String removeParserMatchListener() is only valid if parser built for debugging
      13: invokespecial #38                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void removeParserTokenListener(antlr.debug.ParserTokenListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field ignoreInvalidDebugCalls:Z
       4: ifne          17
       7: new           #36                 // class java/lang/RuntimeException
      10: dup
      11: ldc           #41                 // String removeParserTokenListener() is only valid if parser built for debugging
      13: invokespecial #38                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void removeSemanticPredicateListener(antlr.debug.SemanticPredicateListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field ignoreInvalidDebugCalls:Z
       4: ifne          17
       7: new           #10                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #42                 // String removeSemanticPredicateListener() is only valid if parser built for debugging
      13: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void removeSyntacticPredicateListener(antlr.debug.SyntacticPredicateListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field ignoreInvalidDebugCalls:Z
       4: ifne          17
       7: new           #10                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #43                 // String removeSyntacticPredicateListener() is only valid if parser built for debugging
      13: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void removeTraceListener(antlr.debug.TraceListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field ignoreInvalidDebugCalls:Z
       4: ifne          17
       7: new           #36                 // class java/lang/RuntimeException
      10: dup
      11: ldc           #44                 // String removeTraceListener() is only valid if parser built for debugging
      13: invokespecial #38                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void reportError(antlr.RecognitionException);
    Code:
       0: getstatic     #32                 // Field java/lang/System.err:Ljava/io/PrintStream;
       3: aload_1
       4: invokevirtual #45                 // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
       7: return

  public void reportError(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getFilename:()Ljava/lang/String;
       4: ifnonnull     35
       7: getstatic     #32                 // Field java/lang/System.err:Ljava/io/PrintStream;
      10: new           #46                 // class java/lang/StringBuffer
      13: dup
      14: invokespecial #47                 // Method java/lang/StringBuffer."<init>":()V
      17: ldc           #48                 // String error:
      19: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      22: aload_1
      23: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      26: invokevirtual #50                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      29: invokevirtual #34                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      32: goto          67
      35: getstatic     #32                 // Field java/lang/System.err:Ljava/io/PrintStream;
      38: new           #46                 // class java/lang/StringBuffer
      41: dup
      42: invokespecial #47                 // Method java/lang/StringBuffer."<init>":()V
      45: aload_0
      46: invokevirtual #29                 // Method getFilename:()Ljava/lang/String;
      49: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      52: ldc           #51                 // String : error:
      54: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      57: aload_1
      58: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      61: invokevirtual #50                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      64: invokevirtual #34                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      67: return

  public void reportWarning(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getFilename:()Ljava/lang/String;
       4: ifnonnull     35
       7: getstatic     #32                 // Field java/lang/System.err:Ljava/io/PrintStream;
      10: new           #46                 // class java/lang/StringBuffer
      13: dup
      14: invokespecial #47                 // Method java/lang/StringBuffer."<init>":()V
      17: ldc           #52                 // String warning:
      19: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      22: aload_1
      23: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      26: invokevirtual #50                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      29: invokevirtual #34                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      32: goto          67
      35: getstatic     #32                 // Field java/lang/System.err:Ljava/io/PrintStream;
      38: new           #46                 // class java/lang/StringBuffer
      41: dup
      42: invokespecial #47                 // Method java/lang/StringBuffer."<init>":()V
      45: aload_0
      46: invokevirtual #29                 // Method getFilename:()Ljava/lang/String;
      49: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      52: ldc           #53                 // String : warning:
      54: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      57: aload_1
      58: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      61: invokevirtual #50                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      64: invokevirtual #34                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      67: return

  public void recover(antlr.RecognitionException, antlr.collections.impl.BitSet) throws antlr.TokenStreamException;
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method consume:()V
       4: aload_0
       5: aload_2
       6: invokevirtual #54                 // Method consumeUntil:(Lantlr/collections/impl/BitSet;)V
       9: return

  public void rewind(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field inputState:Lantlr/ParserSharedInputState;
       4: getfield      #25                 // Field antlr/ParserSharedInputState.input:Lantlr/TokenBuffer;
       7: iload_1
       8: invokevirtual #55                 // Method antlr/TokenBuffer.rewind:(I)V
      11: return

  public void setASTFactory(antlr.ASTFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field astFactory:Lantlr/ASTFactory;
       5: return

  public void setASTNodeClass(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field astFactory:Lantlr/ASTFactory;
       4: aload_1
       5: invokevirtual #56                 // Method antlr/ASTFactory.setASTNodeType:(Ljava/lang/String;)V
       8: return

  public void setASTNodeType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #57                 // Method setASTNodeClass:(Ljava/lang/String;)V
       5: return

  public void setDebugMode(boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field ignoreInvalidDebugCalls:Z
       4: ifne          17
       7: new           #36                 // class java/lang/RuntimeException
      10: dup
      11: ldc           #58                 // String setDebugMode() only valid if parser built for debugging
      13: invokespecial #38                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void setFilename(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field inputState:Lantlr/ParserSharedInputState;
       4: aload_1
       5: putfield      #23                 // Field antlr/ParserSharedInputState.filename:Ljava/lang/String;
       8: return

  public void setIgnoreInvalidDebugCalls(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field ignoreInvalidDebugCalls:Z
       5: return

  public void setTokenBuffer(antlr.TokenBuffer);
    Code:
       0: aload_0
       1: getfield      #9                  // Field inputState:Lantlr/ParserSharedInputState;
       4: aload_1
       5: putfield      #25                 // Field antlr/ParserSharedInputState.input:Lantlr/TokenBuffer;
       8: return

  public void traceIndent();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #8                  // Field traceDepth:I
       7: if_icmpge     24
      10: getstatic     #59                 // Field java/lang/System.out:Ljava/io/PrintStream;
      13: ldc           #60                 // String
      15: invokevirtual #61                 // Method java/io/PrintStream.print:(Ljava/lang/String;)V
      18: iinc          1, 1
      21: goto          2
      24: return

  public void traceIn(java.lang.String) throws antlr.TokenStreamException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #8                  // Field traceDepth:I
       5: iconst_1
       6: iadd
       7: putfield      #8                  // Field traceDepth:I
      10: aload_0
      11: invokevirtual #62                 // Method traceIndent:()V
      14: getstatic     #59                 // Field java/lang/System.out:Ljava/io/PrintStream;
      17: new           #46                 // class java/lang/StringBuffer
      20: dup
      21: invokespecial #47                 // Method java/lang/StringBuffer."<init>":()V
      24: ldc           #63                 // String >
      26: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: aload_1
      30: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      33: ldc           #64                 // String ; LA(1)==
      35: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      38: aload_0
      39: iconst_1
      40: invokevirtual #28                 // Method LT:(I)Lantlr/Token;
      43: invokevirtual #65                 // Method antlr/Token.getText:()Ljava/lang/String;
      46: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      49: aload_0
      50: getfield      #9                  // Field inputState:Lantlr/ParserSharedInputState;
      53: getfield      #66                 // Field antlr/ParserSharedInputState.guessing:I
      56: ifle          64
      59: ldc           #67                 // String  [guessing]
      61: goto          66
      64: ldc           #68                 // String
      66: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      69: invokevirtual #50                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      72: invokevirtual #34                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      75: return

  public void traceOut(java.lang.String) throws antlr.TokenStreamException;
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method traceIndent:()V
       4: getstatic     #59                 // Field java/lang/System.out:Ljava/io/PrintStream;
       7: new           #46                 // class java/lang/StringBuffer
      10: dup
      11: invokespecial #47                 // Method java/lang/StringBuffer."<init>":()V
      14: ldc           #69                 // String <
      16: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      19: aload_1
      20: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      23: ldc           #64                 // String ; LA(1)==
      25: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      28: aload_0
      29: iconst_1
      30: invokevirtual #28                 // Method LT:(I)Lantlr/Token;
      33: invokevirtual #65                 // Method antlr/Token.getText:()Ljava/lang/String;
      36: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      39: aload_0
      40: getfield      #9                  // Field inputState:Lantlr/ParserSharedInputState;
      43: getfield      #66                 // Field antlr/ParserSharedInputState.guessing:I
      46: ifle          54
      49: ldc           #67                 // String  [guessing]
      51: goto          56
      54: ldc           #68                 // String
      56: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      59: invokevirtual #50                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      62: invokevirtual #34                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      65: aload_0
      66: dup
      67: getfield      #8                  // Field traceDepth:I
      70: iconst_1
      71: isub
      72: putfield      #8                  // Field traceDepth:I
      75: return
}
