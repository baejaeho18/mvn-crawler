Compiled from "MakeGrammar.java"
public class antlr.MakeGrammar extends antlr.DefineGrammarSymbols {
  protected antlr.collections.Stack blocks;

  protected antlr.RuleRefElement lastRuleRef;

  protected antlr.RuleEndElement ruleEnd;

  protected antlr.RuleBlock ruleBlock;

  protected int nested;

  protected boolean grammarError;

  antlr.ExceptionSpec currentExceptionSpec;

  public antlr.MakeGrammar(antlr.Tool, java.lang.String[], antlr.LLkAnalyzer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method antlr/DefineGrammarSymbols."<init>":(Lantlr/Tool;[Ljava/lang/String;Lantlr/LLkAnalyzer;)V
       7: aload_0
       8: new           #2                  // class antlr/collections/impl/LList
      11: dup
      12: invokespecial #3                  // Method antlr/collections/impl/LList."<init>":()V
      15: putfield      #4                  // Field blocks:Lantlr/collections/Stack;
      18: aload_0
      19: iconst_0
      20: putfield      #5                  // Field nested:I
      23: aload_0
      24: iconst_0
      25: putfield      #6                  // Field grammarError:Z
      28: aload_0
      29: aconst_null
      30: putfield      #7                  // Field currentExceptionSpec:Lantlr/ExceptionSpec;
      33: return

  public void abortGrammar();
    Code:
       0: ldc           #8                  // String unknown grammar
       2: astore_1
       3: aload_0
       4: getfield      #9                  // Field grammar:Lantlr/Grammar;
       7: ifnull        18
      10: aload_0
      11: getfield      #9                  // Field grammar:Lantlr/Grammar;
      14: invokevirtual #10                 // Method antlr/Grammar.getClassName:()Ljava/lang/String;
      17: astore_1
      18: aload_0
      19: getfield      #11                 // Field tool:Lantlr/Tool;
      22: new           #12                 // class java/lang/StringBuffer
      25: dup
      26: invokespecial #13                 // Method java/lang/StringBuffer."<init>":()V
      29: ldc           #14                 // String aborting grammar \'
      31: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      34: aload_1
      35: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      38: ldc           #16                 // String \' due to errors
      40: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      43: invokevirtual #17                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      46: invokevirtual #18                 // Method antlr/Tool.error:(Ljava/lang/String;)V
      49: aload_0
      50: invokespecial #19                 // Method antlr/DefineGrammarSymbols.abortGrammar:()V
      53: return

  protected void addElementToCurrentAlt(antlr.AlternativeElement);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #20                 // Field ruleBlock:Lantlr/RuleBlock;
       5: getfield      #21                 // Field antlr/RuleBlock.ruleName:Ljava/lang/String;
       8: putfield      #22                 // Field antlr/AlternativeElement.enclosingRuleName:Ljava/lang/String;
      11: aload_0
      12: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      15: aload_1
      16: invokevirtual #24                 // Method antlr/BlockContext.addAlternativeElement:(Lantlr/AlternativeElement;)V
      19: return

  public void beginAlt(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #25                 // Method antlr/DefineGrammarSymbols.beginAlt:(Z)V
       5: new           #26                 // class antlr/Alternative
       8: dup
       9: invokespecial #27                 // Method antlr/Alternative."<init>":()V
      12: astore_2
      13: aload_2
      14: iload_1
      15: invokevirtual #28                 // Method antlr/Alternative.setAutoGen:(Z)V
      18: aload_0
      19: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      22: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      25: aload_2
      26: invokevirtual #30                 // Method antlr/AlternativeBlock.addAlternative:(Lantlr/Alternative;)V
      29: return

  public void beginChildList();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method antlr/DefineGrammarSymbols.beginChildList:()V
       4: aload_0
       5: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
       8: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      11: new           #26                 // class antlr/Alternative
      14: dup
      15: invokespecial #27                 // Method antlr/Alternative."<init>":()V
      18: invokevirtual #30                 // Method antlr/AlternativeBlock.addAlternative:(Lantlr/Alternative;)V
      21: return

  public void beginExceptionGroup();
    Code:
       0: aload_0
       1: invokespecial #32                 // Method antlr/DefineGrammarSymbols.beginExceptionGroup:()V
       4: aload_0
       5: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
       8: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      11: instanceof    #33                 // class antlr/RuleBlock
      14: ifne          26
      17: aload_0
      18: getfield      #11                 // Field tool:Lantlr/Tool;
      21: ldc           #34                 // String beginExceptionGroup called outside of rule block
      23: invokevirtual #35                 // Method antlr/Tool.panic:(Ljava/lang/String;)V
      26: return

  public void beginExceptionSpec(antlr.Token);
    Code:
       0: aload_1
       1: ifnull        22
       4: aload_1
       5: aload_1
       6: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
       9: ldc           #37                 // String  \n\r\t
      11: invokestatic  #38                 // Method antlr/StringUtils.stripBack:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      14: ldc           #37                 // String  \n\r\t
      16: invokestatic  #39                 // Method antlr/StringUtils.stripFront:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      19: invokevirtual #40                 // Method antlr/Token.setText:(Ljava/lang/String;)V
      22: aload_0
      23: aload_1
      24: invokespecial #41                 // Method antlr/DefineGrammarSymbols.beginExceptionSpec:(Lantlr/Token;)V
      27: aload_0
      28: new           #42                 // class antlr/ExceptionSpec
      31: dup
      32: aload_1
      33: invokespecial #43                 // Method antlr/ExceptionSpec."<init>":(Lantlr/Token;)V
      36: putfield      #7                  // Field currentExceptionSpec:Lantlr/ExceptionSpec;
      39: return

  public void beginSubRule(antlr.Token, antlr.Token, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #44                 // Method antlr/DefineGrammarSymbols.beginSubRule:(Lantlr/Token;Lantlr/Token;Z)V
       7: aload_0
       8: getfield      #4                  // Field blocks:Lantlr/collections/Stack;
      11: new           #45                 // class antlr/BlockContext
      14: dup
      15: invokespecial #46                 // Method antlr/BlockContext."<init>":()V
      18: invokeinterface #47,  2           // InterfaceMethod antlr/collections/Stack.push:(Ljava/lang/Object;)V
      23: aload_0
      24: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      27: new           #48                 // class antlr/AlternativeBlock
      30: dup
      31: aload_0
      32: getfield      #9                  // Field grammar:Lantlr/Grammar;
      35: aload_2
      36: iload_3
      37: invokespecial #49                 // Method antlr/AlternativeBlock."<init>":(Lantlr/Grammar;Lantlr/Token;Z)V
      40: putfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      43: aload_0
      44: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      47: iconst_0
      48: putfield      #50                 // Field antlr/BlockContext.altNum:I
      51: aload_0
      52: dup
      53: getfield      #5                  // Field nested:I
      56: iconst_1
      57: iadd
      58: putfield      #5                  // Field nested:I
      61: aload_0
      62: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      65: new           #51                 // class antlr/BlockEndElement
      68: dup
      69: aload_0
      70: getfield      #9                  // Field grammar:Lantlr/Grammar;
      73: invokespecial #52                 // Method antlr/BlockEndElement."<init>":(Lantlr/Grammar;)V
      76: putfield      #53                 // Field antlr/BlockContext.blockEnd:Lantlr/BlockEndElement;
      79: aload_0
      80: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      83: getfield      #53                 // Field antlr/BlockContext.blockEnd:Lantlr/BlockEndElement;
      86: aload_0
      87: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      90: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      93: putfield      #54                 // Field antlr/BlockEndElement.block:Lantlr/AlternativeBlock;
      96: aload_0
      97: aload_0
      98: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
     101: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
     104: aload_1
     105: invokespecial #55                 // Method labelElement:(Lantlr/AlternativeElement;Lantlr/Token;)V
     108: return

  public void beginTree(antlr.Token) throws antlr.SemanticException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field grammar:Lantlr/Grammar;
       4: instanceof    #56                 // class antlr/TreeWalkerGrammar
       7: ifne          44
      10: aload_0
      11: getfield      #11                 // Field tool:Lantlr/Tool;
      14: ldc           #57                 // String Trees only allowed in TreeParser
      16: aload_0
      17: getfield      #9                  // Field grammar:Lantlr/Grammar;
      20: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
      23: aload_1
      24: invokevirtual #59                 // Method antlr/Token.getLine:()I
      27: aload_1
      28: invokevirtual #60                 // Method antlr/Token.getColumn:()I
      31: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
      34: new           #62                 // class antlr/SemanticException
      37: dup
      38: ldc           #57                 // String Trees only allowed in TreeParser
      40: invokespecial #63                 // Method antlr/SemanticException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_0
      45: aload_1
      46: invokespecial #64                 // Method antlr/DefineGrammarSymbols.beginTree:(Lantlr/Token;)V
      49: aload_0
      50: getfield      #4                  // Field blocks:Lantlr/collections/Stack;
      53: new           #65                 // class antlr/TreeBlockContext
      56: dup
      57: invokespecial #66                 // Method antlr/TreeBlockContext."<init>":()V
      60: invokeinterface #47,  2           // InterfaceMethod antlr/collections/Stack.push:(Ljava/lang/Object;)V
      65: aload_0
      66: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      69: new           #67                 // class antlr/TreeElement
      72: dup
      73: aload_0
      74: getfield      #9                  // Field grammar:Lantlr/Grammar;
      77: aload_1
      78: invokespecial #68                 // Method antlr/TreeElement."<init>":(Lantlr/Grammar;Lantlr/Token;)V
      81: putfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      84: aload_0
      85: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      88: iconst_0
      89: putfield      #50                 // Field antlr/BlockContext.altNum:I
      92: return

  public antlr.BlockContext context();
    Code:
       0: aload_0
       1: getfield      #4                  // Field blocks:Lantlr/collections/Stack;
       4: invokeinterface #69,  1           // InterfaceMethod antlr/collections/Stack.height:()I
       9: ifne          14
      12: aconst_null
      13: areturn
      14: aload_0
      15: getfield      #4                  // Field blocks:Lantlr/collections/Stack;
      18: invokeinterface #70,  1           // InterfaceMethod antlr/collections/Stack.top:()Ljava/lang/Object;
      23: checkcast     #45                 // class antlr/BlockContext
      26: areturn

  public static antlr.RuleBlock createNextTokenRule(antlr.Grammar, antlr.collections.impl.Vector, java.lang.String);
    Code:
       0: new           #33                 // class antlr/RuleBlock
       3: dup
       4: aload_0
       5: aload_2
       6: invokespecial #71                 // Method antlr/RuleBlock."<init>":(Lantlr/Grammar;Ljava/lang/String;)V
       9: astore_3
      10: aload_3
      11: aload_0
      12: invokevirtual #72                 // Method antlr/Grammar.getDefaultErrorHandler:()Z
      15: invokevirtual #73                 // Method antlr/RuleBlock.setDefaultErrorHandler:(Z)V
      18: new           #74                 // class antlr/RuleEndElement
      21: dup
      22: aload_0
      23: invokespecial #75                 // Method antlr/RuleEndElement."<init>":(Lantlr/Grammar;)V
      26: astore        4
      28: aload_3
      29: aload         4
      31: invokevirtual #76                 // Method antlr/RuleBlock.setEndElement:(Lantlr/RuleEndElement;)V
      34: aload         4
      36: aload_3
      37: putfield      #77                 // Field antlr/RuleEndElement.block:Lantlr/AlternativeBlock;
      40: iconst_0
      41: istore        5
      43: iload         5
      45: aload_1
      46: invokevirtual #78                 // Method antlr/collections/impl/Vector.size:()I
      49: if_icmpge     270
      52: aload_1
      53: iload         5
      55: invokevirtual #79                 // Method antlr/collections/impl/Vector.elementAt:(I)Ljava/lang/Object;
      58: checkcast     #80                 // class antlr/RuleSymbol
      61: astore        6
      63: aload         6
      65: invokevirtual #81                 // Method antlr/RuleSymbol.isDefined:()Z
      68: ifne          113
      71: aload_0
      72: getfield      #82                 // Field antlr/Grammar.antlrTool:Lantlr/Tool;
      75: new           #12                 // class java/lang/StringBuffer
      78: dup
      79: invokespecial #13                 // Method java/lang/StringBuffer."<init>":()V
      82: ldc           #83                 // String Lexer rule
      84: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      87: aload         6
      89: getfield      #84                 // Field antlr/RuleSymbol.id:Ljava/lang/String;
      92: iconst_1
      93: invokevirtual #85                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      96: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      99: ldc           #86                 // String  is not defined
     101: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     104: invokevirtual #17                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     107: invokevirtual #18                 // Method antlr/Tool.error:(Ljava/lang/String;)V
     110: goto          264
     113: aload         6
     115: getfield      #87                 // Field antlr/RuleSymbol.access:Ljava/lang/String;
     118: ldc           #88                 // String public
     120: invokevirtual #89                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     123: ifeq          264
     126: new           #26                 // class antlr/Alternative
     129: dup
     130: invokespecial #27                 // Method antlr/Alternative."<init>":()V
     133: astore        7
     135: aload         6
     137: invokevirtual #90                 // Method antlr/RuleSymbol.getBlock:()Lantlr/RuleBlock;
     140: astore        8
     142: aload         8
     144: invokevirtual #91                 // Method antlr/RuleBlock.getAlternatives:()Lantlr/collections/impl/Vector;
     147: astore        9
     149: aload         9
     151: ifnull        192
     154: aload         9
     156: invokevirtual #78                 // Method antlr/collections/impl/Vector.size:()I
     159: iconst_1
     160: if_icmpne     192
     163: aload         9
     165: iconst_0
     166: invokevirtual #79                 // Method antlr/collections/impl/Vector.elementAt:(I)Ljava/lang/Object;
     169: checkcast     #26                 // class antlr/Alternative
     172: astore        10
     174: aload         10
     176: getfield      #92                 // Field antlr/Alternative.semPred:Ljava/lang/String;
     179: ifnull        192
     182: aload         7
     184: aload         10
     186: getfield      #92                 // Field antlr/Alternative.semPred:Ljava/lang/String;
     189: putfield      #92                 // Field antlr/Alternative.semPred:Ljava/lang/String;
     192: new           #93                 // class antlr/RuleRefElement
     195: dup
     196: aload_0
     197: new           #94                 // class antlr/CommonToken
     200: dup
     201: bipush        41
     203: aload         6
     205: invokevirtual #95                 // Method antlr/RuleSymbol.getId:()Ljava/lang/String;
     208: invokespecial #96                 // Method antlr/CommonToken."<init>":(ILjava/lang/String;)V
     211: iconst_1
     212: invokespecial #97                 // Method antlr/RuleRefElement."<init>":(Lantlr/Grammar;Lantlr/Token;I)V
     215: astore        10
     217: aload         10
     219: ldc           #98                 // String theRetToken
     221: invokevirtual #99                 // Method antlr/RuleRefElement.setLabel:(Ljava/lang/String;)V
     224: aload         10
     226: ldc           #100                // String nextToken
     228: putfield      #101                // Field antlr/RuleRefElement.enclosingRuleName:Ljava/lang/String;
     231: aload         10
     233: aload         4
     235: putfield      #102                // Field antlr/RuleRefElement.next:Lantlr/AlternativeElement;
     238: aload         7
     240: aload         10
     242: invokevirtual #103                // Method antlr/Alternative.addElement:(Lantlr/AlternativeElement;)V
     245: aload         7
     247: iconst_1
     248: invokevirtual #28                 // Method antlr/Alternative.setAutoGen:(Z)V
     251: aload_3
     252: aload         7
     254: invokevirtual #104                // Method antlr/RuleBlock.addAlternative:(Lantlr/Alternative;)V
     257: aload         6
     259: aload         10
     261: invokevirtual #105                // Method antlr/RuleSymbol.addReference:(Lantlr/RuleRefElement;)V
     264: iinc          5, 1
     267: goto          43
     270: aload_3
     271: iconst_1
     272: invokevirtual #106                // Method antlr/RuleBlock.setAutoGen:(Z)V
     275: aload_3
     276: invokevirtual #107                // Method antlr/RuleBlock.prepareForAnalysis:()V
     279: aload_3
     280: areturn

  private antlr.AlternativeBlock createOptionalRuleRef(java.lang.String, antlr.Token);
    Code:
       0: new           #48                 // class antlr/AlternativeBlock
       3: dup
       4: aload_0
       5: getfield      #9                  // Field grammar:Lantlr/Grammar;
       8: aload_2
       9: iconst_0
      10: invokespecial #49                 // Method antlr/AlternativeBlock."<init>":(Lantlr/Grammar;Lantlr/Token;Z)V
      13: astore_3
      14: aload_1
      15: invokestatic  #108                // Method antlr/CodeGenerator.encodeLexerRuleName:(Ljava/lang/String;)Ljava/lang/String;
      18: astore        4
      20: aload_0
      21: getfield      #9                  // Field grammar:Lantlr/Grammar;
      24: aload         4
      26: invokevirtual #109                // Method antlr/Grammar.isDefined:(Ljava/lang/String;)Z
      29: ifne          48
      32: aload_0
      33: getfield      #9                  // Field grammar:Lantlr/Grammar;
      36: new           #80                 // class antlr/RuleSymbol
      39: dup
      40: aload         4
      42: invokespecial #110                // Method antlr/RuleSymbol."<init>":(Ljava/lang/String;)V
      45: invokevirtual #111                // Method antlr/Grammar.define:(Lantlr/RuleSymbol;)V
      48: new           #94                 // class antlr/CommonToken
      51: dup
      52: bipush        24
      54: aload_1
      55: invokespecial #96                 // Method antlr/CommonToken."<init>":(ILjava/lang/String;)V
      58: astore        5
      60: aload         5
      62: aload_2
      63: invokevirtual #59                 // Method antlr/Token.getLine:()I
      66: invokevirtual #112                // Method antlr/Token.setLine:(I)V
      69: aload         5
      71: aload_2
      72: invokevirtual #60                 // Method antlr/Token.getColumn:()I
      75: invokevirtual #112                // Method antlr/Token.setLine:(I)V
      78: new           #93                 // class antlr/RuleRefElement
      81: dup
      82: aload_0
      83: getfield      #9                  // Field grammar:Lantlr/Grammar;
      86: aload         5
      88: iconst_1
      89: invokespecial #97                 // Method antlr/RuleRefElement."<init>":(Lantlr/Grammar;Lantlr/Token;I)V
      92: astore        6
      94: aload         6
      96: aload_0
      97: getfield      #20                 // Field ruleBlock:Lantlr/RuleBlock;
     100: getfield      #21                 // Field antlr/RuleBlock.ruleName:Ljava/lang/String;
     103: putfield      #101                // Field antlr/RuleRefElement.enclosingRuleName:Ljava/lang/String;
     106: new           #51                 // class antlr/BlockEndElement
     109: dup
     110: aload_0
     111: getfield      #9                  // Field grammar:Lantlr/Grammar;
     114: invokespecial #52                 // Method antlr/BlockEndElement."<init>":(Lantlr/Grammar;)V
     117: astore        7
     119: aload         7
     121: aload_3
     122: putfield      #54                 // Field antlr/BlockEndElement.block:Lantlr/AlternativeBlock;
     125: new           #26                 // class antlr/Alternative
     128: dup
     129: aload         6
     131: invokespecial #113                // Method antlr/Alternative."<init>":(Lantlr/AlternativeElement;)V
     134: astore        8
     136: aload         8
     138: aload         7
     140: invokevirtual #103                // Method antlr/Alternative.addElement:(Lantlr/AlternativeElement;)V
     143: aload_3
     144: aload         8
     146: invokevirtual #30                 // Method antlr/AlternativeBlock.addAlternative:(Lantlr/Alternative;)V
     149: new           #26                 // class antlr/Alternative
     152: dup
     153: invokespecial #27                 // Method antlr/Alternative."<init>":()V
     156: astore        9
     158: aload         9
     160: aload         7
     162: invokevirtual #103                // Method antlr/Alternative.addElement:(Lantlr/AlternativeElement;)V
     165: aload_3
     166: aload         9
     168: invokevirtual #30                 // Method antlr/AlternativeBlock.addAlternative:(Lantlr/Alternative;)V
     171: aload_3
     172: invokevirtual #114                // Method antlr/AlternativeBlock.prepareForAnalysis:()V
     175: aload_3
     176: areturn

  public void defineRuleName(antlr.Token, java.lang.String, boolean, java.lang.String) throws antlr.SemanticException;
    Code:
       0: aload_1
       1: getfield      #115                // Field antlr/Token.type:I
       4: bipush        24
       6: if_icmpne     82
       9: aload_0
      10: getfield      #9                  // Field grammar:Lantlr/Grammar;
      13: instanceof    #116                // class antlr/LexerGrammar
      16: ifne          152
      19: aload_0
      20: getfield      #11                 // Field tool:Lantlr/Tool;
      23: new           #12                 // class java/lang/StringBuffer
      26: dup
      27: invokespecial #13                 // Method java/lang/StringBuffer."<init>":()V
      30: ldc           #117                // String Lexical rule
      32: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      35: aload_1
      36: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
      39: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      42: ldc           #118                // String  defined outside of lexer
      44: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      47: invokevirtual #17                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      50: aload_0
      51: getfield      #9                  // Field grammar:Lantlr/Grammar;
      54: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
      57: aload_1
      58: invokevirtual #59                 // Method antlr/Token.getLine:()I
      61: aload_1
      62: invokevirtual #60                 // Method antlr/Token.getColumn:()I
      65: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
      68: aload_1
      69: aload_1
      70: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
      73: invokevirtual #119                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      76: invokevirtual #40                 // Method antlr/Token.setText:(Ljava/lang/String;)V
      79: goto          152
      82: aload_0
      83: getfield      #9                  // Field grammar:Lantlr/Grammar;
      86: instanceof    #116                // class antlr/LexerGrammar
      89: ifeq          152
      92: aload_0
      93: getfield      #11                 // Field tool:Lantlr/Tool;
      96: new           #12                 // class java/lang/StringBuffer
      99: dup
     100: invokespecial #13                 // Method java/lang/StringBuffer."<init>":()V
     103: ldc           #120                // String Lexical rule names must be upper case, \'
     105: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     108: aload_1
     109: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
     112: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     115: ldc           #121                // String \' is not
     117: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     120: invokevirtual #17                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     123: aload_0
     124: getfield      #9                  // Field grammar:Lantlr/Grammar;
     127: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
     130: aload_1
     131: invokevirtual #59                 // Method antlr/Token.getLine:()I
     134: aload_1
     135: invokevirtual #60                 // Method antlr/Token.getColumn:()I
     138: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
     141: aload_1
     142: aload_1
     143: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
     146: invokevirtual #122                // Method java/lang/String.toUpperCase:()Ljava/lang/String;
     149: invokevirtual #40                 // Method antlr/Token.setText:(Ljava/lang/String;)V
     152: aload_0
     153: aload_1
     154: aload_2
     155: iload_3
     156: aload         4
     158: invokespecial #123                // Method antlr/DefineGrammarSymbols.defineRuleName:(Lantlr/Token;Ljava/lang/String;ZLjava/lang/String;)V
     161: aload_1
     162: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
     165: astore        5
     167: aload_1
     168: getfield      #115                // Field antlr/Token.type:I
     171: bipush        24
     173: if_icmpne     183
     176: aload         5
     178: invokestatic  #108                // Method antlr/CodeGenerator.encodeLexerRuleName:(Ljava/lang/String;)Ljava/lang/String;
     181: astore        5
     183: aload_0
     184: getfield      #9                  // Field grammar:Lantlr/Grammar;
     187: aload         5
     189: invokevirtual #124                // Method antlr/Grammar.getSymbol:(Ljava/lang/String;)Lantlr/GrammarSymbol;
     192: checkcast     #80                 // class antlr/RuleSymbol
     195: astore        6
     197: new           #33                 // class antlr/RuleBlock
     200: dup
     201: aload_0
     202: getfield      #9                  // Field grammar:Lantlr/Grammar;
     205: aload_1
     206: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
     209: aload_1
     210: invokevirtual #59                 // Method antlr/Token.getLine:()I
     213: iload_3
     214: invokespecial #125                // Method antlr/RuleBlock."<init>":(Lantlr/Grammar;Ljava/lang/String;IZ)V
     217: astore        7
     219: aload         7
     221: aload_0
     222: getfield      #9                  // Field grammar:Lantlr/Grammar;
     225: invokevirtual #72                 // Method antlr/Grammar.getDefaultErrorHandler:()Z
     228: invokevirtual #73                 // Method antlr/RuleBlock.setDefaultErrorHandler:(Z)V
     231: aload_0
     232: aload         7
     234: putfield      #20                 // Field ruleBlock:Lantlr/RuleBlock;
     237: aload_0
     238: getfield      #4                  // Field blocks:Lantlr/collections/Stack;
     241: new           #45                 // class antlr/BlockContext
     244: dup
     245: invokespecial #46                 // Method antlr/BlockContext."<init>":()V
     248: invokeinterface #47,  2           // InterfaceMethod antlr/collections/Stack.push:(Ljava/lang/Object;)V
     253: aload_0
     254: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
     257: aload         7
     259: putfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
     262: aload         6
     264: aload         7
     266: invokevirtual #126                // Method antlr/RuleSymbol.setBlock:(Lantlr/RuleBlock;)V
     269: aload_0
     270: new           #74                 // class antlr/RuleEndElement
     273: dup
     274: aload_0
     275: getfield      #9                  // Field grammar:Lantlr/Grammar;
     278: invokespecial #75                 // Method antlr/RuleEndElement."<init>":(Lantlr/Grammar;)V
     281: putfield      #127                // Field ruleEnd:Lantlr/RuleEndElement;
     284: aload         7
     286: aload_0
     287: getfield      #127                // Field ruleEnd:Lantlr/RuleEndElement;
     290: invokevirtual #76                 // Method antlr/RuleBlock.setEndElement:(Lantlr/RuleEndElement;)V
     293: aload_0
     294: iconst_0
     295: putfield      #5                  // Field nested:I
     298: return

  public void endAlt();
    Code:
       0: aload_0
       1: invokespecial #128                // Method antlr/DefineGrammarSymbols.endAlt:()V
       4: aload_0
       5: getfield      #5                  // Field nested:I
       8: ifne          22
      11: aload_0
      12: aload_0
      13: getfield      #127                // Field ruleEnd:Lantlr/RuleEndElement;
      16: invokevirtual #129                // Method addElementToCurrentAlt:(Lantlr/AlternativeElement;)V
      19: goto          33
      22: aload_0
      23: aload_0
      24: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      27: getfield      #53                 // Field antlr/BlockContext.blockEnd:Lantlr/BlockEndElement;
      30: invokevirtual #129                // Method addElementToCurrentAlt:(Lantlr/AlternativeElement;)V
      33: aload_0
      34: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      37: dup
      38: getfield      #50                 // Field antlr/BlockContext.altNum:I
      41: iconst_1
      42: iadd
      43: putfield      #50                 // Field antlr/BlockContext.altNum:I
      46: return

  public void endChildList();
    Code:
       0: aload_0
       1: invokespecial #130                // Method antlr/DefineGrammarSymbols.endChildList:()V
       4: new           #51                 // class antlr/BlockEndElement
       7: dup
       8: aload_0
       9: getfield      #9                  // Field grammar:Lantlr/Grammar;
      12: invokespecial #52                 // Method antlr/BlockEndElement."<init>":(Lantlr/Grammar;)V
      15: astore_1
      16: aload_1
      17: aload_0
      18: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      21: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      24: putfield      #54                 // Field antlr/BlockEndElement.block:Lantlr/AlternativeBlock;
      27: aload_0
      28: aload_1
      29: invokevirtual #129                // Method addElementToCurrentAlt:(Lantlr/AlternativeElement;)V
      32: return

  public void endExceptionGroup();
    Code:
       0: aload_0
       1: invokespecial #131                // Method antlr/DefineGrammarSymbols.endExceptionGroup:()V
       4: return

  public void endExceptionSpec();
    Code:
       0: aload_0
       1: invokespecial #132                // Method antlr/DefineGrammarSymbols.endExceptionSpec:()V
       4: aload_0
       5: getfield      #7                  // Field currentExceptionSpec:Lantlr/ExceptionSpec;
       8: ifnonnull     20
      11: aload_0
      12: getfield      #11                 // Field tool:Lantlr/Tool;
      15: ldc           #133                // String exception processing internal error -- no active exception spec
      17: invokevirtual #35                 // Method antlr/Tool.panic:(Ljava/lang/String;)V
      20: aload_0
      21: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      24: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      27: instanceof    #33                 // class antlr/RuleBlock
      30: ifeq          53
      33: aload_0
      34: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      37: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      40: checkcast     #33                 // class antlr/RuleBlock
      43: aload_0
      44: getfield      #7                  // Field currentExceptionSpec:Lantlr/ExceptionSpec;
      47: invokevirtual #134                // Method antlr/RuleBlock.addExceptionSpec:(Lantlr/ExceptionSpec;)V
      50: goto          119
      53: aload_0
      54: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      57: invokevirtual #135                // Method antlr/BlockContext.currentAlt:()Lantlr/Alternative;
      60: getfield      #136                // Field antlr/Alternative.exceptionSpec:Lantlr/ExceptionSpec;
      63: ifnull        105
      66: aload_0
      67: getfield      #11                 // Field tool:Lantlr/Tool;
      70: ldc           #137                // String Alternative already has an exception specification
      72: aload_0
      73: getfield      #9                  // Field grammar:Lantlr/Grammar;
      76: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
      79: aload_0
      80: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      83: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      86: invokevirtual #138                // Method antlr/AlternativeBlock.getLine:()I
      89: aload_0
      90: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      93: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      96: invokevirtual #139                // Method antlr/AlternativeBlock.getColumn:()I
      99: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
     102: goto          119
     105: aload_0
     106: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
     109: invokevirtual #135                // Method antlr/BlockContext.currentAlt:()Lantlr/Alternative;
     112: aload_0
     113: getfield      #7                  // Field currentExceptionSpec:Lantlr/ExceptionSpec;
     116: putfield      #136                // Field antlr/Alternative.exceptionSpec:Lantlr/ExceptionSpec;
     119: aload_0
     120: aconst_null
     121: putfield      #7                  // Field currentExceptionSpec:Lantlr/ExceptionSpec;
     124: return

  public void endGrammar();
    Code:
       0: aload_0
       1: getfield      #6                  // Field grammarError:Z
       4: ifeq          14
       7: aload_0
       8: invokevirtual #140                // Method abortGrammar:()V
      11: goto          18
      14: aload_0
      15: invokespecial #141                // Method antlr/DefineGrammarSymbols.endGrammar:()V
      18: return

  public void endRule(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #142                // Method antlr/DefineGrammarSymbols.endRule:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #4                  // Field blocks:Lantlr/collections/Stack;
       9: invokeinterface #143,  1          // InterfaceMethod antlr/collections/Stack.pop:()Ljava/lang/Object;
      14: checkcast     #45                 // class antlr/BlockContext
      17: astore_2
      18: aload_0
      19: getfield      #127                // Field ruleEnd:Lantlr/RuleEndElement;
      22: aload_2
      23: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      26: putfield      #77                 // Field antlr/RuleEndElement.block:Lantlr/AlternativeBlock;
      29: aload_0
      30: getfield      #127                // Field ruleEnd:Lantlr/RuleEndElement;
      33: getfield      #77                 // Field antlr/RuleEndElement.block:Lantlr/AlternativeBlock;
      36: invokevirtual #114                // Method antlr/AlternativeBlock.prepareForAnalysis:()V
      39: return

  public void endSubRule();
    Code:
       0: aload_0
       1: invokespecial #144                // Method antlr/DefineGrammarSymbols.endSubRule:()V
       4: aload_0
       5: dup
       6: getfield      #5                  // Field nested:I
       9: iconst_1
      10: isub
      11: putfield      #5                  // Field nested:I
      14: aload_0
      15: getfield      #4                  // Field blocks:Lantlr/collections/Stack;
      18: invokeinterface #143,  1          // InterfaceMethod antlr/collections/Stack.pop:()Ljava/lang/Object;
      23: checkcast     #45                 // class antlr/BlockContext
      26: astore_1
      27: aload_1
      28: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      31: astore_2
      32: aload_2
      33: getfield      #145                // Field antlr/AlternativeBlock.not:Z
      36: ifeq          148
      39: aload_2
      40: instanceof    #146                // class antlr/SynPredBlock
      43: ifne          148
      46: aload_2
      47: instanceof    #147                // class antlr/ZeroOrMoreBlock
      50: ifne          148
      53: aload_2
      54: instanceof    #148                // class antlr/OneOrMoreBlock
      57: ifne          148
      60: aload_0
      61: getfield      #149                // Field analyzer:Lantlr/LLkAnalyzer;
      64: aload_2
      65: aload_0
      66: getfield      #9                  // Field grammar:Lantlr/Grammar;
      69: instanceof    #116                // class antlr/LexerGrammar
      72: invokevirtual #150                // Method antlr/LLkAnalyzer.subruleCanBeInverted:(Lantlr/AlternativeBlock;Z)Z
      75: ifne          148
      78: ldc           #151                // String line.separator
      80: invokestatic  #152                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      83: astore_3
      84: aload_0
      85: getfield      #11                 // Field tool:Lantlr/Tool;
      88: new           #12                 // class java/lang/StringBuffer
      91: dup
      92: invokespecial #13                 // Method java/lang/StringBuffer."<init>":()V
      95: ldc           #153                // String This subrule cannot be inverted.  Only subrules of the form:
      97: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     100: aload_3
     101: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     104: ldc           #154                // String     (T1|T2|T3...) or
     106: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     109: aload_3
     110: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     113: ldc           #155                // String     (\'c1\'|\'c2\'|\'c3\'...)
     115: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     118: aload_3
     119: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     122: ldc           #156                // String may be inverted (ranges are also allowed).
     124: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     127: invokevirtual #17                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     130: aload_0
     131: getfield      #9                  // Field grammar:Lantlr/Grammar;
     134: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
     137: aload_2
     138: invokevirtual #138                // Method antlr/AlternativeBlock.getLine:()I
     141: aload_2
     142: invokevirtual #139                // Method antlr/AlternativeBlock.getColumn:()I
     145: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
     148: aload_2
     149: instanceof    #146                // class antlr/SynPredBlock
     152: ifeq          201
     155: aload_2
     156: checkcast     #146                // class antlr/SynPredBlock
     159: astore_3
     160: aload_0
     161: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
     164: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
     167: iconst_1
     168: putfield      #157                // Field antlr/AlternativeBlock.hasASynPred:Z
     171: aload_0
     172: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
     175: invokevirtual #135                // Method antlr/BlockContext.currentAlt:()Lantlr/Alternative;
     178: aload_3
     179: putfield      #158                // Field antlr/Alternative.synPred:Lantlr/SynPredBlock;
     182: aload_0
     183: getfield      #9                  // Field grammar:Lantlr/Grammar;
     186: iconst_1
     187: putfield      #159                // Field antlr/Grammar.hasSyntacticPredicate:Z
     190: aload_3
     191: aload_0
     192: getfield      #9                  // Field grammar:Lantlr/Grammar;
     195: invokevirtual #160                // Method antlr/SynPredBlock.removeTrackingOfRuleRefs:(Lantlr/Grammar;)V
     198: goto          206
     201: aload_0
     202: aload_2
     203: invokevirtual #129                // Method addElementToCurrentAlt:(Lantlr/AlternativeElement;)V
     206: aload_1
     207: getfield      #53                 // Field antlr/BlockContext.blockEnd:Lantlr/BlockEndElement;
     210: getfield      #54                 // Field antlr/BlockEndElement.block:Lantlr/AlternativeBlock;
     213: invokevirtual #114                // Method antlr/AlternativeBlock.prepareForAnalysis:()V
     216: return

  public void endTree();
    Code:
       0: aload_0
       1: invokespecial #161                // Method antlr/DefineGrammarSymbols.endTree:()V
       4: aload_0
       5: getfield      #4                  // Field blocks:Lantlr/collections/Stack;
       8: invokeinterface #143,  1          // InterfaceMethod antlr/collections/Stack.pop:()Ljava/lang/Object;
      13: checkcast     #45                 // class antlr/BlockContext
      16: astore_1
      17: aload_0
      18: aload_1
      19: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      22: invokevirtual #129                // Method addElementToCurrentAlt:(Lantlr/AlternativeElement;)V
      25: return

  public void hasError();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #6                  // Field grammarError:Z
       5: return

  private void labelElement(antlr.AlternativeElement, antlr.Token);
    Code:
       0: aload_2
       1: ifnull        135
       4: iconst_0
       5: istore_3
       6: iload_3
       7: aload_0
       8: getfield      #20                 // Field ruleBlock:Lantlr/RuleBlock;
      11: getfield      #162                // Field antlr/RuleBlock.labeledElements:Lantlr/collections/impl/Vector;
      14: invokevirtual #78                 // Method antlr/collections/impl/Vector.size:()I
      17: if_icmpge     116
      20: aload_0
      21: getfield      #20                 // Field ruleBlock:Lantlr/RuleBlock;
      24: getfield      #162                // Field antlr/RuleBlock.labeledElements:Lantlr/collections/impl/Vector;
      27: iload_3
      28: invokevirtual #79                 // Method antlr/collections/impl/Vector.elementAt:(I)Ljava/lang/Object;
      31: checkcast     #163                // class antlr/AlternativeElement
      34: astore        4
      36: aload         4
      38: invokevirtual #164                // Method antlr/AlternativeElement.getLabel:()Ljava/lang/String;
      41: astore        5
      43: aload         5
      45: ifnull        110
      48: aload         5
      50: aload_2
      51: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
      54: invokevirtual #89                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      57: ifeq          110
      60: aload_0
      61: getfield      #11                 // Field tool:Lantlr/Tool;
      64: new           #12                 // class java/lang/StringBuffer
      67: dup
      68: invokespecial #13                 // Method java/lang/StringBuffer."<init>":()V
      71: ldc           #165                // String Label \'
      73: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      76: aload_2
      77: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
      80: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      83: ldc           #166                // String \' has already been defined
      85: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      88: invokevirtual #17                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      91: aload_0
      92: getfield      #9                  // Field grammar:Lantlr/Grammar;
      95: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
      98: aload_2
      99: invokevirtual #59                 // Method antlr/Token.getLine:()I
     102: aload_2
     103: invokevirtual #60                 // Method antlr/Token.getColumn:()I
     106: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
     109: return
     110: iinc          3, 1
     113: goto          6
     116: aload_1
     117: aload_2
     118: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
     121: invokevirtual #167                // Method antlr/AlternativeElement.setLabel:(Ljava/lang/String;)V
     124: aload_0
     125: getfield      #20                 // Field ruleBlock:Lantlr/RuleBlock;
     128: getfield      #162                // Field antlr/RuleBlock.labeledElements:Lantlr/collections/impl/Vector;
     131: aload_1
     132: invokevirtual #168                // Method antlr/collections/impl/Vector.appendElement:(Ljava/lang/Object;)V
     135: return

  public void noAutoGenSubRule();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
       4: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
       7: iconst_0
       8: invokevirtual #169                // Method antlr/AlternativeBlock.setAutoGen:(Z)V
      11: return

  public void oneOrMoreSubRule();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
       4: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
       7: getfield      #145                // Field antlr/AlternativeBlock.not:Z
      10: ifeq          49
      13: aload_0
      14: getfield      #11                 // Field tool:Lantlr/Tool;
      17: ldc           #170                // String \'~\' cannot be applied to (...)* subrule
      19: aload_0
      20: getfield      #9                  // Field grammar:Lantlr/Grammar;
      23: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
      26: aload_0
      27: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      30: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      33: invokevirtual #138                // Method antlr/AlternativeBlock.getLine:()I
      36: aload_0
      37: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      40: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      43: invokevirtual #139                // Method antlr/AlternativeBlock.getColumn:()I
      46: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
      49: new           #148                // class antlr/OneOrMoreBlock
      52: dup
      53: aload_0
      54: getfield      #9                  // Field grammar:Lantlr/Grammar;
      57: invokespecial #171                // Method antlr/OneOrMoreBlock."<init>":(Lantlr/Grammar;)V
      60: astore_1
      61: aload_1
      62: aload_0
      63: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      66: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      69: invokestatic  #172                // Method setBlock:(Lantlr/AlternativeBlock;Lantlr/AlternativeBlock;)V
      72: aload_0
      73: getfield      #4                  // Field blocks:Lantlr/collections/Stack;
      76: invokeinterface #143,  1          // InterfaceMethod antlr/collections/Stack.pop:()Ljava/lang/Object;
      81: checkcast     #45                 // class antlr/BlockContext
      84: astore_2
      85: aload_0
      86: getfield      #4                  // Field blocks:Lantlr/collections/Stack;
      89: new           #45                 // class antlr/BlockContext
      92: dup
      93: invokespecial #46                 // Method antlr/BlockContext."<init>":()V
      96: invokeinterface #47,  2           // InterfaceMethod antlr/collections/Stack.push:(Ljava/lang/Object;)V
     101: aload_0
     102: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
     105: aload_1
     106: putfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
     109: aload_0
     110: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
     113: aload_2
     114: getfield      #53                 // Field antlr/BlockContext.blockEnd:Lantlr/BlockEndElement;
     117: putfield      #53                 // Field antlr/BlockContext.blockEnd:Lantlr/BlockEndElement;
     120: aload_0
     121: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
     124: getfield      #53                 // Field antlr/BlockContext.blockEnd:Lantlr/BlockEndElement;
     127: aload_1
     128: putfield      #54                 // Field antlr/BlockEndElement.block:Lantlr/AlternativeBlock;
     131: return

  public void optionalSubRule();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
       4: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
       7: getfield      #145                // Field antlr/AlternativeBlock.not:Z
      10: ifeq          49
      13: aload_0
      14: getfield      #11                 // Field tool:Lantlr/Tool;
      17: ldc           #173                // String \'~\' cannot be applied to (...)? subrule
      19: aload_0
      20: getfield      #9                  // Field grammar:Lantlr/Grammar;
      23: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
      26: aload_0
      27: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      30: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      33: invokevirtual #138                // Method antlr/AlternativeBlock.getLine:()I
      36: aload_0
      37: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      40: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      43: invokevirtual #139                // Method antlr/AlternativeBlock.getColumn:()I
      46: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
      49: aload_0
      50: iconst_0
      51: invokevirtual #174                // Method beginAlt:(Z)V
      54: aload_0
      55: invokevirtual #175                // Method endAlt:()V
      58: return

  public void refAction(antlr.Token);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #176                // Method antlr/DefineGrammarSymbols.refAction:(Lantlr/Token;)V
       5: aload_0
       6: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
       9: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      12: iconst_1
      13: putfield      #177                // Field antlr/AlternativeBlock.hasAnAction:Z
      16: aload_0
      17: new           #178                // class antlr/ActionElement
      20: dup
      21: aload_0
      22: getfield      #9                  // Field grammar:Lantlr/Grammar;
      25: aload_1
      26: invokespecial #179                // Method antlr/ActionElement."<init>":(Lantlr/Grammar;Lantlr/Token;)V
      29: invokevirtual #129                // Method addElementToCurrentAlt:(Lantlr/AlternativeElement;)V
      32: return

  public void setUserExceptions(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
       4: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
       7: checkcast     #33                 // class antlr/RuleBlock
      10: aload_1
      11: putfield      #180                // Field antlr/RuleBlock.throwsSpec:Ljava/lang/String;
      14: return

  public void refArgAction(antlr.Token);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
       4: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
       7: checkcast     #33                 // class antlr/RuleBlock
      10: aload_1
      11: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
      14: putfield      #181                // Field antlr/RuleBlock.argAction:Ljava/lang/String;
      17: return

  public void refCharLiteral(antlr.Token, antlr.Token, boolean, int, boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field grammar:Lantlr/Grammar;
       4: instanceof    #116                // class antlr/LexerGrammar
       7: ifne          35
      10: aload_0
      11: getfield      #11                 // Field tool:Lantlr/Tool;
      14: ldc           #182                // String Character literal only valid in lexer
      16: aload_0
      17: getfield      #9                  // Field grammar:Lantlr/Grammar;
      20: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
      23: aload_1
      24: invokevirtual #59                 // Method antlr/Token.getLine:()I
      27: aload_1
      28: invokevirtual #60                 // Method antlr/Token.getColumn:()I
      31: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
      34: return
      35: aload_0
      36: aload_1
      37: aload_2
      38: iload_3
      39: iload         4
      41: iload         5
      43: invokespecial #183                // Method antlr/DefineGrammarSymbols.refCharLiteral:(Lantlr/Token;Lantlr/Token;ZIZ)V
      46: new           #184                // class antlr/CharLiteralElement
      49: dup
      50: aload_0
      51: getfield      #9                  // Field grammar:Lantlr/Grammar;
      54: checkcast     #116                // class antlr/LexerGrammar
      57: aload_1
      58: iload_3
      59: iload         4
      61: invokespecial #185                // Method antlr/CharLiteralElement."<init>":(Lantlr/LexerGrammar;Lantlr/Token;ZI)V
      64: astore        6
      66: aload_0
      67: getfield      #9                  // Field grammar:Lantlr/Grammar;
      70: checkcast     #116                // class antlr/LexerGrammar
      73: getfield      #186                // Field antlr/LexerGrammar.caseSensitive:Z
      76: ifne          132
      79: aload         6
      81: invokevirtual #187                // Method antlr/CharLiteralElement.getType:()I
      84: sipush        128
      87: if_icmpge     132
      90: aload         6
      92: invokevirtual #187                // Method antlr/CharLiteralElement.getType:()I
      95: i2c
      96: invokestatic  #188                // Method java/lang/Character.toLowerCase:(C)C
      99: aload         6
     101: invokevirtual #187                // Method antlr/CharLiteralElement.getType:()I
     104: i2c
     105: if_icmpeq     132
     108: aload_0
     109: getfield      #11                 // Field tool:Lantlr/Tool;
     112: ldc           #189                // String Character literal must be lowercase when caseSensitive=false
     114: aload_0
     115: getfield      #9                  // Field grammar:Lantlr/Grammar;
     118: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
     121: aload_1
     122: invokevirtual #59                 // Method antlr/Token.getLine:()I
     125: aload_1
     126: invokevirtual #60                 // Method antlr/Token.getColumn:()I
     129: invokevirtual #190                // Method antlr/Tool.warning:(Ljava/lang/String;Ljava/lang/String;II)V
     132: aload_0
     133: aload         6
     135: invokevirtual #129                // Method addElementToCurrentAlt:(Lantlr/AlternativeElement;)V
     138: aload_0
     139: aload         6
     141: aload_2
     142: invokespecial #55                 // Method labelElement:(Lantlr/AlternativeElement;Lantlr/Token;)V
     145: aload_0
     146: getfield      #20                 // Field ruleBlock:Lantlr/RuleBlock;
     149: invokevirtual #191                // Method antlr/RuleBlock.getIgnoreRule:()Ljava/lang/String;
     152: astore        7
     154: iload         5
     156: ifne          175
     159: aload         7
     161: ifnull        175
     164: aload_0
     165: aload_0
     166: aload         7
     168: aload_1
     169: invokespecial #192                // Method createOptionalRuleRef:(Ljava/lang/String;Lantlr/Token;)Lantlr/AlternativeBlock;
     172: invokevirtual #129                // Method addElementToCurrentAlt:(Lantlr/AlternativeElement;)V
     175: return

  public void refCharRange(antlr.Token, antlr.Token, antlr.Token, int, boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field grammar:Lantlr/Grammar;
       4: instanceof    #116                // class antlr/LexerGrammar
       7: ifne          35
      10: aload_0
      11: getfield      #11                 // Field tool:Lantlr/Tool;
      14: ldc           #193                // String Character range only valid in lexer
      16: aload_0
      17: getfield      #9                  // Field grammar:Lantlr/Grammar;
      20: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
      23: aload_1
      24: invokevirtual #59                 // Method antlr/Token.getLine:()I
      27: aload_1
      28: invokevirtual #60                 // Method antlr/Token.getColumn:()I
      31: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
      34: return
      35: aload_1
      36: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
      39: invokestatic  #194                // Method antlr/ANTLRLexer.tokenTypeForCharLiteral:(Ljava/lang/String;)I
      42: istore        6
      44: aload_2
      45: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
      48: invokestatic  #194                // Method antlr/ANTLRLexer.tokenTypeForCharLiteral:(Ljava/lang/String;)I
      51: istore        7
      53: iload         7
      55: iload         6
      57: if_icmpge     85
      60: aload_0
      61: getfield      #11                 // Field tool:Lantlr/Tool;
      64: ldc           #195                // String Malformed range.
      66: aload_0
      67: getfield      #9                  // Field grammar:Lantlr/Grammar;
      70: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
      73: aload_1
      74: invokevirtual #59                 // Method antlr/Token.getLine:()I
      77: aload_1
      78: invokevirtual #60                 // Method antlr/Token.getColumn:()I
      81: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
      84: return
      85: aload_0
      86: getfield      #9                  // Field grammar:Lantlr/Grammar;
      89: checkcast     #116                // class antlr/LexerGrammar
      92: getfield      #186                // Field antlr/LexerGrammar.caseSensitive:Z
      95: ifne          186
      98: iload         6
     100: sipush        128
     103: if_icmpge     142
     106: iload         6
     108: i2c
     109: invokestatic  #188                // Method java/lang/Character.toLowerCase:(C)C
     112: iload         6
     114: i2c
     115: if_icmpeq     142
     118: aload_0
     119: getfield      #11                 // Field tool:Lantlr/Tool;
     122: ldc           #189                // String Character literal must be lowercase when caseSensitive=false
     124: aload_0
     125: getfield      #9                  // Field grammar:Lantlr/Grammar;
     128: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
     131: aload_1
     132: invokevirtual #59                 // Method antlr/Token.getLine:()I
     135: aload_1
     136: invokevirtual #60                 // Method antlr/Token.getColumn:()I
     139: invokevirtual #190                // Method antlr/Tool.warning:(Ljava/lang/String;Ljava/lang/String;II)V
     142: iload         7
     144: sipush        128
     147: if_icmpge     186
     150: iload         7
     152: i2c
     153: invokestatic  #188                // Method java/lang/Character.toLowerCase:(C)C
     156: iload         7
     158: i2c
     159: if_icmpeq     186
     162: aload_0
     163: getfield      #11                 // Field tool:Lantlr/Tool;
     166: ldc           #189                // String Character literal must be lowercase when caseSensitive=false
     168: aload_0
     169: getfield      #9                  // Field grammar:Lantlr/Grammar;
     172: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
     175: aload_2
     176: invokevirtual #59                 // Method antlr/Token.getLine:()I
     179: aload_2
     180: invokevirtual #60                 // Method antlr/Token.getColumn:()I
     183: invokevirtual #190                // Method antlr/Tool.warning:(Ljava/lang/String;Ljava/lang/String;II)V
     186: aload_0
     187: aload_1
     188: aload_2
     189: aload_3
     190: iload         4
     192: iload         5
     194: invokespecial #196                // Method antlr/DefineGrammarSymbols.refCharRange:(Lantlr/Token;Lantlr/Token;Lantlr/Token;IZ)V
     197: new           #197                // class antlr/CharRangeElement
     200: dup
     201: aload_0
     202: getfield      #9                  // Field grammar:Lantlr/Grammar;
     205: checkcast     #116                // class antlr/LexerGrammar
     208: aload_1
     209: aload_2
     210: iload         4
     212: invokespecial #198                // Method antlr/CharRangeElement."<init>":(Lantlr/LexerGrammar;Lantlr/Token;Lantlr/Token;I)V
     215: astore        8
     217: aload_0
     218: aload         8
     220: invokevirtual #129                // Method addElementToCurrentAlt:(Lantlr/AlternativeElement;)V
     223: aload_0
     224: aload         8
     226: aload_3
     227: invokespecial #55                 // Method labelElement:(Lantlr/AlternativeElement;Lantlr/Token;)V
     230: aload_0
     231: getfield      #20                 // Field ruleBlock:Lantlr/RuleBlock;
     234: invokevirtual #191                // Method antlr/RuleBlock.getIgnoreRule:()Ljava/lang/String;
     237: astore        9
     239: iload         5
     241: ifne          260
     244: aload         9
     246: ifnull        260
     249: aload_0
     250: aload_0
     251: aload         9
     253: aload_1
     254: invokespecial #192                // Method createOptionalRuleRef:(Ljava/lang/String;Lantlr/Token;)Lantlr/AlternativeBlock;
     257: invokevirtual #129                // Method addElementToCurrentAlt:(Lantlr/AlternativeElement;)V
     260: return

  public void refTokensSpecElementOption(antlr.Token, antlr.Token, antlr.Token);
    Code:
       0: aload_0
       1: getfield      #9                  // Field grammar:Lantlr/Grammar;
       4: getfield      #199                // Field antlr/Grammar.tokenManager:Lantlr/TokenManager;
       7: aload_1
       8: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
      11: invokeinterface #200,  2          // InterfaceMethod antlr/TokenManager.getTokenSymbol:(Ljava/lang/String;)Lantlr/TokenSymbol;
      16: astore        4
      18: aload         4
      20: ifnonnull     57
      23: aload_0
      24: getfield      #11                 // Field tool:Lantlr/Tool;
      27: new           #12                 // class java/lang/StringBuffer
      30: dup
      31: invokespecial #13                 // Method java/lang/StringBuffer."<init>":()V
      34: ldc           #201                // String cannot find
      36: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      39: aload_1
      40: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
      43: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      46: ldc           #202                // String in tokens {...}
      48: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      51: invokevirtual #17                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      54: invokevirtual #35                 // Method antlr/Tool.panic:(Ljava/lang/String;)V
      57: aload_2
      58: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
      61: ldc           #203                // String AST
      63: invokevirtual #89                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      66: ifeq          81
      69: aload         4
      71: aload_3
      72: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
      75: invokevirtual #204                // Method antlr/TokenSymbol.setASTNodeType:(Ljava/lang/String;)V
      78: goto          128
      81: aload_0
      82: getfield      #9                  // Field grammar:Lantlr/Grammar;
      85: getfield      #82                 // Field antlr/Grammar.antlrTool:Lantlr/Tool;
      88: new           #12                 // class java/lang/StringBuffer
      91: dup
      92: invokespecial #13                 // Method java/lang/StringBuffer."<init>":()V
      95: ldc           #205                // String invalid tokens {...} element option:
      97: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     100: aload_2
     101: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
     104: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     107: invokevirtual #17                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     110: aload_0
     111: getfield      #9                  // Field grammar:Lantlr/Grammar;
     114: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
     117: aload_2
     118: invokevirtual #59                 // Method antlr/Token.getLine:()I
     121: aload_2
     122: invokevirtual #60                 // Method antlr/Token.getColumn:()I
     125: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
     128: return

  public void refElementOption(antlr.Token, antlr.Token);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
       4: invokevirtual #206                // Method antlr/BlockContext.currentElement:()Lantlr/AlternativeElement;
       7: astore_3
       8: aload_3
       9: instanceof    #207                // class antlr/StringLiteralElement
      12: ifne          29
      15: aload_3
      16: instanceof    #208                // class antlr/TokenRefElement
      19: ifne          29
      22: aload_3
      23: instanceof    #209                // class antlr/WildcardElement
      26: ifeq          41
      29: aload_3
      30: checkcast     #210                // class antlr/GrammarAtom
      33: aload_1
      34: aload_2
      35: invokevirtual #211                // Method antlr/GrammarAtom.setOption:(Lantlr/Token;Lantlr/Token;)V
      38: goto          90
      41: aload_0
      42: getfield      #11                 // Field tool:Lantlr/Tool;
      45: new           #12                 // class java/lang/StringBuffer
      48: dup
      49: invokespecial #13                 // Method java/lang/StringBuffer."<init>":()V
      52: ldc           #212                // String cannot use element option (
      54: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      57: aload_1
      58: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
      61: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      64: ldc           #213                // String ) for this kind of element
      66: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      69: invokevirtual #17                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      72: aload_0
      73: getfield      #9                  // Field grammar:Lantlr/Grammar;
      76: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
      79: aload_1
      80: invokevirtual #59                 // Method antlr/Token.getLine:()I
      83: aload_1
      84: invokevirtual #60                 // Method antlr/Token.getColumn:()I
      87: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
      90: return

  public void refExceptionHandler(antlr.Token, antlr.Token);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #214                // Method antlr/DefineGrammarSymbols.refExceptionHandler:(Lantlr/Token;Lantlr/Token;)V
       6: aload_0
       7: getfield      #7                  // Field currentExceptionSpec:Lantlr/ExceptionSpec;
      10: ifnonnull     22
      13: aload_0
      14: getfield      #11                 // Field tool:Lantlr/Tool;
      17: ldc           #215                // String exception handler processing internal error
      19: invokevirtual #35                 // Method antlr/Tool.panic:(Ljava/lang/String;)V
      22: aload_0
      23: getfield      #7                  // Field currentExceptionSpec:Lantlr/ExceptionSpec;
      26: new           #216                // class antlr/ExceptionHandler
      29: dup
      30: aload_1
      31: aload_2
      32: invokespecial #217                // Method antlr/ExceptionHandler."<init>":(Lantlr/Token;Lantlr/Token;)V
      35: invokevirtual #218                // Method antlr/ExceptionSpec.addHandler:(Lantlr/ExceptionHandler;)V
      38: return

  public void refInitAction(antlr.Token);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #176                // Method antlr/DefineGrammarSymbols.refAction:(Lantlr/Token;)V
       5: aload_0
       6: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
       9: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      12: aload_1
      13: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
      16: invokevirtual #219                // Method antlr/AlternativeBlock.setInitAction:(Ljava/lang/String;)V
      19: return

  public void refMemberAction(antlr.Token);
    Code:
       0: aload_0
       1: getfield      #9                  // Field grammar:Lantlr/Grammar;
       4: aload_1
       5: putfield      #220                // Field antlr/Grammar.classMemberAction:Lantlr/Token;
       8: return

  public void refPreambleAction(antlr.Token);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #221                // Method antlr/DefineGrammarSymbols.refPreambleAction:(Lantlr/Token;)V
       5: return

  public void refReturnAction(antlr.Token);
    Code:
       0: aload_0
       1: getfield      #9                  // Field grammar:Lantlr/Grammar;
       4: instanceof    #116                // class antlr/LexerGrammar
       7: ifeq          76
      10: aload_0
      11: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      14: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      17: checkcast     #33                 // class antlr/RuleBlock
      20: invokevirtual #222                // Method antlr/RuleBlock.getRuleName:()Ljava/lang/String;
      23: invokestatic  #108                // Method antlr/CodeGenerator.encodeLexerRuleName:(Ljava/lang/String;)Ljava/lang/String;
      26: astore_2
      27: aload_0
      28: getfield      #9                  // Field grammar:Lantlr/Grammar;
      31: aload_2
      32: invokevirtual #124                // Method antlr/Grammar.getSymbol:(Ljava/lang/String;)Lantlr/GrammarSymbol;
      35: checkcast     #80                 // class antlr/RuleSymbol
      38: astore_3
      39: aload_3
      40: getfield      #87                 // Field antlr/RuleSymbol.access:Ljava/lang/String;
      43: ldc           #88                 // String public
      45: invokevirtual #89                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      48: ifeq          76
      51: aload_0
      52: getfield      #11                 // Field tool:Lantlr/Tool;
      55: ldc           #223                // String public Lexical rules cannot specify return type
      57: aload_0
      58: getfield      #9                  // Field grammar:Lantlr/Grammar;
      61: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
      64: aload_1
      65: invokevirtual #59                 // Method antlr/Token.getLine:()I
      68: aload_1
      69: invokevirtual #60                 // Method antlr/Token.getColumn:()I
      72: invokevirtual #190                // Method antlr/Tool.warning:(Ljava/lang/String;Ljava/lang/String;II)V
      75: return
      76: aload_0
      77: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      80: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      83: checkcast     #33                 // class antlr/RuleBlock
      86: aload_1
      87: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
      90: putfield      #224                // Field antlr/RuleBlock.returnAction:Ljava/lang/String;
      93: return

  public void refRule(antlr.Token, antlr.Token, antlr.Token, antlr.Token, int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field grammar:Lantlr/Grammar;
       4: instanceof    #116                // class antlr/LexerGrammar
       7: ifeq          84
      10: aload_2
      11: getfield      #115                // Field antlr/Token.type:I
      14: bipush        24
      16: if_icmpeq     54
      19: aload_0
      20: getfield      #11                 // Field tool:Lantlr/Tool;
      23: new           #12                 // class java/lang/StringBuffer
      26: dup
      27: invokespecial #13                 // Method java/lang/StringBuffer."<init>":()V
      30: ldc           #225                // String Parser rule
      32: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      35: aload_2
      36: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
      39: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      42: ldc           #226                // String  referenced in lexer
      44: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      47: invokevirtual #17                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      50: invokevirtual #18                 // Method antlr/Tool.error:(Ljava/lang/String;)V
      53: return
      54: iload         5
      56: iconst_2
      57: if_icmpne     84
      60: aload_0
      61: getfield      #11                 // Field tool:Lantlr/Tool;
      64: ldc           #227                // String AST specification ^ not allowed in lexer
      66: aload_0
      67: getfield      #9                  // Field grammar:Lantlr/Grammar;
      70: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
      73: aload_2
      74: invokevirtual #59                 // Method antlr/Token.getLine:()I
      77: aload_2
      78: invokevirtual #60                 // Method antlr/Token.getColumn:()I
      81: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
      84: aload_0
      85: aload_1
      86: aload_2
      87: aload_3
      88: aload         4
      90: iload         5
      92: invokespecial #228                // Method antlr/DefineGrammarSymbols.refRule:(Lantlr/Token;Lantlr/Token;Lantlr/Token;Lantlr/Token;I)V
      95: aload_0
      96: new           #93                 // class antlr/RuleRefElement
      99: dup
     100: aload_0
     101: getfield      #9                  // Field grammar:Lantlr/Grammar;
     104: aload_2
     105: iload         5
     107: invokespecial #97                 // Method antlr/RuleRefElement."<init>":(Lantlr/Grammar;Lantlr/Token;I)V
     110: putfield      #229                // Field lastRuleRef:Lantlr/RuleRefElement;
     113: aload         4
     115: ifnull        130
     118: aload_0
     119: getfield      #229                // Field lastRuleRef:Lantlr/RuleRefElement;
     122: aload         4
     124: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
     127: invokevirtual #230                // Method antlr/RuleRefElement.setArgs:(Ljava/lang/String;)V
     130: aload_1
     131: ifnull        145
     134: aload_0
     135: getfield      #229                // Field lastRuleRef:Lantlr/RuleRefElement;
     138: aload_1
     139: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
     142: invokevirtual #231                // Method antlr/RuleRefElement.setIdAssign:(Ljava/lang/String;)V
     145: aload_0
     146: aload_0
     147: getfield      #229                // Field lastRuleRef:Lantlr/RuleRefElement;
     150: invokevirtual #129                // Method addElementToCurrentAlt:(Lantlr/AlternativeElement;)V
     153: aload_2
     154: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
     157: astore        6
     159: aload_2
     160: getfield      #115                // Field antlr/Token.type:I
     163: bipush        24
     165: if_icmpne     175
     168: aload         6
     170: invokestatic  #108                // Method antlr/CodeGenerator.encodeLexerRuleName:(Ljava/lang/String;)Ljava/lang/String;
     173: astore        6
     175: aload_0
     176: getfield      #9                  // Field grammar:Lantlr/Grammar;
     179: aload         6
     181: invokevirtual #124                // Method antlr/Grammar.getSymbol:(Ljava/lang/String;)Lantlr/GrammarSymbol;
     184: checkcast     #80                 // class antlr/RuleSymbol
     187: astore        7
     189: aload         7
     191: aload_0
     192: getfield      #229                // Field lastRuleRef:Lantlr/RuleRefElement;
     195: invokevirtual #105                // Method antlr/RuleSymbol.addReference:(Lantlr/RuleRefElement;)V
     198: aload_0
     199: aload_0
     200: getfield      #229                // Field lastRuleRef:Lantlr/RuleRefElement;
     203: aload_3
     204: invokespecial #55                 // Method labelElement:(Lantlr/AlternativeElement;Lantlr/Token;)V
     207: return

  public void refSemPred(antlr.Token);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #232                // Method antlr/DefineGrammarSymbols.refSemPred:(Lantlr/Token;)V
       5: aload_0
       6: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
       9: invokevirtual #135                // Method antlr/BlockContext.currentAlt:()Lantlr/Alternative;
      12: invokevirtual #233                // Method antlr/Alternative.atStart:()Z
      15: ifeq          35
      18: aload_0
      19: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      22: invokevirtual #135                // Method antlr/BlockContext.currentAlt:()Lantlr/Alternative;
      25: aload_1
      26: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
      29: putfield      #92                 // Field antlr/Alternative.semPred:Ljava/lang/String;
      32: goto          58
      35: new           #178                // class antlr/ActionElement
      38: dup
      39: aload_0
      40: getfield      #9                  // Field grammar:Lantlr/Grammar;
      43: aload_1
      44: invokespecial #179                // Method antlr/ActionElement."<init>":(Lantlr/Grammar;Lantlr/Token;)V
      47: astore_2
      48: aload_2
      49: iconst_1
      50: putfield      #234                // Field antlr/ActionElement.isSemPred:Z
      53: aload_0
      54: aload_2
      55: invokevirtual #129                // Method addElementToCurrentAlt:(Lantlr/AlternativeElement;)V
      58: return

  public void refStringLiteral(antlr.Token, antlr.Token, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: invokespecial #235                // Method antlr/DefineGrammarSymbols.refStringLiteral:(Lantlr/Token;Lantlr/Token;IZ)V
       9: aload_0
      10: getfield      #9                  // Field grammar:Lantlr/Grammar;
      13: instanceof    #56                 // class antlr/TreeWalkerGrammar
      16: ifeq          48
      19: iload_3
      20: iconst_2
      21: if_icmpne     48
      24: aload_0
      25: getfield      #11                 // Field tool:Lantlr/Tool;
      28: ldc           #236                // String ^ not allowed in here for tree-walker
      30: aload_0
      31: getfield      #9                  // Field grammar:Lantlr/Grammar;
      34: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
      37: aload_1
      38: invokevirtual #59                 // Method antlr/Token.getLine:()I
      41: aload_1
      42: invokevirtual #60                 // Method antlr/Token.getColumn:()I
      45: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
      48: new           #207                // class antlr/StringLiteralElement
      51: dup
      52: aload_0
      53: getfield      #9                  // Field grammar:Lantlr/Grammar;
      56: aload_1
      57: iload_3
      58: invokespecial #237                // Method antlr/StringLiteralElement."<init>":(Lantlr/Grammar;Lantlr/Token;I)V
      61: astore        5
      63: aload_0
      64: getfield      #9                  // Field grammar:Lantlr/Grammar;
      67: instanceof    #116                // class antlr/LexerGrammar
      70: ifeq          165
      73: aload_0
      74: getfield      #9                  // Field grammar:Lantlr/Grammar;
      77: checkcast     #116                // class antlr/LexerGrammar
      80: getfield      #186                // Field antlr/LexerGrammar.caseSensitive:Z
      83: ifne          165
      86: iconst_1
      87: istore        6
      89: iload         6
      91: aload_1
      92: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
      95: invokevirtual #238                // Method java/lang/String.length:()I
      98: iconst_1
      99: isub
     100: if_icmpge     165
     103: aload_1
     104: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
     107: iload         6
     109: invokevirtual #239                // Method java/lang/String.charAt:(I)C
     112: istore        7
     114: iload         7
     116: sipush        128
     119: if_icmpge     159
     122: iload         7
     124: invokestatic  #188                // Method java/lang/Character.toLowerCase:(C)C
     127: iload         7
     129: if_icmpeq     159
     132: aload_0
     133: getfield      #11                 // Field tool:Lantlr/Tool;
     136: ldc           #240                // String Characters of string literal must be lowercase when caseSensitive=false
     138: aload_0
     139: getfield      #9                  // Field grammar:Lantlr/Grammar;
     142: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
     145: aload_1
     146: invokevirtual #59                 // Method antlr/Token.getLine:()I
     149: aload_1
     150: invokevirtual #60                 // Method antlr/Token.getColumn:()I
     153: invokevirtual #190                // Method antlr/Tool.warning:(Ljava/lang/String;Ljava/lang/String;II)V
     156: goto          165
     159: iinc          6, 1
     162: goto          89
     165: aload_0
     166: aload         5
     168: invokevirtual #129                // Method addElementToCurrentAlt:(Lantlr/AlternativeElement;)V
     171: aload_0
     172: aload         5
     174: aload_2
     175: invokespecial #55                 // Method labelElement:(Lantlr/AlternativeElement;Lantlr/Token;)V
     178: aload_0
     179: getfield      #20                 // Field ruleBlock:Lantlr/RuleBlock;
     182: invokevirtual #191                // Method antlr/RuleBlock.getIgnoreRule:()Ljava/lang/String;
     185: astore        6
     187: iload         4
     189: ifne          208
     192: aload         6
     194: ifnull        208
     197: aload_0
     198: aload_0
     199: aload         6
     201: aload_1
     202: invokespecial #192                // Method createOptionalRuleRef:(Ljava/lang/String;Lantlr/Token;)Lantlr/AlternativeBlock;
     205: invokevirtual #129                // Method addElementToCurrentAlt:(Lantlr/AlternativeElement;)V
     208: return

  public void refToken(antlr.Token, antlr.Token, antlr.Token, antlr.Token, boolean, int, boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field grammar:Lantlr/Grammar;
       4: instanceof    #116                // class antlr/LexerGrammar
       7: ifeq          113
      10: iload         6
      12: iconst_2
      13: if_icmpne     40
      16: aload_0
      17: getfield      #11                 // Field tool:Lantlr/Tool;
      20: ldc           #227                // String AST specification ^ not allowed in lexer
      22: aload_0
      23: getfield      #9                  // Field grammar:Lantlr/Grammar;
      26: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
      29: aload_2
      30: invokevirtual #59                 // Method antlr/Token.getLine:()I
      33: aload_2
      34: invokevirtual #60                 // Method antlr/Token.getColumn:()I
      37: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
      40: iload         5
      42: ifeq          69
      45: aload_0
      46: getfield      #11                 // Field tool:Lantlr/Tool;
      49: ldc           #241                // String ~TOKEN is not allowed in lexer
      51: aload_0
      52: getfield      #9                  // Field grammar:Lantlr/Grammar;
      55: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
      58: aload_2
      59: invokevirtual #59                 // Method antlr/Token.getLine:()I
      62: aload_2
      63: invokevirtual #60                 // Method antlr/Token.getColumn:()I
      66: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
      69: aload_0
      70: aload_1
      71: aload_2
      72: aload_3
      73: aload         4
      75: iload         6
      77: invokevirtual #242                // Method refRule:(Lantlr/Token;Lantlr/Token;Lantlr/Token;Lantlr/Token;I)V
      80: aload_0
      81: getfield      #20                 // Field ruleBlock:Lantlr/RuleBlock;
      84: invokevirtual #191                // Method antlr/RuleBlock.getIgnoreRule:()Ljava/lang/String;
      87: astore        8
      89: iload         7
      91: ifne          218
      94: aload         8
      96: ifnull        218
      99: aload_0
     100: aload_0
     101: aload         8
     103: aload_2
     104: invokespecial #192                // Method createOptionalRuleRef:(Ljava/lang/String;Lantlr/Token;)Lantlr/AlternativeBlock;
     107: invokevirtual #129                // Method addElementToCurrentAlt:(Lantlr/AlternativeElement;)V
     110: goto          218
     113: aload_1
     114: ifnull        141
     117: aload_0
     118: getfield      #11                 // Field tool:Lantlr/Tool;
     121: ldc           #243                // String Assignment from token reference only allowed in lexer
     123: aload_0
     124: getfield      #9                  // Field grammar:Lantlr/Grammar;
     127: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
     130: aload_1
     131: invokevirtual #59                 // Method antlr/Token.getLine:()I
     134: aload_1
     135: invokevirtual #60                 // Method antlr/Token.getColumn:()I
     138: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
     141: aload         4
     143: ifnull        172
     146: aload_0
     147: getfield      #11                 // Field tool:Lantlr/Tool;
     150: ldc           #244                // String Token reference arguments only allowed in lexer
     152: aload_0
     153: getfield      #9                  // Field grammar:Lantlr/Grammar;
     156: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
     159: aload         4
     161: invokevirtual #59                 // Method antlr/Token.getLine:()I
     164: aload         4
     166: invokevirtual #60                 // Method antlr/Token.getColumn:()I
     169: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
     172: aload_0
     173: aload_1
     174: aload_2
     175: aload_3
     176: aload         4
     178: iload         5
     180: iload         6
     182: iload         7
     184: invokespecial #245                // Method antlr/DefineGrammarSymbols.refToken:(Lantlr/Token;Lantlr/Token;Lantlr/Token;Lantlr/Token;ZIZ)V
     187: new           #208                // class antlr/TokenRefElement
     190: dup
     191: aload_0
     192: getfield      #9                  // Field grammar:Lantlr/Grammar;
     195: aload_2
     196: iload         5
     198: iload         6
     200: invokespecial #246                // Method antlr/TokenRefElement."<init>":(Lantlr/Grammar;Lantlr/Token;ZI)V
     203: astore        8
     205: aload_0
     206: aload         8
     208: invokevirtual #129                // Method addElementToCurrentAlt:(Lantlr/AlternativeElement;)V
     211: aload_0
     212: aload         8
     214: aload_3
     215: invokespecial #55                 // Method labelElement:(Lantlr/AlternativeElement;Lantlr/Token;)V
     218: return

  public void refTokenRange(antlr.Token, antlr.Token, antlr.Token, int, boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field grammar:Lantlr/Grammar;
       4: instanceof    #116                // class antlr/LexerGrammar
       7: ifeq          35
      10: aload_0
      11: getfield      #11                 // Field tool:Lantlr/Tool;
      14: ldc           #247                // String Token range not allowed in lexer
      16: aload_0
      17: getfield      #9                  // Field grammar:Lantlr/Grammar;
      20: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
      23: aload_1
      24: invokevirtual #59                 // Method antlr/Token.getLine:()I
      27: aload_1
      28: invokevirtual #60                 // Method antlr/Token.getColumn:()I
      31: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
      34: return
      35: aload_0
      36: aload_1
      37: aload_2
      38: aload_3
      39: iload         4
      41: iload         5
      43: invokespecial #248                // Method antlr/DefineGrammarSymbols.refTokenRange:(Lantlr/Token;Lantlr/Token;Lantlr/Token;IZ)V
      46: new           #249                // class antlr/TokenRangeElement
      49: dup
      50: aload_0
      51: getfield      #9                  // Field grammar:Lantlr/Grammar;
      54: aload_1
      55: aload_2
      56: iload         4
      58: invokespecial #250                // Method antlr/TokenRangeElement."<init>":(Lantlr/Grammar;Lantlr/Token;Lantlr/Token;I)V
      61: astore        6
      63: aload         6
      65: getfield      #251                // Field antlr/TokenRangeElement.end:I
      68: aload         6
      70: getfield      #252                // Field antlr/TokenRangeElement.begin:I
      73: if_icmpge     101
      76: aload_0
      77: getfield      #11                 // Field tool:Lantlr/Tool;
      80: ldc           #195                // String Malformed range.
      82: aload_0
      83: getfield      #9                  // Field grammar:Lantlr/Grammar;
      86: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
      89: aload_1
      90: invokevirtual #59                 // Method antlr/Token.getLine:()I
      93: aload_1
      94: invokevirtual #60                 // Method antlr/Token.getColumn:()I
      97: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
     100: return
     101: aload_0
     102: aload         6
     104: invokevirtual #129                // Method addElementToCurrentAlt:(Lantlr/AlternativeElement;)V
     107: aload_0
     108: aload         6
     110: aload_3
     111: invokespecial #55                 // Method labelElement:(Lantlr/AlternativeElement;Lantlr/Token;)V
     114: return

  public void refTreeSpecifier(antlr.Token);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
       4: invokevirtual #135                // Method antlr/BlockContext.currentAlt:()Lantlr/Alternative;
       7: aload_1
       8: putfield      #253                // Field antlr/Alternative.treeSpecifier:Lantlr/Token;
      11: return

  public void refWildcard(antlr.Token, antlr.Token, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #254                // Method antlr/DefineGrammarSymbols.refWildcard:(Lantlr/Token;Lantlr/Token;I)V
       7: new           #209                // class antlr/WildcardElement
      10: dup
      11: aload_0
      12: getfield      #9                  // Field grammar:Lantlr/Grammar;
      15: aload_1
      16: iload_3
      17: invokespecial #255                // Method antlr/WildcardElement."<init>":(Lantlr/Grammar;Lantlr/Token;I)V
      20: astore        4
      22: aload_0
      23: aload         4
      25: invokevirtual #129                // Method addElementToCurrentAlt:(Lantlr/AlternativeElement;)V
      28: aload_0
      29: aload         4
      31: aload_2
      32: invokespecial #55                 // Method labelElement:(Lantlr/AlternativeElement;Lantlr/Token;)V
      35: return

  public void reset();
    Code:
       0: aload_0
       1: invokespecial #256                // Method antlr/DefineGrammarSymbols.reset:()V
       4: aload_0
       5: new           #2                  // class antlr/collections/impl/LList
       8: dup
       9: invokespecial #3                  // Method antlr/collections/impl/LList."<init>":()V
      12: putfield      #4                  // Field blocks:Lantlr/collections/Stack;
      15: aload_0
      16: aconst_null
      17: putfield      #229                // Field lastRuleRef:Lantlr/RuleRefElement;
      20: aload_0
      21: aconst_null
      22: putfield      #127                // Field ruleEnd:Lantlr/RuleEndElement;
      25: aload_0
      26: aconst_null
      27: putfield      #20                 // Field ruleBlock:Lantlr/RuleBlock;
      30: aload_0
      31: iconst_0
      32: putfield      #5                  // Field nested:I
      35: aload_0
      36: aconst_null
      37: putfield      #7                  // Field currentExceptionSpec:Lantlr/ExceptionSpec;
      40: aload_0
      41: iconst_0
      42: putfield      #6                  // Field grammarError:Z
      45: return

  public void setArgOfRuleRef(antlr.Token);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #257                // Method antlr/DefineGrammarSymbols.setArgOfRuleRef:(Lantlr/Token;)V
       5: aload_0
       6: getfield      #229                // Field lastRuleRef:Lantlr/RuleRefElement;
       9: aload_1
      10: invokevirtual #36                 // Method antlr/Token.getText:()Ljava/lang/String;
      13: invokevirtual #230                // Method antlr/RuleRefElement.setArgs:(Ljava/lang/String;)V
      16: return

  public static void setBlock(antlr.AlternativeBlock, antlr.AlternativeBlock);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #258                // Method antlr/AlternativeBlock.getAlternatives:()Lantlr/collections/impl/Vector;
       5: invokevirtual #259                // Method antlr/AlternativeBlock.setAlternatives:(Lantlr/collections/impl/Vector;)V
       8: aload_0
       9: aload_1
      10: getfield      #260                // Field antlr/AlternativeBlock.initAction:Ljava/lang/String;
      13: putfield      #260                // Field antlr/AlternativeBlock.initAction:Ljava/lang/String;
      16: aload_0
      17: aload_1
      18: getfield      #261                // Field antlr/AlternativeBlock.label:Ljava/lang/String;
      21: putfield      #261                // Field antlr/AlternativeBlock.label:Ljava/lang/String;
      24: aload_0
      25: aload_1
      26: getfield      #157                // Field antlr/AlternativeBlock.hasASynPred:Z
      29: putfield      #157                // Field antlr/AlternativeBlock.hasASynPred:Z
      32: aload_0
      33: aload_1
      34: getfield      #177                // Field antlr/AlternativeBlock.hasAnAction:Z
      37: putfield      #177                // Field antlr/AlternativeBlock.hasAnAction:Z
      40: aload_0
      41: aload_1
      42: getfield      #262                // Field antlr/AlternativeBlock.warnWhenFollowAmbig:Z
      45: putfield      #262                // Field antlr/AlternativeBlock.warnWhenFollowAmbig:Z
      48: aload_0
      49: aload_1
      50: getfield      #263                // Field antlr/AlternativeBlock.generateAmbigWarnings:Z
      53: putfield      #263                // Field antlr/AlternativeBlock.generateAmbigWarnings:Z
      56: aload_0
      57: aload_1
      58: getfield      #264                // Field antlr/AlternativeBlock.line:I
      61: putfield      #264                // Field antlr/AlternativeBlock.line:I
      64: aload_0
      65: aload_1
      66: getfield      #265                // Field antlr/AlternativeBlock.greedy:Z
      69: putfield      #265                // Field antlr/AlternativeBlock.greedy:Z
      72: aload_0
      73: aload_1
      74: getfield      #266                // Field antlr/AlternativeBlock.greedySet:Z
      77: putfield      #266                // Field antlr/AlternativeBlock.greedySet:Z
      80: return

  public void setRuleOption(antlr.Token, antlr.Token);
    Code:
       0: aload_0
       1: getfield      #20                 // Field ruleBlock:Lantlr/RuleBlock;
       4: aload_1
       5: aload_2
       6: invokevirtual #267                // Method antlr/RuleBlock.setOption:(Lantlr/Token;Lantlr/Token;)V
       9: return

  public void setSubruleOption(antlr.Token, antlr.Token);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
       4: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
       7: aload_1
       8: aload_2
       9: invokevirtual #268                // Method antlr/AlternativeBlock.setOption:(Lantlr/Token;Lantlr/Token;)V
      12: return

  public void synPred();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
       4: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
       7: getfield      #145                // Field antlr/AlternativeBlock.not:Z
      10: ifeq          50
      13: aload_0
      14: getfield      #11                 // Field tool:Lantlr/Tool;
      17: ldc_w         #269                // String \'~\' cannot be applied to syntactic predicate
      20: aload_0
      21: getfield      #9                  // Field grammar:Lantlr/Grammar;
      24: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
      27: aload_0
      28: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      31: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      34: invokevirtual #138                // Method antlr/AlternativeBlock.getLine:()I
      37: aload_0
      38: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      41: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      44: invokevirtual #139                // Method antlr/AlternativeBlock.getColumn:()I
      47: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
      50: new           #146                // class antlr/SynPredBlock
      53: dup
      54: aload_0
      55: getfield      #9                  // Field grammar:Lantlr/Grammar;
      58: invokespecial #270                // Method antlr/SynPredBlock."<init>":(Lantlr/Grammar;)V
      61: astore_1
      62: aload_1
      63: aload_0
      64: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      67: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      70: invokestatic  #172                // Method setBlock:(Lantlr/AlternativeBlock;Lantlr/AlternativeBlock;)V
      73: aload_0
      74: getfield      #4                  // Field blocks:Lantlr/collections/Stack;
      77: invokeinterface #143,  1          // InterfaceMethod antlr/collections/Stack.pop:()Ljava/lang/Object;
      82: checkcast     #45                 // class antlr/BlockContext
      85: astore_2
      86: aload_0
      87: getfield      #4                  // Field blocks:Lantlr/collections/Stack;
      90: new           #45                 // class antlr/BlockContext
      93: dup
      94: invokespecial #46                 // Method antlr/BlockContext."<init>":()V
      97: invokeinterface #47,  2           // InterfaceMethod antlr/collections/Stack.push:(Ljava/lang/Object;)V
     102: aload_0
     103: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
     106: aload_1
     107: putfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
     110: aload_0
     111: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
     114: aload_2
     115: getfield      #53                 // Field antlr/BlockContext.blockEnd:Lantlr/BlockEndElement;
     118: putfield      #53                 // Field antlr/BlockContext.blockEnd:Lantlr/BlockEndElement;
     121: aload_0
     122: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
     125: getfield      #53                 // Field antlr/BlockContext.blockEnd:Lantlr/BlockEndElement;
     128: aload_1
     129: putfield      #54                 // Field antlr/BlockEndElement.block:Lantlr/AlternativeBlock;
     132: return

  public void zeroOrMoreSubRule();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
       4: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
       7: getfield      #145                // Field antlr/AlternativeBlock.not:Z
      10: ifeq          50
      13: aload_0
      14: getfield      #11                 // Field tool:Lantlr/Tool;
      17: ldc_w         #271                // String \'~\' cannot be applied to (...)+ subrule
      20: aload_0
      21: getfield      #9                  // Field grammar:Lantlr/Grammar;
      24: invokevirtual #58                 // Method antlr/Grammar.getFilename:()Ljava/lang/String;
      27: aload_0
      28: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      31: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      34: invokevirtual #138                // Method antlr/AlternativeBlock.getLine:()I
      37: aload_0
      38: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      41: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      44: invokevirtual #139                // Method antlr/AlternativeBlock.getColumn:()I
      47: invokevirtual #61                 // Method antlr/Tool.error:(Ljava/lang/String;Ljava/lang/String;II)V
      50: new           #147                // class antlr/ZeroOrMoreBlock
      53: dup
      54: aload_0
      55: getfield      #9                  // Field grammar:Lantlr/Grammar;
      58: invokespecial #272                // Method antlr/ZeroOrMoreBlock."<init>":(Lantlr/Grammar;)V
      61: astore_1
      62: aload_1
      63: aload_0
      64: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
      67: getfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
      70: invokestatic  #172                // Method setBlock:(Lantlr/AlternativeBlock;Lantlr/AlternativeBlock;)V
      73: aload_0
      74: getfield      #4                  // Field blocks:Lantlr/collections/Stack;
      77: invokeinterface #143,  1          // InterfaceMethod antlr/collections/Stack.pop:()Ljava/lang/Object;
      82: checkcast     #45                 // class antlr/BlockContext
      85: astore_2
      86: aload_0
      87: getfield      #4                  // Field blocks:Lantlr/collections/Stack;
      90: new           #45                 // class antlr/BlockContext
      93: dup
      94: invokespecial #46                 // Method antlr/BlockContext."<init>":()V
      97: invokeinterface #47,  2           // InterfaceMethod antlr/collections/Stack.push:(Ljava/lang/Object;)V
     102: aload_0
     103: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
     106: aload_1
     107: putfield      #29                 // Field antlr/BlockContext.block:Lantlr/AlternativeBlock;
     110: aload_0
     111: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
     114: aload_2
     115: getfield      #53                 // Field antlr/BlockContext.blockEnd:Lantlr/BlockEndElement;
     118: putfield      #53                 // Field antlr/BlockContext.blockEnd:Lantlr/BlockEndElement;
     121: aload_0
     122: invokevirtual #23                 // Method context:()Lantlr/BlockContext;
     125: getfield      #53                 // Field antlr/BlockContext.blockEnd:Lantlr/BlockEndElement;
     128: aload_1
     129: putfield      #54                 // Field antlr/BlockEndElement.block:Lantlr/AlternativeBlock;
     132: return
}
