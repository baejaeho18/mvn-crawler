Compiled from "CustomTransfer.java"
class javafx.embed.swt.CustomTransfer extends org.eclipse.swt.dnd.ByteArrayTransfer {
  private java.lang.String name;

  private java.lang.String mime;

  public javafx.embed.swt.CustomTransfer(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/eclipse/swt/dnd/ByteArrayTransfer."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mime:Ljava/lang/String;
      14: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.String getMime();
    Code:
       0: aload_0
       1: getfield      #3                  // Field mime:Ljava/lang/String;
       4: areturn

  public void javaToNative(java.lang.Object, org.eclipse.swt.dnd.TransferData);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method checkCustom:(Ljava/lang/Object;)Z
       5: ifeq          16
       8: aload_0
       9: aload_2
      10: invokevirtual #5                  // Method isSupportedType:(Lorg/eclipse/swt/dnd/TransferData;)Z
      13: ifne          22
      16: sipush        2003
      19: invokestatic  #7                  // Method org/eclipse/swt/dnd/DND.error:(I)V
      22: aconst_null
      23: astore_3
      24: aload_1
      25: instanceof    #8                  // class java/nio/ByteBuffer
      28: ifeq          42
      31: aload_1
      32: checkcast     #8                  // class java/nio/ByteBuffer
      35: invokevirtual #9                  // Method java/nio/ByteBuffer.array:()[B
      38: astore_3
      39: goto          54
      42: aload_1
      43: instanceof    #10                 // class "[B"
      46: ifeq          54
      49: aload_1
      50: checkcast     #10                 // class "[B"
      53: astore_3
      54: aload_3
      55: ifnonnull     64
      58: sipush        2003
      61: invokestatic  #7                  // Method org/eclipse/swt/dnd/DND.error:(I)V
      64: aload_0
      65: aload_3
      66: aload_2
      67: invokespecial #11                 // Method org/eclipse/swt/dnd/ByteArrayTransfer.javaToNative:(Ljava/lang/Object;Lorg/eclipse/swt/dnd/TransferData;)V
      70: return

  public java.lang.Object nativeToJava(org.eclipse.swt.dnd.TransferData);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method isSupportedType:(Lorg/eclipse/swt/dnd/TransferData;)Z
       5: ifeq          14
       8: aload_0
       9: aload_1
      10: invokespecial #12                 // Method org/eclipse/swt/dnd/ByteArrayTransfer.nativeToJava:(Lorg/eclipse/swt/dnd/TransferData;)Ljava/lang/Object;
      13: areturn
      14: aconst_null
      15: areturn

  protected java.lang.String[] getTypeNames();
    Code:
       0: iconst_1
       1: anewarray     #13                 // class java/lang/String
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #2                  // Field name:Ljava/lang/String;
      10: aastore
      11: areturn

  protected int[] getTypeIds();
    Code:
       0: iconst_1
       1: newarray       int
       3: dup
       4: iconst_0
       5: aload_0
       6: getfield      #2                  // Field name:Ljava/lang/String;
       9: invokestatic  #14                 // Method registerType:(Ljava/lang/String;)I
      12: iastore
      13: areturn

  boolean checkByteArray(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        23
       4: aload_1
       5: instanceof    #10                 // class "[B"
       8: ifeq          23
      11: aload_1
      12: checkcast     #10                 // class "[B"
      15: arraylength
      16: ifle          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  boolean checkByteBuffer(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        25
       4: aload_1
       5: instanceof    #8                  // class java/nio/ByteBuffer
       8: ifeq          25
      11: aload_1
      12: checkcast     #8                  // class java/nio/ByteBuffer
      15: invokevirtual #15                 // Method java/nio/ByteBuffer.limit:()I
      18: ifle          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  boolean checkCustom(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method checkByteArray:(Ljava/lang/Object;)Z
       5: ifne          16
       8: aload_0
       9: aload_1
      10: invokevirtual #17                 // Method checkByteBuffer:(Ljava/lang/Object;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  protected boolean validate(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method checkCustom:(Ljava/lang/Object;)Z
       5: ireturn
}
