Compiled from "UuidProvider.java"
public class net.logstash.logback.composite.loggingevent.UuidProvider extends net.logstash.logback.composite.AbstractFieldJsonProvider<ch.qos.logback.classic.spi.ILoggingEvent> {
  public static final java.lang.String FIELD_UUID;

  public static final java.lang.String STRATEGY_RANDOM;

  public static final java.lang.String STRATEGY_TIME;

  private com.fasterxml.uuid.NoArgGenerator uuids;

  private java.lang.String strategy;

  private java.lang.String ethernet;

  public net.logstash.logback.composite.loggingevent.UuidProvider();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method net/logstash/logback/composite/AbstractFieldJsonProvider."<init>":()V
       4: aload_0
       5: invokestatic  #30                 // Method com/fasterxml/uuid/Generators.randomBasedGenerator:()Lcom/fasterxml/uuid/impl/RandomBasedGenerator;
       8: putfield      #32                 // Field uuids:Lcom/fasterxml/uuid/NoArgGenerator;
      11: aload_0
      12: ldc           #13                 // String random
      14: putfield      #34                 // Field strategy:Ljava/lang/String;
      17: aload_0
      18: ldc           #10                 // String uuid
      20: invokevirtual #38                 // Method setFieldName:(Ljava/lang/String;)V
      23: return

  public void writeTo(com.fasterxml.jackson.core.JsonGenerator, ch.qos.logback.classic.spi.ILoggingEvent) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #48                 // Method getFieldName:()Ljava/lang/String;
       5: aload_0
       6: getfield      #32                 // Field uuids:Lcom/fasterxml/uuid/NoArgGenerator;
       9: invokevirtual #54                 // Method com/fasterxml/uuid/NoArgGenerator.generate:()Ljava/util/UUID;
      12: invokevirtual #59                 // Method java/util/UUID.toString:()Ljava/lang/String;
      15: invokestatic  #65                 // Method net/logstash/logback/composite/JsonWritingUtils.writeStringField:(Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/String;Ljava/lang/String;)V
      18: return

  public java.lang.String getStrategy();
    Code:
       0: aload_0
       1: getfield      #34                 // Field strategy:Ljava/lang/String;
       4: areturn

  public void setStrategy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field strategy:Ljava/lang/String;
       5: aload_0
       6: aload_0
       7: aload_1
       8: aload_0
       9: getfield      #73                 // Field ethernet:Ljava/lang/String;
      12: invokespecial #77                 // Method newUuidStrategy:(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/uuid/NoArgGenerator;
      15: putfield      #32                 // Field uuids:Lcom/fasterxml/uuid/NoArgGenerator;
      18: return

  public java.lang.String getEthernet();
    Code:
       0: aload_0
       1: getfield      #73                 // Field ethernet:Ljava/lang/String;
       4: areturn

  public void setEthernet(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #73                 // Field ethernet:Ljava/lang/String;
       5: aload_0
       6: aload_0
       7: aload_0
       8: getfield      #34                 // Field strategy:Ljava/lang/String;
      11: aload_0
      12: getfield      #73                 // Field ethernet:Ljava/lang/String;
      15: invokespecial #77                 // Method newUuidStrategy:(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/uuid/NoArgGenerator;
      18: putfield      #32                 // Field uuids:Lcom/fasterxml/uuid/NoArgGenerator;
      21: return

  private com.fasterxml.uuid.NoArgGenerator newUuidStrategy(java.lang.String, java.lang.String);
    Code:
       0: ldc           #16                 // String time
       2: aload_1
       3: invokevirtual #85                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       6: ifeq          15
       9: aload_0
      10: aload_2
      11: invokespecial #89                 // Method newTimeBasedGenerator:(Ljava/lang/String;)Lcom/fasterxml/uuid/impl/TimeBasedGenerator;
      14: areturn
      15: ldc           #13                 // String random
      17: aload_1
      18: invokevirtual #85                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      21: ifeq          28
      24: invokestatic  #30                 // Method com/fasterxml/uuid/Generators.randomBasedGenerator:()Lcom/fasterxml/uuid/impl/RandomBasedGenerator;
      27: areturn
      28: new           #91                 // class java/lang/IllegalArgumentException
      31: dup
      32: new           #93                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #96                 // String Unknown strategy:
      41: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_1
      45: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #101                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #103                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow

  private com.fasterxml.uuid.impl.TimeBasedGenerator newTimeBasedGenerator(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: invokestatic  #107                // Method com/fasterxml/uuid/Generators.timeBasedGenerator:()Lcom/fasterxml/uuid/impl/TimeBasedGenerator;
       7: areturn
       8: ldc           #109                // String interface
      10: aload_1
      11: invokevirtual #85                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      14: ifeq          24
      17: invokestatic  #115                // Method com/fasterxml/uuid/EthernetAddress.fromInterface:()Lcom/fasterxml/uuid/EthernetAddress;
      20: invokestatic  #118                // Method com/fasterxml/uuid/Generators.timeBasedGenerator:(Lcom/fasterxml/uuid/EthernetAddress;)Lcom/fasterxml/uuid/impl/TimeBasedGenerator;
      23: areturn
      24: aload_1
      25: invokestatic  #122                // Method com/fasterxml/uuid/EthernetAddress.valueOf:(Ljava/lang/String;)Lcom/fasterxml/uuid/EthernetAddress;
      28: invokestatic  #118                // Method com/fasterxml/uuid/Generators.timeBasedGenerator:(Lcom/fasterxml/uuid/EthernetAddress;)Lcom/fasterxml/uuid/impl/TimeBasedGenerator;
      31: areturn

  public void writeTo(com.fasterxml.jackson.core.JsonGenerator, ch.qos.logback.core.spi.DeferredProcessingAware) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #125                // class ch/qos/logback/classic/spi/ILoggingEvent
       6: invokevirtual #127                // Method writeTo:(Lcom/fasterxml/jackson/core/JsonGenerator;Lch/qos/logback/classic/spi/ILoggingEvent;)V
       9: return
}
