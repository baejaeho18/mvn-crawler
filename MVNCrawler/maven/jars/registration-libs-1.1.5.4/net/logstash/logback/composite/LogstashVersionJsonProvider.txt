Compiled from "LogstashVersionJsonProvider.java"
public class net.logstash.logback.composite.LogstashVersionJsonProvider<Event extends ch.qos.logback.core.spi.DeferredProcessingAware> extends net.logstash.logback.composite.AbstractFieldJsonProvider<Event> implements net.logstash.logback.composite.FieldNamesAware<net.logstash.logback.fieldnames.LogstashCommonFieldNames> {
  public static final java.lang.String FIELD_VERSION;

  public static final java.lang.String DEFAULT_VERSION;

  private java.lang.String version;

  private long versionAsInteger;

  private boolean writeAsInteger;

  public net.logstash.logback.composite.LogstashVersionJsonProvider();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method net/logstash/logback/composite/AbstractFieldJsonProvider."<init>":()V
       4: aload_0
       5: ldc           #12                 // String @version
       7: invokevirtual #28                 // Method setFieldName:(Ljava/lang/String;)V
      10: aload_0
      11: ldc           #15                 // String 1
      13: invokevirtual #31                 // Method setVersion:(Ljava/lang/String;)V
      16: return

  public void writeTo(com.fasterxml.jackson.core.JsonGenerator, Event) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #41                 // Field writeAsInteger:Z
       4: ifeq          22
       7: aload_1
       8: aload_0
       9: invokevirtual #45                 // Method getFieldName:()Ljava/lang/String;
      12: aload_0
      13: getfield      #47                 // Field versionAsInteger:J
      16: invokestatic  #53                 // Method net/logstash/logback/composite/JsonWritingUtils.writeNumberField:(Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/String;J)V
      19: goto          34
      22: aload_1
      23: aload_0
      24: invokevirtual #45                 // Method getFieldName:()Ljava/lang/String;
      27: aload_0
      28: getfield      #55                 // Field version:Ljava/lang/String;
      31: invokestatic  #59                 // Method net/logstash/logback/composite/JsonWritingUtils.writeStringField:(Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/String;Ljava/lang/String;)V
      34: return

  public void setFieldNames(net.logstash.logback.fieldnames.LogstashCommonFieldNames);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #71                 // Method net/logstash/logback/fieldnames/LogstashCommonFieldNames.getVersion:()Ljava/lang/String;
       5: invokevirtual #28                 // Method setFieldName:(Ljava/lang/String;)V
       8: return

  public java.lang.String getVersion();
    Code:
       0: aload_0
       1: getfield      #55                 // Field version:Ljava/lang/String;
       4: areturn

  public void setVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #55                 // Field version:Ljava/lang/String;
       5: aload_0
       6: getfield      #41                 // Field writeAsInteger:Z
       9: ifeq          21
      12: aload_0
      13: aload_1
      14: invokestatic  #79                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      17: i2l
      18: putfield      #47                 // Field versionAsInteger:J
      21: return

  public boolean isWriteAsString();
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method isWriteAsInteger:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setWriteAsString(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifne          9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: invokevirtual #90                 // Method setWriteAsInteger:(Z)V
      13: return

  public boolean isWriteAsInteger();
    Code:
       0: aload_0
       1: getfield      #41                 // Field writeAsInteger:Z
       4: ireturn

  public void setWriteAsInteger(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #41                 // Field writeAsInteger:Z
       5: iload_1
       6: ifeq          21
       9: aload_0
      10: aload_0
      11: getfield      #55                 // Field version:Ljava/lang/String;
      14: invokestatic  #79                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      17: i2l
      18: putfield      #47                 // Field versionAsInteger:J
      21: return
}
