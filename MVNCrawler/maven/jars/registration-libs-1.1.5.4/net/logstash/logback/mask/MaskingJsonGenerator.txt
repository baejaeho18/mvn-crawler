Compiled from "MaskingJsonGenerator.java"
public class net.logstash.logback.mask.MaskingJsonGenerator extends com.fasterxml.jackson.core.util.JsonGeneratorDelegate {
  public static final java.lang.String MASK;

  private static final com.fasterxml.jackson.core.io.SerializedString MASK_SERIALIZED;

  private final java.util.Collection<net.logstash.logback.mask.FieldMasker> fieldMaskers;

  private final java.util.Collection<net.logstash.logback.mask.ValueMasker> valueMaskers;

  private int maskDepth;

  public net.logstash.logback.mask.MaskingJsonGenerator(com.fasterxml.jackson.core.JsonGenerator, java.util.Collection<net.logstash.logback.mask.FieldMasker>, java.util.Collection<net.logstash.logback.mask.ValueMasker>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #32                 // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate."<init>":(Lcom/fasterxml/jackson/core/JsonGenerator;Z)V
       6: aload_0
       7: iconst_0
       8: putfield      #34                 // Field maskDepth:I
      11: aload_0
      12: aload_2
      13: ifnonnull     22
      16: invokestatic  #40                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      19: goto          23
      22: aload_2
      23: putfield      #46                 // Field fieldMaskers:Ljava/util/Collection;
      26: aload_0
      27: aload_3
      28: ifnonnull     37
      31: invokestatic  #40                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      34: goto          38
      37: aload_3
      38: putfield      #48                 // Field valueMaskers:Ljava/util/Collection;
      41: return

  public void writeArray(int[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #58                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #60                 // String null array
      10: invokespecial #63                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: arraylength
      17: iload_2
      18: iload_3
      19: invokevirtual #67                 // Method _verifyOffsets:(III)V
      22: aload_0
      23: aload_1
      24: iload_3
      25: invokevirtual #71                 // Method writeStartArray:(Ljava/lang/Object;I)V
      28: iload_2
      29: istore        4
      31: iload_2
      32: iload_3
      33: iadd
      34: istore        5
      36: iload         4
      38: iload         5
      40: if_icmpge     57
      43: aload_0
      44: aload_1
      45: iload         4
      47: iaload
      48: invokevirtual #75                 // Method writeNumber:(I)V
      51: iinc          4, 1
      54: goto          36
      57: aload_0
      58: invokevirtual #79                 // Method writeEndArray:()V
      61: return

  public void writeArray(long[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #58                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #60                 // String null array
      10: invokespecial #63                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: arraylength
      17: iload_2
      18: iload_3
      19: invokevirtual #67                 // Method _verifyOffsets:(III)V
      22: aload_0
      23: aload_1
      24: iload_3
      25: invokevirtual #71                 // Method writeStartArray:(Ljava/lang/Object;I)V
      28: iload_2
      29: istore        4
      31: iload_2
      32: iload_3
      33: iadd
      34: istore        5
      36: iload         4
      38: iload         5
      40: if_icmpge     57
      43: aload_0
      44: aload_1
      45: iload         4
      47: laload
      48: invokevirtual #89                 // Method writeNumber:(J)V
      51: iinc          4, 1
      54: goto          36
      57: aload_0
      58: invokevirtual #79                 // Method writeEndArray:()V
      61: return

  public void writeArray(double[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #58                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #60                 // String null array
      10: invokespecial #63                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: arraylength
      17: iload_2
      18: iload_3
      19: invokevirtual #67                 // Method _verifyOffsets:(III)V
      22: aload_0
      23: aload_1
      24: iload_3
      25: invokevirtual #71                 // Method writeStartArray:(Ljava/lang/Object;I)V
      28: iload_2
      29: istore        4
      31: iload_2
      32: iload_3
      33: iadd
      34: istore        5
      36: iload         4
      38: iload         5
      40: if_icmpge     57
      43: aload_0
      44: aload_1
      45: iload         4
      47: daload
      48: invokevirtual #94                 // Method writeNumber:(D)V
      51: iinc          4, 1
      54: goto          36
      57: aload_0
      58: invokevirtual #79                 // Method writeEndArray:()V
      61: return

  public void writeFieldName(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #113,  0            // InvokeDynamic #0:run:(Lnet/logstash/logback/mask/MaskingJsonGenerator;Lcom/fasterxml/jackson/core/SerializableString;)Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;
       8: invokespecial #116                // Method writeFieldName:(Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;)V
      11: return

  public void writeFieldName(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #125,  0            // InvokeDynamic #1:run:(Lnet/logstash/logback/mask/MaskingJsonGenerator;Ljava/lang/String;)Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;
       8: invokespecial #116                // Method writeFieldName:(Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;)V
      11: return

  public void writeFieldId(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: lload_1
       3: invokedynamic #133,  0            // InvokeDynamic #2:run:(Lnet/logstash/logback/mask/MaskingJsonGenerator;J)Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;
       8: invokespecial #116                // Method writeFieldName:(Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;)V
      11: return

  private void writeFieldName(net.logstash.logback.mask.MaskingJsonGenerator$ThrowingRunnable<java.io.IOException>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #143                // Method decrementMaskDepth:()V
      11: aload_0
      12: invokevirtual #140                // Method maskingInProgress:()Z
      15: ifeq          25
      18: aload_0
      19: invokespecial #146                // Method incrementMaskDepth:()V
      22: goto          52
      25: aload_1
      26: invokeinterface #148,  1          // InterfaceMethod net/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable.run:()V
      31: aload_0
      32: invokespecial #152                // Method getMaskedValueForCurrentPath:()Ljava/lang/Object;
      35: astore_2
      36: aload_2
      37: ifnull        52
      40: aload_0
      41: getfield      #154                // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
      44: aload_2
      45: invokevirtual #158                // Method com/fasterxml/jackson/core/JsonGenerator.writeObject:(Ljava/lang/Object;)V
      48: aload_0
      49: invokespecial #146                // Method incrementMaskDepth:()V
      52: return

  public void writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          16
       7: aload_0
       8: aload_1
       9: aload_2
      10: iload_3
      11: iload         4
      13: invokespecial #167                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V
      16: return

  public void writeBinary(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          12
       7: aload_0
       8: aload_1
       9: invokespecial #175                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeBinary:([B)V
      12: return

  public void writeBinary(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          14
       7: aload_0
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokespecial #178                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeBinary:([BII)V
      14: return

  public int writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          15
       7: aload_0
       8: aload_1
       9: aload_2
      10: iload_3
      11: invokespecial #181                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I
      14: ireturn
      15: aload_0
      16: aload_2
      17: invokespecial #185                // Method readAndDiscard:(Ljava/io/InputStream;)I
      20: ireturn

  public int writeBinary(java.io.InputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          14
       7: aload_0
       8: aload_1
       9: iload_2
      10: invokespecial #190                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeBinary:(Ljava/io/InputStream;I)I
      13: ireturn
      14: aload_0
      15: aload_1
      16: invokespecial #185                // Method readAndDiscard:(Ljava/io/InputStream;)I
      19: ireturn

  private int readAndDiscard(java.io.InputStream) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokevirtual #196                // Method java/io/InputStream.read:()I
       6: iconst_m1
       7: if_icmpeq     16
      10: iinc          2, 1
      13: goto          2
      16: iload_2
      17: ireturn

  public void writeBoolean(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          12
       7: aload_0
       8: iload_1
       9: invokespecial #201                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeBoolean:(Z)V
      12: return

  public void writeEmbeddedObject(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          12
       7: aload_0
       8: aload_1
       9: invokespecial #206                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeEmbeddedObject:(Ljava/lang/Object;)V
      12: return

  public void writeNull() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          11
       7: aload_0
       8: invokespecial #210                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeNull:()V
      11: return

  public void writeNumber(java.math.BigDecimal) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_1
       4: invokedynamic #218,  0            // InvokeDynamic #3:run:(Lnet/logstash/logback/mask/MaskingJsonGenerator;Ljava/math/BigDecimal;)Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;
       9: invokespecial #222                // Method writePotentiallyMaskedValue:(Ljava/lang/Object;Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;)V
      12: return

  public void writeNumber(java.math.BigInteger) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_1
       4: invokedynamic #232,  0            // InvokeDynamic #4:run:(Lnet/logstash/logback/mask/MaskingJsonGenerator;Ljava/math/BigInteger;)Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;
       9: invokespecial #222                // Method writePotentiallyMaskedValue:(Ljava/lang/Object;Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;)V
      12: return

  public void writeNumber(double) throws java.io.IOException;
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #239                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       5: aload_0
       6: dload_1
       7: invokedynamic #246,  0            // InvokeDynamic #5:run:(Lnet/logstash/logback/mask/MaskingJsonGenerator;D)Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;
      12: invokespecial #222                // Method writePotentiallyMaskedValue:(Ljava/lang/Object;Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;)V
      15: return

  public void writeNumber(float) throws java.io.IOException;
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #253                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       5: aload_0
       6: fload_1
       7: invokedynamic #260,  0            // InvokeDynamic #6:run:(Lnet/logstash/logback/mask/MaskingJsonGenerator;F)Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;
      12: invokespecial #222                // Method writePotentiallyMaskedValue:(Ljava/lang/Object;Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;)V
      15: return

  public void writeNumber(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #266                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: aload_0
       6: iload_1
       7: invokedynamic #273,  0            // InvokeDynamic #7:run:(Lnet/logstash/logback/mask/MaskingJsonGenerator;I)Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;
      12: invokespecial #222                // Method writePotentiallyMaskedValue:(Ljava/lang/Object;Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;)V
      15: return

  public void writeNumber(short) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #279                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
       5: aload_0
       6: iload_1
       7: invokedynamic #286,  0            // InvokeDynamic #8:run:(Lnet/logstash/logback/mask/MaskingJsonGenerator;S)Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;
      12: invokespecial #222                // Method writePotentiallyMaskedValue:(Ljava/lang/Object;Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;)V
      15: return

  public void writeNumber(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #292                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       5: aload_0
       6: lload_1
       7: invokedynamic #297,  0            // InvokeDynamic #9:run:(Lnet/logstash/logback/mask/MaskingJsonGenerator;J)Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;
      12: invokespecial #222                // Method writePotentiallyMaskedValue:(Ljava/lang/Object;Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;)V
      15: return

  public void writeNumber(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_1
       4: invokedynamic #302,  0            // InvokeDynamic #10:run:(Lnet/logstash/logback/mask/MaskingJsonGenerator;Ljava/lang/String;)Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;
       9: invokespecial #222                // Method writePotentiallyMaskedValue:(Ljava/lang/Object;Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;)V
      12: return

  public void writeObjectId(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          12
       7: aload_0
       8: aload_1
       9: invokespecial #306                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeObjectId:(Ljava/lang/Object;)V
      12: return

  public void writeObjectRef(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          12
       7: aload_0
       8: aload_1
       9: invokespecial #309                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeObjectRef:(Ljava/lang/Object;)V
      12: return

  public void writeOmittedField(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          12
       7: aload_0
       8: aload_1
       9: invokespecial #312                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeOmittedField:(Ljava/lang/String;)V
      12: return

  public void writeRaw(char) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          12
       7: aload_0
       8: iload_1
       9: invokespecial #317                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeRaw:(C)V
      12: return

  public void writeRaw(char[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          14
       7: aload_0
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokespecial #322                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeRaw:([CII)V
      14: return

  public void writeRaw(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          12
       7: aload_0
       8: aload_1
       9: invokespecial #326                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeRaw:(Ljava/lang/String;)V
      12: return

  public void writeRaw(java.lang.String, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          14
       7: aload_0
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokespecial #329                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeRaw:(Ljava/lang/String;II)V
      14: return

  public void writeRaw(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          12
       7: aload_0
       8: aload_1
       9: invokespecial #331                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeRaw:(Lcom/fasterxml/jackson/core/SerializableString;)V
      12: return

  public void writeRawValue(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          12
       7: aload_0
       8: aload_1
       9: invokespecial #335                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeRawValue:(Ljava/lang/String;)V
      12: return

  public void writeRawValue(java.lang.String, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          14
       7: aload_0
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokespecial #337                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeRawValue:(Ljava/lang/String;II)V
      14: return

  public void writeRawValue(char[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          14
       7: aload_0
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokespecial #339                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeRawValue:([CII)V
      14: return

  public void writeRawUTF8String(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          14
       7: aload_0
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokespecial #342                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeRawUTF8String:([BII)V
      14: return

  public void writeStartArray(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          12
       7: aload_0
       8: iload_1
       9: invokespecial #344                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeStartArray:(I)V
      12: return

  public void writeStartArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          11
       7: aload_0
       8: invokespecial #347                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeStartArray:()V
      11: return

  public void writeStartArray(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          12
       7: aload_0
       8: aload_1
       9: invokespecial #349                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeStartArray:(Ljava/lang/Object;)V
      12: return

  public void writeStartArray(java.lang.Object, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          13
       7: aload_0
       8: aload_1
       9: iload_2
      10: invokespecial #351                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeStartArray:(Ljava/lang/Object;I)V
      13: return

  public void writeStartObject() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          14
       7: aload_0
       8: invokespecial #354                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeStartObject:()V
      11: goto          18
      14: aload_0
      15: invokespecial #146                // Method incrementMaskDepth:()V
      18: return

  public void writeStartObject(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          15
       7: aload_0
       8: aload_1
       9: invokespecial #356                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeStartObject:(Ljava/lang/Object;)V
      12: goto          19
      15: aload_0
      16: invokespecial #146                // Method incrementMaskDepth:()V
      19: return

  public void writeStartObject(java.lang.Object, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          16
       7: aload_0
       8: aload_1
       9: iload_2
      10: invokespecial #358                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeStartObject:(Ljava/lang/Object;I)V
      13: goto          20
      16: aload_0
      17: invokespecial #146                // Method incrementMaskDepth:()V
      20: return

  public void writeString(char[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #361                // class java/lang/String
       4: dup
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokespecial #363                // Method java/lang/String."<init>":([CII)V
      11: aload_0
      12: aload_1
      13: iload_2
      14: iload_3
      15: invokedynamic #370,  0            // InvokeDynamic #11:run:(Lnet/logstash/logback/mask/MaskingJsonGenerator;[CII)Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;
      20: invokespecial #222                // Method writePotentiallyMaskedValue:(Ljava/lang/Object;Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;)V
      23: return

  public void writeString(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_1
       4: invokedynamic #375,  0            // InvokeDynamic #12:run:(Lnet/logstash/logback/mask/MaskingJsonGenerator;Ljava/lang/String;)Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;
       9: invokespecial #222                // Method writePotentiallyMaskedValue:(Ljava/lang/Object;Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;)V
      12: return

  public void writeString(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #381,  1          // InterfaceMethod com/fasterxml/jackson/core/SerializableString.getValue:()Ljava/lang/String;
       7: aload_0
       8: aload_1
       9: invokedynamic #386,  0            // InvokeDynamic #13:run:(Lnet/logstash/logback/mask/MaskingJsonGenerator;Lcom/fasterxml/jackson/core/SerializableString;)Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;
      14: invokespecial #222                // Method writePotentiallyMaskedValue:(Ljava/lang/Object;Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;)V
      17: return

  public void writeString(java.io.Reader, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          13
       7: aload_0
       8: aload_1
       9: iload_2
      10: invokespecial #389                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeString:(Ljava/io/Reader;I)V
      13: return

  public void writeUTF8String(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #361                // class java/lang/String
       4: dup
       5: aload_1
       6: iload_2
       7: iload_3
       8: getstatic     #398                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      11: invokespecial #401                // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
      14: aload_0
      15: aload_1
      16: iload_2
      17: iload_3
      18: invokedynamic #408,  0            // InvokeDynamic #14:run:(Lnet/logstash/logback/mask/MaskingJsonGenerator;[BII)Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;
      23: invokespecial #222                // Method writePotentiallyMaskedValue:(Ljava/lang/Object;Lnet/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable;)V
      26: return

  public void writeTypeId(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          12
       7: aload_0
       8: aload_1
       9: invokespecial #411                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeTypeId:(Ljava/lang/Object;)V
      12: return

  public void writeEndArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          11
       7: aload_0
       8: invokespecial #412                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeEndArray:()V
      11: return

  public void writeEndObject() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #143                // Method decrementMaskDepth:()V
      11: aload_0
      12: invokevirtual #140                // Method maskingInProgress:()Z
      15: ifne          22
      18: aload_0
      19: invokespecial #415                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeEndObject:()V
      22: return

  private java.lang.Object getMaskedValueForCurrentPath();
    Code:
       0: aload_0
       1: invokevirtual #419                // Method getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;
       4: astore_1
       5: aload_0
       6: getfield      #46                 // Field fieldMaskers:Ljava/util/Collection;
       9: invokeinterface #423,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #430,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          54
      24: aload_2
      25: invokeinterface #433,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #435                // class net/logstash/logback/mask/FieldMasker
      33: astore_3
      34: aload_3
      35: aload_1
      36: invokeinterface #439,  2          // InterfaceMethod net/logstash/logback/mask/FieldMasker.mask:(Lcom/fasterxml/jackson/core/JsonStreamContext;)Ljava/lang/Object;
      41: astore        4
      43: aload         4
      45: ifnull        51
      48: aload         4
      50: areturn
      51: goto          15
      54: aconst_null
      55: areturn

  private java.lang.Object getMaskedValueForCurrentPathAndValue(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #419                // Method getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;
       4: astore_2
       5: aload_0
       6: getfield      #48                 // Field valueMaskers:Ljava/util/Collection;
       9: invokeinterface #423,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #430,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          57
      24: aload_3
      25: invokeinterface #433,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #447                // class net/logstash/logback/mask/ValueMasker
      33: astore        4
      35: aload         4
      37: aload_2
      38: aload_1
      39: invokeinterface #450,  3          // InterfaceMethod net/logstash/logback/mask/ValueMasker.mask:(Lcom/fasterxml/jackson/core/JsonStreamContext;Ljava/lang/Object;)Ljava/lang/Object;
      44: astore        5
      46: aload         5
      48: ifnull        54
      51: aload         5
      53: areturn
      54: goto          15
      57: aconst_null
      58: areturn

  private void writePotentiallyMaskedValue(java.lang.Object, net.logstash.logback.mask.MaskingJsonGenerator$ThrowingRunnable<java.io.IOException>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method maskingInProgress:()Z
       4: ifne          34
       7: aload_0
       8: aload_1
       9: invokespecial #456                // Method getMaskedValueForCurrentPathAndValue:(Ljava/lang/Object;)Ljava/lang/Object;
      12: astore_3
      13: aload_3
      14: ifnull        28
      17: aload_0
      18: getfield      #154                // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
      21: aload_3
      22: invokevirtual #158                // Method com/fasterxml/jackson/core/JsonGenerator.writeObject:(Ljava/lang/Object;)V
      25: goto          34
      28: aload_2
      29: invokeinterface #148,  1          // InterfaceMethod net/logstash/logback/mask/MaskingJsonGenerator$ThrowingRunnable.run:()V
      34: return

  private void incrementMaskDepth();
    Code:
       0: aload_0
       1: dup
       2: getfield      #34                 // Field maskDepth:I
       5: iconst_1
       6: iadd
       7: putfield      #34                 // Field maskDepth:I
      10: return

  private void decrementMaskDepth();
    Code:
       0: aload_0
       1: dup
       2: getfield      #34                 // Field maskDepth:I
       5: iconst_1
       6: isub
       7: putfield      #34                 // Field maskDepth:I
      10: return

  boolean maskingInProgress();
    Code:
       0: aload_0
       1: getfield      #34                 // Field maskDepth:I
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private void lambda$writeUTF8String$14(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #461                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeUTF8String:([BII)V
       7: return

  private void lambda$writeString$13(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #463                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeString:(Lcom/fasterxml/jackson/core/SerializableString;)V
       5: return

  private void lambda$writeString$12(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #465                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeString:(Ljava/lang/String;)V
       5: return

  private void lambda$writeString$11(char[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #467                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeString:([CII)V
       7: return

  private void lambda$writeNumber$10(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #469                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeNumber:(Ljava/lang/String;)V
       5: return

  private void lambda$writeNumber$9(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #470                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeNumber:(J)V
       5: return

  private void lambda$writeNumber$8(short) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #472                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeNumber:(S)V
       5: return

  private void lambda$writeNumber$7(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #473                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeNumber:(I)V
       5: return

  private void lambda$writeNumber$6(float) throws java.io.IOException;
    Code:
       0: aload_0
       1: fload_1
       2: invokespecial #475                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeNumber:(F)V
       5: return

  private void lambda$writeNumber$5(double) throws java.io.IOException;
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #476                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeNumber:(D)V
       5: return

  private void lambda$writeNumber$4(java.math.BigInteger) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #478                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeNumber:(Ljava/math/BigInteger;)V
       5: return

  private void lambda$writeNumber$3(java.math.BigDecimal) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #480                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeNumber:(Ljava/math/BigDecimal;)V
       5: return

  private void lambda$writeFieldId$2(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #482                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeFieldId:(J)V
       5: return

  private void lambda$writeFieldName$1(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #484                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeFieldName:(Ljava/lang/String;)V
       5: return

  private void lambda$writeFieldName$0(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #486                // Method com/fasterxml/jackson/core/util/JsonGeneratorDelegate.writeFieldName:(Lcom/fasterxml/jackson/core/SerializableString;)V
       5: return

  static {};
    Code:
       0: new           #489                // class com/fasterxml/jackson/core/io/SerializedString
       3: dup
       4: ldc           #17                 // String ****
       6: invokespecial #490                // Method com/fasterxml/jackson/core/io/SerializedString."<init>":(Ljava/lang/String;)V
       9: putstatic     #492                // Field MASK_SERIALIZED:Lcom/fasterxml/jackson/core/io/SerializedString;
      12: return
}
