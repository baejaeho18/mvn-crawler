Compiled from "MaskingJsonGeneratorDecorator.java"
public class net.logstash.logback.mask.MaskingJsonGeneratorDecorator$PathMask {
  private final java.util.List<java.lang.String> paths;

  private java.lang.String mask;

  public net.logstash.logback.mask.MaskingJsonGeneratorDecorator$PathMask();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #24                 // class java/util/ArrayList
       8: dup
       9: invokespecial #25                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #27                 // Field paths:Ljava/util/List;
      15: aload_0
      16: ldc           #29                 // String ****
      18: putfield      #31                 // Field mask:Ljava/lang/String;
      21: return

  public net.logstash.logback.mask.MaskingJsonGeneratorDecorator$PathMask(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #29                 // String ****
       4: invokespecial #37                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public net.logstash.logback.mask.MaskingJsonGeneratorDecorator$PathMask(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #44                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
       5: aload_2
       6: invokespecial #47                 // Method "<init>":(Ljava/util/List;Ljava/lang/String;)V
       9: return

  public net.logstash.logback.mask.MaskingJsonGeneratorDecorator$PathMask(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #29                 // String ****
       4: invokespecial #47                 // Method "<init>":(Ljava/util/List;Ljava/lang/String;)V
       7: return

  public net.logstash.logback.mask.MaskingJsonGeneratorDecorator$PathMask(java.util.List<java.lang.String>, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #22                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #24                 // class java/util/ArrayList
       8: dup
       9: invokespecial #25                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #27                 // Field paths:Ljava/util/List;
      15: aload_0
      16: ldc           #29                 // String ****
      18: putfield      #31                 // Field mask:Ljava/lang/String;
      21: aload_1
      22: aload_0
      23: invokedynamic #68,  0             // InvokeDynamic #0:accept:(Lnet/logstash/logback/mask/MaskingJsonGeneratorDecorator$PathMask;)Ljava/util/function/Consumer;
      28: invokeinterface #74,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      33: aload_0
      34: aload_2
      35: invokevirtual #77                 // Method setMask:(Ljava/lang/String;)V
      38: return

  public void addPath(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #82                 // Method net/logstash/logback/mask/PathBasedFieldMasker.validatePathToMask:(Ljava/lang/String;)V
       4: aload_0
       5: getfield      #27                 // Field paths:Ljava/util/List;
       8: aload_1
       9: invokeinterface #86,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      14: pop
      15: return

  public void addPaths(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #89                 // String ,
       3: invokevirtual #95                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: invokestatic  #101                // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       9: invokedynamic #114,  0            // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      14: invokeinterface #120,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      19: invokedynamic #131,  0            // InvokeDynamic #2:test:()Ljava/util/function/Predicate;
      24: invokeinterface #135,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      29: aload_0
      30: invokedynamic #68,  0             // InvokeDynamic #0:accept:(Lnet/logstash/logback/mask/MaskingJsonGeneratorDecorator$PathMask;)Ljava/util/function/Consumer;
      35: invokeinterface #136,  2          // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      40: return

  public void setMask(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #141                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #91                 // class java/lang/String
       8: putfield      #31                 // Field mask:Ljava/lang/String;
      11: return

  private static boolean lambda$addPaths$0(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #145                // Method java/lang/String.isEmpty:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  static java.util.List access$200(net.logstash.logback.mask.MaskingJsonGeneratorDecorator$PathMask);
    Code:
       0: aload_0
       1: getfield      #27                 // Field paths:Ljava/util/List;
       4: areturn

  static java.lang.String access$300(net.logstash.logback.mask.MaskingJsonGeneratorDecorator$PathMask);
    Code:
       0: aload_0
       1: getfield      #31                 // Field mask:Ljava/lang/String;
       4: areturn
}
