Compiled from "PathBasedFieldMasker.java"
public class net.logstash.logback.mask.PathBasedFieldMasker implements net.logstash.logback.mask.FieldMasker {
  public static final java.lang.String TOKEN_SEPARATOR;

  public static final java.lang.String WILDCARD_TOKEN;

  private final boolean isAbsolutePath;

  private final java.lang.String[] tokens;

  private final java.lang.Object mask;

  public net.logstash.logback.mask.PathBasedFieldMasker(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #29                 // Method validatePathToMask:(Ljava/lang/String;)V
       8: aload_0
       9: aload_1
      10: ldc           #11                 // String /
      12: invokevirtual #35                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      15: putfield      #37                 // Field isAbsolutePath:Z
      18: aload_0
      19: getfield      #37                 // Field isAbsolutePath:Z
      22: ifeq          35
      25: aload_1
      26: ldc           #11                 // String /
      28: invokevirtual #41                 // Method java/lang/String.length:()I
      31: invokevirtual #45                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      34: astore_1
      35: aload_0
      36: aload_1
      37: ldc           #11                 // String /
      39: invokevirtual #49                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      42: putfield      #51                 // Field tokens:[Ljava/lang/String;
      45: iconst_0
      46: istore_3
      47: iload_3
      48: aload_0
      49: getfield      #51                 // Field tokens:[Ljava/lang/String;
      52: arraylength
      53: if_icmpge     77
      56: aload_0
      57: getfield      #51                 // Field tokens:[Ljava/lang/String;
      60: iload_3
      61: aload_0
      62: getfield      #51                 // Field tokens:[Ljava/lang/String;
      65: iload_3
      66: aaload
      67: invokestatic  #55                 // Method unescapeJsonPointerToken:(Ljava/lang/String;)Ljava/lang/String;
      70: aastore
      71: iinc          3, 1
      74: goto          47
      77: aload_0
      78: aload_2
      79: putfield      #57                 // Field mask:Ljava/lang/Object;
      82: return

  static void validatePathToMask(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #64                 // String pathToMask must not be null
       3: invokestatic  #70                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #74                 // Method java/lang/String.isEmpty:()Z
      11: ifeq          24
      14: new           #76                 // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #78                 // String pathToMask must not be empty
      20: invokespecial #80                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: ldc           #11                 // String /
      27: invokevirtual #84                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      30: ifeq          43
      33: new           #76                 // class java/lang/IllegalArgumentException
      36: dup
      37: ldc           #86                 // String pathToMask must contain at least one token
      39: invokespecial #80                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: return

  public java.lang.Object mask(com.fasterxml.jackson.core.JsonStreamContext);
    Code:
       0: aload_1
       1: astore_2
       2: aload_0
       3: getfield      #51                 // Field tokens:[Ljava/lang/String;
       6: arraylength
       7: istore_3
       8: iinc          3, -1
      11: iload_3
      12: iflt          39
      15: aload_0
      16: aload_2
      17: aload_0
      18: getfield      #51                 // Field tokens:[Ljava/lang/String;
      21: iload_3
      22: aaload
      23: invokespecial #93                 // Method currentLeafMatches:(Lcom/fasterxml/jackson/core/JsonStreamContext;Ljava/lang/String;)Z
      26: ifne          31
      29: aconst_null
      30: areturn
      31: aload_2
      32: invokevirtual #97                 // Method com/fasterxml/jackson/core/JsonStreamContext.getParent:()Lcom/fasterxml/jackson/core/JsonStreamContext;
      35: astore_2
      36: goto          8
      39: aload_2
      40: ifnull        74
      43: aload_0
      44: getfield      #37                 // Field isAbsolutePath:Z
      47: ifeq          67
      50: aload_2
      51: invokevirtual #97                 // Method com/fasterxml/jackson/core/JsonStreamContext.getParent:()Lcom/fasterxml/jackson/core/JsonStreamContext;
      54: ifnull        67
      57: aload_2
      58: invokevirtual #97                 // Method com/fasterxml/jackson/core/JsonStreamContext.getParent:()Lcom/fasterxml/jackson/core/JsonStreamContext;
      61: invokevirtual #100                // Method com/fasterxml/jackson/core/JsonStreamContext.inRoot:()Z
      64: ifeq          74
      67: aload_0
      68: getfield      #57                 // Field mask:Ljava/lang/Object;
      71: goto          75
      74: aconst_null
      75: areturn

  private boolean currentLeafMatches(com.fasterxml.jackson.core.JsonStreamContext, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        50
       4: ldc           #14                 // String *
       6: aload_2
       7: invokevirtual #84                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ifeq          15
      13: iconst_1
      14: ireturn
      15: aload_1
      16: invokevirtual #106                // Method com/fasterxml/jackson/core/JsonStreamContext.hasCurrentName:()Z
      19: ifeq          31
      22: aload_1
      23: invokevirtual #110                // Method com/fasterxml/jackson/core/JsonStreamContext.getCurrentName:()Ljava/lang/String;
      26: aload_2
      27: invokevirtual #84                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      30: ireturn
      31: aload_1
      32: invokevirtual #113                // Method com/fasterxml/jackson/core/JsonStreamContext.hasCurrentIndex:()Z
      35: ifeq          50
      38: aload_1
      39: invokevirtual #116                // Method com/fasterxml/jackson/core/JsonStreamContext.getCurrentIndex:()I
      42: invokestatic  #121                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      45: aload_2
      46: invokevirtual #84                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      49: ireturn
      50: iconst_0
      51: ireturn

  static boolean isSingleFieldName(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #11                 // String /
       3: invokevirtual #127                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       6: ifne          22
       9: aload_0
      10: ldc           #14                 // String *
      12: invokevirtual #127                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  static java.lang.String unescapeJsonPointerToken(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #130                // String ~1
       3: ldc           #11                 // String /
       5: invokevirtual #134                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: ldc           #136                // String ~0
      10: ldc           #138                // String ~
      12: invokevirtual #134                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      15: areturn
}
