Compiled from "ConsumerRepository.java"
class net.logstash.logback.encoder.com.lmax.disruptor.dsl.ConsumerRepository<T> implements java.lang.Iterable<net.logstash.logback.encoder.com.lmax.disruptor.dsl.ConsumerInfo> {
  private final java.util.Map<net.logstash.logback.encoder.com.lmax.disruptor.EventHandler<?>, net.logstash.logback.encoder.com.lmax.disruptor.dsl.EventProcessorInfo<T>> eventProcessorInfoByEventHandler;

  private final java.util.Map<net.logstash.logback.encoder.com.lmax.disruptor.Sequence, net.logstash.logback.encoder.com.lmax.disruptor.dsl.ConsumerInfo> eventProcessorInfoBySequence;

  private final java.util.Collection<net.logstash.logback.encoder.com.lmax.disruptor.dsl.ConsumerInfo> consumerInfos;

  net.logstash.logback.encoder.com.lmax.disruptor.dsl.ConsumerRepository();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #22                 // class java/util/IdentityHashMap
       8: dup
       9: invokespecial #23                 // Method java/util/IdentityHashMap."<init>":()V
      12: putfield      #25                 // Field eventProcessorInfoByEventHandler:Ljava/util/Map;
      15: aload_0
      16: new           #22                 // class java/util/IdentityHashMap
      19: dup
      20: invokespecial #23                 // Method java/util/IdentityHashMap."<init>":()V
      23: putfield      #27                 // Field eventProcessorInfoBySequence:Ljava/util/Map;
      26: aload_0
      27: new           #29                 // class java/util/ArrayList
      30: dup
      31: invokespecial #30                 // Method java/util/ArrayList."<init>":()V
      34: putfield      #32                 // Field consumerInfos:Ljava/util/Collection;
      37: return

  public void add(net.logstash.logback.encoder.com.lmax.disruptor.EventProcessor, net.logstash.logback.encoder.com.lmax.disruptor.EventHandler<? super T>, net.logstash.logback.encoder.com.lmax.disruptor.SequenceBarrier);
    Code:
       0: new           #40                 // class net/logstash/logback/encoder/com/lmax/disruptor/dsl/EventProcessorInfo
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #42                 // Method net/logstash/logback/encoder/com/lmax/disruptor/dsl/EventProcessorInfo."<init>":(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventProcessor;Lnet/logstash/logback/encoder/com/lmax/disruptor/EventHandler;Lnet/logstash/logback/encoder/com/lmax/disruptor/SequenceBarrier;)V
      10: astore        4
      12: aload_0
      13: getfield      #25                 // Field eventProcessorInfoByEventHandler:Ljava/util/Map;
      16: aload_2
      17: aload         4
      19: invokeinterface #48,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: aload_0
      26: getfield      #27                 // Field eventProcessorInfoBySequence:Ljava/util/Map;
      29: aload_1
      30: invokeinterface #54,  1           // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/EventProcessor.getSequence:()Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;
      35: aload         4
      37: invokeinterface #48,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: aload_0
      44: getfield      #32                 // Field consumerInfos:Ljava/util/Collection;
      47: aload         4
      49: invokeinterface #59,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      54: pop
      55: return

  public void add(net.logstash.logback.encoder.com.lmax.disruptor.EventProcessor);
    Code:
       0: new           #40                 // class net/logstash/logback/encoder/com/lmax/disruptor/dsl/EventProcessorInfo
       3: dup
       4: aload_1
       5: aconst_null
       6: aconst_null
       7: invokespecial #42                 // Method net/logstash/logback/encoder/com/lmax/disruptor/dsl/EventProcessorInfo."<init>":(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventProcessor;Lnet/logstash/logback/encoder/com/lmax/disruptor/EventHandler;Lnet/logstash/logback/encoder/com/lmax/disruptor/SequenceBarrier;)V
      10: astore_2
      11: aload_0
      12: getfield      #27                 // Field eventProcessorInfoBySequence:Ljava/util/Map;
      15: aload_1
      16: invokeinterface #54,  1           // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/EventProcessor.getSequence:()Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;
      21: aload_2
      22: invokeinterface #48,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: aload_0
      29: getfield      #32                 // Field consumerInfos:Ljava/util/Collection;
      32: aload_2
      33: invokeinterface #59,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      38: pop
      39: return

  public void add(net.logstash.logback.encoder.com.lmax.disruptor.WorkerPool<T>, net.logstash.logback.encoder.com.lmax.disruptor.SequenceBarrier);
    Code:
       0: new           #75                 // class net/logstash/logback/encoder/com/lmax/disruptor/dsl/WorkerPoolInfo
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #77                 // Method net/logstash/logback/encoder/com/lmax/disruptor/dsl/WorkerPoolInfo."<init>":(Lnet/logstash/logback/encoder/com/lmax/disruptor/WorkerPool;Lnet/logstash/logback/encoder/com/lmax/disruptor/SequenceBarrier;)V
       9: astore_3
      10: aload_0
      11: getfield      #32                 // Field consumerInfos:Ljava/util/Collection;
      14: aload_3
      15: invokeinterface #59,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      20: pop
      21: aload_1
      22: invokevirtual #83                 // Method net/logstash/logback/encoder/com/lmax/disruptor/WorkerPool.getWorkerSequences:()[Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;
      25: astore        4
      27: aload         4
      29: arraylength
      30: istore        5
      32: iconst_0
      33: istore        6
      35: iload         6
      37: iload         5
      39: if_icmpge     68
      42: aload         4
      44: iload         6
      46: aaload
      47: astore        7
      49: aload_0
      50: getfield      #27                 // Field eventProcessorInfoBySequence:Ljava/util/Map;
      53: aload         7
      55: aload_3
      56: invokeinterface #48,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: iinc          6, 1
      65: goto          35
      68: return

  public net.logstash.logback.encoder.com.lmax.disruptor.Sequence[] getLastSequenceInChain(boolean);
    Code:
       0: new           #29                 // class java/util/ArrayList
       3: dup
       4: invokespecial #30                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #32                 // Field consumerInfos:Ljava/util/Collection;
      12: invokeinterface #102,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #110,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          81
      27: aload_3
      28: invokeinterface #114,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #116                // class net/logstash/logback/encoder/com/lmax/disruptor/dsl/ConsumerInfo
      36: astore        4
      38: iload_1
      39: ifne          52
      42: aload         4
      44: invokeinterface #119,  1          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/dsl/ConsumerInfo.isRunning:()Z
      49: ifeq          78
      52: aload         4
      54: invokeinterface #122,  1          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/dsl/ConsumerInfo.isEndOfChain:()Z
      59: ifeq          78
      62: aload         4
      64: invokeinterface #125,  1          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/dsl/ConsumerInfo.getSequences:()[Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;
      69: astore        5
      71: aload_2
      72: aload         5
      74: invokestatic  #131                // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
      77: pop
      78: goto          18
      81: aload_2
      82: aload_2
      83: invokeinterface #135,  1          // InterfaceMethod java/util/List.size:()I
      88: anewarray     #137                // class net/logstash/logback/encoder/com/lmax/disruptor/Sequence
      91: invokeinterface #141,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      96: checkcast     #87                 // class "[Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;"
      99: areturn

  public net.logstash.logback.encoder.com.lmax.disruptor.EventProcessor getEventProcessorFor(net.logstash.logback.encoder.com.lmax.disruptor.EventHandler<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #155                // Method getEventProcessorInfo:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventHandler;)Lnet/logstash/logback/encoder/com/lmax/disruptor/dsl/EventProcessorInfo;
       5: astore_2
       6: aload_2
       7: ifnonnull     42
      10: new           #157                // class java/lang/IllegalArgumentException
      13: dup
      14: new           #159                // class java/lang/StringBuilder
      17: dup
      18: invokespecial #160                // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #162                // String The event handler
      23: invokevirtual #166                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: ldc           #171                // String  is not processing events.
      32: invokevirtual #166                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #178                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_2
      43: invokevirtual #182                // Method net/logstash/logback/encoder/com/lmax/disruptor/dsl/EventProcessorInfo.getEventProcessor:()Lnet/logstash/logback/encoder/com/lmax/disruptor/EventProcessor;
      46: areturn

  public net.logstash.logback.encoder.com.lmax.disruptor.Sequence getSequenceFor(net.logstash.logback.encoder.com.lmax.disruptor.EventHandler<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #189                // Method getEventProcessorFor:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventHandler;)Lnet/logstash/logback/encoder/com/lmax/disruptor/EventProcessor;
       5: invokeinterface #54,  1           // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/EventProcessor.getSequence:()Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;
      10: areturn

  public void unMarkEventProcessorsAsEndOfChain(net.logstash.logback.encoder.com.lmax.disruptor.Sequence...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     37
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: aload         5
      23: invokespecial #194                // Method getEventProcessorInfo:(Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;)Lnet/logstash/logback/encoder/com/lmax/disruptor/dsl/ConsumerInfo;
      26: invokeinterface #197,  1          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/dsl/ConsumerInfo.markAsUsedInBarrier:()V
      31: iinc          4, 1
      34: goto          8
      37: return

  public java.util.Iterator<net.logstash.logback.encoder.com.lmax.disruptor.dsl.ConsumerInfo> iterator();
    Code:
       0: aload_0
       1: getfield      #32                 // Field consumerInfos:Ljava/util/Collection;
       4: invokeinterface #102,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: areturn

  public net.logstash.logback.encoder.com.lmax.disruptor.SequenceBarrier getBarrierFor(net.logstash.logback.encoder.com.lmax.disruptor.EventHandler<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #155                // Method getEventProcessorInfo:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventHandler;)Lnet/logstash/logback/encoder/com/lmax/disruptor/dsl/EventProcessorInfo;
       5: astore_2
       6: aload_2
       7: ifnull        19
      10: aload_2
      11: invokeinterface #207,  1          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/dsl/ConsumerInfo.getBarrier:()Lnet/logstash/logback/encoder/com/lmax/disruptor/SequenceBarrier;
      16: goto          20
      19: aconst_null
      20: areturn

  private net.logstash.logback.encoder.com.lmax.disruptor.dsl.EventProcessorInfo<T> getEventProcessorInfo(net.logstash.logback.encoder.com.lmax.disruptor.EventHandler<T>);
    Code:
       0: aload_0
       1: getfield      #25                 // Field eventProcessorInfoByEventHandler:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #212,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #40                 // class net/logstash/logback/encoder/com/lmax/disruptor/dsl/EventProcessorInfo
      13: areturn

  private net.logstash.logback.encoder.com.lmax.disruptor.dsl.ConsumerInfo getEventProcessorInfo(net.logstash.logback.encoder.com.lmax.disruptor.Sequence);
    Code:
       0: aload_0
       1: getfield      #27                 // Field eventProcessorInfoBySequence:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #212,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #116                // class net/logstash/logback/encoder/com/lmax/disruptor/dsl/ConsumerInfo
      13: areturn
}
