Compiled from "Sequencer.java"
public interface net.logstash.logback.encoder.com.lmax.disruptor.Sequencer extends net.logstash.logback.encoder.com.lmax.disruptor.Cursored,net.logstash.logback.encoder.com.lmax.disruptor.Sequenced {
  public static final long INITIAL_CURSOR_VALUE;

  public abstract void claim(long);

  public abstract boolean isAvailable(long);

  public abstract void addGatingSequences(net.logstash.logback.encoder.com.lmax.disruptor.Sequence...);

  public abstract boolean removeGatingSequence(net.logstash.logback.encoder.com.lmax.disruptor.Sequence);

  public abstract net.logstash.logback.encoder.com.lmax.disruptor.SequenceBarrier newBarrier(net.logstash.logback.encoder.com.lmax.disruptor.Sequence...);

  public abstract long getMinimumSequence();

  public abstract long getHighestPublishedSequence(long, long);

  public abstract <T> net.logstash.logback.encoder.com.lmax.disruptor.EventPoller<T> newPoller(net.logstash.logback.encoder.com.lmax.disruptor.DataProvider<T>, net.logstash.logback.encoder.com.lmax.disruptor.Sequence...);
}
