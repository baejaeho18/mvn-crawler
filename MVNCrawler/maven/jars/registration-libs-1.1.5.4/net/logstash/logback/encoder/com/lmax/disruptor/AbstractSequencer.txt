Compiled from "AbstractSequencer.java"
public abstract class net.logstash.logback.encoder.com.lmax.disruptor.AbstractSequencer implements net.logstash.logback.encoder.com.lmax.disruptor.Sequencer {
  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<net.logstash.logback.encoder.com.lmax.disruptor.AbstractSequencer, net.logstash.logback.encoder.com.lmax.disruptor.Sequence[]> SEQUENCE_UPDATER;

  protected final int bufferSize;

  protected final net.logstash.logback.encoder.com.lmax.disruptor.WaitStrategy waitStrategy;

  protected final net.logstash.logback.encoder.com.lmax.disruptor.Sequence cursor;

  protected volatile net.logstash.logback.encoder.com.lmax.disruptor.Sequence[] gatingSequences;

  public net.logstash.logback.encoder.com.lmax.disruptor.AbstractSequencer(int, net.logstash.logback.encoder.com.lmax.disruptor.WaitStrategy);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #25                 // class net/logstash/logback/encoder/com/lmax/disruptor/Sequence
       8: dup
       9: ldc2_w        #26                 // long -1l
      12: invokespecial #30                 // Method net/logstash/logback/encoder/com/lmax/disruptor/Sequence."<init>":(J)V
      15: putfield      #32                 // Field cursor:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;
      18: aload_0
      19: iconst_0
      20: anewarray     #25                 // class net/logstash/logback/encoder/com/lmax/disruptor/Sequence
      23: putfield      #34                 // Field gatingSequences:[Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;
      26: iload_1
      27: iconst_1
      28: if_icmpge     41
      31: new           #36                 // class java/lang/IllegalArgumentException
      34: dup
      35: ldc           #38                 // String bufferSize must not be less than 1
      37: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: iload_1
      42: invokestatic  #49                 // Method java/lang/Integer.bitCount:(I)I
      45: iconst_1
      46: if_icmpeq     59
      49: new           #36                 // class java/lang/IllegalArgumentException
      52: dup
      53: ldc           #51                 // String bufferSize must be a power of 2
      55: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: aload_0
      60: iload_1
      61: putfield      #53                 // Field bufferSize:I
      64: aload_0
      65: aload_2
      66: putfield      #55                 // Field waitStrategy:Lnet/logstash/logback/encoder/com/lmax/disruptor/WaitStrategy;
      69: return

  public final long getCursor();
    Code:
       0: aload_0
       1: getfield      #32                 // Field cursor:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;
       4: invokevirtual #62                 // Method net/logstash/logback/encoder/com/lmax/disruptor/Sequence.get:()J
       7: lreturn

  public final int getBufferSize();
    Code:
       0: aload_0
       1: getfield      #53                 // Field bufferSize:I
       4: ireturn

  public final void addGatingSequences(net.logstash.logback.encoder.com.lmax.disruptor.Sequence...);
    Code:
       0: aload_0
       1: getstatic     #68                 // Field SEQUENCE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: aload_0
       5: aload_1
       6: invokestatic  #74                 // Method net/logstash/logback/encoder/com/lmax/disruptor/SequenceGroups.addSequences:(Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Lnet/logstash/logback/encoder/com/lmax/disruptor/Cursored;[Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;)V
       9: return

  public boolean removeGatingSequence(net.logstash.logback.encoder.com.lmax.disruptor.Sequence);
    Code:
       0: aload_0
       1: getstatic     #68                 // Field SEQUENCE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: aload_1
       5: invokestatic  #80                 // Method net/logstash/logback/encoder/com/lmax/disruptor/SequenceGroups.removeSequence:(Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;)Z
       8: ireturn

  public long getMinimumSequence();
    Code:
       0: aload_0
       1: getfield      #34                 // Field gatingSequences:[Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;
       4: aload_0
       5: getfield      #32                 // Field cursor:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;
       8: invokevirtual #62                 // Method net/logstash/logback/encoder/com/lmax/disruptor/Sequence.get:()J
      11: invokestatic  #87                 // Method net/logstash/logback/encoder/com/lmax/disruptor/util/Util.getMinimumSequence:([Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;J)J
      14: lreturn

  public net.logstash.logback.encoder.com.lmax.disruptor.SequenceBarrier newBarrier(net.logstash.logback.encoder.com.lmax.disruptor.Sequence...);
    Code:
       0: new           #91                 // class net/logstash/logback/encoder/com/lmax/disruptor/ProcessingSequenceBarrier
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #55                 // Field waitStrategy:Lnet/logstash/logback/encoder/com/lmax/disruptor/WaitStrategy;
       9: aload_0
      10: getfield      #32                 // Field cursor:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;
      13: aload_1
      14: invokespecial #94                 // Method net/logstash/logback/encoder/com/lmax/disruptor/ProcessingSequenceBarrier."<init>":(Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;Lnet/logstash/logback/encoder/com/lmax/disruptor/WaitStrategy;Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;[Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;)V
      17: areturn

  public <T> net.logstash.logback.encoder.com.lmax.disruptor.EventPoller<T> newPoller(net.logstash.logback.encoder.com.lmax.disruptor.DataProvider<T>, net.logstash.logback.encoder.com.lmax.disruptor.Sequence...);
    Code:
       0: aload_1
       1: aload_0
       2: new           #25                 // class net/logstash/logback/encoder/com/lmax/disruptor/Sequence
       5: dup
       6: invokespecial #99                 // Method net/logstash/logback/encoder/com/lmax/disruptor/Sequence."<init>":()V
       9: aload_0
      10: getfield      #32                 // Field cursor:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;
      13: aload_2
      14: invokestatic  #105                // Method net/logstash/logback/encoder/com/lmax/disruptor/EventPoller.newInstance:(Lnet/logstash/logback/encoder/com/lmax/disruptor/DataProvider;Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;[Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;)Lnet/logstash/logback/encoder/com/lmax/disruptor/EventPoller;
      17: areturn

  public java.lang.String toString();
    Code:
       0: new           #112                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #113                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #115                // String AbstractSequencer{waitStrategy=
       9: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #55                 // Field waitStrategy:Lnet/logstash/logback/encoder/com/lmax/disruptor/WaitStrategy;
      16: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #124                // String , cursor=
      21: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #32                 // Field cursor:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;
      28: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #126                // String , gatingSequences=
      33: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #34                 // Field gatingSequences:[Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;
      40: invokestatic  #131                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      43: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: bipush        125
      48: invokevirtual #134                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      51: invokevirtual #136                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: areturn

  static {};
    Code:
       0: ldc           #2                  // class net/logstash/logback/encoder/com/lmax/disruptor/AbstractSequencer
       2: ldc           #138                // class "[Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;"
       4: ldc           #139                // String gatingSequences
       6: invokestatic  #145                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #68                 // Field SEQUENCE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: return
}
