Compiled from "WorkerPoolInfo.java"
class net.logstash.logback.encoder.com.lmax.disruptor.dsl.WorkerPoolInfo<T> implements net.logstash.logback.encoder.com.lmax.disruptor.dsl.ConsumerInfo {
  private final net.logstash.logback.encoder.com.lmax.disruptor.WorkerPool<T> workerPool;

  private final net.logstash.logback.encoder.com.lmax.disruptor.SequenceBarrier sequenceBarrier;

  private boolean endOfChain;

  net.logstash.logback.encoder.com.lmax.disruptor.dsl.WorkerPoolInfo(net.logstash.logback.encoder.com.lmax.disruptor.WorkerPool<T>, net.logstash.logback.encoder.com.lmax.disruptor.SequenceBarrier);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #23                 // Field endOfChain:Z
       9: aload_0
      10: aload_1
      11: putfield      #25                 // Field workerPool:Lnet/logstash/logback/encoder/com/lmax/disruptor/WorkerPool;
      14: aload_0
      15: aload_2
      16: putfield      #27                 // Field sequenceBarrier:Lnet/logstash/logback/encoder/com/lmax/disruptor/SequenceBarrier;
      19: return

  public net.logstash.logback.encoder.com.lmax.disruptor.Sequence[] getSequences();
    Code:
       0: aload_0
       1: getfield      #25                 // Field workerPool:Lnet/logstash/logback/encoder/com/lmax/disruptor/WorkerPool;
       4: invokevirtual #37                 // Method net/logstash/logback/encoder/com/lmax/disruptor/WorkerPool.getWorkerSequences:()[Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;
       7: areturn

  public net.logstash.logback.encoder.com.lmax.disruptor.SequenceBarrier getBarrier();
    Code:
       0: aload_0
       1: getfield      #27                 // Field sequenceBarrier:Lnet/logstash/logback/encoder/com/lmax/disruptor/SequenceBarrier;
       4: areturn

  public boolean isEndOfChain();
    Code:
       0: aload_0
       1: getfield      #23                 // Field endOfChain:Z
       4: ireturn

  public void start(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: getfield      #25                 // Field workerPool:Lnet/logstash/logback/encoder/com/lmax/disruptor/WorkerPool;
       4: aload_1
       5: invokevirtual #46                 // Method net/logstash/logback/encoder/com/lmax/disruptor/WorkerPool.start:(Ljava/util/concurrent/Executor;)Lnet/logstash/logback/encoder/com/lmax/disruptor/RingBuffer;
       8: pop
       9: return

  public void halt();
    Code:
       0: aload_0
       1: getfield      #25                 // Field workerPool:Lnet/logstash/logback/encoder/com/lmax/disruptor/WorkerPool;
       4: invokevirtual #51                 // Method net/logstash/logback/encoder/com/lmax/disruptor/WorkerPool.halt:()V
       7: return

  public void markAsUsedInBarrier();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #23                 // Field endOfChain:Z
       5: return

  public boolean isRunning();
    Code:
       0: aload_0
       1: getfield      #25                 // Field workerPool:Lnet/logstash/logback/encoder/com/lmax/disruptor/WorkerPool;
       4: invokevirtual #55                 // Method net/logstash/logback/encoder/com/lmax/disruptor/WorkerPool.isRunning:()Z
       7: ireturn
}
