Compiled from "RingBuffer.java"
public final class net.logstash.logback.encoder.com.lmax.disruptor.RingBuffer<E> extends net.logstash.logback.encoder.com.lmax.disruptor.RingBufferFields<E> implements net.logstash.logback.encoder.com.lmax.disruptor.Cursored, net.logstash.logback.encoder.com.lmax.disruptor.EventSequencer<E>, net.logstash.logback.encoder.com.lmax.disruptor.EventSink<E> {
  public static final long INITIAL_CURSOR_VALUE;

  protected long p1;

  protected long p2;

  protected long p3;

  protected long p4;

  protected long p5;

  protected long p6;

  protected long p7;

  net.logstash.logback.encoder.com.lmax.disruptor.RingBuffer(net.logstash.logback.encoder.com.lmax.disruptor.EventFactory<E>, net.logstash.logback.encoder.com.lmax.disruptor.Sequencer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #30                 // Method net/logstash/logback/encoder/com/lmax/disruptor/RingBufferFields."<init>":(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventFactory;Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;)V
       6: return

  public static <E> net.logstash.logback.encoder.com.lmax.disruptor.RingBuffer<E> createMultiProducer(net.logstash.logback.encoder.com.lmax.disruptor.EventFactory<E>, int, net.logstash.logback.encoder.com.lmax.disruptor.WaitStrategy);
    Code:
       0: new           #43                 // class net/logstash/logback/encoder/com/lmax/disruptor/MultiProducerSequencer
       3: dup
       4: iload_1
       5: aload_2
       6: invokespecial #46                 // Method net/logstash/logback/encoder/com/lmax/disruptor/MultiProducerSequencer."<init>":(ILnet/logstash/logback/encoder/com/lmax/disruptor/WaitStrategy;)V
       9: astore_3
      10: new           #2                  // class net/logstash/logback/encoder/com/lmax/disruptor/RingBuffer
      13: dup
      14: aload_0
      15: aload_3
      16: invokespecial #47                 // Method "<init>":(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventFactory;Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;)V
      19: areturn

  public static <E> net.logstash.logback.encoder.com.lmax.disruptor.RingBuffer<E> createMultiProducer(net.logstash.logback.encoder.com.lmax.disruptor.EventFactory<E>, int);
    Code:
       0: aload_0
       1: iload_1
       2: new           #57                 // class net/logstash/logback/encoder/com/lmax/disruptor/BlockingWaitStrategy
       5: dup
       6: invokespecial #60                 // Method net/logstash/logback/encoder/com/lmax/disruptor/BlockingWaitStrategy."<init>":()V
       9: invokestatic  #62                 // Method createMultiProducer:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventFactory;ILnet/logstash/logback/encoder/com/lmax/disruptor/WaitStrategy;)Lnet/logstash/logback/encoder/com/lmax/disruptor/RingBuffer;
      12: areturn

  public static <E> net.logstash.logback.encoder.com.lmax.disruptor.RingBuffer<E> createSingleProducer(net.logstash.logback.encoder.com.lmax.disruptor.EventFactory<E>, int, net.logstash.logback.encoder.com.lmax.disruptor.WaitStrategy);
    Code:
       0: new           #65                 // class net/logstash/logback/encoder/com/lmax/disruptor/SingleProducerSequencer
       3: dup
       4: iload_1
       5: aload_2
       6: invokespecial #66                 // Method net/logstash/logback/encoder/com/lmax/disruptor/SingleProducerSequencer."<init>":(ILnet/logstash/logback/encoder/com/lmax/disruptor/WaitStrategy;)V
       9: astore_3
      10: new           #2                  // class net/logstash/logback/encoder/com/lmax/disruptor/RingBuffer
      13: dup
      14: aload_0
      15: aload_3
      16: invokespecial #47                 // Method "<init>":(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventFactory;Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;)V
      19: areturn

  public static <E> net.logstash.logback.encoder.com.lmax.disruptor.RingBuffer<E> createSingleProducer(net.logstash.logback.encoder.com.lmax.disruptor.EventFactory<E>, int);
    Code:
       0: aload_0
       1: iload_1
       2: new           #57                 // class net/logstash/logback/encoder/com/lmax/disruptor/BlockingWaitStrategy
       5: dup
       6: invokespecial #60                 // Method net/logstash/logback/encoder/com/lmax/disruptor/BlockingWaitStrategy."<init>":()V
       9: invokestatic  #69                 // Method createSingleProducer:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventFactory;ILnet/logstash/logback/encoder/com/lmax/disruptor/WaitStrategy;)Lnet/logstash/logback/encoder/com/lmax/disruptor/RingBuffer;
      12: areturn

  public static <E> net.logstash.logback.encoder.com.lmax.disruptor.RingBuffer<E> create(net.logstash.logback.encoder.com.lmax.disruptor.dsl.ProducerType, net.logstash.logback.encoder.com.lmax.disruptor.EventFactory<E>, int, net.logstash.logback.encoder.com.lmax.disruptor.WaitStrategy);
    Code:
       0: getstatic     #76                 // Field net/logstash/logback/encoder/com/lmax/disruptor/RingBuffer$1.$SwitchMap$com$lmax$disruptor$dsl$ProducerType:[I
       3: aload_0
       4: invokevirtual #82                 // Method net/logstash/logback/encoder/com/lmax/disruptor/dsl/ProducerType.ordinal:()I
       7: iaload
       8: lookupswitch  { // 2
                     1: 36
                     2: 43
               default: 50
          }
      36: aload_1
      37: iload_2
      38: aload_3
      39: invokestatic  #69                 // Method createSingleProducer:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventFactory;ILnet/logstash/logback/encoder/com/lmax/disruptor/WaitStrategy;)Lnet/logstash/logback/encoder/com/lmax/disruptor/RingBuffer;
      42: areturn
      43: aload_1
      44: iload_2
      45: aload_3
      46: invokestatic  #62                 // Method createMultiProducer:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventFactory;ILnet/logstash/logback/encoder/com/lmax/disruptor/WaitStrategy;)Lnet/logstash/logback/encoder/com/lmax/disruptor/RingBuffer;
      49: areturn
      50: new           #84                 // class java/lang/IllegalStateException
      53: dup
      54: aload_0
      55: invokevirtual #88                 // Method net/logstash/logback/encoder/com/lmax/disruptor/dsl/ProducerType.toString:()Ljava/lang/String;
      58: invokespecial #91                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      61: athrow

  public E get(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #99                 // Method elementAt:(J)Ljava/lang/Object;
       5: areturn

  public long next();
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: invokeinterface #108,  1          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.next:()J
       9: lreturn

  public long next(int);
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: iload_1
       5: invokeinterface #111,  2          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.next:(I)J
      10: lreturn

  public long tryNext() throws net.logstash.logback.encoder.com.lmax.disruptor.InsufficientCapacityException;
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: invokeinterface #117,  1          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.tryNext:()J
       9: lreturn

  public long tryNext(int) throws net.logstash.logback.encoder.com.lmax.disruptor.InsufficientCapacityException;
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: iload_1
       5: invokeinterface #119,  2          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.tryNext:(I)J
      10: lreturn

  public void resetTo(long);
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: lload_1
       5: invokeinterface #125,  3          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.claim:(J)V
      10: aload_0
      11: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      14: lload_1
      15: invokeinterface #128,  3          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(J)V
      20: return

  public E claimAndGetPreallocated(long);
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: lload_1
       5: invokeinterface #125,  3          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.claim:(J)V
      10: aload_0
      11: lload_1
      12: invokevirtual #131                // Method get:(J)Ljava/lang/Object;
      15: areturn

  public boolean isPublished(long);
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: lload_1
       5: invokeinterface #136,  3          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.isAvailable:(J)Z
      10: ireturn

  public void addGatingSequences(net.logstash.logback.encoder.com.lmax.disruptor.Sequence...);
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: aload_1
       5: invokeinterface #140,  2          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.addGatingSequences:([Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;)V
      10: return

  public long getMinimumGatingSequence();
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: invokeinterface #146,  1          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.getMinimumSequence:()J
       9: lreturn

  public boolean removeGatingSequence(net.logstash.logback.encoder.com.lmax.disruptor.Sequence);
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: aload_1
       5: invokeinterface #150,  2          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.removeGatingSequence:(Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;)Z
      10: ireturn

  public net.logstash.logback.encoder.com.lmax.disruptor.SequenceBarrier newBarrier(net.logstash.logback.encoder.com.lmax.disruptor.Sequence...);
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: aload_1
       5: invokeinterface #155,  2          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.newBarrier:([Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;)Lnet/logstash/logback/encoder/com/lmax/disruptor/SequenceBarrier;
      10: areturn

  public net.logstash.logback.encoder.com.lmax.disruptor.EventPoller<E> newPoller(net.logstash.logback.encoder.com.lmax.disruptor.Sequence...);
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: aload_0
       5: aload_1
       6: invokeinterface #162,  3          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.newPoller:(Lnet/logstash/logback/encoder/com/lmax/disruptor/DataProvider;[Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequence;)Lnet/logstash/logback/encoder/com/lmax/disruptor/EventPoller;
      11: areturn

  public long getCursor();
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: invokeinterface #165,  1          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.getCursor:()J
       9: lreturn

  public int getBufferSize();
    Code:
       0: aload_0
       1: getfield      #168                // Field bufferSize:I
       4: ireturn

  public boolean hasAvailableCapacity(int);
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: iload_1
       5: invokeinterface #172,  2          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.hasAvailableCapacity:(I)Z
      10: ireturn

  public void publishEvent(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslator<E>);
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: invokeinterface #108,  1          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.next:()J
       9: lstore_2
      10: aload_0
      11: aload_1
      12: lload_2
      13: invokespecial #180                // Method translateAndPublish:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslator;J)V
      16: return

  public boolean tryPublishEvent(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslator<E>);
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: invokeinterface #117,  1          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.tryNext:()J
       9: lstore_2
      10: aload_0
      11: aload_1
      12: lload_2
      13: invokespecial #180                // Method translateAndPublish:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslator;J)V
      16: iconst_1
      17: ireturn
      18: astore_2
      19: iconst_0
      20: ireturn
    Exception table:
       from    to  target type
           0    17    18   Class net/logstash/logback/encoder/com/lmax/disruptor/InsufficientCapacityException

  public <A> void publishEvent(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorOneArg<E, A>, A);
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: invokeinterface #108,  1          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.next:()J
       9: lstore_3
      10: aload_0
      11: aload_1
      12: lload_3
      13: aload_2
      14: invokespecial #193                // Method translateAndPublish:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorOneArg;JLjava/lang/Object;)V
      17: return

  public <A> boolean tryPublishEvent(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorOneArg<E, A>, A);
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: invokeinterface #117,  1          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.tryNext:()J
       9: lstore_3
      10: aload_0
      11: aload_1
      12: lload_3
      13: aload_2
      14: invokespecial #193                // Method translateAndPublish:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorOneArg;JLjava/lang/Object;)V
      17: iconst_1
      18: ireturn
      19: astore_3
      20: iconst_0
      21: ireturn
    Exception table:
       from    to  target type
           0    18    19   Class net/logstash/logback/encoder/com/lmax/disruptor/InsufficientCapacityException

  public <A, B> void publishEvent(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorTwoArg<E, A, B>, A, B);
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: invokeinterface #108,  1          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.next:()J
       9: lstore        4
      11: aload_0
      12: aload_1
      13: lload         4
      15: aload_2
      16: aload_3
      17: invokespecial #205                // Method translateAndPublish:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorTwoArg;JLjava/lang/Object;Ljava/lang/Object;)V
      20: return

  public <A, B> boolean tryPublishEvent(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorTwoArg<E, A, B>, A, B);
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: invokeinterface #117,  1          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.tryNext:()J
       9: lstore        4
      11: aload_0
      12: aload_1
      13: lload         4
      15: aload_2
      16: aload_3
      17: invokespecial #205                // Method translateAndPublish:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorTwoArg;JLjava/lang/Object;Ljava/lang/Object;)V
      20: iconst_1
      21: ireturn
      22: astore        4
      24: iconst_0
      25: ireturn
    Exception table:
       from    to  target type
           0    21    22   Class net/logstash/logback/encoder/com/lmax/disruptor/InsufficientCapacityException

  public <A, B, C> void publishEvent(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorThreeArg<E, A, B, C>, A, B, C);
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: invokeinterface #108,  1          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.next:()J
       9: lstore        5
      11: aload_0
      12: aload_1
      13: lload         5
      15: aload_2
      16: aload_3
      17: aload         4
      19: invokespecial #216                // Method translateAndPublish:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorThreeArg;JLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      22: return

  public <A, B, C> boolean tryPublishEvent(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorThreeArg<E, A, B, C>, A, B, C);
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: invokeinterface #117,  1          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.tryNext:()J
       9: lstore        5
      11: aload_0
      12: aload_1
      13: lload         5
      15: aload_2
      16: aload_3
      17: aload         4
      19: invokespecial #216                // Method translateAndPublish:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorThreeArg;JLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      22: iconst_1
      23: ireturn
      24: astore        5
      26: iconst_0
      27: ireturn
    Exception table:
       from    to  target type
           0    23    24   Class net/logstash/logback/encoder/com/lmax/disruptor/InsufficientCapacityException

  public void publishEvent(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorVararg<E>, java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: invokeinterface #108,  1          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.next:()J
       9: lstore_3
      10: aload_0
      11: aload_1
      12: lload_3
      13: aload_2
      14: invokespecial #227                // Method translateAndPublish:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorVararg;J[Ljava/lang/Object;)V
      17: return

  public boolean tryPublishEvent(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorVararg<E>, java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: invokeinterface #117,  1          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.tryNext:()J
       9: lstore_3
      10: aload_0
      11: aload_1
      12: lload_3
      13: aload_2
      14: invokespecial #227                // Method translateAndPublish:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorVararg;J[Ljava/lang/Object;)V
      17: iconst_1
      18: ireturn
      19: astore_3
      20: iconst_0
      21: ireturn
    Exception table:
       from    to  target type
           0    18    19   Class net/logstash/logback/encoder/com/lmax/disruptor/InsufficientCapacityException

  public void publishEvents(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslator<E>[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #239                // Method publishEvents:([Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslator;II)V
       8: return

  public void publishEvents(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslator<E>[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #246                // Method checkBounds:([Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslator;II)V
       7: aload_0
       8: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      11: iload_3
      12: invokeinterface #111,  2          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.next:(I)J
      17: lstore        4
      19: aload_0
      20: aload_1
      21: iload_2
      22: iload_3
      23: lload         4
      25: invokespecial #250                // Method translateAndPublishBatch:([Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslator;IIJ)V
      28: return

  public boolean tryPublishEvents(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslator<E>[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #259                // Method tryPublishEvents:([Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslator;II)Z
       8: ireturn

  public boolean tryPublishEvents(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslator<E>[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #246                // Method checkBounds:([Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslator;II)V
       7: aload_0
       8: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      11: iload_3
      12: invokeinterface #119,  2          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.tryNext:(I)J
      17: lstore        4
      19: aload_0
      20: aload_1
      21: iload_2
      22: iload_3
      23: lload         4
      25: invokespecial #250                // Method translateAndPublishBatch:([Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslator;IIJ)V
      28: iconst_1
      29: ireturn
      30: astore        4
      32: iconst_0
      33: ireturn
    Exception table:
       from    to  target type
           7    29    30   Class net/logstash/logback/encoder/com/lmax/disruptor/InsufficientCapacityException

  public <A> void publishEvents(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorOneArg<E, A>, A[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: arraylength
       5: aload_2
       6: invokevirtual #265                // Method publishEvents:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorOneArg;II[Ljava/lang/Object;)V
       9: return

  public <A> void publishEvents(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorOneArg<E, A>, int, int, A[]);
    Code:
       0: aload_0
       1: aload         4
       3: iload_2
       4: iload_3
       5: invokespecial #270                // Method checkBounds:([Ljava/lang/Object;II)V
       8: aload_0
       9: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      12: iload_3
      13: invokeinterface #111,  2          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.next:(I)J
      18: lstore        5
      20: aload_0
      21: aload_1
      22: aload         4
      24: iload_2
      25: iload_3
      26: lload         5
      28: invokespecial #273                // Method translateAndPublishBatch:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorOneArg;[Ljava/lang/Object;IIJ)V
      31: return

  public <A> boolean tryPublishEvents(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorOneArg<E, A>, A[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: arraylength
       5: aload_2
       6: invokevirtual #278                // Method tryPublishEvents:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorOneArg;II[Ljava/lang/Object;)Z
       9: ireturn

  public <A> boolean tryPublishEvents(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorOneArg<E, A>, int, int, A[]);
    Code:
       0: aload_0
       1: aload         4
       3: iload_2
       4: iload_3
       5: invokespecial #270                // Method checkBounds:([Ljava/lang/Object;II)V
       8: aload_0
       9: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      12: iload_3
      13: invokeinterface #119,  2          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.tryNext:(I)J
      18: lstore        5
      20: aload_0
      21: aload_1
      22: aload         4
      24: iload_2
      25: iload_3
      26: lload         5
      28: invokespecial #273                // Method translateAndPublishBatch:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorOneArg;[Ljava/lang/Object;IIJ)V
      31: iconst_1
      32: ireturn
      33: astore        5
      35: iconst_0
      36: ireturn
    Exception table:
       from    to  target type
           8    32    33   Class net/logstash/logback/encoder/com/lmax/disruptor/InsufficientCapacityException

  public <A, B> void publishEvents(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorTwoArg<E, A, B>, A[], B[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: arraylength
       5: aload_2
       6: aload_3
       7: invokevirtual #284                // Method publishEvents:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorTwoArg;II[Ljava/lang/Object;[Ljava/lang/Object;)V
      10: return

  public <A, B> void publishEvents(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorTwoArg<E, A, B>, int, int, A[], B[]);
    Code:
       0: aload_0
       1: aload         4
       3: aload         5
       5: iload_2
       6: iload_3
       7: invokespecial #289                // Method checkBounds:([Ljava/lang/Object;[Ljava/lang/Object;II)V
      10: aload_0
      11: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      14: iload_3
      15: invokeinterface #111,  2          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.next:(I)J
      20: lstore        6
      22: aload_0
      23: aload_1
      24: aload         4
      26: aload         5
      28: iload_2
      29: iload_3
      30: lload         6
      32: invokespecial #292                // Method translateAndPublishBatch:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorTwoArg;[Ljava/lang/Object;[Ljava/lang/Object;IIJ)V
      35: return

  public <A, B> boolean tryPublishEvents(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorTwoArg<E, A, B>, A[], B[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: arraylength
       5: aload_2
       6: aload_3
       7: invokevirtual #297                // Method tryPublishEvents:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorTwoArg;II[Ljava/lang/Object;[Ljava/lang/Object;)Z
      10: ireturn

  public <A, B> boolean tryPublishEvents(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorTwoArg<E, A, B>, int, int, A[], B[]);
    Code:
       0: aload_0
       1: aload         4
       3: aload         5
       5: iload_2
       6: iload_3
       7: invokespecial #289                // Method checkBounds:([Ljava/lang/Object;[Ljava/lang/Object;II)V
      10: aload_0
      11: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      14: iload_3
      15: invokeinterface #119,  2          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.tryNext:(I)J
      20: lstore        6
      22: aload_0
      23: aload_1
      24: aload         4
      26: aload         5
      28: iload_2
      29: iload_3
      30: lload         6
      32: invokespecial #292                // Method translateAndPublishBatch:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorTwoArg;[Ljava/lang/Object;[Ljava/lang/Object;IIJ)V
      35: iconst_1
      36: ireturn
      37: astore        6
      39: iconst_0
      40: ireturn
    Exception table:
       from    to  target type
          10    36    37   Class net/logstash/logback/encoder/com/lmax/disruptor/InsufficientCapacityException

  public <A, B, C> void publishEvents(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorThreeArg<E, A, B, C>, A[], B[], C[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: arraylength
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #303                // Method publishEvents:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorThreeArg;II[Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Object;)V
      12: return

  public <A, B, C> void publishEvents(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorThreeArg<E, A, B, C>, int, int, A[], B[], C[]);
    Code:
       0: aload_0
       1: aload         4
       3: aload         5
       5: aload         6
       7: iload_2
       8: iload_3
       9: invokespecial #308                // Method checkBounds:([Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Object;II)V
      12: aload_0
      13: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      16: iload_3
      17: invokeinterface #111,  2          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.next:(I)J
      22: lstore        7
      24: aload_0
      25: aload_1
      26: aload         4
      28: aload         5
      30: aload         6
      32: iload_2
      33: iload_3
      34: lload         7
      36: invokespecial #311                // Method translateAndPublishBatch:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorThreeArg;[Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Object;IIJ)V
      39: return

  public <A, B, C> boolean tryPublishEvents(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorThreeArg<E, A, B, C>, A[], B[], C[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: arraylength
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #316                // Method tryPublishEvents:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorThreeArg;II[Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Object;)Z
      12: ireturn

  public <A, B, C> boolean tryPublishEvents(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorThreeArg<E, A, B, C>, int, int, A[], B[], C[]);
    Code:
       0: aload_0
       1: aload         4
       3: aload         5
       5: aload         6
       7: iload_2
       8: iload_3
       9: invokespecial #308                // Method checkBounds:([Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Object;II)V
      12: aload_0
      13: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      16: iload_3
      17: invokeinterface #119,  2          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.tryNext:(I)J
      22: lstore        7
      24: aload_0
      25: aload_1
      26: aload         4
      28: aload         5
      30: aload         6
      32: iload_2
      33: iload_3
      34: lload         7
      36: invokespecial #311                // Method translateAndPublishBatch:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorThreeArg;[Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Object;IIJ)V
      39: iconst_1
      40: ireturn
      41: astore        7
      43: iconst_0
      44: ireturn
    Exception table:
       from    to  target type
          12    40    41   Class net/logstash/logback/encoder/com/lmax/disruptor/InsufficientCapacityException

  public void publishEvents(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorVararg<E>, java.lang.Object[]...);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: arraylength
       5: aload_2
       6: invokevirtual #322                // Method publishEvents:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorVararg;II[[Ljava/lang/Object;)V
       9: return

  public void publishEvents(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorVararg<E>, int, int, java.lang.Object[]...);
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: aload         4
       5: invokespecial #327                // Method checkBounds:(II[[Ljava/lang/Object;)V
       8: aload_0
       9: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      12: iload_3
      13: invokeinterface #111,  2          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.next:(I)J
      18: lstore        5
      20: aload_0
      21: aload_1
      22: iload_2
      23: iload_3
      24: lload         5
      26: aload         4
      28: invokespecial #330                // Method translateAndPublishBatch:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorVararg;IIJ[[Ljava/lang/Object;)V
      31: return

  public boolean tryPublishEvents(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorVararg<E>, java.lang.Object[]...);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: arraylength
       5: aload_2
       6: invokevirtual #335                // Method tryPublishEvents:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorVararg;II[[Ljava/lang/Object;)Z
       9: ireturn

  public boolean tryPublishEvents(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorVararg<E>, int, int, java.lang.Object[]...);
    Code:
       0: aload_0
       1: aload         4
       3: iload_2
       4: iload_3
       5: invokespecial #270                // Method checkBounds:([Ljava/lang/Object;II)V
       8: aload_0
       9: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      12: iload_3
      13: invokeinterface #119,  2          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.tryNext:(I)J
      18: lstore        5
      20: aload_0
      21: aload_1
      22: iload_2
      23: iload_3
      24: lload         5
      26: aload         4
      28: invokespecial #330                // Method translateAndPublishBatch:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorVararg;IIJ[[Ljava/lang/Object;)V
      31: iconst_1
      32: ireturn
      33: astore        5
      35: iconst_0
      36: ireturn
    Exception table:
       from    to  target type
           8    32    33   Class net/logstash/logback/encoder/com/lmax/disruptor/InsufficientCapacityException

  public void publish(long);
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: lload_1
       5: invokeinterface #128,  3          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(J)V
      10: return

  public void publish(long, long);
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: lload_1
       5: lload_3
       6: invokeinterface #339,  5          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(JJ)V
      11: return

  public long remainingCapacity();
    Code:
       0: aload_0
       1: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
       4: invokeinterface #344,  1          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.remainingCapacity:()J
       9: lreturn

  private void checkBounds(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslator<E>[], int, int);
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: invokespecial #348                // Method checkBatchSizing:(II)V
       6: aload_0
       7: aload_1
       8: iload_2
       9: iload_3
      10: invokespecial #351                // Method batchOverRuns:([Ljava/lang/Object;II)V
      13: return

  private void checkBatchSizing(int, int);
    Code:
       0: iload_1
       1: iflt          8
       4: iload_2
       5: ifge          46
       8: new           #353                // class java/lang/IllegalArgumentException
      11: dup
      12: new           #355                // class java/lang/StringBuilder
      15: dup
      16: invokespecial #356                // Method java/lang/StringBuilder."<init>":()V
      19: ldc_w         #358                // String Both batchStartsAt and batchSize must be positive but got: batchStartsAt
      22: invokevirtual #362                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload_1
      26: invokevirtual #365                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: ldc_w         #367                // String  and batchSize
      32: invokevirtual #362                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: iload_2
      36: invokevirtual #365                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: invokevirtual #368                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #369                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: iload_2
      47: aload_0
      48: getfield      #168                // Field bufferSize:I
      51: if_icmple     101
      54: new           #353                // class java/lang/IllegalArgumentException
      57: dup
      58: new           #355                // class java/lang/StringBuilder
      61: dup
      62: invokespecial #356                // Method java/lang/StringBuilder."<init>":()V
      65: ldc_w         #371                // String The ring buffer cannot accommodate
      68: invokevirtual #362                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: iload_2
      72: invokevirtual #365                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      75: ldc_w         #373                // String  it only has space for
      78: invokevirtual #362                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_0
      82: getfield      #168                // Field bufferSize:I
      85: invokevirtual #365                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      88: ldc_w         #375                // String  entities.
      91: invokevirtual #362                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: invokevirtual #368                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: invokespecial #369                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     100: athrow
     101: return

  private <A> void checkBounds(A[], int, int);
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: invokespecial #348                // Method checkBatchSizing:(II)V
       6: aload_0
       7: aload_1
       8: iload_2
       9: iload_3
      10: invokespecial #351                // Method batchOverRuns:([Ljava/lang/Object;II)V
      13: return

  private <A, B> void checkBounds(A[], B[], int, int);
    Code:
       0: aload_0
       1: iload_3
       2: iload         4
       4: invokespecial #348                // Method checkBatchSizing:(II)V
       7: aload_0
       8: aload_1
       9: iload_3
      10: iload         4
      12: invokespecial #351                // Method batchOverRuns:([Ljava/lang/Object;II)V
      15: aload_0
      16: aload_2
      17: iload_3
      18: iload         4
      20: invokespecial #351                // Method batchOverRuns:([Ljava/lang/Object;II)V
      23: return

  private <A, B, C> void checkBounds(A[], B[], C[], int, int);
    Code:
       0: aload_0
       1: iload         4
       3: iload         5
       5: invokespecial #348                // Method checkBatchSizing:(II)V
       8: aload_0
       9: aload_1
      10: iload         4
      12: iload         5
      14: invokespecial #351                // Method batchOverRuns:([Ljava/lang/Object;II)V
      17: aload_0
      18: aload_2
      19: iload         4
      21: iload         5
      23: invokespecial #351                // Method batchOverRuns:([Ljava/lang/Object;II)V
      26: aload_0
      27: aload_3
      28: iload         4
      30: iload         5
      32: invokespecial #351                // Method batchOverRuns:([Ljava/lang/Object;II)V
      35: return

  private void checkBounds(int, int, java.lang.Object[][]);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #348                // Method checkBatchSizing:(II)V
       6: aload_0
       7: aload_3
       8: iload_1
       9: iload_2
      10: invokespecial #351                // Method batchOverRuns:([Ljava/lang/Object;II)V
      13: return

  private <A> void batchOverRuns(A[], int, int);
    Code:
       0: iload_2
       1: iload_3
       2: iadd
       3: aload_1
       4: arraylength
       5: if_icmple     59
       8: new           #353                // class java/lang/IllegalArgumentException
      11: dup
      12: new           #355                // class java/lang/StringBuilder
      15: dup
      16: invokespecial #356                // Method java/lang/StringBuilder."<init>":()V
      19: ldc_w         #380                // String A batchSize of:
      22: invokevirtual #362                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload_3
      26: invokevirtual #365                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: ldc_w         #382                // String  with batchStatsAt of:
      32: invokevirtual #362                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: iload_2
      36: invokevirtual #365                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: ldc_w         #384                // String  will overrun the available number of arguments:
      42: invokevirtual #362                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_1
      46: arraylength
      47: iload_2
      48: isub
      49: invokevirtual #365                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      52: invokevirtual #368                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokespecial #369                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: return

  private void translateAndPublish(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslator<E>, long);
    Code:
       0: aload_1
       1: aload_0
       2: lload_2
       3: invokevirtual #131                // Method get:(J)Ljava/lang/Object;
       6: lload_2
       7: invokeinterface #391,  4          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/EventTranslator.translateTo:(Ljava/lang/Object;J)V
      12: aload_0
      13: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      16: lload_2
      17: invokeinterface #128,  3          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(J)V
      22: goto          40
      25: astore        4
      27: aload_0
      28: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      31: lload_2
      32: invokeinterface #128,  3          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(J)V
      37: aload         4
      39: athrow
      40: return
    Exception table:
       from    to  target type
           0    12    25   any
          25    27    25   any

  private <A> void translateAndPublish(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorOneArg<E, A>, long, A);
    Code:
       0: aload_1
       1: aload_0
       2: lload_2
       3: invokevirtual #131                // Method get:(J)Ljava/lang/Object;
       6: lload_2
       7: aload         4
       9: invokeinterface #399,  5          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorOneArg.translateTo:(Ljava/lang/Object;JLjava/lang/Object;)V
      14: aload_0
      15: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      18: lload_2
      19: invokeinterface #128,  3          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(J)V
      24: goto          42
      27: astore        5
      29: aload_0
      30: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      33: lload_2
      34: invokeinterface #128,  3          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(J)V
      39: aload         5
      41: athrow
      42: return
    Exception table:
       from    to  target type
           0    14    27   any
          27    29    27   any

  private <A, B> void translateAndPublish(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorTwoArg<E, A, B>, long, A, B);
    Code:
       0: aload_1
       1: aload_0
       2: lload_2
       3: invokevirtual #131                // Method get:(J)Ljava/lang/Object;
       6: lload_2
       7: aload         4
       9: aload         5
      11: invokeinterface #405,  6          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorTwoArg.translateTo:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      20: lload_2
      21: invokeinterface #128,  3          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(J)V
      26: goto          44
      29: astore        6
      31: aload_0
      32: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      35: lload_2
      36: invokeinterface #128,  3          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(J)V
      41: aload         6
      43: athrow
      44: return
    Exception table:
       from    to  target type
           0    16    29   any
          29    31    29   any

  private <A, B, C> void translateAndPublish(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorThreeArg<E, A, B, C>, long, A, B, C);
    Code:
       0: aload_1
       1: aload_0
       2: lload_2
       3: invokevirtual #131                // Method get:(J)Ljava/lang/Object;
       6: lload_2
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokeinterface #411,  7          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorThreeArg.translateTo:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      18: aload_0
      19: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      22: lload_2
      23: invokeinterface #128,  3          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(J)V
      28: goto          46
      31: astore        7
      33: aload_0
      34: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      37: lload_2
      38: invokeinterface #128,  3          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(J)V
      43: aload         7
      45: athrow
      46: return
    Exception table:
       from    to  target type
           0    18    31   any
          31    33    31   any

  private void translateAndPublish(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorVararg<E>, long, java.lang.Object...);
    Code:
       0: aload_1
       1: aload_0
       2: lload_2
       3: invokevirtual #131                // Method get:(J)Ljava/lang/Object;
       6: lload_2
       7: aload         4
       9: invokeinterface #417,  5          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorVararg.translateTo:(Ljava/lang/Object;J[Ljava/lang/Object;)V
      14: aload_0
      15: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      18: lload_2
      19: invokeinterface #128,  3          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(J)V
      24: goto          42
      27: astore        5
      29: aload_0
      30: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      33: lload_2
      34: invokeinterface #128,  3          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(J)V
      39: aload         5
      41: athrow
      42: return
    Exception table:
       from    to  target type
           0    14    27   any
          27    29    27   any

  private void translateAndPublishBatch(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslator<E>[], int, int, long);
    Code:
       0: lload         4
       2: iload_3
       3: iconst_1
       4: isub
       5: i2l
       6: lsub
       7: lstore        6
       9: lload         6
      11: lstore        8
      13: iload_2
      14: iload_3
      15: iadd
      16: istore        10
      18: iload_2
      19: istore        11
      21: iload         11
      23: iload         10
      25: if_icmpge     60
      28: aload_1
      29: iload         11
      31: aaload
      32: astore        12
      34: aload         12
      36: aload_0
      37: lload         8
      39: invokevirtual #131                // Method get:(J)Ljava/lang/Object;
      42: lload         8
      44: dup2
      45: lconst_1
      46: ladd
      47: lstore        8
      49: invokeinterface #391,  4          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/EventTranslator.translateTo:(Ljava/lang/Object;J)V
      54: iinc          11, 1
      57: goto          21
      60: aload_0
      61: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      64: lload         6
      66: lload         4
      68: invokeinterface #339,  5          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(JJ)V
      73: goto          94
      76: astore        13
      78: aload_0
      79: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      82: lload         6
      84: lload         4
      86: invokeinterface #339,  5          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(JJ)V
      91: aload         13
      93: athrow
      94: return
    Exception table:
       from    to  target type
           9    60    76   any
          76    78    76   any

  private <A> void translateAndPublishBatch(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorOneArg<E, A>, A[], int, int, long);
    Code:
       0: lload         5
       2: iload         4
       4: iconst_1
       5: isub
       6: i2l
       7: lsub
       8: lstore        7
      10: lload         7
      12: lstore        9
      14: iload_3
      15: iload         4
      17: iadd
      18: istore        11
      20: iload_3
      21: istore        12
      23: iload         12
      25: iload         11
      27: if_icmpge     59
      30: aload_1
      31: aload_0
      32: lload         9
      34: invokevirtual #131                // Method get:(J)Ljava/lang/Object;
      37: lload         9
      39: dup2
      40: lconst_1
      41: ladd
      42: lstore        9
      44: aload_2
      45: iload         12
      47: aaload
      48: invokeinterface #399,  5          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorOneArg.translateTo:(Ljava/lang/Object;JLjava/lang/Object;)V
      53: iinc          12, 1
      56: goto          23
      59: aload_0
      60: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      63: lload         7
      65: lload         5
      67: invokeinterface #339,  5          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(JJ)V
      72: goto          93
      75: astore        13
      77: aload_0
      78: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      81: lload         7
      83: lload         5
      85: invokeinterface #339,  5          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(JJ)V
      90: aload         13
      92: athrow
      93: return
    Exception table:
       from    to  target type
          10    59    75   any
          75    77    75   any

  private <A, B> void translateAndPublishBatch(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorTwoArg<E, A, B>, A[], B[], int, int, long);
    Code:
       0: lload         6
       2: iload         5
       4: iconst_1
       5: isub
       6: i2l
       7: lsub
       8: lstore        8
      10: lload         8
      12: lstore        10
      14: iload         4
      16: iload         5
      18: iadd
      19: istore        12
      21: iload         4
      23: istore        13
      25: iload         13
      27: iload         12
      29: if_icmpge     65
      32: aload_1
      33: aload_0
      34: lload         10
      36: invokevirtual #131                // Method get:(J)Ljava/lang/Object;
      39: lload         10
      41: dup2
      42: lconst_1
      43: ladd
      44: lstore        10
      46: aload_2
      47: iload         13
      49: aaload
      50: aload_3
      51: iload         13
      53: aaload
      54: invokeinterface #405,  6          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorTwoArg.translateTo:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)V
      59: iinc          13, 1
      62: goto          25
      65: aload_0
      66: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      69: lload         8
      71: lload         6
      73: invokeinterface #339,  5          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(JJ)V
      78: goto          99
      81: astore        14
      83: aload_0
      84: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      87: lload         8
      89: lload         6
      91: invokeinterface #339,  5          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(JJ)V
      96: aload         14
      98: athrow
      99: return
    Exception table:
       from    to  target type
          10    65    81   any
          81    83    81   any

  private <A, B, C> void translateAndPublishBatch(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorThreeArg<E, A, B, C>, A[], B[], C[], int, int, long);
    Code:
       0: lload         7
       2: iload         6
       4: iconst_1
       5: isub
       6: i2l
       7: lsub
       8: lstore        9
      10: lload         9
      12: lstore        11
      14: iload         5
      16: iload         6
      18: iadd
      19: istore        13
      21: iload         5
      23: istore        14
      25: iload         14
      27: iload         13
      29: if_icmpge     70
      32: aload_1
      33: aload_0
      34: lload         11
      36: invokevirtual #131                // Method get:(J)Ljava/lang/Object;
      39: lload         11
      41: dup2
      42: lconst_1
      43: ladd
      44: lstore        11
      46: aload_2
      47: iload         14
      49: aaload
      50: aload_3
      51: iload         14
      53: aaload
      54: aload         4
      56: iload         14
      58: aaload
      59: invokeinterface #411,  7          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorThreeArg.translateTo:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      64: iinc          14, 1
      67: goto          25
      70: aload_0
      71: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      74: lload         9
      76: lload         7
      78: invokeinterface #339,  5          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(JJ)V
      83: goto          104
      86: astore        15
      88: aload_0
      89: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      92: lload         9
      94: lload         7
      96: invokeinterface #339,  5          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(JJ)V
     101: aload         15
     103: athrow
     104: return
    Exception table:
       from    to  target type
          10    70    86   any
          86    88    86   any

  private void translateAndPublishBatch(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorVararg<E>, int, int, long, java.lang.Object[][]);
    Code:
       0: lload         4
       2: iload_3
       3: iconst_1
       4: isub
       5: i2l
       6: lsub
       7: lstore        7
       9: lload         7
      11: lstore        9
      13: iload_2
      14: iload_3
      15: iadd
      16: istore        11
      18: iload_2
      19: istore        12
      21: iload         12
      23: iload         11
      25: if_icmpge     58
      28: aload_1
      29: aload_0
      30: lload         9
      32: invokevirtual #131                // Method get:(J)Ljava/lang/Object;
      35: lload         9
      37: dup2
      38: lconst_1
      39: ladd
      40: lstore        9
      42: aload         6
      44: iload         12
      46: aaload
      47: invokeinterface #417,  5          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorVararg.translateTo:(Ljava/lang/Object;J[Ljava/lang/Object;)V
      52: iinc          12, 1
      55: goto          21
      58: aload_0
      59: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      62: lload         7
      64: lload         4
      66: invokeinterface #339,  5          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(JJ)V
      71: goto          92
      74: astore        13
      76: aload_0
      77: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      80: lload         7
      82: lload         4
      84: invokeinterface #339,  5          // InterfaceMethod net/logstash/logback/encoder/com/lmax/disruptor/Sequencer.publish:(JJ)V
      89: aload         13
      91: athrow
      92: return
    Exception table:
       from    to  target type
           9    58    74   any
          74    76    74   any

  public java.lang.String toString();
    Code:
       0: new           #355                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #356                // Method java/lang/StringBuilder."<init>":()V
       7: ldc_w         #430                // String RingBuffer{bufferSize=
      10: invokevirtual #362                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_0
      14: getfield      #168                // Field bufferSize:I
      17: invokevirtual #365                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      20: ldc_w         #432                // String , sequencer=
      23: invokevirtual #362                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #104                // Field sequencer:Lnet/logstash/logback/encoder/com/lmax/disruptor/Sequencer;
      30: invokevirtual #435                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: ldc_w         #437                // String }
      36: invokevirtual #362                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #368                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: areturn
}
