Compiled from "DelegatingAsyncDisruptorAppender.java"
public abstract class net.logstash.logback.appender.DelegatingAsyncDisruptorAppender<Event extends ch.qos.logback.core.spi.DeferredProcessingAware, Listener extends net.logstash.logback.appender.listener.AppenderListener<Event>> extends net.logstash.logback.appender.AsyncDisruptorAppender<Event, Listener> implements ch.qos.logback.core.spi.AppenderAttachable<Event> {
  private final ch.qos.logback.core.spi.AppenderAttachableImpl<Event> appenders;

  public net.logstash.logback.appender.DelegatingAsyncDisruptorAppender();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method net/logstash/logback/appender/AsyncDisruptorAppender."<init>":()V
       4: aload_0
       5: new           #22                 // class ch/qos/logback/core/spi/AppenderAttachableImpl
       8: dup
       9: invokespecial #23                 // Method ch/qos/logback/core/spi/AppenderAttachableImpl."<init>":()V
      12: putfield      #25                 // Field appenders:Lch/qos/logback/core/spi/AppenderAttachableImpl;
      15: aload_0
      16: new           #12                 // class net/logstash/logback/appender/DelegatingAsyncDisruptorAppender$DelegatingEventHandler
      19: dup
      20: aload_0
      21: aconst_null
      22: invokespecial #28                 // Method net/logstash/logback/appender/DelegatingAsyncDisruptorAppender$DelegatingEventHandler."<init>":(Lnet/logstash/logback/appender/DelegatingAsyncDisruptorAppender;Lnet/logstash/logback/appender/DelegatingAsyncDisruptorAppender$1;)V
      25: invokevirtual #32                 // Method setEventHandler:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventHandler;)V
      28: return

  public void start();
    Code:
       0: aload_0
       1: invokespecial #39                 // Method startDelegateAppenders:()V
       4: aload_0
       5: invokespecial #41                 // Method net/logstash/logback/appender/AsyncDisruptorAppender.start:()V
       8: return

  public void stop();
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method isStarted:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokespecial #48                 // Method net/logstash/logback/appender/AsyncDisruptorAppender.stop:()V
      12: aload_0
      13: invokespecial #51                 // Method stopDelegateAppenders:()V
      16: return

  private void startDelegateAppenders();
    Code:
       0: aload_0
       1: getfield      #25                 // Field appenders:Lch/qos/logback/core/spi/AppenderAttachableImpl;
       4: invokevirtual #55                 // Method ch/qos/logback/core/spi/AppenderAttachableImpl.iteratorForAppenders:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          64
      17: aload_1
      18: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #66                 // class ch/qos/logback/core/Appender
      26: astore_2
      27: aload_2
      28: invokeinterface #70,  1           // InterfaceMethod ch/qos/logback/core/Appender.getContext:()Lch/qos/logback/core/Context;
      33: ifnonnull     46
      36: aload_2
      37: aload_0
      38: invokevirtual #71                 // Method getContext:()Lch/qos/logback/core/Context;
      41: invokeinterface #75,  2           // InterfaceMethod ch/qos/logback/core/Appender.setContext:(Lch/qos/logback/core/Context;)V
      46: aload_2
      47: invokeinterface #76,  1           // InterfaceMethod ch/qos/logback/core/Appender.isStarted:()Z
      52: ifne          61
      55: aload_2
      56: invokeinterface #77,  1           // InterfaceMethod ch/qos/logback/core/Appender.start:()V
      61: goto          8
      64: return

  private void stopDelegateAppenders();
    Code:
       0: aload_0
       1: getfield      #25                 // Field appenders:Lch/qos/logback/core/spi/AppenderAttachableImpl;
       4: invokevirtual #55                 // Method ch/qos/logback/core/spi/AppenderAttachableImpl.iteratorForAppenders:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          45
      17: aload_1
      18: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #66                 // class ch/qos/logback/core/Appender
      26: astore_2
      27: aload_2
      28: invokeinterface #76,  1           // InterfaceMethod ch/qos/logback/core/Appender.isStarted:()Z
      33: ifeq          42
      36: aload_2
      37: invokeinterface #84,  1           // InterfaceMethod ch/qos/logback/core/Appender.stop:()V
      42: goto          8
      45: return

  public void addAppender(ch.qos.logback.core.Appender<Event>);
    Code:
       0: aload_0
       1: getfield      #25                 // Field appenders:Lch/qos/logback/core/spi/AppenderAttachableImpl;
       4: aload_1
       5: invokevirtual #89                 // Method ch/qos/logback/core/spi/AppenderAttachableImpl.addAppender:(Lch/qos/logback/core/Appender;)V
       8: return

  public java.util.Iterator<ch.qos.logback.core.Appender<Event>> iteratorForAppenders();
    Code:
       0: aload_0
       1: getfield      #25                 // Field appenders:Lch/qos/logback/core/spi/AppenderAttachableImpl;
       4: invokevirtual #55                 // Method ch/qos/logback/core/spi/AppenderAttachableImpl.iteratorForAppenders:()Ljava/util/Iterator;
       7: areturn

  public ch.qos.logback.core.Appender<Event> getAppender(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #25                 // Field appenders:Lch/qos/logback/core/spi/AppenderAttachableImpl;
       4: aload_1
       5: invokevirtual #96                 // Method ch/qos/logback/core/spi/AppenderAttachableImpl.getAppender:(Ljava/lang/String;)Lch/qos/logback/core/Appender;
       8: areturn

  public boolean isAttached(ch.qos.logback.core.Appender<Event>);
    Code:
       0: aload_0
       1: getfield      #25                 // Field appenders:Lch/qos/logback/core/spi/AppenderAttachableImpl;
       4: aload_1
       5: invokevirtual #103                // Method ch/qos/logback/core/spi/AppenderAttachableImpl.isAttached:(Lch/qos/logback/core/Appender;)Z
       8: ireturn

  public void detachAndStopAllAppenders();
    Code:
       0: aload_0
       1: getfield      #25                 // Field appenders:Lch/qos/logback/core/spi/AppenderAttachableImpl;
       4: invokevirtual #106                // Method ch/qos/logback/core/spi/AppenderAttachableImpl.detachAndStopAllAppenders:()V
       7: return

  public boolean detachAppender(ch.qos.logback.core.Appender<Event>);
    Code:
       0: aload_0
       1: getfield      #25                 // Field appenders:Lch/qos/logback/core/spi/AppenderAttachableImpl;
       4: aload_1
       5: invokevirtual #109                // Method ch/qos/logback/core/spi/AppenderAttachableImpl.detachAppender:(Lch/qos/logback/core/Appender;)Z
       8: ireturn

  public boolean detachAppender(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #25                 // Field appenders:Lch/qos/logback/core/spi/AppenderAttachableImpl;
       4: aload_1
       5: invokevirtual #112                // Method ch/qos/logback/core/spi/AppenderAttachableImpl.detachAppender:(Ljava/lang/String;)Z
       8: ireturn

  static ch.qos.logback.core.spi.AppenderAttachableImpl access$000(net.logstash.logback.appender.DelegatingAsyncDisruptorAppender);
    Code:
       0: aload_0
       1: getfield      #25                 // Field appenders:Lch/qos/logback/core/spi/AppenderAttachableImpl;
       4: areturn
}
