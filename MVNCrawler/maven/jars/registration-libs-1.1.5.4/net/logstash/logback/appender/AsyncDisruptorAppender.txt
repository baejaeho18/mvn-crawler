Compiled from "AsyncDisruptorAppender.java"
public abstract class net.logstash.logback.appender.AsyncDisruptorAppender<Event extends ch.qos.logback.core.spi.DeferredProcessingAware, Listener extends net.logstash.logback.appender.listener.AppenderListener<Event>> extends ch.qos.logback.core.UnsynchronizedAppenderBase<Event> {
  protected static final java.lang.String APPENDER_NAME_FORMAT;

  protected static final java.lang.String THREAD_INDEX_FORMAT;

  public static final java.lang.String DEFAULT_THREAD_NAME_FORMAT;

  public static final int DEFAULT_RING_BUFFER_SIZE;

  public static final net.logstash.logback.encoder.com.lmax.disruptor.dsl.ProducerType DEFAULT_PRODUCER_TYPE;

  public static final net.logstash.logback.encoder.com.lmax.disruptor.WaitStrategy DEFAULT_WAIT_STRATEGY;

  public static final int DEFAULT_DROPPED_WARN_FREQUENCY;

  private static final net.logstash.logback.appender.RingBufferFullException RING_BUFFER_FULL_EXCEPTION;

  private int ringBufferSize;

  private net.logstash.logback.encoder.com.lmax.disruptor.dsl.ProducerType producerType;

  private net.logstash.logback.encoder.com.lmax.disruptor.WaitStrategy waitStrategy;

  private java.lang.String threadNameFormat;

  private boolean useDaemonThread;

  private boolean addDefaultStatusListener;

  private int droppedWarnFrequency;

  private java.util.concurrent.ThreadFactory threadFactory;

  private java.util.concurrent.ScheduledThreadPoolExecutor executorService;

  private int threadPoolCoreSize;

  private net.logstash.logback.encoder.com.lmax.disruptor.dsl.Disruptor<net.logstash.logback.appender.AsyncDisruptorAppender$LogEvent<Event>> disruptor;

  private net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorOneArg<net.logstash.logback.appender.AsyncDisruptorAppender$LogEvent<Event>, Event> eventTranslator;

  private net.logstash.logback.encoder.com.lmax.disruptor.EventHandler<net.logstash.logback.appender.AsyncDisruptorAppender$LogEvent<Event>> eventHandler;

  private net.logstash.logback.encoder.com.lmax.disruptor.ExceptionHandler<net.logstash.logback.appender.AsyncDisruptorAppender$LogEvent<Event>> exceptionHandler;

  private final java.util.concurrent.atomic.AtomicLong consecutiveDroppedCount;

  private net.logstash.logback.appender.AsyncDisruptorAppender$LogEventFactory<Event> eventFactory;

  private final java.util.concurrent.atomic.AtomicInteger threadNumber;

  protected final java.util.List<Listener> listeners;

  public net.logstash.logback.appender.AsyncDisruptorAppender();
    Code:
       0: aload_0
       1: invokespecial #86                 // Method ch/qos/logback/core/UnsynchronizedAppenderBase."<init>":()V
       4: aload_0
       5: sipush        8192
       8: putfield      #88                 // Field ringBufferSize:I
      11: aload_0
      12: getstatic     #90                 // Field DEFAULT_PRODUCER_TYPE:Lnet/logstash/logback/encoder/com/lmax/disruptor/dsl/ProducerType;
      15: putfield      #92                 // Field producerType:Lnet/logstash/logback/encoder/com/lmax/disruptor/dsl/ProducerType;
      18: aload_0
      19: getstatic     #94                 // Field DEFAULT_WAIT_STRATEGY:Lnet/logstash/logback/encoder/com/lmax/disruptor/WaitStrategy;
      22: putfield      #96                 // Field waitStrategy:Lnet/logstash/logback/encoder/com/lmax/disruptor/WaitStrategy;
      25: aload_0
      26: ldc           #36                 // String logback-appender-%1$s-%2$d
      28: putfield      #98                 // Field threadNameFormat:Ljava/lang/String;
      31: aload_0
      32: iconst_1
      33: putfield      #100                // Field useDaemonThread:Z
      36: aload_0
      37: iconst_1
      38: putfield      #102                // Field addDefaultStatusListener:Z
      41: aload_0
      42: sipush        1000
      45: putfield      #104                // Field droppedWarnFrequency:I
      48: aload_0
      49: new           #19                 // class net/logstash/logback/appender/AsyncDisruptorAppender$WorkerThreadFactory
      52: dup
      53: aload_0
      54: aconst_null
      55: invokespecial #107                // Method net/logstash/logback/appender/AsyncDisruptorAppender$WorkerThreadFactory."<init>":(Lnet/logstash/logback/appender/AsyncDisruptorAppender;Lnet/logstash/logback/appender/AsyncDisruptorAppender$1;)V
      58: putfield      #109                // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
      61: aload_0
      62: iconst_1
      63: putfield      #111                // Field threadPoolCoreSize:I
      66: aload_0
      67: new           #16                 // class net/logstash/logback/appender/AsyncDisruptorAppender$LogEventTranslator
      70: dup
      71: invokespecial #112                // Method net/logstash/logback/appender/AsyncDisruptorAppender$LogEventTranslator."<init>":()V
      74: putfield      #114                // Field eventTranslator:Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorOneArg;
      77: aload_0
      78: new           #13                 // class net/logstash/logback/appender/AsyncDisruptorAppender$LogEventExceptionHandler
      81: dup
      82: aload_0
      83: aconst_null
      84: invokespecial #115                // Method net/logstash/logback/appender/AsyncDisruptorAppender$LogEventExceptionHandler."<init>":(Lnet/logstash/logback/appender/AsyncDisruptorAppender;Lnet/logstash/logback/appender/AsyncDisruptorAppender$1;)V
      87: putfield      #117                // Field exceptionHandler:Lnet/logstash/logback/encoder/com/lmax/disruptor/ExceptionHandler;
      90: aload_0
      91: new           #119                // class java/util/concurrent/atomic/AtomicLong
      94: dup
      95: invokespecial #120                // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      98: putfield      #122                // Field consecutiveDroppedCount:Ljava/util/concurrent/atomic/AtomicLong;
     101: aload_0
     102: new           #22                 // class net/logstash/logback/appender/AsyncDisruptorAppender$LogEventFactory
     105: dup
     106: aconst_null
     107: invokespecial #125                // Method net/logstash/logback/appender/AsyncDisruptorAppender$LogEventFactory."<init>":(Lnet/logstash/logback/appender/AsyncDisruptorAppender$1;)V
     110: putfield      #127                // Field eventFactory:Lnet/logstash/logback/appender/AsyncDisruptorAppender$LogEventFactory;
     113: aload_0
     114: new           #129                // class java/util/concurrent/atomic/AtomicInteger
     117: dup
     118: iconst_1
     119: invokespecial #132                // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     122: putfield      #134                // Field threadNumber:Ljava/util/concurrent/atomic/AtomicInteger;
     125: aload_0
     126: new           #136                // class java/util/ArrayList
     129: dup
     130: invokespecial #137                // Method java/util/ArrayList."<init>":()V
     133: putfield      #139                // Field listeners:Ljava/util/List;
     136: return

  public void start();
    Code:
       0: aload_0
       1: getfield      #102                // Field addDefaultStatusListener:Z
       4: ifeq          78
       7: aload_0
       8: invokevirtual #147                // Method getStatusManager:()Lch/qos/logback/core/status/StatusManager;
      11: ifnull        78
      14: aload_0
      15: invokevirtual #147                // Method getStatusManager:()Lch/qos/logback/core/status/StatusManager;
      18: invokeinterface #153,  1          // InterfaceMethod ch/qos/logback/core/status/StatusManager.getCopyOfStatusListenerList:()Ljava/util/List;
      23: invokeinterface #159,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      28: ifeq          78
      31: new           #161                // class net/logstash/logback/status/LevelFilteringStatusListener
      34: dup
      35: invokespecial #162                // Method net/logstash/logback/status/LevelFilteringStatusListener."<init>":()V
      38: astore_1
      39: aload_1
      40: iconst_1
      41: invokevirtual #165                // Method net/logstash/logback/status/LevelFilteringStatusListener.setLevelValue:(I)V
      44: aload_1
      45: new           #167                // class ch/qos/logback/core/status/OnConsoleStatusListener
      48: dup
      49: invokespecial #168                // Method ch/qos/logback/core/status/OnConsoleStatusListener."<init>":()V
      52: invokevirtual #172                // Method net/logstash/logback/status/LevelFilteringStatusListener.setDelegate:(Lch/qos/logback/core/status/StatusListener;)V
      55: aload_1
      56: aload_0
      57: invokevirtual #176                // Method getContext:()Lch/qos/logback/core/Context;
      60: invokevirtual #180                // Method net/logstash/logback/status/LevelFilteringStatusListener.setContext:(Lch/qos/logback/core/Context;)V
      63: aload_1
      64: invokevirtual #182                // Method net/logstash/logback/status/LevelFilteringStatusListener.start:()V
      67: aload_0
      68: invokevirtual #147                // Method getStatusManager:()Lch/qos/logback/core/status/StatusManager;
      71: aload_1
      72: invokeinterface #186,  2          // InterfaceMethod ch/qos/logback/core/status/StatusManager.add:(Lch/qos/logback/core/status/StatusListener;)Z
      77: pop
      78: aload_0
      79: getfield      #188                // Field eventHandler:Lnet/logstash/logback/encoder/com/lmax/disruptor/EventHandler;
      82: ifnonnull     117
      85: aload_0
      86: new           #190                // class java/lang/StringBuilder
      89: dup
      90: invokespecial #191                // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #193                // String No eventHandler was configured for appender
      95: invokevirtual #197                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: getfield      #200                // Field name:Ljava/lang/String;
     102: invokevirtual #197                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: ldc           #202                // String .
     107: invokevirtual #197                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: invokevirtual #206                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: invokevirtual #210                // Method addError:(Ljava/lang/String;)V
     116: return
     117: aload_0
     118: new           #212                // class java/util/concurrent/ScheduledThreadPoolExecutor
     121: dup
     122: aload_0
     123: invokevirtual #216                // Method getThreadPoolCoreSize:()I
     126: aload_0
     127: getfield      #109                // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
     130: invokespecial #219                // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/ThreadFactory;)V
     133: putfield      #221                // Field executorService:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
     136: aload_0
     137: getfield      #221                // Field executorService:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
     140: iconst_1
     141: invokevirtual #225                // Method java/util/concurrent/ScheduledThreadPoolExecutor.setRemoveOnCancelPolicy:(Z)V
     144: aload_0
     145: new           #227                // class net/logstash/logback/encoder/com/lmax/disruptor/dsl/Disruptor
     148: dup
     149: aload_0
     150: getfield      #127                // Field eventFactory:Lnet/logstash/logback/appender/AsyncDisruptorAppender$LogEventFactory;
     153: aload_0
     154: getfield      #88                 // Field ringBufferSize:I
     157: aload_0
     158: getfield      #221                // Field executorService:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
     161: aload_0
     162: getfield      #92                 // Field producerType:Lnet/logstash/logback/encoder/com/lmax/disruptor/dsl/ProducerType;
     165: aload_0
     166: getfield      #96                 // Field waitStrategy:Lnet/logstash/logback/encoder/com/lmax/disruptor/WaitStrategy;
     169: invokespecial #230                // Method net/logstash/logback/encoder/com/lmax/disruptor/dsl/Disruptor."<init>":(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventFactory;ILjava/util/concurrent/Executor;Lnet/logstash/logback/encoder/com/lmax/disruptor/dsl/ProducerType;Lnet/logstash/logback/encoder/com/lmax/disruptor/WaitStrategy;)V
     172: putfield      #232                // Field disruptor:Lnet/logstash/logback/encoder/com/lmax/disruptor/dsl/Disruptor;
     175: aload_0
     176: getfield      #232                // Field disruptor:Lnet/logstash/logback/encoder/com/lmax/disruptor/dsl/Disruptor;
     179: aload_0
     180: getfield      #117                // Field exceptionHandler:Lnet/logstash/logback/encoder/com/lmax/disruptor/ExceptionHandler;
     183: invokevirtual #236                // Method net/logstash/logback/encoder/com/lmax/disruptor/dsl/Disruptor.setDefaultExceptionHandler:(Lnet/logstash/logback/encoder/com/lmax/disruptor/ExceptionHandler;)V
     186: aload_0
     187: getfield      #232                // Field disruptor:Lnet/logstash/logback/encoder/com/lmax/disruptor/dsl/Disruptor;
     190: iconst_1
     191: anewarray     #238                // class net/logstash/logback/encoder/com/lmax/disruptor/EventHandler
     194: dup
     195: iconst_0
     196: new           #10                 // class net/logstash/logback/appender/AsyncDisruptorAppender$EventClearingEventHandler
     199: dup
     200: aload_0
     201: getfield      #188                // Field eventHandler:Lnet/logstash/logback/encoder/com/lmax/disruptor/EventHandler;
     204: invokespecial #241                // Method net/logstash/logback/appender/AsyncDisruptorAppender$EventClearingEventHandler."<init>":(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventHandler;)V
     207: aastore
     208: invokevirtual #245                // Method net/logstash/logback/encoder/com/lmax/disruptor/dsl/Disruptor.handleEventsWith:([Lnet/logstash/logback/encoder/com/lmax/disruptor/EventHandler;)Lnet/logstash/logback/encoder/com/lmax/disruptor/dsl/EventHandlerGroup;
     211: pop
     212: aload_0
     213: getfield      #232                // Field disruptor:Lnet/logstash/logback/encoder/com/lmax/disruptor/dsl/Disruptor;
     216: invokevirtual #248                // Method net/logstash/logback/encoder/com/lmax/disruptor/dsl/Disruptor.start:()Lnet/logstash/logback/encoder/com/lmax/disruptor/RingBuffer;
     219: pop
     220: aload_0
     221: invokespecial #249                // Method ch/qos/logback/core/UnsynchronizedAppenderBase.start:()V
     224: aload_0
     225: invokevirtual #252                // Method fireAppenderStarted:()V
     228: return

  public void stop();
    Code:
       0: aload_0
       1: invokespecial #262                // Method ch/qos/logback/core/UnsynchronizedAppenderBase.isStarted:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokespecial #264                // Method ch/qos/logback/core/UnsynchronizedAppenderBase.stop:()V
      12: aload_0
      13: getfield      #232                // Field disruptor:Lnet/logstash/logback/encoder/com/lmax/disruptor/dsl/Disruptor;
      16: lconst_1
      17: getstatic     #270                // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
      20: invokevirtual #274                // Method net/logstash/logback/encoder/com/lmax/disruptor/dsl/Disruptor.shutdown:(JLjava/util/concurrent/TimeUnit;)V
      23: goto          34
      26: astore_1
      27: aload_0
      28: ldc_w         #276                // String Some queued events have not been logged due to requested shutdown
      31: invokevirtual #279                // Method addWarn:(Ljava/lang/String;)V
      34: aload_0
      35: getfield      #221                // Field executorService:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      38: invokevirtual #281                // Method java/util/concurrent/ScheduledThreadPoolExecutor.shutdown:()V
      41: aload_0
      42: getfield      #221                // Field executorService:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      45: lconst_1
      46: getstatic     #270                // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
      49: invokevirtual #285                // Method java/util/concurrent/ScheduledThreadPoolExecutor.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      52: ifne          62
      55: aload_0
      56: ldc_w         #276                // String Some queued events have not been logged due to requested shutdown
      59: invokevirtual #279                // Method addWarn:(Ljava/lang/String;)V
      62: goto          74
      65: astore_1
      66: aload_0
      67: ldc_w         #276                // String Some queued events have not been logged due to requested shutdown
      70: aload_1
      71: invokevirtual #288                // Method addWarn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      74: aload_0
      75: invokevirtual #291                // Method fireAppenderStopped:()V
      78: return
    Exception table:
       from    to  target type
          12    23    26   Class net/logstash/logback/encoder/com/lmax/disruptor/TimeoutException
          41    62    65   Class java/lang/InterruptedException

  protected void append(Event);
    Code:
       0: invokestatic  #304                // Method java/lang/System.nanoTime:()J
       3: lstore_2
       4: aload_0
       5: aload_1
       6: invokevirtual #307                // Method prepareForDeferredProcessing:(Lch/qos/logback/core/spi/DeferredProcessingAware;)V
       9: goto          23
      12: astore        4
      14: aload_0
      15: ldc_w         #311                // String Unable to prepare event for deferred processing.  Event output might be missing data.
      18: aload         4
      20: invokevirtual #288                // Method addWarn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      23: aload_0
      24: getfield      #232                // Field disruptor:Lnet/logstash/logback/encoder/com/lmax/disruptor/dsl/Disruptor;
      27: invokevirtual #314                // Method net/logstash/logback/encoder/com/lmax/disruptor/dsl/Disruptor.getRingBuffer:()Lnet/logstash/logback/encoder/com/lmax/disruptor/RingBuffer;
      30: aload_0
      31: getfield      #114                // Field eventTranslator:Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorOneArg;
      34: aload_1
      35: invokevirtual #320                // Method net/logstash/logback/encoder/com/lmax/disruptor/RingBuffer.tryPublishEvent:(Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorOneArg;Ljava/lang/Object;)Z
      38: ifne          118
      41: aload_0
      42: getfield      #122                // Field consecutiveDroppedCount:Ljava/util/concurrent/atomic/AtomicLong;
      45: invokevirtual #323                // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      48: lstore        4
      50: lload         4
      52: aload_0
      53: getfield      #104                // Field droppedWarnFrequency:I
      56: i2l
      57: lrem
      58: lconst_1
      59: lcmp
      60: ifne          107
      63: aload_0
      64: new           #190                // class java/lang/StringBuilder
      67: dup
      68: invokespecial #191                // Method java/lang/StringBuilder."<init>":()V
      71: ldc_w         #325                // String Dropped
      74: invokevirtual #197                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: lload         4
      79: invokevirtual #328                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      82: ldc_w         #330                // String  events (and counting...) due to ring buffer at max capacity [
      85: invokevirtual #197                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_0
      89: getfield      #88                 // Field ringBufferSize:I
      92: invokevirtual #333                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      95: ldc_w         #335                // String ]
      98: invokevirtual #197                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: invokevirtual #206                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokevirtual #279                // Method addWarn:(Ljava/lang/String;)V
     107: aload_0
     108: aload_1
     109: getstatic     #337                // Field RING_BUFFER_FULL_EXCEPTION:Lnet/logstash/logback/appender/RingBufferFullException;
     112: invokevirtual #341                // Method fireEventAppendFailed:(Lch/qos/logback/core/spi/DeferredProcessingAware;Ljava/lang/Throwable;)V
     115: goto          205
     118: invokestatic  #304                // Method java/lang/System.nanoTime:()J
     121: lstore        4
     123: aload_0
     124: getfield      #122                // Field consecutiveDroppedCount:Ljava/util/concurrent/atomic/AtomicLong;
     127: invokevirtual #344                // Method java/util/concurrent/atomic/AtomicLong.get:()J
     130: lstore        6
     132: lload         6
     134: lconst_0
     135: lcmp
     136: ifeq          196
     139: aload_0
     140: getfield      #122                // Field consecutiveDroppedCount:Ljava/util/concurrent/atomic/AtomicLong;
     143: lload         6
     145: lconst_0
     146: invokevirtual #348                // Method java/util/concurrent/atomic/AtomicLong.compareAndSet:(JJ)Z
     149: ifeq          196
     152: aload_0
     153: new           #190                // class java/lang/StringBuilder
     156: dup
     157: invokespecial #191                // Method java/lang/StringBuilder."<init>":()V
     160: ldc_w         #325                // String Dropped
     163: invokevirtual #197                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: lload         6
     168: invokevirtual #328                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     171: ldc_w         #350                // String  total events due to ring buffer at max capacity [
     174: invokevirtual #197                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: aload_0
     178: getfield      #88                 // Field ringBufferSize:I
     181: invokevirtual #333                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     184: ldc_w         #335                // String ]
     187: invokevirtual #197                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     190: invokevirtual #206                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     193: invokevirtual #279                // Method addWarn:(Ljava/lang/String;)V
     196: aload_0
     197: aload_1
     198: lload         4
     200: lload_2
     201: lsub
     202: invokevirtual #354                // Method fireEventAppended:(Lch/qos/logback/core/spi/DeferredProcessingAware;J)V
     205: return
    Exception table:
       from    to  target type
           4     9    12   Class java/lang/RuntimeException

  protected void prepareForDeferredProcessing(Event);
    Code:
       0: aload_1
       1: invokeinterface #364,  1          // InterfaceMethod ch/qos/logback/core/spi/DeferredProcessingAware.prepareForDeferredProcessing:()V
       6: return

  protected java.lang.String calculateThreadName();
    Code:
       0: aload_0
       1: invokevirtual #368                // Method getThreadNameFormatParams:()Ljava/util/List;
       4: astore_1
       5: aload_0
       6: getfield      #98                 // Field threadNameFormat:Ljava/lang/String;
       9: aload_1
      10: aload_1
      11: invokeinterface #371,  1          // InterfaceMethod java/util/List.size:()I
      16: anewarray     #373                // class java/lang/Object
      19: invokeinterface #377,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      24: invokestatic  #383                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      27: areturn

  protected java.util.List<java.lang.Object> getThreadNameFormatParams();
    Code:
       0: iconst_2
       1: anewarray     #373                // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: invokevirtual #389                // Method getName:()Ljava/lang/String;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #134                // Field threadNumber:Ljava/util/concurrent/atomic/AtomicInteger;
      17: invokevirtual #391                // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      20: invokestatic  #397                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: aastore
      24: invokestatic  #403                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      27: areturn

  protected void fireAppenderStarted();
    Code:
       0: aload_0
       1: getfield      #139                // Field listeners:Ljava/util/List;
       4: invokeinterface #407,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #412,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_1
      20: invokeinterface #416,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #418                // class net/logstash/logback/appender/listener/AppenderListener
      28: astore_2
      29: aload_2
      30: aload_0
      31: invokeinterface #422,  2          // InterfaceMethod net/logstash/logback/appender/listener/AppenderListener.appenderStarted:(Lch/qos/logback/core/Appender;)V
      36: goto          10
      39: return

  protected void fireAppenderStopped();
    Code:
       0: aload_0
       1: getfield      #139                // Field listeners:Ljava/util/List;
       4: invokeinterface #407,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #412,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_1
      20: invokeinterface #416,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #418                // class net/logstash/logback/appender/listener/AppenderListener
      28: astore_2
      29: aload_2
      30: aload_0
      31: invokeinterface #428,  2          // InterfaceMethod net/logstash/logback/appender/listener/AppenderListener.appenderStopped:(Lch/qos/logback/core/Appender;)V
      36: goto          10
      39: return

  protected void fireEventAppended(Event, long);
    Code:
       0: aload_0
       1: getfield      #139                // Field listeners:Ljava/util/List;
       4: invokeinterface #407,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore        4
      11: aload         4
      13: invokeinterface #412,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          46
      21: aload         4
      23: invokeinterface #416,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #418                // class net/logstash/logback/appender/listener/AppenderListener
      31: astore        5
      33: aload         5
      35: aload_0
      36: aload_1
      37: lload_2
      38: invokeinterface #433,  5          // InterfaceMethod net/logstash/logback/appender/listener/AppenderListener.eventAppended:(Lch/qos/logback/core/Appender;Lch/qos/logback/core/spi/DeferredProcessingAware;J)V
      43: goto          11
      46: return

  protected void fireEventAppendFailed(Event, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #139                // Field listeners:Ljava/util/List;
       4: invokeinterface #407,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #412,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          43
      19: aload_3
      20: invokeinterface #416,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #418                // class net/logstash/logback/appender/listener/AppenderListener
      28: astore        4
      30: aload         4
      32: aload_0
      33: aload_1
      34: aload_2
      35: invokeinterface #439,  4          // InterfaceMethod net/logstash/logback/appender/listener/AppenderListener.eventAppendFailed:(Lch/qos/logback/core/Appender;Lch/qos/logback/core/spi/DeferredProcessingAware;Ljava/lang/Throwable;)V
      40: goto          10
      43: return

  protected void setEventFactory(net.logstash.logback.appender.AsyncDisruptorAppender$LogEventFactory<Event>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #127                // Field eventFactory:Lnet/logstash/logback/appender/AsyncDisruptorAppender$LogEventFactory;
       5: return

  protected net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorOneArg<net.logstash.logback.appender.AsyncDisruptorAppender$LogEvent<Event>, Event> getEventTranslator();
    Code:
       0: aload_0
       1: getfield      #114                // Field eventTranslator:Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorOneArg;
       4: areturn

  protected void setEventTranslator(net.logstash.logback.encoder.com.lmax.disruptor.EventTranslatorOneArg<net.logstash.logback.appender.AsyncDisruptorAppender$LogEvent<Event>, Event>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #114                // Field eventTranslator:Lnet/logstash/logback/encoder/com/lmax/disruptor/EventTranslatorOneArg;
       5: return

  protected java.util.concurrent.ScheduledExecutorService getExecutorService();
    Code:
       0: aload_0
       1: getfield      #221                // Field executorService:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: areturn

  protected net.logstash.logback.encoder.com.lmax.disruptor.dsl.Disruptor<net.logstash.logback.appender.AsyncDisruptorAppender$LogEvent<Event>> getDisruptor();
    Code:
       0: aload_0
       1: getfield      #232                // Field disruptor:Lnet/logstash/logback/encoder/com/lmax/disruptor/dsl/Disruptor;
       4: areturn

  protected int getThreadPoolCoreSize();
    Code:
       0: aload_0
       1: getfield      #111                // Field threadPoolCoreSize:I
       4: ireturn

  protected void setThreadPoolCoreSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #111                // Field threadPoolCoreSize:I
       5: return

  public java.lang.String getThreadNamePrefix();
    Code:
       0: aload_0
       1: getfield      #98                 // Field threadNameFormat:Ljava/lang/String;
       4: ifnull        41
       7: aload_0
       8: getfield      #98                 // Field threadNameFormat:Ljava/lang/String;
      11: ldc           #33                 // String %2$d
      13: invokevirtual #462                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      16: ifeq          41
      19: aload_0
      20: getfield      #98                 // Field threadNameFormat:Ljava/lang/String;
      23: iconst_0
      24: aload_0
      25: getfield      #98                 // Field threadNameFormat:Ljava/lang/String;
      28: invokevirtual #465                // Method java/lang/String.length:()I
      31: ldc           #33                 // String %2$d
      33: invokevirtual #465                // Method java/lang/String.length:()I
      36: isub
      37: invokevirtual #469                // Method java/lang/String.substring:(II)Ljava/lang/String;
      40: areturn
      41: aload_0
      42: getfield      #98                 // Field threadNameFormat:Ljava/lang/String;
      45: areturn

  public void setThreadNamePrefix(java.lang.String);
    Code:
       0: aload_0
       1: new           #190                // class java/lang/StringBuilder
       4: dup
       5: invokespecial #191                // Method java/lang/StringBuilder."<init>":()V
       8: aload_1
       9: invokevirtual #197                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: ldc           #33                 // String %2$d
      14: invokevirtual #197                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: invokevirtual #206                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      20: invokevirtual #473                // Method setThreadNameFormat:(Ljava/lang/String;)V
      23: return

  public java.lang.String getThreadNameFormat();
    Code:
       0: aload_0
       1: getfield      #98                 // Field threadNameFormat:Ljava/lang/String;
       4: areturn

  public void setThreadNameFormat(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #98                 // Field threadNameFormat:Ljava/lang/String;
       5: return

  public int getRingBufferSize();
    Code:
       0: aload_0
       1: getfield      #88                 // Field ringBufferSize:I
       4: ireturn

  public void setRingBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #88                 // Field ringBufferSize:I
       5: return

  public net.logstash.logback.encoder.com.lmax.disruptor.dsl.ProducerType getProducerType();
    Code:
       0: aload_0
       1: getfield      #92                 // Field producerType:Lnet/logstash/logback/encoder/com/lmax/disruptor/dsl/ProducerType;
       4: areturn

  public void setProducerType(net.logstash.logback.encoder.com.lmax.disruptor.dsl.ProducerType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #92                 // Field producerType:Lnet/logstash/logback/encoder/com/lmax/disruptor/dsl/ProducerType;
       5: return

  public net.logstash.logback.encoder.com.lmax.disruptor.WaitStrategy getWaitStrategy();
    Code:
       0: aload_0
       1: getfield      #96                 // Field waitStrategy:Lnet/logstash/logback/encoder/com/lmax/disruptor/WaitStrategy;
       4: areturn

  public void setWaitStrategy(net.logstash.logback.encoder.com.lmax.disruptor.WaitStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #96                 // Field waitStrategy:Lnet/logstash/logback/encoder/com/lmax/disruptor/WaitStrategy;
       5: return

  public void setWaitStrategyType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #492                // Method net/logstash/logback/appender/WaitStrategyFactory.createWaitStrategyFromString:(Ljava/lang/String;)Lnet/logstash/logback/encoder/com/lmax/disruptor/WaitStrategy;
       5: invokevirtual #494                // Method setWaitStrategy:(Lnet/logstash/logback/encoder/com/lmax/disruptor/WaitStrategy;)V
       8: return

  public java.util.concurrent.ThreadFactory getThreadFactory();
    Code:
       0: aload_0
       1: getfield      #109                // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
       4: areturn

  public void setThreadFactory(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #109                // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
       5: return

  public int getDroppedWarnFrequency();
    Code:
       0: aload_0
       1: getfield      #104                // Field droppedWarnFrequency:I
       4: ireturn

  public void setDroppedWarnFrequency(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #104                // Field droppedWarnFrequency:I
       5: return

  protected net.logstash.logback.encoder.com.lmax.disruptor.EventHandler<net.logstash.logback.appender.AsyncDisruptorAppender$LogEvent<Event>> getEventHandler();
    Code:
       0: aload_0
       1: getfield      #188                // Field eventHandler:Lnet/logstash/logback/encoder/com/lmax/disruptor/EventHandler;
       4: areturn

  protected void setEventHandler(net.logstash.logback.encoder.com.lmax.disruptor.EventHandler<net.logstash.logback.appender.AsyncDisruptorAppender$LogEvent<Event>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #188                // Field eventHandler:Lnet/logstash/logback/encoder/com/lmax/disruptor/EventHandler;
       5: return

  public boolean isDaemon();
    Code:
       0: aload_0
       1: getfield      #100                // Field useDaemonThread:Z
       4: ireturn

  public void setDaemon(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #100                // Field useDaemonThread:Z
       5: return

  public void addListener(Listener);
    Code:
       0: aload_0
       1: getfield      #139                // Field listeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #514,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void removeListener(Listener);
    Code:
       0: aload_0
       1: getfield      #139                // Field listeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #518,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public boolean isAddDefaultStatusListener();
    Code:
       0: aload_0
       1: getfield      #102                // Field addDefaultStatusListener:Z
       4: ireturn

  public void setAddDefaultStatusListener(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #102                // Field addDefaultStatusListener:Z
       5: return

  protected void append(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #309                // class ch/qos/logback/core/spi/DeferredProcessingAware
       5: invokevirtual #523                // Method append:(Lch/qos/logback/core/spi/DeferredProcessingAware;)V
       8: return

  static boolean access$300(net.logstash.logback.appender.AsyncDisruptorAppender);
    Code:
       0: aload_0
       1: getfield      #100                // Field useDaemonThread:Z
       4: ireturn

  static {};
    Code:
       0: getstatic     #532                // Field net/logstash/logback/encoder/com/lmax/disruptor/dsl/ProducerType.MULTI:Lnet/logstash/logback/encoder/com/lmax/disruptor/dsl/ProducerType;
       3: putstatic     #90                 // Field DEFAULT_PRODUCER_TYPE:Lnet/logstash/logback/encoder/com/lmax/disruptor/dsl/ProducerType;
       6: new           #534                // class net/logstash/logback/encoder/com/lmax/disruptor/BlockingWaitStrategy
       9: dup
      10: invokespecial #535                // Method net/logstash/logback/encoder/com/lmax/disruptor/BlockingWaitStrategy."<init>":()V
      13: putstatic     #94                 // Field DEFAULT_WAIT_STRATEGY:Lnet/logstash/logback/encoder/com/lmax/disruptor/WaitStrategy;
      16: new           #537                // class net/logstash/logback/appender/RingBufferFullException
      19: dup
      20: invokespecial #538                // Method net/logstash/logback/appender/RingBufferFullException."<init>":()V
      23: putstatic     #337                // Field RING_BUFFER_FULL_EXCEPTION:Lnet/logstash/logback/appender/RingBufferFullException;
      26: getstatic     #337                // Field RING_BUFFER_FULL_EXCEPTION:Lnet/logstash/logback/appender/RingBufferFullException;
      29: iconst_1
      30: anewarray     #540                // class java/lang/StackTraceElement
      33: dup
      34: iconst_0
      35: new           #540                // class java/lang/StackTraceElement
      38: dup
      39: ldc           #2                  // class net/logstash/logback/appender/AsyncDisruptorAppender
      41: invokevirtual #543                // Method java/lang/Class.getName:()Ljava/lang/String;
      44: ldc_w         #545                // String append(..)
      47: aconst_null
      48: iconst_m1
      49: invokespecial #548                // Method java/lang/StackTraceElement."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
      52: aastore
      53: invokevirtual #552                // Method net/logstash/logback/appender/RingBufferFullException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      56: return
}
