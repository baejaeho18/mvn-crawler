Compiled from "FailureSummaryAppenderListener.java"
class net.logstash.logback.appender.listener.FailureSummaryAppenderListener$FailingState implements net.logstash.logback.appender.listener.FailureSummaryAppenderListener$State,net.logstash.logback.appender.listener.FailureSummaryAppenderListener$FailureSummary {
  private final java.lang.Throwable firstThrowable;

  private final long firstFailureTime;

  private final java.util.concurrent.atomic.AtomicLong consecutiveFailures;

  private volatile java.lang.Throwable mostRecentThrowable;

  private net.logstash.logback.appender.listener.FailureSummaryAppenderListener$FailingState(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #30                 // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: invokespecial #31                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      12: putfield      #33                 // Field consecutiveFailures:Ljava/util/concurrent/atomic/AtomicLong;
      15: aload_0
      16: aload_1
      17: putfield      #35                 // Field firstThrowable:Ljava/lang/Throwable;
      20: aload_0
      21: invokestatic  #41                 // Method java/lang/System.currentTimeMillis:()J
      24: putfield      #43                 // Field firstFailureTime:J
      27: aload_0
      28: aload_1
      29: invokespecial #46                 // Method record:(Ljava/lang/Throwable;)V
      32: return

  public boolean isSucceeding();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.Throwable getFirstFailure();
    Code:
       0: aload_0
       1: getfield      #35                 // Field firstThrowable:Ljava/lang/Throwable;
       4: areturn

  public long getFirstFailureTime();
    Code:
       0: aload_0
       1: getfield      #43                 // Field firstFailureTime:J
       4: lreturn

  public java.lang.Throwable getMostRecentFailure();
    Code:
       0: aload_0
       1: getfield      #56                 // Field mostRecentThrowable:Ljava/lang/Throwable;
       4: areturn

  public long getConsecutiveFailures();
    Code:
       0: aload_0
       1: getfield      #33                 // Field consecutiveFailures:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  private void record(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #33                 // Field consecutiveFailures:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: aload_0
       9: aload_1
      10: putfield      #56                 // Field mostRecentThrowable:Ljava/lang/Throwable;
      13: return

  net.logstash.logback.appender.listener.FailureSummaryAppenderListener$FailingState(java.lang.Throwable, net.logstash.logback.appender.listener.FailureSummaryAppenderListener$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #67                 // Method "<init>":(Ljava/lang/Throwable;)V
       5: return

  static void access$100(net.logstash.logback.appender.listener.FailureSummaryAppenderListener$FailingState, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #46                 // Method record:(Ljava/lang/Throwable;)V
       5: return
}
