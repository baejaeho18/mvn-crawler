Compiled from "JSONParser.java"
public class net.minidev.json.parser.JSONParser {
  public static final int ACCEPT_SIMPLE_QUOTE;

  public static final int ACCEPT_NON_QUOTE;

  public static final int ACCEPT_NAN;

  public static final int IGNORE_CONTROL_CHAR;

  public static final int USE_INTEGER_STORAGE;

  public static final int ACCEPT_LEADING_ZERO;

  public static final int ACCEPT_USELESS_COMMA;

  public static final int USE_HI_PRECISION_FLOAT;

  public static final int ACCEPT_TAILLING_DATA;

  public static final int ACCEPT_TAILLING_SPACE;

  public static final int REJECT_127_CHAR;

  public static final int MODE_PERMISSIVE;

  public static final int MODE_RFC4627;

  public static final int MODE_JSON_SIMPLE;

  public static final int MODE_STRICTEST;

  public static int DEFAULT_PERMISSIVE_MODE;

  private int mode;

  private net.minidev.json.parser.JSONParserInputStream pBinStream;

  private net.minidev.json.parser.JSONParserByteArray pBytes;

  private net.minidev.json.parser.JSONParserReader pStream;

  private net.minidev.json.parser.JSONParserString pString;

  static {};
    Code:
       0: ldc           #50                 // String JSON_SMART_SIMPLE
       2: invokestatic  #52                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: ifnull        14
       8: sipush        1984
      11: goto          15
      14: iconst_m1
      15: putstatic     #58                 // Field DEFAULT_PERMISSIVE_MODE:I
      18: return

  private net.minidev.json.parser.JSONParserReader getPStream();
    Code:
       0: aload_0
       1: getfield      #65                 // Field pStream:Lnet/minidev/json/parser/JSONParserReader;
       4: ifnonnull     22
       7: aload_0
       8: new           #67                 // class net/minidev/json/parser/JSONParserReader
      11: dup
      12: aload_0
      13: getfield      #69                 // Field mode:I
      16: invokespecial #71                 // Method net/minidev/json/parser/JSONParserReader."<init>":(I)V
      19: putfield      #65                 // Field pStream:Lnet/minidev/json/parser/JSONParserReader;
      22: aload_0
      23: getfield      #65                 // Field pStream:Lnet/minidev/json/parser/JSONParserReader;
      26: areturn

  private net.minidev.json.parser.JSONParserInputStream getPBinStream();
    Code:
       0: aload_0
       1: getfield      #79                 // Field pBinStream:Lnet/minidev/json/parser/JSONParserInputStream;
       4: ifnonnull     22
       7: aload_0
       8: new           #81                 // class net/minidev/json/parser/JSONParserInputStream
      11: dup
      12: aload_0
      13: getfield      #69                 // Field mode:I
      16: invokespecial #83                 // Method net/minidev/json/parser/JSONParserInputStream."<init>":(I)V
      19: putfield      #79                 // Field pBinStream:Lnet/minidev/json/parser/JSONParserInputStream;
      22: aload_0
      23: getfield      #79                 // Field pBinStream:Lnet/minidev/json/parser/JSONParserInputStream;
      26: areturn

  private net.minidev.json.parser.JSONParserString getPString();
    Code:
       0: aload_0
       1: getfield      #86                 // Field pString:Lnet/minidev/json/parser/JSONParserString;
       4: ifnonnull     22
       7: aload_0
       8: new           #88                 // class net/minidev/json/parser/JSONParserString
      11: dup
      12: aload_0
      13: getfield      #69                 // Field mode:I
      16: invokespecial #90                 // Method net/minidev/json/parser/JSONParserString."<init>":(I)V
      19: putfield      #86                 // Field pString:Lnet/minidev/json/parser/JSONParserString;
      22: aload_0
      23: getfield      #86                 // Field pString:Lnet/minidev/json/parser/JSONParserString;
      26: areturn

  private net.minidev.json.parser.JSONParserByteArray getPBytes();
    Code:
       0: aload_0
       1: getfield      #93                 // Field pBytes:Lnet/minidev/json/parser/JSONParserByteArray;
       4: ifnonnull     22
       7: aload_0
       8: new           #95                 // class net/minidev/json/parser/JSONParserByteArray
      11: dup
      12: aload_0
      13: getfield      #69                 // Field mode:I
      16: invokespecial #97                 // Method net/minidev/json/parser/JSONParserByteArray."<init>":(I)V
      19: putfield      #93                 // Field pBytes:Lnet/minidev/json/parser/JSONParserByteArray;
      22: aload_0
      23: getfield      #93                 // Field pBytes:Lnet/minidev/json/parser/JSONParserByteArray;
      26: areturn

  public net.minidev.json.parser.JSONParser();
    Code:
       0: aload_0
       1: invokespecial #99                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #58                 // Field DEFAULT_PERMISSIVE_MODE:I
       8: putfield      #69                 // Field mode:I
      11: return

  public net.minidev.json.parser.JSONParser(int);
    Code:
       0: aload_0
       1: invokespecial #99                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #69                 // Field mode:I
       9: return

  public java.lang.Object parse(byte[]) throws net.minidev.json.parser.ParseException;
    Code:
       0: aload_0
       1: invokespecial #107                // Method getPBytes:()Lnet/minidev/json/parser/JSONParserByteArray;
       4: aload_1
       5: invokevirtual #109                // Method net/minidev/json/parser/JSONParserByteArray.parse:([B)Ljava/lang/Object;
       8: areturn

  public <T> T parse(byte[], net.minidev.json.writer.JsonReaderI<T>) throws net.minidev.json.parser.ParseException;
    Code:
       0: aload_0
       1: invokespecial #107                // Method getPBytes:()Lnet/minidev/json/parser/JSONParserByteArray;
       4: aload_1
       5: aload_2
       6: invokevirtual #116                // Method net/minidev/json/parser/JSONParserByteArray.parse:([BLnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
       9: areturn

  public <T> T parse(byte[], java.lang.Class<T>) throws net.minidev.json.parser.ParseException;
    Code:
       0: aload_0
       1: invokespecial #107                // Method getPBytes:()Lnet/minidev/json/parser/JSONParserByteArray;
       4: aload_1
       5: getstatic     #124                // Field net/minidev/json/JSONValue.defaultReader:Lnet/minidev/json/writer/JsonReader;
       8: aload_2
       9: invokevirtual #130                // Method net/minidev/json/writer/JsonReader.getMapper:(Ljava/lang/Class;)Lnet/minidev/json/writer/JsonReaderI;
      12: invokevirtual #116                // Method net/minidev/json/parser/JSONParserByteArray.parse:([BLnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object parse(java.io.InputStream) throws net.minidev.json.parser.ParseException, java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: invokespecial #142                // Method getPBinStream:()Lnet/minidev/json/parser/JSONParserInputStream;
       4: aload_1
       5: invokevirtual #144                // Method net/minidev/json/parser/JSONParserInputStream.parse:(Ljava/io/InputStream;)Ljava/lang/Object;
       8: areturn

  public <T> T parse(java.io.InputStream, net.minidev.json.writer.JsonReaderI<T>) throws net.minidev.json.parser.ParseException, java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: invokespecial #142                // Method getPBinStream:()Lnet/minidev/json/parser/JSONParserInputStream;
       4: aload_1
       5: aload_2
       6: invokevirtual #149                // Method net/minidev/json/parser/JSONParserInputStream.parse:(Ljava/io/InputStream;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
       9: areturn

  public <T> T parse(java.io.InputStream, java.lang.Class<T>) throws net.minidev.json.parser.ParseException, java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: invokespecial #142                // Method getPBinStream:()Lnet/minidev/json/parser/JSONParserInputStream;
       4: aload_1
       5: getstatic     #124                // Field net/minidev/json/JSONValue.defaultReader:Lnet/minidev/json/writer/JsonReader;
       8: aload_2
       9: invokevirtual #130                // Method net/minidev/json/writer/JsonReader.getMapper:(Ljava/lang/Class;)Lnet/minidev/json/writer/JsonReaderI;
      12: invokevirtual #149                // Method net/minidev/json/parser/JSONParserInputStream.parse:(Ljava/io/InputStream;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object parse(java.io.Reader) throws net.minidev.json.parser.ParseException;
    Code:
       0: aload_0
       1: invokespecial #154                // Method getPStream:()Lnet/minidev/json/parser/JSONParserReader;
       4: aload_1
       5: invokevirtual #156                // Method net/minidev/json/parser/JSONParserReader.parse:(Ljava/io/Reader;)Ljava/lang/Object;
       8: areturn

  public <T> T parse(java.io.Reader, net.minidev.json.writer.JsonReaderI<T>) throws net.minidev.json.parser.ParseException;
    Code:
       0: aload_0
       1: invokespecial #154                // Method getPStream:()Lnet/minidev/json/parser/JSONParserReader;
       4: aload_1
       5: aload_2
       6: invokevirtual #161                // Method net/minidev/json/parser/JSONParserReader.parse:(Ljava/io/Reader;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
       9: areturn

  public <T> T parse(java.io.Reader, java.lang.Class<T>) throws net.minidev.json.parser.ParseException;
    Code:
       0: aload_0
       1: invokespecial #154                // Method getPStream:()Lnet/minidev/json/parser/JSONParserReader;
       4: aload_1
       5: getstatic     #124                // Field net/minidev/json/JSONValue.defaultReader:Lnet/minidev/json/writer/JsonReader;
       8: aload_2
       9: invokevirtual #130                // Method net/minidev/json/writer/JsonReader.getMapper:(Ljava/lang/Class;)Lnet/minidev/json/writer/JsonReaderI;
      12: invokevirtual #161                // Method net/minidev/json/parser/JSONParserReader.parse:(Ljava/io/Reader;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object parse(java.lang.String) throws net.minidev.json.parser.ParseException;
    Code:
       0: aload_0
       1: invokespecial #166                // Method getPString:()Lnet/minidev/json/parser/JSONParserString;
       4: aload_1
       5: invokevirtual #168                // Method net/minidev/json/parser/JSONParserString.parse:(Ljava/lang/String;)Ljava/lang/Object;
       8: areturn

  public <T> T parse(java.lang.String, net.minidev.json.writer.JsonReaderI<T>) throws net.minidev.json.parser.ParseException;
    Code:
       0: aload_0
       1: invokespecial #166                // Method getPString:()Lnet/minidev/json/parser/JSONParserString;
       4: aload_1
       5: aload_2
       6: invokevirtual #173                // Method net/minidev/json/parser/JSONParserString.parse:(Ljava/lang/String;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
       9: areturn

  public <T> T parse(java.lang.String, java.lang.Class<T>) throws net.minidev.json.parser.ParseException;
    Code:
       0: aload_0
       1: invokespecial #166                // Method getPString:()Lnet/minidev/json/parser/JSONParserString;
       4: aload_1
       5: getstatic     #124                // Field net/minidev/json/JSONValue.defaultReader:Lnet/minidev/json/writer/JsonReader;
       8: aload_2
       9: invokevirtual #130                // Method net/minidev/json/writer/JsonReader.getMapper:(Ljava/lang/Class;)Lnet/minidev/json/writer/JsonReaderI;
      12: invokevirtual #173                // Method net/minidev/json/parser/JSONParserString.parse:(Ljava/lang/String;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      15: areturn
}
