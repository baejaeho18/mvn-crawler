Compiled from "JSONParserString.java"
class net.minidev.json.parser.JSONParserString extends net.minidev.json.parser.JSONParserMemory {
  private java.lang.String in;

  public net.minidev.json.parser.JSONParserString(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #10                 // Method net/minidev/json/parser/JSONParserMemory."<init>":(I)V
       5: return

  public java.lang.Object parse(java.lang.String) throws net.minidev.json.parser.ParseException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #23                 // Field net/minidev/json/JSONValue.defaultReader:Lnet/minidev/json/writer/JsonReader;
       5: getfield      #29                 // Field net/minidev/json/writer/JsonReader.DEFAULT:Lnet/minidev/json/writer/JsonReaderI;
       8: invokevirtual #35                 // Method parse:(Ljava/lang/String;Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      11: areturn

  public <T> T parse(java.lang.String, net.minidev.json.writer.JsonReaderI<T>) throws net.minidev.json.parser.ParseException;
    Code:
       0: aload_0
       1: aload_2
       2: getfield      #40                 // Field net/minidev/json/writer/JsonReaderI.base:Lnet/minidev/json/writer/JsonReader;
       5: putfield      #45                 // Field base:Lnet/minidev/json/writer/JsonReader;
       8: aload_0
       9: aload_1
      10: putfield      #46                 // Field in:Ljava/lang/String;
      13: aload_0
      14: aload_1
      15: invokevirtual #48                 // Method java/lang/String.length:()I
      18: putfield      #54                 // Field len:I
      21: aload_0
      22: aload_2
      23: invokevirtual #57                 // Method parse:(Lnet/minidev/json/writer/JsonReaderI;)Ljava/lang/Object;
      26: areturn

  protected void extractString(int, int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #46                 // Field in:Ljava/lang/String;
       5: iload_1
       6: iload_2
       7: invokevirtual #65                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      10: putfield      #69                 // Field xs:Ljava/lang/String;
      13: return

  protected void extractStringTrim(int, int);
    Code:
       0: goto          6
       3: iinc          1, 1
       6: iload_1
       7: iload_2
       8: iconst_1
       9: isub
      10: if_icmpge     33
      13: aload_0
      14: getfield      #46                 // Field in:Ljava/lang/String;
      17: iload_1
      18: invokevirtual #75                 // Method java/lang/String.charAt:(I)C
      21: invokestatic  #79                 // Method java/lang/Character.isWhitespace:(C)Z
      24: ifne          3
      27: goto          33
      30: iinc          2, -1
      33: iload_2
      34: iconst_1
      35: isub
      36: iload_1
      37: if_icmple     56
      40: aload_0
      41: getfield      #46                 // Field in:Ljava/lang/String;
      44: iload_2
      45: iconst_1
      46: isub
      47: invokevirtual #75                 // Method java/lang/String.charAt:(I)C
      50: invokestatic  #79                 // Method java/lang/Character.isWhitespace:(C)Z
      53: ifne          30
      56: aload_0
      57: iload_1
      58: iload_2
      59: invokevirtual #85                 // Method extractString:(II)V
      62: return

  protected int indexOf(char, int);
    Code:
       0: aload_0
       1: getfield      #46                 // Field in:Ljava/lang/String;
       4: iload_1
       5: iload_2
       6: invokevirtual #92                 // Method java/lang/String.indexOf:(II)I
       9: ireturn

  protected void read();
    Code:
       0: aload_0
       1: dup
       2: getfield      #100                // Field pos:I
       5: iconst_1
       6: iadd
       7: dup_x1
       8: putfield      #100                // Field pos:I
      11: aload_0
      12: getfield      #54                 // Field len:I
      15: if_icmplt     27
      18: aload_0
      19: bipush        26
      21: putfield      #102                // Field c:C
      24: goto          42
      27: aload_0
      28: aload_0
      29: getfield      #46                 // Field in:Ljava/lang/String;
      32: aload_0
      33: getfield      #100                // Field pos:I
      36: invokevirtual #75                 // Method java/lang/String.charAt:(I)C
      39: putfield      #102                // Field c:C
      42: return

  protected void readS();
    Code:
       0: aload_0
       1: dup
       2: getfield      #100                // Field pos:I
       5: iconst_1
       6: iadd
       7: dup_x1
       8: putfield      #100                // Field pos:I
      11: aload_0
      12: getfield      #54                 // Field len:I
      15: if_icmplt     27
      18: aload_0
      19: bipush        26
      21: putfield      #102                // Field c:C
      24: goto          42
      27: aload_0
      28: aload_0
      29: getfield      #46                 // Field in:Ljava/lang/String;
      32: aload_0
      33: getfield      #100                // Field pos:I
      36: invokevirtual #75                 // Method java/lang/String.charAt:(I)C
      39: putfield      #102                // Field c:C
      42: return

  protected void readNoEnd() throws net.minidev.json.parser.ParseException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #100                // Field pos:I
       5: iconst_1
       6: iadd
       7: dup_x1
       8: putfield      #100                // Field pos:I
      11: aload_0
      12: getfield      #54                 // Field len:I
      15: if_icmplt     41
      18: aload_0
      19: bipush        26
      21: putfield      #102                // Field c:C
      24: new           #21                 // class net/minidev/json/parser/ParseException
      27: dup
      28: aload_0
      29: getfield      #100                // Field pos:I
      32: iconst_1
      33: isub
      34: iconst_3
      35: ldc           #106                // String EOF
      37: invokespecial #108                // Method net/minidev/json/parser/ParseException."<init>":(IILjava/lang/Object;)V
      40: athrow
      41: aload_0
      42: aload_0
      43: getfield      #46                 // Field in:Ljava/lang/String;
      46: aload_0
      47: getfield      #100                // Field pos:I
      50: invokevirtual #75                 // Method java/lang/String.charAt:(I)C
      53: putfield      #102                // Field c:C
      56: return
}
