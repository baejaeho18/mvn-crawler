Compiled from "JSONObject.java"
public class net.minidev.json.JSONObject extends java.util.HashMap<java.lang.String, java.lang.Object> implements net.minidev.json.JSONAware, net.minidev.json.JSONAwareEx, net.minidev.json.JSONStreamAwareEx {
  private static final long serialVersionUID;

  public net.minidev.json.JSONObject();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/util/HashMap."<init>":()V
       4: return

  public static java.lang.String escape(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #27                 // Method net/minidev/json/JSONValue.escape:(Ljava/lang/String;)Ljava/lang/String;
       4: areturn

  public static java.lang.String toJSONString(java.util.Map<java.lang.String, ? extends java.lang.Object>);
    Code:
       0: aload_0
       1: getstatic     #37                 // Field net/minidev/json/JSONValue.COMPRESSION:Lnet/minidev/json/JSONStyle;
       4: invokestatic  #41                 // Method toJSONString:(Ljava/util/Map;Lnet/minidev/json/JSONStyle;)Ljava/lang/String;
       7: areturn

  public static java.lang.String toJSONString(java.util.Map<java.lang.String, ? extends java.lang.Object>, net.minidev.json.JSONStyle);
    Code:
       0: new           #49                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_2
      10: aload_1
      11: invokestatic  #52                 // Method writeJSON:(Ljava/util/Map;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;)V
      14: goto          18
      17: astore_3
      18: aload_2
      19: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn
    Exception table:
       from    to  target type
           8    14    17   Class java/io/IOException

  public static void writeJSONKV(java.lang.String, java.lang.Object, java.lang.Appendable, net.minidev.json.JSONStyle) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     16
       4: aload_2
       5: ldc           #73                 // String null
       7: invokeinterface #75,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      12: pop
      13: goto          59
      16: aload_3
      17: aload_0
      18: invokevirtual #81                 // Method net/minidev/json/JSONStyle.mustProtectKey:(Ljava/lang/String;)Z
      21: ifne          35
      24: aload_2
      25: aload_0
      26: invokeinterface #75,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      31: pop
      32: goto          59
      35: aload_2
      36: bipush        34
      38: invokeinterface #85,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      43: pop
      44: aload_0
      45: aload_2
      46: aload_3
      47: invokestatic  #88                 // Method net/minidev/json/JSONValue.escape:(Ljava/lang/String;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;)V
      50: aload_2
      51: bipush        34
      53: invokeinterface #85,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      58: pop
      59: aload_2
      60: bipush        58
      62: invokeinterface #85,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      67: pop
      68: aload_1
      69: instanceof    #91                 // class java/lang/String
      72: ifeq          87
      75: aload_3
      76: aload_2
      77: aload_1
      78: checkcast     #91                 // class java/lang/String
      81: invokevirtual #93                 // Method net/minidev/json/JSONStyle.writeString:(Ljava/lang/Appendable;Ljava/lang/String;)V
      84: goto          93
      87: aload_1
      88: aload_2
      89: aload_3
      90: invokestatic  #97                 // Method net/minidev/json/JSONValue.writeJSONString:(Ljava/lang/Object;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;)V
      93: return

  public net.minidev.json.JSONObject appendField(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #108                // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: areturn

  public java.lang.String getAsString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #115                // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_2
      13: invokevirtual #119                // Method java/lang/Object.toString:()Ljava/lang/String;
      16: areturn

  public java.lang.Number getAsNumber(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #115                // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_2
      13: instanceof    #125                // class java/lang/Number
      16: ifeq          24
      19: aload_2
      20: checkcast     #125                // class java/lang/Number
      23: areturn
      24: aload_2
      25: invokevirtual #119                // Method java/lang/Object.toString:()Ljava/lang/String;
      28: invokestatic  #127                // Method java/lang/Long.valueOf:(Ljava/lang/String;)Ljava/lang/Long;
      31: areturn

  public net.minidev.json.JSONObject(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #135                // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
       5: return

  public static void writeJSON(java.util.Map<java.lang.String, ? extends java.lang.Object>, java.lang.Appendable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #37                 // Field net/minidev/json/JSONValue.COMPRESSION:Lnet/minidev/json/JSONStyle;
       5: invokestatic  #52                 // Method writeJSON:(Ljava/util/Map;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;)V
       8: return

  public static void writeJSON(java.util.Map<java.lang.String, ? extends java.lang.Object>, java.lang.Appendable, net.minidev.json.JSONStyle) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     14
       4: aload_1
       5: ldc           #73                 // String null
       7: invokeinterface #75,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      12: pop
      13: return
      14: getstatic     #141                // Field net/minidev/json/reader/JsonWriter.JSONMapWriter:Lnet/minidev/json/reader/JsonWriterI;
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokeinterface #147,  4          // InterfaceMethod net/minidev/json/reader/JsonWriterI.writeJSONString:(Ljava/lang/Object;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;)V
      25: return

  public void writeJSONString(java.lang.Appendable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #37                 // Field net/minidev/json/JSONValue.COMPRESSION:Lnet/minidev/json/JSONStyle;
       5: invokestatic  #52                 // Method writeJSON:(Ljava/util/Map;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;)V
       8: return

  public void writeJSONString(java.lang.Appendable, net.minidev.json.JSONStyle) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #52                 // Method writeJSON:(Ljava/util/Map;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;)V
       6: return

  public void merge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #154                // Method merge:(Lnet/minidev/json/JSONObject;Ljava/lang/Object;)Lnet/minidev/json/JSONObject;
       5: pop
       6: return

  protected static net.minidev.json.JSONObject merge(net.minidev.json.JSONObject, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aload_0
       5: areturn
       6: aload_1
       7: instanceof    #1                  // class net/minidev/json/JSONObject
      10: ifeq          22
      13: aload_0
      14: aload_1
      15: checkcast     #1                  // class net/minidev/json/JSONObject
      18: invokestatic  #158                // Method merge:(Lnet/minidev/json/JSONObject;Lnet/minidev/json/JSONObject;)Lnet/minidev/json/JSONObject;
      21: areturn
      22: new           #161                // class java/lang/RuntimeException
      25: dup
      26: new           #49                 // class java/lang/StringBuilder
      29: dup
      30: ldc           #163                // String JSON megre can not merge JSONObject with
      32: invokespecial #165                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      35: aload_1
      36: invokevirtual #168                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      39: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #175                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      48: athrow

  private static net.minidev.json.JSONObject merge(net.minidev.json.JSONObject, net.minidev.json.JSONObject);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aload_0
       5: areturn
       6: aload_0
       7: invokevirtual #177                // Method keySet:()Ljava/util/Set;
      10: invokeinterface #181,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: astore_3
      16: goto          217
      19: aload_3
      20: invokeinterface #187,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #91                 // class java/lang/String
      28: astore_2
      29: aload_0
      30: aload_2
      31: invokevirtual #115                // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
      34: astore        4
      36: aload_1
      37: aload_2
      38: invokevirtual #115                // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
      41: astore        5
      43: aload         5
      45: ifnonnull     51
      48: goto          217
      51: aload         4
      53: instanceof    #193                // class net/minidev/json/JSONArray
      56: ifeq          78
      59: aload_0
      60: aload_2
      61: aload         4
      63: checkcast     #193                // class net/minidev/json/JSONArray
      66: aload         5
      68: invokestatic  #195                // Method merge:(Lnet/minidev/json/JSONArray;Ljava/lang/Object;)Lnet/minidev/json/JSONArray;
      71: invokevirtual #108                // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: pop
      75: goto          217
      78: aload         4
      80: instanceof    #1                  // class net/minidev/json/JSONObject
      83: ifeq          105
      86: aload_0
      87: aload_2
      88: aload         4
      90: checkcast     #1                  // class net/minidev/json/JSONObject
      93: aload         5
      95: invokestatic  #154                // Method merge:(Lnet/minidev/json/JSONObject;Ljava/lang/Object;)Lnet/minidev/json/JSONObject;
      98: invokevirtual #108                // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     101: pop
     102: goto          217
     105: aload         4
     107: aload         5
     109: invokevirtual #198                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     112: ifeq          118
     115: goto          217
     118: aload         4
     120: invokevirtual #168                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     123: aload         5
     125: invokevirtual #168                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     128: invokevirtual #198                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     131: ifeq          170
     134: new           #161                // class java/lang/RuntimeException
     137: dup
     138: new           #49                 // class java/lang/StringBuilder
     141: dup
     142: ldc           #202                // String JSON merge can not merge two
     144: invokespecial #165                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     147: aload         4
     149: invokevirtual #168                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     152: invokevirtual #204                // Method java/lang/Class.getName:()Ljava/lang/String;
     155: invokevirtual #209                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: ldc           #212                // String  Object together
     160: invokevirtual #209                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     163: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     166: invokespecial #175                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     169: athrow
     170: new           #161                // class java/lang/RuntimeException
     173: dup
     174: new           #49                 // class java/lang/StringBuilder
     177: dup
     178: ldc           #214                // String JSON merge can not merge
     180: invokespecial #165                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     183: aload         4
     185: invokevirtual #168                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     188: invokevirtual #204                // Method java/lang/Class.getName:()Ljava/lang/String;
     191: invokevirtual #209                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     194: ldc           #216                // String  with
     196: invokevirtual #209                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     199: aload         5
     201: invokevirtual #168                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     204: invokevirtual #204                // Method java/lang/Class.getName:()Ljava/lang/String;
     207: invokevirtual #209                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     210: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     213: invokespecial #175                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     216: athrow
     217: aload_3
     218: invokeinterface #218,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     223: ifne          19
     226: aload_1
     227: invokevirtual #177                // Method keySet:()Ljava/util/Set;
     230: invokeinterface #181,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     235: astore_3
     236: goto          271
     239: aload_3
     240: invokeinterface #187,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     245: checkcast     #91                 // class java/lang/String
     248: astore_2
     249: aload_0
     250: aload_2
     251: invokevirtual #222                // Method containsKey:(Ljava/lang/Object;)Z
     254: ifeq          260
     257: goto          271
     260: aload_0
     261: aload_2
     262: aload_1
     263: aload_2
     264: invokevirtual #115                // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
     267: invokevirtual #108                // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     270: pop
     271: aload_3
     272: invokeinterface #218,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     277: ifne          239
     280: aload_0
     281: areturn

  protected static net.minidev.json.JSONArray merge(net.minidev.json.JSONArray, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aload_0
       5: areturn
       6: aload_0
       7: instanceof    #193                // class net/minidev/json/JSONArray
      10: ifeq          22
      13: aload_0
      14: aload_1
      15: checkcast     #193                // class net/minidev/json/JSONArray
      18: invokestatic  #227                // Method merge:(Lnet/minidev/json/JSONArray;Lnet/minidev/json/JSONArray;)Lnet/minidev/json/JSONArray;
      21: areturn
      22: aload_0
      23: aload_1
      24: invokevirtual #230                // Method net/minidev/json/JSONArray.add:(Ljava/lang/Object;)Z
      27: pop
      28: aload_0
      29: areturn

  private static net.minidev.json.JSONArray merge(net.minidev.json.JSONArray, net.minidev.json.JSONArray);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #234                // Method net/minidev/json/JSONArray.addAll:(Ljava/util/Collection;)Z
       5: pop
       6: aload_0
       7: areturn

  public java.lang.String toJSONString();
    Code:
       0: aload_0
       1: getstatic     #37                 // Field net/minidev/json/JSONValue.COMPRESSION:Lnet/minidev/json/JSONStyle;
       4: invokestatic  #41                 // Method toJSONString:(Ljava/util/Map;Lnet/minidev/json/JSONStyle;)Ljava/lang/String;
       7: areturn

  public java.lang.String toJSONString(net.minidev.json.JSONStyle);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #41                 // Method toJSONString:(Ljava/util/Map;Lnet/minidev/json/JSONStyle;)Ljava/lang/String;
       5: areturn

  public java.lang.String toString(net.minidev.json.JSONStyle);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #41                 // Method toJSONString:(Ljava/util/Map;Lnet/minidev/json/JSONStyle;)Ljava/lang/String;
       5: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getstatic     #37                 // Field net/minidev/json/JSONValue.COMPRESSION:Lnet/minidev/json/JSONStyle;
       4: invokestatic  #41                 // Method toJSONString:(Ljava/util/Map;Lnet/minidev/json/JSONStyle;)Ljava/lang/String;
       7: areturn
}
