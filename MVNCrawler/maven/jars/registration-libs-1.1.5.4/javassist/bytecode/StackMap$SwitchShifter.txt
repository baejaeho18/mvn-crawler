Compiled from "StackMap.java"
class javassist.bytecode.StackMap$SwitchShifter extends javassist.bytecode.StackMap$Walker {
  private int where;

  private int gap;

  public javassist.bytecode.StackMap$SwitchShifter(javassist.bytecode.StackMap, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method javassist/bytecode/StackMap$Walker."<init>":(Ljavassist/bytecode/StackMap;)V
       5: aload_0
       6: iload_2
       7: putfield      #2                  // Field where:I
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field gap:I
      15: return

  public int locals(int, int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field where:I
       4: iload_1
       5: iload_2
       6: iadd
       7: if_icmpne     29
      10: iload_2
      11: aload_0
      12: getfield      #3                  // Field gap:I
      15: isub
      16: aload_0
      17: getfield      #4                  // Field info:[B
      20: iload_1
      21: iconst_4
      22: isub
      23: invokestatic  #5                  // Method javassist/bytecode/ByteArray.write16bit:(I[BI)V
      26: goto          53
      29: aload_0
      30: getfield      #2                  // Field where:I
      33: iload_1
      34: if_icmpne     53
      37: iload_2
      38: aload_0
      39: getfield      #3                  // Field gap:I
      42: iadd
      43: aload_0
      44: getfield      #4                  // Field info:[B
      47: iload_1
      48: iconst_4
      49: isub
      50: invokestatic  #5                  // Method javassist/bytecode/ByteArray.write16bit:(I[BI)V
      53: aload_0
      54: iload_1
      55: iload_2
      56: iload_3
      57: invokespecial #6                  // Method javassist/bytecode/StackMap$Walker.locals:(III)I
      60: ireturn
}
