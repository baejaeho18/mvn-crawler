Compiled from "StackMapTable.java"
public class javassist.bytecode.StackMapTable extends javassist.bytecode.AttributeInfo {
  public static final java.lang.String tag;

  public static final int TOP;

  public static final int INTEGER;

  public static final int FLOAT;

  public static final int DOUBLE;

  public static final int LONG;

  public static final int NULL;

  public static final int THIS;

  public static final int OBJECT;

  public static final int UNINIT;

  javassist.bytecode.StackMapTable(javassist.bytecode.ConstPool, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #2                  // String StackMapTable
       4: aload_2
       5: invokespecial #3                  // Method javassist/bytecode/AttributeInfo."<init>":(Ljavassist/bytecode/ConstPool;Ljava/lang/String;[B)V
       8: return

  javassist.bytecode.StackMapTable(javassist.bytecode.ConstPool, int, java.io.DataInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokespecial #4                  // Method javassist/bytecode/AttributeInfo."<init>":(Ljavassist/bytecode/ConstPool;ILjava/io/DataInputStream;)V
       7: return

  public javassist.bytecode.AttributeInfo copy(javassist.bytecode.ConstPool, java.util.Map<java.lang.String, java.lang.String>) throws javassist.bytecode.StackMapTable$RuntimeCopyException;
    Code:
       0: new           #1                  // class javassist/bytecode/StackMapTable
       3: dup
       4: aload_1
       5: new           #5                  // class javassist/bytecode/StackMapTable$Copier
       8: dup
       9: aload_0
      10: getfield      #6                  // Field constPool:Ljavassist/bytecode/ConstPool;
      13: aload_0
      14: getfield      #7                  // Field info:[B
      17: aload_1
      18: aload_2
      19: invokespecial #8                  // Method javassist/bytecode/StackMapTable$Copier."<init>":(Ljavassist/bytecode/ConstPool;[BLjavassist/bytecode/ConstPool;Ljava/util/Map;)V
      22: invokevirtual #9                  // Method javassist/bytecode/StackMapTable$Copier.doit:()[B
      25: invokespecial #10                 // Method "<init>":(Ljavassist/bytecode/ConstPool;[B)V
      28: areturn
      29: astore_3
      30: new           #12                 // class javassist/bytecode/StackMapTable$RuntimeCopyException
      33: dup
      34: ldc           #13                 // String bad bytecode. fatal?
      36: invokespecial #14                 // Method javassist/bytecode/StackMapTable$RuntimeCopyException."<init>":(Ljava/lang/String;)V
      39: athrow
    Exception table:
       from    to  target type
           0    28    29   Class javassist/bytecode/BadBytecode

  void write(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method javassist/bytecode/AttributeInfo.write:(Ljava/io/DataOutputStream;)V
       5: return

  public void insertLocal(int, int, int) throws javassist.bytecode.BadBytecode;
    Code:
       0: new           #16                 // class javassist/bytecode/StackMapTable$InsertLocal
       3: dup
       4: aload_0
       5: invokevirtual #17                 // Method get:()[B
       8: iload_1
       9: iload_2
      10: iload_3
      11: invokespecial #18                 // Method javassist/bytecode/StackMapTable$InsertLocal."<init>":([BIII)V
      14: invokevirtual #19                 // Method javassist/bytecode/StackMapTable$InsertLocal.doit:()[B
      17: astore        4
      19: aload_0
      20: aload         4
      22: invokevirtual #20                 // Method set:([B)V
      25: return

  public static int typeTagOf(char);
    Code:
       0: iload_0
       1: lookupswitch  { // 5
                    68: 52
                    70: 54
                    74: 56
                    76: 58
                    91: 58
               default: 61
          }
      52: iconst_3
      53: ireturn
      54: iconst_2
      55: ireturn
      56: iconst_4
      57: ireturn
      58: bipush        7
      60: ireturn
      61: iconst_1
      62: ireturn

  public void println(java.io.PrintWriter);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #21                 // Method javassist/bytecode/StackMapTable$Printer.print:(Ljavassist/bytecode/StackMapTable;Ljava/io/PrintWriter;)V
       5: return

  public void println(java.io.PrintStream);
    Code:
       0: aload_0
       1: new           #22                 // class java/io/PrintWriter
       4: dup
       5: aload_1
       6: iconst_1
       7: invokespecial #23                 // Method java/io/PrintWriter."<init>":(Ljava/io/OutputStream;Z)V
      10: invokestatic  #21                 // Method javassist/bytecode/StackMapTable$Printer.print:(Ljavassist/bytecode/StackMapTable;Ljava/io/PrintWriter;)V
      13: return

  void shiftPc(int, int, boolean) throws javassist.bytecode.BadBytecode;
    Code:
       0: new           #24                 // class javassist/bytecode/StackMapTable$OffsetShifter
       3: dup
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokespecial #25                 // Method javassist/bytecode/StackMapTable$OffsetShifter."<init>":(Ljavassist/bytecode/StackMapTable;II)V
      10: invokevirtual #26                 // Method javassist/bytecode/StackMapTable$OffsetShifter.parse:()V
      13: new           #27                 // class javassist/bytecode/StackMapTable$Shifter
      16: dup
      17: aload_0
      18: iload_1
      19: iload_2
      20: iload_3
      21: invokespecial #28                 // Method javassist/bytecode/StackMapTable$Shifter."<init>":(Ljavassist/bytecode/StackMapTable;IIZ)V
      24: invokevirtual #29                 // Method javassist/bytecode/StackMapTable$Shifter.doit:()V
      27: return

  void shiftForSwitch(int, int) throws javassist.bytecode.BadBytecode;
    Code:
       0: new           #30                 // class javassist/bytecode/StackMapTable$SwitchShifter
       3: dup
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokespecial #31                 // Method javassist/bytecode/StackMapTable$SwitchShifter."<init>":(Ljavassist/bytecode/StackMapTable;II)V
      10: invokevirtual #32                 // Method javassist/bytecode/StackMapTable$SwitchShifter.doit:()V
      13: return

  public void removeNew(int) throws javassist.CannotCompileException;
    Code:
       0: new           #33                 // class javassist/bytecode/StackMapTable$NewRemover
       3: dup
       4: aload_0
       5: invokevirtual #17                 // Method get:()[B
       8: iload_1
       9: invokespecial #34                 // Method javassist/bytecode/StackMapTable$NewRemover."<init>":([BI)V
      12: invokevirtual #35                 // Method javassist/bytecode/StackMapTable$NewRemover.doit:()[B
      15: astore_2
      16: aload_0
      17: aload_2
      18: invokevirtual #20                 // Method set:([B)V
      21: goto          36
      24: astore_2
      25: new           #36                 // class javassist/CannotCompileException
      28: dup
      29: ldc           #37                 // String bad stack map table
      31: aload_2
      32: invokespecial #38                 // Method javassist/CannotCompileException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      35: athrow
      36: return
    Exception table:
       from    to  target type
           0    21    24   Class javassist/bytecode/BadBytecode
}
