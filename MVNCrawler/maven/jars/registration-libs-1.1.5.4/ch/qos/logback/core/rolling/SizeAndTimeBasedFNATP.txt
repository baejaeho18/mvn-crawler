Compiled from "SizeAndTimeBasedFNATP.java"
public class ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP<E> extends ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase<E> {
  int currentPeriodsCounter;

  ch.qos.logback.core.util.FileSize maxFileSize;

  long nextSizeCheck;

  static java.lang.String MISSING_INT_TOKEN;

  static java.lang.String MISSING_DATE_TOKEN;

  private final ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP$Usage usage;

  ch.qos.logback.core.util.InvocationGate invocationGate;

  public ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field ch/qos/logback/core/rolling/SizeAndTimeBasedFNATP$Usage.DIRECT:Lch/qos/logback/core/rolling/SizeAndTimeBasedFNATP$Usage;
       4: invokespecial #2                  // Method "<init>":(Lch/qos/logback/core/rolling/SizeAndTimeBasedFNATP$Usage;)V
       7: return

  public ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP(ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP$Usage);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method ch/qos/logback/core/rolling/TimeBasedFileNamingAndTriggeringPolicyBase."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #4                  // Field currentPeriodsCounter:I
       9: aload_0
      10: lconst_0
      11: putfield      #5                  // Field nextSizeCheck:J
      14: aload_0
      15: new           #6                  // class ch/qos/logback/core/util/DefaultInvocationGate
      18: dup
      19: invokespecial #7                  // Method ch/qos/logback/core/util/DefaultInvocationGate."<init>":()V
      22: putfield      #8                  // Field invocationGate:Lch/qos/logback/core/util/InvocationGate;
      25: aload_0
      26: aload_1
      27: putfield      #9                  // Field usage:Lch/qos/logback/core/rolling/SizeAndTimeBasedFNATP$Usage;
      30: return

  public void start();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method ch/qos/logback/core/rolling/TimeBasedFileNamingAndTriggeringPolicyBase.start:()V
       4: aload_0
       5: getfield      #9                  // Field usage:Lch/qos/logback/core/rolling/SizeAndTimeBasedFNATP$Usage;
       8: getstatic     #1                  // Field ch/qos/logback/core/rolling/SizeAndTimeBasedFNATP$Usage.DIRECT:Lch/qos/logback/core/rolling/SizeAndTimeBasedFNATP$Usage;
      11: if_acmpne     26
      14: aload_0
      15: ldc           #11                 // String SizeAndTimeBasedFNATP is deprecated. Use SizeAndTimeBasedRollingPolicy instead
      17: invokevirtual #12                 // Method addWarn:(Ljava/lang/String;)V
      20: aload_0
      21: ldc           #13                 // String For more information see http://logback.qos.ch/manual/appenders.html#SizeAndTimeBasedRollingPolicy
      23: invokevirtual #12                 // Method addWarn:(Ljava/lang/String;)V
      26: aload_0
      27: invokespecial #14                 // Method ch/qos/logback/core/rolling/TimeBasedFileNamingAndTriggeringPolicyBase.isErrorFree:()Z
      30: ifne          34
      33: return
      34: aload_0
      35: getfield      #15                 // Field maxFileSize:Lch/qos/logback/core/util/FileSize;
      38: ifnonnull     51
      41: aload_0
      42: ldc           #16                 // String maxFileSize property is mandatory.
      44: invokevirtual #17                 // Method addError:(Ljava/lang/String;)V
      47: aload_0
      48: invokevirtual #18                 // Method withErrors:()V
      51: aload_0
      52: invokespecial #19                 // Method validateDateAndIntegerTokens:()Z
      55: ifne          63
      58: aload_0
      59: invokevirtual #18                 // Method withErrors:()V
      62: return
      63: aload_0
      64: aload_0
      65: invokevirtual #20                 // Method createArchiveRemover:()Lch/qos/logback/core/rolling/helper/ArchiveRemover;
      68: putfield      #21                 // Field archiveRemover:Lch/qos/logback/core/rolling/helper/ArchiveRemover;
      71: aload_0
      72: getfield      #21                 // Field archiveRemover:Lch/qos/logback/core/rolling/helper/ArchiveRemover;
      75: aload_0
      76: getfield      #22                 // Field context:Lch/qos/logback/core/Context;
      79: invokeinterface #23,  2           // InterfaceMethod ch/qos/logback/core/rolling/helper/ArchiveRemover.setContext:(Lch/qos/logback/core/Context;)V
      84: aload_0
      85: getfield      #24                 // Field tbrp:Lch/qos/logback/core/rolling/TimeBasedRollingPolicy;
      88: getfield      #25                 // Field ch/qos/logback/core/rolling/TimeBasedRollingPolicy.fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
      91: aload_0
      92: getfield      #26                 // Field dateInCurrentPeriod:Ljava/util/Date;
      95: invokevirtual #27                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern.toRegexForFixedDate:(Ljava/util/Date;)Ljava/lang/String;
      98: astore_1
      99: aload_1
     100: invokestatic  #28                 // Method ch/qos/logback/core/rolling/helper/FileFilterUtil.afterLastSlash:(Ljava/lang/String;)Ljava/lang/String;
     103: astore_2
     104: aload_0
     105: aload_2
     106: invokevirtual #29                 // Method computeCurrentPeriodsHighestCounterValue:(Ljava/lang/String;)V
     109: aload_0
     110: invokevirtual #30                 // Method isErrorFree:()Z
     113: ifeq          121
     116: aload_0
     117: iconst_1
     118: putfield      #31                 // Field started:Z
     121: return

  private boolean validateDateAndIntegerTokens();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #24                 // Field tbrp:Lch/qos/logback/core/rolling/TimeBasedRollingPolicy;
       6: getfield      #25                 // Field ch/qos/logback/core/rolling/TimeBasedRollingPolicy.fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
       9: invokevirtual #32                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern.getIntegerTokenConverter:()Lch/qos/logback/core/rolling/helper/IntegerTokenConverter;
      12: ifnonnull     58
      15: iconst_1
      16: istore_1
      17: aload_0
      18: new           #33                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      25: getstatic     #35                 // Field MISSING_INT_TOKEN:Ljava/lang/String;
      28: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #24                 // Field tbrp:Lch/qos/logback/core/rolling/TimeBasedRollingPolicy;
      35: getfield      #37                 // Field ch/qos/logback/core/rolling/TimeBasedRollingPolicy.fileNamePatternStr:Ljava/lang/String;
      38: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #38                 // String ]
      43: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokevirtual #17                 // Method addError:(Ljava/lang/String;)V
      52: aload_0
      53: ldc           #40                 // String See also http://logback.qos.ch/codes.html#sat_missing_integer_token
      55: invokevirtual #17                 // Method addError:(Ljava/lang/String;)V
      58: aload_0
      59: getfield      #24                 // Field tbrp:Lch/qos/logback/core/rolling/TimeBasedRollingPolicy;
      62: getfield      #25                 // Field ch/qos/logback/core/rolling/TimeBasedRollingPolicy.fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
      65: invokevirtual #41                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern.getPrimaryDateTokenConverter:()Lch/qos/logback/core/rolling/helper/DateTokenConverter;
      68: ifnonnull     108
      71: iconst_1
      72: istore_1
      73: aload_0
      74: new           #33                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      81: getstatic     #42                 // Field MISSING_DATE_TOKEN:Ljava/lang/String;
      84: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_0
      88: getfield      #24                 // Field tbrp:Lch/qos/logback/core/rolling/TimeBasedRollingPolicy;
      91: getfield      #37                 // Field ch/qos/logback/core/rolling/TimeBasedRollingPolicy.fileNamePatternStr:Ljava/lang/String;
      94: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: ldc           #38                 // String ]
      99: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: invokevirtual #17                 // Method addError:(Ljava/lang/String;)V
     108: iload_1
     109: ifne          116
     112: iconst_1
     113: goto          117
     116: iconst_0
     117: ireturn

  protected ch.qos.logback.core.rolling.helper.ArchiveRemover createArchiveRemover();
    Code:
       0: new           #43                 // class ch/qos/logback/core/rolling/helper/SizeAndTimeBasedArchiveRemover
       3: dup
       4: aload_0
       5: getfield      #24                 // Field tbrp:Lch/qos/logback/core/rolling/TimeBasedRollingPolicy;
       8: getfield      #25                 // Field ch/qos/logback/core/rolling/TimeBasedRollingPolicy.fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
      11: aload_0
      12: getfield      #44                 // Field rc:Lch/qos/logback/core/rolling/helper/RollingCalendar;
      15: invokespecial #45                 // Method ch/qos/logback/core/rolling/helper/SizeAndTimeBasedArchiveRemover."<init>":(Lch/qos/logback/core/rolling/helper/FileNamePattern;Lch/qos/logback/core/rolling/helper/RollingCalendar;)V
      18: areturn

  void computeCurrentPeriodsHighestCounterValue(java.lang.String);
    Code:
       0: new           #46                 // class java/io/File
       3: dup
       4: aload_0
       5: invokevirtual #47                 // Method getCurrentPeriodsFileNameWithoutCompressionSuffix:()Ljava/lang/String;
       8: invokespecial #48                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      11: astore_2
      12: aload_2
      13: invokevirtual #49                 // Method java/io/File.getParentFile:()Ljava/io/File;
      16: astore_3
      17: aload_3
      18: aload_1
      19: invokestatic  #50                 // Method ch/qos/logback/core/rolling/helper/FileFilterUtil.filesInFolderMatchingStemRegex:(Ljava/io/File;Ljava/lang/String;)[Ljava/io/File;
      22: astore        4
      24: aload         4
      26: ifnull        35
      29: aload         4
      31: arraylength
      32: ifne          41
      35: aload_0
      36: iconst_0
      37: putfield      #4                  // Field currentPeriodsCounter:I
      40: return
      41: aload_0
      42: aload         4
      44: aload_1
      45: invokestatic  #51                 // Method ch/qos/logback/core/rolling/helper/FileFilterUtil.findHighestCounter:([Ljava/io/File;Ljava/lang/String;)I
      48: putfield      #4                  // Field currentPeriodsCounter:I
      51: aload_0
      52: getfield      #24                 // Field tbrp:Lch/qos/logback/core/rolling/TimeBasedRollingPolicy;
      55: invokevirtual #52                 // Method ch/qos/logback/core/rolling/TimeBasedRollingPolicy.getParentsRawFileProperty:()Ljava/lang/String;
      58: ifnonnull     74
      61: aload_0
      62: getfield      #24                 // Field tbrp:Lch/qos/logback/core/rolling/TimeBasedRollingPolicy;
      65: getfield      #53                 // Field ch/qos/logback/core/rolling/TimeBasedRollingPolicy.compressionMode:Lch/qos/logback/core/rolling/helper/CompressionMode;
      68: getstatic     #54                 // Field ch/qos/logback/core/rolling/helper/CompressionMode.NONE:Lch/qos/logback/core/rolling/helper/CompressionMode;
      71: if_acmpeq     84
      74: aload_0
      75: dup
      76: getfield      #4                  // Field currentPeriodsCounter:I
      79: iconst_1
      80: iadd
      81: putfield      #4                  // Field currentPeriodsCounter:I
      84: return

  public boolean isTriggeringEvent(java.io.File, E);
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method getCurrentTime:()J
       4: lstore_3
       5: lload_3
       6: aload_0
       7: getfield      #56                 // Field nextCheck:J
      10: lcmp
      11: iflt          69
      14: aload_0
      15: getfield      #26                 // Field dateInCurrentPeriod:Ljava/util/Date;
      18: astore        5
      20: aload_0
      21: aload_0
      22: getfield      #24                 // Field tbrp:Lch/qos/logback/core/rolling/TimeBasedRollingPolicy;
      25: getfield      #57                 // Field ch/qos/logback/core/rolling/TimeBasedRollingPolicy.fileNamePatternWithoutCompSuffix:Lch/qos/logback/core/rolling/helper/FileNamePattern;
      28: iconst_2
      29: anewarray     #58                 // class java/lang/Object
      32: dup
      33: iconst_0
      34: aload         5
      36: aastore
      37: dup
      38: iconst_1
      39: aload_0
      40: getfield      #4                  // Field currentPeriodsCounter:I
      43: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      46: aastore
      47: invokevirtual #60                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern.convertMultipleArguments:([Ljava/lang/Object;)Ljava/lang/String;
      50: putfield      #61                 // Field elapsedPeriodsFileName:Ljava/lang/String;
      53: aload_0
      54: iconst_0
      55: putfield      #4                  // Field currentPeriodsCounter:I
      58: aload_0
      59: lload_3
      60: invokevirtual #62                 // Method setDateInCurrentPeriod:(J)V
      63: aload_0
      64: invokevirtual #63                 // Method computeNextCheck:()V
      67: iconst_1
      68: ireturn
      69: aload_0
      70: getfield      #8                  // Field invocationGate:Lch/qos/logback/core/util/InvocationGate;
      73: lload_3
      74: invokeinterface #64,  3           // InterfaceMethod ch/qos/logback/core/util/InvocationGate.isTooSoon:(J)Z
      79: ifeq          84
      82: iconst_0
      83: ireturn
      84: aload_1
      85: ifnonnull     96
      88: aload_0
      89: ldc           #65                 // String activeFile == null
      91: invokevirtual #12                 // Method addWarn:(Ljava/lang/String;)V
      94: iconst_0
      95: ireturn
      96: aload_0
      97: getfield      #15                 // Field maxFileSize:Lch/qos/logback/core/util/FileSize;
     100: ifnonnull     111
     103: aload_0
     104: ldc           #66                 // String maxFileSize = null
     106: invokevirtual #12                 // Method addWarn:(Ljava/lang/String;)V
     109: iconst_0
     110: ireturn
     111: aload_1
     112: invokevirtual #67                 // Method java/io/File.length:()J
     115: aload_0
     116: getfield      #15                 // Field maxFileSize:Lch/qos/logback/core/util/FileSize;
     119: invokevirtual #68                 // Method ch/qos/logback/core/util/FileSize.getSize:()J
     122: lcmp
     123: iflt          173
     126: aload_0
     127: aload_0
     128: getfield      #24                 // Field tbrp:Lch/qos/logback/core/rolling/TimeBasedRollingPolicy;
     131: getfield      #57                 // Field ch/qos/logback/core/rolling/TimeBasedRollingPolicy.fileNamePatternWithoutCompSuffix:Lch/qos/logback/core/rolling/helper/FileNamePattern;
     134: iconst_2
     135: anewarray     #58                 // class java/lang/Object
     138: dup
     139: iconst_0
     140: aload_0
     141: getfield      #26                 // Field dateInCurrentPeriod:Ljava/util/Date;
     144: aastore
     145: dup
     146: iconst_1
     147: aload_0
     148: getfield      #4                  // Field currentPeriodsCounter:I
     151: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     154: aastore
     155: invokevirtual #60                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern.convertMultipleArguments:([Ljava/lang/Object;)Ljava/lang/String;
     158: putfield      #61                 // Field elapsedPeriodsFileName:Ljava/lang/String;
     161: aload_0
     162: dup
     163: getfield      #4                  // Field currentPeriodsCounter:I
     166: iconst_1
     167: iadd
     168: putfield      #4                  // Field currentPeriodsCounter:I
     171: iconst_1
     172: ireturn
     173: iconst_0
     174: ireturn

  public java.lang.String getCurrentPeriodsFileNameWithoutCompressionSuffix();
    Code:
       0: aload_0
       1: getfield      #24                 // Field tbrp:Lch/qos/logback/core/rolling/TimeBasedRollingPolicy;
       4: getfield      #57                 // Field ch/qos/logback/core/rolling/TimeBasedRollingPolicy.fileNamePatternWithoutCompSuffix:Lch/qos/logback/core/rolling/helper/FileNamePattern;
       7: iconst_2
       8: anewarray     #58                 // class java/lang/Object
      11: dup
      12: iconst_0
      13: aload_0
      14: getfield      #26                 // Field dateInCurrentPeriod:Ljava/util/Date;
      17: aastore
      18: dup
      19: iconst_1
      20: aload_0
      21: getfield      #4                  // Field currentPeriodsCounter:I
      24: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: aastore
      28: invokevirtual #60                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern.convertMultipleArguments:([Ljava/lang/Object;)Ljava/lang/String;
      31: areturn

  public void setMaxFileSize(ch.qos.logback.core.util.FileSize);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field maxFileSize:Lch/qos/logback/core/util/FileSize;
       5: return

  static {};
    Code:
       0: ldc           #69                 // String Missing integer token, that is %i, in FileNamePattern [
       2: putstatic     #35                 // Field MISSING_INT_TOKEN:Ljava/lang/String;
       5: ldc           #70                 // String Missing date token, that is %d, in FileNamePattern [
       7: putstatic     #42                 // Field MISSING_DATE_TOKEN:Ljava/lang/String;
      10: return
}
