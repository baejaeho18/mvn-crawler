Compiled from "AbstractRocksIterator.java"
public abstract class org.rocksdb.AbstractRocksIterator<P extends org.rocksdb.RocksObject> extends org.rocksdb.RocksObject implements org.rocksdb.RocksIteratorInterface {
  final P parent_;

  static final boolean $assertionsDisabled;

  protected org.rocksdb.AbstractRocksIterator(P, long);
    Code:
       0: aload_0
       1: lload_2
       2: invokespecial #1                  // Method org/rocksdb/RocksObject."<init>":(J)V
       5: getstatic     #2                  // Field $assertionsDisabled:Z
       8: ifne          23
      11: aload_1
      12: ifnonnull     23
      15: new           #3                  // class java/lang/AssertionError
      18: dup
      19: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      22: athrow
      23: aload_0
      24: aload_1
      25: putfield      #5                  // Field parent_:Lorg/rocksdb/RocksObject;
      28: return

  public boolean isValid();
    Code:
       0: getstatic     #2                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #6                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #3                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: invokevirtual #8                  // Method isValid0:(J)Z
      29: ireturn

  public void seekToFirst();
    Code:
       0: getstatic     #2                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #6                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #3                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: invokevirtual #9                  // Method seekToFirst0:(J)V
      29: return

  public void seekToLast();
    Code:
       0: getstatic     #2                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #6                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #3                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: invokevirtual #10                 // Method seekToLast0:(J)V
      29: return

  public void seek(byte[]);
    Code:
       0: getstatic     #2                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #6                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #3                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: aload_1
      27: aload_1
      28: arraylength
      29: invokevirtual #11                 // Method seek0:(J[BI)V
      32: return

  public void next();
    Code:
       0: getstatic     #2                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #6                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #3                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: invokevirtual #12                 // Method next0:(J)V
      29: return

  public void prev();
    Code:
       0: getstatic     #2                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #6                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #3                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: invokevirtual #13                 // Method prev0:(J)V
      29: return

  public void status() throws org.rocksdb.RocksDBException;
    Code:
       0: getstatic     #2                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #6                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #3                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: invokevirtual #14                 // Method status0:(J)V
      29: return

  protected void disposeInternal();
    Code:
       0: aload_0
       1: getfield      #5                  // Field parent_:Lorg/rocksdb/RocksObject;
       4: invokevirtual #15                 // Method org/rocksdb/RocksObject.isOwningHandle:()Z
       7: ifeq          18
      10: aload_0
      11: aload_0
      12: getfield      #7                  // Field nativeHandle_:J
      15: invokevirtual #16                 // Method disposeInternal:(J)V
      18: return

  abstract boolean isValid0(long);

  abstract void seekToFirst0(long);

  abstract void seekToLast0(long);

  abstract void next0(long);

  abstract void prev0(long);

  abstract void seek0(long, byte[], int);

  abstract void status0(long) throws org.rocksdb.RocksDBException;

  static {};
    Code:
       0: ldc_w         #17                 // class org/rocksdb/AbstractRocksIterator
       3: invokevirtual #18                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #2                  // Field $assertionsDisabled:Z
      17: return
}
