Compiled from "BackupableDBOptions.java"
public class org.rocksdb.BackupableDBOptions extends org.rocksdb.RocksObject {
  static final boolean $assertionsDisabled;

  public org.rocksdb.BackupableDBOptions(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method ensureWritableFile:(Ljava/lang/String;)Ljava/lang/String;
       5: invokestatic  #2                  // Method newBackupableDBOptions:(Ljava/lang/String;)J
       8: invokespecial #3                  // Method org/rocksdb/RocksObject."<init>":(J)V
      11: return

  private static java.lang.String ensureWritableFile(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aconst_null
       5: goto          16
       8: new           #4                  // class java/io/File
      11: dup
      12: aload_0
      13: invokespecial #5                  // Method java/io/File."<init>":(Ljava/lang/String;)V
      16: astore_1
      17: aload_1
      18: ifnull        35
      21: aload_1
      22: invokevirtual #6                  // Method java/io/File.isDirectory:()Z
      25: ifeq          35
      28: aload_1
      29: invokevirtual #7                  // Method java/io/File.canWrite:()Z
      32: ifne          45
      35: new           #8                  // class java/lang/IllegalArgumentException
      38: dup
      39: ldc           #9                  // String Illegal path provided.
      41: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: areturn

  public java.lang.String backupDir();
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #12                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #13                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #15                 // Field nativeHandle_:J
      26: invokespecial #16                 // Method backupDir:(J)Ljava/lang/String;
      29: areturn

  public org.rocksdb.BackupableDBOptions setShareTableFiles(boolean);
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #12                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #13                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #15                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #17                 // Method setShareTableFiles:(JZ)V
      30: aload_0
      31: areturn

  public boolean shareTableFiles();
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #12                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #13                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #15                 // Field nativeHandle_:J
      26: invokespecial #18                 // Method shareTableFiles:(J)Z
      29: ireturn

  public org.rocksdb.BackupableDBOptions setSync(boolean);
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #12                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #13                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #15                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #19                 // Method setSync:(JZ)V
      30: aload_0
      31: areturn

  public boolean sync();
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #12                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #13                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #15                 // Field nativeHandle_:J
      26: invokespecial #20                 // Method sync:(J)Z
      29: ireturn

  public org.rocksdb.BackupableDBOptions setDestroyOldData(boolean);
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #12                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #13                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #15                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #21                 // Method setDestroyOldData:(JZ)V
      30: aload_0
      31: areturn

  public boolean destroyOldData();
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #12                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #13                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #15                 // Field nativeHandle_:J
      26: invokespecial #22                 // Method destroyOldData:(J)Z
      29: ireturn

  public org.rocksdb.BackupableDBOptions setBackupLogFiles(boolean);
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #12                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #13                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #15                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #23                 // Method setBackupLogFiles:(JZ)V
      30: aload_0
      31: areturn

  public boolean backupLogFiles();
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #12                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #13                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #15                 // Field nativeHandle_:J
      26: invokespecial #24                 // Method backupLogFiles:(J)Z
      29: ireturn

  public org.rocksdb.BackupableDBOptions setBackupRateLimit(long);
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #12                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #13                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: lload_1
      22: lconst_0
      23: lcmp
      24: ifgt          31
      27: lconst_0
      28: goto          32
      31: lload_1
      32: lstore_1
      33: aload_0
      34: aload_0
      35: getfield      #15                 // Field nativeHandle_:J
      38: lload_1
      39: invokespecial #25                 // Method setBackupRateLimit:(JJ)V
      42: aload_0
      43: areturn

  public long backupRateLimit();
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #12                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #13                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #15                 // Field nativeHandle_:J
      26: invokespecial #26                 // Method backupRateLimit:(J)J
      29: lreturn

  public org.rocksdb.BackupableDBOptions setRestoreRateLimit(long);
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #12                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #13                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: lload_1
      22: lconst_0
      23: lcmp
      24: ifgt          31
      27: lconst_0
      28: goto          32
      31: lload_1
      32: lstore_1
      33: aload_0
      34: aload_0
      35: getfield      #15                 // Field nativeHandle_:J
      38: lload_1
      39: invokespecial #27                 // Method setRestoreRateLimit:(JJ)V
      42: aload_0
      43: areturn

  public long restoreRateLimit();
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #12                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #13                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #15                 // Field nativeHandle_:J
      26: invokespecial #28                 // Method restoreRateLimit:(J)J
      29: lreturn

  public org.rocksdb.BackupableDBOptions setShareFilesWithChecksum(boolean);
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #12                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #13                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #15                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #29                 // Method setShareFilesWithChecksum:(JZ)V
      30: aload_0
      31: areturn

  public boolean shareFilesWithChecksum();
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #12                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #13                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #15                 // Field nativeHandle_:J
      26: invokespecial #30                 // Method shareFilesWithChecksum:(J)Z
      29: ireturn

  private static native long newBackupableDBOptions(java.lang.String);

  private native java.lang.String backupDir(long);

  private native void setShareTableFiles(long, boolean);

  private native boolean shareTableFiles(long);

  private native void setSync(long, boolean);

  private native boolean sync(long);

  private native void setDestroyOldData(long, boolean);

  private native boolean destroyOldData(long);

  private native void setBackupLogFiles(long, boolean);

  private native boolean backupLogFiles(long);

  private native void setBackupRateLimit(long, long);

  private native long backupRateLimit(long);

  private native void setRestoreRateLimit(long, long);

  private native long restoreRateLimit(long);

  private native void setShareFilesWithChecksum(long, boolean);

  private native boolean shareFilesWithChecksum(long);

  protected final native void disposeInternal(long);

  static {};
    Code:
       0: ldc_w         #31                 // class org/rocksdb/BackupableDBOptions
       3: invokevirtual #32                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #11                 // Field $assertionsDisabled:Z
      17: return
}
