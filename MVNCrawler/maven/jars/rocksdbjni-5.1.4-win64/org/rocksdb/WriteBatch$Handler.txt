Compiled from "WriteBatch.java"
public abstract class org.rocksdb.WriteBatch$Handler extends org.rocksdb.AbstractImmutableNativeReference {
  private final long nativeHandle_;

  public org.rocksdb.WriteBatch$Handler();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #2                  // Method org/rocksdb/AbstractImmutableNativeReference."<init>":(Z)V
       5: aload_0
       6: aload_0
       7: invokespecial #3                  // Method createNewHandler0:()J
      10: putfield      #1                  // Field nativeHandle_:J
      13: return

  public abstract void put(byte[], byte[]);

  public abstract void merge(byte[], byte[]);

  public abstract void delete(byte[]);

  public abstract void logData(byte[]);

  public boolean shouldContinue();
    Code:
       0: iconst_1
       1: ireturn

  protected void disposeInternal();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #1                  // Field nativeHandle_:J
       5: invokespecial #4                  // Method disposeInternal:(J)V
       8: return

  private native long createNewHandler0();

  private native void disposeInternal(long);

  static long access$000(org.rocksdb.WriteBatch$Handler);
    Code:
       0: aload_0
       1: getfield      #1                  // Field nativeHandle_:J
       4: lreturn
}
