Compiled from "DBOptions.java"
public class org.rocksdb.DBOptions extends org.rocksdb.RocksObject implements org.rocksdb.DBOptionsInterface {
  static final int DEFAULT_NUM_SHARD_BITS;

  int numShardBits_;

  org.rocksdb.RateLimiterConfig rateLimiterConfig_;

  org.rocksdb.RateLimiter rateLimiter_;

  static final boolean $assertionsDisabled;

  public org.rocksdb.DBOptions();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method newDBOptions:()J
       4: invokespecial #2                  // Method org/rocksdb/RocksObject."<init>":(J)V
       7: aload_0
       8: iconst_m1
       9: putfield      #3                  // Field numShardBits_:I
      12: return

  public static org.rocksdb.DBOptions getDBOptionsFromProps(java.util.Properties);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #4                  // Method java/util/Properties.size:()I
       8: ifne          21
      11: new           #5                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #6                  // String Properties value must contain at least one value.
      17: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aconst_null
      22: astore_1
      23: new           #8                  // class java/lang/StringBuilder
      26: dup
      27: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      30: astore_2
      31: aload_0
      32: invokevirtual #10                 // Method java/util/Properties.stringPropertyNames:()Ljava/util/Set;
      35: invokeinterface #11,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      40: astore_3
      41: aload_3
      42: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          96
      50: aload_3
      51: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #14                 // class java/lang/String
      59: astore        4
      61: aload_2
      62: aload         4
      64: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: pop
      68: aload_2
      69: ldc           #16                 // String =
      71: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: pop
      75: aload_2
      76: aload_0
      77: aload         4
      79: invokevirtual #17                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      82: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: pop
      86: aload_2
      87: ldc           #18                 // String ;
      89: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: goto          41
      96: aload_2
      97: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokestatic  #20                 // Method getDBOptionsFromProps:(Ljava/lang/String;)J
     103: lstore_3
     104: lload_3
     105: lconst_0
     106: lcmp
     107: ifeq          119
     110: new           #21                 // class org/rocksdb/DBOptions
     113: dup
     114: lload_3
     115: invokespecial #22                 // Method "<init>":(J)V
     118: astore_1
     119: aload_1
     120: areturn

  public org.rocksdb.DBOptions setIncreaseParallelism(int);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #28                 // Method setIncreaseParallelism:(JI)V
      30: aload_0
      31: areturn

  public org.rocksdb.DBOptions setCreateIfMissing(boolean);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #29                 // Method setCreateIfMissing:(JZ)V
      30: aload_0
      31: areturn

  public boolean createIfMissing();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #30                 // Method createIfMissing:(J)Z
      29: ireturn

  public org.rocksdb.DBOptions setCreateMissingColumnFamilies(boolean);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #31                 // Method setCreateMissingColumnFamilies:(JZ)V
      30: aload_0
      31: areturn

  public boolean createMissingColumnFamilies();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #32                 // Method createMissingColumnFamilies:(J)Z
      29: ireturn

  public org.rocksdb.DBOptions setErrorIfExists(boolean);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #33                 // Method setErrorIfExists:(JZ)V
      30: aload_0
      31: areturn

  public boolean errorIfExists();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #34                 // Method errorIfExists:(J)Z
      29: ireturn

  public org.rocksdb.DBOptions setParanoidChecks(boolean);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #35                 // Method setParanoidChecks:(JZ)V
      30: aload_0
      31: areturn

  public boolean paranoidChecks();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #36                 // Method paranoidChecks:(J)Z
      29: ireturn

  public org.rocksdb.DBOptions setRateLimiterConfig(org.rocksdb.RateLimiterConfig);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_1
      23: putfield      #37                 // Field rateLimiterConfig_:Lorg/rocksdb/RateLimiterConfig;
      26: aload_0
      27: aload_0
      28: getfield      #27                 // Field nativeHandle_:J
      31: aload_1
      32: invokevirtual #38                 // Method org/rocksdb/RateLimiterConfig.newRateLimiterHandle:()J
      35: invokespecial #39                 // Method setOldRateLimiter:(JJ)V
      38: aload_0
      39: areturn

  public org.rocksdb.DBOptions setRateLimiter(org.rocksdb.RateLimiter);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_1
      23: putfield      #40                 // Field rateLimiter_:Lorg/rocksdb/RateLimiter;
      26: aload_0
      27: aload_0
      28: getfield      #27                 // Field nativeHandle_:J
      31: aload_1
      32: getfield      #41                 // Field org/rocksdb/RateLimiter.nativeHandle_:J
      35: invokespecial #42                 // Method setRateLimiter:(JJ)V
      38: aload_0
      39: areturn

  public org.rocksdb.DBOptions setLogger(org.rocksdb.Logger);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: aload_1
      27: getfield      #43                 // Field org/rocksdb/Logger.nativeHandle_:J
      30: invokespecial #44                 // Method setLogger:(JJ)V
      33: aload_0
      34: areturn

  public org.rocksdb.DBOptions setInfoLogLevel(org.rocksdb.InfoLogLevel);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: aload_1
      27: invokevirtual #45                 // Method org/rocksdb/InfoLogLevel.getValue:()B
      30: invokespecial #46                 // Method setInfoLogLevel:(JB)V
      33: aload_0
      34: areturn

  public org.rocksdb.InfoLogLevel infoLogLevel();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #47                 // Method infoLogLevel:(J)B
      29: invokestatic  #48                 // Method org/rocksdb/InfoLogLevel.getInfoLogLevel:(B)Lorg/rocksdb/InfoLogLevel;
      32: areturn

  public org.rocksdb.DBOptions setMaxOpenFiles(int);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #49                 // Method setMaxOpenFiles:(JI)V
      30: aload_0
      31: areturn

  public int maxOpenFiles();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #50                 // Method maxOpenFiles:(J)I
      29: ireturn

  public org.rocksdb.DBOptions setMaxTotalWalSize(long);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: lload_1
      27: invokespecial #51                 // Method setMaxTotalWalSize:(JJ)V
      30: aload_0
      31: areturn

  public long maxTotalWalSize();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #52                 // Method maxTotalWalSize:(J)J
      29: lreturn

  public org.rocksdb.DBOptions createStatistics();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #53                 // Method createStatistics:(J)V
      29: aload_0
      30: areturn

  public org.rocksdb.Statistics statisticsPtr();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #54                 // Method statisticsPtr:(J)J
      29: lstore_1
      30: lload_1
      31: lconst_0
      32: lcmp
      33: ifne          50
      36: aload_0
      37: invokevirtual #55                 // Method createStatistics:()Lorg/rocksdb/DBOptions;
      40: pop
      41: aload_0
      42: aload_0
      43: getfield      #27                 // Field nativeHandle_:J
      46: invokespecial #54                 // Method statisticsPtr:(J)J
      49: lstore_1
      50: new           #56                 // class org/rocksdb/Statistics
      53: dup
      54: lload_1
      55: invokespecial #57                 // Method org/rocksdb/Statistics."<init>":(J)V
      58: areturn

  public org.rocksdb.DBOptions setDisableDataSync(boolean);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #58                 // Method setDisableDataSync:(JZ)V
      30: aload_0
      31: areturn

  public boolean disableDataSync();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #59                 // Method disableDataSync:(J)Z
      29: ireturn

  public org.rocksdb.DBOptions setUseFsync(boolean);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #60                 // Method setUseFsync:(JZ)V
      30: aload_0
      31: areturn

  public boolean useFsync();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #61                 // Method useFsync:(J)Z
      29: ireturn

  public org.rocksdb.DBOptions setDbLogDir(java.lang.String);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: aload_1
      27: invokespecial #62                 // Method setDbLogDir:(JLjava/lang/String;)V
      30: aload_0
      31: areturn

  public java.lang.String dbLogDir();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #63                 // Method dbLogDir:(J)Ljava/lang/String;
      29: areturn

  public org.rocksdb.DBOptions setWalDir(java.lang.String);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: aload_1
      27: invokespecial #64                 // Method setWalDir:(JLjava/lang/String;)V
      30: aload_0
      31: areturn

  public java.lang.String walDir();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #65                 // Method walDir:(J)Ljava/lang/String;
      29: areturn

  public org.rocksdb.DBOptions setDeleteObsoleteFilesPeriodMicros(long);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: lload_1
      27: invokespecial #66                 // Method setDeleteObsoleteFilesPeriodMicros:(JJ)V
      30: aload_0
      31: areturn

  public long deleteObsoleteFilesPeriodMicros();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #67                 // Method deleteObsoleteFilesPeriodMicros:(J)J
      29: lreturn

  public void setBaseBackgroundCompactions(int);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #68                 // Method setBaseBackgroundCompactions:(JI)V
      30: return

  public int baseBackgroundCompactions();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #69                 // Method baseBackgroundCompactions:(J)I
      29: ireturn

  public org.rocksdb.DBOptions setMaxBackgroundCompactions(int);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #70                 // Method setMaxBackgroundCompactions:(JI)V
      30: aload_0
      31: areturn

  public int maxBackgroundCompactions();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #71                 // Method maxBackgroundCompactions:(J)I
      29: ireturn

  public void setMaxSubcompactions(int);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #72                 // Method setMaxSubcompactions:(JI)V
      30: return

  public int maxSubcompactions();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #73                 // Method maxSubcompactions:(J)I
      29: ireturn

  public org.rocksdb.DBOptions setMaxBackgroundFlushes(int);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #74                 // Method setMaxBackgroundFlushes:(JI)V
      30: aload_0
      31: areturn

  public int maxBackgroundFlushes();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #75                 // Method maxBackgroundFlushes:(J)I
      29: ireturn

  public org.rocksdb.DBOptions setMaxLogFileSize(long);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: lload_1
      27: invokespecial #76                 // Method setMaxLogFileSize:(JJ)V
      30: aload_0
      31: areturn

  public long maxLogFileSize();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #77                 // Method maxLogFileSize:(J)J
      29: lreturn

  public org.rocksdb.DBOptions setLogFileTimeToRoll(long);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: lload_1
      27: invokespecial #78                 // Method setLogFileTimeToRoll:(JJ)V
      30: aload_0
      31: areturn

  public long logFileTimeToRoll();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #79                 // Method logFileTimeToRoll:(J)J
      29: lreturn

  public org.rocksdb.DBOptions setKeepLogFileNum(long);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: lload_1
      27: invokespecial #80                 // Method setKeepLogFileNum:(JJ)V
      30: aload_0
      31: areturn

  public long keepLogFileNum();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #81                 // Method keepLogFileNum:(J)J
      29: lreturn

  public org.rocksdb.DBOptions setMaxManifestFileSize(long);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: lload_1
      27: invokespecial #82                 // Method setMaxManifestFileSize:(JJ)V
      30: aload_0
      31: areturn

  public long maxManifestFileSize();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #83                 // Method maxManifestFileSize:(J)J
      29: lreturn

  public org.rocksdb.DBOptions setTableCacheNumshardbits(int);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #84                 // Method setTableCacheNumshardbits:(JI)V
      30: aload_0
      31: areturn

  public int tableCacheNumshardbits();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #85                 // Method tableCacheNumshardbits:(J)I
      29: ireturn

  public org.rocksdb.DBOptions setWalTtlSeconds(long);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: lload_1
      27: invokespecial #86                 // Method setWalTtlSeconds:(JJ)V
      30: aload_0
      31: areturn

  public long walTtlSeconds();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #87                 // Method walTtlSeconds:(J)J
      29: lreturn

  public org.rocksdb.DBOptions setWalSizeLimitMB(long);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: lload_1
      27: invokespecial #88                 // Method setWalSizeLimitMB:(JJ)V
      30: aload_0
      31: areturn

  public long walSizeLimitMB();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #89                 // Method walSizeLimitMB:(J)J
      29: lreturn

  public org.rocksdb.DBOptions setManifestPreallocationSize(long);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: lload_1
      27: invokespecial #90                 // Method setManifestPreallocationSize:(JJ)V
      30: aload_0
      31: areturn

  public long manifestPreallocationSize();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #91                 // Method manifestPreallocationSize:(J)J
      29: lreturn

  public org.rocksdb.DBOptions setUseDirectReads(boolean);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #92                 // Method setUseDirectReads:(JZ)V
      30: aload_0
      31: areturn

  public boolean useDirectReads();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #93                 // Method useDirectReads:(J)Z
      29: ireturn

  public org.rocksdb.DBOptions setUseDirectWrites(boolean);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #94                 // Method setUseDirectWrites:(JZ)V
      30: aload_0
      31: areturn

  public boolean useDirectWrites();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #95                 // Method useDirectWrites:(J)Z
      29: ireturn

  public org.rocksdb.DBOptions setAllowMmapReads(boolean);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #96                 // Method setAllowMmapReads:(JZ)V
      30: aload_0
      31: areturn

  public boolean allowMmapReads();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #97                 // Method allowMmapReads:(J)Z
      29: ireturn

  public org.rocksdb.DBOptions setAllowMmapWrites(boolean);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #98                 // Method setAllowMmapWrites:(JZ)V
      30: aload_0
      31: areturn

  public boolean allowMmapWrites();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #99                 // Method allowMmapWrites:(J)Z
      29: ireturn

  public org.rocksdb.DBOptions setIsFdCloseOnExec(boolean);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #100                // Method setIsFdCloseOnExec:(JZ)V
      30: aload_0
      31: areturn

  public boolean isFdCloseOnExec();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #101                // Method isFdCloseOnExec:(J)Z
      29: ireturn

  public org.rocksdb.DBOptions setStatsDumpPeriodSec(int);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #102                // Method setStatsDumpPeriodSec:(JI)V
      30: aload_0
      31: areturn

  public int statsDumpPeriodSec();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #103                // Method statsDumpPeriodSec:(J)I
      29: ireturn

  public org.rocksdb.DBOptions setAdviseRandomOnOpen(boolean);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #104                // Method setAdviseRandomOnOpen:(JZ)V
      30: aload_0
      31: areturn

  public boolean adviseRandomOnOpen();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field nativeHandle_:J
       5: invokespecial #105                // Method adviseRandomOnOpen:(J)Z
       8: ireturn

  public org.rocksdb.DBOptions setUseAdaptiveMutex(boolean);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #106                // Method setUseAdaptiveMutex:(JZ)V
      30: aload_0
      31: areturn

  public boolean useAdaptiveMutex();
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: invokespecial #107                // Method useAdaptiveMutex:(J)Z
      29: ireturn

  public org.rocksdb.DBOptions setBytesPerSync(long);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: lload_1
      27: invokespecial #108                // Method setBytesPerSync:(JJ)V
      30: aload_0
      31: areturn

  public long bytesPerSync();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field nativeHandle_:J
       5: invokespecial #109                // Method bytesPerSync:(J)J
       8: lreturn

  public void setAllowConcurrentMemtableWrite(boolean);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field nativeHandle_:J
       5: iload_1
       6: invokespecial #110                // Method setAllowConcurrentMemtableWrite:(JZ)V
       9: return

  public boolean allowConcurrentMemtableWrite();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field nativeHandle_:J
       5: invokespecial #111                // Method allowConcurrentMemtableWrite:(J)Z
       8: ireturn

  public void setEnableWriteThreadAdaptiveYield(boolean);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field nativeHandle_:J
       5: iload_1
       6: invokespecial #112                // Method setEnableWriteThreadAdaptiveYield:(JZ)V
       9: return

  public boolean enableWriteThreadAdaptiveYield();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field nativeHandle_:J
       5: invokespecial #113                // Method enableWriteThreadAdaptiveYield:(J)Z
       8: ireturn

  public void setWriteThreadMaxYieldUsec(long);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field nativeHandle_:J
       5: lload_1
       6: invokespecial #114                // Method setWriteThreadMaxYieldUsec:(JJ)V
       9: return

  public long writeThreadMaxYieldUsec();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field nativeHandle_:J
       5: invokespecial #115                // Method writeThreadMaxYieldUsec:(J)J
       8: lreturn

  public void setWriteThreadSlowYieldUsec(long);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field nativeHandle_:J
       5: lload_1
       6: invokespecial #116                // Method setWriteThreadSlowYieldUsec:(JJ)V
       9: return

  public long writeThreadSlowYieldUsec();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field nativeHandle_:J
       5: invokespecial #117                // Method writeThreadSlowYieldUsec:(J)J
       8: lreturn

  public org.rocksdb.DBOptions setDelayedWriteRate(long);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #24                 // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #25                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #27                 // Field nativeHandle_:J
      26: lload_1
      27: invokespecial #118                // Method setDelayedWriteRate:(JJ)V
      30: aload_0
      31: areturn

  public long delayedWriteRate();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field nativeHandle_:J
       5: invokespecial #119                // Method delayedWriteRate:(J)J
       8: lreturn

  private org.rocksdb.DBOptions(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #2                  // Method org/rocksdb/RocksObject."<init>":(J)V
       5: return

  private static native long getDBOptionsFromProps(java.lang.String);

  private static native long newDBOptions();

  protected final native void disposeInternal(long);

  private native void setIncreaseParallelism(long, int);

  private native void setCreateIfMissing(long, boolean);

  private native boolean createIfMissing(long);

  private native void setCreateMissingColumnFamilies(long, boolean);

  private native boolean createMissingColumnFamilies(long);

  private native void setErrorIfExists(long, boolean);

  private native boolean errorIfExists(long);

  private native void setParanoidChecks(long, boolean);

  private native boolean paranoidChecks(long);

  private native void setOldRateLimiter(long, long);

  private native void setRateLimiter(long, long);

  private native void setLogger(long, long);

  private native void setInfoLogLevel(long, byte);

  private native byte infoLogLevel(long);

  private native void setMaxOpenFiles(long, int);

  private native int maxOpenFiles(long);

  private native void setMaxTotalWalSize(long, long);

  private native long maxTotalWalSize(long);

  private native void createStatistics(long);

  private native long statisticsPtr(long);

  private native void setDisableDataSync(long, boolean);

  private native boolean disableDataSync(long);

  private native boolean useFsync(long);

  private native void setUseFsync(long, boolean);

  private native void setDbLogDir(long, java.lang.String);

  private native java.lang.String dbLogDir(long);

  private native void setWalDir(long, java.lang.String);

  private native java.lang.String walDir(long);

  private native void setDeleteObsoleteFilesPeriodMicros(long, long);

  private native long deleteObsoleteFilesPeriodMicros(long);

  private native void setBaseBackgroundCompactions(long, int);

  private native int baseBackgroundCompactions(long);

  private native void setMaxBackgroundCompactions(long, int);

  private native int maxBackgroundCompactions(long);

  private native void setMaxSubcompactions(long, int);

  private native int maxSubcompactions(long);

  private native void setMaxBackgroundFlushes(long, int);

  private native int maxBackgroundFlushes(long);

  private native void setMaxLogFileSize(long, long) throws java.lang.IllegalArgumentException;

  private native long maxLogFileSize(long);

  private native void setLogFileTimeToRoll(long, long) throws java.lang.IllegalArgumentException;

  private native long logFileTimeToRoll(long);

  private native void setKeepLogFileNum(long, long) throws java.lang.IllegalArgumentException;

  private native long keepLogFileNum(long);

  private native void setMaxManifestFileSize(long, long);

  private native long maxManifestFileSize(long);

  private native void setTableCacheNumshardbits(long, int);

  private native int tableCacheNumshardbits(long);

  private native void setWalTtlSeconds(long, long);

  private native long walTtlSeconds(long);

  private native void setWalSizeLimitMB(long, long);

  private native long walSizeLimitMB(long);

  private native void setManifestPreallocationSize(long, long) throws java.lang.IllegalArgumentException;

  private native long manifestPreallocationSize(long);

  private native void setUseDirectReads(long, boolean);

  private native boolean useDirectReads(long);

  private native void setUseDirectWrites(long, boolean);

  private native boolean useDirectWrites(long);

  private native void setAllowMmapReads(long, boolean);

  private native boolean allowMmapReads(long);

  private native void setAllowMmapWrites(long, boolean);

  private native boolean allowMmapWrites(long);

  private native void setIsFdCloseOnExec(long, boolean);

  private native boolean isFdCloseOnExec(long);

  private native void setStatsDumpPeriodSec(long, int);

  private native int statsDumpPeriodSec(long);

  private native void setAdviseRandomOnOpen(long, boolean);

  private native boolean adviseRandomOnOpen(long);

  private native void setUseAdaptiveMutex(long, boolean);

  private native boolean useAdaptiveMutex(long);

  private native void setBytesPerSync(long, long);

  private native long bytesPerSync(long);

  private native void setAllowConcurrentMemtableWrite(long, boolean);

  private native boolean allowConcurrentMemtableWrite(long);

  private native void setEnableWriteThreadAdaptiveYield(long, boolean);

  private native boolean enableWriteThreadAdaptiveYield(long);

  private native void setWriteThreadMaxYieldUsec(long, long);

  private native long writeThreadMaxYieldUsec(long);

  private native void setWriteThreadSlowYieldUsec(long, long);

  private native long writeThreadSlowYieldUsec(long);

  private native void setDelayedWriteRate(long, long);

  private native long delayedWriteRate(long);

  public java.lang.Object setBytesPerSync(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #120                // Method setBytesPerSync:(J)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setUseAdaptiveMutex(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #121                // Method setUseAdaptiveMutex:(Z)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setAdviseRandomOnOpen(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #122                // Method setAdviseRandomOnOpen:(Z)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setStatsDumpPeriodSec(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #123                // Method setStatsDumpPeriodSec:(I)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setIsFdCloseOnExec(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #124                // Method setIsFdCloseOnExec:(Z)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setAllowMmapWrites(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #125                // Method setAllowMmapWrites:(Z)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setAllowMmapReads(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #126                // Method setAllowMmapReads:(Z)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setUseDirectWrites(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #127                // Method setUseDirectWrites:(Z)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setUseDirectReads(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #128                // Method setUseDirectReads:(Z)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setManifestPreallocationSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #129                // Method setManifestPreallocationSize:(J)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setWalSizeLimitMB(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #130                // Method setWalSizeLimitMB:(J)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setWalTtlSeconds(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #131                // Method setWalTtlSeconds:(J)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setTableCacheNumshardbits(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #132                // Method setTableCacheNumshardbits:(I)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setMaxManifestFileSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #133                // Method setMaxManifestFileSize:(J)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setKeepLogFileNum(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #134                // Method setKeepLogFileNum:(J)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setLogFileTimeToRoll(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #135                // Method setLogFileTimeToRoll:(J)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setMaxLogFileSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #136                // Method setMaxLogFileSize:(J)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setMaxBackgroundFlushes(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #137                // Method setMaxBackgroundFlushes:(I)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setMaxBackgroundCompactions(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #138                // Method setMaxBackgroundCompactions:(I)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setDeleteObsoleteFilesPeriodMicros(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #139                // Method setDeleteObsoleteFilesPeriodMicros:(J)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setWalDir(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #140                // Method setWalDir:(Ljava/lang/String;)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setDbLogDir(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #141                // Method setDbLogDir:(Ljava/lang/String;)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setUseFsync(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #142                // Method setUseFsync:(Z)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setDisableDataSync(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #143                // Method setDisableDataSync:(Z)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object createStatistics();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method createStatistics:()Lorg/rocksdb/DBOptions;
       4: areturn

  public java.lang.Object setMaxTotalWalSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #144                // Method setMaxTotalWalSize:(J)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setMaxOpenFiles(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #145                // Method setMaxOpenFiles:(I)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setInfoLogLevel(org.rocksdb.InfoLogLevel);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #146                // Method setInfoLogLevel:(Lorg/rocksdb/InfoLogLevel;)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setLogger(org.rocksdb.Logger);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #147                // Method setLogger:(Lorg/rocksdb/Logger;)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setRateLimiter(org.rocksdb.RateLimiter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #148                // Method setRateLimiter:(Lorg/rocksdb/RateLimiter;)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setRateLimiterConfig(org.rocksdb.RateLimiterConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #149                // Method setRateLimiterConfig:(Lorg/rocksdb/RateLimiterConfig;)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setParanoidChecks(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #150                // Method setParanoidChecks:(Z)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setErrorIfExists(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #151                // Method setErrorIfExists:(Z)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setCreateMissingColumnFamilies(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #152                // Method setCreateMissingColumnFamilies:(Z)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setCreateIfMissing(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #153                // Method setCreateIfMissing:(Z)Lorg/rocksdb/DBOptions;
       5: areturn

  public java.lang.Object setIncreaseParallelism(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #154                // Method setIncreaseParallelism:(I)Lorg/rocksdb/DBOptions;
       5: areturn

  static {};
    Code:
       0: ldc_w         #21                 // class org/rocksdb/DBOptions
       3: invokevirtual #155                // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #23                 // Field $assertionsDisabled:Z
      17: invokestatic  #156                // Method org/rocksdb/RocksDB.loadLibrary:()V
      20: return
}
