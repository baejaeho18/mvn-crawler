Compiled from "Checkpoint.java"
public class org.rocksdb.Checkpoint extends org.rocksdb.RocksObject {
  private final org.rocksdb.RocksDB db_;

  public static org.rocksdb.Checkpoint create(org.rocksdb.RocksDB);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #1                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #2                  // String RocksDB instance shall not be null.
      10: invokespecial #3                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #4                  // Method org/rocksdb/RocksDB.isOwningHandle:()Z
      18: ifne          31
      21: new           #5                  // class java/lang/IllegalStateException
      24: dup
      25: ldc           #6                  // String RocksDB instance must be initialized.
      27: invokespecial #7                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: new           #8                  // class org/rocksdb/Checkpoint
      34: dup
      35: aload_0
      36: invokespecial #9                  // Method "<init>":(Lorg/rocksdb/RocksDB;)V
      39: astore_1
      40: aload_1
      41: areturn

  public void createCheckpoint(java.lang.String) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field nativeHandle_:J
       5: aload_1
       6: invokespecial #11                 // Method createCheckpoint:(JLjava/lang/String;)V
       9: return

  private org.rocksdb.Checkpoint(org.rocksdb.RocksDB);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #12                 // Field org/rocksdb/RocksDB.nativeHandle_:J
       5: invokestatic  #13                 // Method newCheckpoint:(J)J
       8: invokespecial #14                 // Method org/rocksdb/RocksObject."<init>":(J)V
      11: aload_0
      12: aload_1
      13: putfield      #15                 // Field db_:Lorg/rocksdb/RocksDB;
      16: return

  private static native long newCheckpoint(long);

  protected final native void disposeInternal(long);

  private native void createCheckpoint(long, java.lang.String) throws org.rocksdb.RocksDBException;
}
