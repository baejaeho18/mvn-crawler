Compiled from "WriteBatch.java"
public class org.rocksdb.WriteBatch extends org.rocksdb.AbstractWriteBatch {
  public org.rocksdb.WriteBatch();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method "<init>":(I)V
       5: return

  public org.rocksdb.WriteBatch(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #2                  // Method newWriteBatch:(I)J
       5: invokespecial #3                  // Method org/rocksdb/AbstractWriteBatch."<init>":(J)V
       8: return

  public void iterate(org.rocksdb.WriteBatch$Handler) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field nativeHandle_:J
       5: aload_1
       6: invokestatic  #5                  // Method org/rocksdb/WriteBatch$Handler.access$000:(Lorg/rocksdb/WriteBatch$Handler;)J
       9: invokespecial #6                  // Method iterate:(JJ)V
      12: return

  org.rocksdb.WriteBatch(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #3                  // Method org/rocksdb/AbstractWriteBatch."<init>":(J)V
       5: aload_0
       6: invokevirtual #7                  // Method disOwnNativeHandle:()V
       9: return

  protected final native void disposeInternal(long);

  final native int count0(long);

  final native void put(long, byte[], int, byte[], int);

  final native void put(long, byte[], int, byte[], int, long);

  final native void merge(long, byte[], int, byte[], int);

  final native void merge(long, byte[], int, byte[], int, long);

  final native void remove(long, byte[], int);

  final native void remove(long, byte[], int, long);

  final native void putLogData(long, byte[], int);

  final native void clear0(long);

  final native void setSavePoint0(long);

  final native void rollbackToSavePoint0(long);

  private static native long newWriteBatch(int);

  private native void iterate(long, long) throws org.rocksdb.RocksDBException;
}
