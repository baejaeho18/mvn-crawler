Compiled from "MutableColumnFamilyOptions.java"
public class org.rocksdb.MutableColumnFamilyOptions {
  private static final java.lang.String KEY_VALUE_PAIR_SEPARATOR;

  private static final char KEY_VALUE_SEPARATOR;

  private static final java.lang.String INT_ARRAY_INT_SEPARATOR;

  private final java.lang.String[] keys;

  private final java.lang.String[] values;

  private org.rocksdb.MutableColumnFamilyOptions(java.lang.String[], java.lang.String[]);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field keys:[Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field values:[Ljava/lang/String;
      14: return

  java.lang.String[] getKeys();
    Code:
       0: aload_0
       1: getfield      #3                  // Field keys:[Ljava/lang/String;
       4: areturn

  java.lang.String[] getValues();
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:[Ljava/lang/String;
       4: areturn

  public static org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder builder();
    Code:
       0: new           #5                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
       3: dup
       4: invokespecial #6                  // Method org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder."<init>":()V
       7: areturn

  public static org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder parse(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #5                  // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder
       8: dup
       9: invokespecial #6                  // Method org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder."<init>":()V
      12: astore_1
      13: aload_0
      14: invokevirtual #8                  // Method java/lang/String.trim:()Ljava/lang/String;
      17: ldc           #9                  // String ;
      19: invokevirtual #10                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      22: astore_2
      23: aload_2
      24: astore_3
      25: aload_3
      26: arraylength
      27: istore        4
      29: iconst_0
      30: istore        5
      32: iload         5
      34: iload         4
      36: if_icmpge     151
      39: aload_3
      40: iload         5
      42: aaload
      43: astore        6
      45: aload         6
      47: bipush        61
      49: invokevirtual #11                 // Method java/lang/String.indexOf:(I)I
      52: istore        7
      54: iload         7
      56: ifgt          69
      59: new           #12                 // class java/lang/IllegalArgumentException
      62: dup
      63: ldc           #13                 // String options string has an invalid key=value pair
      65: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: aload         6
      71: iconst_0
      72: iload         7
      74: invokevirtual #15                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      77: astore        8
      79: aload         8
      81: ifnull        92
      84: aload         8
      86: invokevirtual #16                 // Method java/lang/String.isEmpty:()Z
      89: ifeq          102
      92: new           #12                 // class java/lang/IllegalArgumentException
      95: dup
      96: ldc           #17                 // String options string is invalid
      98: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     101: athrow
     102: aload         6
     104: iload         7
     106: iconst_1
     107: iadd
     108: invokevirtual #18                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     111: astore        9
     113: aload         9
     115: ifnull        126
     118: aload         9
     120: invokevirtual #16                 // Method java/lang/String.isEmpty:()Z
     123: ifeq          136
     126: new           #12                 // class java/lang/IllegalArgumentException
     129: dup
     130: ldc           #17                 // String options string is invalid
     132: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     135: athrow
     136: aload_1
     137: aload         8
     139: aload         9
     141: invokevirtual #19                 // Method org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder.fromString:(Ljava/lang/String;Ljava/lang/String;)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
     144: pop
     145: iinc          5, 1
     148: goto          32
     151: aload_1
     152: areturn

  public java.lang.String toString();
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_0
      12: getfield      #3                  // Field keys:[Ljava/lang/String;
      15: arraylength
      16: if_icmpge     68
      19: aload_1
      20: aload_0
      21: getfield      #3                  // Field keys:[Ljava/lang/String;
      24: iload_2
      25: aaload
      26: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: bipush        61
      31: invokevirtual #23                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #4                  // Field values:[Ljava/lang/String;
      38: iload_2
      39: aaload
      40: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: pop
      44: iload_2
      45: iconst_1
      46: iadd
      47: aload_0
      48: getfield      #3                  // Field keys:[Ljava/lang/String;
      51: arraylength
      52: if_icmpge     62
      55: aload_1
      56: ldc           #9                  // String ;
      58: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: pop
      62: iinc          2, 1
      65: goto          10
      68: aload_1
      69: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: areturn

  org.rocksdb.MutableColumnFamilyOptions(java.lang.String[], java.lang.String[], org.rocksdb.MutableColumnFamilyOptions$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method "<init>":([Ljava/lang/String;[Ljava/lang/String;)V
       6: return
}
