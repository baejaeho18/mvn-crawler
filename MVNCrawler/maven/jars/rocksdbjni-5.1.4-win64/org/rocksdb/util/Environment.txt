Compiled from "Environment.java"
public class org.rocksdb.util.Environment {
  private static java.lang.String OS;

  private static java.lang.String ARCH;

  public org.rocksdb.util.Environment();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isWindows();
    Code:
       0: getstatic     #2                  // Field OS:Ljava/lang/String;
       3: ldc           #3                  // String win
       5: invokevirtual #4                  // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       8: ireturn

  public static boolean isMac();
    Code:
       0: getstatic     #2                  // Field OS:Ljava/lang/String;
       3: ldc           #5                  // String mac
       5: invokevirtual #4                  // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       8: ireturn

  public static boolean isUnix();
    Code:
       0: getstatic     #2                  // Field OS:Ljava/lang/String;
       3: ldc           #6                  // String nix
       5: invokevirtual #4                  // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       8: ifne          33
      11: getstatic     #2                  // Field OS:Ljava/lang/String;
      14: ldc           #7                  // String nux
      16: invokevirtual #4                  // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      19: ifne          33
      22: getstatic     #2                  // Field OS:Ljava/lang/String;
      25: ldc           #8                  // String aix
      27: invokevirtual #4                  // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      30: ifeq          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public static boolean isSolaris();
    Code:
       0: getstatic     #2                  // Field OS:Ljava/lang/String;
       3: ldc           #9                  // String sunos
       5: invokevirtual #4                  // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       8: ireturn

  public static boolean is64Bit();
    Code:
       0: getstatic     #10                 // Field ARCH:Ljava/lang/String;
       3: ldc           #11                 // String 64
       5: invokevirtual #12                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
       8: ifle          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public static java.lang.String getSharedLibraryName(java.lang.String);
    Code:
       0: new           #13                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #16                 // String jni
      13: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: areturn

  public static java.lang.String getSharedLibraryFileName(java.lang.String);
    Code:
       0: new           #13                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #18                 // String lib
       9: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokestatic  #19                 // Method getSharedLibraryName:(Ljava/lang/String;)Ljava/lang/String;
      16: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: iconst_1
      23: invokestatic  #20                 // Method appendLibOsSuffix:(Ljava/lang/String;Z)Ljava/lang/String;
      26: areturn

  public static java.lang.String getJniLibraryName(java.lang.String);
    Code:
       0: invokestatic  #21                 // Method isUnix:()Z
       3: ifeq          38
       6: invokestatic  #22                 // Method is64Bit:()Z
       9: ifeq          17
      12: ldc           #11                 // String 64
      14: goto          19
      17: ldc           #23                 // String 32
      19: astore_1
      20: ldc           #24                 // String %sjni-linux%s
      22: iconst_2
      23: anewarray     #25                 // class java/lang/Object
      26: dup
      27: iconst_0
      28: aload_0
      29: aastore
      30: dup
      31: iconst_1
      32: aload_1
      33: aastore
      34: invokestatic  #26                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      37: areturn
      38: invokestatic  #27                 // Method isMac:()Z
      41: ifeq          58
      44: ldc           #28                 // String %sjni-osx
      46: iconst_1
      47: anewarray     #25                 // class java/lang/Object
      50: dup
      51: iconst_0
      52: aload_0
      53: aastore
      54: invokestatic  #26                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      57: areturn
      58: invokestatic  #29                 // Method isSolaris:()Z
      61: ifeq          97
      64: ldc           #30                 // String %sjni-solaris%d
      66: iconst_2
      67: anewarray     #25                 // class java/lang/Object
      70: dup
      71: iconst_0
      72: aload_0
      73: aastore
      74: dup
      75: iconst_1
      76: invokestatic  #22                 // Method is64Bit:()Z
      79: ifeq          87
      82: bipush        64
      84: goto          89
      87: bipush        32
      89: invokestatic  #31                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      92: aastore
      93: invokestatic  #26                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      96: areturn
      97: invokestatic  #32                 // Method isWindows:()Z
     100: ifeq          123
     103: invokestatic  #22                 // Method is64Bit:()Z
     106: ifeq          123
     109: ldc           #33                 // String %sjni-win64
     111: iconst_1
     112: anewarray     #25                 // class java/lang/Object
     115: dup
     116: iconst_0
     117: aload_0
     118: aastore
     119: invokestatic  #26                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     122: areturn
     123: new           #34                 // class java/lang/UnsupportedOperationException
     126: dup
     127: invokespecial #35                 // Method java/lang/UnsupportedOperationException."<init>":()V
     130: athrow

  public static java.lang.String getJniLibraryFileName(java.lang.String);
    Code:
       0: new           #13                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #18                 // String lib
       9: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokestatic  #36                 // Method getJniLibraryName:(Ljava/lang/String;)Ljava/lang/String;
      16: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: iconst_0
      23: invokestatic  #20                 // Method appendLibOsSuffix:(Ljava/lang/String;Z)Ljava/lang/String;
      26: areturn

  private static java.lang.String appendLibOsSuffix(java.lang.String, boolean);
    Code:
       0: invokestatic  #21                 // Method isUnix:()Z
       3: ifne          12
       6: invokestatic  #29                 // Method isSolaris:()Z
       9: ifeq          32
      12: new           #13                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      19: aload_0
      20: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #37                 // String .so
      25: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: areturn
      32: invokestatic  #27                 // Method isMac:()Z
      35: ifeq          67
      38: new           #13                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      45: aload_0
      46: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: iload_1
      50: ifeq          58
      53: ldc           #38                 // String .dylib
      55: goto          60
      58: ldc           #39                 // String .jnilib
      60: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: areturn
      67: invokestatic  #32                 // Method isWindows:()Z
      70: ifeq          93
      73: new           #13                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      80: aload_0
      81: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: ldc           #40                 // String .dll
      86: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: areturn
      93: new           #34                 // class java/lang/UnsupportedOperationException
      96: dup
      97: invokespecial #35                 // Method java/lang/UnsupportedOperationException."<init>":()V
     100: athrow

  public static java.lang.String getJniLibraryExtension();
    Code:
       0: invokestatic  #32                 // Method isWindows:()Z
       3: ifeq          9
       6: ldc           #40                 // String .dll
       8: areturn
       9: invokestatic  #27                 // Method isMac:()Z
      12: ifeq          20
      15: ldc           #39                 // String .jnilib
      17: goto          22
      20: ldc           #37                 // String .so
      22: areturn

  static {};
    Code:
       0: ldc           #41                 // String os.name
       2: invokestatic  #42                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: invokevirtual #43                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       8: putstatic     #2                  // Field OS:Ljava/lang/String;
      11: ldc           #44                 // String os.arch
      13: invokestatic  #42                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      16: invokevirtual #43                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      19: putstatic     #10                 // Field ARCH:Ljava/lang/String;
      22: return
}
