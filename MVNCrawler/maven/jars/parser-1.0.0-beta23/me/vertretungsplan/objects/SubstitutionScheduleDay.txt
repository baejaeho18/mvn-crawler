Compiled from "SubstitutionScheduleDay.java"
public class me.vertretungsplan.objects.SubstitutionScheduleDay implements java.lang.Cloneable {
  private org.joda.time.LocalDate date;

  private java.lang.String dateString;

  private org.joda.time.LocalDateTime lastChange;

  private java.lang.String lastChangeString;

  private java.util.Set<me.vertretungsplan.objects.Substitution> substitutions;

  private java.util.List<java.lang.String> messages;

  public me.vertretungsplan.objects.SubstitutionScheduleDay();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashSet
       8: dup
       9: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      12: putfield      #4                  // Field substitutions:Ljava/util/Set;
      15: aload_0
      16: new           #5                  // class java/util/ArrayList
      19: dup
      20: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #7                  // Field messages:Ljava/util/List;
      26: return

  public org.joda.time.LocalDate getDate();
    Code:
       0: aload_0
       1: getfield      #8                  // Field date:Lorg/joda/time/LocalDate;
       4: areturn

  public void setDate(org.joda.time.LocalDate);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field date:Lorg/joda/time/LocalDate;
       5: return

  public java.lang.String getDateString();
    Code:
       0: aload_0
       1: getfield      #8                  // Field date:Lorg/joda/time/LocalDate;
       4: ifnull        18
       7: getstatic     #9                  // Field me/vertretungsplan/objects/SubstitutionSchedule.DAY_DATE_FORMAT:Lorg/joda/time/format/DateTimeFormatter;
      10: aload_0
      11: getfield      #8                  // Field date:Lorg/joda/time/LocalDate;
      14: invokevirtual #10                 // Method org/joda/time/format/DateTimeFormatter.print:(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;
      17: areturn
      18: aload_0
      19: getfield      #11                 // Field dateString:Ljava/lang/String;
      22: ifnull        30
      25: aload_0
      26: getfield      #11                 // Field dateString:Ljava/lang/String;
      29: areturn
      30: aconst_null
      31: areturn

  public void setDateString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field dateString:Ljava/lang/String;
       5: return

  public org.joda.time.LocalDateTime getLastChange();
    Code:
       0: aload_0
       1: getfield      #12                 // Field lastChange:Lorg/joda/time/LocalDateTime;
       4: areturn

  public void setLastChange(org.joda.time.LocalDateTime);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field lastChange:Lorg/joda/time/LocalDateTime;
       5: return

  public java.lang.String getLastChangeString();
    Code:
       0: aload_0
       1: getfield      #12                 // Field lastChange:Lorg/joda/time/LocalDateTime;
       4: ifnull        18
       7: getstatic     #13                 // Field me/vertretungsplan/objects/SubstitutionSchedule.LAST_CHANGE_DATE_FORMAT:Lorg/joda/time/format/DateTimeFormatter;
      10: aload_0
      11: getfield      #12                 // Field lastChange:Lorg/joda/time/LocalDateTime;
      14: invokevirtual #10                 // Method org/joda/time/format/DateTimeFormatter.print:(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;
      17: areturn
      18: aload_0
      19: getfield      #14                 // Field lastChangeString:Ljava/lang/String;
      22: ifnull        30
      25: aload_0
      26: getfield      #14                 // Field lastChangeString:Ljava/lang/String;
      29: areturn
      30: aconst_null
      31: areturn

  public void setLastChangeString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field lastChangeString:Ljava/lang/String;
       5: return

  public java.util.Set<me.vertretungsplan.objects.Substitution> getSubstitutions();
    Code:
       0: aload_0
       1: getfield      #4                  // Field substitutions:Ljava/util/Set;
       4: areturn

  public void setSubstitutions(java.util.Set<me.vertretungsplan.objects.Substitution>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field substitutions:Ljava/util/Set;
       5: return

  public java.util.Set<me.vertretungsplan.objects.Substitution> getSubstitutionsByClass(java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field substitutions:Ljava/util/Set;
       5: invokestatic  #15                 // Method me/vertretungsplan/objects/SubstitutionSchedule.filterByClass:(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
       8: areturn

  public java.util.List<java.lang.String> getMessages();
    Code:
       0: aload_0
       1: getfield      #7                  // Field messages:Ljava/util/List;
       4: areturn

  public void addMessage(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field messages:Ljava/util/List;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void addSubstitution(me.vertretungsplan.objects.Substitution);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getSubstitutions:()Ljava/util/Set;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          55
      19: aload_2
      20: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #21                 // class me/vertretungsplan/objects/Substitution
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokevirtual #22                 // Method me/vertretungsplan/objects/Substitution.equalsExcludingClasses:(Ljava/lang/Object;)Z
      34: ifeq          52
      37: aload_3
      38: invokevirtual #23                 // Method me/vertretungsplan/objects/Substitution.getClasses:()Ljava/util/Set;
      41: aload_1
      42: invokevirtual #23                 // Method me/vertretungsplan/objects/Substitution.getClasses:()Ljava/util/Set;
      45: invokeinterface #24,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      50: pop
      51: return
      52: goto          10
      55: aload_0
      56: invokevirtual #17                 // Method getSubstitutions:()Ljava/util/Set;
      59: aload_1
      60: invokeinterface #25,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      65: pop
      66: return

  public void addAllSubstitutions(me.vertretungsplan.objects.Substitution...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     32
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: aload         5
      23: invokevirtual #26                 // Method addSubstitution:(Lme/vertretungsplan/objects/Substitution;)V
      26: iinc          4, 1
      29: goto          8
      32: return

  public void addAllSubstitutions(java.util.Collection<? extends me.vertretungsplan.objects.Substitution>);
    Code:
       0: aload_1
       1: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          34
      16: aload_2
      17: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #21                 // class me/vertretungsplan/objects/Substitution
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokevirtual #26                 // Method addSubstitution:(Lme/vertretungsplan/objects/Substitution;)V
      31: goto          7
      34: return

  public void merge(me.vertretungsplan.objects.SubstitutionScheduleDay);
    Code:
       0: aload_1
       1: invokevirtual #28                 // Method getDate:()Lorg/joda/time/LocalDate;
       4: ifnull        21
       7: aload_1
       8: invokevirtual #28                 // Method getDate:()Lorg/joda/time/LocalDate;
      11: aload_0
      12: invokevirtual #28                 // Method getDate:()Lorg/joda/time/LocalDate;
      15: invokevirtual #29                 // Method org/joda/time/LocalDate.equals:(Ljava/lang/Object;)Z
      18: ifeq          42
      21: aload_1
      22: invokevirtual #30                 // Method getDateString:()Ljava/lang/String;
      25: ifnull        52
      28: aload_1
      29: invokevirtual #30                 // Method getDateString:()Ljava/lang/String;
      32: aload_0
      33: invokevirtual #30                 // Method getDateString:()Ljava/lang/String;
      36: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      39: ifne          52
      42: new           #32                 // class java/lang/IllegalArgumentException
      45: dup
      46: ldc           #33                 // String Cannot merge days with different dates
      48: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_0
      53: aload_1
      54: invokevirtual #17                 // Method getSubstitutions:()Ljava/util/Set;
      57: invokevirtual #35                 // Method addAllSubstitutions:(Ljava/util/Collection;)V
      60: aload_1
      61: invokevirtual #36                 // Method getMessages:()Ljava/util/List;
      64: invokeinterface #37,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      69: astore_2
      70: aload_2
      71: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      76: ifeq          116
      79: aload_2
      80: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      85: checkcast     #38                 // class java/lang/String
      88: astore_3
      89: aload_0
      90: getfield      #7                  // Field messages:Ljava/util/List;
      93: aload_3
      94: invokeinterface #39,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      99: ifne          113
     102: aload_0
     103: getfield      #7                  // Field messages:Ljava/util/List;
     106: aload_3
     107: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     112: pop
     113: goto          70
     116: aload_1
     117: invokevirtual #40                 // Method getLastChange:()Lorg/joda/time/LocalDateTime;
     120: ifnull        152
     123: aload_0
     124: invokevirtual #40                 // Method getLastChange:()Lorg/joda/time/LocalDateTime;
     127: ifnull        152
     130: aload_1
     131: invokevirtual #40                 // Method getLastChange:()Lorg/joda/time/LocalDateTime;
     134: aload_0
     135: invokevirtual #40                 // Method getLastChange:()Lorg/joda/time/LocalDateTime;
     138: invokevirtual #41                 // Method org/joda/time/LocalDateTime.isAfter:(Lorg/joda/time/ReadablePartial;)Z
     141: ifeq          152
     144: aload_0
     145: aload_1
     146: invokevirtual #40                 // Method getLastChange:()Lorg/joda/time/LocalDateTime;
     149: invokevirtual #42                 // Method setLastChange:(Lorg/joda/time/LocalDateTime;)V
     152: return

  public boolean equalsByDate(me.vertretungsplan.objects.SubstitutionScheduleDay);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method getDate:()Lorg/joda/time/LocalDate;
       4: ifnull        19
       7: aload_0
       8: invokevirtual #28                 // Method getDate:()Lorg/joda/time/LocalDate;
      11: aload_1
      12: invokevirtual #28                 // Method getDate:()Lorg/joda/time/LocalDate;
      15: invokevirtual #29                 // Method org/joda/time/LocalDate.equals:(Ljava/lang/Object;)Z
      18: ireturn
      19: aload_0
      20: invokevirtual #30                 // Method getDateString:()Ljava/lang/String;
      23: ifnull        38
      26: aload_0
      27: invokevirtual #30                 // Method getDateString:()Ljava/lang/String;
      30: aload_1
      31: invokevirtual #30                 // Method getDateString:()Ljava/lang/String;
      34: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ireturn
      38: aload_1
      39: invokevirtual #28                 // Method getDate:()Lorg/joda/time/LocalDate;
      42: ifnonnull     56
      45: aload_1
      46: invokevirtual #30                 // Method getDateString:()Ljava/lang/String;
      49: ifnonnull     56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: ireturn

  public java.util.Set<me.vertretungsplan.objects.Substitution> getSubstitutionsByClassAndExcludedSubject(java.lang.String, java.util.Set<java.lang.String>);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: getfield      #4                  // Field substitutions:Ljava/util/Set;
       6: invokestatic  #15                 // Method me/vertretungsplan/objects/SubstitutionSchedule.filterByClass:(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
       9: invokestatic  #43                 // Method me/vertretungsplan/objects/SubstitutionSchedule.filterBySubject:(Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;
      12: areturn

  public java.util.Set<me.vertretungsplan.objects.Substitution> getSubstitutionsByTeacherAndExcludedSubject(java.lang.String, java.util.Set<java.lang.String>);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: getfield      #4                  // Field substitutions:Ljava/util/Set;
       6: invokestatic  #44                 // Method me/vertretungsplan/objects/SubstitutionSchedule.filterByTeacher:(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
       9: invokestatic  #43                 // Method me/vertretungsplan/objects/SubstitutionSchedule.filterBySubject:(Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;
      12: areturn

  public me.vertretungsplan.objects.SubstitutionScheduleDay clone();
    Code:
       0: aload_0
       1: invokespecial #45                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #46                 // class me/vertretungsplan/objects/SubstitutionScheduleDay
       7: areturn
       8: astore_1
       9: new           #48                 // class java/lang/RuntimeException
      12: dup
      13: aload_1
      14: invokespecial #49                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  public java.lang.String toString(me.vertretungsplan.objects.SubstitutionSchedule$Type);
    Code:
       0: new           #50                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: invokevirtual #30                 // Method getDateString:()Ljava/lang/String;
      13: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #53                 // String \n
      18: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: pop
      22: aload_2
      23: ldc           #54                 // String ----------------------\n\n
      25: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: pop
      29: aload_2
      30: ldc           #55                 // String last change:
      32: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #56                 // Method getLastChangeString:()Ljava/lang/String;
      39: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #57                 // String \n\n
      44: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: pop
      48: aload_0
      49: getfield      #4                  // Field substitutions:Ljava/util/Set;
      52: invokeinterface #18,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      57: astore_3
      58: aload_3
      59: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          97
      67: aload_3
      68: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #21                 // class me/vertretungsplan/objects/Substitution
      76: astore        4
      78: aload_2
      79: aload         4
      81: aload_1
      82: invokevirtual #58                 // Method me/vertretungsplan/objects/Substitution.toString:(Lme/vertretungsplan/objects/SubstitutionSchedule$Type;)Ljava/lang/String;
      85: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: ldc           #53                 // String \n
      90: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: pop
      94: goto          58
      97: aload_2
      98: ldc           #53                 // String \n
     100: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: pop
     104: aload_0
     105: getfield      #7                  // Field messages:Ljava/util/List;
     108: invokeinterface #37,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     113: astore_3
     114: aload_3
     115: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     120: ifeq          149
     123: aload_3
     124: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     129: checkcast     #38                 // class java/lang/String
     132: astore        4
     134: aload_2
     135: aload         4
     137: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: ldc           #53                 // String \n
     142: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: pop
     146: goto          114
     149: aload_2
     150: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     153: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getstatic     #60                 // Field me/vertretungsplan/objects/SubstitutionSchedule$Type.STUDENT:Lme/vertretungsplan/objects/SubstitutionSchedule$Type;
       4: invokevirtual #61                 // Method toString:(Lme/vertretungsplan/objects/SubstitutionSchedule$Type;)Ljava/lang/String;
       7: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method clone:()Lme/vertretungsplan/objects/SubstitutionScheduleDay;
       4: areturn
}
