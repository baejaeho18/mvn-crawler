Compiled from "SubstitutionScheduleDiff.java"
public class me.vertretungsplan.objects.diff.SubstitutionScheduleDiff implements java.lang.Cloneable {
  private java.util.List<me.vertretungsplan.objects.AdditionalInfo> newAdditionalInfos;

  private java.util.List<me.vertretungsplan.objects.AdditionalInfo> removedAdditionalInfos;

  private java.util.List<me.vertretungsplan.objects.SubstitutionScheduleDay> newDays;

  private java.util.List<me.vertretungsplan.objects.diff.SubstitutionScheduleDayDiff> editedDays;

  private java.util.List<me.vertretungsplan.objects.SubstitutionScheduleDay> removedDays;

  public me.vertretungsplan.objects.diff.SubstitutionScheduleDiff();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static me.vertretungsplan.objects.diff.SubstitutionScheduleDiff compare(me.vertretungsplan.objects.SubstitutionSchedule, me.vertretungsplan.objects.SubstitutionSchedule);
    Code:
       0: new           #2                  // class me/vertretungsplan/objects/diff/SubstitutionScheduleDiff
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: astore_2
       8: aload_2
       9: new           #4                  // class java/util/ArrayList
      12: dup
      13: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      16: putfield      #6                  // Field newAdditionalInfos:Ljava/util/List;
      19: aload_2
      20: new           #4                  // class java/util/ArrayList
      23: dup
      24: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      27: putfield      #7                  // Field removedAdditionalInfos:Ljava/util/List;
      30: aload_2
      31: new           #4                  // class java/util/ArrayList
      34: dup
      35: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      38: putfield      #8                  // Field newDays:Ljava/util/List;
      41: aload_2
      42: new           #4                  // class java/util/ArrayList
      45: dup
      46: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      49: putfield      #9                  // Field editedDays:Ljava/util/List;
      52: aload_2
      53: new           #4                  // class java/util/ArrayList
      56: dup
      57: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      60: putfield      #10                 // Field removedDays:Ljava/util/List;
      63: aload_1
      64: invokevirtual #11                 // Method me/vertretungsplan/objects/SubstitutionSchedule.getAdditionalInfos:()Ljava/util/List;
      67: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      72: astore_3
      73: aload_3
      74: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      79: ifeq          122
      82: aload_3
      83: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      88: checkcast     #15                 // class me/vertretungsplan/objects/AdditionalInfo
      91: astore        4
      93: aload_0
      94: invokevirtual #11                 // Method me/vertretungsplan/objects/SubstitutionSchedule.getAdditionalInfos:()Ljava/util/List;
      97: aload         4
      99: invokeinterface #16,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     104: ifne          119
     107: aload_2
     108: getfield      #6                  // Field newAdditionalInfos:Ljava/util/List;
     111: aload         4
     113: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     118: pop
     119: goto          73
     122: aload_0
     123: invokevirtual #11                 // Method me/vertretungsplan/objects/SubstitutionSchedule.getAdditionalInfos:()Ljava/util/List;
     126: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     131: astore_3
     132: aload_3
     133: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     138: ifeq          181
     141: aload_3
     142: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     147: checkcast     #15                 // class me/vertretungsplan/objects/AdditionalInfo
     150: astore        4
     152: aload_1
     153: invokevirtual #11                 // Method me/vertretungsplan/objects/SubstitutionSchedule.getAdditionalInfos:()Ljava/util/List;
     156: aload         4
     158: invokeinterface #16,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     163: ifne          178
     166: aload_2
     167: getfield      #7                  // Field removedAdditionalInfos:Ljava/util/List;
     170: aload         4
     172: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     177: pop
     178: goto          132
     181: aload_1
     182: invokevirtual #18                 // Method me/vertretungsplan/objects/SubstitutionSchedule.getDays:()Ljava/util/List;
     185: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     190: astore_3
     191: aload_3
     192: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     197: ifeq          274
     200: aload_3
     201: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     206: checkcast     #19                 // class me/vertretungsplan/objects/SubstitutionScheduleDay
     209: astore        4
     211: aload         4
     213: aload_0
     214: invokevirtual #18                 // Method me/vertretungsplan/objects/SubstitutionSchedule.getDays:()Ljava/util/List;
     217: invokestatic  #20                 // Method findSameDateDay:(Lme/vertretungsplan/objects/SubstitutionScheduleDay;Ljava/util/List;)Lme/vertretungsplan/objects/SubstitutionScheduleDay;
     220: astore        5
     222: aload         5
     224: ifnull        259
     227: aload         5
     229: aload         4
     231: invokestatic  #21                 // Method me/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff.compare:(Lme/vertretungsplan/objects/SubstitutionScheduleDay;Lme/vertretungsplan/objects/SubstitutionScheduleDay;)Lme/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff;
     234: astore        6
     236: aload         6
     238: invokevirtual #22                 // Method me/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff.isNotEmpty:()Z
     241: ifeq          256
     244: aload_2
     245: getfield      #9                  // Field editedDays:Ljava/util/List;
     248: aload         6
     250: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     255: pop
     256: goto          271
     259: aload_2
     260: getfield      #8                  // Field newDays:Ljava/util/List;
     263: aload         4
     265: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     270: pop
     271: goto          191
     274: aload_0
     275: invokevirtual #18                 // Method me/vertretungsplan/objects/SubstitutionSchedule.getDays:()Ljava/util/List;
     278: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     283: astore_3
     284: aload_3
     285: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     290: ifeq          335
     293: aload_3
     294: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     299: checkcast     #19                 // class me/vertretungsplan/objects/SubstitutionScheduleDay
     302: astore        4
     304: aload         4
     306: aload_1
     307: invokevirtual #18                 // Method me/vertretungsplan/objects/SubstitutionSchedule.getDays:()Ljava/util/List;
     310: invokestatic  #20                 // Method findSameDateDay:(Lme/vertretungsplan/objects/SubstitutionScheduleDay;Ljava/util/List;)Lme/vertretungsplan/objects/SubstitutionScheduleDay;
     313: astore        5
     315: aload         5
     317: ifnonnull     332
     320: aload_2
     321: getfield      #10                 // Field removedDays:Ljava/util/List;
     324: aload         4
     326: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     331: pop
     332: goto          284
     335: aload_2
     336: areturn

  private static me.vertretungsplan.objects.SubstitutionScheduleDay findSameDateDay(me.vertretungsplan.objects.SubstitutionScheduleDay, java.util.List<me.vertretungsplan.objects.SubstitutionScheduleDay>);
    Code:
       0: aload_1
       1: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          39
      16: aload_2
      17: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #19                 // class me/vertretungsplan/objects/SubstitutionScheduleDay
      25: astore_3
      26: aload_3
      27: aload_0
      28: invokevirtual #23                 // Method me/vertretungsplan/objects/SubstitutionScheduleDay.equalsByDate:(Lme/vertretungsplan/objects/SubstitutionScheduleDay;)Z
      31: ifeq          36
      34: aload_3
      35: areturn
      36: goto          7
      39: aconst_null
      40: areturn

  public static java.util.Set<me.vertretungsplan.objects.diff.SubstitutionDiff> filterByClass(java.lang.String, java.util.Set<me.vertretungsplan.objects.diff.SubstitutionDiff>);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aload_1
       5: areturn
       6: new           #24                 // class java/util/HashSet
       9: dup
      10: invokespecial #25                 // Method java/util/HashSet."<init>":()V
      13: astore_2
      14: aload_1
      15: invokeinterface #26,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      20: astore_3
      21: aload_3
      22: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          67
      30: aload_3
      31: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #27                 // class me/vertretungsplan/objects/diff/SubstitutionDiff
      39: astore        4
      41: aload         4
      43: invokevirtual #28                 // Method me/vertretungsplan/objects/diff/SubstitutionDiff.getClasses:()Ljava/util/Set;
      46: aload_0
      47: invokeinterface #29,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      52: ifeq          64
      55: aload_2
      56: aload         4
      58: invokeinterface #30,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      63: pop
      64: goto          21
      67: aload_2
      68: areturn

  public static java.util.Set<me.vertretungsplan.objects.diff.SubstitutionDiff> filterBySubject(java.util.Set<java.lang.String>, java.util.Set<me.vertretungsplan.objects.diff.SubstitutionDiff>);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokeinterface #31,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      10: ifeq          15
      13: aload_1
      14: areturn
      15: new           #24                 // class java/util/HashSet
      18: dup
      19: invokespecial #25                 // Method java/util/HashSet."<init>":()V
      22: astore_2
      23: aload_1
      24: invokeinterface #26,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore_3
      30: aload_3
      31: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          130
      39: aload_3
      40: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #27                 // class me/vertretungsplan/objects/diff/SubstitutionDiff
      48: astore        4
      50: aload         4
      52: invokevirtual #32                 // Method me/vertretungsplan/objects/diff/SubstitutionDiff.getNewSubstitution:()Lme/vertretungsplan/objects/Substitution;
      55: invokevirtual #33                 // Method me/vertretungsplan/objects/Substitution.getPreviousSubject:()Ljava/lang/String;
      58: ifnull        90
      61: aload_0
      62: aload         4
      64: invokevirtual #32                 // Method me/vertretungsplan/objects/diff/SubstitutionDiff.getNewSubstitution:()Lme/vertretungsplan/objects/Substitution;
      67: invokevirtual #33                 // Method me/vertretungsplan/objects/Substitution.getPreviousSubject:()Ljava/lang/String;
      70: invokeinterface #29,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      75: ifne          127
      78: aload_2
      79: aload         4
      81: invokeinterface #30,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      86: pop
      87: goto          127
      90: aload         4
      92: invokevirtual #32                 // Method me/vertretungsplan/objects/diff/SubstitutionDiff.getNewSubstitution:()Lme/vertretungsplan/objects/Substitution;
      95: invokevirtual #34                 // Method me/vertretungsplan/objects/Substitution.getSubject:()Ljava/lang/String;
      98: ifnull        127
     101: aload_0
     102: aload         4
     104: invokevirtual #32                 // Method me/vertretungsplan/objects/diff/SubstitutionDiff.getNewSubstitution:()Lme/vertretungsplan/objects/Substitution;
     107: invokevirtual #34                 // Method me/vertretungsplan/objects/Substitution.getSubject:()Ljava/lang/String;
     110: invokeinterface #29,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     115: ifne          127
     118: aload_2
     119: aload         4
     121: invokeinterface #30,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     126: pop
     127: goto          30
     130: aload_2
     131: areturn

  public static java.util.Set<me.vertretungsplan.objects.diff.SubstitutionDiff> filterByTeacher(java.lang.String, java.util.Set<me.vertretungsplan.objects.diff.SubstitutionDiff>);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aload_1
       5: areturn
       6: new           #24                 // class java/util/HashSet
       9: dup
      10: invokespecial #25                 // Method java/util/HashSet."<init>":()V
      13: astore_2
      14: aload_1
      15: invokeinterface #26,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      20: astore_3
      21: aload_3
      22: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          113
      30: aload_3
      31: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #27                 // class me/vertretungsplan/objects/diff/SubstitutionDiff
      39: astore        4
      41: aload_0
      42: aload         4
      44: invokevirtual #35                 // Method me/vertretungsplan/objects/diff/SubstitutionDiff.getOldSubstitution:()Lme/vertretungsplan/objects/Substitution;
      47: invokevirtual #36                 // Method me/vertretungsplan/objects/Substitution.getTeacher:()Ljava/lang/String;
      50: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      53: ifne          101
      56: aload_0
      57: aload         4
      59: invokevirtual #35                 // Method me/vertretungsplan/objects/diff/SubstitutionDiff.getOldSubstitution:()Lme/vertretungsplan/objects/Substitution;
      62: invokevirtual #38                 // Method me/vertretungsplan/objects/Substitution.getPreviousTeacher:()Ljava/lang/String;
      65: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      68: ifne          101
      71: aload_0
      72: aload         4
      74: invokevirtual #32                 // Method me/vertretungsplan/objects/diff/SubstitutionDiff.getNewSubstitution:()Lme/vertretungsplan/objects/Substitution;
      77: invokevirtual #36                 // Method me/vertretungsplan/objects/Substitution.getTeacher:()Ljava/lang/String;
      80: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      83: ifne          101
      86: aload_0
      87: aload         4
      89: invokevirtual #32                 // Method me/vertretungsplan/objects/diff/SubstitutionDiff.getNewSubstitution:()Lme/vertretungsplan/objects/Substitution;
      92: invokevirtual #38                 // Method me/vertretungsplan/objects/Substitution.getPreviousTeacher:()Ljava/lang/String;
      95: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      98: ifeq          110
     101: aload_2
     102: aload         4
     104: invokeinterface #30,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     109: pop
     110: goto          21
     113: aload_2
     114: areturn

  public java.util.List<me.vertretungsplan.objects.AdditionalInfo> getNewAdditionalInfos();
    Code:
       0: aload_0
       1: getfield      #6                  // Field newAdditionalInfos:Ljava/util/List;
       4: areturn

  public void setNewAdditionalInfos(java.util.List<me.vertretungsplan.objects.AdditionalInfo>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field newAdditionalInfos:Ljava/util/List;
       5: return

  public java.util.List<me.vertretungsplan.objects.AdditionalInfo> getRemovedAdditionalInfos();
    Code:
       0: aload_0
       1: getfield      #7                  // Field removedAdditionalInfos:Ljava/util/List;
       4: areturn

  public void setRemovedAdditionalInfos(java.util.List<me.vertretungsplan.objects.AdditionalInfo>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field removedAdditionalInfos:Ljava/util/List;
       5: return

  public java.util.List<me.vertretungsplan.objects.SubstitutionScheduleDay> getNewDays();
    Code:
       0: aload_0
       1: getfield      #8                  // Field newDays:Ljava/util/List;
       4: areturn

  public void setNewDays(java.util.List<me.vertretungsplan.objects.SubstitutionScheduleDay>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field newDays:Ljava/util/List;
       5: return

  public java.util.List<me.vertretungsplan.objects.diff.SubstitutionScheduleDayDiff> getEditedDays();
    Code:
       0: aload_0
       1: getfield      #9                  // Field editedDays:Ljava/util/List;
       4: areturn

  public void setEditedDays(java.util.List<me.vertretungsplan.objects.diff.SubstitutionScheduleDayDiff>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field editedDays:Ljava/util/List;
       5: return

  public java.util.List<me.vertretungsplan.objects.SubstitutionScheduleDay> getRemovedDays();
    Code:
       0: aload_0
       1: getfield      #10                 // Field removedDays:Ljava/util/List;
       4: areturn

  public void setRemovedDays(java.util.List<me.vertretungsplan.objects.SubstitutionScheduleDay>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field removedDays:Ljava/util/List;
       5: return

  public boolean isEmpty();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #9                  // Field editedDays:Ljava/util/List;
       6: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          46
      21: aload_2
      22: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #39                 // class me/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff
      30: astore_3
      31: aload_3
      32: invokevirtual #22                 // Method me/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff.isNotEmpty:()Z
      35: ifeq          43
      38: iconst_0
      39: istore_1
      40: goto          46
      43: goto          12
      46: aload_0
      47: getfield      #6                  // Field newAdditionalInfos:Ljava/util/List;
      50: invokeinterface #40,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      55: ifeq          102
      58: aload_0
      59: getfield      #7                  // Field removedAdditionalInfos:Ljava/util/List;
      62: invokeinterface #40,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      67: ifeq          102
      70: aload_0
      71: getfield      #8                  // Field newDays:Ljava/util/List;
      74: invokeinterface #40,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      79: ifeq          102
      82: aload_0
      83: getfield      #10                 // Field removedDays:Ljava/util/List;
      86: invokeinterface #40,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      91: ifeq          102
      94: iload_1
      95: ifeq          102
      98: iconst_1
      99: goto          103
     102: iconst_0
     103: ireturn

  public me.vertretungsplan.objects.diff.SubstitutionScheduleDiff clone();
    Code:
       0: aload_0
       1: invokespecial #41                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #2                  // class me/vertretungsplan/objects/diff/SubstitutionScheduleDiff
       7: areturn
       8: astore_1
       9: new           #43                 // class java/lang/RuntimeException
      12: dup
      13: aload_1
      14: invokespecial #44                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  public me.vertretungsplan.objects.diff.SubstitutionScheduleDiff filteredByClassAndExcludedSubject(java.lang.String, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method clone:()Lme/vertretungsplan/objects/diff/SubstitutionScheduleDiff;
       4: astore_3
       5: aload_0
       6: aload_1
       7: aload_2
       8: aload_3
       9: invokevirtual #46                 // Method getNewDays:()Ljava/util/List;
      12: invokespecial #47                 // Method filterDaysClass:(Ljava/lang/String;Ljava/util/Set;Ljava/util/List;)V
      15: aload_0
      16: aload_1
      17: aload_2
      18: aload_3
      19: invokevirtual #48                 // Method getEditedDays:()Ljava/util/List;
      22: invokespecial #49                 // Method filterDayDiffsClass:(Ljava/lang/String;Ljava/util/Set;Ljava/util/List;)V
      25: aload_0
      26: aload_1
      27: aload_2
      28: aload_3
      29: invokevirtual #50                 // Method getRemovedDays:()Ljava/util/List;
      32: invokespecial #47                 // Method filterDaysClass:(Ljava/lang/String;Ljava/util/Set;Ljava/util/List;)V
      35: aload_3
      36: areturn

  public me.vertretungsplan.objects.diff.SubstitutionScheduleDiff filteredByTeacherAndExcludedSubject(java.lang.String, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method clone:()Lme/vertretungsplan/objects/diff/SubstitutionScheduleDiff;
       4: astore_3
       5: aload_0
       6: aload_1
       7: aload_2
       8: aload_3
       9: invokevirtual #46                 // Method getNewDays:()Ljava/util/List;
      12: invokespecial #51                 // Method filterDaysTeacher:(Ljava/lang/String;Ljava/util/Set;Ljava/util/List;)V
      15: aload_0
      16: aload_1
      17: aload_2
      18: aload_3
      19: invokevirtual #48                 // Method getEditedDays:()Ljava/util/List;
      22: invokespecial #52                 // Method filterDayDiffsTeacher:(Ljava/lang/String;Ljava/util/Set;Ljava/util/List;)V
      25: aload_0
      26: aload_1
      27: aload_2
      28: aload_3
      29: invokevirtual #50                 // Method getRemovedDays:()Ljava/util/List;
      32: invokespecial #51                 // Method filterDaysTeacher:(Ljava/lang/String;Ljava/util/Set;Ljava/util/List;)V
      35: aload_3
      36: areturn

  private void filterDayDiffsClass(java.lang.String, java.util.Set<java.lang.String>, java.util.List<me.vertretungsplan.objects.diff.SubstitutionScheduleDayDiff>);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: aload_3
       6: invokeinterface #53,  1           // InterfaceMethod java/util/List.size:()I
      11: if_icmpge     87
      14: aload_3
      15: iload         4
      17: invokeinterface #54,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      22: checkcast     #39                 // class me/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff
      25: astore        5
      27: aload         5
      29: invokevirtual #55                 // Method me/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff.clone:()Lme/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff;
      32: astore        6
      34: aload         6
      36: aload         5
      38: aload_1
      39: aload_2
      40: invokevirtual #56                 // Method me/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff.getNewSubstitutionsByClassAndExcludedSubject:(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
      43: invokevirtual #57                 // Method me/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff.setNewSubstitutions:(Ljava/util/Set;)V
      46: aload         6
      48: aload         5
      50: aload_1
      51: aload_2
      52: invokevirtual #58                 // Method me/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff.getRemovedSubstitutionsByClassAndExcludedSubject:(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
      55: invokevirtual #59                 // Method me/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff.setRemovedSubstitutions:(Ljava/util/Set;)V
      58: aload         6
      60: aload         5
      62: aload_1
      63: aload_2
      64: invokevirtual #60                 // Method me/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff.getEditedSubstitutionsByClassAndExcludedSubject:(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
      67: invokevirtual #61                 // Method me/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff.setEditedSubstitutions:(Ljava/util/Set;)V
      70: aload_3
      71: iload         4
      73: aload         6
      75: invokeinterface #62,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      80: pop
      81: iinc          4, 1
      84: goto          3
      87: return

  private void filterDaysClass(java.lang.String, java.util.Set<java.lang.String>, java.util.List<me.vertretungsplan.objects.SubstitutionScheduleDay>);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: aload_3
       6: invokeinterface #53,  1           // InterfaceMethod java/util/List.size:()I
      11: if_icmpge     63
      14: aload_3
      15: iload         4
      17: invokeinterface #54,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      22: checkcast     #19                 // class me/vertretungsplan/objects/SubstitutionScheduleDay
      25: astore        5
      27: aload         5
      29: invokevirtual #63                 // Method me/vertretungsplan/objects/SubstitutionScheduleDay.clone:()Lme/vertretungsplan/objects/SubstitutionScheduleDay;
      32: astore        6
      34: aload         6
      36: aload         5
      38: aload_1
      39: aload_2
      40: invokevirtual #64                 // Method me/vertretungsplan/objects/SubstitutionScheduleDay.getSubstitutionsByClassAndExcludedSubject:(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
      43: invokevirtual #65                 // Method me/vertretungsplan/objects/SubstitutionScheduleDay.setSubstitutions:(Ljava/util/Set;)V
      46: aload_3
      47: iload         4
      49: aload         6
      51: invokeinterface #62,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: iinc          4, 1
      60: goto          3
      63: return

  private void filterDayDiffsTeacher(java.lang.String, java.util.Set<java.lang.String>, java.util.List<me.vertretungsplan.objects.diff.SubstitutionScheduleDayDiff>);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: aload_3
       6: invokeinterface #53,  1           // InterfaceMethod java/util/List.size:()I
      11: if_icmpge     87
      14: aload_3
      15: iload         4
      17: invokeinterface #54,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      22: checkcast     #39                 // class me/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff
      25: astore        5
      27: aload         5
      29: invokevirtual #55                 // Method me/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff.clone:()Lme/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff;
      32: astore        6
      34: aload         6
      36: aload         5
      38: aload_1
      39: aload_2
      40: invokevirtual #66                 // Method me/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff.getNewSubstitutionsByTeacherAndExcludedSubject:(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
      43: invokevirtual #57                 // Method me/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff.setNewSubstitutions:(Ljava/util/Set;)V
      46: aload         6
      48: aload         5
      50: aload_1
      51: aload_2
      52: invokevirtual #67                 // Method me/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff.getRemovedSubstitutionsByTeacherAndExcludedSubject:(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
      55: invokevirtual #59                 // Method me/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff.setRemovedSubstitutions:(Ljava/util/Set;)V
      58: aload         6
      60: aload         5
      62: aload_1
      63: aload_2
      64: invokevirtual #68                 // Method me/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff.getEditedSubstitutionsByTeacherAndExcludedSubject:(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
      67: invokevirtual #61                 // Method me/vertretungsplan/objects/diff/SubstitutionScheduleDayDiff.setEditedSubstitutions:(Ljava/util/Set;)V
      70: aload_3
      71: iload         4
      73: aload         6
      75: invokeinterface #62,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      80: pop
      81: iinc          4, 1
      84: goto          3
      87: return

  private void filterDaysTeacher(java.lang.String, java.util.Set<java.lang.String>, java.util.List<me.vertretungsplan.objects.SubstitutionScheduleDay>);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: aload_3
       6: invokeinterface #53,  1           // InterfaceMethod java/util/List.size:()I
      11: if_icmpge     63
      14: aload_3
      15: iload         4
      17: invokeinterface #54,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      22: checkcast     #19                 // class me/vertretungsplan/objects/SubstitutionScheduleDay
      25: astore        5
      27: aload         5
      29: invokevirtual #63                 // Method me/vertretungsplan/objects/SubstitutionScheduleDay.clone:()Lme/vertretungsplan/objects/SubstitutionScheduleDay;
      32: astore        6
      34: aload         6
      36: aload         5
      38: aload_1
      39: aload_2
      40: invokevirtual #69                 // Method me/vertretungsplan/objects/SubstitutionScheduleDay.getSubstitutionsByTeacherAndExcludedSubject:(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
      43: invokevirtual #65                 // Method me/vertretungsplan/objects/SubstitutionScheduleDay.setSubstitutions:(Ljava/util/Set;)V
      46: aload_3
      47: iload         4
      49: aload         6
      51: invokeinterface #62,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: iinc          4, 1
      60: goto          3
      63: return

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method clone:()Lme/vertretungsplan/objects/diff/SubstitutionScheduleDiff;
       4: areturn
}
