Compiled from "BaseDao.java"
public class cool.scx.sql.base.BaseDao<Entity> {
  protected final cool.scx.sql.TableInfo tableInfo;

  protected final java.lang.Class<Entity> entityClass;

  protected final cool.scx.sql.SQLRunner sqlRunner;

  protected final cool.scx.sql.ResultHandler<java.util.List<Entity>> entityBeanListHandler;

  protected final cool.scx.sql.ResultHandler<java.lang.Long> countResultHandler;

  public cool.scx.sql.base.BaseDao(cool.scx.sql.TableInfo, java.lang.Class<Entity>, cool.scx.sql.SQLRunner);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field tableInfo:Lcool/scx/sql/TableInfo;
       9: aload_0
      10: aload_2
      11: putfield      #13                 // Field entityClass:Ljava/lang/Class;
      14: aload_0
      15: aload_3
      16: putfield      #17                 // Field sqlRunner:Lcool/scx/sql/SQLRunner;
      19: aload_0
      20: new           #21                 // class cool/scx/sql/result_handler/BeanListHandler
      23: dup
      24: aload_0
      25: getfield      #13                 // Field entityClass:Ljava/lang/Class;
      28: invokespecial #23                 // Method cool/scx/sql/result_handler/BeanListHandler."<init>":(Ljava/lang/Class;)V
      31: putfield      #26                 // Field entityBeanListHandler:Lcool/scx/sql/ResultHandler;
      34: aload_0
      35: new           #30                 // class cool/scx/sql/result_handler/SingleValueHandler
      38: dup
      39: ldc           #32                 // String count
      41: ldc           #34                 // class java/lang/Long
      43: invokespecial #36                 // Method cool/scx/sql/result_handler/SingleValueHandler."<init>":(Ljava/lang/String;Ljava/lang/Class;)V
      46: putfield      #39                 // Field countResultHandler:Lcool/scx/sql/ResultHandler;
      49: return

  public final java.lang.Long _insert(Entity, cool.scx.sql.base.UpdateFilter);
    Code:
       0: aload_0
       1: getfield      #17                 // Field sqlRunner:Lcool/scx/sql/SQLRunner;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #42                 // Method _buildInsertSQL:(Ljava/lang/Object;Lcool/scx/sql/base/UpdateFilter;)Lcool/scx/sql/SQL;
      10: invokevirtual #46                 // Method cool/scx/sql/SQLRunner.update:(Lcool/scx/sql/SQL;)Lcool/scx/sql/UpdateResult;
      13: invokevirtual #52                 // Method cool/scx/sql/UpdateResult.firstGeneratedKey:()Ljava/lang/Long;
      16: areturn

  private cool.scx.sql.SQL _buildInsertSQL(Entity, cool.scx.sql.base.UpdateFilter);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: getfield      #7                  // Field tableInfo:Lcool/scx/sql/TableInfo;
       6: invokeinterface #58,  1           // InterfaceMethod cool/scx/sql/TableInfo.columnInfos:()[Lcool/scx/sql/ColumnInfo;
      11: invokevirtual #64                 // Method cool/scx/sql/base/UpdateFilter.filter:(Ljava/lang/Object;[Lcool/scx/sql/ColumnInfo;)[Lcool/scx/sql/ColumnInfo;
      14: astore_3
      15: aload_0
      16: getfield      #7                  // Field tableInfo:Lcool/scx/sql/TableInfo;
      19: invokeinterface #70,  1           // InterfaceMethod cool/scx/sql/TableInfo.tableName:()Ljava/lang/String;
      24: aload_3
      25: invokestatic  #74                 // Method cool/scx/sql/SQLBuilder.Insert:(Ljava/lang/String;[Lcool/scx/sql/ColumnInfo;)Lcool/scx/sql/SQLBuilder;
      28: aload_3
      29: invokevirtual #80                 // Method cool/scx/sql/SQLBuilder.Values:([Lcool/scx/sql/ColumnInfo;)Lcool/scx/sql/SQLBuilder;
      32: invokevirtual #84                 // Method cool/scx/sql/SQLBuilder.GetSQL:()Ljava/lang/String;
      35: astore        4
      37: aload         4
      39: aload_3
      40: invokestatic  #87                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      43: aload_1
      44: invokedynamic #93,  0             // InvokeDynamic #0:apply:(Ljava/lang/Object;)Ljava/util/function/Function;
      49: invokeinterface #97,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      54: invokeinterface #103,  1          // InterfaceMethod java/util/stream/Stream.toArray:()[Ljava/lang/Object;
      59: invokestatic  #107                // InterfaceMethod cool/scx/sql/SQL.ofPlaceholder:(Ljava/lang/String;[Ljava/lang/Object;)Lcool/scx/sql/SQL;
      62: areturn

  public final java.util.List<java.lang.Long> _insertBatch(java.util.Collection<Entity>, cool.scx.sql.base.UpdateFilter);
    Code:
       0: aload_0
       1: getfield      #17                 // Field sqlRunner:Lcool/scx/sql/SQLRunner;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #113                // Method _buildInsertBatchSQL:(Ljava/util/Collection;Lcool/scx/sql/base/UpdateFilter;)Lcool/scx/sql/SQL;
      10: invokevirtual #117                // Method cool/scx/sql/SQLRunner.updateBatch:(Lcool/scx/sql/SQL;)Lcool/scx/sql/UpdateResult;
      13: invokevirtual #120                // Method cool/scx/sql/UpdateResult.generatedKeys:()Ljava/util/List;
      16: areturn

  private cool.scx.sql.SQL _buildInsertBatchSQL(java.util.Collection<Entity>, cool.scx.sql.base.UpdateFilter);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #7                  // Field tableInfo:Lcool/scx/sql/TableInfo;
       5: invokeinterface #58,  1           // InterfaceMethod cool/scx/sql/TableInfo.columnInfos:()[Lcool/scx/sql/ColumnInfo;
      10: invokevirtual #124                // Method cool/scx/sql/base/UpdateFilter.filter:([Lcool/scx/sql/ColumnInfo;)[Lcool/scx/sql/ColumnInfo;
      13: astore_3
      14: new           #127                // class java/util/ArrayList
      17: dup
      18: invokespecial #129                // Method java/util/ArrayList."<init>":()V
      21: astore        4
      23: aload_1
      24: invokeinterface #130,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      29: astore        5
      31: aload         5
      33: invokeinterface #136,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          103
      41: aload         5
      43: invokeinterface #142,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: astore        6
      50: aload_3
      51: arraylength
      52: anewarray     #2                  // class java/lang/Object
      55: astore        7
      57: iconst_0
      58: istore        8
      60: iload         8
      62: aload_3
      63: arraylength
      64: if_icmpge     92
      67: aload         7
      69: iload         8
      71: aload_3
      72: iload         8
      74: aaload
      75: aload         6
      77: invokeinterface #146,  2          // InterfaceMethod cool/scx/sql/ColumnInfo.getFieldValue:(Ljava/lang/Object;)Ljava/lang/Object;
      82: aastore
      83: iload         8
      85: iconst_1
      86: iadd
      87: istore        8
      89: goto          60
      92: aload         4
      94: aload         7
      96: invokevirtual #152                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      99: pop
     100: goto          31
     103: aload_0
     104: getfield      #7                  // Field tableInfo:Lcool/scx/sql/TableInfo;
     107: invokeinterface #70,  1           // InterfaceMethod cool/scx/sql/TableInfo.tableName:()Ljava/lang/String;
     112: aload_3
     113: invokestatic  #74                 // Method cool/scx/sql/SQLBuilder.Insert:(Ljava/lang/String;[Lcool/scx/sql/ColumnInfo;)Lcool/scx/sql/SQLBuilder;
     116: aload_3
     117: invokevirtual #80                 // Method cool/scx/sql/SQLBuilder.Values:([Lcool/scx/sql/ColumnInfo;)Lcool/scx/sql/SQLBuilder;
     120: invokevirtual #84                 // Method cool/scx/sql/SQLBuilder.GetSQL:()Ljava/lang/String;
     123: astore        5
     125: aload         5
     127: aload         4
     129: invokestatic  #156                // InterfaceMethod cool/scx/sql/SQL.ofPlaceholder:(Ljava/lang/String;Ljava/util/List;)Lcool/scx/sql/SQL;
     132: areturn

  public final java.util.List<Entity> _select(cool.scx.sql.base.Query, cool.scx.sql.base.SelectFilter);
    Code:
       0: aload_0
       1: getfield      #17                 // Field sqlRunner:Lcool/scx/sql/SQLRunner;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #159                // Method _buildSelectSQL:(Lcool/scx/sql/base/Query;Lcool/scx/sql/base/SelectFilter;)Lcool/scx/sql/SQL;
      10: aload_0
      11: getfield      #26                 // Field entityBeanListHandler:Lcool/scx/sql/ResultHandler;
      14: invokevirtual #163                // Method cool/scx/sql/SQLRunner.query:(Lcool/scx/sql/SQL;Lcool/scx/sql/ResultHandler;)Ljava/lang/Object;
      17: checkcast     #167                // class java/util/List
      20: areturn

  public final cool.scx.sql.SQL _buildSelectSQL(cool.scx.sql.base.Query, cool.scx.sql.base.SelectFilter);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #7                  // Field tableInfo:Lcool/scx/sql/TableInfo;
       5: invokeinterface #58,  1           // InterfaceMethod cool/scx/sql/TableInfo.columnInfos:()[Lcool/scx/sql/ColumnInfo;
      10: invokevirtual #169                // Method cool/scx/sql/base/SelectFilter.filter:([Lcool/scx/sql/ColumnInfo;)[Lcool/scx/sql/ColumnInfo;
      13: astore_3
      14: aload_3
      15: invokestatic  #172                // Method cool/scx/sql/SQLBuilder.Select:([Lcool/scx/sql/ColumnInfo;)Lcool/scx/sql/SQLBuilder;
      18: aload_0
      19: getfield      #7                  // Field tableInfo:Lcool/scx/sql/TableInfo;
      22: invokeinterface #70,  1           // InterfaceMethod cool/scx/sql/TableInfo.tableName:()Ljava/lang/String;
      27: invokevirtual #175                // Method cool/scx/sql/SQLBuilder.From:(Ljava/lang/String;)Lcool/scx/sql/SQLBuilder;
      30: aload_1
      31: invokevirtual #179                // Method cool/scx/sql/base/Query.where:()Lcool/scx/sql/where/Where;
      34: invokevirtual #185                // Method cool/scx/sql/SQLBuilder.Where:(Lcool/scx/sql/where/Where;)Lcool/scx/sql/SQLBuilder;
      37: aload_1
      38: invokevirtual #189                // Method cool/scx/sql/base/Query.groupBy:()Lcool/scx/sql/group_by/GroupBy;
      41: invokevirtual #193                // Method cool/scx/sql/SQLBuilder.GroupBy:(Lcool/scx/sql/group_by/GroupBy;)Lcool/scx/sql/SQLBuilder;
      44: aload_1
      45: invokevirtual #197                // Method cool/scx/sql/base/Query.orderBy:()Lcool/scx/sql/order_by/OrderBy;
      48: invokevirtual #201                // Method cool/scx/sql/SQLBuilder.OrderBy:(Lcool/scx/sql/order_by/OrderBy;)Lcool/scx/sql/SQLBuilder;
      51: aload_1
      52: invokevirtual #205                // Method cool/scx/sql/base/Query.pagination:()Lcool/scx/sql/pagination/Pagination;
      55: invokevirtual #209                // Method cool/scx/sql/SQLBuilder.Limit:(Lcool/scx/sql/pagination/Pagination;)Lcool/scx/sql/SQLBuilder;
      58: invokevirtual #84                 // Method cool/scx/sql/SQLBuilder.GetSQL:()Ljava/lang/String;
      61: astore        4
      63: aload         4
      65: aload_1
      66: invokevirtual #179                // Method cool/scx/sql/base/Query.where:()Lcool/scx/sql/where/Where;
      69: invokevirtual #213                // Method cool/scx/sql/where/Where.getWhereParams:()[Ljava/lang/Object;
      72: invokestatic  #107                // InterfaceMethod cool/scx/sql/SQL.ofPlaceholder:(Ljava/lang/String;[Ljava/lang/Object;)Lcool/scx/sql/SQL;
      75: areturn

  public final cool.scx.sql.SQL _buildSelectSQLWithAlias(cool.scx.sql.base.Query, cool.scx.sql.base.SelectFilter);
    Code:
       0: aload_1
       1: invokevirtual #205                // Method cool/scx/sql/base/Query.pagination:()Lcool/scx/sql/pagination/Pagination;
       4: invokevirtual #218                // Method cool/scx/sql/pagination/Pagination.rowCount:()Ljava/lang/Integer;
       7: ifnonnull     17
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokevirtual #159                // Method _buildSelectSQL:(Lcool/scx/sql/base/Query;Lcool/scx/sql/base/SelectFilter;)Lcool/scx/sql/SQL;
      16: areturn
      17: aload_2
      18: aload_0
      19: getfield      #7                  // Field tableInfo:Lcool/scx/sql/TableInfo;
      22: invokeinterface #58,  1           // InterfaceMethod cool/scx/sql/TableInfo.columnInfos:()[Lcool/scx/sql/ColumnInfo;
      27: invokevirtual #169                // Method cool/scx/sql/base/SelectFilter.filter:([Lcool/scx/sql/ColumnInfo;)[Lcool/scx/sql/ColumnInfo;
      30: astore_3
      31: aload_3
      32: invokestatic  #172                // Method cool/scx/sql/SQLBuilder.Select:([Lcool/scx/sql/ColumnInfo;)Lcool/scx/sql/SQLBuilder;
      35: aload_0
      36: getfield      #7                  // Field tableInfo:Lcool/scx/sql/TableInfo;
      39: invokeinterface #70,  1           // InterfaceMethod cool/scx/sql/TableInfo.tableName:()Ljava/lang/String;
      44: invokevirtual #175                // Method cool/scx/sql/SQLBuilder.From:(Ljava/lang/String;)Lcool/scx/sql/SQLBuilder;
      47: aload_1
      48: invokevirtual #179                // Method cool/scx/sql/base/Query.where:()Lcool/scx/sql/where/Where;
      51: invokevirtual #185                // Method cool/scx/sql/SQLBuilder.Where:(Lcool/scx/sql/where/Where;)Lcool/scx/sql/SQLBuilder;
      54: aload_1
      55: invokevirtual #189                // Method cool/scx/sql/base/Query.groupBy:()Lcool/scx/sql/group_by/GroupBy;
      58: invokevirtual #193                // Method cool/scx/sql/SQLBuilder.GroupBy:(Lcool/scx/sql/group_by/GroupBy;)Lcool/scx/sql/SQLBuilder;
      61: aload_1
      62: invokevirtual #197                // Method cool/scx/sql/base/Query.orderBy:()Lcool/scx/sql/order_by/OrderBy;
      65: invokevirtual #201                // Method cool/scx/sql/SQLBuilder.OrderBy:(Lcool/scx/sql/order_by/OrderBy;)Lcool/scx/sql/SQLBuilder;
      68: aload_1
      69: invokevirtual #205                // Method cool/scx/sql/base/Query.pagination:()Lcool/scx/sql/pagination/Pagination;
      72: invokevirtual #209                // Method cool/scx/sql/SQLBuilder.Limit:(Lcool/scx/sql/pagination/Pagination;)Lcool/scx/sql/SQLBuilder;
      75: invokevirtual #84                 // Method cool/scx/sql/SQLBuilder.GetSQL:()Ljava/lang/String;
      78: astore        4
      80: aload_3
      81: invokestatic  #87                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      84: invokedynamic #224,  0            // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      89: invokeinterface #97,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      94: invokedynamic #227,  0            // InvokeDynamic #2:apply:()Ljava/util/function/IntFunction;
      99: invokeinterface #230,  2          // InterfaceMethod java/util/stream/Stream.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
     104: checkcast     #233                // class "[Ljava/lang/String;"
     107: invokestatic  #235                // Method cool/scx/sql/SQLBuilder.Select:([Ljava/lang/String;)Lcool/scx/sql/SQLBuilder;
     110: aload         4
     112: invokedynamic #238,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     117: invokevirtual #175                // Method cool/scx/sql/SQLBuilder.From:(Ljava/lang/String;)Lcool/scx/sql/SQLBuilder;
     120: invokevirtual #84                 // Method cool/scx/sql/SQLBuilder.GetSQL:()Ljava/lang/String;
     123: astore        5
     125: aload         5
     127: aload_0
     128: getfield      #7                  // Field tableInfo:Lcool/scx/sql/TableInfo;
     131: invokeinterface #70,  1           // InterfaceMethod cool/scx/sql/TableInfo.tableName:()Ljava/lang/String;
     136: bipush        6
     138: invokestatic  #242                // Method cool/scx/util/RandomUtils.randomString:(I)Ljava/lang/String;
     141: invokedynamic #248,  0            // InvokeDynamic #4:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     146: aload_1
     147: invokevirtual #179                // Method cool/scx/sql/base/Query.where:()Lcool/scx/sql/where/Where;
     150: invokevirtual #213                // Method cool/scx/sql/where/Where.getWhereParams:()[Ljava/lang/Object;
     153: invokestatic  #107                // InterfaceMethod cool/scx/sql/SQL.ofPlaceholder:(Ljava/lang/String;[Ljava/lang/Object;)Lcool/scx/sql/SQL;
     156: areturn

  public final long _count(cool.scx.sql.base.Query);
    Code:
       0: aload_0
       1: getfield      #17                 // Field sqlRunner:Lcool/scx/sql/SQLRunner;
       4: aload_0
       5: aload_1
       6: invokevirtual #251                // Method _buildCountSQL:(Lcool/scx/sql/base/Query;)Lcool/scx/sql/SQL;
       9: aload_0
      10: getfield      #39                 // Field countResultHandler:Lcool/scx/sql/ResultHandler;
      13: invokevirtual #163                // Method cool/scx/sql/SQLRunner.query:(Lcool/scx/sql/SQL;Lcool/scx/sql/ResultHandler;)Ljava/lang/Object;
      16: checkcast     #34                 // class java/lang/Long
      19: invokevirtual #255                // Method java/lang/Long.longValue:()J
      22: lreturn

  private cool.scx.sql.SQL _buildCountSQL(cool.scx.sql.base.Query);
    Code:
       0: iconst_1
       1: anewarray     #259                // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc_w         #261                // String COUNT(*) AS count
       9: aastore
      10: invokestatic  #235                // Method cool/scx/sql/SQLBuilder.Select:([Ljava/lang/String;)Lcool/scx/sql/SQLBuilder;
      13: aload_0
      14: getfield      #7                  // Field tableInfo:Lcool/scx/sql/TableInfo;
      17: invokeinterface #70,  1           // InterfaceMethod cool/scx/sql/TableInfo.tableName:()Ljava/lang/String;
      22: invokevirtual #175                // Method cool/scx/sql/SQLBuilder.From:(Ljava/lang/String;)Lcool/scx/sql/SQLBuilder;
      25: aload_1
      26: invokevirtual #179                // Method cool/scx/sql/base/Query.where:()Lcool/scx/sql/where/Where;
      29: invokevirtual #185                // Method cool/scx/sql/SQLBuilder.Where:(Lcool/scx/sql/where/Where;)Lcool/scx/sql/SQLBuilder;
      32: aload_1
      33: invokevirtual #189                // Method cool/scx/sql/base/Query.groupBy:()Lcool/scx/sql/group_by/GroupBy;
      36: invokevirtual #193                // Method cool/scx/sql/SQLBuilder.GroupBy:(Lcool/scx/sql/group_by/GroupBy;)Lcool/scx/sql/SQLBuilder;
      39: invokevirtual #84                 // Method cool/scx/sql/SQLBuilder.GetSQL:()Ljava/lang/String;
      42: astore_2
      43: aload_2
      44: aload_1
      45: invokevirtual #179                // Method cool/scx/sql/base/Query.where:()Lcool/scx/sql/where/Where;
      48: invokevirtual #213                // Method cool/scx/sql/where/Where.getWhereParams:()[Ljava/lang/Object;
      51: invokestatic  #107                // InterfaceMethod cool/scx/sql/SQL.ofPlaceholder:(Ljava/lang/String;[Ljava/lang/Object;)Lcool/scx/sql/SQL;
      54: areturn

  public final long _update(Entity, cool.scx.sql.base.Query, cool.scx.sql.base.UpdateFilter);
    Code:
       0: aload_0
       1: getfield      #17                 // Field sqlRunner:Lcool/scx/sql/SQLRunner;
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokevirtual #263                // Method _buildUpdateSQL:(Ljava/lang/Object;Lcool/scx/sql/base/Query;Lcool/scx/sql/base/UpdateFilter;)Lcool/scx/sql/SQL;
      11: invokevirtual #46                 // Method cool/scx/sql/SQLRunner.update:(Lcool/scx/sql/SQL;)Lcool/scx/sql/UpdateResult;
      14: invokevirtual #267                // Method cool/scx/sql/UpdateResult.affectedItemsCount:()J
      17: lreturn

  private cool.scx.sql.SQL _buildUpdateSQL(Entity, cool.scx.sql.base.Query, cool.scx.sql.base.UpdateFilter);
    Code:
       0: aload_2
       1: invokevirtual #179                // Method cool/scx/sql/base/Query.where:()Lcool/scx/sql/where/Where;
       4: invokevirtual #270                // Method cool/scx/sql/where/Where.isEmpty:()Z
       7: ifeq          21
      10: new           #273                // class java/lang/IllegalArgumentException
      13: dup
      14: ldc_w         #275                // String 更新数据时 必须指定 删除条件 或 自定义的 where 语句 !!!
      17: invokespecial #277                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_3
      22: aload_1
      23: aload_0
      24: getfield      #7                  // Field tableInfo:Lcool/scx/sql/TableInfo;
      27: invokeinterface #58,  1           // InterfaceMethod cool/scx/sql/TableInfo.columnInfos:()[Lcool/scx/sql/ColumnInfo;
      32: invokevirtual #64                 // Method cool/scx/sql/base/UpdateFilter.filter:(Ljava/lang/Object;[Lcool/scx/sql/ColumnInfo;)[Lcool/scx/sql/ColumnInfo;
      35: astore        4
      37: aload_0
      38: getfield      #7                  // Field tableInfo:Lcool/scx/sql/TableInfo;
      41: invokeinterface #70,  1           // InterfaceMethod cool/scx/sql/TableInfo.tableName:()Ljava/lang/String;
      46: invokestatic  #280                // Method cool/scx/sql/SQLBuilder.Update:(Ljava/lang/String;)Lcool/scx/sql/SQLBuilder;
      49: aload         4
      51: invokevirtual #283                // Method cool/scx/sql/SQLBuilder.Set:([Lcool/scx/sql/ColumnInfo;)Lcool/scx/sql/SQLBuilder;
      54: aload_2
      55: invokevirtual #179                // Method cool/scx/sql/base/Query.where:()Lcool/scx/sql/where/Where;
      58: invokevirtual #185                // Method cool/scx/sql/SQLBuilder.Where:(Lcool/scx/sql/where/Where;)Lcool/scx/sql/SQLBuilder;
      61: invokevirtual #84                 // Method cool/scx/sql/SQLBuilder.GetSQL:()Ljava/lang/String;
      64: astore        5
      66: aload         4
      68: invokestatic  #87                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      71: aload_1
      72: invokedynamic #286,  0            // InvokeDynamic #5:apply:(Ljava/lang/Object;)Ljava/util/function/Function;
      77: invokeinterface #97,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      82: invokestatic  #287                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      85: invokeinterface #293,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      90: checkcast     #167                // class java/util/List
      93: astore        6
      95: aload         6
      97: aload_2
      98: invokevirtual #179                // Method cool/scx/sql/base/Query.where:()Lcool/scx/sql/where/Where;
     101: invokevirtual #213                // Method cool/scx/sql/where/Where.getWhereParams:()[Ljava/lang/Object;
     104: invokestatic  #297                // InterfaceMethod java/util/List.of:([Ljava/lang/Object;)Ljava/util/List;
     107: invokeinterface #301,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     112: pop
     113: aload         5
     115: aload         6
     117: invokeinterface #305,  1          // InterfaceMethod java/util/List.toArray:()[Ljava/lang/Object;
     122: invokestatic  #107                // InterfaceMethod cool/scx/sql/SQL.ofPlaceholder:(Ljava/lang/String;[Ljava/lang/Object;)Lcool/scx/sql/SQL;
     125: areturn

  public final long _delete(cool.scx.sql.base.Query);
    Code:
       0: aload_0
       1: getfield      #17                 // Field sqlRunner:Lcool/scx/sql/SQLRunner;
       4: aload_0
       5: aload_1
       6: invokevirtual #306                // Method _buildDeleteSQL:(Lcool/scx/sql/base/Query;)Lcool/scx/sql/SQL;
       9: invokevirtual #46                 // Method cool/scx/sql/SQLRunner.update:(Lcool/scx/sql/SQL;)Lcool/scx/sql/UpdateResult;
      12: invokevirtual #267                // Method cool/scx/sql/UpdateResult.affectedItemsCount:()J
      15: lreturn

  private cool.scx.sql.SQL _buildDeleteSQL(cool.scx.sql.base.Query);
    Code:
       0: aload_1
       1: invokevirtual #179                // Method cool/scx/sql/base/Query.where:()Lcool/scx/sql/where/Where;
       4: invokevirtual #270                // Method cool/scx/sql/where/Where.isEmpty:()Z
       7: ifeq          21
      10: new           #273                // class java/lang/IllegalArgumentException
      13: dup
      14: ldc_w         #309                // String 删除数据时 必须指定 删除条件 或 自定义的 where 语句 !!!
      17: invokespecial #277                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #7                  // Field tableInfo:Lcool/scx/sql/TableInfo;
      25: invokeinterface #70,  1           // InterfaceMethod cool/scx/sql/TableInfo.tableName:()Ljava/lang/String;
      30: invokestatic  #311                // Method cool/scx/sql/SQLBuilder.Delete:(Ljava/lang/String;)Lcool/scx/sql/SQLBuilder;
      33: aload_1
      34: invokevirtual #179                // Method cool/scx/sql/base/Query.where:()Lcool/scx/sql/where/Where;
      37: invokevirtual #185                // Method cool/scx/sql/SQLBuilder.Where:(Lcool/scx/sql/where/Where;)Lcool/scx/sql/SQLBuilder;
      40: invokevirtual #84                 // Method cool/scx/sql/SQLBuilder.GetSQL:()Ljava/lang/String;
      43: astore_2
      44: aload_2
      45: aload_1
      46: invokevirtual #179                // Method cool/scx/sql/base/Query.where:()Lcool/scx/sql/where/Where;
      49: invokevirtual #213                // Method cool/scx/sql/where/Where.getWhereParams:()[Ljava/lang/Object;
      52: invokestatic  #107                // InterfaceMethod cool/scx/sql/SQL.ofPlaceholder:(Ljava/lang/String;[Ljava/lang/Object;)Lcool/scx/sql/SQL;
      55: areturn

  public final void _truncate();
    Code:
       0: aload_0
       1: getfield      #17                 // Field sqlRunner:Lcool/scx/sql/SQLRunner;
       4: aload_0
       5: getfield      #7                  // Field tableInfo:Lcool/scx/sql/TableInfo;
       8: invokeinterface #70,  1           // InterfaceMethod cool/scx/sql/TableInfo.tableName:()Ljava/lang/String;
      13: invokedynamic #314,  0            // InvokeDynamic #6:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      18: invokestatic  #315                // InterfaceMethod cool/scx/sql/SQL.ofNormal:(Ljava/lang/String;)Lcool/scx/sql/SQL;
      21: invokevirtual #319                // Method cool/scx/sql/SQLRunner.execute:(Lcool/scx/sql/SQL;)J
      24: pop2
      25: return

  public final cool.scx.sql.TableInfo _tableInfo();
    Code:
       0: aload_0
       1: getfield      #7                  // Field tableInfo:Lcool/scx/sql/TableInfo;
       4: areturn

  public final java.lang.Class<Entity> _entityClass();
    Code:
       0: aload_0
       1: getfield      #13                 // Field entityClass:Ljava/lang/Class;
       4: areturn

  public final cool.scx.sql.SQLRunner _sqlRunner();
    Code:
       0: aload_0
       1: getfield      #17                 // Field sqlRunner:Lcool/scx/sql/SQLRunner;
       4: areturn

  private static java.lang.Object lambda$_buildUpdateSQL$2(java.lang.Object, cool.scx.sql.ColumnInfo);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #146,  2          // InterfaceMethod cool/scx/sql/ColumnInfo.getFieldValue:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  private static java.lang.String[] lambda$_buildSelectSQLWithAlias$1(int);
    Code:
       0: iload_0
       1: anewarray     #259                // class java/lang/String
       4: areturn

  private static java.lang.Object lambda$_buildInsertSQL$0(java.lang.Object, cool.scx.sql.ColumnInfo);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #146,  2          // InterfaceMethod cool/scx/sql/ColumnInfo.getFieldValue:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn
}
