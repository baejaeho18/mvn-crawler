Compiled from "SQL.java"
public interface cool.scx.sql.SQL {
  public static cool.scx.sql.SQL ofNormal(java.lang.String);
    Code:
       0: new           #1                  // class cool/scx/sql/sql/NormalSQL
       3: dup
       4: aload_0
       5: invokespecial #3                  // Method cool/scx/sql/sql/NormalSQL."<init>":(Ljava/lang/String;)V
       8: areturn

  public static cool.scx.sql.SQL ofPlaceholder(java.lang.String, java.lang.Object...);
    Code:
       0: new           #7                  // class cool/scx/sql/sql/PlaceholderSQL
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #9                  // Method cool/scx/sql/sql/PlaceholderSQL."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
       9: areturn

  public static cool.scx.sql.SQL ofPlaceholder(java.lang.String, java.util.List<java.lang.Object[]>);
    Code:
       0: new           #7                  // class cool/scx/sql/sql/PlaceholderSQL
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #12                 // Method cool/scx/sql/sql/PlaceholderSQL."<init>":(Ljava/lang/String;Ljava/util/List;)V
       9: areturn

  public static cool.scx.sql.SQL ofNamedParameter(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #15                 // class cool/scx/sql/sql/NamedParameterSQL
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #17                 // Method cool/scx/sql/sql/NamedParameterSQL."<init>":(Ljava/lang/String;Ljava/util/Map;)V
       9: areturn

  public static cool.scx.sql.SQL ofNamedParameter(java.lang.String, java.util.List<java.util.Map<java.lang.String, java.lang.Object>>);
    Code:
       0: new           #15                 // class cool/scx/sql/sql/NamedParameterSQL
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #20                 // Method cool/scx/sql/sql/NamedParameterSQL."<init>":(Ljava/lang/String;Ljava/util/List;)V
       9: areturn

  public abstract java.lang.String sql();

  public abstract java.sql.PreparedStatement getPreparedStatement(java.sql.Connection) throws java.sql.SQLException;

  public abstract java.lang.Object[] params();
}
