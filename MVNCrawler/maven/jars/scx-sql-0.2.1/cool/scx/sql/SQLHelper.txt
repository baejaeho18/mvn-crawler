Compiled from "SQLHelper.java"
public final class cool.scx.sql.SQLHelper {
  private static final org.slf4j.Logger logger;

  private static final java.util.Map<java.lang.Class<?>, com.mysql.cj.MysqlType> DEFAULT_MYSQL_TYPES;

  private static final com.fasterxml.jackson.databind.ObjectMapper objectMapper;

  public cool.scx.sql.SQLHelper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  private static java.util.Map<java.lang.Class<?>, com.mysql.cj.MysqlType> initDefaultMySQLTypes();
    Code:
       0: new           #7                  // class java/util/HashMap
       3: dup
       4: invokespecial #9                  // Method java/util/HashMap."<init>":()V
       7: astore_0
       8: aload_0
       9: getstatic     #10                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      12: getstatic     #16                 // Field com/mysql/cj/MysqlType.TINYINT:Lcom/mysql/cj/MysqlType;
      15: invokevirtual #22                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_0
      20: ldc           #26                 // class "[Ljava/lang/Byte;"
      22: getstatic     #28                 // Field com/mysql/cj/MysqlType.BINARY:Lcom/mysql/cj/MysqlType;
      25: invokevirtual #22                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: aload_0
      30: getstatic     #31                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
      33: getstatic     #34                 // Field com/mysql/cj/MysqlType.DOUBLE:Lcom/mysql/cj/MysqlType;
      36: invokevirtual #22                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: aload_0
      41: getstatic     #37                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
      44: getstatic     #40                 // Field com/mysql/cj/MysqlType.FLOAT:Lcom/mysql/cj/MysqlType;
      47: invokevirtual #22                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: aload_0
      52: getstatic     #43                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      55: getstatic     #46                 // Field com/mysql/cj/MysqlType.INT:Lcom/mysql/cj/MysqlType;
      58: invokevirtual #22                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: aload_0
      63: getstatic     #49                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      66: getstatic     #52                 // Field com/mysql/cj/MysqlType.BIGINT:Lcom/mysql/cj/MysqlType;
      69: invokevirtual #22                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: pop
      73: aload_0
      74: getstatic     #55                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      77: getstatic     #58                 // Field com/mysql/cj/MysqlType.SMALLINT:Lcom/mysql/cj/MysqlType;
      80: invokevirtual #22                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: aload_0
      85: getstatic     #61                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      88: getstatic     #64                 // Field com/mysql/cj/MysqlType.BOOLEAN:Lcom/mysql/cj/MysqlType;
      91: invokevirtual #22                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      94: pop
      95: ldc           #67                 // class com/mysql/cj/NativeQueryBindings
      97: ldc           #69                 // String DEFAULT_MYSQL_TYPES
      99: invokevirtual #71                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
     102: astore_1
     103: aload_1
     104: iconst_1
     105: invokevirtual #77                 // Method java/lang/reflect/Field.setAccessible:(Z)V
     108: aload_1
     109: aconst_null
     110: invokevirtual #83                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
     113: checkcast     #87                 // class java/util/Map
     116: astore_2
     117: aload_0
     118: aload_2
     119: invokevirtual #89                 // Method java/util/HashMap.putAll:(Ljava/util/Map;)V
     122: goto          135
     125: astore_1
     126: new           #97                 // class java/lang/RuntimeException
     129: dup
     130: aload_1
     131: invokespecial #99                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     134: athrow
     135: aload_0
     136: areturn
    Exception table:
       from    to  target type
          95   122   125   Class java/lang/NoSuchFieldException
          95   122   125   Class java/lang/IllegalAccessException

  public static java.lang.String getMySQLTypeCreateName(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokestatic  #102                // Method getMySQLType:(Ljava/lang/Class;)Lcom/mysql/cj/MysqlType;
       4: astore_1
       5: aload_1
       6: ifnonnull     27
       9: aload_0
      10: invokevirtual #108                // Method java/lang/Class.isEnum:()Z
      13: ifeq          23
      16: getstatic     #112                // Field com/mysql/cj/MysqlType.VARCHAR:Lcom/mysql/cj/MysqlType;
      19: astore_1
      20: goto          27
      23: getstatic     #115                // Field com/mysql/cj/MysqlType.JSON:Lcom/mysql/cj/MysqlType;
      26: astore_1
      27: aload_1
      28: getstatic     #112                // Field com/mysql/cj/MysqlType.VARCHAR:Lcom/mysql/cj/MysqlType;
      31: if_acmpne     46
      34: aload_1
      35: invokevirtual #118                // Method com/mysql/cj/MysqlType.getName:()Ljava/lang/String;
      38: invokedynamic #122,  0            // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      43: goto          50
      46: aload_1
      47: invokevirtual #118                // Method com/mysql/cj/MysqlType.getName:()Ljava/lang/String;
      50: areturn

  public static com.mysql.cj.MysqlType getMySQLType(java.lang.Class<?>);
    Code:
       0: getstatic     #126                // Field DEFAULT_MYSQL_TYPES:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #129,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #17                 // class com/mysql/cj/MysqlType
      12: astore_1
      13: aload_1
      14: ifnonnull     62
      17: getstatic     #126                // Field DEFAULT_MYSQL_TYPES:Ljava/util/Map;
      20: invokeinterface #130,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      25: invokeinterface #134,  1          // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      30: aload_0
      31: invokedynamic #140,  0            // InvokeDynamic #1:test:(Ljava/lang/Class;)Ljava/util/function/Predicate;
      36: invokeinterface #144,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      41: invokeinterface #150,  1          // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      46: invokedynamic #154,  0            // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      51: invokevirtual #158                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      54: aconst_null
      55: invokevirtual #164                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      58: checkcast     #17                 // class com/mysql/cj/MysqlType
      61: areturn
      62: aload_1
      63: areturn

  public static java.lang.String convertToStringOrNull(java.lang.Object);
    Code:
       0: getstatic     #167                // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
       3: aload_0
       4: ldc           #171                // class java/lang/String
       6: invokevirtual #173                // Method com/fasterxml/jackson/databind/ObjectMapper.convertValue:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
       9: checkcast     #171                // class java/lang/String
      12: areturn
      13: astore_1
      14: getstatic     #181                // Field logger:Lorg/slf4j/Logger;
      17: ldc           #185                // String 序列化时发生错误 , 已使用 NULL !!!
      19: aload_1
      20: invokeinterface #187,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      25: aconst_null
      26: areturn
    Exception table:
       from    to  target type
           0    12    13   Class java/lang/Exception

  public static java.lang.String convertToJsonOrNull(java.lang.Object);
    Code:
       0: getstatic     #167                // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
       3: aload_0
       4: invokevirtual #193                // Method com/fasterxml/jackson/databind/ObjectMapper.writeValueAsString:(Ljava/lang/Object;)Ljava/lang/String;
       7: areturn
       8: astore_1
       9: getstatic     #181                // Field logger:Lorg/slf4j/Logger;
      12: ldc           #185                // String 序列化时发生错误 , 已使用 NULL !!!
      14: aload_1
      15: invokeinterface #187,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      20: aconst_null
      21: areturn
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/Exception

  public static java.lang.Object readFromValueOrNull(java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_0
       1: ifnull        25
       4: getstatic     #167                // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
       7: aload_0
       8: aload_1
       9: invokevirtual #173                // Method com/fasterxml/jackson/databind/ObjectMapper.convertValue:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      12: areturn
      13: astore_2
      14: getstatic     #181                // Field logger:Lorg/slf4j/Logger;
      17: ldc           #197                // String 反序列化时发生错误 , 已使用 NULL !!!
      19: aload_2
      20: invokeinterface #187,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      25: aconst_null
      26: areturn
    Exception table:
       from    to  target type
           4    12    13   Class java/lang/Exception

  public static java.lang.Object readFromJsonValueOrNull(java.lang.String, java.lang.reflect.Type);
    Code:
       0: aload_0
       1: ifnull        28
       4: getstatic     #167                // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
       7: aload_0
       8: aload_1
       9: invokestatic  #199                // Method cool/scx/util/ObjectUtils.constructType:(Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JavaType;
      12: invokevirtual #205                // Method com/fasterxml/jackson/databind/ObjectMapper.readValue:(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JavaType;)Ljava/lang/Object;
      15: areturn
      16: astore_2
      17: getstatic     #181                // Field logger:Lorg/slf4j/Logger;
      20: ldc           #197                // String 反序列化时发生错误 , 已使用 NULL !!!
      22: aload_2
      23: invokeinterface #187,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      28: aconst_null
      29: areturn
    Exception table:
       from    to  target type
           4    15    16   Class java/lang/Exception

  public static java.lang.String getColumnName(java.lang.String, boolean, boolean);
    Code:
       0: iload_1
       1: ifeq          90
       4: aload_0
       5: invokestatic  #209                // Method splitIntoColumnNameAndFieldPath:(Ljava/lang/String;)Lcool/scx/tuple/Tuple2;
       8: astore_3
       9: aload_3
      10: invokevirtual #213                // Method cool/scx/tuple/Tuple2.value0:()Ljava/lang/Object;
      13: checkcast     #171                // class java/lang/String
      16: invokestatic  #219                // Method cool/scx/util/StringUtils.notBlank:(Ljava/lang/String;)Z
      19: ifeq          76
      22: aload_3
      23: invokevirtual #225                // Method cool/scx/tuple/Tuple2.value1:()Ljava/lang/Object;
      26: checkcast     #171                // class java/lang/String
      29: invokestatic  #219                // Method cool/scx/util/StringUtils.notBlank:(Ljava/lang/String;)Z
      32: ifeq          76
      35: iload_2
      36: ifeq          49
      39: aload_3
      40: invokevirtual #213                // Method cool/scx/tuple/Tuple2.value0:()Ljava/lang/Object;
      43: checkcast     #171                // class java/lang/String
      46: goto          59
      49: aload_3
      50: invokevirtual #213                // Method cool/scx/tuple/Tuple2.value0:()Ljava/lang/Object;
      53: checkcast     #171                // class java/lang/String
      56: invokestatic  #228                // Method cool/scx/util/CaseUtils.toSnake:(Ljava/lang/String;)Ljava/lang/String;
      59: astore        4
      61: aload         4
      63: aload_3
      64: invokevirtual #225                // Method cool/scx/tuple/Tuple2.value1:()Ljava/lang/Object;
      67: checkcast     #171                // class java/lang/String
      70: invokedynamic #233,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      75: areturn
      76: new           #236                // class java/lang/IllegalArgumentException
      79: dup
      80: aload_0
      81: invokedynamic #238,  0            // InvokeDynamic #4:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      86: invokespecial #239                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      89: athrow
      90: iload_2
      91: ifeq          98
      94: aload_0
      95: goto          102
      98: aload_0
      99: invokestatic  #228                // Method cool/scx/util/CaseUtils.toSnake:(Ljava/lang/String;)Ljava/lang/String;
     102: areturn

  public static cool.scx.tuple.Tuple2<java.lang.String, java.lang.String> splitIntoColumnNameAndFieldPath(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #242                // Method java/lang/String.toCharArray:()[C
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: aload_1
      12: arraylength
      13: if_icmpge     47
      16: aload_1
      17: iload_3
      18: caload
      19: istore        4
      21: iload         4
      23: bipush        46
      25: if_icmpeq     35
      28: iload         4
      30: bipush        91
      32: if_icmpne     40
      35: iload_3
      36: istore_2
      37: goto          47
      40: iload_3
      41: iconst_1
      42: iadd
      43: istore_3
      44: goto          10
      47: aload_0
      48: iconst_0
      49: iload_2
      50: invokevirtual #246                // Method java/lang/String.substring:(II)Ljava/lang/String;
      53: astore_3
      54: aload_0
      55: iload_2
      56: invokevirtual #250                // Method java/lang/String.substring:(I)Ljava/lang/String;
      59: astore        4
      61: aload_3
      62: aload         4
      64: invokestatic  #253                // Method cool/scx/tuple/Tuples.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcool/scx/tuple/Tuple2;
      67: areturn

  public static java.lang.String getFinalSQL(java.sql.PreparedStatement);
    Code:
       0: aload_0
       1: ldc_w         #259                // class com/mysql/cj/jdbc/ClientPreparedStatement
       4: invokeinterface #261,  2          // InterfaceMethod java/sql/PreparedStatement.unwrap:(Ljava/lang/Class;)Ljava/lang/Object;
       9: checkcast     #259                // class com/mysql/cj/jdbc/ClientPreparedStatement
      12: astore_1
      13: goto          23
      16: astore_2
      17: aload_2
      18: invokevirtual #269                // Method java/sql/SQLException.printStackTrace:()V
      21: aconst_null
      22: areturn
      23: aload_1
      24: invokevirtual #272                // Method com/mysql/cj/jdbc/ClientPreparedStatement.getQuery:()Lcom/mysql/cj/Query;
      27: checkcast     #276                // class com/mysql/cj/PreparedQuery
      30: astore_2
      31: aload_2
      32: invokeinterface #278,  1          // InterfaceMethod com/mysql/cj/PreparedQuery.asSql:()Ljava/lang/String;
      37: astore_3
      38: aload_2
      39: invokeinterface #281,  1          // InterfaceMethod com/mysql/cj/PreparedQuery.getBatchedArgs:()Ljava/util/List;
      44: ifnonnull     51
      47: iconst_0
      48: goto          62
      51: aload_2
      52: invokeinterface #281,  1          // InterfaceMethod com/mysql/cj/PreparedQuery.getBatchedArgs:()Ljava/util/List;
      57: invokeinterface #285,  1          // InterfaceMethod java/util/List.size:()I
      62: istore        4
      64: iload         4
      66: iconst_1
      67: if_icmple     83
      70: aload_3
      71: iload         4
      73: iconst_1
      74: isub
      75: invokedynamic #291,  0            // InvokeDynamic #5:makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;
      80: goto          84
      83: aload_3
      84: areturn
    Exception table:
       from    to  target type
           0    13    16   Class java/sql/SQLException

  public static java.sql.PreparedStatement logSQL(java.sql.PreparedStatement);
    Code:
       0: getstatic     #181                // Field logger:Lorg/slf4j/Logger;
       3: invokeinterface #294,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          23
      11: getstatic     #181                // Field logger:Lorg/slf4j/Logger;
      14: aload_0
      15: invokestatic  #297                // Method getFinalSQL:(Ljava/sql/PreparedStatement;)Ljava/lang/String;
      18: invokeinterface #301,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      23: aload_0
      24: areturn

  public static void fillPreparedStatement(java.sql.PreparedStatement, java.lang.Object[]) throws java.sql.SQLException;
    Code:
       0: iconst_1
       1: istore_2
       2: aload_1
       3: astore_3
       4: aload_3
       5: arraylength
       6: istore        4
       8: iconst_0
       9: istore        5
      11: iload         5
      13: iload         4
      15: if_icmpge     118
      18: aload_3
      19: iload         5
      21: aaload
      22: astore        6
      24: aload         6
      26: ifnull        100
      29: aload         6
      31: invokevirtual #304                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      34: astore        7
      36: aload         7
      38: invokestatic  #102                // Method getMySQLType:(Ljava/lang/Class;)Lcom/mysql/cj/MysqlType;
      41: astore        8
      43: aload         8
      45: ifnull        62
      48: aload_0
      49: iload_2
      50: aload         6
      52: aload         8
      54: invokeinterface #308,  4          // InterfaceMethod java/sql/PreparedStatement.setObject:(ILjava/lang/Object;Ljava/sql/SQLType;)V
      59: goto          97
      62: aload         7
      64: invokevirtual #108                // Method java/lang/Class.isEnum:()Z
      67: ifeq          85
      70: aload_0
      71: iload_2
      72: aload         6
      74: invokestatic  #312                // Method convertToStringOrNull:(Ljava/lang/Object;)Ljava/lang/String;
      77: invokeinterface #315,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      82: goto          97
      85: aload_0
      86: iload_2
      87: aload         6
      89: invokestatic  #319                // Method convertToJsonOrNull:(Ljava/lang/Object;)Ljava/lang/String;
      92: invokeinterface #315,  3          // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      97: goto          108
     100: aload_0
     101: iload_2
     102: iconst_0
     103: invokeinterface #324,  3          // InterfaceMethod java/sql/PreparedStatement.setNull:(II)V
     108: iload_2
     109: iconst_1
     110: iadd
     111: istore_2
     112: iinc          5, 1
     115: goto          11
     118: return

  private static boolean lambda$getMySQLType$0(java.lang.Class, java.util.Map$Entry);
    Code:
       0: aload_1
       1: invokeinterface #328,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
       6: checkcast     #72                 // class java/lang/Class
       9: aload_0
      10: invokevirtual #333                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      13: ireturn

  static {};
    Code:
       0: getstatic     #337                // Field cool/scx/sql/SQLRunner.logger:Lorg/slf4j/Logger;
       3: putstatic     #181                // Field logger:Lorg/slf4j/Logger;
       6: invokestatic  #340                // Method initDefaultMySQLTypes:()Ljava/util/Map;
       9: putstatic     #126                // Field DEFAULT_MYSQL_TYPES:Ljava/util/Map;
      12: iconst_1
      13: anewarray     #344                // class cool/scx/util/ObjectUtils$Option
      16: dup
      17: iconst_0
      18: getstatic     #346                // Field cool/scx/util/ObjectUtils$Option.IGNORE_JSON_IGNORE:Lcool/scx/util/ObjectUtils$Option;
      21: aastore
      22: invokestatic  #350                // Method cool/scx/util/ObjectUtils.jsonMapper:([Lcool/scx/util/ObjectUtils$Option;)Lcom/fasterxml/jackson/databind/json/JsonMapper;
      25: putstatic     #167                // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      28: return
}
