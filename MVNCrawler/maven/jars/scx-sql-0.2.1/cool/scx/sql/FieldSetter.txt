Compiled from "FieldSetter.java"
public abstract class cool.scx.sql.FieldSetter {
  protected final java.lang.reflect.Field field;

  protected final java.lang.reflect.Type fieldGenericType;

  public cool.scx.sql.FieldSetter(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field field:Ljava/lang/reflect/Field;
       9: aload_0
      10: aload_1
      11: invokevirtual #13                 // Method java/lang/reflect/Field.getGenericType:()Ljava/lang/reflect/Type;
      14: putfield      #19                 // Field fieldGenericType:Ljava/lang/reflect/Type;
      17: aload_0
      18: getfield      #7                  // Field field:Ljava/lang/reflect/Field;
      21: iconst_1
      22: invokevirtual #23                 // Method java/lang/reflect/Field.setAccessible:(Z)V
      25: return

  public static int[] getIndexInfo(java.sql.ResultSetMetaData, cool.scx.sql.FieldSetter[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokeinterface #27,  1           // InterfaceMethod java/sql/ResultSetMetaData.getColumnCount:()I
       6: istore_2
       7: new           #33                 // class java/util/HashMap
      10: dup
      11: invokespecial #35                 // Method java/util/HashMap."<init>":()V
      14: astore_3
      15: iconst_1
      16: istore        4
      18: iload         4
      20: iload_2
      21: if_icmpgt     51
      24: aload_3
      25: aload_0
      26: iload         4
      28: invokeinterface #36,  2           // InterfaceMethod java/sql/ResultSetMetaData.getColumnLabel:(I)Ljava/lang/String;
      33: iload         4
      35: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: invokevirtual #46                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: iload         4
      44: iconst_1
      45: iadd
      46: istore        4
      48: goto          18
      51: aload_1
      52: arraylength
      53: newarray       int
      55: astore        4
      57: iconst_0
      58: istore        5
      60: iload         5
      62: aload_1
      63: arraylength
      64: if_icmpge     102
      67: aload         4
      69: iload         5
      71: aload_3
      72: aload_1
      73: iload         5
      75: aaload
      76: invokevirtual #50                 // Method getName:()Ljava/lang/String;
      79: iconst_m1
      80: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      83: invokevirtual #54                 // Method java/util/HashMap.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      86: checkcast     #41                 // class java/lang/Integer
      89: invokevirtual #57                 // Method java/lang/Integer.intValue:()I
      92: iastore
      93: iload         5
      95: iconst_1
      96: iadd
      97: istore        5
      99: goto          60
     102: aload         4
     104: areturn

  public static java.util.Map<java.lang.String, cool.scx.sql.FieldSetter> ofMap(java.lang.reflect.Field[]);
    Code:
       0: new           #33                 // class java/util/HashMap
       3: dup
       4: invokespecial #35                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: astore_2
      10: aload_2
      11: arraylength
      12: istore_3
      13: iconst_0
      14: istore        4
      16: iload         4
      18: iload_3
      19: if_icmpge     49
      22: aload_2
      23: iload         4
      25: aaload
      26: astore        5
      28: aload_1
      29: aload         5
      31: invokevirtual #60                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      34: aload         5
      36: invokestatic  #61                 // Method of:(Ljava/lang/reflect/Field;)Lcool/scx/sql/FieldSetter;
      39: invokevirtual #46                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: iinc          4, 1
      46: goto          16
      49: aload_1
      50: areturn

  public static cool.scx.sql.FieldSetter[] ofArray(java.lang.reflect.Field[]);
    Code:
       0: aload_0
       1: arraylength
       2: anewarray     #8                  // class cool/scx/sql/FieldSetter
       5: astore_1
       6: iconst_0
       7: istore_2
       8: iload_2
       9: aload_0
      10: arraylength
      11: if_icmpge     30
      14: aload_1
      15: iload_2
      16: aload_0
      17: iload_2
      18: aaload
      19: invokestatic  #61                 // Method of:(Ljava/lang/reflect/Field;)Lcool/scx/sql/FieldSetter;
      22: aastore
      23: iload_2
      24: iconst_1
      25: iadd
      26: istore_2
      27: goto          8
      30: aload_1
      31: areturn

  public static cool.scx.sql.FieldSetter of(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
       4: astore_1
       5: aload_1
       6: invokestatic  #69                 // Method cool/scx/sql/SQLHelper.getMySQLType:(Ljava/lang/Class;)Lcom/mysql/cj/MysqlType;
       9: ifnull        21
      12: new           #75                 // class cool/scx/sql/field_setter/NormalFieldSetter
      15: dup
      16: aload_0
      17: invokespecial #77                 // Method cool/scx/sql/field_setter/NormalFieldSetter."<init>":(Ljava/lang/reflect/Field;)V
      20: areturn
      21: aload_1
      22: invokevirtual #80                 // Method java/lang/Class.isEnum:()Z
      25: ifeq          37
      28: new           #86                 // class cool/scx/sql/field_setter/EnumFieldSetter
      31: dup
      32: aload_0
      33: invokespecial #88                 // Method cool/scx/sql/field_setter/EnumFieldSetter."<init>":(Ljava/lang/reflect/Field;)V
      36: areturn
      37: new           #89                 // class cool/scx/sql/field_setter/JsonFieldSetter
      40: dup
      41: aload_0
      42: invokespecial #91                 // Method cool/scx/sql/field_setter/JsonFieldSetter."<init>":(Ljava/lang/reflect/Field;)V
      45: areturn

  public void set(java.lang.Object, java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_2
       2: iload_3
       3: invokevirtual #92                 // Method getObject:(Ljava/sql/ResultSet;I)Ljava/lang/Object;
       6: astore        4
       8: aload         4
      10: ifnull        33
      13: aload_0
      14: getfield      #7                  // Field field:Ljava/lang/reflect/Field;
      17: aload_1
      18: aload         4
      20: invokevirtual #96                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      23: goto          33
      26: astore        5
      28: aload         5
      30: invokevirtual #102                // Method java/lang/IllegalAccessException.printStackTrace:()V
      33: return
    Exception table:
       from    to  target type
          13    23    26   Class java/lang/IllegalAccessException

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field field:Ljava/lang/reflect/Field;
       4: invokevirtual #60                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
       7: areturn

  public abstract java.lang.Object getObject(java.sql.ResultSet, int) throws java.sql.SQLException;
}
