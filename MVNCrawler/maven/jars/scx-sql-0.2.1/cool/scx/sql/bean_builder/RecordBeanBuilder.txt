Compiled from "RecordBeanBuilder.java"
public final class cool.scx.sql.bean_builder.RecordBeanBuilder<T> implements cool.scx.sql.BeanBuilder<T> {
  private final java.lang.reflect.Constructor<T> constructor;

  private final cool.scx.sql.FieldSetter[] fieldSetters;

  public cool.scx.sql.bean_builder.RecordBeanBuilder(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #7                  // Method findConstructor:(Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
       9: putfield      #13                 // Field constructor:Ljava/lang/reflect/Constructor;
      12: aload_0
      13: aload_0
      14: getfield      #13                 // Field constructor:Ljava/lang/reflect/Constructor;
      17: invokevirtual #17                 // Method java/lang/reflect/Constructor.getParameters:()[Ljava/lang/reflect/Parameter;
      20: aload_1
      21: invokevirtual #23                 // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
      24: invokestatic  #29                 // Method initFieldSetters:([Ljava/lang/reflect/Parameter;[Ljava/lang/reflect/Field;)[Lcool/scx/sql/FieldSetter;
      27: putfield      #33                 // Field fieldSetters:[Lcool/scx/sql/FieldSetter;
      30: return

  private static <T> java.lang.reflect.Constructor<T> findConstructor(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method java/lang/Class.getDeclaredConstructors:()[Ljava/lang/reflect/Constructor;
       4: astore_1
       5: aload_1
       6: iconst_0
       7: aaload
       8: astore_2
       9: aload_1
      10: astore_3
      11: aload_3
      12: arraylength
      13: istore        4
      15: iconst_0
      16: istore        5
      18: iload         5
      20: iload         4
      22: if_icmpge     52
      25: aload_3
      26: iload         5
      28: aaload
      29: astore        6
      31: aload_2
      32: invokevirtual #41                 // Method java/lang/reflect/Constructor.getParameterCount:()I
      35: aload         6
      37: invokevirtual #41                 // Method java/lang/reflect/Constructor.getParameterCount:()I
      40: if_icmpge     46
      43: aload         6
      45: astore_2
      46: iinc          5, 1
      49: goto          18
      52: aload_2
      53: iconst_1
      54: invokevirtual #45                 // Method java/lang/reflect/Constructor.setAccessible:(Z)V
      57: aload_2
      58: areturn

  private static cool.scx.sql.FieldSetter[] initFieldSetters(java.lang.reflect.Parameter[], java.lang.reflect.Field[]);
    Code:
       0: aload_1
       1: invokestatic  #49                 // Method cool/scx/sql/FieldSetter.ofMap:([Ljava/lang/reflect/Field;)Ljava/util/Map;
       4: astore_2
       5: aload_0
       6: arraylength
       7: anewarray     #50                 // class cool/scx/sql/FieldSetter
      10: astore_3
      11: iconst_0
      12: istore        4
      14: iload         4
      16: aload_0
      17: arraylength
      18: if_icmpge     50
      21: aload_3
      22: iload         4
      24: aload_2
      25: aload_0
      26: iload         4
      28: aaload
      29: invokevirtual #55                 // Method java/lang/reflect/Parameter.getName:()Ljava/lang/String;
      32: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #50                 // class cool/scx/sql/FieldSetter
      40: aastore
      41: iload         4
      43: iconst_1
      44: iadd
      45: istore        4
      47: goto          14
      50: aload_3
      51: areturn

  public T createBean(java.sql.ResultSet, int[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fieldSetters:[Lcool/scx/sql/FieldSetter;
       4: arraylength
       5: anewarray     #2                  // class java/lang/Object
       8: astore_3
       9: iconst_0
      10: istore        4
      12: iload         4
      14: aload_0
      15: getfield      #33                 // Field fieldSetters:[Lcool/scx/sql/FieldSetter;
      18: arraylength
      19: if_icmpge     58
      22: aload_2
      23: iload         4
      25: iaload
      26: iconst_m1
      27: if_icmpeq     49
      30: aload_3
      31: iload         4
      33: aload_0
      34: getfield      #33                 // Field fieldSetters:[Lcool/scx/sql/FieldSetter;
      37: iload         4
      39: aaload
      40: aload_1
      41: aload_2
      42: iload         4
      44: iaload
      45: invokevirtual #67                 // Method cool/scx/sql/FieldSetter.getObject:(Ljava/sql/ResultSet;I)Ljava/lang/Object;
      48: aastore
      49: iload         4
      51: iconst_1
      52: iadd
      53: istore        4
      55: goto          12
      58: aload_0
      59: aload_3
      60: invokevirtual #71                 // Method newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      63: areturn

  public cool.scx.sql.FieldSetter[] fieldSetters();
    Code:
       0: aload_0
       1: getfield      #33                 // Field fieldSetters:[Lcool/scx/sql/FieldSetter;
       4: areturn

  private T newInstance(java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #13                 // Field constructor:Ljava/lang/reflect/Constructor;
       4: aload_1
       5: invokevirtual #75                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn
       9: astore_2
      10: new           #82                 // class java/lang/RuntimeException
      13: dup
      14: aload_2
      15: invokespecial #84                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      18: athrow
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/InstantiationException
           0     8     9   Class java/lang/reflect/InvocationTargetException
           0     8     9   Class java/lang/IllegalAccessException
}
